[
  {
    "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
    "fixCommitSHA1": "d4468b05034b3c4166195394e88eed6633bec842",
    "fixCommitParentSHA1": "1c4a7b96ac6f2d3466702fe92faaf73a82c82742",
    "bugFilePath": "core-common/src/main/java/org/glassfish/jersey/internal/Errors.java",
    "fixPatch": "diff --git a/core-common/src/main/java/org/glassfish/jersey/internal/Errors.java b/core-common/src/main/java/org/glassfish/jersey/internal/Errors.java\nindex 6e4be4b..d73284b 100644\n--- a/core-common/src/main/java/org/glassfish/jersey/internal/Errors.java\n+++ b/core-common/src/main/java/org/glassfish/jersey/internal/Errors.java\n@@ -1,7 +1,7 @@\n /*\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.\n  *\n- * Copyright (c) 2012-2015 Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012-2016 Oracle and/or its affiliates. All rights reserved.\n  *\n  * The contents of this file are subject to the terms of either the GNU\n  * General Public License Version 2 only (\"GPL\") or the Common Development\n@@ -178,7 +178,7 @@\n                         warnings.append(LocalizationMessages.WARNING_MSG(error.getMessage())).append('\\n');\n                         break;\n                     case HINT:\n-                        warnings.append(LocalizationMessages.HINT_MSG(error.getMessage())).append('\\n');\n+                        hints.append(LocalizationMessages.HINT_MSG(error.getMessage())).append('\\n');\n                         break;\n                 }\n             }\n",
    "projectName": "jersey.jersey",
    "bugLineNum": 181,
    "bugNodeStartChar": 7205,
    "bugNodeLength": 66,
    "fixLineNum": 181,
    "fixNodeStartChar": 7205,
    "fixNodeLength": 63,
    "sourceBeforeFix": "warnings.append(LocalizationMessages.HINT_MSG(error.getMessage()))",
    "sourceAfterFix": "hints.append(LocalizationMessages.HINT_MSG(error.getMessage()))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "d4468b05034b3c4166195394e88eed6633bec842",
    "fixCommitParentSHA1": "1c4a7b96ac6f2d3466702fe92faaf73a82c82742",
    "bugFilePath": "core-common/src/main/java/org/glassfish/jersey/internal/Errors.java",
    "fixPatch": "diff --git a/core-common/src/main/java/org/glassfish/jersey/internal/Errors.java b/core-common/src/main/java/org/glassfish/jersey/internal/Errors.java\nindex 6e4be4b..d73284b 100644\n--- a/core-common/src/main/java/org/glassfish/jersey/internal/Errors.java\n+++ b/core-common/src/main/java/org/glassfish/jersey/internal/Errors.java\n@@ -1,7 +1,7 @@\n /*\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.\n  *\n- * Copyright (c) 2012-2015 Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012-2016 Oracle and/or its affiliates. All rights reserved.\n  *\n  * The contents of this file are subject to the terms of either the GNU\n  * General Public License Version 2 only (\"GPL\") or the Common Development\n@@ -178,7 +178,7 @@\n                         warnings.append(LocalizationMessages.WARNING_MSG(error.getMessage())).append('\\n');\n                         break;\n                     case HINT:\n-                        warnings.append(LocalizationMessages.HINT_MSG(error.getMessage())).append('\\n');\n+                        hints.append(LocalizationMessages.HINT_MSG(error.getMessage())).append('\\n');\n                         break;\n                 }\n             }\n",
    "projectName": "jersey.jersey",
    "bugLineNum": 181,
    "bugNodeStartChar": 7205,
    "bugNodeLength": 66,
    "fixLineNum": 181,
    "fixNodeStartChar": 7205,
    "fixNodeLength": 63,
    "sourceBeforeFix": "warnings.append(LocalizationMessages.HINT_MSG(error.getMessage()))",
    "sourceAfterFix": "hints.append(LocalizationMessages.HINT_MSG(error.getMessage()))"
  },
  {
    "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
    "fixCommitSHA1": "a27a122e62bf3ab286d0b045515eecfbabe5b375",
    "fixCommitParentSHA1": "73935504ed92b755e01e49f833117c93f2a60c35",
    "bugFilePath": "core-common/src/main/java/org/glassfish/jersey/internal/Errors.java",
    "fixPatch": "diff --git a/core-common/src/main/java/org/glassfish/jersey/internal/Errors.java b/core-common/src/main/java/org/glassfish/jersey/internal/Errors.java\nindex 6e4be4b..92e0fb5 100644\n--- a/core-common/src/main/java/org/glassfish/jersey/internal/Errors.java\n+++ b/core-common/src/main/java/org/glassfish/jersey/internal/Errors.java\n@@ -178,7 +178,7 @@\n                         warnings.append(LocalizationMessages.WARNING_MSG(error.getMessage())).append('\\n');\n                         break;\n                     case HINT:\n-                        warnings.append(LocalizationMessages.HINT_MSG(error.getMessage())).append('\\n');\n+                        hints.append(LocalizationMessages.HINT_MSG(error.getMessage())).append('\\n');\n                         break;\n                 }\n             }\n",
    "projectName": "jersey.jersey",
    "bugLineNum": 181,
    "bugNodeStartChar": 7205,
    "bugNodeLength": 66,
    "fixLineNum": 181,
    "fixNodeStartChar": 7205,
    "fixNodeLength": 63,
    "sourceBeforeFix": "warnings.append(LocalizationMessages.HINT_MSG(error.getMessage()))",
    "sourceAfterFix": "hints.append(LocalizationMessages.HINT_MSG(error.getMessage()))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "a27a122e62bf3ab286d0b045515eecfbabe5b375",
    "fixCommitParentSHA1": "73935504ed92b755e01e49f833117c93f2a60c35",
    "bugFilePath": "core-common/src/main/java/org/glassfish/jersey/internal/Errors.java",
    "fixPatch": "diff --git a/core-common/src/main/java/org/glassfish/jersey/internal/Errors.java b/core-common/src/main/java/org/glassfish/jersey/internal/Errors.java\nindex 6e4be4b..92e0fb5 100644\n--- a/core-common/src/main/java/org/glassfish/jersey/internal/Errors.java\n+++ b/core-common/src/main/java/org/glassfish/jersey/internal/Errors.java\n@@ -178,7 +178,7 @@\n                         warnings.append(LocalizationMessages.WARNING_MSG(error.getMessage())).append('\\n');\n                         break;\n                     case HINT:\n-                        warnings.append(LocalizationMessages.HINT_MSG(error.getMessage())).append('\\n');\n+                        hints.append(LocalizationMessages.HINT_MSG(error.getMessage())).append('\\n');\n                         break;\n                 }\n             }\n",
    "projectName": "jersey.jersey",
    "bugLineNum": 181,
    "bugNodeStartChar": 7205,
    "bugNodeLength": 66,
    "fixLineNum": 181,
    "fixNodeStartChar": 7205,
    "fixNodeLength": 63,
    "sourceBeforeFix": "warnings.append(LocalizationMessages.HINT_MSG(error.getMessage()))",
    "sourceAfterFix": "hints.append(LocalizationMessages.HINT_MSG(error.getMessage()))"
  },
  {
    "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
    "fixCommitSHA1": "82b4e26900db7848de77ff9ed57682222c4fa517",
    "fixCommitParentSHA1": "7d506831795f49c1420f9c62478c6d977957d62a",
    "bugFilePath": "core-common/src/main/java/org/glassfish/jersey/internal/Errors.java",
    "fixPatch": "diff --git a/core-common/src/main/java/org/glassfish/jersey/internal/Errors.java b/core-common/src/main/java/org/glassfish/jersey/internal/Errors.java\nindex 6e4be4b..92e0fb5 100644\n--- a/core-common/src/main/java/org/glassfish/jersey/internal/Errors.java\n+++ b/core-common/src/main/java/org/glassfish/jersey/internal/Errors.java\n@@ -178,7 +178,7 @@\n                         warnings.append(LocalizationMessages.WARNING_MSG(error.getMessage())).append('\\n');\n                         break;\n                     case HINT:\n-                        warnings.append(LocalizationMessages.HINT_MSG(error.getMessage())).append('\\n');\n+                        hints.append(LocalizationMessages.HINT_MSG(error.getMessage())).append('\\n');\n                         break;\n                 }\n             }\n",
    "projectName": "jersey.jersey",
    "bugLineNum": 181,
    "bugNodeStartChar": 7205,
    "bugNodeLength": 66,
    "fixLineNum": 181,
    "fixNodeStartChar": 7205,
    "fixNodeLength": 63,
    "sourceBeforeFix": "warnings.append(LocalizationMessages.HINT_MSG(error.getMessage()))",
    "sourceAfterFix": "hints.append(LocalizationMessages.HINT_MSG(error.getMessage()))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "82b4e26900db7848de77ff9ed57682222c4fa517",
    "fixCommitParentSHA1": "7d506831795f49c1420f9c62478c6d977957d62a",
    "bugFilePath": "core-common/src/main/java/org/glassfish/jersey/internal/Errors.java",
    "fixPatch": "diff --git a/core-common/src/main/java/org/glassfish/jersey/internal/Errors.java b/core-common/src/main/java/org/glassfish/jersey/internal/Errors.java\nindex 6e4be4b..92e0fb5 100644\n--- a/core-common/src/main/java/org/glassfish/jersey/internal/Errors.java\n+++ b/core-common/src/main/java/org/glassfish/jersey/internal/Errors.java\n@@ -178,7 +178,7 @@\n                         warnings.append(LocalizationMessages.WARNING_MSG(error.getMessage())).append('\\n');\n                         break;\n                     case HINT:\n-                        warnings.append(LocalizationMessages.HINT_MSG(error.getMessage())).append('\\n');\n+                        hints.append(LocalizationMessages.HINT_MSG(error.getMessage())).append('\\n');\n                         break;\n                 }\n             }\n",
    "projectName": "jersey.jersey",
    "bugLineNum": 181,
    "bugNodeStartChar": 7205,
    "bugNodeLength": 66,
    "fixLineNum": 181,
    "fixNodeStartChar": 7205,
    "fixNodeLength": 63,
    "sourceBeforeFix": "warnings.append(LocalizationMessages.HINT_MSG(error.getMessage()))",
    "sourceAfterFix": "hints.append(LocalizationMessages.HINT_MSG(error.getMessage()))"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "ce3f66d9f6766cf6499bae15efbc3961f79c4756",
    "fixCommitParentSHA1": "be96cfecbcef6641336ce2465967d037308759a2",
    "bugFilePath": "containers/glassfish/jersey-gf-ejb/src/main/java/org/glassfish/jersey/gf/ejb/internal/EjbComponentProvider.java",
    "fixPatch": "diff --git a/containers/glassfish/jersey-gf-ejb/src/main/java/org/glassfish/jersey/gf/ejb/internal/EjbComponentProvider.java b/containers/glassfish/jersey-gf-ejb/src/main/java/org/glassfish/jersey/gf/ejb/internal/EjbComponentProvider.java\nindex 3568274..2bc9991 100644\n--- a/containers/glassfish/jersey-gf-ejb/src/main/java/org/glassfish/jersey/gf/ejb/internal/EjbComponentProvider.java\n+++ b/containers/glassfish/jersey-gf-ejb/src/main/java/org/glassfish/jersey/gf/ejb/internal/EjbComponentProvider.java\n@@ -197,7 +197,7 @@\n             final List<String> tempLibNames = new LinkedList<>();\n             for (ModuleInfo moduleInfo : appInfo.getModuleInfos()) {\n                 final String jarName = moduleInfo.getName();\n-                if (jarName.endsWith(\".jar\")) {\n+                if (jarName.endsWith(\".jar\") || jarName.endsWith(\".war\")) {\n                     final String moduleName = jarName.substring(0, jarName.length() - 4);\n                     tempLibNames.add(moduleName);\n                     final Object bundleDescriptor = moduleInfo.getMetaData(EjbBundleDescriptorImpl.class.getName());\n",
    "projectName": "jersey.jersey",
    "bugLineNum": 200,
    "bugNodeStartChar": 8291,
    "bugNodeLength": 24,
    "fixLineNum": 200,
    "fixNodeStartChar": 8291,
    "fixNodeLength": 52,
    "sourceBeforeFix": "jarName.endsWith(\".jar\")",
    "sourceAfterFix": "jarName.endsWith(\".jar\") || jarName.endsWith(\".war\")"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "8636f65b992322008bb987409af0dd97dec3b95f",
    "fixCommitParentSHA1": "3d807df14be640a8c4b07540f78b68572dd93178",
    "bugFilePath": "containers/glassfish/jersey-gf-ejb/src/main/java/org/glassfish/jersey/gf/ejb/internal/EjbComponentProvider.java",
    "fixPatch": "diff --git a/containers/glassfish/jersey-gf-ejb/src/main/java/org/glassfish/jersey/gf/ejb/internal/EjbComponentProvider.java b/containers/glassfish/jersey-gf-ejb/src/main/java/org/glassfish/jersey/gf/ejb/internal/EjbComponentProvider.java\nindex 3568274..2bc9991 100644\n--- a/containers/glassfish/jersey-gf-ejb/src/main/java/org/glassfish/jersey/gf/ejb/internal/EjbComponentProvider.java\n+++ b/containers/glassfish/jersey-gf-ejb/src/main/java/org/glassfish/jersey/gf/ejb/internal/EjbComponentProvider.java\n@@ -197,7 +197,7 @@\n             final List<String> tempLibNames = new LinkedList<>();\n             for (ModuleInfo moduleInfo : appInfo.getModuleInfos()) {\n                 final String jarName = moduleInfo.getName();\n-                if (jarName.endsWith(\".jar\")) {\n+                if (jarName.endsWith(\".jar\") || jarName.endsWith(\".war\")) {\n                     final String moduleName = jarName.substring(0, jarName.length() - 4);\n                     tempLibNames.add(moduleName);\n                     final Object bundleDescriptor = moduleInfo.getMetaData(EjbBundleDescriptorImpl.class.getName());\n",
    "projectName": "jersey.jersey",
    "bugLineNum": 200,
    "bugNodeStartChar": 8291,
    "bugNodeLength": 24,
    "fixLineNum": 200,
    "fixNodeStartChar": 8291,
    "fixNodeLength": 52,
    "sourceBeforeFix": "jarName.endsWith(\".jar\")",
    "sourceAfterFix": "jarName.endsWith(\".jar\") || jarName.endsWith(\".war\")"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "f182eeb947f4b1d1bed386a3a68bc24bdb575581",
    "fixCommitParentSHA1": "758a8ee794c284528a79d1ce1481b22a59320531",
    "bugFilePath": "connectors/apache-connector/src/test/java/org/glassfish/jersey/apache/connector/AsyncTest.java",
    "fixPatch": "diff --git a/connectors/apache-connector/src/test/java/org/glassfish/jersey/apache/connector/AsyncTest.java b/connectors/apache-connector/src/test/java/org/glassfish/jersey/apache/connector/AsyncTest.java\nindex 32a570a..7da1255 100644\n--- a/connectors/apache-connector/src/test/java/org/glassfish/jersey/apache/connector/AsyncTest.java\n+++ b/connectors/apache-connector/src/test/java/org/glassfish/jersey/apache/connector/AsyncTest.java\n@@ -1,7 +1,7 @@\n /*\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.\n  *\n- * Copyright (c) 2013-2014 Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013-2015 Oracle and/or its affiliates. All rights reserved.\n  *\n  * The contents of this file are subject to the terms of either the GNU\n  * General Public License Version 2 only (\"GPL\") or the Common Development\n@@ -242,7 +242,7 @@\n \n         final int asyncTimeoutMultiplier = getAsyncTimeoutMultiplier();\n         LOGGER.info(\"Using async timeout multiplier: \" + asyncTimeoutMultiplier);\n-        assertThat(\"Async processing took too long.\", toc - tic, Matchers.lessThan(3 * AsyncResource.OPERATION_DURATION\n+        assertThat(\"Async processing took too long.\", toc - tic, Matchers.lessThan(4 * AsyncResource.OPERATION_DURATION\n                 * asyncTimeoutMultiplier));\n \n     }\n",
    "projectName": "jersey.jersey",
    "bugLineNum": 245,
    "bugNodeStartChar": 9853,
    "bugNodeLength": 77,
    "fixLineNum": 245,
    "fixNodeStartChar": 9853,
    "fixNodeLength": 77,
    "sourceBeforeFix": "3 * AsyncResource.OPERATION_DURATION * asyncTimeoutMultiplier",
    "sourceAfterFix": "4 * AsyncResource.OPERATION_DURATION * asyncTimeoutMultiplier"
  },
  {
    "bugType": "SWAP_ARGUMENTS",
    "fixCommitSHA1": "02aba5a681a44fc3c1ab8c2658887ec81d07ac95",
    "fixCommitParentSHA1": "00ec3c0f555c3886bf70cad2b2f330b600bb6a97",
    "bugFilePath": "security/oauth1-server/src/main/java/org/glassfish/jersey/server/oauth1/DefaultOAuth1Provider.java",
    "fixPatch": "diff --git a/security/oauth1-server/src/main/java/org/glassfish/jersey/server/oauth1/DefaultOAuth1Provider.java b/security/oauth1-server/src/main/java/org/glassfish/jersey/server/oauth1/DefaultOAuth1Provider.java\nindex ce3d19f..3354a04 100644\n--- a/security/oauth1-server/src/main/java/org/glassfish/jersey/server/oauth1/DefaultOAuth1Provider.java\n+++ b/security/oauth1-server/src/main/java/org/glassfish/jersey/server/oauth1/DefaultOAuth1Provider.java\n@@ -86,7 +86,7 @@\n      * @return {@link Consumer} object for the newly registered consumer.\n      */\n     public Consumer registerConsumer(final String owner, final MultivaluedMap<String, String> attributes) {\n-        return registerConsumer(newUUIDString(), newUUIDString(), owner, attributes);\n+        return registerConsumer(owner, newUUIDString(), newUUIDString(), attributes);\n     }\n \n     /**\n",
    "projectName": "jersey.jersey",
    "bugLineNum": 89,
    "bugNodeStartChar": 4051,
    "bugNodeLength": 69,
    "fixLineNum": 89,
    "fixNodeStartChar": 4051,
    "fixNodeLength": 69,
    "sourceBeforeFix": "registerConsumer(newUUIDString(),newUUIDString(),owner,attributes)",
    "sourceAfterFix": "registerConsumer(owner,newUUIDString(),newUUIDString(),attributes)"
  },
  {
    "bugType": "SWAP_ARGUMENTS",
    "fixCommitSHA1": "c64fbc67c3358437202bb923b45037e5921942d4",
    "fixCommitParentSHA1": "f0ec6ef2e90b01d40f4c03d92021fc85c88800a4",
    "bugFilePath": "security/oauth1-server/src/main/java/org/glassfish/jersey/server/oauth1/DefaultOAuth1Provider.java",
    "fixPatch": "diff --git a/security/oauth1-server/src/main/java/org/glassfish/jersey/server/oauth1/DefaultOAuth1Provider.java b/security/oauth1-server/src/main/java/org/glassfish/jersey/server/oauth1/DefaultOAuth1Provider.java\nindex ce3d19f..3354a04 100644\n--- a/security/oauth1-server/src/main/java/org/glassfish/jersey/server/oauth1/DefaultOAuth1Provider.java\n+++ b/security/oauth1-server/src/main/java/org/glassfish/jersey/server/oauth1/DefaultOAuth1Provider.java\n@@ -86,7 +86,7 @@\n      * @return {@link Consumer} object for the newly registered consumer.\n      */\n     public Consumer registerConsumer(final String owner, final MultivaluedMap<String, String> attributes) {\n-        return registerConsumer(newUUIDString(), newUUIDString(), owner, attributes);\n+        return registerConsumer(owner, newUUIDString(), newUUIDString(), attributes);\n     }\n \n     /**\n",
    "projectName": "jersey.jersey",
    "bugLineNum": 89,
    "bugNodeStartChar": 4051,
    "bugNodeLength": 69,
    "fixLineNum": 89,
    "fixNodeStartChar": 4051,
    "fixNodeLength": 69,
    "sourceBeforeFix": "registerConsumer(newUUIDString(),newUUIDString(),owner,attributes)",
    "sourceAfterFix": "registerConsumer(owner,newUUIDString(),newUUIDString(),attributes)"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "77da02863c5a852357b4d41fe47a3bdcb418f7c4",
    "fixCommitParentSHA1": "acf266028423b7f7fc000bf67d2eaaede18e3a8f",
    "bugFilePath": "core-common/src/main/java/org/glassfish/jersey/CommonProperties.java",
    "fixPatch": "diff --git a/core-common/src/main/java/org/glassfish/jersey/CommonProperties.java b/core-common/src/main/java/org/glassfish/jersey/CommonProperties.java\nindex 2b20370..bb28478 100644\n--- a/core-common/src/main/java/org/glassfish/jersey/CommonProperties.java\n+++ b/core-common/src/main/java/org/glassfish/jersey/CommonProperties.java\n@@ -57,7 +57,7 @@\n @PropertiesClass\n public final class CommonProperties {\n \n-    public static Map<String, String> LEGACY_FALLBACK_MAP = new HashMap<String, String>();\n+    private static final Map<String, String> LEGACY_FALLBACK_MAP = new HashMap<String, String>();\n \n     static {\n         LEGACY_FALLBACK_MAP.put(CommonProperties.OUTBOUND_CONTENT_LENGTH_BUFFER_CLIENT,\n@@ -145,7 +145,7 @@\n     /**\n      * If {@code true} then disable META-INF/services lookup globally on client/server.\n      * <p>\n-     * By default Jersey lookups SPI implementations described by META-INF/services/* files.\n+     * By default Jersey looks up SPI implementations described by META-INF/services/* files.\n      * Then you can register appropriate provider classes by {@link javax.ws.rs.core.Application}.\n      * </p>\n      * <p>\n@@ -246,6 +246,19 @@\n     private CommonProperties() {\n     }\n \n+    /**\n+     * Get the value of the specified property.\n+     *\n+     * If the property is not set or the actual property value type is not compatible with the specified type, the method will\n+     * return {@code null}.\n+     *\n+     * @param properties    Map of properties to get the property value from.\n+     * @param propertyName  Name of the property.\n+     * @param type          Type to retrieve the value as.\n+     * @return              Value of the property or {@code null}.\n+     *\n+     * @since 2.8\n+     */\n     public static Object getValue(Map<String, ?> properties, String propertyName, Class<?> type) {\n         return PropertiesHelper.getValue(properties, propertyName, type, CommonProperties.LEGACY_FALLBACK_MAP);\n     }\n",
    "projectName": "jersey.jersey",
    "bugLineNum": 60,
    "bugNodeStartChar": 2456,
    "bugNodeLength": 86,
    "fixLineNum": 60,
    "fixNodeStartChar": 2456,
    "fixNodeLength": 93,
    "sourceBeforeFix": "9",
    "sourceAfterFix": "26"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "8902a5fb409bc9b0238c7270552ee2597f6589e4",
    "fixCommitParentSHA1": "45a81334b9299f65580e8b42bdccbd3c63014dc7",
    "bugFilePath": "containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/ServletContainer.java",
    "fixPatch": "diff --git a/containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/ServletContainer.java b/containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/ServletContainer.java\nindex 1d0a6b0..03273c3 100644\n--- a/containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/ServletContainer.java\n+++ b/containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/ServletContainer.java\n@@ -409,7 +409,7 @@\n         try {\n             doFilter((HttpServletRequest) servletRequest, (HttpServletResponse) servletResponse, filterChain);\n         } catch (ClassCastException e) {\n-            throw new ServletException(\"non-HTTP request or response\");\n+            throw new ServletException(\"non-HTTP request or response\", e);\n         }\n     }\n \n",
    "projectName": "jersey.jersey",
    "bugLineNum": 412,
    "bugNodeStartChar": 18775,
    "bugNodeLength": 52,
    "fixLineNum": 412,
    "fixNodeStartChar": 18775,
    "fixNodeLength": 55,
    "sourceBeforeFix": "new ServletException(\"non-HTTP request or response\")",
    "sourceAfterFix": "new ServletException(\"non-HTTP request or response\",e)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "f83a0fc07ebff4839bfe70dfc9372bf877aa7bc1",
    "fixCommitParentSHA1": "09114ae16dd7aadc6520128cb92ec8533965f409",
    "bugFilePath": "containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/ServletContainer.java",
    "fixPatch": "diff --git a/containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/ServletContainer.java b/containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/ServletContainer.java\nindex 1d0a6b0..03273c3 100644\n--- a/containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/ServletContainer.java\n+++ b/containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/ServletContainer.java\n@@ -409,7 +409,7 @@\n         try {\n             doFilter((HttpServletRequest) servletRequest, (HttpServletResponse) servletResponse, filterChain);\n         } catch (ClassCastException e) {\n-            throw new ServletException(\"non-HTTP request or response\");\n+            throw new ServletException(\"non-HTTP request or response\", e);\n         }\n     }\n \n",
    "projectName": "jersey.jersey",
    "bugLineNum": 412,
    "bugNodeStartChar": 18775,
    "bugNodeLength": 52,
    "fixLineNum": 412,
    "fixNodeStartChar": 18775,
    "fixNodeLength": 55,
    "sourceBeforeFix": "new ServletException(\"non-HTTP request or response\")",
    "sourceAfterFix": "new ServletException(\"non-HTTP request or response\",e)"
  },
  {
    "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
    "fixCommitSHA1": "f5309e8856186f5105e0bfcefda1273330f36ac0",
    "fixCommitParentSHA1": "dd0fe91df7f31af46e0b4f67116a6dbe17b37485",
    "bugFilePath": "tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/HttpDigestAuthFilterTest.java",
    "fixPatch": "diff --git a/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/HttpDigestAuthFilterTest.java b/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/HttpDigestAuthFilterTest.java\nindex 99b365d..870ecda 100644\n--- a/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/HttpDigestAuthFilterTest.java\n+++ b/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/HttpDigestAuthFilterTest.java\n@@ -193,7 +193,7 @@\n \t\tClientConfig jerseyConfig = new ClientConfig();\n \n \t\tClient client = ClientBuilder.newClient(jerseyConfig);\n-\t\tclient = client.register(new HttpDigestAuthFilter(DIGEST_TEST_LOGIN, DIGEST_TEST_PASS, 1));\n+\t\tclient = client.register(new HttpDigestAuthFilter(DIGEST_TEST_LOGIN, DIGEST_TEST_PASS));\n \n \t\tWebTarget resource = client.target(getBaseUri()).path(\"auth-digest\");\n \n@@ -207,7 +207,7 @@\n \t\tClientConfig jerseyConfig = new ClientConfig();\n \n \t\tClient client = ClientBuilder.newClient(jerseyConfig);\n-\t\tclient = client.register(new HttpDigestAuthFilter(DIGEST_TEST_LOGIN, DIGEST_TEST_PASS, 1));\n+\t\tclient = client.register(new HttpDigestAuthFilter(DIGEST_TEST_LOGIN, DIGEST_TEST_PASS));\n \n \t\tWebTarget resource = client.target(getBaseUri()).path(\"auth-digest\");\n \n@@ -230,7 +230,7 @@\n \t\tClientConfig jerseyConfig = new ClientConfig();\n \n \t\tClient client = ClientBuilder.newClient(jerseyConfig);\n-\t\tclient = client.register(new HttpDigestAuthFilter(DIGEST_TEST_LOGIN, DIGEST_TEST_INVALIDPASS, 1));\n+\t\tclient = client.register(new HttpDigestAuthFilter(DIGEST_TEST_LOGIN, DIGEST_TEST_INVALIDPASS));\n \n \t\tWebTarget resource = client.target(getBaseUri()).path(\"auth-digest\");\n \n",
    "projectName": "jersey.jersey",
    "bugLineNum": 196,
    "bugNodeStartChar": 7261,
    "bugNodeLength": 64,
    "fixLineNum": 196,
    "fixNodeStartChar": 7261,
    "fixNodeLength": 61,
    "sourceBeforeFix": "new HttpDigestAuthFilter(DIGEST_TEST_LOGIN,DIGEST_TEST_PASS,1)",
    "sourceAfterFix": "new HttpDigestAuthFilter(DIGEST_TEST_LOGIN,DIGEST_TEST_PASS)"
  },
  {
    "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
    "fixCommitSHA1": "f5309e8856186f5105e0bfcefda1273330f36ac0",
    "fixCommitParentSHA1": "dd0fe91df7f31af46e0b4f67116a6dbe17b37485",
    "bugFilePath": "tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/HttpDigestAuthFilterTest.java",
    "fixPatch": "diff --git a/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/HttpDigestAuthFilterTest.java b/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/HttpDigestAuthFilterTest.java\nindex 99b365d..870ecda 100644\n--- a/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/HttpDigestAuthFilterTest.java\n+++ b/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/HttpDigestAuthFilterTest.java\n@@ -193,7 +193,7 @@\n \t\tClientConfig jerseyConfig = new ClientConfig();\n \n \t\tClient client = ClientBuilder.newClient(jerseyConfig);\n-\t\tclient = client.register(new HttpDigestAuthFilter(DIGEST_TEST_LOGIN, DIGEST_TEST_PASS, 1));\n+\t\tclient = client.register(new HttpDigestAuthFilter(DIGEST_TEST_LOGIN, DIGEST_TEST_PASS));\n \n \t\tWebTarget resource = client.target(getBaseUri()).path(\"auth-digest\");\n \n@@ -207,7 +207,7 @@\n \t\tClientConfig jerseyConfig = new ClientConfig();\n \n \t\tClient client = ClientBuilder.newClient(jerseyConfig);\n-\t\tclient = client.register(new HttpDigestAuthFilter(DIGEST_TEST_LOGIN, DIGEST_TEST_PASS, 1));\n+\t\tclient = client.register(new HttpDigestAuthFilter(DIGEST_TEST_LOGIN, DIGEST_TEST_PASS));\n \n \t\tWebTarget resource = client.target(getBaseUri()).path(\"auth-digest\");\n \n@@ -230,7 +230,7 @@\n \t\tClientConfig jerseyConfig = new ClientConfig();\n \n \t\tClient client = ClientBuilder.newClient(jerseyConfig);\n-\t\tclient = client.register(new HttpDigestAuthFilter(DIGEST_TEST_LOGIN, DIGEST_TEST_INVALIDPASS, 1));\n+\t\tclient = client.register(new HttpDigestAuthFilter(DIGEST_TEST_LOGIN, DIGEST_TEST_INVALIDPASS));\n \n \t\tWebTarget resource = client.target(getBaseUri()).path(\"auth-digest\");\n \n",
    "projectName": "jersey.jersey",
    "bugLineNum": 210,
    "bugNodeStartChar": 7731,
    "bugNodeLength": 64,
    "fixLineNum": 210,
    "fixNodeStartChar": 7731,
    "fixNodeLength": 61,
    "sourceBeforeFix": "new HttpDigestAuthFilter(DIGEST_TEST_LOGIN,DIGEST_TEST_PASS,1)",
    "sourceAfterFix": "new HttpDigestAuthFilter(DIGEST_TEST_LOGIN,DIGEST_TEST_PASS)"
  },
  {
    "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
    "fixCommitSHA1": "f5309e8856186f5105e0bfcefda1273330f36ac0",
    "fixCommitParentSHA1": "dd0fe91df7f31af46e0b4f67116a6dbe17b37485",
    "bugFilePath": "tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/HttpDigestAuthFilterTest.java",
    "fixPatch": "diff --git a/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/HttpDigestAuthFilterTest.java b/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/HttpDigestAuthFilterTest.java\nindex 99b365d..870ecda 100644\n--- a/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/HttpDigestAuthFilterTest.java\n+++ b/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/HttpDigestAuthFilterTest.java\n@@ -193,7 +193,7 @@\n \t\tClientConfig jerseyConfig = new ClientConfig();\n \n \t\tClient client = ClientBuilder.newClient(jerseyConfig);\n-\t\tclient = client.register(new HttpDigestAuthFilter(DIGEST_TEST_LOGIN, DIGEST_TEST_PASS, 1));\n+\t\tclient = client.register(new HttpDigestAuthFilter(DIGEST_TEST_LOGIN, DIGEST_TEST_PASS));\n \n \t\tWebTarget resource = client.target(getBaseUri()).path(\"auth-digest\");\n \n@@ -207,7 +207,7 @@\n \t\tClientConfig jerseyConfig = new ClientConfig();\n \n \t\tClient client = ClientBuilder.newClient(jerseyConfig);\n-\t\tclient = client.register(new HttpDigestAuthFilter(DIGEST_TEST_LOGIN, DIGEST_TEST_PASS, 1));\n+\t\tclient = client.register(new HttpDigestAuthFilter(DIGEST_TEST_LOGIN, DIGEST_TEST_PASS));\n \n \t\tWebTarget resource = client.target(getBaseUri()).path(\"auth-digest\");\n \n@@ -230,7 +230,7 @@\n \t\tClientConfig jerseyConfig = new ClientConfig();\n \n \t\tClient client = ClientBuilder.newClient(jerseyConfig);\n-\t\tclient = client.register(new HttpDigestAuthFilter(DIGEST_TEST_LOGIN, DIGEST_TEST_INVALIDPASS, 1));\n+\t\tclient = client.register(new HttpDigestAuthFilter(DIGEST_TEST_LOGIN, DIGEST_TEST_INVALIDPASS));\n \n \t\tWebTarget resource = client.target(getBaseUri()).path(\"auth-digest\");\n \n",
    "projectName": "jersey.jersey",
    "bugLineNum": 233,
    "bugNodeStartChar": 8510,
    "bugNodeLength": 71,
    "fixLineNum": 233,
    "fixNodeStartChar": 8510,
    "fixNodeLength": 68,
    "sourceBeforeFix": "new HttpDigestAuthFilter(DIGEST_TEST_LOGIN,DIGEST_TEST_INVALIDPASS,1)",
    "sourceAfterFix": "new HttpDigestAuthFilter(DIGEST_TEST_LOGIN,DIGEST_TEST_INVALIDPASS)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "3b4ff661c53e36133d3d287908592029d97d66f1",
    "fixCommitParentSHA1": "617403bc5bbc066d789d2a89460c0b9a3c8b5541",
    "bugFilePath": "tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/TimeoutTest.java",
    "fixPatch": "diff --git a/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/TimeoutTest.java b/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/TimeoutTest.java\nindex 4b1d167..27f93c2 100644\n--- a/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/TimeoutTest.java\n+++ b/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/TimeoutTest.java\n@@ -71,7 +71,7 @@\n         @Path(\"timeout\")\n         public String getTimeout() {\n             try {\n-                Thread.sleep(2000);\n+                Thread.sleep(5000);\n             } catch (InterruptedException e) {\n                 e.printStackTrace();\n             }\n@@ -86,7 +86,7 @@\n \n     @Override\n     protected void configureClient(ClientConfig clientConfig) {\n-        clientConfig.property(ClientProperties.READ_TIMEOUT, 1000);\n+        clientConfig.property(ClientProperties.READ_TIMEOUT, 2000);\n     }\n \n     @Test\n",
    "projectName": "jersey.jersey",
    "bugLineNum": 74,
    "bugNodeStartChar": 2894,
    "bugNodeLength": 18,
    "fixLineNum": 74,
    "fixNodeStartChar": 2894,
    "fixNodeLength": 18,
    "sourceBeforeFix": "Thread.sleep(2000)",
    "sourceAfterFix": "Thread.sleep(5000)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "3b4ff661c53e36133d3d287908592029d97d66f1",
    "fixCommitParentSHA1": "617403bc5bbc066d789d2a89460c0b9a3c8b5541",
    "bugFilePath": "tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/TimeoutTest.java",
    "fixPatch": "diff --git a/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/TimeoutTest.java b/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/TimeoutTest.java\nindex 4b1d167..27f93c2 100644\n--- a/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/TimeoutTest.java\n+++ b/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/TimeoutTest.java\n@@ -71,7 +71,7 @@\n         @Path(\"timeout\")\n         public String getTimeout() {\n             try {\n-                Thread.sleep(2000);\n+                Thread.sleep(5000);\n             } catch (InterruptedException e) {\n                 e.printStackTrace();\n             }\n@@ -86,7 +86,7 @@\n \n     @Override\n     protected void configureClient(ClientConfig clientConfig) {\n-        clientConfig.property(ClientProperties.READ_TIMEOUT, 1000);\n+        clientConfig.property(ClientProperties.READ_TIMEOUT, 2000);\n     }\n \n     @Test\n",
    "projectName": "jersey.jersey",
    "bugLineNum": 89,
    "bugNodeStartChar": 3260,
    "bugNodeLength": 58,
    "fixLineNum": 89,
    "fixNodeStartChar": 3260,
    "fixNodeLength": 58,
    "sourceBeforeFix": "clientConfig.property(ClientProperties.READ_TIMEOUT,1000)",
    "sourceAfterFix": "clientConfig.property(ClientProperties.READ_TIMEOUT,2000)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "bbfc2b18a1b5ed3968212db115410ee515dca460",
    "fixCommitParentSHA1": "c78a00f8956e041613cc1b8c3c92832069096ec1",
    "bugFilePath": "tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/TimeoutTest.java",
    "fixPatch": "diff --git a/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/TimeoutTest.java b/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/TimeoutTest.java\nindex 4b1d167..27f93c2 100644\n--- a/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/TimeoutTest.java\n+++ b/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/TimeoutTest.java\n@@ -71,7 +71,7 @@\n         @Path(\"timeout\")\n         public String getTimeout() {\n             try {\n-                Thread.sleep(2000);\n+                Thread.sleep(5000);\n             } catch (InterruptedException e) {\n                 e.printStackTrace();\n             }\n@@ -86,7 +86,7 @@\n \n     @Override\n     protected void configureClient(ClientConfig clientConfig) {\n-        clientConfig.property(ClientProperties.READ_TIMEOUT, 1000);\n+        clientConfig.property(ClientProperties.READ_TIMEOUT, 2000);\n     }\n \n     @Test\n",
    "projectName": "jersey.jersey",
    "bugLineNum": 74,
    "bugNodeStartChar": 2894,
    "bugNodeLength": 18,
    "fixLineNum": 74,
    "fixNodeStartChar": 2894,
    "fixNodeLength": 18,
    "sourceBeforeFix": "Thread.sleep(2000)",
    "sourceAfterFix": "Thread.sleep(5000)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "bbfc2b18a1b5ed3968212db115410ee515dca460",
    "fixCommitParentSHA1": "c78a00f8956e041613cc1b8c3c92832069096ec1",
    "bugFilePath": "tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/TimeoutTest.java",
    "fixPatch": "diff --git a/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/TimeoutTest.java b/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/TimeoutTest.java\nindex 4b1d167..27f93c2 100644\n--- a/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/TimeoutTest.java\n+++ b/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/TimeoutTest.java\n@@ -71,7 +71,7 @@\n         @Path(\"timeout\")\n         public String getTimeout() {\n             try {\n-                Thread.sleep(2000);\n+                Thread.sleep(5000);\n             } catch (InterruptedException e) {\n                 e.printStackTrace();\n             }\n@@ -86,7 +86,7 @@\n \n     @Override\n     protected void configureClient(ClientConfig clientConfig) {\n-        clientConfig.property(ClientProperties.READ_TIMEOUT, 1000);\n+        clientConfig.property(ClientProperties.READ_TIMEOUT, 2000);\n     }\n \n     @Test\n",
    "projectName": "jersey.jersey",
    "bugLineNum": 89,
    "bugNodeStartChar": 3260,
    "bugNodeLength": 58,
    "fixLineNum": 89,
    "fixNodeStartChar": 3260,
    "fixNodeLength": 58,
    "sourceBeforeFix": "clientConfig.property(ClientProperties.READ_TIMEOUT,1000)",
    "sourceAfterFix": "clientConfig.property(ClientProperties.READ_TIMEOUT,2000)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "e0c041b68103957cb758859ff0799bbb6c15d5db",
    "fixCommitParentSHA1": "b4b76aa5c29cc469f85f04fde7ae8da374b4fd9f",
    "bugFilePath": "core-client/src/main/java/org/glassfish/jersey/client/filter/HttpDigestAuthFilter.java",
    "fixPatch": "diff --git a/core-client/src/main/java/org/glassfish/jersey/client/filter/HttpDigestAuthFilter.java b/core-client/src/main/java/org/glassfish/jersey/client/filter/HttpDigestAuthFilter.java\nindex ed8348e..a591f0c 100644\n--- a/core-client/src/main/java/org/glassfish/jersey/client/filter/HttpDigestAuthFilter.java\n+++ b/core-client/src/main/java/org/glassfish/jersey/client/filter/HttpDigestAuthFilter.java\n@@ -239,7 +239,7 @@\n \t\tappend(sb, \"algorithm\", digest_algorithm.toString(), false);\n \t\tappend(sb, \"qop\", digest_qop.toString(), false);\n \n-\t\tString uri = requestContext.getUri().getPath();\n+\t\tString uri = requestContext.getUri().getRawPath();\n \t\tappend(sb, \"uri\", uri);\n \n \t\tString ha1;\n",
    "projectName": "jersey.jersey",
    "bugLineNum": 242,
    "bugNodeStartChar": 8638,
    "bugNodeLength": 33,
    "fixLineNum": 242,
    "fixNodeStartChar": 8638,
    "fixNodeLength": 36,
    "sourceBeforeFix": "requestContext.getUri().getPath()",
    "sourceAfterFix": "requestContext.getUri().getRawPath()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "e0c041b68103957cb758859ff0799bbb6c15d5db",
    "fixCommitParentSHA1": "b4b76aa5c29cc469f85f04fde7ae8da374b4fd9f",
    "bugFilePath": "core-client/src/main/java/org/glassfish/jersey/client/filter/HttpDigestAuthFilter.java",
    "fixPatch": "diff --git a/core-client/src/main/java/org/glassfish/jersey/client/filter/HttpDigestAuthFilter.java b/core-client/src/main/java/org/glassfish/jersey/client/filter/HttpDigestAuthFilter.java\nindex ed8348e..a591f0c 100644\n--- a/core-client/src/main/java/org/glassfish/jersey/client/filter/HttpDigestAuthFilter.java\n+++ b/core-client/src/main/java/org/glassfish/jersey/client/filter/HttpDigestAuthFilter.java\n@@ -239,7 +239,7 @@\n \t\tappend(sb, \"algorithm\", digest_algorithm.toString(), false);\n \t\tappend(sb, \"qop\", digest_qop.toString(), false);\n \n-\t\tString uri = requestContext.getUri().getPath();\n+\t\tString uri = requestContext.getUri().getRawPath();\n \t\tappend(sb, \"uri\", uri);\n \n \t\tString ha1;\n",
    "projectName": "jersey.jersey",
    "bugLineNum": 242,
    "bugNodeStartChar": 8638,
    "bugNodeLength": 33,
    "fixLineNum": 242,
    "fixNodeStartChar": 8638,
    "fixNodeLength": 36,
    "sourceBeforeFix": "requestContext.getUri().getPath()",
    "sourceAfterFix": "requestContext.getUri().getRawPath()"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "cacf2a379205edcff9a11fa124a13578fe6713e3",
    "fixCommitParentSHA1": "0ee4f5cb4dabfc9044c4f006fb6b707b2d4eff71",
    "bugFilePath": "core-client/src/main/java/org/glassfish/jersey/client/ClientRequest.java",
    "fixPatch": "diff --git a/core-client/src/main/java/org/glassfish/jersey/client/ClientRequest.java b/core-client/src/main/java/org/glassfish/jersey/client/ClientRequest.java\nindex 2ecd5ae..22eaf69 100644\n--- a/core-client/src/main/java/org/glassfish/jersey/client/ClientRequest.java\n+++ b/core-client/src/main/java/org/glassfish/jersey/client/ClientRequest.java\n@@ -450,7 +450,7 @@\n             try {\n                 commitStream();\n             } catch (IOException e) {\n-                LOGGER.log(Level.SEVERE, LocalizationMessages.ERROR_COMMITTING_OUTPUT_STREAM());\n+                LOGGER.log(Level.SEVERE, LocalizationMessages.ERROR_COMMITTING_OUTPUT_STREAM(), e);\n             }\n         }\n     }\n",
    "projectName": "jersey.jersey",
    "bugLineNum": 453,
    "bugNodeStartChar": 14571,
    "bugNodeLength": 79,
    "fixLineNum": 453,
    "fixNodeStartChar": 14571,
    "fixNodeLength": 82,
    "sourceBeforeFix": "LOGGER.log(Level.SEVERE,LocalizationMessages.ERROR_COMMITTING_OUTPUT_STREAM())",
    "sourceAfterFix": "LOGGER.log(Level.SEVERE,LocalizationMessages.ERROR_COMMITTING_OUTPUT_STREAM(),e)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "c1e4888011b5909b94591de25ab859b91093d6a3",
    "fixCommitParentSHA1": "244e74fdd23884ba3b1c4abdaf7fa8cfb8f9f991",
    "bugFilePath": "core-client/src/main/java/org/glassfish/jersey/client/ClientRequest.java",
    "fixPatch": "diff --git a/core-client/src/main/java/org/glassfish/jersey/client/ClientRequest.java b/core-client/src/main/java/org/glassfish/jersey/client/ClientRequest.java\nindex 2ecd5ae..22eaf69 100644\n--- a/core-client/src/main/java/org/glassfish/jersey/client/ClientRequest.java\n+++ b/core-client/src/main/java/org/glassfish/jersey/client/ClientRequest.java\n@@ -450,7 +450,7 @@\n             try {\n                 commitStream();\n             } catch (IOException e) {\n-                LOGGER.log(Level.SEVERE, LocalizationMessages.ERROR_COMMITTING_OUTPUT_STREAM());\n+                LOGGER.log(Level.SEVERE, LocalizationMessages.ERROR_COMMITTING_OUTPUT_STREAM(), e);\n             }\n         }\n     }\n",
    "projectName": "jersey.jersey",
    "bugLineNum": 453,
    "bugNodeStartChar": 14571,
    "bugNodeLength": 79,
    "fixLineNum": 453,
    "fixNodeStartChar": 14571,
    "fixNodeLength": 82,
    "sourceBeforeFix": "LOGGER.log(Level.SEVERE,LocalizationMessages.ERROR_COMMITTING_OUTPUT_STREAM())",
    "sourceAfterFix": "LOGGER.log(Level.SEVERE,LocalizationMessages.ERROR_COMMITTING_OUTPUT_STREAM(),e)"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "40bc1faf5c4df7faea20f37ffce6a62fb90b8cd9",
    "fixCommitParentSHA1": "9ed17032be4b738a4e7d8ebae245ed694dd5ade0",
    "bugFilePath": "core-common/src/main/java/org/glassfish/jersey/message/internal/MediaTypes.java",
    "fixPatch": "diff --git a/core-common/src/main/java/org/glassfish/jersey/message/internal/MediaTypes.java b/core-common/src/main/java/org/glassfish/jersey/message/internal/MediaTypes.java\nindex 2af3394..9388f25 100644\n--- a/core-common/src/main/java/org/glassfish/jersey/message/internal/MediaTypes.java\n+++ b/core-common/src/main/java/org/glassfish/jersey/message/internal/MediaTypes.java\n@@ -316,7 +316,7 @@\n      *         {@link #QUALITY_SOURCE_MEDIA_TYPE_COMPARATOR}.\n      */\n     public static List<MediaType> createQualitySourceMediaTypes(Produces mime) {\n-        if (mime == null) {\n+        if (mime == null || mime.value().length == 0) {\n             return GENERAL_QUALITY_SOURCE_MEDIA_TYPE_LIST;\n         }\n \n",
    "projectName": "jersey.jersey",
    "bugLineNum": 319,
    "bugNodeStartChar": 11595,
    "bugNodeLength": 12,
    "fixLineNum": 319,
    "fixNodeStartChar": 11595,
    "fixNodeLength": 40,
    "sourceBeforeFix": "mime == null",
    "sourceAfterFix": "mime == null || mime.value().length == 0"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "40bc1faf5c4df7faea20f37ffce6a62fb90b8cd9",
    "fixCommitParentSHA1": "9ed17032be4b738a4e7d8ebae245ed694dd5ade0",
    "bugFilePath": "core-common/src/main/java/org/glassfish/jersey/message/internal/MediaTypes.java",
    "fixPatch": "diff --git a/core-common/src/main/java/org/glassfish/jersey/message/internal/MediaTypes.java b/core-common/src/main/java/org/glassfish/jersey/message/internal/MediaTypes.java\nindex 2af3394..9388f25 100644\n--- a/core-common/src/main/java/org/glassfish/jersey/message/internal/MediaTypes.java\n+++ b/core-common/src/main/java/org/glassfish/jersey/message/internal/MediaTypes.java\n@@ -316,7 +316,7 @@\n      *         {@link #QUALITY_SOURCE_MEDIA_TYPE_COMPARATOR}.\n      */\n     public static List<MediaType> createQualitySourceMediaTypes(Produces mime) {\n-        if (mime == null) {\n+        if (mime == null || mime.value().length == 0) {\n             return GENERAL_QUALITY_SOURCE_MEDIA_TYPE_LIST;\n         }\n \n",
    "projectName": "jersey.jersey",
    "bugLineNum": 319,
    "bugNodeStartChar": 11595,
    "bugNodeLength": 12,
    "fixLineNum": 319,
    "fixNodeStartChar": 11595,
    "fixNodeLength": 40,
    "sourceBeforeFix": "mime == null",
    "sourceAfterFix": "mime == null || mime.value().length == 0"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "409f0c6a5ca0bfd80b3d7bb1750a870291a3a6f2",
    "fixCommitParentSHA1": "01c296905e3b9dc5f8ad9c0d1525bc09b28e96c2",
    "bugFilePath": "connectors/grizzly-connector/src/test/java/org/glassfish/jersey/grizzly/connector/FollowRedirectsTest.java",
    "fixPatch": "diff --git a/connectors/grizzly-connector/src/test/java/org/glassfish/jersey/grizzly/connector/FollowRedirectsTest.java b/connectors/grizzly-connector/src/test/java/org/glassfish/jersey/grizzly/connector/FollowRedirectsTest.java\nindex 024716b..5dcb173 100644\n--- a/connectors/grizzly-connector/src/test/java/org/glassfish/jersey/grizzly/connector/FollowRedirectsTest.java\n+++ b/connectors/grizzly-connector/src/test/java/org/glassfish/jersey/grizzly/connector/FollowRedirectsTest.java\n@@ -71,7 +71,7 @@\n         @GET\n         @Path(\"redirect\")\n         public Response redirect() {\n-            return Response.status(302).location(UriBuilder.fromResource(RedirectResource.class).build()).build();\n+            return Response.seeOther(UriBuilder.fromResource(RedirectResource.class).build()).build();\n         }\n     }\n \n@@ -97,6 +97,6 @@\n     public void testDontFollow() {\n         WebTarget t = target(\"test/redirect\");\n         t.configuration().setProperty(ClientProperties.FOLLOW_REDIRECTS, false);\n-        assertEquals(302, t.request().get().getStatus());\n+        assertEquals(303, t.request().get().getStatus());\n     }\n }\n",
    "projectName": "jersey.jersey",
    "bugLineNum": 100,
    "bugNodeStartChar": 3895,
    "bugNodeLength": 48,
    "fixLineNum": 100,
    "fixNodeStartChar": 3895,
    "fixNodeLength": 48,
    "sourceBeforeFix": "assertEquals(302,t.request().get().getStatus())",
    "sourceAfterFix": "assertEquals(303,t.request().get().getStatus())"
  }
]