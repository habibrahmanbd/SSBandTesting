[{"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "d5c862121cf783f4e79ee5b6300c0aa2ee8cdfdd", "fixCommitParentSHA1": "313eb55b01b27f68f6f1573cd6ba6cf88c1a4203", "bugFilePath": "collector/src/test/java/com/navercorp/pinpoint/collector/receiver/grpc/PinpointGrpcServerTest.java", "fixPatch": "diff --git a/collector/src/test/java/com/navercorp/pinpoint/collector/receiver/grpc/PinpointGrpcServerTest.java b/collector/src/test/java/com/navercorp/pinpoint/collector/receiver/grpc/PinpointGrpcServerTest.java\nindex 6433ca9..3256b5a 100644\n--- a/collector/src/test/java/com/navercorp/pinpoint/collector/receiver/grpc/PinpointGrpcServerTest.java\n+++ b/collector/src/test/java/com/navercorp/pinpoint/collector/receiver/grpc/PinpointGrpcServerTest.java\n@@ -68,7 +68,7 @@\n     public void stateTest() {\r\n         RecordedStreamObserver recordedStreamObserver = new RecordedStreamObserver();\r\n \r\n-        PinpointGrpcServer pinpointGrpcServer = new PinpointGrpcServer(Mockito.mock(InetSocketAddress.class), agentInfo, new RequestManager(testTimer, 300), recordedStreamObserver);\r\n+        PinpointGrpcServer pinpointGrpcServer = new PinpointGrpcServer(Mockito.mock(InetSocketAddress.class), agentInfo, new RequestManager(testTimer, 3000), recordedStreamObserver);\r\n         assertCurrentState(SocketStateCode.NONE, pinpointGrpcServer);\r\n         Future<ResponseMessage> future = pinpointGrpcServer.request(request);\r\n         requestOnInvalidState(future, recordedStreamObserver);\r\n@@ -98,7 +98,7 @@\n     public void requestTest() {\r\n         RecordedStreamObserver<PCmdRequest> recordedStreamObserver = new RecordedStreamObserver<PCmdRequest>();\r\n \r\n-        PinpointGrpcServer pinpointGrpcServer = new PinpointGrpcServer(Mockito.mock(InetSocketAddress.class), agentInfo, new RequestManager(testTimer, 300), recordedStreamObserver);\r\n+        PinpointGrpcServer pinpointGrpcServer = new PinpointGrpcServer(Mockito.mock(InetSocketAddress.class), agentInfo, new RequestManager(testTimer, 3000), recordedStreamObserver);\r\n         pinpointGrpcServer.connected();\r\n \r\n         List<Integer> supportCommandList = Arrays.asList(Short.toUnsignedInt(TCommandType.ECHO.getCode()));\r\n", "projectName": "naver.pinpoint", "bugLineNum": 71, "bugNodeStartChar": 2567, "bugNodeLength": 34, "fixLineNum": 71, "fixNodeStartChar": 2497, "fixNodeLength": 35, "sourceBeforeFix": "new RequestManager(testTimer,300)", "sourceAfterFix": "new RequestManager(testTimer,3000)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "d5c862121cf783f4e79ee5b6300c0aa2ee8cdfdd", "fixCommitParentSHA1": "313eb55b01b27f68f6f1573cd6ba6cf88c1a4203", "bugFilePath": "collector/src/test/java/com/navercorp/pinpoint/collector/receiver/grpc/PinpointGrpcServerTest.java", "fixPatch": "diff --git a/collector/src/test/java/com/navercorp/pinpoint/collector/receiver/grpc/PinpointGrpcServerTest.java b/collector/src/test/java/com/navercorp/pinpoint/collector/receiver/grpc/PinpointGrpcServerTest.java\nindex 6433ca9..3256b5a 100644\n--- a/collector/src/test/java/com/navercorp/pinpoint/collector/receiver/grpc/PinpointGrpcServerTest.java\n+++ b/collector/src/test/java/com/navercorp/pinpoint/collector/receiver/grpc/PinpointGrpcServerTest.java\n@@ -68,7 +68,7 @@\n     public void stateTest() {\r\n         RecordedStreamObserver recordedStreamObserver = new RecordedStreamObserver();\r\n \r\n-        PinpointGrpcServer pinpointGrpcServer = new PinpointGrpcServer(Mockito.mock(InetSocketAddress.class), agentInfo, new RequestManager(testTimer, 300), recordedStreamObserver);\r\n+        PinpointGrpcServer pinpointGrpcServer = new PinpointGrpcServer(Mockito.mock(InetSocketAddress.class), agentInfo, new RequestManager(testTimer, 3000), recordedStreamObserver);\r\n         assertCurrentState(SocketStateCode.NONE, pinpointGrpcServer);\r\n         Future<ResponseMessage> future = pinpointGrpcServer.request(request);\r\n         requestOnInvalidState(future, recordedStreamObserver);\r\n@@ -98,7 +98,7 @@\n     public void requestTest() {\r\n         RecordedStreamObserver<PCmdRequest> recordedStreamObserver = new RecordedStreamObserver<PCmdRequest>();\r\n \r\n-        PinpointGrpcServer pinpointGrpcServer = new PinpointGrpcServer(Mockito.mock(InetSocketAddress.class), agentInfo, new RequestManager(testTimer, 300), recordedStreamObserver);\r\n+        PinpointGrpcServer pinpointGrpcServer = new PinpointGrpcServer(Mockito.mock(InetSocketAddress.class), agentInfo, new RequestManager(testTimer, 3000), recordedStreamObserver);\r\n         pinpointGrpcServer.connected();\r\n \r\n         List<Integer> supportCommandList = Arrays.asList(Short.toUnsignedInt(TCommandType.ECHO.getCode()));\r\n", "projectName": "naver.pinpoint", "bugLineNum": 101, "bugNodeStartChar": 4205, "bugNodeLength": 34, "fixLineNum": 101, "fixNodeStartChar": 4105, "fixNodeLength": 35, "sourceBeforeFix": "new RequestManager(testTimer,300)", "sourceAfterFix": "new RequestManager(testTimer,3000)"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "24bc88e4ccc3f2e3e8419acb5a5084f5dd26634d", "fixCommitParentSHA1": "cb7169cecfe97efe1312492297fe16ef7ace09bc", "bugFilePath": "plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/interceptor/ChannelPipelineWriteInterceptor.java", "fixPatch": "diff --git a/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/interceptor/ChannelPipelineWriteInterceptor.java b/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/interceptor/ChannelPipelineWriteInterceptor.java\nindex 685690a..1c457b5 100644\n--- a/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/interceptor/ChannelPipelineWriteInterceptor.java\n+++ b/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/interceptor/ChannelPipelineWriteInterceptor.java\n@@ -109,7 +109,7 @@\n     }\n \n     private boolean validate(Object[] args) {\n-        if (args.length == 0) {\n+        if (args == null || args.length == 0) {\n             return false;\n         }\n \n", "projectName": "naver.pinpoint", "bugLineNum": 112, "bugNodeStartChar": 3875, "bugNodeLength": 16, "fixLineNum": 112, "fixNodeStartChar": 3875, "fixNodeLength": 32, "sourceBeforeFix": "args.length == 0", "sourceAfterFix": "args == null || args.length == 0"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "24bc88e4ccc3f2e3e8419acb5a5084f5dd26634d", "fixCommitParentSHA1": "cb7169cecfe97efe1312492297fe16ef7ace09bc", "bugFilePath": "plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/interceptor/ChannelPipelineWriteInterceptor.java", "fixPatch": "diff --git a/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/interceptor/ChannelPipelineWriteInterceptor.java b/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/interceptor/ChannelPipelineWriteInterceptor.java\nindex 685690a..1c457b5 100644\n--- a/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/interceptor/ChannelPipelineWriteInterceptor.java\n+++ b/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/interceptor/ChannelPipelineWriteInterceptor.java\n@@ -109,7 +109,7 @@\n     }\n \n     private boolean validate(Object[] args) {\n-        if (args.length == 0) {\n+        if (args == null || args.length == 0) {\n             return false;\n         }\n \n", "projectName": "naver.pinpoint", "bugLineNum": 112, "bugNodeStartChar": 3875, "bugNodeLength": 16, "fixLineNum": 112, "fixNodeStartChar": 3875, "fixNodeLength": 32, "sourceBeforeFix": "args.length == 0", "sourceAfterFix": "args == null || args.length == 0"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "93a9fb352d11fb796964cbe4650b4a247d908b58", "fixCommitParentSHA1": "15816801657fdc9d3884b4a230045fd9ae53da4a", "bugFilePath": "plugins/undertow/src/main/java/com/navercorp/pinpoint/plugin/undertow/interceptor/ConnectorsExecuteRootHandlerInterceptor.java", "fixPatch": "diff --git a/plugins/undertow/src/main/java/com/navercorp/pinpoint/plugin/undertow/interceptor/ConnectorsExecuteRootHandlerInterceptor.java b/plugins/undertow/src/main/java/com/navercorp/pinpoint/plugin/undertow/interceptor/ConnectorsExecuteRootHandlerInterceptor.java\nindex e902498..b895ea5 100644\n--- a/plugins/undertow/src/main/java/com/navercorp/pinpoint/plugin/undertow/interceptor/ConnectorsExecuteRootHandlerInterceptor.java\n+++ b/plugins/undertow/src/main/java/com/navercorp/pinpoint/plugin/undertow/interceptor/ConnectorsExecuteRootHandlerInterceptor.java\n@@ -107,7 +107,7 @@\n         return 0;\n     }\n \n-    private class ConnectorsArgumentValidator implements ArgumentValidator {\n+    private static class ConnectorsArgumentValidator implements ArgumentValidator {\n         @Override\n         public boolean validate(Object[] args) {\n             if (args == null) {\n", "projectName": "naver.pinpoint", "bugLineNum": 110, "bugNodeStartChar": 5058, "bugNodeLength": 441, "fixLineNum": 110, "fixNodeStartChar": 5058, "fixNodeLength": 448, "sourceBeforeFix": "2", "sourceAfterFix": "10"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "93a9fb352d11fb796964cbe4650b4a247d908b58", "fixCommitParentSHA1": "15816801657fdc9d3884b4a230045fd9ae53da4a", "bugFilePath": "profiler/src/main/java/com/navercorp/pinpoint/profiler/context/provider/plugin/JarPluginLoader.java", "fixPatch": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/profiler/context/provider/plugin/JarPluginLoader.java b/profiler/src/main/java/com/navercorp/pinpoint/profiler/context/provider/plugin/JarPluginLoader.java\nindex cb70af2..8df2c6e 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/profiler/context/provider/plugin/JarPluginLoader.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/profiler/context/provider/plugin/JarPluginLoader.java\n@@ -107,7 +107,7 @@\n         return file;\n     }\n \n-    public class Entry {\n+    public static class Entry {\n         private final URL filePath;\n         private final File file;\n         private final ClassLoader classLoader;\n", "projectName": "naver.pinpoint", "bugLineNum": 110, "bugNodeStartChar": 3991, "bugNodeLength": 720, "fixLineNum": 110, "fixNodeStartChar": 3991, "fixNodeLength": 727, "sourceBeforeFix": "1", "sourceAfterFix": "9"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "93a9fb352d11fb796964cbe4650b4a247d908b58", "fixCommitParentSHA1": "15816801657fdc9d3884b4a230045fd9ae53da4a", "bugFilePath": "profiler/src/main/java/com/navercorp/pinpoint/profiler/context/provider/plugin/Slf4jCommonLoggerFactory.java", "fixPatch": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/profiler/context/provider/plugin/Slf4jCommonLoggerFactory.java b/profiler/src/main/java/com/navercorp/pinpoint/profiler/context/provider/plugin/Slf4jCommonLoggerFactory.java\nindex e277ee1..bd261da 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/profiler/context/provider/plugin/Slf4jCommonLoggerFactory.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/profiler/context/provider/plugin/Slf4jCommonLoggerFactory.java\n@@ -33,7 +33,7 @@\n     }\n \n \n-    private class Sl4jCommonLogger implements CommonLogger {\n+    private static class Sl4jCommonLogger implements CommonLogger {\n \n         private final Logger logger;\n \n", "projectName": "naver.pinpoint", "bugLineNum": 36, "bugNodeStartChar": 1149, "bugNodeLength": 1300, "fixLineNum": 36, "fixNodeStartChar": 1149, "fixNodeLength": 1307, "sourceBeforeFix": "2", "sourceAfterFix": "10"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "93a9fb352d11fb796964cbe4650b4a247d908b58", "fixCommitParentSHA1": "15816801657fdc9d3884b4a230045fd9ae53da4a", "bugFilePath": "profiler/src/main/java/com/navercorp/pinpoint/profiler/monitor/metric/response/ReuseResponseTimeCollector.java", "fixPatch": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/profiler/monitor/metric/response/ReuseResponseTimeCollector.java b/profiler/src/main/java/com/navercorp/pinpoint/profiler/monitor/metric/response/ReuseResponseTimeCollector.java\nindex 5f456d0..91a1362 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/profiler/monitor/metric/response/ReuseResponseTimeCollector.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/profiler/monitor/metric/response/ReuseResponseTimeCollector.java\n@@ -57,7 +57,7 @@\n         return copy;\n     }\n \n-    private class ResponseTimeCollector {\n+    private static class ResponseTimeCollector {\n         private final Counter totalValue;\n         private final Counter transactionCount;\n         private final AtomicLong maxValue = new AtomicLong(0);\n", "projectName": "naver.pinpoint", "bugLineNum": 60, "bugNodeStartChar": 1984, "bugNodeLength": 1177, "fixLineNum": 60, "fixNodeStartChar": 1984, "fixNodeLength": 1184, "sourceBeforeFix": "2", "sourceAfterFix": "10"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "ed0f4cc76b722fb5470d2fa0cbcbae9597385b8d", "fixCommitParentSHA1": "bedd71bb01675ff051529ce23ef277c3aa9e4ac5", "bugFilePath": "profiler/src/main/java/com/navercorp/pinpoint/profiler/context/thrift/SpanThriftMessageConverter.java", "fixPatch": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/profiler/context/thrift/SpanThriftMessageConverter.java b/profiler/src/main/java/com/navercorp/pinpoint/profiler/context/thrift/SpanThriftMessageConverter.java\nindex 4920e05..41b11df 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/profiler/context/thrift/SpanThriftMessageConverter.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/profiler/context/thrift/SpanThriftMessageConverter.java\n@@ -204,7 +204,7 @@\n         if (spanEvent.getDepth() != -1) {\n             tSpanEvent.setDepth(spanEvent.getDepth());\n         }\n-        if (spanEvent.getNextSpanId() == -1) {\n+        if (spanEvent.getNextSpanId() != -1) {\n             tSpanEvent.setNextSpanId(spanEvent.getNextSpanId());\n         }\n \n", "projectName": "naver.pinpoint", "bugLineNum": 207, "bugNodeStartChar": 8707, "bugNodeLength": 31, "fixLineNum": 207, "fixNodeStartChar": 8707, "fixNodeLength": 31, "sourceBeforeFix": "spanEvent.getNextSpanId() == -1", "sourceAfterFix": "spanEvent.getNextSpanId() != -1"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "0283c451f04f498fc7c7f359ef020d6da46d2a0f", "fixCommitParentSHA1": "7a0aa62856356e10cdb55a2443cfa2930661ed90", "bugFilePath": "collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/JvmGcDetailedBoMapper.java", "fixPatch": "diff --git a/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/JvmGcDetailedBoMapper.java b/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/JvmGcDetailedBoMapper.java\nindex 06ea407..2d56166 100644\n--- a/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/JvmGcDetailedBoMapper.java\n+++ b/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/JvmGcDetailedBoMapper.java\n@@ -31,7 +31,7 @@\n     public JvmGcDetailedBo map(TJvmGcDetailed tJvmGcDetailed) {\n         JvmGcDetailedBo jvmGcDetailedBo = new JvmGcDetailedBo();\n         jvmGcDetailedBo.setGcNewCount(tJvmGcDetailed.getJvmGcNewCount());\n-        jvmGcDetailedBo.setGcNewTime(tJvmGcDetailed.getJvmGcNewCount());\n+        jvmGcDetailedBo.setGcNewTime(tJvmGcDetailed.getJvmGcNewTime());\n         jvmGcDetailedBo.setCodeCacheUsed(tJvmGcDetailed.getJvmPoolCodeCacheUsed());\n         jvmGcDetailedBo.setNewGenUsed(tJvmGcDetailed.getJvmPoolNewGenUsed());\n         jvmGcDetailedBo.setOldGenUsed(tJvmGcDetailed.getJvmPoolOldGenUsed());\n", "projectName": "naver.pinpoint", "bugLineNum": 34, "bugNodeStartChar": 1299, "bugNodeLength": 33, "fixLineNum": 34, "fixNodeStartChar": 1299, "fixNodeLength": 32, "sourceBeforeFix": "tJvmGcDetailed.getJvmGcNewCount()", "sourceAfterFix": "tJvmGcDetailed.getJvmGcNewTime()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "0283c451f04f498fc7c7f359ef020d6da46d2a0f", "fixCommitParentSHA1": "7a0aa62856356e10cdb55a2443cfa2930661ed90", "bugFilePath": "collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/JvmGcDetailedBoMapper.java", "fixPatch": "diff --git a/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/JvmGcDetailedBoMapper.java b/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/JvmGcDetailedBoMapper.java\nindex 06ea407..2d56166 100644\n--- a/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/JvmGcDetailedBoMapper.java\n+++ b/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/JvmGcDetailedBoMapper.java\n@@ -31,7 +31,7 @@\n     public JvmGcDetailedBo map(TJvmGcDetailed tJvmGcDetailed) {\n         JvmGcDetailedBo jvmGcDetailedBo = new JvmGcDetailedBo();\n         jvmGcDetailedBo.setGcNewCount(tJvmGcDetailed.getJvmGcNewCount());\n-        jvmGcDetailedBo.setGcNewTime(tJvmGcDetailed.getJvmGcNewCount());\n+        jvmGcDetailedBo.setGcNewTime(tJvmGcDetailed.getJvmGcNewTime());\n         jvmGcDetailedBo.setCodeCacheUsed(tJvmGcDetailed.getJvmPoolCodeCacheUsed());\n         jvmGcDetailedBo.setNewGenUsed(tJvmGcDetailed.getJvmPoolNewGenUsed());\n         jvmGcDetailedBo.setOldGenUsed(tJvmGcDetailed.getJvmPoolOldGenUsed());\n", "projectName": "naver.pinpoint", "bugLineNum": 34, "bugNodeStartChar": 1299, "bugNodeLength": 33, "fixLineNum": 34, "fixNodeStartChar": 1299, "fixNodeLength": 32, "sourceBeforeFix": "tJvmGcDetailed.getJvmGcNewCount()", "sourceAfterFix": "tJvmGcDetailed.getJvmGcNewTime()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "c0a9995fc0dea4243b05a627c8f56d771479ab3f", "fixCommitParentSHA1": "df4c76f833b30be4a0ceb9f373340eb0e583518d", "bugFilePath": "profiler-test/src/main/java/com/navercorp/pinpoint/test/PluginTestAgent.java", "fixPatch": "diff --git a/profiler-test/src/main/java/com/navercorp/pinpoint/test/PluginTestAgent.java b/profiler-test/src/main/java/com/navercorp/pinpoint/test/PluginTestAgent.java\nindex d1dc028..4a2cb7e 100644\n--- a/profiler-test/src/main/java/com/navercorp/pinpoint/test/PluginTestAgent.java\n+++ b/profiler-test/src/main/java/com/navercorp/pinpoint/test/PluginTestAgent.java\n@@ -744,7 +744,7 @@\n \n     private String getConstructorInfo(Constructor<?> constructor) {\n         Class<?>[] parameterTypes = constructor.getParameterTypes();\n-        String[] parameterTypeNames = JavaAssistUtils.getParameterType(parameterTypes);\n+        String[] parameterTypeNames = JavaAssistUtils.toPinpointParameterType(parameterTypes);\n \n         final String constructorSimpleName = MethodDescriptionUtils.getConstructorSimpleName(constructor);\n         return MethodDescriptionUtils.toJavaMethodDescriptor(constructor.getDeclaringClass().getName(), constructorSimpleName , parameterTypeNames);\n", "projectName": "naver.pinpoint", "bugLineNum": 747, "bugNodeStartChar": 28909, "bugNodeLength": 48, "fixLineNum": 747, "fixNodeStartChar": 28909, "fixNodeLength": 55, "sourceBeforeFix": "JavaAssistUtils.getParameterType(parameterTypes)", "sourceAfterFix": "JavaAssistUtils.toPinpointParameterType(parameterTypes)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "c0a9995fc0dea4243b05a627c8f56d771479ab3f", "fixCommitParentSHA1": "df4c76f833b30be4a0ceb9f373340eb0e583518d", "bugFilePath": "profiler-test/src/main/java/com/navercorp/pinpoint/test/PluginTestAgent.java", "fixPatch": "diff --git a/profiler-test/src/main/java/com/navercorp/pinpoint/test/PluginTestAgent.java b/profiler-test/src/main/java/com/navercorp/pinpoint/test/PluginTestAgent.java\nindex d1dc028..4a2cb7e 100644\n--- a/profiler-test/src/main/java/com/navercorp/pinpoint/test/PluginTestAgent.java\n+++ b/profiler-test/src/main/java/com/navercorp/pinpoint/test/PluginTestAgent.java\n@@ -744,7 +744,7 @@\n \n     private String getConstructorInfo(Constructor<?> constructor) {\n         Class<?>[] parameterTypes = constructor.getParameterTypes();\n-        String[] parameterTypeNames = JavaAssistUtils.getParameterType(parameterTypes);\n+        String[] parameterTypeNames = JavaAssistUtils.toPinpointParameterType(parameterTypes);\n \n         final String constructorSimpleName = MethodDescriptionUtils.getConstructorSimpleName(constructor);\n         return MethodDescriptionUtils.toJavaMethodDescriptor(constructor.getDeclaringClass().getName(), constructorSimpleName , parameterTypeNames);\n", "projectName": "naver.pinpoint", "bugLineNum": 747, "bugNodeStartChar": 28909, "bugNodeLength": 48, "fixLineNum": 747, "fixNodeStartChar": 28909, "fixNodeLength": 55, "sourceBeforeFix": "JavaAssistUtils.getParameterType(parameterTypes)", "sourceAfterFix": "JavaAssistUtils.toPinpointParameterType(parameterTypes)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "9b53590a89d388ca0af8b6535d5a873567b49ab4", "fixCommitParentSHA1": "6ecbcb61e643f28fb404d9e2497e7211bce156a9", "bugFilePath": "web/src/main/java/com/navercorp/pinpoint/web/vo/chart/TimeSeriesChartBuilder.java", "fixPatch": "diff --git a/web/src/main/java/com/navercorp/pinpoint/web/vo/chart/TimeSeriesChartBuilder.java b/web/src/main/java/com/navercorp/pinpoint/web/vo/chart/TimeSeriesChartBuilder.java\nindex dc00de3..15b47c4 100644\n--- a/web/src/main/java/com/navercorp/pinpoint/web/vo/chart/TimeSeriesChartBuilder.java\n+++ b/web/src/main/java/com/navercorp/pinpoint/web/vo/chart/TimeSeriesChartBuilder.java\n@@ -30,9 +30,9 @@\n public class TimeSeriesChartBuilder<P extends Point> {\n \n     private final TimeWindow timeWindow;\n-    private final Point.UncollectedPointCreater<P> uncollectedPointCreater;\n+    private final Point.UncollectedPointCreator<P> uncollectedPointCreator;\n \n-    public TimeSeriesChartBuilder(TimeWindow timeWindow, Point.UncollectedPointCreater<P> uncollectedPointCreator) {\n+    public TimeSeriesChartBuilder(TimeWindow timeWindow, Point.UncollectedPointCreator<P> uncollectedPointCreator) {\n         if (timeWindow.getWindowRangeCount() > Integer.MAX_VALUE) {\n             throw new IllegalArgumentException(\"range yields too many timeslots\");\n         }\n@@ -40,7 +40,7 @@\n             throw new NullPointerException(\"uncollectedPointCreator must not be null\");\n         }\n         this.timeWindow = timeWindow;\n-        this.uncollectedPointCreater = uncollectedPointCreator;\n+        this.uncollectedPointCreator = uncollectedPointCreator;\n     }\n \n     public Chart<P> build(List<P> sampledPoints) {\n@@ -62,7 +62,7 @@\n         int numTimeslots = (int) this.timeWindow.getWindowRangeCount();\n         List<P> points = new ArrayList<>(numTimeslots);\n         for (long timestamp : this.timeWindow) {\n-            points.add(uncollectedPointCreater.createUnCollectedPoint(timestamp));\n+            points.add(uncollectedPointCreator.createUnCollectedPoint(timestamp));\n         }\n         return points;\n     }\n", "projectName": "naver.pinpoint", "bugLineNum": 43, "bugNodeStartChar": 1524, "bugNodeLength": 28, "fixLineNum": 43, "fixNodeStartChar": 1524, "fixNodeLength": 28, "sourceBeforeFix": "this.uncollectedPointCreater", "sourceAfterFix": "this.uncollectedPointCreator"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "9b53590a89d388ca0af8b6535d5a873567b49ab4", "fixCommitParentSHA1": "6ecbcb61e643f28fb404d9e2497e7211bce156a9", "bugFilePath": "web/src/main/java/com/navercorp/pinpoint/web/vo/chart/TimeSeriesChartBuilder.java", "fixPatch": "diff --git a/web/src/main/java/com/navercorp/pinpoint/web/vo/chart/TimeSeriesChartBuilder.java b/web/src/main/java/com/navercorp/pinpoint/web/vo/chart/TimeSeriesChartBuilder.java\nindex dc00de3..15b47c4 100644\n--- a/web/src/main/java/com/navercorp/pinpoint/web/vo/chart/TimeSeriesChartBuilder.java\n+++ b/web/src/main/java/com/navercorp/pinpoint/web/vo/chart/TimeSeriesChartBuilder.java\n@@ -30,9 +30,9 @@\n public class TimeSeriesChartBuilder<P extends Point> {\n \n     private final TimeWindow timeWindow;\n-    private final Point.UncollectedPointCreater<P> uncollectedPointCreater;\n+    private final Point.UncollectedPointCreator<P> uncollectedPointCreator;\n \n-    public TimeSeriesChartBuilder(TimeWindow timeWindow, Point.UncollectedPointCreater<P> uncollectedPointCreator) {\n+    public TimeSeriesChartBuilder(TimeWindow timeWindow, Point.UncollectedPointCreator<P> uncollectedPointCreator) {\n         if (timeWindow.getWindowRangeCount() > Integer.MAX_VALUE) {\n             throw new IllegalArgumentException(\"range yields too many timeslots\");\n         }\n@@ -40,7 +40,7 @@\n             throw new NullPointerException(\"uncollectedPointCreator must not be null\");\n         }\n         this.timeWindow = timeWindow;\n-        this.uncollectedPointCreater = uncollectedPointCreator;\n+        this.uncollectedPointCreator = uncollectedPointCreator;\n     }\n \n     public Chart<P> build(List<P> sampledPoints) {\n@@ -62,7 +62,7 @@\n         int numTimeslots = (int) this.timeWindow.getWindowRangeCount();\n         List<P> points = new ArrayList<>(numTimeslots);\n         for (long timestamp : this.timeWindow) {\n-            points.add(uncollectedPointCreater.createUnCollectedPoint(timestamp));\n+            points.add(uncollectedPointCreator.createUnCollectedPoint(timestamp));\n         }\n         return points;\n     }\n", "projectName": "naver.pinpoint", "bugLineNum": 65, "bugNodeStartChar": 2422, "bugNodeLength": 57, "fixLineNum": 65, "fixNodeStartChar": 2422, "fixNodeLength": 57, "sourceBeforeFix": "uncollectedPointCreater.createUnCollectedPoint(timestamp)", "sourceAfterFix": "uncollectedPointCreator.createUnCollectedPoint(timestamp)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "9b53590a89d388ca0af8b6535d5a873567b49ab4", "fixCommitParentSHA1": "6ecbcb61e643f28fb404d9e2497e7211bce156a9", "bugFilePath": "web/src/main/java/com/navercorp/pinpoint/web/vo/chart/TimeSeriesChartBuilder.java", "fixPatch": "diff --git a/web/src/main/java/com/navercorp/pinpoint/web/vo/chart/TimeSeriesChartBuilder.java b/web/src/main/java/com/navercorp/pinpoint/web/vo/chart/TimeSeriesChartBuilder.java\nindex dc00de3..15b47c4 100644\n--- a/web/src/main/java/com/navercorp/pinpoint/web/vo/chart/TimeSeriesChartBuilder.java\n+++ b/web/src/main/java/com/navercorp/pinpoint/web/vo/chart/TimeSeriesChartBuilder.java\n@@ -30,9 +30,9 @@\n public class TimeSeriesChartBuilder<P extends Point> {\n \n     private final TimeWindow timeWindow;\n-    private final Point.UncollectedPointCreater<P> uncollectedPointCreater;\n+    private final Point.UncollectedPointCreator<P> uncollectedPointCreator;\n \n-    public TimeSeriesChartBuilder(TimeWindow timeWindow, Point.UncollectedPointCreater<P> uncollectedPointCreator) {\n+    public TimeSeriesChartBuilder(TimeWindow timeWindow, Point.UncollectedPointCreator<P> uncollectedPointCreator) {\n         if (timeWindow.getWindowRangeCount() > Integer.MAX_VALUE) {\n             throw new IllegalArgumentException(\"range yields too many timeslots\");\n         }\n@@ -40,7 +40,7 @@\n             throw new NullPointerException(\"uncollectedPointCreator must not be null\");\n         }\n         this.timeWindow = timeWindow;\n-        this.uncollectedPointCreater = uncollectedPointCreator;\n+        this.uncollectedPointCreator = uncollectedPointCreator;\n     }\n \n     public Chart<P> build(List<P> sampledPoints) {\n@@ -62,7 +62,7 @@\n         int numTimeslots = (int) this.timeWindow.getWindowRangeCount();\n         List<P> points = new ArrayList<>(numTimeslots);\n         for (long timestamp : this.timeWindow) {\n-            points.add(uncollectedPointCreater.createUnCollectedPoint(timestamp));\n+            points.add(uncollectedPointCreator.createUnCollectedPoint(timestamp));\n         }\n         return points;\n     }\n", "projectName": "naver.pinpoint", "bugLineNum": 65, "bugNodeStartChar": 2422, "bugNodeLength": 57, "fixLineNum": 65, "fixNodeStartChar": 2422, "fixNodeLength": 57, "sourceBeforeFix": "uncollectedPointCreater.createUnCollectedPoint(timestamp)", "sourceAfterFix": "uncollectedPointCreator.createUnCollectedPoint(timestamp)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "2a88a3de65a60011e86c05a4eb31182521fc4544", "fixCommitParentSHA1": "58060a963c7a947262df21e34fe3beff0cdaf09c", "bugFilePath": "plugins/vertx/src/main/java/com/navercorp/pinpoint/plugin/vertx/interceptor/AsyncContextSpanEventEndPointInterceptor.java", "fixPatch": "diff --git a/plugins/vertx/src/main/java/com/navercorp/pinpoint/plugin/vertx/interceptor/AsyncContextSpanEventEndPointInterceptor.java b/plugins/vertx/src/main/java/com/navercorp/pinpoint/plugin/vertx/interceptor/AsyncContextSpanEventEndPointInterceptor.java\nindex ffecf2b..3072a6d 100644\n--- a/plugins/vertx/src/main/java/com/navercorp/pinpoint/plugin/vertx/interceptor/AsyncContextSpanEventEndPointInterceptor.java\n+++ b/plugins/vertx/src/main/java/com/navercorp/pinpoint/plugin/vertx/interceptor/AsyncContextSpanEventEndPointInterceptor.java\n@@ -99,7 +99,7 @@\n             logger.debug(\"Asynchronous invocation. asyncContext={}\", asyncContext);\n         }\n \n-        final Trace trace = asyncContext.continueAsyncTraceObject();\n+        final Trace trace = asyncContext.currentAsyncTraceObject();\n         if (trace == null) {\n             return;\n         }\n", "projectName": "naver.pinpoint", "bugLineNum": 102, "bugNodeStartChar": 3983, "bugNodeLength": 39, "fixLineNum": 102, "fixNodeStartChar": 3983, "fixNodeLength": 38, "sourceBeforeFix": "asyncContext.continueAsyncTraceObject()", "sourceAfterFix": "asyncContext.currentAsyncTraceObject()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "2a88a3de65a60011e86c05a4eb31182521fc4544", "fixCommitParentSHA1": "58060a963c7a947262df21e34fe3beff0cdaf09c", "bugFilePath": "plugins/vertx/src/main/java/com/navercorp/pinpoint/plugin/vertx/interceptor/AsyncContextSpanEventEndPointInterceptor.java", "fixPatch": "diff --git a/plugins/vertx/src/main/java/com/navercorp/pinpoint/plugin/vertx/interceptor/AsyncContextSpanEventEndPointInterceptor.java b/plugins/vertx/src/main/java/com/navercorp/pinpoint/plugin/vertx/interceptor/AsyncContextSpanEventEndPointInterceptor.java\nindex ffecf2b..3072a6d 100644\n--- a/plugins/vertx/src/main/java/com/navercorp/pinpoint/plugin/vertx/interceptor/AsyncContextSpanEventEndPointInterceptor.java\n+++ b/plugins/vertx/src/main/java/com/navercorp/pinpoint/plugin/vertx/interceptor/AsyncContextSpanEventEndPointInterceptor.java\n@@ -99,7 +99,7 @@\n             logger.debug(\"Asynchronous invocation. asyncContext={}\", asyncContext);\n         }\n \n-        final Trace trace = asyncContext.continueAsyncTraceObject();\n+        final Trace trace = asyncContext.currentAsyncTraceObject();\n         if (trace == null) {\n             return;\n         }\n", "projectName": "naver.pinpoint", "bugLineNum": 102, "bugNodeStartChar": 3983, "bugNodeLength": 39, "fixLineNum": 102, "fixNodeStartChar": 3983, "fixNodeLength": 38, "sourceBeforeFix": "asyncContext.continueAsyncTraceObject()", "sourceAfterFix": "asyncContext.currentAsyncTraceObject()"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "6bcc304e29dc9bd1052eecb504711182ed78d39a", "fixCommitParentSHA1": "18a23493f1380896f29b3e8b3137a3b7dc089ea2", "bugFilePath": "plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/NettyPlugin.java", "fixPatch": "diff --git a/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/NettyPlugin.java b/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/NettyPlugin.java\nindex 26354ca..7503dcd 100644\n--- a/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/NettyPlugin.java\n+++ b/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/NettyPlugin.java\n@@ -114,7 +114,7 @@\n \n             final InstrumentMethod writeMethod2 = InstrumentUtils.findMethod(target, \"write\", \"java.lang.Object\", \"io.netty.channel.ChannelPromise\");\n             if (writeMethod2 != null) {\n-                writeMethod1.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PIPELINE_WRITE, NettyConstants.SCOPE_WRITE, ExecutionPolicy.BOUNDARY);\n+                writeMethod2.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PIPELINE_WRITE, NettyConstants.SCOPE_WRITE, ExecutionPolicy.BOUNDARY);\n             }\n \n             final InstrumentMethod writeAndFlushMethod1 = InstrumentUtils.findMethod(target, \"writeAndFlush\", \"java.lang.Object\");\n@@ -168,7 +168,7 @@\n \n             final InstrumentMethod addListenerMethod2 = InstrumentUtils.findMethod(target, \"addListeners\", \"io.netty.util.concurrent.GenericFutureListener[]\");\n             if (addListenerMethod2 != null) {\n-                addListenerMethod1.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PROMISE_ADD_LISTENER, NettyConstants.SCOPE, ExecutionPolicy.BOUNDARY);\n+                addListenerMethod2.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PROMISE_ADD_LISTENER, NettyConstants.SCOPE, ExecutionPolicy.BOUNDARY);\n             }\n \n             return target.toBytecode();\n", "projectName": "naver.pinpoint", "bugLineNum": 117, "bugNodeStartChar": 5867, "bugNodeLength": 138, "fixLineNum": 117, "fixNodeStartChar": 5867, "fixNodeLength": 138, "sourceBeforeFix": "writeMethod1.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PIPELINE_WRITE,NettyConstants.SCOPE_WRITE,ExecutionPolicy.BOUNDARY)", "sourceAfterFix": "writeMethod2.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PIPELINE_WRITE,NettyConstants.SCOPE_WRITE,ExecutionPolicy.BOUNDARY)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "6bcc304e29dc9bd1052eecb504711182ed78d39a", "fixCommitParentSHA1": "18a23493f1380896f29b3e8b3137a3b7dc089ea2", "bugFilePath": "plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/NettyPlugin.java", "fixPatch": "diff --git a/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/NettyPlugin.java b/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/NettyPlugin.java\nindex 26354ca..7503dcd 100644\n--- a/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/NettyPlugin.java\n+++ b/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/NettyPlugin.java\n@@ -114,7 +114,7 @@\n \n             final InstrumentMethod writeMethod2 = InstrumentUtils.findMethod(target, \"write\", \"java.lang.Object\", \"io.netty.channel.ChannelPromise\");\n             if (writeMethod2 != null) {\n-                writeMethod1.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PIPELINE_WRITE, NettyConstants.SCOPE_WRITE, ExecutionPolicy.BOUNDARY);\n+                writeMethod2.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PIPELINE_WRITE, NettyConstants.SCOPE_WRITE, ExecutionPolicy.BOUNDARY);\n             }\n \n             final InstrumentMethod writeAndFlushMethod1 = InstrumentUtils.findMethod(target, \"writeAndFlush\", \"java.lang.Object\");\n@@ -168,7 +168,7 @@\n \n             final InstrumentMethod addListenerMethod2 = InstrumentUtils.findMethod(target, \"addListeners\", \"io.netty.util.concurrent.GenericFutureListener[]\");\n             if (addListenerMethod2 != null) {\n-                addListenerMethod1.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PROMISE_ADD_LISTENER, NettyConstants.SCOPE, ExecutionPolicy.BOUNDARY);\n+                addListenerMethod2.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PROMISE_ADD_LISTENER, NettyConstants.SCOPE, ExecutionPolicy.BOUNDARY);\n             }\n \n             return target.toBytecode();\n", "projectName": "naver.pinpoint", "bugLineNum": 117, "bugNodeStartChar": 5867, "bugNodeLength": 138, "fixLineNum": 117, "fixNodeStartChar": 5867, "fixNodeLength": 138, "sourceBeforeFix": "writeMethod1.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PIPELINE_WRITE,NettyConstants.SCOPE_WRITE,ExecutionPolicy.BOUNDARY)", "sourceAfterFix": "writeMethod2.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PIPELINE_WRITE,NettyConstants.SCOPE_WRITE,ExecutionPolicy.BOUNDARY)"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "6bcc304e29dc9bd1052eecb504711182ed78d39a", "fixCommitParentSHA1": "18a23493f1380896f29b3e8b3137a3b7dc089ea2", "bugFilePath": "plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/NettyPlugin.java", "fixPatch": "diff --git a/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/NettyPlugin.java b/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/NettyPlugin.java\nindex 26354ca..7503dcd 100644\n--- a/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/NettyPlugin.java\n+++ b/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/NettyPlugin.java\n@@ -114,7 +114,7 @@\n \n             final InstrumentMethod writeMethod2 = InstrumentUtils.findMethod(target, \"write\", \"java.lang.Object\", \"io.netty.channel.ChannelPromise\");\n             if (writeMethod2 != null) {\n-                writeMethod1.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PIPELINE_WRITE, NettyConstants.SCOPE_WRITE, ExecutionPolicy.BOUNDARY);\n+                writeMethod2.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PIPELINE_WRITE, NettyConstants.SCOPE_WRITE, ExecutionPolicy.BOUNDARY);\n             }\n \n             final InstrumentMethod writeAndFlushMethod1 = InstrumentUtils.findMethod(target, \"writeAndFlush\", \"java.lang.Object\");\n@@ -168,7 +168,7 @@\n \n             final InstrumentMethod addListenerMethod2 = InstrumentUtils.findMethod(target, \"addListeners\", \"io.netty.util.concurrent.GenericFutureListener[]\");\n             if (addListenerMethod2 != null) {\n-                addListenerMethod1.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PROMISE_ADD_LISTENER, NettyConstants.SCOPE, ExecutionPolicy.BOUNDARY);\n+                addListenerMethod2.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PROMISE_ADD_LISTENER, NettyConstants.SCOPE, ExecutionPolicy.BOUNDARY);\n             }\n \n             return target.toBytecode();\n", "projectName": "naver.pinpoint", "bugLineNum": 171, "bugNodeStartChar": 9082, "bugNodeLength": 144, "fixLineNum": 171, "fixNodeStartChar": 9082, "fixNodeLength": 144, "sourceBeforeFix": "addListenerMethod1.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PROMISE_ADD_LISTENER,NettyConstants.SCOPE,ExecutionPolicy.BOUNDARY)", "sourceAfterFix": "addListenerMethod2.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PROMISE_ADD_LISTENER,NettyConstants.SCOPE,ExecutionPolicy.BOUNDARY)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "6bcc304e29dc9bd1052eecb504711182ed78d39a", "fixCommitParentSHA1": "18a23493f1380896f29b3e8b3137a3b7dc089ea2", "bugFilePath": "plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/NettyPlugin.java", "fixPatch": "diff --git a/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/NettyPlugin.java b/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/NettyPlugin.java\nindex 26354ca..7503dcd 100644\n--- a/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/NettyPlugin.java\n+++ b/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/NettyPlugin.java\n@@ -114,7 +114,7 @@\n \n             final InstrumentMethod writeMethod2 = InstrumentUtils.findMethod(target, \"write\", \"java.lang.Object\", \"io.netty.channel.ChannelPromise\");\n             if (writeMethod2 != null) {\n-                writeMethod1.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PIPELINE_WRITE, NettyConstants.SCOPE_WRITE, ExecutionPolicy.BOUNDARY);\n+                writeMethod2.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PIPELINE_WRITE, NettyConstants.SCOPE_WRITE, ExecutionPolicy.BOUNDARY);\n             }\n \n             final InstrumentMethod writeAndFlushMethod1 = InstrumentUtils.findMethod(target, \"writeAndFlush\", \"java.lang.Object\");\n@@ -168,7 +168,7 @@\n \n             final InstrumentMethod addListenerMethod2 = InstrumentUtils.findMethod(target, \"addListeners\", \"io.netty.util.concurrent.GenericFutureListener[]\");\n             if (addListenerMethod2 != null) {\n-                addListenerMethod1.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PROMISE_ADD_LISTENER, NettyConstants.SCOPE, ExecutionPolicy.BOUNDARY);\n+                addListenerMethod2.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PROMISE_ADD_LISTENER, NettyConstants.SCOPE, ExecutionPolicy.BOUNDARY);\n             }\n \n             return target.toBytecode();\n", "projectName": "naver.pinpoint", "bugLineNum": 171, "bugNodeStartChar": 9082, "bugNodeLength": 144, "fixLineNum": 171, "fixNodeStartChar": 9082, "fixNodeLength": 144, "sourceBeforeFix": "addListenerMethod1.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PROMISE_ADD_LISTENER,NettyConstants.SCOPE,ExecutionPolicy.BOUNDARY)", "sourceAfterFix": "addListenerMethod2.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PROMISE_ADD_LISTENER,NettyConstants.SCOPE,ExecutionPolicy.BOUNDARY)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "823bfb98fed1336c299c463e74bb8c9b63a956c7", "fixCommitParentSHA1": "ecda7d7612f05630c2fc0882306084cf04e55a49", "bugFilePath": "rpc/src/main/java/com/navercorp/pinpoint/rpc/packet/stream/StreamPingPacket.java", "fixPatch": "diff --git a/rpc/src/main/java/com/navercorp/pinpoint/rpc/packet/stream/StreamPingPacket.java b/rpc/src/main/java/com/navercorp/pinpoint/rpc/packet/stream/StreamPingPacket.java\nindex 4bec6e6..bb2a7d1 100644\n--- a/rpc/src/main/java/com/navercorp/pinpoint/rpc/packet/stream/StreamPingPacket.java\n+++ b/rpc/src/main/java/com/navercorp/pinpoint/rpc/packet/stream/StreamPingPacket.java\n@@ -53,7 +53,7 @@\n     public static StreamPingPacket readBuffer(short packetType, ChannelBuffer buffer) {\r\n         assert packetType == PACKET_TYPE;\r\n \r\n-        if (buffer.readableBytes() < 4) {\r\n+        if (buffer.readableBytes() < 8) {\r\n             buffer.resetReaderIndex();\r\n             return null;\r\n         }\r\n", "projectName": "naver.pinpoint", "bugLineNum": 56, "bugNodeStartChar": 1696, "bugNodeLength": 26, "fixLineNum": 56, "fixNodeStartChar": 1641, "fixNodeLength": 26, "sourceBeforeFix": "buffer.readableBytes() < 4", "sourceAfterFix": "buffer.readableBytes() < 8"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "823bfb98fed1336c299c463e74bb8c9b63a956c7", "fixCommitParentSHA1": "ecda7d7612f05630c2fc0882306084cf04e55a49", "bugFilePath": "rpc/src/main/java/com/navercorp/pinpoint/rpc/packet/stream/StreamPongPacket.java", "fixPatch": "diff --git a/rpc/src/main/java/com/navercorp/pinpoint/rpc/packet/stream/StreamPongPacket.java b/rpc/src/main/java/com/navercorp/pinpoint/rpc/packet/stream/StreamPongPacket.java\nindex 37d8aec..e87118c 100644\n--- a/rpc/src/main/java/com/navercorp/pinpoint/rpc/packet/stream/StreamPongPacket.java\n+++ b/rpc/src/main/java/com/navercorp/pinpoint/rpc/packet/stream/StreamPongPacket.java\n@@ -53,7 +53,7 @@\n     public static StreamPongPacket readBuffer(short packetType, ChannelBuffer buffer) {\r\n         assert packetType == PACKET_TYPE;\r\n \r\n-        if (buffer.readableBytes() < 4) {\r\n+        if (buffer.readableBytes() < 8) {\r\n             buffer.resetReaderIndex();\r\n             return null;\r\n         }\r\n", "projectName": "naver.pinpoint", "bugLineNum": 56, "bugNodeStartChar": 1696, "bugNodeLength": 26, "fixLineNum": 56, "fixNodeStartChar": 1641, "fixNodeLength": 26, "sourceBeforeFix": "buffer.readableBytes() < 4", "sourceAfterFix": "buffer.readableBytes() < 8"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "b8108a370b039dbeccffad8c9b634f6ac85ed4a5", "fixCommitParentSHA1": "9b5d6555f6926a58420d3a17830a2d1e3edc9c00", "bugFilePath": "collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/TFAgentStatBatchMapper.java", "fixPatch": "diff --git a/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/TFAgentStatBatchMapper.java b/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/TFAgentStatBatchMapper.java\nindex d8b78d1..da7f421 100644\n--- a/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/TFAgentStatBatchMapper.java\n+++ b/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/TFAgentStatBatchMapper.java\n@@ -29,11 +29,11 @@\n  */\n public class TFAgentStatBatchMapper {\n     private final Logger logger = LoggerFactory.getLogger(this.getClass());\n-    public final TFAgentStatMappter tFAgentStatMappter = new TFAgentStatMappter();\n+    public final TFAgentStatMapper tFAgentStatMapper = new TFAgentStatMapper();\n \n     public TFAgentStatBatch map(AgentStatBo agentStatBo) {\n         try {\n-            List<TFAgentStat> tFAgentstatList = tFAgentStatMappter.map(agentStatBo);\n+            List<TFAgentStat> tFAgentstatList = tFAgentStatMapper.map(agentStatBo);\n             long startTimestamp = getStartTimestamp(agentStatBo);\n             TFAgentStatBatch tFAgentStatBatch = new TFAgentStatBatch(agentStatBo.getAgentId(), startTimestamp, tFAgentstatList);\n             return tFAgentStatBatch;\n", "projectName": "naver.pinpoint", "bugLineNum": 32, "bugNodeStartChar": 1141, "bugNodeLength": 78, "fixLineNum": 32, "fixNodeStartChar": 1141, "fixNodeLength": 75, "sourceBeforeFix": "public final TFAgentStatMappter tFAgentStatMappter=new TFAgentStatMappter(); ", "sourceAfterFix": "public final TFAgentStatMapper tFAgentStatMapper=new TFAgentStatMapper(); "}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "b8108a370b039dbeccffad8c9b634f6ac85ed4a5", "fixCommitParentSHA1": "9b5d6555f6926a58420d3a17830a2d1e3edc9c00", "bugFilePath": "collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/TFAgentStatBatchMapper.java", "fixPatch": "diff --git a/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/TFAgentStatBatchMapper.java b/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/TFAgentStatBatchMapper.java\nindex d8b78d1..da7f421 100644\n--- a/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/TFAgentStatBatchMapper.java\n+++ b/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/TFAgentStatBatchMapper.java\n@@ -29,11 +29,11 @@\n  */\n public class TFAgentStatBatchMapper {\n     private final Logger logger = LoggerFactory.getLogger(this.getClass());\n-    public final TFAgentStatMappter tFAgentStatMappter = new TFAgentStatMappter();\n+    public final TFAgentStatMapper tFAgentStatMapper = new TFAgentStatMapper();\n \n     public TFAgentStatBatch map(AgentStatBo agentStatBo) {\n         try {\n-            List<TFAgentStat> tFAgentstatList = tFAgentStatMappter.map(agentStatBo);\n+            List<TFAgentStat> tFAgentstatList = tFAgentStatMapper.map(agentStatBo);\n             long startTimestamp = getStartTimestamp(agentStatBo);\n             TFAgentStatBatch tFAgentStatBatch = new TFAgentStatBatch(agentStatBo.getAgentId(), startTimestamp, tFAgentstatList);\n             return tFAgentStatBatch;\n", "projectName": "naver.pinpoint", "bugLineNum": 36, "bugNodeStartChar": 1342, "bugNodeLength": 35, "fixLineNum": 36, "fixNodeStartChar": 1342, "fixNodeLength": 34, "sourceBeforeFix": "tFAgentStatMappter.map(agentStatBo)", "sourceAfterFix": "tFAgentStatMapper.map(agentStatBo)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "b8108a370b039dbeccffad8c9b634f6ac85ed4a5", "fixCommitParentSHA1": "9b5d6555f6926a58420d3a17830a2d1e3edc9c00", "bugFilePath": "collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/TFAgentStatBatchMapper.java", "fixPatch": "diff --git a/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/TFAgentStatBatchMapper.java b/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/TFAgentStatBatchMapper.java\nindex d8b78d1..da7f421 100644\n--- a/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/TFAgentStatBatchMapper.java\n+++ b/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/TFAgentStatBatchMapper.java\n@@ -29,11 +29,11 @@\n  */\n public class TFAgentStatBatchMapper {\n     private final Logger logger = LoggerFactory.getLogger(this.getClass());\n-    public final TFAgentStatMappter tFAgentStatMappter = new TFAgentStatMappter();\n+    public final TFAgentStatMapper tFAgentStatMapper = new TFAgentStatMapper();\n \n     public TFAgentStatBatch map(AgentStatBo agentStatBo) {\n         try {\n-            List<TFAgentStat> tFAgentstatList = tFAgentStatMappter.map(agentStatBo);\n+            List<TFAgentStat> tFAgentstatList = tFAgentStatMapper.map(agentStatBo);\n             long startTimestamp = getStartTimestamp(agentStatBo);\n             TFAgentStatBatch tFAgentStatBatch = new TFAgentStatBatch(agentStatBo.getAgentId(), startTimestamp, tFAgentstatList);\n             return tFAgentStatBatch;\n", "projectName": "naver.pinpoint", "bugLineNum": 36, "bugNodeStartChar": 1342, "bugNodeLength": 35, "fixLineNum": 36, "fixNodeStartChar": 1342, "fixNodeLength": 34, "sourceBeforeFix": "tFAgentStatMappter.map(agentStatBo)", "sourceAfterFix": "tFAgentStatMapper.map(agentStatBo)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "38ea061af4c43cfed21ad2733528374f61edf9eb", "fixCommitParentSHA1": "51c72032647640cc49a7a71e7a3d3164ccee65f9", "bugFilePath": "web/src/main/java/com/navercorp/pinpoint/web/applicationmap/appender/histogram/datasource/ResponseHistogramBuilderNodeHistogramDataSource.java", "fixPatch": "diff --git a/web/src/main/java/com/navercorp/pinpoint/web/applicationmap/appender/histogram/datasource/ResponseHistogramBuilderNodeHistogramDataSource.java b/web/src/main/java/com/navercorp/pinpoint/web/applicationmap/appender/histogram/datasource/ResponseHistogramBuilderNodeHistogramDataSource.java\nindex 3cd3347..30633da 100644\n--- a/web/src/main/java/com/navercorp/pinpoint/web/applicationmap/appender/histogram/datasource/ResponseHistogramBuilderNodeHistogramDataSource.java\n+++ b/web/src/main/java/com/navercorp/pinpoint/web/applicationmap/appender/histogram/datasource/ResponseHistogramBuilderNodeHistogramDataSource.java\n@@ -41,7 +41,7 @@\n     @Override\n     public NodeHistogram createNodeHistogram(Application application, Range range) {\n         List<ResponseTime> responseTimes = responseHistogramBuilder.getResponseTimeList(application);\n-        final NodeHistogram nodeHistogram = new NodeHistogram(application, range);\n+        final NodeHistogram nodeHistogram = new NodeHistogram(application, range, responseTimes);\n         return nodeHistogram;\n     }\n }\n", "projectName": "naver.pinpoint", "bugLineNum": 44, "bugNodeStartChar": 1767, "bugNodeLength": 37, "fixLineNum": 44, "fixNodeStartChar": 1767, "fixNodeLength": 52, "sourceBeforeFix": "new NodeHistogram(application,range)", "sourceAfterFix": "new NodeHistogram(application,range,responseTimes)"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "2d33b55fe052a4d63faffac8f3989c1c7d0febd1", "fixCommitParentSHA1": "b19d39339b665b6424b6cd4de7e7ba28471ff476", "bugFilePath": "web/src/main/java/com/navercorp/pinpoint/web/vo/LinkKey.java", "fixPatch": "diff --git a/web/src/main/java/com/navercorp/pinpoint/web/vo/LinkKey.java b/web/src/main/java/com/navercorp/pinpoint/web/vo/LinkKey.java\nindex 58bffa6..eb92600 100644\n--- a/web/src/main/java/com/navercorp/pinpoint/web/vo/LinkKey.java\n+++ b/web/src/main/java/com/navercorp/pinpoint/web/vo/LinkKey.java\n@@ -103,7 +103,7 @@\n     @Override\n     public int hashCode() {\n         final int hash = this.hash;\n-        if (hash == 0) {\n+        if (hash != 0) {\n             return hash;\n         }\n         int result = fromApplication.hashCode();\n", "projectName": "naver.pinpoint", "bugLineNum": 106, "bugNodeStartChar": 3274, "bugNodeLength": 9, "fixLineNum": 106, "fixNodeStartChar": 3274, "fixNodeLength": 9, "sourceBeforeFix": "hash == 0", "sourceAfterFix": "hash != 0"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "159190a6d6e5b4c27a78d2dd2f4659b6fd7df20a", "fixCommitParentSHA1": "5c97fa4eaa8099bd5111c134ddbd645c5ff8880f", "bugFilePath": "profiler/src/main/java/com/navercorp/pinpoint/profiler/sender/SpanStreamUdpSender.java", "fixPatch": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/profiler/sender/SpanStreamUdpSender.java b/profiler/src/main/java/com/navercorp/pinpoint/profiler/sender/SpanStreamUdpSender.java\nindex f62a93a..509356b 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/profiler/sender/SpanStreamUdpSender.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/profiler/sender/SpanStreamUdpSender.java\n@@ -64,7 +64,7 @@\n     }\n     \n     public SpanStreamUdpSender(String host, int port, String threadName, int queueSize, int timeout, int sendBufferSize) {\n-        this(host, port, threadName, queueSize, timeout, SEND_BUFFER_SIZE, DEFAULT_BUFFER_SIZE);\n+        this(host, port, threadName, queueSize, timeout, sendBufferSize, DEFAULT_BUFFER_SIZE);\n     }\n \n     public SpanStreamUdpSender(String host, int port, String threadName, int queueSize, int timeout, int sendBufferSize, int dataBufferSize) {\n", "projectName": "naver.pinpoint", "bugLineNum": 67, "bugNodeStartChar": 2516, "bugNodeLength": 88, "fixLineNum": 67, "fixNodeStartChar": 2516, "fixNodeLength": 86, "sourceBeforeFix": "this(host,port,threadName,queueSize,timeout,SEND_BUFFER_SIZE,DEFAULT_BUFFER_SIZE); ", "sourceAfterFix": "this(host,port,threadName,queueSize,timeout,sendBufferSize,DEFAULT_BUFFER_SIZE); "}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "2e39615c5c4b283d821aa3dba607a5d6d3fd856b", "fixCommitParentSHA1": "b4501922119e952e5ae0f862282c528c9379ebf7", "bugFilePath": "commons-server/src/main/java/com/navercorp/pinpoint/common/server/util/concurrent/DisruptorExecutorService.java", "fixPatch": "diff --git a/commons-server/src/main/java/com/navercorp/pinpoint/common/server/util/concurrent/DisruptorExecutorService.java b/commons-server/src/main/java/com/navercorp/pinpoint/common/server/util/concurrent/DisruptorExecutorService.java\nindex 5611570..c638f98 100644\n--- a/commons-server/src/main/java/com/navercorp/pinpoint/common/server/util/concurrent/DisruptorExecutorService.java\n+++ b/commons-server/src/main/java/com/navercorp/pinpoint/common/server/util/concurrent/DisruptorExecutorService.java\n@@ -182,7 +182,7 @@\n         return false;\n     }\n \n-    private class RunnableExecuteHandler implements WorkHandler<RunnableEvent> {\n+    private static class RunnableExecuteHandler implements WorkHandler<RunnableEvent> {\n \n         @Override\n         public void onEvent(RunnableEvent runnableEvent) throws Exception {\n", "projectName": "naver.pinpoint", "bugLineNum": 185, "bugNodeStartChar": 6517, "bugNodeLength": 232, "fixLineNum": 185, "fixNodeStartChar": 6517, "fixNodeLength": 239, "sourceBeforeFix": "2", "sourceAfterFix": "10"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "2e39615c5c4b283d821aa3dba607a5d6d3fd856b", "fixCommitParentSHA1": "b4501922119e952e5ae0f862282c528c9379ebf7", "bugFilePath": "web/src/main/java/com/navercorp/pinpoint/web/scatter/DotGroups.java", "fixPatch": "diff --git a/web/src/main/java/com/navercorp/pinpoint/web/scatter/DotGroups.java b/web/src/main/java/com/navercorp/pinpoint/web/scatter/DotGroups.java\nindex 31fb400..aff5f89 100644\n--- a/web/src/main/java/com/navercorp/pinpoint/web/scatter/DotGroups.java\n+++ b/web/src/main/java/com/navercorp/pinpoint/web/scatter/DotGroups.java\n@@ -146,7 +146,7 @@\n         }\n     }\n \n-    class Key {\n+    static class Key {\n \n         private final Coordinates coordinates;\n         private final int code;\n", "projectName": "naver.pinpoint", "bugLineNum": 149, "bugNodeStartChar": 4146, "bugNodeLength": 1150, "fixLineNum": 149, "fixNodeStartChar": 4146, "fixNodeLength": 1157, "sourceBeforeFix": "0", "sourceAfterFix": "8"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "55f6d19f6a4d254db1b280305ec1e3c196725d8e", "fixCommitParentSHA1": "b4501922119e952e5ae0f862282c528c9379ebf7", "bugFilePath": "commons-server/src/main/java/com/navercorp/pinpoint/common/server/util/concurrent/DisruptorExecutorService.java", "fixPatch": "diff --git a/commons-server/src/main/java/com/navercorp/pinpoint/common/server/util/concurrent/DisruptorExecutorService.java b/commons-server/src/main/java/com/navercorp/pinpoint/common/server/util/concurrent/DisruptorExecutorService.java\nindex 5611570..c638f98 100644\n--- a/commons-server/src/main/java/com/navercorp/pinpoint/common/server/util/concurrent/DisruptorExecutorService.java\n+++ b/commons-server/src/main/java/com/navercorp/pinpoint/common/server/util/concurrent/DisruptorExecutorService.java\n@@ -182,7 +182,7 @@\n         return false;\n     }\n \n-    private class RunnableExecuteHandler implements WorkHandler<RunnableEvent> {\n+    private static class RunnableExecuteHandler implements WorkHandler<RunnableEvent> {\n \n         @Override\n         public void onEvent(RunnableEvent runnableEvent) throws Exception {\n", "projectName": "naver.pinpoint", "bugLineNum": 185, "bugNodeStartChar": 6517, "bugNodeLength": 232, "fixLineNum": 185, "fixNodeStartChar": 6517, "fixNodeLength": 239, "sourceBeforeFix": "2", "sourceAfterFix": "10"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "55f6d19f6a4d254db1b280305ec1e3c196725d8e", "fixCommitParentSHA1": "b4501922119e952e5ae0f862282c528c9379ebf7", "bugFilePath": "web/src/main/java/com/navercorp/pinpoint/web/scatter/DotGroups.java", "fixPatch": "diff --git a/web/src/main/java/com/navercorp/pinpoint/web/scatter/DotGroups.java b/web/src/main/java/com/navercorp/pinpoint/web/scatter/DotGroups.java\nindex 31fb400..aff5f89 100644\n--- a/web/src/main/java/com/navercorp/pinpoint/web/scatter/DotGroups.java\n+++ b/web/src/main/java/com/navercorp/pinpoint/web/scatter/DotGroups.java\n@@ -146,7 +146,7 @@\n         }\n     }\n \n-    class Key {\n+    static class Key {\n \n         private final Coordinates coordinates;\n         private final int code;\n", "projectName": "naver.pinpoint", "bugLineNum": 149, "bugNodeStartChar": 4146, "bugNodeLength": 1150, "fixLineNum": 149, "fixNodeStartChar": 4146, "fixNodeLength": 1157, "sourceBeforeFix": "0", "sourceAfterFix": "8"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "41ff1f19d2188256f4c38928e7a5dd837c5d2edd", "fixCommitParentSHA1": "34bea749dd6061ff6e04e8761edd8074f19e3725", "bugFilePath": "commons/src/main/java/com/navercorp/pinpoint/common/buffer/FixedBuffer.java", "fixPatch": "diff --git a/commons/src/main/java/com/navercorp/pinpoint/common/buffer/FixedBuffer.java b/commons/src/main/java/com/navercorp/pinpoint/common/buffer/FixedBuffer.java\nindex dbcd0a2..f1e699e 100644\n--- a/commons/src/main/java/com/navercorp/pinpoint/common/buffer/FixedBuffer.java\n+++ b/commons/src/main/java/com/navercorp/pinpoint/common/buffer/FixedBuffer.java\n@@ -300,7 +300,7 @@\n     @Deprecated\n     @Override\n     public void put(final byte[] v) {\n-        put(v);\n+        putBytes(v);\n     }\n \n     @Override\n", "projectName": "naver.pinpoint", "bugLineNum": 303, "bugNodeStartChar": 7054, "bugNodeLength": 6, "fixLineNum": 303, "fixNodeStartChar": 7054, "fixNodeLength": 11, "sourceBeforeFix": "put(v)", "sourceAfterFix": "putBytes(v)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "41ff1f19d2188256f4c38928e7a5dd837c5d2edd", "fixCommitParentSHA1": "34bea749dd6061ff6e04e8761edd8074f19e3725", "bugFilePath": "commons/src/main/java/com/navercorp/pinpoint/common/buffer/FixedBuffer.java", "fixPatch": "diff --git a/commons/src/main/java/com/navercorp/pinpoint/common/buffer/FixedBuffer.java b/commons/src/main/java/com/navercorp/pinpoint/common/buffer/FixedBuffer.java\nindex dbcd0a2..f1e699e 100644\n--- a/commons/src/main/java/com/navercorp/pinpoint/common/buffer/FixedBuffer.java\n+++ b/commons/src/main/java/com/navercorp/pinpoint/common/buffer/FixedBuffer.java\n@@ -300,7 +300,7 @@\n     @Deprecated\n     @Override\n     public void put(final byte[] v) {\n-        put(v);\n+        putBytes(v);\n     }\n \n     @Override\n", "projectName": "naver.pinpoint", "bugLineNum": 303, "bugNodeStartChar": 7054, "bugNodeLength": 6, "fixLineNum": 303, "fixNodeStartChar": 7054, "fixNodeLength": 11, "sourceBeforeFix": "put(v)", "sourceAfterFix": "putBytes(v)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "48f7cc27d2a7f3f87ddd7642774e3d0c5be68de9", "fixCommitParentSHA1": "ce608fb94be3326c2ed029e06597a5f462ffc75d", "bugFilePath": "commons/src/main/java/com/navercorp/pinpoint/common/buffer/FixedBuffer.java", "fixPatch": "diff --git a/commons/src/main/java/com/navercorp/pinpoint/common/buffer/FixedBuffer.java b/commons/src/main/java/com/navercorp/pinpoint/common/buffer/FixedBuffer.java\nindex dbcd0a2..f1e699e 100644\n--- a/commons/src/main/java/com/navercorp/pinpoint/common/buffer/FixedBuffer.java\n+++ b/commons/src/main/java/com/navercorp/pinpoint/common/buffer/FixedBuffer.java\n@@ -300,7 +300,7 @@\n     @Deprecated\n     @Override\n     public void put(final byte[] v) {\n-        put(v);\n+        putBytes(v);\n     }\n \n     @Override\n", "projectName": "naver.pinpoint", "bugLineNum": 303, "bugNodeStartChar": 7054, "bugNodeLength": 6, "fixLineNum": 303, "fixNodeStartChar": 7054, "fixNodeLength": 11, "sourceBeforeFix": "put(v)", "sourceAfterFix": "putBytes(v)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "48f7cc27d2a7f3f87ddd7642774e3d0c5be68de9", "fixCommitParentSHA1": "ce608fb94be3326c2ed029e06597a5f462ffc75d", "bugFilePath": "commons/src/main/java/com/navercorp/pinpoint/common/buffer/FixedBuffer.java", "fixPatch": "diff --git a/commons/src/main/java/com/navercorp/pinpoint/common/buffer/FixedBuffer.java b/commons/src/main/java/com/navercorp/pinpoint/common/buffer/FixedBuffer.java\nindex dbcd0a2..f1e699e 100644\n--- a/commons/src/main/java/com/navercorp/pinpoint/common/buffer/FixedBuffer.java\n+++ b/commons/src/main/java/com/navercorp/pinpoint/common/buffer/FixedBuffer.java\n@@ -300,7 +300,7 @@\n     @Deprecated\n     @Override\n     public void put(final byte[] v) {\n-        put(v);\n+        putBytes(v);\n     }\n \n     @Override\n", "projectName": "naver.pinpoint", "bugLineNum": 303, "bugNodeStartChar": 7054, "bugNodeLength": 6, "fixLineNum": 303, "fixNodeStartChar": 7054, "fixNodeLength": 11, "sourceBeforeFix": "put(v)", "sourceAfterFix": "putBytes(v)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "d365b8d6749db89c4accb4419be17293cb07cbda", "fixCommitParentSHA1": "23d5cf31715368c32822a191b8e639d2ec253105", "bugFilePath": "agent/src/test/java/com/navercorp/pinpoint/plugin/cassandra/CassandraTestHelper.java", "fixPatch": "diff --git a/agent/src/test/java/com/navercorp/pinpoint/plugin/cassandra/CassandraTestHelper.java b/agent/src/test/java/com/navercorp/pinpoint/plugin/cassandra/CassandraTestHelper.java\nindex bea097f..b609d2d 100644\n--- a/agent/src/test/java/com/navercorp/pinpoint/plugin/cassandra/CassandraTestHelper.java\n+++ b/agent/src/test/java/com/navercorp/pinpoint/plugin/cassandra/CassandraTestHelper.java\n@@ -47,7 +47,7 @@\n     }\n \n     public static String getHost() {\n-        return DatabaseDescriptor.getListenAddress().getHostName();\n+        return DatabaseDescriptor.getListenAddress().getHostAddress();\n     }\n \n     public static int getNativeTransportPort() {\n", "projectName": "naver.pinpoint", "bugLineNum": 50, "bugNodeStartChar": 1815, "bugNodeLength": 51, "fixLineNum": 50, "fixNodeStartChar": 1815, "fixNodeLength": 54, "sourceBeforeFix": "DatabaseDescriptor.getListenAddress().getHostName()", "sourceAfterFix": "DatabaseDescriptor.getListenAddress().getHostAddress()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d365b8d6749db89c4accb4419be17293cb07cbda", "fixCommitParentSHA1": "23d5cf31715368c32822a191b8e639d2ec253105", "bugFilePath": "agent/src/test/java/com/navercorp/pinpoint/plugin/cassandra/CassandraTestHelper.java", "fixPatch": "diff --git a/agent/src/test/java/com/navercorp/pinpoint/plugin/cassandra/CassandraTestHelper.java b/agent/src/test/java/com/navercorp/pinpoint/plugin/cassandra/CassandraTestHelper.java\nindex bea097f..b609d2d 100644\n--- a/agent/src/test/java/com/navercorp/pinpoint/plugin/cassandra/CassandraTestHelper.java\n+++ b/agent/src/test/java/com/navercorp/pinpoint/plugin/cassandra/CassandraTestHelper.java\n@@ -47,7 +47,7 @@\n     }\n \n     public static String getHost() {\n-        return DatabaseDescriptor.getListenAddress().getHostName();\n+        return DatabaseDescriptor.getListenAddress().getHostAddress();\n     }\n \n     public static int getNativeTransportPort() {\n", "projectName": "naver.pinpoint", "bugLineNum": 50, "bugNodeStartChar": 1815, "bugNodeLength": 51, "fixLineNum": 50, "fixNodeStartChar": 1815, "fixNodeLength": 54, "sourceBeforeFix": "DatabaseDescriptor.getListenAddress().getHostName()", "sourceAfterFix": "DatabaseDescriptor.getListenAddress().getHostAddress()"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "b4545cb01ba2f21d11d8b10507fe65e9e8a6558d", "fixCommitParentSHA1": "ceaaf1e2f0486cf43b531ec972b5287772fa6388", "bugFilePath": "collector/src/main/java/com/navercorp/pinpoint/collector/cluster/zookeeper/ZookeeperProfilerClusterManager.java", "fixPatch": "diff --git a/collector/src/main/java/com/navercorp/pinpoint/collector/cluster/zookeeper/ZookeeperProfilerClusterManager.java b/collector/src/main/java/com/navercorp/pinpoint/collector/cluster/zookeeper/ZookeeperProfilerClusterManager.java\nindex e9c61cb..3c046aa 100644\n--- a/collector/src/main/java/com/navercorp/pinpoint/collector/cluster/zookeeper/ZookeeperProfilerClusterManager.java\n+++ b/collector/src/main/java/com/navercorp/pinpoint/collector/cluster/zookeeper/ZookeeperProfilerClusterManager.java\n@@ -156,7 +156,7 @@\n     }\r\n \r\n     public void initZookeeperClusterData() {\r\n-        profileCluster.clear();\r\n+        worker.clear();\r\n \r\n         synchronized (lock) {\r\n             List clusterPointList = profileCluster.getClusterPointList();\r\n", "projectName": "naver.pinpoint", "bugLineNum": 159, "bugNodeStartChar": 5948, "bugNodeLength": 22, "fixLineNum": 159, "fixNodeStartChar": 5790, "fixNodeLength": 14, "sourceBeforeFix": "profileCluster.clear()", "sourceAfterFix": "worker.clear()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "b4545cb01ba2f21d11d8b10507fe65e9e8a6558d", "fixCommitParentSHA1": "ceaaf1e2f0486cf43b531ec972b5287772fa6388", "bugFilePath": "collector/src/main/java/com/navercorp/pinpoint/collector/cluster/zookeeper/ZookeeperProfilerClusterManager.java", "fixPatch": "diff --git a/collector/src/main/java/com/navercorp/pinpoint/collector/cluster/zookeeper/ZookeeperProfilerClusterManager.java b/collector/src/main/java/com/navercorp/pinpoint/collector/cluster/zookeeper/ZookeeperProfilerClusterManager.java\nindex e9c61cb..3c046aa 100644\n--- a/collector/src/main/java/com/navercorp/pinpoint/collector/cluster/zookeeper/ZookeeperProfilerClusterManager.java\n+++ b/collector/src/main/java/com/navercorp/pinpoint/collector/cluster/zookeeper/ZookeeperProfilerClusterManager.java\n@@ -156,7 +156,7 @@\n     }\r\n \r\n     public void initZookeeperClusterData() {\r\n-        profileCluster.clear();\r\n+        worker.clear();\r\n \r\n         synchronized (lock) {\r\n             List clusterPointList = profileCluster.getClusterPointList();\r\n", "projectName": "naver.pinpoint", "bugLineNum": 159, "bugNodeStartChar": 5948, "bugNodeLength": 22, "fixLineNum": 159, "fixNodeStartChar": 5790, "fixNodeLength": 14, "sourceBeforeFix": "profileCluster.clear()", "sourceAfterFix": "worker.clear()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "59c498e520c50c99b06affb6b2ff96959ae9744e", "fixCommitParentSHA1": "dd7c6f23472ca9bf0a8eef571c694921113145ee", "bugFilePath": "bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/PinpointStarter.java", "fixPatch": "diff --git a/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/PinpointStarter.java b/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/PinpointStarter.java\nindex 056da38..7beb09d 100644\n--- a/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/PinpointStarter.java\n+++ b/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/PinpointStarter.java\n@@ -127,7 +127,7 @@\n             agentClassLoader.setBootClass(bootClass);\n             logger.info(\"pinpoint agent [\" + bootClass + \"] starting...\");\n \n-            AgentOption option = createAgentOption(agentArgs, instrumentation, profilerConfig, pluginJars, bootStrapCore, serviceTypeRegistryService, annotationKeyRegistryService, bootStrapCoreJar);\n+            AgentOption option = createAgentOption(agentArgs, instrumentation, profilerConfig, pluginJars, bootStrapCore, serviceTypeRegistryService, annotationKeyRegistryService);\n             Agent pinpointAgent = agentClassLoader.boot(option);\n             pinpointAgent.start();\n             registerShutdownHook(pinpointAgent);\n@@ -139,9 +139,9 @@\n         }\n     }\n \n-    private AgentOption createAgentOption(String agentArgs, Instrumentation instrumentation, ProfilerConfig profilerConfig, URL[] pluginJars, String bootStrapJarPath, ServiceTypeRegistryService serviceTypeRegistryService, AnnotationKeyRegistryService annotationKeyRegistryService, String bootStrapCoreJar) {\n+    private AgentOption createAgentOption(String agentArgs, Instrumentation instrumentation, ProfilerConfig profilerConfig, URL[] pluginJars, String bootStrapJarCorePath, ServiceTypeRegistryService serviceTypeRegistryService, AnnotationKeyRegistryService annotationKeyRegistryService) {\n \n-        return new DefaultAgentOption(agentArgs, instrumentation, profilerConfig, pluginJars, bootStrapJarPath, serviceTypeRegistryService, annotationKeyRegistryService);\n+        return new DefaultAgentOption(agentArgs, instrumentation, profilerConfig, pluginJars, bootStrapJarCorePath, serviceTypeRegistryService, annotationKeyRegistryService);\n     }\n \n     // for test\n", "projectName": "naver.pinpoint", "bugLineNum": 144, "bugNodeStartChar": 6407, "bugNodeLength": 154, "fixLineNum": 144, "fixNodeStartChar": 6407, "fixNodeLength": 158, "sourceBeforeFix": "new DefaultAgentOption(agentArgs,instrumentation,profilerConfig,pluginJars,bootStrapJarPath,serviceTypeRegistryService,annotationKeyRegistryService)", "sourceAfterFix": "new DefaultAgentOption(agentArgs,instrumentation,profilerConfig,pluginJars,bootStrapJarCorePath,serviceTypeRegistryService,annotationKeyRegistryService)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "59c498e520c50c99b06affb6b2ff96959ae9744e", "fixCommitParentSHA1": "dd7c6f23472ca9bf0a8eef571c694921113145ee", "bugFilePath": "profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjector.java", "fixPatch": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjector.java b/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjector.java\nindex bafcb5c..1733f61 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjector.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjector.java\n@@ -215,7 +215,7 @@\n             }\n         }\n         if (logger.isInfoEnabled()) {\n-            logger.debug(\"defineClass pluginClass:{} cl:{}\", className, classLoader);\n+            logger.info(\"defineClass pluginClass:{} cl:{}\", className, classLoader);\n         }\n         final byte[] bytes = ct.toBytecode();\n         return (Class<?>)DEFINE_CLASS.invoke(classLoader, ct.getName(), bytes, 0, bytes.length);\n", "projectName": "naver.pinpoint", "bugLineNum": 218, "bugNodeStartChar": 8928, "bugNodeLength": 72, "fixLineNum": 218, "fixNodeStartChar": 8928, "fixNodeLength": 71, "sourceBeforeFix": "logger.debug(\"defineClass pluginClass:{} cl:{}\",className,classLoader)", "sourceAfterFix": "logger.info(\"defineClass pluginClass:{} cl:{}\",className,classLoader)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "59c498e520c50c99b06affb6b2ff96959ae9744e", "fixCommitParentSHA1": "dd7c6f23472ca9bf0a8eef571c694921113145ee", "bugFilePath": "profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjector.java", "fixPatch": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjector.java b/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjector.java\nindex bafcb5c..1733f61 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjector.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjector.java\n@@ -215,7 +215,7 @@\n             }\n         }\n         if (logger.isInfoEnabled()) {\n-            logger.debug(\"defineClass pluginClass:{} cl:{}\", className, classLoader);\n+            logger.info(\"defineClass pluginClass:{} cl:{}\", className, classLoader);\n         }\n         final byte[] bytes = ct.toBytecode();\n         return (Class<?>)DEFINE_CLASS.invoke(classLoader, ct.getName(), bytes, 0, bytes.length);\n", "projectName": "naver.pinpoint", "bugLineNum": 218, "bugNodeStartChar": 8928, "bugNodeLength": 72, "fixLineNum": 218, "fixNodeStartChar": 8928, "fixNodeLength": 71, "sourceBeforeFix": "logger.debug(\"defineClass pluginClass:{} cl:{}\",className,classLoader)", "sourceAfterFix": "logger.info(\"defineClass pluginClass:{} cl:{}\",className,classLoader)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "e28e3cedad91e10c3c5ca9b1c22a82a16065e5bb", "fixCommitParentSHA1": "dd7c6f23472ca9bf0a8eef571c694921113145ee", "bugFilePath": "bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/PinpointStarter.java", "fixPatch": "diff --git a/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/PinpointStarter.java b/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/PinpointStarter.java\nindex 056da38..7beb09d 100644\n--- a/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/PinpointStarter.java\n+++ b/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/PinpointStarter.java\n@@ -127,7 +127,7 @@\n             agentClassLoader.setBootClass(bootClass);\n             logger.info(\"pinpoint agent [\" + bootClass + \"] starting...\");\n \n-            AgentOption option = createAgentOption(agentArgs, instrumentation, profilerConfig, pluginJars, bootStrapCore, serviceTypeRegistryService, annotationKeyRegistryService, bootStrapCoreJar);\n+            AgentOption option = createAgentOption(agentArgs, instrumentation, profilerConfig, pluginJars, bootStrapCore, serviceTypeRegistryService, annotationKeyRegistryService);\n             Agent pinpointAgent = agentClassLoader.boot(option);\n             pinpointAgent.start();\n             registerShutdownHook(pinpointAgent);\n@@ -139,9 +139,9 @@\n         }\n     }\n \n-    private AgentOption createAgentOption(String agentArgs, Instrumentation instrumentation, ProfilerConfig profilerConfig, URL[] pluginJars, String bootStrapJarPath, ServiceTypeRegistryService serviceTypeRegistryService, AnnotationKeyRegistryService annotationKeyRegistryService, String bootStrapCoreJar) {\n+    private AgentOption createAgentOption(String agentArgs, Instrumentation instrumentation, ProfilerConfig profilerConfig, URL[] pluginJars, String bootStrapJarCorePath, ServiceTypeRegistryService serviceTypeRegistryService, AnnotationKeyRegistryService annotationKeyRegistryService) {\n \n-        return new DefaultAgentOption(agentArgs, instrumentation, profilerConfig, pluginJars, bootStrapJarPath, serviceTypeRegistryService, annotationKeyRegistryService);\n+        return new DefaultAgentOption(agentArgs, instrumentation, profilerConfig, pluginJars, bootStrapJarCorePath, serviceTypeRegistryService, annotationKeyRegistryService);\n     }\n \n     // for test\n", "projectName": "naver.pinpoint", "bugLineNum": 144, "bugNodeStartChar": 6407, "bugNodeLength": 154, "fixLineNum": 144, "fixNodeStartChar": 6407, "fixNodeLength": 158, "sourceBeforeFix": "new DefaultAgentOption(agentArgs,instrumentation,profilerConfig,pluginJars,bootStrapJarPath,serviceTypeRegistryService,annotationKeyRegistryService)", "sourceAfterFix": "new DefaultAgentOption(agentArgs,instrumentation,profilerConfig,pluginJars,bootStrapJarCorePath,serviceTypeRegistryService,annotationKeyRegistryService)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "e28e3cedad91e10c3c5ca9b1c22a82a16065e5bb", "fixCommitParentSHA1": "dd7c6f23472ca9bf0a8eef571c694921113145ee", "bugFilePath": "profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjector.java", "fixPatch": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjector.java b/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjector.java\nindex bafcb5c..1733f61 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjector.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjector.java\n@@ -215,7 +215,7 @@\n             }\n         }\n         if (logger.isInfoEnabled()) {\n-            logger.debug(\"defineClass pluginClass:{} cl:{}\", className, classLoader);\n+            logger.info(\"defineClass pluginClass:{} cl:{}\", className, classLoader);\n         }\n         final byte[] bytes = ct.toBytecode();\n         return (Class<?>)DEFINE_CLASS.invoke(classLoader, ct.getName(), bytes, 0, bytes.length);\n", "projectName": "naver.pinpoint", "bugLineNum": 218, "bugNodeStartChar": 8928, "bugNodeLength": 72, "fixLineNum": 218, "fixNodeStartChar": 8928, "fixNodeLength": 71, "sourceBeforeFix": "logger.debug(\"defineClass pluginClass:{} cl:{}\",className,classLoader)", "sourceAfterFix": "logger.info(\"defineClass pluginClass:{} cl:{}\",className,classLoader)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "e28e3cedad91e10c3c5ca9b1c22a82a16065e5bb", "fixCommitParentSHA1": "dd7c6f23472ca9bf0a8eef571c694921113145ee", "bugFilePath": "profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjector.java", "fixPatch": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjector.java b/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjector.java\nindex bafcb5c..1733f61 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjector.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjector.java\n@@ -215,7 +215,7 @@\n             }\n         }\n         if (logger.isInfoEnabled()) {\n-            logger.debug(\"defineClass pluginClass:{} cl:{}\", className, classLoader);\n+            logger.info(\"defineClass pluginClass:{} cl:{}\", className, classLoader);\n         }\n         final byte[] bytes = ct.toBytecode();\n         return (Class<?>)DEFINE_CLASS.invoke(classLoader, ct.getName(), bytes, 0, bytes.length);\n", "projectName": "naver.pinpoint", "bugLineNum": 218, "bugNodeStartChar": 8928, "bugNodeLength": 72, "fixLineNum": 218, "fixNodeStartChar": 8928, "fixNodeLength": 71, "sourceBeforeFix": "logger.debug(\"defineClass pluginClass:{} cl:{}\",className,classLoader)", "sourceAfterFix": "logger.info(\"defineClass pluginClass:{} cl:{}\",className,classLoader)"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "706147277ab44d4d6a1483eca9f592446aa62993", "fixCommitParentSHA1": "b4ae08e35226d83b91b9279f0f8392d2172c3f05", "bugFilePath": "web/src/main/java/com/navercorp/pinpoint/web/view/TransactionInfoViewModel.java", "fixPatch": "diff --git a/web/src/main/java/com/navercorp/pinpoint/web/view/TransactionInfoViewModel.java b/web/src/main/java/com/navercorp/pinpoint/web/view/TransactionInfoViewModel.java\nindex 1cfd029..6981c91 100644\n--- a/web/src/main/java/com/navercorp/pinpoint/web/view/TransactionInfoViewModel.java\n+++ b/web/src/main/java/com/navercorp/pinpoint/web/view/TransactionInfoViewModel.java\n@@ -94,7 +94,7 @@\n \n     @JsonProperty(\"logPageUrl\")\n     public String getLogPageUrl() {\n-        if (logPageUrl != null || logPageUrl.length() > 0) {\n+        if (logPageUrl != null && logPageUrl.length() > 0) {\n             try {\n                 URL url = new URL(logPageUrl);\n                 StringBuilder sb = new StringBuilder();\n", "projectName": "naver.pinpoint", "bugLineNum": 97, "bugNodeStartChar": 2954, "bugNodeLength": 45, "fixLineNum": 97, "fixNodeStartChar": 2954, "fixNodeLength": 45, "sourceBeforeFix": "logPageUrl != null || logPageUrl.length() > 0", "sourceAfterFix": "logPageUrl != null && logPageUrl.length() > 0"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "d841140c230d298f1e3de1eb04307f65e3ce7935", "fixCommitParentSHA1": "18d68058b5e3f126a074bc021012e344cb308961", "bugFilePath": "plugins/jetty/src/main/java/com/navercorp/pinpoint/plugin/jetty/interceptor/Jetty8ServerHandleInterceptor.java", "fixPatch": "diff --git a/plugins/jetty/src/main/java/com/navercorp/pinpoint/plugin/jetty/interceptor/Jetty8ServerHandleInterceptor.java b/plugins/jetty/src/main/java/com/navercorp/pinpoint/plugin/jetty/interceptor/Jetty8ServerHandleInterceptor.java\nindex 9f3e1d0..076d640 100644\n--- a/plugins/jetty/src/main/java/com/navercorp/pinpoint/plugin/jetty/interceptor/Jetty8ServerHandleInterceptor.java\n+++ b/plugins/jetty/src/main/java/com/navercorp/pinpoint/plugin/jetty/interceptor/Jetty8ServerHandleInterceptor.java\n@@ -27,7 +27,7 @@\n \n \n             final Method getRequestMethod = getGetRequestMethod(object);\n-            if (getRequestMethod == null) {\n+            if (getRequestMethod != null) {\n                 final Request request = (Request) getRequestMethod.invoke(object);\n                 return request;\n             }\n", "projectName": "naver.pinpoint", "bugLineNum": 30, "bugNodeStartChar": 1060, "bugNodeLength": 24, "fixLineNum": 30, "fixNodeStartChar": 1060, "fixNodeLength": 24, "sourceBeforeFix": "getRequestMethod == null", "sourceAfterFix": "getRequestMethod != null"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "e386e1741968f03086a65d1474dfbaf712b67d2a", "fixCommitParentSHA1": "6250060d4f9bf77535b274b0a7d83a8bcb3497a1", "bugFilePath": "plugins/jetty/src/main/java/com/navercorp/pinpoint/plugin/jetty/interceptor/Jetty8ServerHandleInterceptor.java", "fixPatch": "diff --git a/plugins/jetty/src/main/java/com/navercorp/pinpoint/plugin/jetty/interceptor/Jetty8ServerHandleInterceptor.java b/plugins/jetty/src/main/java/com/navercorp/pinpoint/plugin/jetty/interceptor/Jetty8ServerHandleInterceptor.java\nindex 9f3e1d0..076d640 100644\n--- a/plugins/jetty/src/main/java/com/navercorp/pinpoint/plugin/jetty/interceptor/Jetty8ServerHandleInterceptor.java\n+++ b/plugins/jetty/src/main/java/com/navercorp/pinpoint/plugin/jetty/interceptor/Jetty8ServerHandleInterceptor.java\n@@ -27,7 +27,7 @@\n \n \n             final Method getRequestMethod = getGetRequestMethod(object);\n-            if (getRequestMethod == null) {\n+            if (getRequestMethod != null) {\n                 final Request request = (Request) getRequestMethod.invoke(object);\n                 return request;\n             }\n", "projectName": "naver.pinpoint", "bugLineNum": 30, "bugNodeStartChar": 1060, "bugNodeLength": 24, "fixLineNum": 30, "fixNodeStartChar": 1060, "fixNodeLength": 24, "sourceBeforeFix": "getRequestMethod == null", "sourceAfterFix": "getRequestMethod != null"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "1779a3cb8963c0fafbb61fbf8c0d61313166697f", "fixCommitParentSHA1": "a72d5fe17a90fbad870d750178ee3710c9625c81", "bugFilePath": "web/src/main/java/com/navercorp/pinpoint/web/controller/UserGroupController.java", "fixPatch": "diff --git a/web/src/main/java/com/navercorp/pinpoint/web/controller/UserGroupController.java b/web/src/main/java/com/navercorp/pinpoint/web/controller/UserGroupController.java\nindex 61e4afc..db42f09 100644\n--- a/web/src/main/java/com/navercorp/pinpoint/web/controller/UserGroupController.java\n+++ b/web/src/main/java/com/navercorp/pinpoint/web/controller/UserGroupController.java\n@@ -127,7 +127,7 @@\n     @RequestMapping(value = \"/member\", method = RequestMethod.POST)\n     @ResponseBody\n     public Map<String, String> insertUserGroupMember(@RequestBody UserGroupMember userGroupMember) {\n-        if (StringUtils.isEmpty(userGroupMember.getMemberId()) || StringUtils.isEmpty(userGroupMember.getMemberId())) {\n+        if (StringUtils.isEmpty(userGroupMember.getMemberId()) || StringUtils.isEmpty(userGroupMember.getUserGroupId())) {\n             Map<String, String> result = new HashMap<>();\n             result.put(\"errorCode\", \"500\");\n             result.put(\"errorMessage\", \"there is not userGroupId or memberId in params to insert user group member\");\n", "projectName": "naver.pinpoint", "bugLineNum": 130, "bugNodeStartChar": 5079, "bugNodeLength": 29, "fixLineNum": 130, "fixNodeStartChar": 5079, "fixNodeLength": 32, "sourceBeforeFix": "userGroupMember.getMemberId()", "sourceAfterFix": "userGroupMember.getUserGroupId()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "1779a3cb8963c0fafbb61fbf8c0d61313166697f", "fixCommitParentSHA1": "a72d5fe17a90fbad870d750178ee3710c9625c81", "bugFilePath": "web/src/main/java/com/navercorp/pinpoint/web/controller/UserGroupController.java", "fixPatch": "diff --git a/web/src/main/java/com/navercorp/pinpoint/web/controller/UserGroupController.java b/web/src/main/java/com/navercorp/pinpoint/web/controller/UserGroupController.java\nindex 61e4afc..db42f09 100644\n--- a/web/src/main/java/com/navercorp/pinpoint/web/controller/UserGroupController.java\n+++ b/web/src/main/java/com/navercorp/pinpoint/web/controller/UserGroupController.java\n@@ -127,7 +127,7 @@\n     @RequestMapping(value = \"/member\", method = RequestMethod.POST)\n     @ResponseBody\n     public Map<String, String> insertUserGroupMember(@RequestBody UserGroupMember userGroupMember) {\n-        if (StringUtils.isEmpty(userGroupMember.getMemberId()) || StringUtils.isEmpty(userGroupMember.getMemberId())) {\n+        if (StringUtils.isEmpty(userGroupMember.getMemberId()) || StringUtils.isEmpty(userGroupMember.getUserGroupId())) {\n             Map<String, String> result = new HashMap<>();\n             result.put(\"errorCode\", \"500\");\n             result.put(\"errorMessage\", \"there is not userGroupId or memberId in params to insert user group member\");\n", "projectName": "naver.pinpoint", "bugLineNum": 130, "bugNodeStartChar": 5079, "bugNodeLength": 29, "fixLineNum": 130, "fixNodeStartChar": 5079, "fixNodeLength": 32, "sourceBeforeFix": "userGroupMember.getMemberId()", "sourceAfterFix": "userGroupMember.getUserGroupId()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "f00ad0335ca7c7c265d27bff77774097365fcd09", "fixCommitParentSHA1": "a72d5fe17a90fbad870d750178ee3710c9625c81", "bugFilePath": "web/src/main/java/com/navercorp/pinpoint/web/controller/UserGroupController.java", "fixPatch": "diff --git a/web/src/main/java/com/navercorp/pinpoint/web/controller/UserGroupController.java b/web/src/main/java/com/navercorp/pinpoint/web/controller/UserGroupController.java\nindex 61e4afc..db42f09 100644\n--- a/web/src/main/java/com/navercorp/pinpoint/web/controller/UserGroupController.java\n+++ b/web/src/main/java/com/navercorp/pinpoint/web/controller/UserGroupController.java\n@@ -127,7 +127,7 @@\n     @RequestMapping(value = \"/member\", method = RequestMethod.POST)\n     @ResponseBody\n     public Map<String, String> insertUserGroupMember(@RequestBody UserGroupMember userGroupMember) {\n-        if (StringUtils.isEmpty(userGroupMember.getMemberId()) || StringUtils.isEmpty(userGroupMember.getMemberId())) {\n+        if (StringUtils.isEmpty(userGroupMember.getMemberId()) || StringUtils.isEmpty(userGroupMember.getUserGroupId())) {\n             Map<String, String> result = new HashMap<>();\n             result.put(\"errorCode\", \"500\");\n             result.put(\"errorMessage\", \"there is not userGroupId or memberId in params to insert user group member\");\n", "projectName": "naver.pinpoint", "bugLineNum": 130, "bugNodeStartChar": 5079, "bugNodeLength": 29, "fixLineNum": 130, "fixNodeStartChar": 5079, "fixNodeLength": 32, "sourceBeforeFix": "userGroupMember.getMemberId()", "sourceAfterFix": "userGroupMember.getUserGroupId()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "f00ad0335ca7c7c265d27bff77774097365fcd09", "fixCommitParentSHA1": "a72d5fe17a90fbad870d750178ee3710c9625c81", "bugFilePath": "web/src/main/java/com/navercorp/pinpoint/web/controller/UserGroupController.java", "fixPatch": "diff --git a/web/src/main/java/com/navercorp/pinpoint/web/controller/UserGroupController.java b/web/src/main/java/com/navercorp/pinpoint/web/controller/UserGroupController.java\nindex 61e4afc..db42f09 100644\n--- a/web/src/main/java/com/navercorp/pinpoint/web/controller/UserGroupController.java\n+++ b/web/src/main/java/com/navercorp/pinpoint/web/controller/UserGroupController.java\n@@ -127,7 +127,7 @@\n     @RequestMapping(value = \"/member\", method = RequestMethod.POST)\n     @ResponseBody\n     public Map<String, String> insertUserGroupMember(@RequestBody UserGroupMember userGroupMember) {\n-        if (StringUtils.isEmpty(userGroupMember.getMemberId()) || StringUtils.isEmpty(userGroupMember.getMemberId())) {\n+        if (StringUtils.isEmpty(userGroupMember.getMemberId()) || StringUtils.isEmpty(userGroupMember.getUserGroupId())) {\n             Map<String, String> result = new HashMap<>();\n             result.put(\"errorCode\", \"500\");\n             result.put(\"errorMessage\", \"there is not userGroupId or memberId in params to insert user group member\");\n", "projectName": "naver.pinpoint", "bugLineNum": 130, "bugNodeStartChar": 5079, "bugNodeLength": 29, "fixLineNum": 130, "fixNodeStartChar": 5079, "fixNodeLength": 32, "sourceBeforeFix": "userGroupMember.getMemberId()", "sourceAfterFix": "userGroupMember.getUserGroupId()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "30315bc85fc46b6fa08ededecdf1b9ebc781c7d1", "fixCommitParentSHA1": "df606e80ff905ae81d51192708ae9e409967c69d", "bugFilePath": "profiler/src/main/java/com/navercorp/pinpoint/profiler/monitor/codahale/tps/TransactionMetricCollector.java", "fixPatch": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/profiler/monitor/codahale/tps/TransactionMetricCollector.java b/profiler/src/main/java/com/navercorp/pinpoint/profiler/monitor/codahale/tps/TransactionMetricCollector.java\nindex d505a22..f52520d 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/profiler/monitor/codahale/tps/TransactionMetricCollector.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/profiler/monitor/codahale/tps/TransactionMetricCollector.java\n@@ -49,7 +49,7 @@\n         this.sampledNewGauge = (Gauge<Long>)MetricMonitorValues.getMetric(metrics, TRANSACTION_SAMPLED_NEW, UNSUPPORTED_GAUGE);\r\n         this.sampledContinuationGauge = (Gauge<Long>)MetricMonitorValues.getMetric(metrics, TRANSACTION_SAMPLED_CONTINUATION, UNSUPPORTED_GAUGE);\r\n         this.unsampledNewGauge = (Gauge<Long>)MetricMonitorValues.getMetric(metrics, TRANSACTION_UNSAMPLED_NEW, UNSUPPORTED_GAUGE);\r\n-        this.unsampledContinuationGuage = (Gauge<Long>)MetricMonitorValues.getMetric(metrics, TRANSACTION_UNSAMPLED_NEW, UNSUPPORTED_GAUGE);\r\n+        this.unsampledContinuationGuage = (Gauge<Long>)MetricMonitorValues.getMetric(metrics, TRANSACTION_UNSAMPLED_CONTINUATION, UNSUPPORTED_GAUGE);\r\n     }\r\n \r\n     @Override\r\n", "projectName": "naver.pinpoint", "bugLineNum": 52, "bugNodeStartChar": 2493, "bugNodeLength": 84, "fixLineNum": 52, "fixNodeStartChar": 2442, "fixNodeLength": 93, "sourceBeforeFix": "MetricMonitorValues.getMetric(metrics,TRANSACTION_UNSAMPLED_NEW,UNSUPPORTED_GAUGE)", "sourceAfterFix": "MetricMonitorValues.getMetric(metrics,TRANSACTION_UNSAMPLED_CONTINUATION,UNSUPPORTED_GAUGE)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "2cc7a9186af5b7cb9c7f6cccc33fd20e46ba9e16", "fixCommitParentSHA1": "df606e80ff905ae81d51192708ae9e409967c69d", "bugFilePath": "profiler/src/main/java/com/navercorp/pinpoint/profiler/monitor/codahale/tps/TransactionMetricCollector.java", "fixPatch": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/profiler/monitor/codahale/tps/TransactionMetricCollector.java b/profiler/src/main/java/com/navercorp/pinpoint/profiler/monitor/codahale/tps/TransactionMetricCollector.java\nindex d505a22..f52520d 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/profiler/monitor/codahale/tps/TransactionMetricCollector.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/profiler/monitor/codahale/tps/TransactionMetricCollector.java\n@@ -49,7 +49,7 @@\n         this.sampledNewGauge = (Gauge<Long>)MetricMonitorValues.getMetric(metrics, TRANSACTION_SAMPLED_NEW, UNSUPPORTED_GAUGE);\r\n         this.sampledContinuationGauge = (Gauge<Long>)MetricMonitorValues.getMetric(metrics, TRANSACTION_SAMPLED_CONTINUATION, UNSUPPORTED_GAUGE);\r\n         this.unsampledNewGauge = (Gauge<Long>)MetricMonitorValues.getMetric(metrics, TRANSACTION_UNSAMPLED_NEW, UNSUPPORTED_GAUGE);\r\n-        this.unsampledContinuationGuage = (Gauge<Long>)MetricMonitorValues.getMetric(metrics, TRANSACTION_UNSAMPLED_NEW, UNSUPPORTED_GAUGE);\r\n+        this.unsampledContinuationGuage = (Gauge<Long>)MetricMonitorValues.getMetric(metrics, TRANSACTION_UNSAMPLED_CONTINUATION, UNSUPPORTED_GAUGE);\r\n     }\r\n \r\n     @Override\r\n", "projectName": "naver.pinpoint", "bugLineNum": 52, "bugNodeStartChar": 2493, "bugNodeLength": 84, "fixLineNum": 52, "fixNodeStartChar": 2442, "fixNodeLength": 93, "sourceBeforeFix": "MetricMonitorValues.getMetric(metrics,TRANSACTION_UNSAMPLED_NEW,UNSUPPORTED_GAUGE)", "sourceAfterFix": "MetricMonitorValues.getMetric(metrics,TRANSACTION_UNSAMPLED_CONTINUATION,UNSUPPORTED_GAUGE)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "362a274886616e092272ee480b2edcc3436bf281", "fixCommitParentSHA1": "8e7e8f319da5b5202f674da5253ad6aad9ca6e93", "bugFilePath": "profiler/src/main/java/com/navercorp/pinpoint/profiler/ClassFileTransformerDispatcher.java", "fixPatch": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/profiler/ClassFileTransformerDispatcher.java b/profiler/src/main/java/com/navercorp/pinpoint/profiler/ClassFileTransformerDispatcher.java\nindex bfcd8b4..9499d4f 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/profiler/ClassFileTransformerDispatcher.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/profiler/ClassFileTransformerDispatcher.java\n@@ -45,7 +45,7 @@\n     private final ClassLoader agentClassLoader = this.getClass().getClassLoader();\n \n     private final TransformerRegistry transformerRegistry;\n-    private final DynamicTrnasformerRegistry dynamicTransformerRegistry;\n+    private final DynamicTransformerRegistry dynamicTransformerRegistry;\n     \n     private final DefaultProfilerPluginContext globalContext;    \n     private final Filter<String> debugTargetFilter;\n", "projectName": "naver.pinpoint", "bugLineNum": 48, "bugNodeStartChar": 2018, "bugNodeLength": 68, "fixLineNum": 48, "fixNodeStartChar": 2018, "fixNodeLength": 68, "sourceBeforeFix": "private final DynamicTrnasformerRegistry dynamicTransformerRegistry; ", "sourceAfterFix": "private final DynamicTransformerRegistry dynamicTransformerRegistry; "}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "362a274886616e092272ee480b2edcc3436bf281", "fixCommitParentSHA1": "8e7e8f319da5b5202f674da5253ad6aad9ca6e93", "bugFilePath": "profiler/src/main/java/com/navercorp/pinpoint/profiler/DefaultDynamicTransformerRegistry.java", "fixPatch": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/profiler/DefaultDynamicTransformerRegistry.java b/profiler/src/main/java/com/navercorp/pinpoint/profiler/DefaultDynamicTransformerRegistry.java\nindex e3c3d71..680be99 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/profiler/DefaultDynamicTransformerRegistry.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/profiler/DefaultDynamicTransformerRegistry.java\n@@ -24,7 +24,7 @@\n import org.slf4j.LoggerFactory;\n \n \n-public class DefaultDynamicTransformerRegistry implements DynamicTrnasformerRegistry {\n+public class DefaultDynamicTransformerRegistry implements DynamicTransformerRegistry {\n \n     private final Logger logger = LoggerFactory.getLogger(this.getClass());\n     private final ConcurrentMap<TransformerKey, ClassFileTransformer> transformerMap = new ConcurrentHashMap<TransformerKey, ClassFileTransformer>();\n", "projectName": "naver.pinpoint", "bugLineNum": 27, "bugNodeStartChar": 838, "bugNodeLength": 2892, "fixLineNum": 27, "fixNodeStartChar": 838, "fixNodeLength": 2892, "sourceBeforeFix": "public class DefaultDynamicTransformerRegistry implements DynamicTrnasformerRegistry {   private final Logger logger=LoggerFactory.getLogger(this.getClass());   private final ConcurrentMap<TransformerKey,ClassFileTransformer> transformerMap=new ConcurrentHashMap<TransformerKey,ClassFileTransformer>();   @Override public void onRetransformRequest(  Class<?> target,  final ClassFileTransformer transformer){     add(target.getClassLoader(),target.getName(),transformer);     if (logger.isInfoEnabled()) {       logger.info(\"added retransformer classLoader: {}, class: {}, registry size: {}\",target.getClassLoader(),target.getName(),transformerMap.size());     }   }   @Override public void onTransformRequest(  ClassLoader classLoader,  String targetClassName,  ClassFileTransformer transformer){     add(classLoader,targetClassName,transformer);     if (logger.isInfoEnabled()) {       logger.info(\"added dynamic transformer classLoader: {}, className: {}, registry size: {}\",classLoader,targetClassName,transformerMap.size());     }   }   private void add(  ClassLoader classLoader,  String targetClassName,  ClassFileTransformer transformer){     ClassFileTransformer prev=transformerMap.putIfAbsent(new TransformerKey(classLoader,targetClassName.replace('.','/')),transformer);     if (prev != null) {       throw new ProfilerException(\"Transformer already exists. classLoader: \" + classLoader + \", target: \"+ targetClassName+ \", transformer: \"+ prev);     }   }   @Override public ClassFileTransformer getTransformer(  ClassLoader classLoader,  String targetClassName){     if (transformerMap.isEmpty()) {       return null;     }     ClassFileTransformer transformer=transformerMap.remove(new TransformerKey(classLoader,targetClassName));     if (logger.isDebugEnabled()) {       logger.info(\"removed dynamic transformer classLoader: {}, className: {}, registry size: {}\",classLoader,targetClassName,transformerMap.size());     }     return transformer;   } private static final class TransformerKey {     private final ClassLoader classLoader;     private final String targetClassName;     public TransformerKey(    ClassLoader classLoader,    String targetClassName){       this.classLoader=classLoader;       this.targetClassName=targetClassName;     }     @Override public int hashCode(){       return classLoader.hashCode() * 31 + targetClassName.hashCode();     }     @Override public boolean equals(    Object obj){       TransformerKey other=(TransformerKey)obj;       return this.classLoader.equals(other.classLoader) && this.targetClassName.equals(other.targetClassName);     }   } } ", "sourceAfterFix": "public class DefaultDynamicTransformerRegistry implements DynamicTransformerRegistry {   private final Logger logger=LoggerFactory.getLogger(this.getClass());   private final ConcurrentMap<TransformerKey,ClassFileTransformer> transformerMap=new ConcurrentHashMap<TransformerKey,ClassFileTransformer>();   @Override public void onRetransformRequest(  Class<?> target,  final ClassFileTransformer transformer){     add(target.getClassLoader(),target.getName(),transformer);     if (logger.isInfoEnabled()) {       logger.info(\"added retransformer classLoader: {}, class: {}, registry size: {}\",target.getClassLoader(),target.getName(),transformerMap.size());     }   }   @Override public void onTransformRequest(  ClassLoader classLoader,  String targetClassName,  ClassFileTransformer transformer){     add(classLoader,targetClassName,transformer);     if (logger.isInfoEnabled()) {       logger.info(\"added dynamic transformer classLoader: {}, className: {}, registry size: {}\",classLoader,targetClassName,transformerMap.size());     }   }   private void add(  ClassLoader classLoader,  String targetClassName,  ClassFileTransformer transformer){     ClassFileTransformer prev=transformerMap.putIfAbsent(new TransformerKey(classLoader,targetClassName.replace('.','/')),transformer);     if (prev != null) {       throw new ProfilerException(\"Transformer already exists. classLoader: \" + classLoader + \", target: \"+ targetClassName+ \", transformer: \"+ prev);     }   }   @Override public ClassFileTransformer getTransformer(  ClassLoader classLoader,  String targetClassName){     if (transformerMap.isEmpty()) {       return null;     }     ClassFileTransformer transformer=transformerMap.remove(new TransformerKey(classLoader,targetClassName));     if (logger.isDebugEnabled()) {       logger.info(\"removed dynamic transformer classLoader: {}, className: {}, registry size: {}\",classLoader,targetClassName,transformerMap.size());     }     return transformer;   } private static final class TransformerKey {     private final ClassLoader classLoader;     private final String targetClassName;     public TransformerKey(    ClassLoader classLoader,    String targetClassName){       this.classLoader=classLoader;       this.targetClassName=targetClassName;     }     @Override public int hashCode(){       return classLoader.hashCode() * 31 + targetClassName.hashCode();     }     @Override public boolean equals(    Object obj){       TransformerKey other=(TransformerKey)obj;       return this.classLoader.equals(other.classLoader) && this.targetClassName.equals(other.targetClassName);     }   } } "}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "96a693e908733abaa7f93b4ffe21f435568bf329", "fixCommitParentSHA1": "30127d22d923ec4716ae2e6eecf44f8a8ebdd4eb", "bugFilePath": "profiler/src/main/java/com/navercorp/pinpoint/profiler/ClassFileTransformerDispatcher.java", "fixPatch": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/profiler/ClassFileTransformerDispatcher.java b/profiler/src/main/java/com/navercorp/pinpoint/profiler/ClassFileTransformerDispatcher.java\nindex bfcd8b4..9499d4f 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/profiler/ClassFileTransformerDispatcher.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/profiler/ClassFileTransformerDispatcher.java\n@@ -45,7 +45,7 @@\n     private final ClassLoader agentClassLoader = this.getClass().getClassLoader();\n \n     private final TransformerRegistry transformerRegistry;\n-    private final DynamicTrnasformerRegistry dynamicTransformerRegistry;\n+    private final DynamicTransformerRegistry dynamicTransformerRegistry;\n     \n     private final DefaultProfilerPluginContext globalContext;    \n     private final Filter<String> debugTargetFilter;\n", "projectName": "naver.pinpoint", "bugLineNum": 48, "bugNodeStartChar": 2018, "bugNodeLength": 68, "fixLineNum": 48, "fixNodeStartChar": 2018, "fixNodeLength": 68, "sourceBeforeFix": "private final DynamicTrnasformerRegistry dynamicTransformerRegistry; ", "sourceAfterFix": "private final DynamicTransformerRegistry dynamicTransformerRegistry; "}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "96a693e908733abaa7f93b4ffe21f435568bf329", "fixCommitParentSHA1": "30127d22d923ec4716ae2e6eecf44f8a8ebdd4eb", "bugFilePath": "profiler/src/main/java/com/navercorp/pinpoint/profiler/DefaultDynamicTransformerRegistry.java", "fixPatch": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/profiler/DefaultDynamicTransformerRegistry.java b/profiler/src/main/java/com/navercorp/pinpoint/profiler/DefaultDynamicTransformerRegistry.java\nindex e3c3d71..680be99 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/profiler/DefaultDynamicTransformerRegistry.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/profiler/DefaultDynamicTransformerRegistry.java\n@@ -24,7 +24,7 @@\n import org.slf4j.LoggerFactory;\n \n \n-public class DefaultDynamicTransformerRegistry implements DynamicTrnasformerRegistry {\n+public class DefaultDynamicTransformerRegistry implements DynamicTransformerRegistry {\n \n     private final Logger logger = LoggerFactory.getLogger(this.getClass());\n     private final ConcurrentMap<TransformerKey, ClassFileTransformer> transformerMap = new ConcurrentHashMap<TransformerKey, ClassFileTransformer>();\n", "projectName": "naver.pinpoint", "bugLineNum": 27, "bugNodeStartChar": 838, "bugNodeLength": 2892, "fixLineNum": 27, "fixNodeStartChar": 838, "fixNodeLength": 2892, "sourceBeforeFix": "public class DefaultDynamicTransformerRegistry implements DynamicTrnasformerRegistry {   private final Logger logger=LoggerFactory.getLogger(this.getClass());   private final ConcurrentMap<TransformerKey,ClassFileTransformer> transformerMap=new ConcurrentHashMap<TransformerKey,ClassFileTransformer>();   @Override public void onRetransformRequest(  Class<?> target,  final ClassFileTransformer transformer){     add(target.getClassLoader(),target.getName(),transformer);     if (logger.isInfoEnabled()) {       logger.info(\"added retransformer classLoader: {}, class: {}, registry size: {}\",target.getClassLoader(),target.getName(),transformerMap.size());     }   }   @Override public void onTransformRequest(  ClassLoader classLoader,  String targetClassName,  ClassFileTransformer transformer){     add(classLoader,targetClassName,transformer);     if (logger.isInfoEnabled()) {       logger.info(\"added dynamic transformer classLoader: {}, className: {}, registry size: {}\",classLoader,targetClassName,transformerMap.size());     }   }   private void add(  ClassLoader classLoader,  String targetClassName,  ClassFileTransformer transformer){     ClassFileTransformer prev=transformerMap.putIfAbsent(new TransformerKey(classLoader,targetClassName.replace('.','/')),transformer);     if (prev != null) {       throw new ProfilerException(\"Transformer already exists. classLoader: \" + classLoader + \", target: \"+ targetClassName+ \", transformer: \"+ prev);     }   }   @Override public ClassFileTransformer getTransformer(  ClassLoader classLoader,  String targetClassName){     if (transformerMap.isEmpty()) {       return null;     }     ClassFileTransformer transformer=transformerMap.remove(new TransformerKey(classLoader,targetClassName));     if (logger.isDebugEnabled()) {       logger.info(\"removed dynamic transformer classLoader: {}, className: {}, registry size: {}\",classLoader,targetClassName,transformerMap.size());     }     return transformer;   } private static final class TransformerKey {     private final ClassLoader classLoader;     private final String targetClassName;     public TransformerKey(    ClassLoader classLoader,    String targetClassName){       this.classLoader=classLoader;       this.targetClassName=targetClassName;     }     @Override public int hashCode(){       return classLoader.hashCode() * 31 + targetClassName.hashCode();     }     @Override public boolean equals(    Object obj){       TransformerKey other=(TransformerKey)obj;       return this.classLoader.equals(other.classLoader) && this.targetClassName.equals(other.targetClassName);     }   } } ", "sourceAfterFix": "public class DefaultDynamicTransformerRegistry implements DynamicTransformerRegistry {   private final Logger logger=LoggerFactory.getLogger(this.getClass());   private final ConcurrentMap<TransformerKey,ClassFileTransformer> transformerMap=new ConcurrentHashMap<TransformerKey,ClassFileTransformer>();   @Override public void onRetransformRequest(  Class<?> target,  final ClassFileTransformer transformer){     add(target.getClassLoader(),target.getName(),transformer);     if (logger.isInfoEnabled()) {       logger.info(\"added retransformer classLoader: {}, class: {}, registry size: {}\",target.getClassLoader(),target.getName(),transformerMap.size());     }   }   @Override public void onTransformRequest(  ClassLoader classLoader,  String targetClassName,  ClassFileTransformer transformer){     add(classLoader,targetClassName,transformer);     if (logger.isInfoEnabled()) {       logger.info(\"added dynamic transformer classLoader: {}, className: {}, registry size: {}\",classLoader,targetClassName,transformerMap.size());     }   }   private void add(  ClassLoader classLoader,  String targetClassName,  ClassFileTransformer transformer){     ClassFileTransformer prev=transformerMap.putIfAbsent(new TransformerKey(classLoader,targetClassName.replace('.','/')),transformer);     if (prev != null) {       throw new ProfilerException(\"Transformer already exists. classLoader: \" + classLoader + \", target: \"+ targetClassName+ \", transformer: \"+ prev);     }   }   @Override public ClassFileTransformer getTransformer(  ClassLoader classLoader,  String targetClassName){     if (transformerMap.isEmpty()) {       return null;     }     ClassFileTransformer transformer=transformerMap.remove(new TransformerKey(classLoader,targetClassName));     if (logger.isDebugEnabled()) {       logger.info(\"removed dynamic transformer classLoader: {}, className: {}, registry size: {}\",classLoader,targetClassName,transformerMap.size());     }     return transformer;   } private static final class TransformerKey {     private final ClassLoader classLoader;     private final String targetClassName;     public TransformerKey(    ClassLoader classLoader,    String targetClassName){       this.classLoader=classLoader;       this.targetClassName=targetClassName;     }     @Override public int hashCode(){       return classLoader.hashCode() * 31 + targetClassName.hashCode();     }     @Override public boolean equals(    Object obj){       TransformerKey other=(TransformerKey)obj;       return this.classLoader.equals(other.classLoader) && this.targetClassName.equals(other.targetClassName);     }   } } "}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "29c0169903314b08f810aedca121122017fa39ec", "fixCommitParentSHA1": "56ec398262f548268b436f906cac745314c36094", "bugFilePath": "profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/interceptor/InvokeAfterCodeGenerator.java", "fixPatch": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/interceptor/InvokeAfterCodeGenerator.java b/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/interceptor/InvokeAfterCodeGenerator.java\nindex ca8b941..46e20a0 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/interceptor/InvokeAfterCodeGenerator.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/interceptor/InvokeAfterCodeGenerator.java\n@@ -147,7 +147,7 @@\n     private void parameterBind(CodeBuilder builder, Class<?>[] interceptorParamTypes) {\n         int i = 0;\n         int argNum = targetMethod.getParameterTypes().length;\n-        int interceptorArgNum = interceptorParamTypes.length - 1;\n+        int interceptorArgNum = interceptorParamTypes.length - 3;\n         int matchNum = Math.min(argNum, interceptorArgNum);\n \n         for (; i < matchNum; i++) {\n", "projectName": "naver.pinpoint", "bugLineNum": 150, "bugNodeStartChar": 4992, "bugNodeLength": 32, "fixLineNum": 150, "fixNodeStartChar": 4992, "fixNodeLength": 32, "sourceBeforeFix": "interceptorParamTypes.length - 1", "sourceAfterFix": "interceptorParamTypes.length - 3"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "eec0eb1b562479c66cd8505be1901872be4475ec", "fixCommitParentSHA1": "c916e20c5c6ce08740f20f281aef497c7339c6dd", "bugFilePath": "profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JavassistClass.java", "fixPatch": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JavassistClass.java b/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JavassistClass.java\nindex 3735bc7..b7c8255 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JavassistClass.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JavassistClass.java\n@@ -525,7 +525,7 @@\n \n     @Override\n     public int addGroupedInterceptor(MethodFilter filter, String interceptorClassName, InterceptorGroup group, ExecutionPolicy executionPolicy) throws InstrumentException {\n-        return addGroupedInterceptor(filter, interceptorClassName, group, executionPolicy);\n+        return addGroupedInterceptor(filter, interceptorClassName, null, group, executionPolicy);\n     }\n \n     @Override\n", "projectName": "naver.pinpoint", "bugLineNum": 528, "bugNodeStartChar": 22370, "bugNodeLength": 75, "fixLineNum": 528, "fixNodeStartChar": 22370, "fixNodeLength": 81, "sourceBeforeFix": "addGroupedInterceptor(filter,interceptorClassName,group,executionPolicy)", "sourceAfterFix": "addGroupedInterceptor(filter,interceptorClassName,null,group,executionPolicy)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "34cacf11960087da8c36fb9d892210602b2e3668", "fixCommitParentSHA1": "6fc1908a7484056047ad45f5e0fc14578a3e1129", "bugFilePath": "profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JavassistClass.java", "fixPatch": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JavassistClass.java b/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JavassistClass.java\nindex 3735bc7..b7c8255 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JavassistClass.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JavassistClass.java\n@@ -525,7 +525,7 @@\n \n     @Override\n     public int addGroupedInterceptor(MethodFilter filter, String interceptorClassName, InterceptorGroup group, ExecutionPolicy executionPolicy) throws InstrumentException {\n-        return addGroupedInterceptor(filter, interceptorClassName, group, executionPolicy);\n+        return addGroupedInterceptor(filter, interceptorClassName, null, group, executionPolicy);\n     }\n \n     @Override\n", "projectName": "naver.pinpoint", "bugLineNum": 528, "bugNodeStartChar": 22370, "bugNodeLength": 75, "fixLineNum": 528, "fixNodeStartChar": 22370, "fixNodeLength": 81, "sourceBeforeFix": "addGroupedInterceptor(filter,interceptorClassName,group,executionPolicy)", "sourceAfterFix": "addGroupedInterceptor(filter,interceptorClassName,null,group,executionPolicy)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "c7203473b49f29927a4f5e9438b5e38ab21e3428", "fixCommitParentSHA1": "94ed48aef796951766be54db834dc45065295b34", "bugFilePath": "web/src/main/java/com/navercorp/pinpoint/web/service/AgentServiceImpl.java", "fixPatch": "diff --git a/web/src/main/java/com/navercorp/pinpoint/web/service/AgentServiceImpl.java b/web/src/main/java/com/navercorp/pinpoint/web/service/AgentServiceImpl.java\nindex ed53bd5..43a895d 100644\n--- a/web/src/main/java/com/navercorp/pinpoint/web/service/AgentServiceImpl.java\n+++ b/web/src/main/java/com/navercorp/pinpoint/web/service/AgentServiceImpl.java\n@@ -131,7 +131,7 @@\n \n     @Override\n     public PinpointRouteResponse invoke(AgentInfo agentInfo, byte[] payload) throws TException {\n-        return invoke(agentInfo, payload, DEFUALT_FUTURE_TIMEOUT);\n+        return invoke(agentInfo, payload, DEFAULT_FUTURE_TIMEOUT);\n     }\n \n     @Override\n@@ -161,7 +161,7 @@\n     @Override\n     public Map<AgentInfo, PinpointRouteResponse> invoke(List<AgentInfo> agentInfoList, byte[] payload)\n             throws TException {\n-        return invoke(agentInfoList, payload, DEFUALT_FUTURE_TIMEOUT);\n+        return invoke(agentInfoList, payload, DEFAULT_FUTURE_TIMEOUT);\n     }\n \n     @Override\n", "projectName": "naver.pinpoint", "bugLineNum": 134, "bugNodeStartChar": 5053, "bugNodeLength": 50, "fixLineNum": 134, "fixNodeStartChar": 5053, "fixNodeLength": 50, "sourceBeforeFix": "invoke(agentInfo,payload,DEFUALT_FUTURE_TIMEOUT)", "sourceAfterFix": "invoke(agentInfo,payload,DEFAULT_FUTURE_TIMEOUT)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "c7203473b49f29927a4f5e9438b5e38ab21e3428", "fixCommitParentSHA1": "94ed48aef796951766be54db834dc45065295b34", "bugFilePath": "web/src/main/java/com/navercorp/pinpoint/web/service/AgentServiceImpl.java", "fixPatch": "diff --git a/web/src/main/java/com/navercorp/pinpoint/web/service/AgentServiceImpl.java b/web/src/main/java/com/navercorp/pinpoint/web/service/AgentServiceImpl.java\nindex ed53bd5..43a895d 100644\n--- a/web/src/main/java/com/navercorp/pinpoint/web/service/AgentServiceImpl.java\n+++ b/web/src/main/java/com/navercorp/pinpoint/web/service/AgentServiceImpl.java\n@@ -131,7 +131,7 @@\n \n     @Override\n     public PinpointRouteResponse invoke(AgentInfo agentInfo, byte[] payload) throws TException {\n-        return invoke(agentInfo, payload, DEFUALT_FUTURE_TIMEOUT);\n+        return invoke(agentInfo, payload, DEFAULT_FUTURE_TIMEOUT);\n     }\n \n     @Override\n@@ -161,7 +161,7 @@\n     @Override\n     public Map<AgentInfo, PinpointRouteResponse> invoke(List<AgentInfo> agentInfoList, byte[] payload)\n             throws TException {\n-        return invoke(agentInfoList, payload, DEFUALT_FUTURE_TIMEOUT);\n+        return invoke(agentInfoList, payload, DEFAULT_FUTURE_TIMEOUT);\n     }\n \n     @Override\n", "projectName": "naver.pinpoint", "bugLineNum": 164, "bugNodeStartChar": 6286, "bugNodeLength": 54, "fixLineNum": 164, "fixNodeStartChar": 6286, "fixNodeLength": 54, "sourceBeforeFix": "invoke(agentInfoList,payload,DEFUALT_FUTURE_TIMEOUT)", "sourceAfterFix": "invoke(agentInfoList,payload,DEFAULT_FUTURE_TIMEOUT)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "bd4083fd079e5e1e626013cc474fa24d0ece029b", "fixCommitParentSHA1": "960b570162e21d809fc8c9f406462277b4f9168f", "bugFilePath": "web/src/test/java/com/navercorp/pinpoint/web/service/BFSLinkSelectorTest.java", "fixPatch": "diff --git a/web/src/test/java/com/navercorp/pinpoint/web/service/BFSLinkSelectorTest.java b/web/src/test/java/com/navercorp/pinpoint/web/service/BFSLinkSelectorTest.java\nindex b72e9e6..0cb67c7 100644\n--- a/web/src/test/java/com/navercorp/pinpoint/web/service/BFSLinkSelectorTest.java\n+++ b/web/src/test/java/com/navercorp/pinpoint/web/service/BFSLinkSelectorTest.java\n@@ -75,7 +75,7 @@\n \n         LinkDataDuplexMap select = bfsLinkSelector.select(APP_A, range, option);\n \n-        Assert.assertEquals(select.size(), 1);\n+        Assert.assertEquals(select.size(), 0);\n \n \n     }\n", "projectName": "naver.pinpoint", "bugLineNum": 78, "bugNodeStartChar": 2984, "bugNodeLength": 37, "fixLineNum": 78, "fixNodeStartChar": 2984, "fixNodeLength": 37, "sourceBeforeFix": "Assert.assertEquals(select.size(),1)", "sourceAfterFix": "Assert.assertEquals(select.size(),0)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "6fe8de61d192f14262b455497dc5cc174d88659c", "fixCommitParentSHA1": "960b570162e21d809fc8c9f406462277b4f9168f", "bugFilePath": "web/src/test/java/com/navercorp/pinpoint/web/service/BFSLinkSelectorTest.java", "fixPatch": "diff --git a/web/src/test/java/com/navercorp/pinpoint/web/service/BFSLinkSelectorTest.java b/web/src/test/java/com/navercorp/pinpoint/web/service/BFSLinkSelectorTest.java\nindex b72e9e6..0cb67c7 100644\n--- a/web/src/test/java/com/navercorp/pinpoint/web/service/BFSLinkSelectorTest.java\n+++ b/web/src/test/java/com/navercorp/pinpoint/web/service/BFSLinkSelectorTest.java\n@@ -75,7 +75,7 @@\n \n         LinkDataDuplexMap select = bfsLinkSelector.select(APP_A, range, option);\n \n-        Assert.assertEquals(select.size(), 1);\n+        Assert.assertEquals(select.size(), 0);\n \n \n     }\n", "projectName": "naver.pinpoint", "bugLineNum": 78, "bugNodeStartChar": 2984, "bugNodeLength": 37, "fixLineNum": 78, "fixNodeStartChar": 2984, "fixNodeLength": 37, "sourceBeforeFix": "Assert.assertEquals(select.size(),1)", "sourceAfterFix": "Assert.assertEquals(select.size(),0)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "a82c76c5a1cb89c66c4fd9715e01db5e72775a5a", "fixCommitParentSHA1": "8b4d9df376359e9da00d7ed3feff7e59083c9376", "bugFilePath": "plugins/tomcat/src/main/java/com/navercorp/pinpoint/plugin/tomcat/ServletAsyncMethodDescriptor.java", "fixPatch": "diff --git a/plugins/tomcat/src/main/java/com/navercorp/pinpoint/plugin/tomcat/ServletAsyncMethodDescriptor.java b/plugins/tomcat/src/main/java/com/navercorp/pinpoint/plugin/tomcat/ServletAsyncMethodDescriptor.java\nindex 3dfa2b8..dd54d06 100644\n--- a/plugins/tomcat/src/main/java/com/navercorp/pinpoint/plugin/tomcat/ServletAsyncMethodDescriptor.java\n+++ b/plugins/tomcat/src/main/java/com/navercorp/pinpoint/plugin/tomcat/ServletAsyncMethodDescriptor.java\n@@ -23,7 +23,7 @@\n  */\n public class ServletAsyncMethodDescriptor implements MethodDescriptor {\n     private int apiId = 0;\n-    private int type = 500;\n+    private int type = 200;\n \n     @Override\n     public String getMethodName() {\n", "projectName": "naver.pinpoint", "bugLineNum": 26, "bugNodeStartChar": 866, "bugNodeLength": 10, "fixLineNum": 26, "fixNodeStartChar": 866, "fixNodeLength": 10, "sourceBeforeFix": "type=500", "sourceAfterFix": "type=200"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "a82c76c5a1cb89c66c4fd9715e01db5e72775a5a", "fixCommitParentSHA1": "8b4d9df376359e9da00d7ed3feff7e59083c9376", "bugFilePath": "plugins/tomcat/src/main/java/com/navercorp/pinpoint/plugin/tomcat/ServletSyncMethodDescriptor.java", "fixPatch": "diff --git a/plugins/tomcat/src/main/java/com/navercorp/pinpoint/plugin/tomcat/ServletSyncMethodDescriptor.java b/plugins/tomcat/src/main/java/com/navercorp/pinpoint/plugin/tomcat/ServletSyncMethodDescriptor.java\nindex 11941b1..f062076 100644\n--- a/plugins/tomcat/src/main/java/com/navercorp/pinpoint/plugin/tomcat/ServletSyncMethodDescriptor.java\n+++ b/plugins/tomcat/src/main/java/com/navercorp/pinpoint/plugin/tomcat/ServletSyncMethodDescriptor.java\n@@ -23,7 +23,7 @@\n  */\n public class ServletSyncMethodDescriptor implements MethodDescriptor {\n     private int apiId = 0;\n-    private int type = 200;\n+    private int type = 100;\n \n     @Override\n     public String getMethodName() {\n", "projectName": "naver.pinpoint", "bugLineNum": 26, "bugNodeStartChar": 865, "bugNodeLength": 10, "fixLineNum": 26, "fixNodeStartChar": 865, "fixNodeLength": 10, "sourceBeforeFix": "type=200", "sourceAfterFix": "type=100"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "b7a31700f5eb974eccc4d9e5305015df8707bba0", "fixCommitParentSHA1": "321d42a1e9a169ed358c26cbac82a4ba4503a886", "bugFilePath": "commons/src/main/java/com/navercorp/pinpoint/common/util/BytesUtils.java", "fixPatch": "diff --git a/commons/src/main/java/com/navercorp/pinpoint/common/util/BytesUtils.java b/commons/src/main/java/com/navercorp/pinpoint/common/util/BytesUtils.java\nindex 9527543..781cf26 100644\n--- a/commons/src/main/java/com/navercorp/pinpoint/common/util/BytesUtils.java\n+++ b/commons/src/main/java/com/navercorp/pinpoint/common/util/BytesUtils.java\n@@ -415,7 +415,7 @@\n             return null;\n         }\n         if (offset < 0) {\n-            throw new IllegalArgumentException(\"negative offset:\" + offset);\n+            throw new IndexOutOfBoundsException(\"negative offset:\" + offset);\n         }\n         if (length == 0) {\n             return \"\";\n", "projectName": "naver.pinpoint", "bugLineNum": 418, "bugNodeStartChar": 14655, "bugNodeLength": 57, "fixLineNum": 418, "fixNodeStartChar": 14655, "fixNodeLength": 58, "sourceBeforeFix": "new IllegalArgumentException(\"negative offset:\" + offset)", "sourceAfterFix": "new IndexOutOfBoundsException(\"negative offset:\" + offset)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "d2b1bc5c1f0762f06b72792cbf2885b40599d905", "fixCommitParentSHA1": "03eaeaf76d01f836c3a12e0c24f5ab9ca2701720", "bugFilePath": "profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java", "fixPatch": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java b/profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java\nindex 5588505..8bb2b31 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java\n@@ -328,7 +328,7 @@\n                 String trace = traceInText.get(i);\n                 String[] tokens = trace.split(\",\");\n \n-                stackTrace[i] = new StackTraceElement(tokens[0], tokens[1], tokens[2], Integer.valueOf(tokens[3]));\n+                stackTrace[i] = new StackTraceElement(tokens[0], tokens[1], tokens[2], Integer.parseInt(tokens[3]));\n             }\n \n             return new ChildProcessException(exceptionClass + \": \" + message, stackTrace);\n", "projectName": "naver.pinpoint", "bugLineNum": 331, "bugNodeStartChar": 12651, "bugNodeLength": 26, "fixLineNum": 331, "fixNodeStartChar": 12651, "fixNodeLength": 27, "sourceBeforeFix": "Integer.valueOf(tokens[3])", "sourceAfterFix": "Integer.parseInt(tokens[3])"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d2b1bc5c1f0762f06b72792cbf2885b40599d905", "fixCommitParentSHA1": "03eaeaf76d01f836c3a12e0c24f5ab9ca2701720", "bugFilePath": "profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java", "fixPatch": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java b/profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java\nindex 5588505..8bb2b31 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java\n@@ -328,7 +328,7 @@\n                 String trace = traceInText.get(i);\n                 String[] tokens = trace.split(\",\");\n \n-                stackTrace[i] = new StackTraceElement(tokens[0], tokens[1], tokens[2], Integer.valueOf(tokens[3]));\n+                stackTrace[i] = new StackTraceElement(tokens[0], tokens[1], tokens[2], Integer.parseInt(tokens[3]));\n             }\n \n             return new ChildProcessException(exceptionClass + \": \" + message, stackTrace);\n", "projectName": "naver.pinpoint", "bugLineNum": 331, "bugNodeStartChar": 12651, "bugNodeLength": 26, "fixLineNum": 331, "fixNodeStartChar": 12651, "fixNodeLength": 27, "sourceBeforeFix": "Integer.valueOf(tokens[3])", "sourceAfterFix": "Integer.parseInt(tokens[3])"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "2d0ea883af4aa38443d0a72b925a17b71bfd0f3b", "fixCommitParentSHA1": "6047e6e88cbc12d48ed3c20f0ce1e5e37624a585", "bugFilePath": "profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java", "fixPatch": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java b/profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java\nindex 5588505..8bb2b31 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java\n@@ -328,7 +328,7 @@\n                 String trace = traceInText.get(i);\n                 String[] tokens = trace.split(\",\");\n \n-                stackTrace[i] = new StackTraceElement(tokens[0], tokens[1], tokens[2], Integer.valueOf(tokens[3]));\n+                stackTrace[i] = new StackTraceElement(tokens[0], tokens[1], tokens[2], Integer.parseInt(tokens[3]));\n             }\n \n             return new ChildProcessException(exceptionClass + \": \" + message, stackTrace);\n", "projectName": "naver.pinpoint", "bugLineNum": 331, "bugNodeStartChar": 12651, "bugNodeLength": 26, "fixLineNum": 331, "fixNodeStartChar": 12651, "fixNodeLength": 27, "sourceBeforeFix": "Integer.valueOf(tokens[3])", "sourceAfterFix": "Integer.parseInt(tokens[3])"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "2d0ea883af4aa38443d0a72b925a17b71bfd0f3b", "fixCommitParentSHA1": "6047e6e88cbc12d48ed3c20f0ce1e5e37624a585", "bugFilePath": "profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java", "fixPatch": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java b/profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java\nindex 5588505..8bb2b31 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java\n@@ -328,7 +328,7 @@\n                 String trace = traceInText.get(i);\n                 String[] tokens = trace.split(\",\");\n \n-                stackTrace[i] = new StackTraceElement(tokens[0], tokens[1], tokens[2], Integer.valueOf(tokens[3]));\n+                stackTrace[i] = new StackTraceElement(tokens[0], tokens[1], tokens[2], Integer.parseInt(tokens[3]));\n             }\n \n             return new ChildProcessException(exceptionClass + \": \" + message, stackTrace);\n", "projectName": "naver.pinpoint", "bugLineNum": 331, "bugNodeStartChar": 12651, "bugNodeLength": 26, "fixLineNum": 331, "fixNodeStartChar": 12651, "fixNodeLength": 27, "sourceBeforeFix": "Integer.valueOf(tokens[3])", "sourceAfterFix": "Integer.parseInt(tokens[3])"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "e7d4575d49668d1877d9ecdccb9f5d422b2b1a49", "fixCommitParentSHA1": "3e274401f4820232698a0d7605911d75fdb14ca6", "bugFilePath": "bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java", "fixPatch": "diff --git a/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java b/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java\nindex 7e64485..790e2cd 100644\n--- a/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java\n+++ b/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java\n@@ -13,7 +13,7 @@\n \r\n     public static final InterceptorRegistry REGISTRY = new InterceptorRegistry();\r\n \r\n-    private final static int DEFAULT_MAX = 1024;\r\n+    private final static int DEFAULT_MAX = 4096;\n     private final int max;\r\n \r\n     private final AtomicInteger id = new AtomicInteger(0);\r\n@@ -38,7 +38,7 @@\n             return -1;\r\n         }\r\n         int newId = nextId();\r\n-        if (newId > max) {\r\n+        if (newId >= max) {\n             throw new IndexOutOfBoundsException(\"size=\" + index.length + \" id=\" + id);\r\n         }\r\n \r\n@@ -56,7 +56,7 @@\n             return -1;\r\n         }\r\n         int newId = nextId();\r\n-        if (newId > max) {\r\n+        if (newId >= max) {\n             throw new IndexOutOfBoundsException(\"size=\" + index.length + \" id=\" + id);\r\n         }\r\n \r\n", "projectName": "naver.pinpoint", "bugLineNum": 16, "bugNodeStartChar": 479, "bugNodeLength": 18, "fixLineNum": 16, "fixNodeStartChar": 464, "fixNodeLength": 18, "sourceBeforeFix": "DEFAULT_MAX=1024", "sourceAfterFix": "DEFAULT_MAX=4096"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "e7d4575d49668d1877d9ecdccb9f5d422b2b1a49", "fixCommitParentSHA1": "3e274401f4820232698a0d7605911d75fdb14ca6", "bugFilePath": "bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java", "fixPatch": "diff --git a/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java b/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java\nindex 7e64485..790e2cd 100644\n--- a/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java\n+++ b/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java\n@@ -13,7 +13,7 @@\n \r\n     public static final InterceptorRegistry REGISTRY = new InterceptorRegistry();\r\n \r\n-    private final static int DEFAULT_MAX = 1024;\r\n+    private final static int DEFAULT_MAX = 4096;\n     private final int max;\r\n \r\n     private final AtomicInteger id = new AtomicInteger(0);\r\n@@ -38,7 +38,7 @@\n             return -1;\r\n         }\r\n         int newId = nextId();\r\n-        if (newId > max) {\r\n+        if (newId >= max) {\n             throw new IndexOutOfBoundsException(\"size=\" + index.length + \" id=\" + id);\r\n         }\r\n \r\n@@ -56,7 +56,7 @@\n             return -1;\r\n         }\r\n         int newId = nextId();\r\n-        if (newId > max) {\r\n+        if (newId >= max) {\n             throw new IndexOutOfBoundsException(\"size=\" + index.length + \" id=\" + id);\r\n         }\r\n \r\n", "projectName": "naver.pinpoint", "bugLineNum": 41, "bugNodeStartChar": 1258, "bugNodeLength": 11, "fixLineNum": 41, "fixNodeStartChar": 1218, "fixNodeLength": 12, "sourceBeforeFix": "newId > max", "sourceAfterFix": "newId >= max"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "e7d4575d49668d1877d9ecdccb9f5d422b2b1a49", "fixCommitParentSHA1": "3e274401f4820232698a0d7605911d75fdb14ca6", "bugFilePath": "bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java", "fixPatch": "diff --git a/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java b/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java\nindex 7e64485..790e2cd 100644\n--- a/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java\n+++ b/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java\n@@ -13,7 +13,7 @@\n \r\n     public static final InterceptorRegistry REGISTRY = new InterceptorRegistry();\r\n \r\n-    private final static int DEFAULT_MAX = 1024;\r\n+    private final static int DEFAULT_MAX = 4096;\n     private final int max;\r\n \r\n     private final AtomicInteger id = new AtomicInteger(0);\r\n@@ -38,7 +38,7 @@\n             return -1;\r\n         }\r\n         int newId = nextId();\r\n-        if (newId > max) {\r\n+        if (newId >= max) {\n             throw new IndexOutOfBoundsException(\"size=\" + index.length + \" id=\" + id);\r\n         }\r\n \r\n@@ -56,7 +56,7 @@\n             return -1;\r\n         }\r\n         int newId = nextId();\r\n-        if (newId > max) {\r\n+        if (newId >= max) {\n             throw new IndexOutOfBoundsException(\"size=\" + index.length + \" id=\" + id);\r\n         }\r\n \r\n", "projectName": "naver.pinpoint", "bugLineNum": 59, "bugNodeStartChar": 1780, "bugNodeLength": 11, "fixLineNum": 59, "fixNodeStartChar": 1722, "fixNodeLength": 12, "sourceBeforeFix": "newId > max", "sourceAfterFix": "newId >= max"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "322fa14393f4ab34e22f0e3ad569afe12415ad1d", "fixCommitParentSHA1": "99e1c87ce21d2420a149abfa71a87ec8734c4d90", "bugFilePath": "bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java", "fixPatch": "diff --git a/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java b/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java\nindex 7e64485..790e2cd 100644\n--- a/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java\n+++ b/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java\n@@ -13,7 +13,7 @@\n \r\n     public static final InterceptorRegistry REGISTRY = new InterceptorRegistry();\r\n \r\n-    private final static int DEFAULT_MAX = 1024;\r\n+    private final static int DEFAULT_MAX = 4096;\n     private final int max;\r\n \r\n     private final AtomicInteger id = new AtomicInteger(0);\r\n@@ -38,7 +38,7 @@\n             return -1;\r\n         }\r\n         int newId = nextId();\r\n-        if (newId > max) {\r\n+        if (newId >= max) {\n             throw new IndexOutOfBoundsException(\"size=\" + index.length + \" id=\" + id);\r\n         }\r\n \r\n@@ -56,7 +56,7 @@\n             return -1;\r\n         }\r\n         int newId = nextId();\r\n-        if (newId > max) {\r\n+        if (newId >= max) {\n             throw new IndexOutOfBoundsException(\"size=\" + index.length + \" id=\" + id);\r\n         }\r\n \r\n", "projectName": "naver.pinpoint", "bugLineNum": 16, "bugNodeStartChar": 479, "bugNodeLength": 18, "fixLineNum": 16, "fixNodeStartChar": 464, "fixNodeLength": 18, "sourceBeforeFix": "DEFAULT_MAX=1024", "sourceAfterFix": "DEFAULT_MAX=4096"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "322fa14393f4ab34e22f0e3ad569afe12415ad1d", "fixCommitParentSHA1": "99e1c87ce21d2420a149abfa71a87ec8734c4d90", "bugFilePath": "bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java", "fixPatch": "diff --git a/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java b/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java\nindex 7e64485..790e2cd 100644\n--- a/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java\n+++ b/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java\n@@ -13,7 +13,7 @@\n \r\n     public static final InterceptorRegistry REGISTRY = new InterceptorRegistry();\r\n \r\n-    private final static int DEFAULT_MAX = 1024;\r\n+    private final static int DEFAULT_MAX = 4096;\n     private final int max;\r\n \r\n     private final AtomicInteger id = new AtomicInteger(0);\r\n@@ -38,7 +38,7 @@\n             return -1;\r\n         }\r\n         int newId = nextId();\r\n-        if (newId > max) {\r\n+        if (newId >= max) {\n             throw new IndexOutOfBoundsException(\"size=\" + index.length + \" id=\" + id);\r\n         }\r\n \r\n@@ -56,7 +56,7 @@\n             return -1;\r\n         }\r\n         int newId = nextId();\r\n-        if (newId > max) {\r\n+        if (newId >= max) {\n             throw new IndexOutOfBoundsException(\"size=\" + index.length + \" id=\" + id);\r\n         }\r\n \r\n", "projectName": "naver.pinpoint", "bugLineNum": 41, "bugNodeStartChar": 1258, "bugNodeLength": 11, "fixLineNum": 41, "fixNodeStartChar": 1218, "fixNodeLength": 12, "sourceBeforeFix": "newId > max", "sourceAfterFix": "newId >= max"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "322fa14393f4ab34e22f0e3ad569afe12415ad1d", "fixCommitParentSHA1": "99e1c87ce21d2420a149abfa71a87ec8734c4d90", "bugFilePath": "bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java", "fixPatch": "diff --git a/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java b/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java\nindex 7e64485..790e2cd 100644\n--- a/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java\n+++ b/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java\n@@ -13,7 +13,7 @@\n \r\n     public static final InterceptorRegistry REGISTRY = new InterceptorRegistry();\r\n \r\n-    private final static int DEFAULT_MAX = 1024;\r\n+    private final static int DEFAULT_MAX = 4096;\n     private final int max;\r\n \r\n     private final AtomicInteger id = new AtomicInteger(0);\r\n@@ -38,7 +38,7 @@\n             return -1;\r\n         }\r\n         int newId = nextId();\r\n-        if (newId > max) {\r\n+        if (newId >= max) {\n             throw new IndexOutOfBoundsException(\"size=\" + index.length + \" id=\" + id);\r\n         }\r\n \r\n@@ -56,7 +56,7 @@\n             return -1;\r\n         }\r\n         int newId = nextId();\r\n-        if (newId > max) {\r\n+        if (newId >= max) {\n             throw new IndexOutOfBoundsException(\"size=\" + index.length + \" id=\" + id);\r\n         }\r\n \r\n", "projectName": "naver.pinpoint", "bugLineNum": 59, "bugNodeStartChar": 1780, "bugNodeLength": 11, "fixLineNum": 59, "fixNodeStartChar": 1722, "fixNodeLength": 12, "sourceBeforeFix": "newId > max", "sourceAfterFix": "newId >= max"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "577ee3f0147ed3d8077a734bddd3a4016546a346", "fixCommitParentSHA1": "a85f83049747e8633fdb32b8f2fed76309fba7f6", "bugFilePath": "src/main/java/com/nhn/pinpoint/web/controller/ScatterChartController.java", "fixPatch": "diff --git a/src/main/java/com/nhn/pinpoint/web/controller/ScatterChartController.java b/src/main/java/com/nhn/pinpoint/web/controller/ScatterChartController.java\nindex d5220ea..1f11e68 100644\n--- a/src/main/java/com/nhn/pinpoint/web/controller/ScatterChartController.java\n+++ b/src/main/java/com/nhn/pinpoint/web/controller/ScatterChartController.java\n@@ -88,7 +88,7 @@\n \t\t} else {\r\n \t\t\tList<TraceId> traceIds = scatter.selectScatterTraceIdList(applicationName, from, to, limit);\r\n \r\n-\t\t\tif (!traceIds.isEmpty()) {\r\n+\t\t\tif (traceIds.isEmpty()) {\r\n \t\t\t\tmodel.addAttribute(\"queryStart\", -1);\r\n \t\t\t\tmodel.addAttribute(\"queryEnd\", -1);\r\n \t\t\t} else {\r\n", "projectName": "naver.pinpoint", "bugLineNum": 91, "bugNodeStartChar": 3722, "bugNodeLength": 19, "fixLineNum": 91, "fixNodeStartChar": 3632, "fixNodeLength": 18, "sourceBeforeFix": "!traceIds.isEmpty()", "sourceAfterFix": "traceIds.isEmpty()"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "da50508e35642352d7c8cf0fe283d36f3c89e3f2", "fixCommitParentSHA1": "af6b424729e0c5d0a11b8b92fd87e026b98d8b74", "bugFilePath": "src/main/java/com/profiler/interceptor/bci/JavaAssistByteCodeInstrumentor.java", "fixPatch": "diff --git a/src/main/java/com/profiler/interceptor/bci/JavaAssistByteCodeInstrumentor.java b/src/main/java/com/profiler/interceptor/bci/JavaAssistByteCodeInstrumentor.java\nindex ac51f11..584378d 100644\n--- a/src/main/java/com/profiler/interceptor/bci/JavaAssistByteCodeInstrumentor.java\n+++ b/src/main/java/com/profiler/interceptor/bci/JavaAssistByteCodeInstrumentor.java\n@@ -56,7 +56,7 @@\n     public void checkLibrary(ClassLoader classLoader, String javassistClassName) {\r\n \t\t// TODO Util\ub85c \ubf51\uc744\uae4c?\r\n \t\tboolean findClass = findClass(javassistClassName);\r\n-\t\tif (findClass) {\r\n+\t\tif (!findClass) {\r\n \t\t\treturn;\r\n \t\t}\r\n \t\tloadClassLoaderLibraries(classLoader);\r\n", "projectName": "naver.pinpoint", "bugLineNum": 59, "bugNodeStartChar": 1841, "bugNodeLength": 9, "fixLineNum": 59, "fixNodeStartChar": 1783, "fixNodeLength": 10, "sourceBeforeFix": "findClass", "sourceAfterFix": "!findClass"}]