[{"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "ab9e3d6dccc21be8ca37754617969a86fa568673", "fixCommitParentSHA1": "135aa0e516219c6e63df634aa72377d13eec4970", "bugFilePath": "core/test/com/google/inject/internal/MapBinderTest.java", "fixPatch": "diff --git a/core/test/com/google/inject/internal/MapBinderTest.java b/core/test/com/google/inject/internal/MapBinderTest.java\nindex 2971ef2..5933dde 100644\n--- a/core/test/com/google/inject/internal/MapBinderTest.java\n+++ b/core/test/com/google/inject/internal/MapBinderTest.java\n@@ -84,7 +84,7 @@\n /** @author dpb@google.com (David P. Baker) */\n public class MapBinderTest extends TestCase {\n \n-  private static final Set<Key<?>> FRAMEWORK_KEYS =\n+  private static final ImmutableSet<Key<?>> FRAMEWORK_KEYS =\n       ImmutableSet.of(\n           Key.get(java.util.logging.Logger.class), Key.get(Stage.class), Key.get(Injector.class));\n \n", "projectName": "google.guice", "bugLineNum": 87, "bugNodeStartChar": 3367, "bugNodeLength": 11, "fixLineNum": 87, "fixNodeStartChar": 3367, "fixNodeLength": 20, "sourceBeforeFix": "Set<Key<?>>", "sourceAfterFix": "ImmutableSet<Key<?>>"}, {"bugType": "OVERLOAD_METHOD_DELETED_ARGS", "fixCommitSHA1": "7715581cb3521f0d6ba48f957e8daa492383fba3", "fixCommitParentSHA1": "50b3d3d70b3fcb1423650beedb0d175cd1b87a3b", "bugFilePath": "core/test/com/google/inject/JitBindingsTest.java", "fixPatch": "diff --git a/core/test/com/google/inject/JitBindingsTest.java b/core/test/com/google/inject/JitBindingsTest.java\nindex cd9a964..10ecb33 100644\n--- a/core/test/com/google/inject/JitBindingsTest.java\n+++ b/core/test/com/google/inject/JitBindingsTest.java\n@@ -323,7 +323,12 @@\n     });\n     ensureWorks(child, Foo.class, Bar.class);\n     ensureFails(child, ALLOW_BINDING, FooImpl.class);\n-    ensureInChild(parent, FooImpl.class, FooBar.class, Foo.class);\n+    ensureInChild(parent, FooImpl.class, Foo.class);\n+    // TODO(sameb): FooBar may or may not be in a child injector, depending on if GC has run.\n+    // We should fix failed child injectors to remove their contents from the parent blacklist\n+    // immediately, rather than waiting on GC to do it.\n+    // FooBar was succesfully inserted into the child injector (and parent blacklist), but then\n+    // JIT bindings it depended on failed, making the child injector invalid.\n     \n     Injector grandchild = child.createChildInjector(new AbstractModule() {\n       @Override\n", "projectName": "google.guice", "bugLineNum": 326, "bugNodeStartChar": 11321, "bugNodeLength": 61, "fixLineNum": 326, "fixNodeStartChar": 11321, "fixNodeLength": 47, "sourceBeforeFix": "ensureInChild(parent,FooImpl.class,FooBar.class,Foo.class)", "sourceAfterFix": "ensureInChild(parent,FooImpl.class,Foo.class)"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "4d5804923d55353b214b8e2a45a6416a75665a4d", "fixCommitParentSHA1": "51829aa27bf05c2c84b6ca90225c61c55c675056", "bugFilePath": "core/src/com/google/inject/spi/InjectionPoint.java", "fixPatch": "diff --git a/core/src/com/google/inject/spi/InjectionPoint.java b/core/src/com/google/inject/spi/InjectionPoint.java\nindex 76197e3..36c10be 100644\n--- a/core/src/com/google/inject/spi/InjectionPoint.java\n+++ b/core/src/com/google/inject/spi/InjectionPoint.java\n@@ -678,7 +678,7 @@\n             InjectableMethod injectableMethod = new InjectableMethod(\n                 current, method, atInject);\n             if (checkForMisplacedBindingAnnotations(method, errors)\n-                | !isValidMethod(injectableMethod, errors)) {\n+                || !isValidMethod(injectableMethod, errors)) {\n               if (overrideIndex != null) {\n                 boolean removed = overrideIndex.removeIfOverriddenBy(method, false, injectableMethod);\n                 if(removed) {\n", "projectName": "google.guice", "bugLineNum": 680, "bugNodeStartChar": 25237, "bugNodeLength": 110, "fixLineNum": 680, "fixNodeStartChar": 25237, "fixNodeLength": 111, "sourceBeforeFix": "checkForMisplacedBindingAnnotations(method,errors) | !isValidMethod(injectableMethod,errors)", "sourceAfterFix": "checkForMisplacedBindingAnnotations(method,errors) || !isValidMethod(injectableMethod,errors)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "5221c15e183cb7029a305766d137d909f77e8941", "fixCommitParentSHA1": "b7a02b02d81c830d148355c90bc309bcd66fb592", "bugFilePath": "core/src/com/google/inject/TypeLiteral.java", "fixPatch": "diff --git a/core/src/com/google/inject/TypeLiteral.java b/core/src/com/google/inject/TypeLiteral.java\nindex 61034b3..d18087d 100644\n--- a/core/src/com/google/inject/TypeLiteral.java\n+++ b/core/src/com/google/inject/TypeLiteral.java\n@@ -171,7 +171,7 @@\n     for (int t = 0; t < types.length; t++) {\n       result[t] = resolve(types[t]);\n     }\n-    return ImmutableList.of(result);\n+    return ImmutableList.copyOf(result);\n   }\n \n   /**\n", "projectName": "google.guice", "bugLineNum": 174, "bugNodeStartChar": 5509, "bugNodeLength": 24, "fixLineNum": 174, "fixNodeStartChar": 5509, "fixNodeLength": 28, "sourceBeforeFix": "ImmutableList.of(result)", "sourceAfterFix": "ImmutableList.copyOf(result)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "5221c15e183cb7029a305766d137d909f77e8941", "fixCommitParentSHA1": "b7a02b02d81c830d148355c90bc309bcd66fb592", "bugFilePath": "core/src/com/google/inject/TypeLiteral.java", "fixPatch": "diff --git a/core/src/com/google/inject/TypeLiteral.java b/core/src/com/google/inject/TypeLiteral.java\nindex 61034b3..d18087d 100644\n--- a/core/src/com/google/inject/TypeLiteral.java\n+++ b/core/src/com/google/inject/TypeLiteral.java\n@@ -171,7 +171,7 @@\n     for (int t = 0; t < types.length; t++) {\n       result[t] = resolve(types[t]);\n     }\n-    return ImmutableList.of(result);\n+    return ImmutableList.copyOf(result);\n   }\n \n   /**\n", "projectName": "google.guice", "bugLineNum": 174, "bugNodeStartChar": 5509, "bugNodeLength": 24, "fixLineNum": 174, "fixNodeStartChar": 5509, "fixNodeLength": 28, "sourceBeforeFix": "ImmutableList.of(result)", "sourceAfterFix": "ImmutableList.copyOf(result)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "5221c15e183cb7029a305766d137d909f77e8941", "fixCommitParentSHA1": "b7a02b02d81c830d148355c90bc309bcd66fb592", "bugFilePath": "core/src/com/google/inject/internal/InjectorImpl.java", "fixPatch": "diff --git a/core/src/com/google/inject/internal/InjectorImpl.java b/core/src/com/google/inject/internal/InjectorImpl.java\nindex 320efb7..40cb77a 100644\n--- a/core/src/com/google/inject/internal/InjectorImpl.java\n+++ b/core/src/com/google/inject/internal/InjectorImpl.java\n@@ -220,7 +220,7 @@\n   }\n \n   public Injector createChildInjector(Module... modules) {\n-    return createChildInjector(ImmutableList.of(modules));\n+    return createChildInjector(ImmutableList.copyOf(modules));\n   }\n \n   /**\n", "projectName": "google.guice", "bugLineNum": 223, "bugNodeStartChar": 7519, "bugNodeLength": 25, "fixLineNum": 223, "fixNodeStartChar": 7519, "fixNodeLength": 29, "sourceBeforeFix": "ImmutableList.of(modules)", "sourceAfterFix": "ImmutableList.copyOf(modules)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "5221c15e183cb7029a305766d137d909f77e8941", "fixCommitParentSHA1": "b7a02b02d81c830d148355c90bc309bcd66fb592", "bugFilePath": "core/src/com/google/inject/internal/InjectorImpl.java", "fixPatch": "diff --git a/core/src/com/google/inject/internal/InjectorImpl.java b/core/src/com/google/inject/internal/InjectorImpl.java\nindex 320efb7..40cb77a 100644\n--- a/core/src/com/google/inject/internal/InjectorImpl.java\n+++ b/core/src/com/google/inject/internal/InjectorImpl.java\n@@ -220,7 +220,7 @@\n   }\n \n   public Injector createChildInjector(Module... modules) {\n-    return createChildInjector(ImmutableList.of(modules));\n+    return createChildInjector(ImmutableList.copyOf(modules));\n   }\n \n   /**\n", "projectName": "google.guice", "bugLineNum": 223, "bugNodeStartChar": 7519, "bugNodeLength": 25, "fixLineNum": 223, "fixNodeStartChar": 7519, "fixNodeLength": 29, "sourceBeforeFix": "ImmutableList.of(modules)", "sourceAfterFix": "ImmutableList.copyOf(modules)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "5221c15e183cb7029a305766d137d909f77e8941", "fixCommitParentSHA1": "b7a02b02d81c830d148355c90bc309bcd66fb592", "bugFilePath": "core/src/com/google/inject/spi/InterceptorBinding.java", "fixPatch": "diff --git a/core/src/com/google/inject/spi/InterceptorBinding.java b/core/src/com/google/inject/spi/InterceptorBinding.java\nindex 4d87157..a16e701 100644\n--- a/core/src/com/google/inject/spi/InterceptorBinding.java\n+++ b/core/src/com/google/inject/spi/InterceptorBinding.java\n@@ -56,7 +56,7 @@\n     this.source = checkNotNull(source, \"source\");\n     this.classMatcher = checkNotNull(classMatcher, \"classMatcher\");\n     this.methodMatcher = checkNotNull(methodMatcher, \"methodMatcher\");\n-    this.interceptors = ImmutableList.of(interceptors);\n+    this.interceptors = ImmutableList.copyOf(interceptors);\n   }\n \n   public Object getSource() {\n", "projectName": "google.guice", "bugLineNum": 59, "bugNodeStartChar": 2262, "bugNodeLength": 30, "fixLineNum": 59, "fixNodeStartChar": 2262, "fixNodeLength": 34, "sourceBeforeFix": "ImmutableList.of(interceptors)", "sourceAfterFix": "ImmutableList.copyOf(interceptors)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "5221c15e183cb7029a305766d137d909f77e8941", "fixCommitParentSHA1": "b7a02b02d81c830d148355c90bc309bcd66fb592", "bugFilePath": "core/src/com/google/inject/spi/InterceptorBinding.java", "fixPatch": "diff --git a/core/src/com/google/inject/spi/InterceptorBinding.java b/core/src/com/google/inject/spi/InterceptorBinding.java\nindex 4d87157..a16e701 100644\n--- a/core/src/com/google/inject/spi/InterceptorBinding.java\n+++ b/core/src/com/google/inject/spi/InterceptorBinding.java\n@@ -56,7 +56,7 @@\n     this.source = checkNotNull(source, \"source\");\n     this.classMatcher = checkNotNull(classMatcher, \"classMatcher\");\n     this.methodMatcher = checkNotNull(methodMatcher, \"methodMatcher\");\n-    this.interceptors = ImmutableList.of(interceptors);\n+    this.interceptors = ImmutableList.copyOf(interceptors);\n   }\n \n   public Object getSource() {\n", "projectName": "google.guice", "bugLineNum": 59, "bugNodeStartChar": 2262, "bugNodeLength": 30, "fixLineNum": 59, "fixNodeStartChar": 2262, "fixNodeLength": 34, "sourceBeforeFix": "ImmutableList.of(interceptors)", "sourceAfterFix": "ImmutableList.copyOf(interceptors)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "5221c15e183cb7029a305766d137d909f77e8941", "fixCommitParentSHA1": "b7a02b02d81c830d148355c90bc309bcd66fb592", "bugFilePath": "core/src/com/google/inject/spi/Message.java", "fixPatch": "diff --git a/core/src/com/google/inject/spi/Message.java b/core/src/com/google/inject/spi/Message.java\nindex 3571ecd..14d3bcc 100644\n--- a/core/src/com/google/inject/spi/Message.java\n+++ b/core/src/com/google/inject/spi/Message.java\n@@ -126,7 +126,7 @@\n     for (int i = 0; i < sourcesAsStrings.length; i++) {\n       sourcesAsStrings[i] = Errors.convert(sourcesAsStrings[i]).toString();\n     }\n-    return new Message(ImmutableList.of(sourcesAsStrings), message, cause);\n+    return new Message(ImmutableList.copyOf(sourcesAsStrings), message, cause);\n   }\n \n   private static final long serialVersionUID = 0;\n", "projectName": "google.guice", "bugLineNum": 129, "bugNodeStartChar": 3675, "bugNodeLength": 34, "fixLineNum": 129, "fixNodeStartChar": 3675, "fixNodeLength": 38, "sourceBeforeFix": "ImmutableList.of(sourcesAsStrings)", "sourceAfterFix": "ImmutableList.copyOf(sourcesAsStrings)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "5221c15e183cb7029a305766d137d909f77e8941", "fixCommitParentSHA1": "b7a02b02d81c830d148355c90bc309bcd66fb592", "bugFilePath": "core/src/com/google/inject/spi/Message.java", "fixPatch": "diff --git a/core/src/com/google/inject/spi/Message.java b/core/src/com/google/inject/spi/Message.java\nindex 3571ecd..14d3bcc 100644\n--- a/core/src/com/google/inject/spi/Message.java\n+++ b/core/src/com/google/inject/spi/Message.java\n@@ -126,7 +126,7 @@\n     for (int i = 0; i < sourcesAsStrings.length; i++) {\n       sourcesAsStrings[i] = Errors.convert(sourcesAsStrings[i]).toString();\n     }\n-    return new Message(ImmutableList.of(sourcesAsStrings), message, cause);\n+    return new Message(ImmutableList.copyOf(sourcesAsStrings), message, cause);\n   }\n \n   private static final long serialVersionUID = 0;\n", "projectName": "google.guice", "bugLineNum": 129, "bugNodeStartChar": 3675, "bugNodeLength": 34, "fixLineNum": 129, "fixNodeStartChar": 3675, "fixNodeLength": 38, "sourceBeforeFix": "ImmutableList.of(sourcesAsStrings)", "sourceAfterFix": "ImmutableList.copyOf(sourcesAsStrings)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "5221c15e183cb7029a305766d137d909f77e8941", "fixCommitParentSHA1": "b7a02b02d81c830d148355c90bc309bcd66fb592", "bugFilePath": "core/src/com/google/inject/spi/ProvisionListenerBinding.java", "fixPatch": "diff --git a/core/src/com/google/inject/spi/ProvisionListenerBinding.java b/core/src/com/google/inject/spi/ProvisionListenerBinding.java\nindex 301d670..479e9f5 100644\n--- a/core/src/com/google/inject/spi/ProvisionListenerBinding.java\n+++ b/core/src/com/google/inject/spi/ProvisionListenerBinding.java\n@@ -41,7 +41,7 @@\n       ProvisionListener[] listeners) {\n     this.source = source;\n     this.keyMatcher = typeMatcher;\n-    this.listeners = ImmutableList.of(listeners);\n+    this.listeners = ImmutableList.copyOf(listeners);\n   }\n \n   /** Returns the registered listeners. */\n", "projectName": "google.guice", "bugLineNum": 44, "bugNodeStartChar": 1466, "bugNodeLength": 27, "fixLineNum": 44, "fixNodeStartChar": 1466, "fixNodeLength": 31, "sourceBeforeFix": "ImmutableList.of(listeners)", "sourceAfterFix": "ImmutableList.copyOf(listeners)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "5221c15e183cb7029a305766d137d909f77e8941", "fixCommitParentSHA1": "b7a02b02d81c830d148355c90bc309bcd66fb592", "bugFilePath": "core/src/com/google/inject/spi/ProvisionListenerBinding.java", "fixPatch": "diff --git a/core/src/com/google/inject/spi/ProvisionListenerBinding.java b/core/src/com/google/inject/spi/ProvisionListenerBinding.java\nindex 301d670..479e9f5 100644\n--- a/core/src/com/google/inject/spi/ProvisionListenerBinding.java\n+++ b/core/src/com/google/inject/spi/ProvisionListenerBinding.java\n@@ -41,7 +41,7 @@\n       ProvisionListener[] listeners) {\n     this.source = source;\n     this.keyMatcher = typeMatcher;\n-    this.listeners = ImmutableList.of(listeners);\n+    this.listeners = ImmutableList.copyOf(listeners);\n   }\n \n   /** Returns the registered listeners. */\n", "projectName": "google.guice", "bugLineNum": 44, "bugNodeStartChar": 1466, "bugNodeLength": 27, "fixLineNum": 44, "fixNodeStartChar": 1466, "fixNodeLength": 31, "sourceBeforeFix": "ImmutableList.of(listeners)", "sourceAfterFix": "ImmutableList.copyOf(listeners)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "5221c15e183cb7029a305766d137d909f77e8941", "fixCommitParentSHA1": "b7a02b02d81c830d148355c90bc309bcd66fb592", "bugFilePath": "core/src/com/google/inject/util/Modules.java", "fixPatch": "diff --git a/core/src/com/google/inject/util/Modules.java b/core/src/com/google/inject/util/Modules.java\nindex 70cab05..27eed97 100644\n--- a/core/src/com/google/inject/util/Modules.java\n+++ b/core/src/com/google/inject/util/Modules.java\n@@ -100,7 +100,7 @@\n    * Returns a new module that installs all of {@code modules}.\n    */\n   public static Module combine(Module... modules) {\n-    return combine(ImmutableSet.of(modules));\n+    return combine(ImmutableSet.copyOf(modules));\n   }\n \n   /**\n", "projectName": "google.guice", "bugLineNum": 103, "bugNodeStartChar": 4017, "bugNodeLength": 24, "fixLineNum": 103, "fixNodeStartChar": 4017, "fixNodeLength": 28, "sourceBeforeFix": "ImmutableSet.of(modules)", "sourceAfterFix": "ImmutableSet.copyOf(modules)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "5221c15e183cb7029a305766d137d909f77e8941", "fixCommitParentSHA1": "b7a02b02d81c830d148355c90bc309bcd66fb592", "bugFilePath": "core/src/com/google/inject/util/Modules.java", "fixPatch": "diff --git a/core/src/com/google/inject/util/Modules.java b/core/src/com/google/inject/util/Modules.java\nindex 70cab05..27eed97 100644\n--- a/core/src/com/google/inject/util/Modules.java\n+++ b/core/src/com/google/inject/util/Modules.java\n@@ -100,7 +100,7 @@\n    * Returns a new module that installs all of {@code modules}.\n    */\n   public static Module combine(Module... modules) {\n-    return combine(ImmutableSet.of(modules));\n+    return combine(ImmutableSet.copyOf(modules));\n   }\n \n   /**\n", "projectName": "google.guice", "bugLineNum": 103, "bugNodeStartChar": 4017, "bugNodeLength": 24, "fixLineNum": 103, "fixNodeStartChar": 4017, "fixNodeLength": 28, "sourceBeforeFix": "ImmutableSet.of(modules)", "sourceAfterFix": "ImmutableSet.copyOf(modules)"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "1e5fc1daab8364f1d16614e9013135a115e66e2c", "fixCommitParentSHA1": "6e4e4973a87dfbfbba0b3c03b299eacb9b8696bd", "bugFilePath": "core/test/com/google/inject/MethodInterceptionTest.java", "fixPatch": "diff --git a/core/test/com/google/inject/MethodInterceptionTest.java b/core/test/com/google/inject/MethodInterceptionTest.java\nindex 7331c32..1ce6966 100644\n--- a/core/test/com/google/inject/MethodInterceptionTest.java\n+++ b/core/test/com/google/inject/MethodInterceptionTest.java\n@@ -172,7 +172,7 @@\n       fail();\n     } catch (Exception e) {\n       // validate all causes.\n-      for (Throwable t = e; t != null; t = e.getCause()) {\n+      for (Throwable t = e; t != null; t = t.getCause()) {\n         StackTraceElement[] stackTraceElement = t.getStackTrace();\n         assertEquals(\"explode\", stackTraceElement[0].getMethodName());\n         assertEquals(\"invoke\", stackTraceElement[1].getMethodName());\n", "projectName": "google.guice", "bugLineNum": 175, "bugNodeStartChar": 6626, "bugNodeLength": 12, "fixLineNum": 175, "fixNodeStartChar": 6626, "fixNodeLength": 12, "sourceBeforeFix": "e.getCause()", "sourceAfterFix": "t.getCause()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "1e5fc1daab8364f1d16614e9013135a115e66e2c", "fixCommitParentSHA1": "6e4e4973a87dfbfbba0b3c03b299eacb9b8696bd", "bugFilePath": "core/test/com/google/inject/MethodInterceptionTest.java", "fixPatch": "diff --git a/core/test/com/google/inject/MethodInterceptionTest.java b/core/test/com/google/inject/MethodInterceptionTest.java\nindex 7331c32..1ce6966 100644\n--- a/core/test/com/google/inject/MethodInterceptionTest.java\n+++ b/core/test/com/google/inject/MethodInterceptionTest.java\n@@ -172,7 +172,7 @@\n       fail();\n     } catch (Exception e) {\n       // validate all causes.\n-      for (Throwable t = e; t != null; t = e.getCause()) {\n+      for (Throwable t = e; t != null; t = t.getCause()) {\n         StackTraceElement[] stackTraceElement = t.getStackTrace();\n         assertEquals(\"explode\", stackTraceElement[0].getMethodName());\n         assertEquals(\"invoke\", stackTraceElement[1].getMethodName());\n", "projectName": "google.guice", "bugLineNum": 175, "bugNodeStartChar": 6626, "bugNodeLength": 12, "fixLineNum": 175, "fixNodeStartChar": 6626, "fixNodeLength": 12, "sourceBeforeFix": "e.getCause()", "sourceAfterFix": "t.getCause()"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "dfdf3e381ab0d0b9ec10eb18291912058c34dfa7", "fixCommitParentSHA1": "1c6ff880b9a83a833c6fc5fb4fc0e3a15bfb1f80", "bugFilePath": "core/test/com/googlecode/guice/StrictContainerTestSuiteBuilder.java", "fixPatch": "diff --git a/core/test/com/googlecode/guice/StrictContainerTestSuiteBuilder.java b/core/test/com/googlecode/guice/StrictContainerTestSuiteBuilder.java\nindex ec99089..82838b8 100644\n--- a/core/test/com/googlecode/guice/StrictContainerTestSuiteBuilder.java\n+++ b/core/test/com/googlecode/guice/StrictContainerTestSuiteBuilder.java\n@@ -102,7 +102,8 @@\n           || name.startsWith(\"javax.\")\n           || name.startsWith(\"junit.\")\n           || name.startsWith(\"sun.\")\n-          || name.startsWith(\"com.sun.\")) {\n+          || name.startsWith(\"com.sun.\")\n+          || name.contains(\"cglib\")) {\n         return super.loadClass(name, resolve);\n       }\n \n", "projectName": "google.guice", "bugLineNum": 101, "bugNodeStartChar": 3190, "bugNodeLength": 180, "fixLineNum": 101, "fixNodeStartChar": 3190, "fixNodeLength": 216, "sourceBeforeFix": "name.startsWith(\"java.\") || name.startsWith(\"javax.\") || name.startsWith(\"junit.\")|| name.startsWith(\"sun.\")|| name.startsWith(\"com.sun.\")", "sourceAfterFix": "name.startsWith(\"java.\") || name.startsWith(\"javax.\") || name.startsWith(\"junit.\")|| name.startsWith(\"sun.\")|| name.startsWith(\"com.sun.\")|| name.contains(\"cglib\")"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "6add9f6ce1a5e1bdacacc4389364670eb451de48", "fixCommitParentSHA1": "c2a6625cfe1fe447d85b83eea748caa4bd482ae5", "bugFilePath": "src/com/google/inject/InjectorBuilder.java", "fixPatch": "diff --git a/src/com/google/inject/InjectorBuilder.java b/src/com/google/inject/InjectorBuilder.java\nindex 7694094..8a1beef 100644\n--- a/src/com/google/inject/InjectorBuilder.java\n+++ b/src/com/google/inject/InjectorBuilder.java\n@@ -67,25 +67,25 @@\n    * \n    * By default, explicit bindings are not required.\n    */\n-  InjectorBuilder requireExplicitBindings() {\n+  public InjectorBuilder requireExplicitBindings() {\n     this.jitDisabled = true;\n     return this;\n   }\n \n   /** Adds more modules that will be used when the Injector is created. */\n-  InjectorBuilder addModules(Iterable<? extends Module> modules) {\n+  public InjectorBuilder addModules(Iterable<? extends Module> modules) {\n     creator.addModules(modules);\n     return this;\n   }\n   \n   /** Adds more modules that will be used when the Injector is created. */\n-  InjectorBuilder addModules(Module... modules) {\n+  public InjectorBuilder addModules(Module... modules) {\n     creator.addModules(Arrays.asList(modules));\n     return this;\n   }\n \n   /** Builds the injector. */\n-  Injector build() {\n+  public Injector build() {\n     creator.injectorOptions(new InternalInjectorCreator.InjectorOptions(stage, jitDisabled));\n     return creator.build();\n   }\n", "projectName": "google.guice", "bugLineNum": 57, "bugNodeStartChar": 1806, "bugNodeLength": 710, "fixLineNum": 57, "fixNodeStartChar": 1806, "fixNodeLength": 717, "sourceBeforeFix": "0", "sourceAfterFix": "1"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "6add9f6ce1a5e1bdacacc4389364670eb451de48", "fixCommitParentSHA1": "c2a6625cfe1fe447d85b83eea748caa4bd482ae5", "bugFilePath": "src/com/google/inject/InjectorBuilder.java", "fixPatch": "diff --git a/src/com/google/inject/InjectorBuilder.java b/src/com/google/inject/InjectorBuilder.java\nindex 7694094..8a1beef 100644\n--- a/src/com/google/inject/InjectorBuilder.java\n+++ b/src/com/google/inject/InjectorBuilder.java\n@@ -67,25 +67,25 @@\n    * \n    * By default, explicit bindings are not required.\n    */\n-  InjectorBuilder requireExplicitBindings() {\n+  public InjectorBuilder requireExplicitBindings() {\n     this.jitDisabled = true;\n     return this;\n   }\n \n   /** Adds more modules that will be used when the Injector is created. */\n-  InjectorBuilder addModules(Iterable<? extends Module> modules) {\n+  public InjectorBuilder addModules(Iterable<? extends Module> modules) {\n     creator.addModules(modules);\n     return this;\n   }\n   \n   /** Adds more modules that will be used when the Injector is created. */\n-  InjectorBuilder addModules(Module... modules) {\n+  public InjectorBuilder addModules(Module... modules) {\n     creator.addModules(Arrays.asList(modules));\n     return this;\n   }\n \n   /** Builds the injector. */\n-  Injector build() {\n+  public Injector build() {\n     creator.injectorOptions(new InternalInjectorCreator.InjectorOptions(stage, jitDisabled));\n     return creator.build();\n   }\n", "projectName": "google.guice", "bugLineNum": 75, "bugNodeStartChar": 2520, "bugNodeLength": 193, "fixLineNum": 75, "fixNodeStartChar": 2520, "fixNodeLength": 200, "sourceBeforeFix": "0", "sourceAfterFix": "1"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "6add9f6ce1a5e1bdacacc4389364670eb451de48", "fixCommitParentSHA1": "c2a6625cfe1fe447d85b83eea748caa4bd482ae5", "bugFilePath": "src/com/google/inject/InjectorBuilder.java", "fixPatch": "diff --git a/src/com/google/inject/InjectorBuilder.java b/src/com/google/inject/InjectorBuilder.java\nindex 7694094..8a1beef 100644\n--- a/src/com/google/inject/InjectorBuilder.java\n+++ b/src/com/google/inject/InjectorBuilder.java\n@@ -67,25 +67,25 @@\n    * \n    * By default, explicit bindings are not required.\n    */\n-  InjectorBuilder requireExplicitBindings() {\n+  public InjectorBuilder requireExplicitBindings() {\n     this.jitDisabled = true;\n     return this;\n   }\n \n   /** Adds more modules that will be used when the Injector is created. */\n-  InjectorBuilder addModules(Iterable<? extends Module> modules) {\n+  public InjectorBuilder addModules(Iterable<? extends Module> modules) {\n     creator.addModules(modules);\n     return this;\n   }\n   \n   /** Adds more modules that will be used when the Injector is created. */\n-  InjectorBuilder addModules(Module... modules) {\n+  public InjectorBuilder addModules(Module... modules) {\n     creator.addModules(Arrays.asList(modules));\n     return this;\n   }\n \n   /** Builds the injector. */\n-  Injector build() {\n+  public Injector build() {\n     creator.injectorOptions(new InternalInjectorCreator.InjectorOptions(stage, jitDisabled));\n     return creator.build();\n   }\n", "projectName": "google.guice", "bugLineNum": 81, "bugNodeStartChar": 2719, "bugNodeLength": 191, "fixLineNum": 81, "fixNodeStartChar": 2719, "fixNodeLength": 198, "sourceBeforeFix": "0", "sourceAfterFix": "1"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "6add9f6ce1a5e1bdacacc4389364670eb451de48", "fixCommitParentSHA1": "c2a6625cfe1fe447d85b83eea748caa4bd482ae5", "bugFilePath": "src/com/google/inject/InjectorBuilder.java", "fixPatch": "diff --git a/src/com/google/inject/InjectorBuilder.java b/src/com/google/inject/InjectorBuilder.java\nindex 7694094..8a1beef 100644\n--- a/src/com/google/inject/InjectorBuilder.java\n+++ b/src/com/google/inject/InjectorBuilder.java\n@@ -67,25 +67,25 @@\n    * \n    * By default, explicit bindings are not required.\n    */\n-  InjectorBuilder requireExplicitBindings() {\n+  public InjectorBuilder requireExplicitBindings() {\n     this.jitDisabled = true;\n     return this;\n   }\n \n   /** Adds more modules that will be used when the Injector is created. */\n-  InjectorBuilder addModules(Iterable<? extends Module> modules) {\n+  public InjectorBuilder addModules(Iterable<? extends Module> modules) {\n     creator.addModules(modules);\n     return this;\n   }\n   \n   /** Adds more modules that will be used when the Injector is created. */\n-  InjectorBuilder addModules(Module... modules) {\n+  public InjectorBuilder addModules(Module... modules) {\n     creator.addModules(Arrays.asList(modules));\n     return this;\n   }\n \n   /** Builds the injector. */\n-  Injector build() {\n+  public Injector build() {\n     creator.injectorOptions(new InternalInjectorCreator.InjectorOptions(stage, jitDisabled));\n     return creator.build();\n   }\n", "projectName": "google.guice", "bugLineNum": 87, "bugNodeStartChar": 2914, "bugNodeLength": 174, "fixLineNum": 87, "fixNodeStartChar": 2914, "fixNodeLength": 181, "sourceBeforeFix": "0", "sourceAfterFix": "1"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "9a3c1894123322a90e5d2e002d7ae417349bfeed", "fixCommitParentSHA1": "03664e04288f62931716f88759d3faeef1fcca2b", "bugFilePath": "test/com/google/inject/internal/TypeResolverTest.java", "fixPatch": "diff --git a/test/com/google/inject/internal/TypeResolverTest.java b/test/com/google/inject/internal/TypeResolverTest.java\nindex 9bd994e..980bed3 100644\n--- a/test/com/google/inject/internal/TypeResolverTest.java\n+++ b/test/com/google/inject/internal/TypeResolverTest.java\n@@ -153,7 +153,7 @@\n   }\n \n   public void testRelatedTypeVariables() {\n-    TypeResolver resolver = new TypeResolver(arrayListOfString);\n+    TypeResolver resolver = new TypeResolver(hasRelatedOfString);\n     assertEquals(String.class, resolver.getParameterTypes(echo).get(0));\n     assertEquals(String.class, resolver.getReturnType(echo));\n   }\n", "projectName": "google.guice", "bugLineNum": 156, "bugNodeStartChar": 6157, "bugNodeLength": 35, "fixLineNum": 156, "fixNodeStartChar": 6157, "fixNodeLength": 36, "sourceBeforeFix": "new TypeResolver(arrayListOfString)", "sourceAfterFix": "new TypeResolver(hasRelatedOfString)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "7e6659ce3641a8747059ad871780490a79d1b020", "fixCommitParentSHA1": "51411871ee58f696f3a0806ba2ce06932f6469d1", "bugFilePath": "src/com/google/inject/DefaultConstructionProxyFactory.java", "fixPatch": "diff --git a/src/com/google/inject/DefaultConstructionProxyFactory.java b/src/com/google/inject/DefaultConstructionProxyFactory.java\nindex 6addfb4..bf04696 100644\n--- a/src/com/google/inject/DefaultConstructionProxyFactory.java\n+++ b/src/com/google/inject/DefaultConstructionProxyFactory.java\n@@ -80,10 +80,10 @@\n         return (T) fastConstructor.newInstance(arguments);\n       }\n       public List<Parameter<?>> getParameters() {\n-        return Parameter.forConstructor(errorHandler, fastConstructor);\n+        return Parameter.forConstructor(errorHandler, constructor);\n       }\n       public Member getMember() {\n-        return fastConstructor.getJavaConstructor();\n+        return constructor;\n       }\n     };\n   }\n", "projectName": "google.guice", "bugLineNum": 83, "bugNodeStartChar": 2930, "bugNodeLength": 55, "fixLineNum": 83, "fixNodeStartChar": 2930, "fixNodeLength": 51, "sourceBeforeFix": "Parameter.forConstructor(errorHandler,fastConstructor)", "sourceAfterFix": "Parameter.forConstructor(errorHandler,constructor)"}]