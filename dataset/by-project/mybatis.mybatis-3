[
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "c3a0527463220c6d4b717b71ab77f2da14b7af62",
    "fixCommitParentSHA1": "ff7dc3b8f044c86b5cb80d68eb06702ce244a2c6",
    "bugFilePath": "src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java b/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java\nindex 77addab..e5e173d 100644\n--- a/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java\n+++ b/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java\n@@ -96,14 +96,14 @@\n     register(String.class, JdbcType.CHAR, new StringTypeHandler());\n     register(String.class, JdbcType.CLOB, new ClobTypeHandler());\n     register(String.class, JdbcType.VARCHAR, new StringTypeHandler());\n-    register(String.class, JdbcType.LONGVARCHAR, new ClobTypeHandler());\n+    register(String.class, JdbcType.LONGVARCHAR, new StringTypeHandler());\n     register(String.class, JdbcType.NVARCHAR, new NStringTypeHandler());\n     register(String.class, JdbcType.NCHAR, new NStringTypeHandler());\n     register(String.class, JdbcType.NCLOB, new NClobTypeHandler());\n     register(JdbcType.CHAR, new StringTypeHandler());\n     register(JdbcType.VARCHAR, new StringTypeHandler());\n     register(JdbcType.CLOB, new ClobTypeHandler());\n-    register(JdbcType.LONGVARCHAR, new ClobTypeHandler());\n+    register(JdbcType.LONGVARCHAR, new StringTypeHandler());\n     register(JdbcType.NVARCHAR, new NStringTypeHandler());\n     register(JdbcType.NCHAR, new NStringTypeHandler());\n     register(JdbcType.NCLOB, new NClobTypeHandler());\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 99,
    "bugNodeStartChar": 3790,
    "bugNodeLength": 21,
    "fixLineNum": 99,
    "fixNodeStartChar": 3790,
    "fixNodeLength": 23,
    "sourceBeforeFix": "new ClobTypeHandler()",
    "sourceAfterFix": "new StringTypeHandler()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "c3a0527463220c6d4b717b71ab77f2da14b7af62",
    "fixCommitParentSHA1": "ff7dc3b8f044c86b5cb80d68eb06702ce244a2c6",
    "bugFilePath": "src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java b/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java\nindex 77addab..e5e173d 100644\n--- a/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java\n+++ b/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java\n@@ -96,14 +96,14 @@\n     register(String.class, JdbcType.CHAR, new StringTypeHandler());\n     register(String.class, JdbcType.CLOB, new ClobTypeHandler());\n     register(String.class, JdbcType.VARCHAR, new StringTypeHandler());\n-    register(String.class, JdbcType.LONGVARCHAR, new ClobTypeHandler());\n+    register(String.class, JdbcType.LONGVARCHAR, new StringTypeHandler());\n     register(String.class, JdbcType.NVARCHAR, new NStringTypeHandler());\n     register(String.class, JdbcType.NCHAR, new NStringTypeHandler());\n     register(String.class, JdbcType.NCLOB, new NClobTypeHandler());\n     register(JdbcType.CHAR, new StringTypeHandler());\n     register(JdbcType.VARCHAR, new StringTypeHandler());\n     register(JdbcType.CLOB, new ClobTypeHandler());\n-    register(JdbcType.LONGVARCHAR, new ClobTypeHandler());\n+    register(JdbcType.LONGVARCHAR, new StringTypeHandler());\n     register(JdbcType.NVARCHAR, new NStringTypeHandler());\n     register(JdbcType.NCHAR, new NStringTypeHandler());\n     register(JdbcType.NCLOB, new NClobTypeHandler());\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 106,
    "bugNodeStartChar": 4223,
    "bugNodeLength": 21,
    "fixLineNum": 106,
    "fixNodeStartChar": 4223,
    "fixNodeLength": 23,
    "sourceBeforeFix": "new ClobTypeHandler()",
    "sourceAfterFix": "new StringTypeHandler()"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "f0d1b6f9bdbb98855186505d307274bf2741d700",
    "fixCommitParentSHA1": "38e36fd91437d9758a1661bf5039bfd6de223b7d",
    "bugFilePath": "src/main/java/org/apache/ibatis/io/ResolverUtil.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/io/ResolverUtil.java b/src/main/java/org/apache/ibatis/io/ResolverUtil.java\nindex c264919..2847606 100644\n--- a/src/main/java/org/apache/ibatis/io/ResolverUtil.java\n+++ b/src/main/java/org/apache/ibatis/io/ResolverUtil.java\n@@ -1,5 +1,5 @@\n /**\n- *    Copyright 2009-2016 the original author or authors.\n+ *    Copyright 2009-2017 the original author or authors.\n  *\n  *    Licensed under the Apache License, Version 2.0 (the \"License\");\n  *    you may not use this file except in compliance with the License.\n@@ -66,7 +66,7 @@\n    * A simple interface that specifies how to test classes to determine if they\n    * are to be included in the results produced by the ResolverUtil.\n    */\n-  public static interface Test {\n+  public interface Test {\n     /**\n      * Will be called repeatedly with candidate classes. Must return True if a class\n      * is to be included in the results, false otherwise.\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 65,
    "bugNodeStartChar": 2798,
    "bugNodeLength": 390,
    "fixLineNum": 65,
    "fixNodeStartChar": 2798,
    "fixNodeLength": 383,
    "sourceBeforeFix": "9",
    "sourceAfterFix": "1"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "540a344557f0e7819dbddaff77b36df823b356bd",
    "fixCommitParentSHA1": "38e36fd91437d9758a1661bf5039bfd6de223b7d",
    "bugFilePath": "src/main/java/org/apache/ibatis/io/ResolverUtil.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/io/ResolverUtil.java b/src/main/java/org/apache/ibatis/io/ResolverUtil.java\nindex c264919..2847606 100644\n--- a/src/main/java/org/apache/ibatis/io/ResolverUtil.java\n+++ b/src/main/java/org/apache/ibatis/io/ResolverUtil.java\n@@ -1,5 +1,5 @@\n /**\n- *    Copyright 2009-2016 the original author or authors.\n+ *    Copyright 2009-2017 the original author or authors.\n  *\n  *    Licensed under the Apache License, Version 2.0 (the \"License\");\n  *    you may not use this file except in compliance with the License.\n@@ -66,7 +66,7 @@\n    * A simple interface that specifies how to test classes to determine if they\n    * are to be included in the results produced by the ResolverUtil.\n    */\n-  public static interface Test {\n+  public interface Test {\n     /**\n      * Will be called repeatedly with candidate classes. Must return True if a class\n      * is to be included in the results, false otherwise.\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 65,
    "bugNodeStartChar": 2798,
    "bugNodeLength": 390,
    "fixLineNum": 65,
    "fixNodeStartChar": 2798,
    "fixNodeLength": 383,
    "sourceBeforeFix": "9",
    "sourceAfterFix": "1"
  },
  {
    "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
    "fixCommitSHA1": "e7919feab1a5f371806a2f6d267e84e9542e3f26",
    "fixCommitParentSHA1": "99b74df77f69e533c48e8ae0e25a6eb3780b9bf0",
    "bugFilePath": "src/main/java/org/apache/ibatis/executor/resultset/PrimitiveTypes.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/executor/resultset/PrimitiveTypes.java b/src/main/java/org/apache/ibatis/executor/resultset/PrimitiveTypes.java\nindex 09a6cc6..24aa995 100644\n--- a/src/main/java/org/apache/ibatis/executor/resultset/PrimitiveTypes.java\n+++ b/src/main/java/org/apache/ibatis/executor/resultset/PrimitiveTypes.java\n@@ -39,7 +39,7 @@\n \n   private void add(final Class<?> primitiveType, final Class<?> wrapperType) {\n     primitiveToWrappers.put(primitiveType, wrapperType);\n-    primitiveToWrappers.put(wrapperType, primitiveType);\n+    wrappersToPrimitives.put(wrapperType, primitiveType);\n   }\n \n   public Class<?> getWrapper(final Class<?> primitiveType) {\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 42,
    "bugNodeStartChar": 1525,
    "bugNodeLength": 51,
    "fixLineNum": 42,
    "fixNodeStartChar": 1525,
    "fixNodeLength": 52,
    "sourceBeforeFix": "primitiveToWrappers.put(wrapperType,primitiveType)",
    "sourceAfterFix": "wrappersToPrimitives.put(wrapperType,primitiveType)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "e7919feab1a5f371806a2f6d267e84e9542e3f26",
    "fixCommitParentSHA1": "99b74df77f69e533c48e8ae0e25a6eb3780b9bf0",
    "bugFilePath": "src/main/java/org/apache/ibatis/executor/resultset/PrimitiveTypes.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/executor/resultset/PrimitiveTypes.java b/src/main/java/org/apache/ibatis/executor/resultset/PrimitiveTypes.java\nindex 09a6cc6..24aa995 100644\n--- a/src/main/java/org/apache/ibatis/executor/resultset/PrimitiveTypes.java\n+++ b/src/main/java/org/apache/ibatis/executor/resultset/PrimitiveTypes.java\n@@ -39,7 +39,7 @@\n \n   private void add(final Class<?> primitiveType, final Class<?> wrapperType) {\n     primitiveToWrappers.put(primitiveType, wrapperType);\n-    primitiveToWrappers.put(wrapperType, primitiveType);\n+    wrappersToPrimitives.put(wrapperType, primitiveType);\n   }\n \n   public Class<?> getWrapper(final Class<?> primitiveType) {\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 42,
    "bugNodeStartChar": 1525,
    "bugNodeLength": 51,
    "fixLineNum": 42,
    "fixNodeStartChar": 1525,
    "fixNodeLength": 52,
    "sourceBeforeFix": "primitiveToWrappers.put(wrapperType,primitiveType)",
    "sourceAfterFix": "wrappersToPrimitives.put(wrapperType,primitiveType)"
  },
  {
    "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
    "fixCommitSHA1": "9ffeb75057d541530b7ff410cfe220df26c893be",
    "fixCommitParentSHA1": "99b74df77f69e533c48e8ae0e25a6eb3780b9bf0",
    "bugFilePath": "src/main/java/org/apache/ibatis/executor/resultset/PrimitiveTypes.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/executor/resultset/PrimitiveTypes.java b/src/main/java/org/apache/ibatis/executor/resultset/PrimitiveTypes.java\nindex 09a6cc6..24aa995 100644\n--- a/src/main/java/org/apache/ibatis/executor/resultset/PrimitiveTypes.java\n+++ b/src/main/java/org/apache/ibatis/executor/resultset/PrimitiveTypes.java\n@@ -39,7 +39,7 @@\n \n   private void add(final Class<?> primitiveType, final Class<?> wrapperType) {\n     primitiveToWrappers.put(primitiveType, wrapperType);\n-    primitiveToWrappers.put(wrapperType, primitiveType);\n+    wrappersToPrimitives.put(wrapperType, primitiveType);\n   }\n \n   public Class<?> getWrapper(final Class<?> primitiveType) {\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 42,
    "bugNodeStartChar": 1525,
    "bugNodeLength": 51,
    "fixLineNum": 42,
    "fixNodeStartChar": 1525,
    "fixNodeLength": 52,
    "sourceBeforeFix": "primitiveToWrappers.put(wrapperType,primitiveType)",
    "sourceAfterFix": "wrappersToPrimitives.put(wrapperType,primitiveType)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "9ffeb75057d541530b7ff410cfe220df26c893be",
    "fixCommitParentSHA1": "99b74df77f69e533c48e8ae0e25a6eb3780b9bf0",
    "bugFilePath": "src/main/java/org/apache/ibatis/executor/resultset/PrimitiveTypes.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/executor/resultset/PrimitiveTypes.java b/src/main/java/org/apache/ibatis/executor/resultset/PrimitiveTypes.java\nindex 09a6cc6..24aa995 100644\n--- a/src/main/java/org/apache/ibatis/executor/resultset/PrimitiveTypes.java\n+++ b/src/main/java/org/apache/ibatis/executor/resultset/PrimitiveTypes.java\n@@ -39,7 +39,7 @@\n \n   private void add(final Class<?> primitiveType, final Class<?> wrapperType) {\n     primitiveToWrappers.put(primitiveType, wrapperType);\n-    primitiveToWrappers.put(wrapperType, primitiveType);\n+    wrappersToPrimitives.put(wrapperType, primitiveType);\n   }\n \n   public Class<?> getWrapper(final Class<?> primitiveType) {\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 42,
    "bugNodeStartChar": 1525,
    "bugNodeLength": 51,
    "fixLineNum": 42,
    "fixNodeStartChar": 1525,
    "fixNodeLength": 52,
    "sourceBeforeFix": "primitiveToWrappers.put(wrapperType,primitiveType)",
    "sourceAfterFix": "wrappersToPrimitives.put(wrapperType,primitiveType)"
  },
  {
    "bugType": "SWAP_BOOLEAN_LITERAL",
    "fixCommitSHA1": "01736c9cd437a919f62a5666cb86f3b438518442",
    "fixCommitParentSHA1": "46c9e07804ddc644d96153864bd86cc7ddb6029f",
    "bugFilePath": "src/test/java/org/apache/ibatis/type/CharacterTypeHandlerTest.java",
    "fixPatch": "diff --git a/src/test/java/org/apache/ibatis/type/CharacterTypeHandlerTest.java b/src/test/java/org/apache/ibatis/type/CharacterTypeHandlerTest.java\nindex 7e09ebf..f452012 100644\n--- a/src/test/java/org/apache/ibatis/type/CharacterTypeHandlerTest.java\n+++ b/src/test/java/org/apache/ibatis/type/CharacterTypeHandlerTest.java\n@@ -67,7 +67,7 @@\n   @Test\n   public void shouldGetResultNullFromResultSetByPosition() throws Exception {\n     when(rs.getString(1)).thenReturn(null);\n-    when(rs.wasNull()).thenReturn(false);\n+    when(rs.wasNull()).thenReturn(true);\n     assertNull(TYPE_HANDLER.getResult(rs, 1));\n   }\n \n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 70,
    "bugNodeStartChar": 2294,
    "bugNodeLength": 36,
    "fixLineNum": 70,
    "fixNodeStartChar": 2294,
    "fixNodeLength": 35,
    "sourceBeforeFix": "when(rs.wasNull()).thenReturn(false)",
    "sourceAfterFix": "when(rs.wasNull()).thenReturn(true)"
  },
  {
    "bugType": "SWAP_BOOLEAN_LITERAL",
    "fixCommitSHA1": "86587646a01b9b0c33bcc9f929352f400234561e",
    "fixCommitParentSHA1": "be0aed3aa83be46c56be15b32c28e45cba1049a6",
    "bugFilePath": "src/test/java/org/apache/ibatis/type/CharacterTypeHandlerTest.java",
    "fixPatch": "diff --git a/src/test/java/org/apache/ibatis/type/CharacterTypeHandlerTest.java b/src/test/java/org/apache/ibatis/type/CharacterTypeHandlerTest.java\nindex 7e09ebf..f452012 100644\n--- a/src/test/java/org/apache/ibatis/type/CharacterTypeHandlerTest.java\n+++ b/src/test/java/org/apache/ibatis/type/CharacterTypeHandlerTest.java\n@@ -67,7 +67,7 @@\n   @Test\n   public void shouldGetResultNullFromResultSetByPosition() throws Exception {\n     when(rs.getString(1)).thenReturn(null);\n-    when(rs.wasNull()).thenReturn(false);\n+    when(rs.wasNull()).thenReturn(true);\n     assertNull(TYPE_HANDLER.getResult(rs, 1));\n   }\n \n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 70,
    "bugNodeStartChar": 2294,
    "bugNodeLength": 36,
    "fixLineNum": 70,
    "fixNodeStartChar": 2294,
    "fixNodeLength": 35,
    "sourceBeforeFix": "when(rs.wasNull()).thenReturn(false)",
    "sourceAfterFix": "when(rs.wasNull()).thenReturn(true)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "2c9dfea16074453e9d5a3c17a89e6d390de7ded1",
    "fixCommitParentSHA1": "8b713041908ab9af083336a96bb44c9f09db4972",
    "bugFilePath": "src/main/java/org/apache/ibatis/type/NStringTypeHandler.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java b/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java\nindex 52d59b4..91c5b63 100644\n--- a/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java\n+++ b/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java\n@@ -28,28 +28,25 @@\n   @Override\n   public void setNonNullParameter(PreparedStatement ps, int i, String parameter, JdbcType jdbcType)\n       throws SQLException {\n-//    ps.setNString(i, ((String) parameter));\n-    ps.setString(i, parameter);\n+    ps.setNString(i, parameter);\n   }\n \n   @Override\n   public String getNullableResult(ResultSet rs, String columnName)\n       throws SQLException {\n-//    return rs.getNString(columnName);\n-    return rs.getString(columnName);\n+    return rs.getNString(columnName);\n   }\n \n   @Override\n   public String getNullableResult(ResultSet rs, int columnIndex)\n       throws SQLException {\n-    return rs.getString(columnIndex);\n+    return rs.getNString(columnIndex);\n   }\n \n   @Override\n   public String getNullableResult(CallableStatement cs, int columnIndex)\n       throws SQLException {\n-//    return cs.getNString(columnIndex);\n-    return cs.getString(columnIndex);\n+    return cs.getNString(columnIndex);\n   }\n \n }\n\\ No newline at end of file\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 32,
    "bugNodeStartChar": 1101,
    "bugNodeLength": 26,
    "fixLineNum": 31,
    "fixNodeStartChar": 1055,
    "fixNodeLength": 27,
    "sourceBeforeFix": "ps.setString(i,parameter)",
    "sourceAfterFix": "ps.setNString(i,parameter)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "2c9dfea16074453e9d5a3c17a89e6d390de7ded1",
    "fixCommitParentSHA1": "8b713041908ab9af083336a96bb44c9f09db4972",
    "bugFilePath": "src/main/java/org/apache/ibatis/type/NStringTypeHandler.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java b/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java\nindex 52d59b4..91c5b63 100644\n--- a/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java\n+++ b/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java\n@@ -28,28 +28,25 @@\n   @Override\n   public void setNonNullParameter(PreparedStatement ps, int i, String parameter, JdbcType jdbcType)\n       throws SQLException {\n-//    ps.setNString(i, ((String) parameter));\n-    ps.setString(i, parameter);\n+    ps.setNString(i, parameter);\n   }\n \n   @Override\n   public String getNullableResult(ResultSet rs, String columnName)\n       throws SQLException {\n-//    return rs.getNString(columnName);\n-    return rs.getString(columnName);\n+    return rs.getNString(columnName);\n   }\n \n   @Override\n   public String getNullableResult(ResultSet rs, int columnIndex)\n       throws SQLException {\n-    return rs.getString(columnIndex);\n+    return rs.getNString(columnIndex);\n   }\n \n   @Override\n   public String getNullableResult(CallableStatement cs, int columnIndex)\n       throws SQLException {\n-//    return cs.getNString(columnIndex);\n-    return cs.getString(columnIndex);\n+    return cs.getNString(columnIndex);\n   }\n \n }\n\\ No newline at end of file\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 32,
    "bugNodeStartChar": 1101,
    "bugNodeLength": 26,
    "fixLineNum": 31,
    "fixNodeStartChar": 1055,
    "fixNodeLength": 27,
    "sourceBeforeFix": "ps.setString(i,parameter)",
    "sourceAfterFix": "ps.setNString(i,parameter)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "2c9dfea16074453e9d5a3c17a89e6d390de7ded1",
    "fixCommitParentSHA1": "8b713041908ab9af083336a96bb44c9f09db4972",
    "bugFilePath": "src/main/java/org/apache/ibatis/type/NStringTypeHandler.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java b/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java\nindex 52d59b4..91c5b63 100644\n--- a/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java\n+++ b/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java\n@@ -28,28 +28,25 @@\n   @Override\n   public void setNonNullParameter(PreparedStatement ps, int i, String parameter, JdbcType jdbcType)\n       throws SQLException {\n-//    ps.setNString(i, ((String) parameter));\n-    ps.setString(i, parameter);\n+    ps.setNString(i, parameter);\n   }\n \n   @Override\n   public String getNullableResult(ResultSet rs, String columnName)\n       throws SQLException {\n-//    return rs.getNString(columnName);\n-    return rs.getString(columnName);\n+    return rs.getNString(columnName);\n   }\n \n   @Override\n   public String getNullableResult(ResultSet rs, int columnIndex)\n       throws SQLException {\n-    return rs.getString(columnIndex);\n+    return rs.getNString(columnIndex);\n   }\n \n   @Override\n   public String getNullableResult(CallableStatement cs, int columnIndex)\n       throws SQLException {\n-//    return cs.getNString(columnIndex);\n-    return cs.getString(columnIndex);\n+    return cs.getNString(columnIndex);\n   }\n \n }\n\\ No newline at end of file\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 39,
    "bugNodeStartChar": 1292,
    "bugNodeLength": 24,
    "fixLineNum": 38,
    "fixNodeStartChar": 1252,
    "fixNodeLength": 25,
    "sourceBeforeFix": "rs.getString(columnName)",
    "sourceAfterFix": "rs.getNString(columnName)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "2c9dfea16074453e9d5a3c17a89e6d390de7ded1",
    "fixCommitParentSHA1": "8b713041908ab9af083336a96bb44c9f09db4972",
    "bugFilePath": "src/main/java/org/apache/ibatis/type/NStringTypeHandler.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java b/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java\nindex 52d59b4..91c5b63 100644\n--- a/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java\n+++ b/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java\n@@ -28,28 +28,25 @@\n   @Override\n   public void setNonNullParameter(PreparedStatement ps, int i, String parameter, JdbcType jdbcType)\n       throws SQLException {\n-//    ps.setNString(i, ((String) parameter));\n-    ps.setString(i, parameter);\n+    ps.setNString(i, parameter);\n   }\n \n   @Override\n   public String getNullableResult(ResultSet rs, String columnName)\n       throws SQLException {\n-//    return rs.getNString(columnName);\n-    return rs.getString(columnName);\n+    return rs.getNString(columnName);\n   }\n \n   @Override\n   public String getNullableResult(ResultSet rs, int columnIndex)\n       throws SQLException {\n-    return rs.getString(columnIndex);\n+    return rs.getNString(columnIndex);\n   }\n \n   @Override\n   public String getNullableResult(CallableStatement cs, int columnIndex)\n       throws SQLException {\n-//    return cs.getNString(columnIndex);\n-    return cs.getString(columnIndex);\n+    return cs.getNString(columnIndex);\n   }\n \n }\n\\ No newline at end of file\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 39,
    "bugNodeStartChar": 1292,
    "bugNodeLength": 24,
    "fixLineNum": 38,
    "fixNodeStartChar": 1252,
    "fixNodeLength": 25,
    "sourceBeforeFix": "rs.getString(columnName)",
    "sourceAfterFix": "rs.getNString(columnName)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "2c9dfea16074453e9d5a3c17a89e6d390de7ded1",
    "fixCommitParentSHA1": "8b713041908ab9af083336a96bb44c9f09db4972",
    "bugFilePath": "src/main/java/org/apache/ibatis/type/NStringTypeHandler.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java b/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java\nindex 52d59b4..91c5b63 100644\n--- a/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java\n+++ b/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java\n@@ -28,28 +28,25 @@\n   @Override\n   public void setNonNullParameter(PreparedStatement ps, int i, String parameter, JdbcType jdbcType)\n       throws SQLException {\n-//    ps.setNString(i, ((String) parameter));\n-    ps.setString(i, parameter);\n+    ps.setNString(i, parameter);\n   }\n \n   @Override\n   public String getNullableResult(ResultSet rs, String columnName)\n       throws SQLException {\n-//    return rs.getNString(columnName);\n-    return rs.getString(columnName);\n+    return rs.getNString(columnName);\n   }\n \n   @Override\n   public String getNullableResult(ResultSet rs, int columnIndex)\n       throws SQLException {\n-    return rs.getString(columnIndex);\n+    return rs.getNString(columnIndex);\n   }\n \n   @Override\n   public String getNullableResult(CallableStatement cs, int columnIndex)\n       throws SQLException {\n-//    return cs.getNString(columnIndex);\n-    return cs.getString(columnIndex);\n+    return cs.getNString(columnIndex);\n   }\n \n }\n\\ No newline at end of file\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 45,
    "bugNodeStartChar": 1439,
    "bugNodeLength": 25,
    "fixLineNum": 45,
    "fixNodeStartChar": 1439,
    "fixNodeLength": 26,
    "sourceBeforeFix": "rs.getString(columnIndex)",
    "sourceAfterFix": "rs.getNString(columnIndex)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "2c9dfea16074453e9d5a3c17a89e6d390de7ded1",
    "fixCommitParentSHA1": "8b713041908ab9af083336a96bb44c9f09db4972",
    "bugFilePath": "src/main/java/org/apache/ibatis/type/NStringTypeHandler.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java b/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java\nindex 52d59b4..91c5b63 100644\n--- a/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java\n+++ b/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java\n@@ -28,28 +28,25 @@\n   @Override\n   public void setNonNullParameter(PreparedStatement ps, int i, String parameter, JdbcType jdbcType)\n       throws SQLException {\n-//    ps.setNString(i, ((String) parameter));\n-    ps.setString(i, parameter);\n+    ps.setNString(i, parameter);\n   }\n \n   @Override\n   public String getNullableResult(ResultSet rs, String columnName)\n       throws SQLException {\n-//    return rs.getNString(columnName);\n-    return rs.getString(columnName);\n+    return rs.getNString(columnName);\n   }\n \n   @Override\n   public String getNullableResult(ResultSet rs, int columnIndex)\n       throws SQLException {\n-    return rs.getString(columnIndex);\n+    return rs.getNString(columnIndex);\n   }\n \n   @Override\n   public String getNullableResult(CallableStatement cs, int columnIndex)\n       throws SQLException {\n-//    return cs.getNString(columnIndex);\n-    return cs.getString(columnIndex);\n+    return cs.getNString(columnIndex);\n   }\n \n }\n\\ No newline at end of file\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 45,
    "bugNodeStartChar": 1439,
    "bugNodeLength": 25,
    "fixLineNum": 45,
    "fixNodeStartChar": 1439,
    "fixNodeLength": 26,
    "sourceBeforeFix": "rs.getString(columnIndex)",
    "sourceAfterFix": "rs.getNString(columnIndex)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "2c9dfea16074453e9d5a3c17a89e6d390de7ded1",
    "fixCommitParentSHA1": "8b713041908ab9af083336a96bb44c9f09db4972",
    "bugFilePath": "src/main/java/org/apache/ibatis/type/NStringTypeHandler.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java b/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java\nindex 52d59b4..91c5b63 100644\n--- a/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java\n+++ b/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java\n@@ -28,28 +28,25 @@\n   @Override\n   public void setNonNullParameter(PreparedStatement ps, int i, String parameter, JdbcType jdbcType)\n       throws SQLException {\n-//    ps.setNString(i, ((String) parameter));\n-    ps.setString(i, parameter);\n+    ps.setNString(i, parameter);\n   }\n \n   @Override\n   public String getNullableResult(ResultSet rs, String columnName)\n       throws SQLException {\n-//    return rs.getNString(columnName);\n-    return rs.getString(columnName);\n+    return rs.getNString(columnName);\n   }\n \n   @Override\n   public String getNullableResult(ResultSet rs, int columnIndex)\n       throws SQLException {\n-    return rs.getString(columnIndex);\n+    return rs.getNString(columnIndex);\n   }\n \n   @Override\n   public String getNullableResult(CallableStatement cs, int columnIndex)\n       throws SQLException {\n-//    return cs.getNString(columnIndex);\n-    return cs.getString(columnIndex);\n+    return cs.getNString(columnIndex);\n   }\n \n }\n\\ No newline at end of file\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 52,
    "bugNodeStartChar": 1636,
    "bugNodeLength": 25,
    "fixLineNum": 51,
    "fixNodeStartChar": 1595,
    "fixNodeLength": 26,
    "sourceBeforeFix": "cs.getString(columnIndex)",
    "sourceAfterFix": "cs.getNString(columnIndex)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "2c9dfea16074453e9d5a3c17a89e6d390de7ded1",
    "fixCommitParentSHA1": "8b713041908ab9af083336a96bb44c9f09db4972",
    "bugFilePath": "src/main/java/org/apache/ibatis/type/NStringTypeHandler.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java b/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java\nindex 52d59b4..91c5b63 100644\n--- a/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java\n+++ b/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java\n@@ -28,28 +28,25 @@\n   @Override\n   public void setNonNullParameter(PreparedStatement ps, int i, String parameter, JdbcType jdbcType)\n       throws SQLException {\n-//    ps.setNString(i, ((String) parameter));\n-    ps.setString(i, parameter);\n+    ps.setNString(i, parameter);\n   }\n \n   @Override\n   public String getNullableResult(ResultSet rs, String columnName)\n       throws SQLException {\n-//    return rs.getNString(columnName);\n-    return rs.getString(columnName);\n+    return rs.getNString(columnName);\n   }\n \n   @Override\n   public String getNullableResult(ResultSet rs, int columnIndex)\n       throws SQLException {\n-    return rs.getString(columnIndex);\n+    return rs.getNString(columnIndex);\n   }\n \n   @Override\n   public String getNullableResult(CallableStatement cs, int columnIndex)\n       throws SQLException {\n-//    return cs.getNString(columnIndex);\n-    return cs.getString(columnIndex);\n+    return cs.getNString(columnIndex);\n   }\n \n }\n\\ No newline at end of file\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 52,
    "bugNodeStartChar": 1636,
    "bugNodeLength": 25,
    "fixLineNum": 51,
    "fixNodeStartChar": 1595,
    "fixNodeLength": 26,
    "sourceBeforeFix": "cs.getString(columnIndex)",
    "sourceAfterFix": "cs.getNString(columnIndex)"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "ea252e39da774a9dc81718f19019ba533209f774",
    "fixCommitParentSHA1": "3b016b86ecf0e167ceaa67456b170ef7b0cb0354",
    "bugFilePath": "src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java b/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java\nindex 71531d3..c48448a 100644\n--- a/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java\n+++ b/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java\n@@ -106,7 +106,7 @@\n   private void configurationElement(XNode context) {\n     try {\n       String namespace = context.getStringAttribute(\"namespace\");\n-      if (namespace.equals(\"\")) {\n+      if (namespace == null || namespace.equals(\"\")) {\n         throw new BuilderException(\"Mapper's namespace cannot be empty\");\n       }\n       builderAssistant.setCurrentNamespace(namespace);\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 109,
    "bugNodeStartChar": 4145,
    "bugNodeLength": 20,
    "fixLineNum": 109,
    "fixNodeStartChar": 4145,
    "fixNodeLength": 41,
    "sourceBeforeFix": "namespace.equals(\"\")",
    "sourceAfterFix": "namespace == null || namespace.equals(\"\")"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "cb488601eb5c45dcd1774022fdc8748e9a3668aa",
    "fixCommitParentSHA1": "b9ac317b88d37abef1732dcd1063738d1cdeea1a",
    "bugFilePath": "src/main/java/org/apache/ibatis/cache/decorators/FifoCache.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/cache/decorators/FifoCache.java b/src/main/java/org/apache/ibatis/cache/decorators/FifoCache.java\nindex 42e9a4e..c7f3808 100644\n--- a/src/main/java/org/apache/ibatis/cache/decorators/FifoCache.java\n+++ b/src/main/java/org/apache/ibatis/cache/decorators/FifoCache.java\n@@ -26,7 +26,7 @@\n public class FifoCache implements Cache {\n \n   private final Cache delegate;\n-  private final LinkedList<Object> keyList;\n+  private LinkedList<Object> keyList;\n   private int size;\n \n   public FifoCache(Cache delegate) {\n@@ -62,7 +62,7 @@\n \n   public void clear() {\n     delegate.clear();\n-    keyList.clear();\n+    keyList = new LinkedList<Object>(); // see #138\n   }\n \n   public ReadWriteLock getReadWriteLock() {\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 29,
    "bugNodeStartChar": 942,
    "bugNodeLength": 41,
    "fixLineNum": 29,
    "fixNodeStartChar": 942,
    "fixNodeLength": 35,
    "sourceBeforeFix": "18",
    "sourceAfterFix": "2"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "6e5b82f6f987d5dee5e5dba4dfbf3e3873f5a777",
    "fixCommitParentSHA1": "58cc1a5de11a664037ece5cd51d85b296cfc6e7b",
    "bugFilePath": "src/main/java/org/apache/ibatis/executor/BaseExecutor.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/executor/BaseExecutor.java b/src/main/java/org/apache/ibatis/executor/BaseExecutor.java\nindex 68586fe..839a0d0 100644\n--- a/src/main/java/org/apache/ibatis/executor/BaseExecutor.java\n+++ b/src/main/java/org/apache/ibatis/executor/BaseExecutor.java\n@@ -79,7 +79,7 @@\n       }\n     } catch (SQLException e) {\n       // Ignore.  There's nothing that can be done at this point.\n-      log.debug(\"Unexpected exception on closing transaction.  Cause: \" + e);\n+      log.warn(\"Unexpected exception on closing transaction.  Cause: \" + e);\n     } finally {\n       transaction = null;\n       deferredLoads = null;\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 82,
    "bugNodeStartChar": 3047,
    "bugNodeLength": 70,
    "fixLineNum": 82,
    "fixNodeStartChar": 3047,
    "fixNodeLength": 69,
    "sourceBeforeFix": "log.debug(\"Unexpected exception on closing transaction.  Cause: \" + e)",
    "sourceAfterFix": "log.warn(\"Unexpected exception on closing transaction.  Cause: \" + e)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "6e5b82f6f987d5dee5e5dba4dfbf3e3873f5a777",
    "fixCommitParentSHA1": "58cc1a5de11a664037ece5cd51d85b296cfc6e7b",
    "bugFilePath": "src/main/java/org/apache/ibatis/executor/BaseExecutor.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/executor/BaseExecutor.java b/src/main/java/org/apache/ibatis/executor/BaseExecutor.java\nindex 68586fe..839a0d0 100644\n--- a/src/main/java/org/apache/ibatis/executor/BaseExecutor.java\n+++ b/src/main/java/org/apache/ibatis/executor/BaseExecutor.java\n@@ -79,7 +79,7 @@\n       }\n     } catch (SQLException e) {\n       // Ignore.  There's nothing that can be done at this point.\n-      log.debug(\"Unexpected exception on closing transaction.  Cause: \" + e);\n+      log.warn(\"Unexpected exception on closing transaction.  Cause: \" + e);\n     } finally {\n       transaction = null;\n       deferredLoads = null;\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 82,
    "bugNodeStartChar": 3047,
    "bugNodeLength": 70,
    "fixLineNum": 82,
    "fixNodeStartChar": 3047,
    "fixNodeLength": 69,
    "sourceBeforeFix": "log.debug(\"Unexpected exception on closing transaction.  Cause: \" + e)",
    "sourceAfterFix": "log.warn(\"Unexpected exception on closing transaction.  Cause: \" + e)"
  },
  {
    "bugType": "MORE_SPECIFIC_IF",
    "fixCommitSHA1": "1abf653a0774560f3da680505689e05978d75e07",
    "fixCommitParentSHA1": "4d08f3890b5901468b0887e42bb59f37bf64535b",
    "bugFilePath": "src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java b/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java\nindex d73a8b5..ad3dbd8 100644\n--- a/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java\n+++ b/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java\n@@ -37,7 +37,7 @@\n   private String username;\n   private String password;\n \n-  private boolean autoCommit;\n+  private Boolean autoCommit;\n   private Integer defaultTransactionIsolationLevel;\n \n   static {\n@@ -148,11 +148,11 @@\n     this.password = password;\n   }\n \n-  public boolean isAutoCommit() {\n+  public Boolean isAutoCommit() {\n     return autoCommit;\n   }\n \n-  public void setAutoCommit(boolean autoCommit) {\n+  public void setAutoCommit(Boolean autoCommit) {\n     this.autoCommit = autoCommit;\n   }\n \n@@ -198,7 +198,7 @@\n   }\n \n   private void configureConnection(Connection conn) throws SQLException {\n-    if (autoCommit != conn.getAutoCommit()) {\n+    if (autoCommit != null && autoCommit != conn.getAutoCommit()) {\n       conn.setAutoCommit(autoCommit);\n     }\n     if (defaultTransactionIsolationLevel != null) {\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 201,
    "bugNodeStartChar": 5524,
    "bugNodeLength": 34,
    "fixLineNum": 201,
    "fixNodeStartChar": 5524,
    "fixNodeLength": 56,
    "sourceBeforeFix": "autoCommit != conn.getAutoCommit()",
    "sourceAfterFix": "autoCommit != null && autoCommit != conn.getAutoCommit()"
  },
  {
    "bugType": "MORE_SPECIFIC_IF",
    "fixCommitSHA1": "9910fd182dab98e0b505348fa1a0b112994c9e2d",
    "fixCommitParentSHA1": "b1d9b851f8b959533378f933da6426af0f9f2c1f",
    "bugFilePath": "src/main/java/org/apache/ibatis/type/TypeAliasRegistry.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/type/TypeAliasRegistry.java b/src/main/java/org/apache/ibatis/type/TypeAliasRegistry.java\nindex 6679e1f..af0b681 100644\n--- a/src/main/java/org/apache/ibatis/type/TypeAliasRegistry.java\n+++ b/src/main/java/org/apache/ibatis/type/TypeAliasRegistry.java\n@@ -124,7 +124,8 @@\n     Set<Class<? extends Class<?>>> typeSet = resolverUtil.getClasses();\r\n     for(Class<?> type : typeSet){\r\n       //Ignore inner classes and interfaces (including package-info.java)\r\n-      if (!type.isAnonymousClass() && !type.isInterface()) {\r\n+      // Skip also inner classes. See issue #6\r\n+      if (!type.isAnonymousClass() && !type.isInterface() && !type.isMemberClass()) {\r\n         registerAlias(type);\r\n       }\r\n     }\r\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 127,
    "bugNodeStartChar": 4743,
    "bugNodeLength": 47,
    "fixLineNum": 128,
    "fixNodeStartChar": 4664,
    "fixNodeLength": 72,
    "sourceBeforeFix": "!type.isAnonymousClass() && !type.isInterface()",
    "sourceAfterFix": "!type.isAnonymousClass() && !type.isInterface() && !type.isMemberClass()"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "71231417d7ecd61584d9c05aa7716e9593255d3a",
    "fixCommitParentSHA1": "bd42b0ac0e8200ca0a7846d7e17217f77e3c6d56",
    "bugFilePath": "src/main/java/org/apache/ibatis/builder/xml/XMLStatementBuilder.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/builder/xml/XMLStatementBuilder.java b/src/main/java/org/apache/ibatis/builder/xml/XMLStatementBuilder.java\nindex 7d4f1c6..47608e6 100644\n--- a/src/main/java/org/apache/ibatis/builder/xml/XMLStatementBuilder.java\n+++ b/src/main/java/org/apache/ibatis/builder/xml/XMLStatementBuilder.java\n@@ -169,7 +169,7 @@\n       // skip this statement if there is a previous one with a not null databaseId\r\n       id = builderAssistant.applyCurrentNamespace(id, false);\r\n       if (this.configuration.hasStatement(id, false)) {\r\n-        MappedStatement previous = this.configuration.getMappedStatement(id);\r\n+        MappedStatement previous = this.configuration.getMappedStatement(id, false); // issue #2\r\n         if (previous.getDatabaseId() != null) {\r\n           return false;\r\n         }\r\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 172,
    "bugNodeStartChar": 8400,
    "bugNodeLength": 41,
    "fixLineNum": 172,
    "fixNodeStartChar": 8229,
    "fixNodeLength": 48,
    "sourceBeforeFix": "this.configuration.getMappedStatement(id)",
    "sourceAfterFix": "this.configuration.getMappedStatement(id,false)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "eab15c5e16ba4ada19bb638f722e34bd071c9567",
    "fixCommitParentSHA1": "1993f27019ac6dbe20a39819e493a78461c42103",
    "bugFilePath": "src/test/java/org/apache/ibatis/logging/jdbc/ResultSetLoggerTest.java",
    "fixPatch": "diff --git a/src/test/java/org/apache/ibatis/logging/jdbc/ResultSetLoggerTest.java b/src/test/java/org/apache/ibatis/logging/jdbc/ResultSetLoggerTest.java\nindex 7dc1470..409030e 100644\n--- a/src/test/java/org/apache/ibatis/logging/jdbc/ResultSetLoggerTest.java\n+++ b/src/test/java/org/apache/ibatis/logging/jdbc/ResultSetLoggerTest.java\n@@ -47,7 +47,7 @@\n     when(rs.getMetaData()).thenReturn(metaData);\n     when(metaData.getColumnCount()).thenReturn(1);\n     when(metaData.getColumnType(1)).thenReturn(type);\n-    when(metaData.getColumnName(1)).thenReturn(\"ColumnName\");\n+    when(metaData.getColumnLabel(1)).thenReturn(\"ColumnName\");\n     when(rs.getString(1)).thenReturn(\"value\");\n     when(log.isTraceEnabled()).thenReturn(true);\n     ResultSet resultSet = ResultSetLogger.newInstance(rs, log);\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 50,
    "bugNodeStartChar": 1528,
    "bugNodeLength": 25,
    "fixLineNum": 50,
    "fixNodeStartChar": 1528,
    "fixNodeLength": 26,
    "sourceBeforeFix": "metaData.getColumnName(1)",
    "sourceAfterFix": "metaData.getColumnLabel(1)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "eab15c5e16ba4ada19bb638f722e34bd071c9567",
    "fixCommitParentSHA1": "1993f27019ac6dbe20a39819e493a78461c42103",
    "bugFilePath": "src/test/java/org/apache/ibatis/logging/jdbc/ResultSetLoggerTest.java",
    "fixPatch": "diff --git a/src/test/java/org/apache/ibatis/logging/jdbc/ResultSetLoggerTest.java b/src/test/java/org/apache/ibatis/logging/jdbc/ResultSetLoggerTest.java\nindex 7dc1470..409030e 100644\n--- a/src/test/java/org/apache/ibatis/logging/jdbc/ResultSetLoggerTest.java\n+++ b/src/test/java/org/apache/ibatis/logging/jdbc/ResultSetLoggerTest.java\n@@ -47,7 +47,7 @@\n     when(rs.getMetaData()).thenReturn(metaData);\n     when(metaData.getColumnCount()).thenReturn(1);\n     when(metaData.getColumnType(1)).thenReturn(type);\n-    when(metaData.getColumnName(1)).thenReturn(\"ColumnName\");\n+    when(metaData.getColumnLabel(1)).thenReturn(\"ColumnName\");\n     when(rs.getString(1)).thenReturn(\"value\");\n     when(log.isTraceEnabled()).thenReturn(true);\n     ResultSet resultSet = ResultSetLogger.newInstance(rs, log);\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 50,
    "bugNodeStartChar": 1528,
    "bugNodeLength": 25,
    "fixLineNum": 50,
    "fixNodeStartChar": 1528,
    "fixNodeLength": 26,
    "sourceBeforeFix": "metaData.getColumnName(1)",
    "sourceAfterFix": "metaData.getColumnLabel(1)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "1bac47f6afece6418b841fced7807ef5ff7a2615",
    "fixCommitParentSHA1": "0b4c94c2c65c94aad04667d67fce717651c8ced9",
    "bugFilePath": "src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java b/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java\nindex 6a77e34..0598760 100644\n--- a/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java\n+++ b/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java\n@@ -203,7 +203,8 @@\n   }\r\n \r\n   private boolean commandReadyToExecute(String trimmedLine) {\r\n-    return !fullLineDelimiter && trimmedLine.endsWith(delimiter) || fullLineDelimiter && trimmedLine.equals(delimiter);\r\n+    // issue #561 remove anything after the delimiter\r\n+    return !fullLineDelimiter && trimmedLine.contains(delimiter) || fullLineDelimiter && trimmedLine.equals(delimiter);\r\n   }\r\n \r\n   private void executeStatement(String command) throws SQLException, UnsupportedEncodingException {\r\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 206,
    "bugNodeStartChar": 6099,
    "bugNodeLength": 31,
    "fixLineNum": 207,
    "fixNodeStartChar": 5948,
    "fixNodeLength": 31,
    "sourceBeforeFix": "trimmedLine.endsWith(delimiter)",
    "sourceAfterFix": "trimmedLine.contains(delimiter)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "1bac47f6afece6418b841fced7807ef5ff7a2615",
    "fixCommitParentSHA1": "0b4c94c2c65c94aad04667d67fce717651c8ced9",
    "bugFilePath": "src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java b/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java\nindex 6a77e34..0598760 100644\n--- a/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java\n+++ b/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java\n@@ -203,7 +203,8 @@\n   }\r\n \r\n   private boolean commandReadyToExecute(String trimmedLine) {\r\n-    return !fullLineDelimiter && trimmedLine.endsWith(delimiter) || fullLineDelimiter && trimmedLine.equals(delimiter);\r\n+    // issue #561 remove anything after the delimiter\r\n+    return !fullLineDelimiter && trimmedLine.contains(delimiter) || fullLineDelimiter && trimmedLine.equals(delimiter);\r\n   }\r\n \r\n   private void executeStatement(String command) throws SQLException, UnsupportedEncodingException {\r\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 206,
    "bugNodeStartChar": 6099,
    "bugNodeLength": 31,
    "fixLineNum": 207,
    "fixNodeStartChar": 5948,
    "fixNodeLength": 31,
    "sourceBeforeFix": "trimmedLine.endsWith(delimiter)",
    "sourceAfterFix": "trimmedLine.contains(delimiter)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "875ab3d991eb06803c032634b6ad2874ca530d43",
    "fixCommitParentSHA1": "8e8dcd7f7da1ef8142266462e8aead0400c024ad",
    "bugFilePath": "src/main/java/org/apache/ibatis/type/TypeReference.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/type/TypeReference.java b/src/main/java/org/apache/ibatis/type/TypeReference.java\nindex fd53937..4d6cb5e 100644\n--- a/src/main/java/org/apache/ibatis/type/TypeReference.java\n+++ b/src/main/java/org/apache/ibatis/type/TypeReference.java\n@@ -31,7 +31,8 @@\n   protected TypeReference() {\n     Type superclass = getClass().getGenericSuperclass();\n     if (superclass instanceof Class) {\n-      throw new RuntimeException(\"Missing type parameter.\");\n+      throw new TypeException(\"TypeHandler '\" + getClass() + \"' extends TypeReference but misses the type parameter. \"\n+        + \"Remove the extension or add a type parameter to it.\");\n     }\n     rawType = ((ParameterizedType) superclass).getActualTypeArguments()[0];\n     // TODO remove this when Reflector is fixed to return Types\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 34,
    "bugNodeStartChar": 1039,
    "bugNodeLength": 47,
    "fixLineNum": 34,
    "fixNodeStartChar": 1039,
    "fixNodeLength": 171,
    "sourceBeforeFix": "new RuntimeException(\"Missing type parameter.\")",
    "sourceAfterFix": "new TypeException(\"TypeHandler '\" + getClass() + \"' extends TypeReference but misses the type parameter. \"+ \"Remove the extension or add a type parameter to it.\")"
  },
  {
    "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
    "fixCommitSHA1": "96b6a1313d3c25e4ab7b5f2604385311497d8b65",
    "fixCommitParentSHA1": "eb11545322afb4531ade60e5682af9f38e24ace9",
    "bugFilePath": "src/main/java/org/apache/ibatis/executor/resultset/FastResultSetHandler.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/executor/resultset/FastResultSetHandler.java b/src/main/java/org/apache/ibatis/executor/resultset/FastResultSetHandler.java\nindex bd3068f..316fd02 100644\n--- a/src/main/java/org/apache/ibatis/executor/resultset/FastResultSetHandler.java\n+++ b/src/main/java/org/apache/ibatis/executor/resultset/FastResultSetHandler.java\n@@ -113,7 +113,7 @@\n     if (resultMapId != null) {\r\n       final ResultMap resultMap = configuration.getResultMap(resultMapId);\r\n       final DefaultResultHandler resultHandler = new DefaultResultHandler(configuration.getDefaultListResultHandlerType());\r\n-      ResultColumnCache resultColumnCache = new ResultColumnCache(cs.getMetaData(), configuration);\r\n+      ResultColumnCache resultColumnCache = new ResultColumnCache(rs.getMetaData(), configuration);\r\n       handleRowValues(rs, resultMap, resultHandler, new RowBounds(), resultColumnCache);\r\n       metaParam.setValue(parameterMapping.getProperty(), resultHandler.getResultList());\r\n     } else {\r\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 116,
    "bugNodeStartChar": 5599,
    "bugNodeLength": 16,
    "fixLineNum": 116,
    "fixNodeStartChar": 5484,
    "fixNodeLength": 16,
    "sourceBeforeFix": "cs.getMetaData()",
    "sourceAfterFix": "rs.getMetaData()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "96b6a1313d3c25e4ab7b5f2604385311497d8b65",
    "fixCommitParentSHA1": "eb11545322afb4531ade60e5682af9f38e24ace9",
    "bugFilePath": "src/main/java/org/apache/ibatis/executor/resultset/FastResultSetHandler.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/executor/resultset/FastResultSetHandler.java b/src/main/java/org/apache/ibatis/executor/resultset/FastResultSetHandler.java\nindex bd3068f..316fd02 100644\n--- a/src/main/java/org/apache/ibatis/executor/resultset/FastResultSetHandler.java\n+++ b/src/main/java/org/apache/ibatis/executor/resultset/FastResultSetHandler.java\n@@ -113,7 +113,7 @@\n     if (resultMapId != null) {\r\n       final ResultMap resultMap = configuration.getResultMap(resultMapId);\r\n       final DefaultResultHandler resultHandler = new DefaultResultHandler(configuration.getDefaultListResultHandlerType());\r\n-      ResultColumnCache resultColumnCache = new ResultColumnCache(cs.getMetaData(), configuration);\r\n+      ResultColumnCache resultColumnCache = new ResultColumnCache(rs.getMetaData(), configuration);\r\n       handleRowValues(rs, resultMap, resultHandler, new RowBounds(), resultColumnCache);\r\n       metaParam.setValue(parameterMapping.getProperty(), resultHandler.getResultList());\r\n     } else {\r\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 116,
    "bugNodeStartChar": 5599,
    "bugNodeLength": 16,
    "fixLineNum": 116,
    "fixNodeStartChar": 5484,
    "fixNodeLength": 16,
    "sourceBeforeFix": "cs.getMetaData()",
    "sourceAfterFix": "rs.getMetaData()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "f877cc6742ba3c75739edd9debae662d834d191d",
    "fixCommitParentSHA1": "8df19c5192c1e17968a787e2c2695d378d6ec518",
    "bugFilePath": "src/test/java/org/apache/ibatis/submitted/parametrizedlist/Mapper.java",
    "fixPatch": "diff --git a/src/test/java/org/apache/ibatis/submitted/parametrizedlist/Mapper.java b/src/test/java/org/apache/ibatis/submitted/parametrizedlist/Mapper.java\nindex 43e51a6..32a3bbd 100644\n--- a/src/test/java/org/apache/ibatis/submitted/parametrizedlist/Mapper.java\n+++ b/src/test/java/org/apache/ibatis/submitted/parametrizedlist/Mapper.java\n@@ -16,9 +16,9 @@\n   Map<Integer, User<String>> getAMapOfUsers();\n \n   @Select(\"select id, name from users where id=1\")\n-  Map<Integer, Object> getUserAsAMap();\n+  Map<String, Object> getUserAsAMap();\n \n   @Select(\"select id, name from users\")\n-  List<Map<Integer, Object>> getAListOfMaps();\n+  List<Map<String, Object>> getAListOfMaps();\n   \n }\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 19,
    "bugNodeStartChar": 457,
    "bugNodeLength": 20,
    "fixLineNum": 19,
    "fixNodeStartChar": 457,
    "fixNodeLength": 19,
    "sourceBeforeFix": "Map<Integer,Object>",
    "sourceAfterFix": "Map<String,Object>"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "f877cc6742ba3c75739edd9debae662d834d191d",
    "fixCommitParentSHA1": "8df19c5192c1e17968a787e2c2695d378d6ec518",
    "bugFilePath": "src/test/java/org/apache/ibatis/submitted/parametrizedlist/Mapper.java",
    "fixPatch": "diff --git a/src/test/java/org/apache/ibatis/submitted/parametrizedlist/Mapper.java b/src/test/java/org/apache/ibatis/submitted/parametrizedlist/Mapper.java\nindex 43e51a6..32a3bbd 100644\n--- a/src/test/java/org/apache/ibatis/submitted/parametrizedlist/Mapper.java\n+++ b/src/test/java/org/apache/ibatis/submitted/parametrizedlist/Mapper.java\n@@ -16,9 +16,9 @@\n   Map<Integer, User<String>> getAMapOfUsers();\n \n   @Select(\"select id, name from users where id=1\")\n-  Map<Integer, Object> getUserAsAMap();\n+  Map<String, Object> getUserAsAMap();\n \n   @Select(\"select id, name from users\")\n-  List<Map<Integer, Object>> getAListOfMaps();\n+  List<Map<String, Object>> getAListOfMaps();\n   \n }\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 22,
    "bugNodeStartChar": 543,
    "bugNodeLength": 20,
    "fixLineNum": 22,
    "fixNodeStartChar": 543,
    "fixNodeLength": 19,
    "sourceBeforeFix": "Map<Integer,Object>",
    "sourceAfterFix": "Map<String,Object>"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "f877cc6742ba3c75739edd9debae662d834d191d",
    "fixCommitParentSHA1": "8df19c5192c1e17968a787e2c2695d378d6ec518",
    "bugFilePath": "src/test/java/org/apache/ibatis/submitted/parametrizedlist/ParametrizedListTest.java",
    "fixPatch": "diff --git a/src/test/java/org/apache/ibatis/submitted/parametrizedlist/ParametrizedListTest.java b/src/test/java/org/apache/ibatis/submitted/parametrizedlist/ParametrizedListTest.java\nindex b487ee9..c16292f 100644\n--- a/src/test/java/org/apache/ibatis/submitted/parametrizedlist/ParametrizedListTest.java\n+++ b/src/test/java/org/apache/ibatis/submitted/parametrizedlist/ParametrizedListTest.java\n@@ -93,7 +93,7 @@\n     SqlSession sqlSession = sqlSessionFactory.openSession();\n     try {\n       Mapper mapper = sqlSession.getMapper(Mapper.class);\n-      Map<Integer, Object> map = mapper.getUserAsAMap();\n+      Map<String, Object> map = mapper.getUserAsAMap();\n       Assert.assertEquals(1, map.get(\"ID\"));\n     } finally {\n       sqlSession.close();\n@@ -105,7 +105,7 @@\n     SqlSession sqlSession = sqlSessionFactory.openSession();\n     try {\n       Mapper mapper = sqlSession.getMapper(Mapper.class);\n-      List<Map<Integer, Object>> map = mapper.getAListOfMaps();\n+      List<Map<String, Object>> map = mapper.getAListOfMaps();\n       Assert.assertEquals(1, map.get(0).get(\"ID\"));\n     } finally {\n       sqlSession.close();\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 96,
    "bugNodeStartChar": 3082,
    "bugNodeLength": 20,
    "fixLineNum": 96,
    "fixNodeStartChar": 3082,
    "fixNodeLength": 19,
    "sourceBeforeFix": "Map<Integer,Object>",
    "sourceAfterFix": "Map<String,Object>"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "f877cc6742ba3c75739edd9debae662d834d191d",
    "fixCommitParentSHA1": "8df19c5192c1e17968a787e2c2695d378d6ec518",
    "bugFilePath": "src/test/java/org/apache/ibatis/submitted/parametrizedlist/ParametrizedListTest.java",
    "fixPatch": "diff --git a/src/test/java/org/apache/ibatis/submitted/parametrizedlist/ParametrizedListTest.java b/src/test/java/org/apache/ibatis/submitted/parametrizedlist/ParametrizedListTest.java\nindex b487ee9..c16292f 100644\n--- a/src/test/java/org/apache/ibatis/submitted/parametrizedlist/ParametrizedListTest.java\n+++ b/src/test/java/org/apache/ibatis/submitted/parametrizedlist/ParametrizedListTest.java\n@@ -93,7 +93,7 @@\n     SqlSession sqlSession = sqlSessionFactory.openSession();\n     try {\n       Mapper mapper = sqlSession.getMapper(Mapper.class);\n-      Map<Integer, Object> map = mapper.getUserAsAMap();\n+      Map<String, Object> map = mapper.getUserAsAMap();\n       Assert.assertEquals(1, map.get(\"ID\"));\n     } finally {\n       sqlSession.close();\n@@ -105,7 +105,7 @@\n     SqlSession sqlSession = sqlSessionFactory.openSession();\n     try {\n       Mapper mapper = sqlSession.getMapper(Mapper.class);\n-      List<Map<Integer, Object>> map = mapper.getAListOfMaps();\n+      List<Map<String, Object>> map = mapper.getAListOfMaps();\n       Assert.assertEquals(1, map.get(0).get(\"ID\"));\n     } finally {\n       sqlSession.close();\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 108,
    "bugNodeStartChar": 3439,
    "bugNodeLength": 20,
    "fixLineNum": 108,
    "fixNodeStartChar": 3439,
    "fixNodeLength": 19,
    "sourceBeforeFix": "Map<Integer,Object>",
    "sourceAfterFix": "Map<String,Object>"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "0fc882f517228b6d793b9ef0da5c3fd77c70a9bd",
    "fixCommitParentSHA1": "9663e3b838b5a2adc3f5b3f631e0d12617246702",
    "bugFilePath": "src/main/java/org/apache/ibatis/type/EnumTypeHandler.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/type/EnumTypeHandler.java b/src/main/java/org/apache/ibatis/type/EnumTypeHandler.java\nindex ef4321d..54ba5fd 100644\n--- a/src/main/java/org/apache/ibatis/type/EnumTypeHandler.java\n+++ b/src/main/java/org/apache/ibatis/type/EnumTypeHandler.java\n@@ -15,9 +15,9 @@\n \r\n   public void setNonNullParameter(PreparedStatement ps, int i, E parameter, JdbcType jdbcType) throws SQLException {\r\n     if (jdbcType == null) {\r\n-        ps.setString(i, parameter.toString());\r\n+        ps.setString(i, parameter.name());\r\n     } else {\r\n-        ps.setObject(i, parameter.toString(), jdbcType.TYPE_CODE);\r\n+        ps.setObject(i, parameter.name(), jdbcType.TYPE_CODE);\r\n     }\r\n   }\r\n \r\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 18,
    "bugNodeStartChar": 520,
    "bugNodeLength": 20,
    "fixLineNum": 18,
    "fixNodeStartChar": 503,
    "fixNodeLength": 16,
    "sourceBeforeFix": "parameter.toString()",
    "sourceAfterFix": "parameter.name()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "0fc882f517228b6d793b9ef0da5c3fd77c70a9bd",
    "fixCommitParentSHA1": "9663e3b838b5a2adc3f5b3f631e0d12617246702",
    "bugFilePath": "src/main/java/org/apache/ibatis/type/EnumTypeHandler.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/type/EnumTypeHandler.java b/src/main/java/org/apache/ibatis/type/EnumTypeHandler.java\nindex ef4321d..54ba5fd 100644\n--- a/src/main/java/org/apache/ibatis/type/EnumTypeHandler.java\n+++ b/src/main/java/org/apache/ibatis/type/EnumTypeHandler.java\n@@ -15,9 +15,9 @@\n \r\n   public void setNonNullParameter(PreparedStatement ps, int i, E parameter, JdbcType jdbcType) throws SQLException {\r\n     if (jdbcType == null) {\r\n-        ps.setString(i, parameter.toString());\r\n+        ps.setString(i, parameter.name());\r\n     } else {\r\n-        ps.setObject(i, parameter.toString(), jdbcType.TYPE_CODE);\r\n+        ps.setObject(i, parameter.name(), jdbcType.TYPE_CODE);\r\n     }\r\n   }\r\n \r\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 18,
    "bugNodeStartChar": 520,
    "bugNodeLength": 20,
    "fixLineNum": 18,
    "fixNodeStartChar": 503,
    "fixNodeLength": 16,
    "sourceBeforeFix": "parameter.toString()",
    "sourceAfterFix": "parameter.name()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "0fc882f517228b6d793b9ef0da5c3fd77c70a9bd",
    "fixCommitParentSHA1": "9663e3b838b5a2adc3f5b3f631e0d12617246702",
    "bugFilePath": "src/main/java/org/apache/ibatis/type/EnumTypeHandler.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/type/EnumTypeHandler.java b/src/main/java/org/apache/ibatis/type/EnumTypeHandler.java\nindex ef4321d..54ba5fd 100644\n--- a/src/main/java/org/apache/ibatis/type/EnumTypeHandler.java\n+++ b/src/main/java/org/apache/ibatis/type/EnumTypeHandler.java\n@@ -15,9 +15,9 @@\n \r\n   public void setNonNullParameter(PreparedStatement ps, int i, E parameter, JdbcType jdbcType) throws SQLException {\r\n     if (jdbcType == null) {\r\n-        ps.setString(i, parameter.toString());\r\n+        ps.setString(i, parameter.name());\r\n     } else {\r\n-        ps.setObject(i, parameter.toString(), jdbcType.TYPE_CODE);\r\n+        ps.setObject(i, parameter.name(), jdbcType.TYPE_CODE);\r\n     }\r\n   }\r\n \r\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 20,
    "bugNodeStartChar": 582,
    "bugNodeLength": 20,
    "fixLineNum": 20,
    "fixNodeStartChar": 563,
    "fixNodeLength": 16,
    "sourceBeforeFix": "parameter.toString()",
    "sourceAfterFix": "parameter.name()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "0fc882f517228b6d793b9ef0da5c3fd77c70a9bd",
    "fixCommitParentSHA1": "9663e3b838b5a2adc3f5b3f631e0d12617246702",
    "bugFilePath": "src/main/java/org/apache/ibatis/type/EnumTypeHandler.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/type/EnumTypeHandler.java b/src/main/java/org/apache/ibatis/type/EnumTypeHandler.java\nindex ef4321d..54ba5fd 100644\n--- a/src/main/java/org/apache/ibatis/type/EnumTypeHandler.java\n+++ b/src/main/java/org/apache/ibatis/type/EnumTypeHandler.java\n@@ -15,9 +15,9 @@\n \r\n   public void setNonNullParameter(PreparedStatement ps, int i, E parameter, JdbcType jdbcType) throws SQLException {\r\n     if (jdbcType == null) {\r\n-        ps.setString(i, parameter.toString());\r\n+        ps.setString(i, parameter.name());\r\n     } else {\r\n-        ps.setObject(i, parameter.toString(), jdbcType.TYPE_CODE);\r\n+        ps.setObject(i, parameter.name(), jdbcType.TYPE_CODE);\r\n     }\r\n   }\r\n \r\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 20,
    "bugNodeStartChar": 582,
    "bugNodeLength": 20,
    "fixLineNum": 20,
    "fixNodeStartChar": 563,
    "fixNodeLength": 16,
    "sourceBeforeFix": "parameter.toString()",
    "sourceAfterFix": "parameter.name()"
  },
  {
    "bugType": "SWAP_BOOLEAN_LITERAL",
    "fixCommitSHA1": "bae2a6dee9b9ef115e45180bfc5663a6bca14225",
    "fixCommitParentSHA1": "5360679dcc18db84ffe1b3d81bca71d1a3833e0d",
    "bugFilePath": "src/main/java/org/apache/ibatis/executor/BaseExecutor.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/executor/BaseExecutor.java b/src/main/java/org/apache/ibatis/executor/BaseExecutor.java\nindex b059404..d2e636d 100644\n--- a/src/main/java/org/apache/ibatis/executor/BaseExecutor.java\n+++ b/src/main/java/org/apache/ibatis/executor/BaseExecutor.java\n@@ -179,7 +179,7 @@\n     if (!closed) {\r\n       try {\r\n         clearLocalCache();\r\n-        flushStatements(false);\r\n+        flushStatements(true);\r\n       } finally {\r\n         if (required) {\r\n           transaction.rollback();\r\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 182,
    "bugNodeStartChar": 6694,
    "bugNodeLength": 22,
    "fixLineNum": 182,
    "fixNodeStartChar": 6513,
    "fixNodeLength": 21,
    "sourceBeforeFix": "flushStatements(false)",
    "sourceAfterFix": "flushStatements(true)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8e01c1c07300c0fe2ecc76003ea7a01d5d5f47a3",
    "fixCommitParentSHA1": "aa3f4bfb3c2dd9f87d50a763cd1ea41187d162a3",
    "bugFilePath": "src/main/java/org/apache/ibatis/reflection/ExceptionUtil.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/reflection/ExceptionUtil.java b/src/main/java/org/apache/ibatis/reflection/ExceptionUtil.java\nindex 73429dd..2f021cc 100644\n--- a/src/main/java/org/apache/ibatis/reflection/ExceptionUtil.java\n+++ b/src/main/java/org/apache/ibatis/reflection/ExceptionUtil.java\n@@ -9,9 +9,9 @@\n     Throwable unwrapped = wrapped;\r\n     while (true) {\r\n       if (unwrapped instanceof InvocationTargetException) {\r\n-        unwrapped = ((InvocationTargetException) wrapped).getTargetException();\r\n+        unwrapped = ((InvocationTargetException) unwrapped).getTargetException();\r\n       } else if (unwrapped instanceof UndeclaredThrowableException) {\r\n-        unwrapped = ((UndeclaredThrowableException) wrapped).getUndeclaredThrowable();\r\n+        unwrapped = ((UndeclaredThrowableException) unwrapped).getUndeclaredThrowable();\r\n       } else {\r\n         return unwrapped;\r\n       }\r\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 12,
    "bugNodeStartChar": 386,
    "bugNodeLength": 35,
    "fixLineNum": 12,
    "fixNodeStartChar": 375,
    "fixNodeLength": 37,
    "sourceBeforeFix": "(InvocationTargetException)wrapped",
    "sourceAfterFix": "(InvocationTargetException)unwrapped"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8e01c1c07300c0fe2ecc76003ea7a01d5d5f47a3",
    "fixCommitParentSHA1": "aa3f4bfb3c2dd9f87d50a763cd1ea41187d162a3",
    "bugFilePath": "src/main/java/org/apache/ibatis/reflection/ExceptionUtil.java",
    "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/reflection/ExceptionUtil.java b/src/main/java/org/apache/ibatis/reflection/ExceptionUtil.java\nindex 73429dd..2f021cc 100644\n--- a/src/main/java/org/apache/ibatis/reflection/ExceptionUtil.java\n+++ b/src/main/java/org/apache/ibatis/reflection/ExceptionUtil.java\n@@ -9,9 +9,9 @@\n     Throwable unwrapped = wrapped;\r\n     while (true) {\r\n       if (unwrapped instanceof InvocationTargetException) {\r\n-        unwrapped = ((InvocationTargetException) wrapped).getTargetException();\r\n+        unwrapped = ((InvocationTargetException) unwrapped).getTargetException();\r\n       } else if (unwrapped instanceof UndeclaredThrowableException) {\r\n-        unwrapped = ((UndeclaredThrowableException) wrapped).getUndeclaredThrowable();\r\n+        unwrapped = ((UndeclaredThrowableException) unwrapped).getUndeclaredThrowable();\r\n       } else {\r\n         return unwrapped;\r\n       }\r\n",
    "projectName": "mybatis.mybatis-3",
    "bugLineNum": 14,
    "bugNodeStartChar": 538,
    "bugNodeLength": 38,
    "fixLineNum": 14,
    "fixNodeStartChar": 525,
    "fixNodeLength": 40,
    "sourceBeforeFix": "(UndeclaredThrowableException)wrapped",
    "sourceAfterFix": "(UndeclaredThrowableException)unwrapped"
  }
]