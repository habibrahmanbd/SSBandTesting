[{"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "e6bd7393faa68dd73e73258ff75820b558bfd356", "fixCommitParentSHA1": "5bef82d4e2181aae9a66fae40916e3474443f94d", "bugFilePath": "memcached/src/main/java/com/yahoo/ycsb/db/MemcachedClient.java", "fixPatch": "diff --git a/memcached/src/main/java/com/yahoo/ycsb/db/MemcachedClient.java b/memcached/src/main/java/com/yahoo/ycsb/db/MemcachedClient.java\nindex b8f6938..40efb7e 100644\n--- a/memcached/src/main/java/com/yahoo/ycsb/db/MemcachedClient.java\n+++ b/memcached/src/main/java/com/yahoo/ycsb/db/MemcachedClient.java\n@@ -277,7 +277,7 @@\n          /* increment in loop body */) {\n       Map.Entry<String, JsonNode> jsonField = jsonFields.next();\n       String name = jsonField.getKey();\n-      if (checkFields && fields.contains(name)) {\n+      if (checkFields && !fields.contains(name)) {\n         continue;\n       }\n       JsonNode jsonValue = jsonField.getValue();\n", "projectName": "brianfrankcooper.YCSB", "bugLineNum": 280, "bugNodeStartChar": 9978, "bugNodeLength": 21, "fixLineNum": 280, "fixNodeStartChar": 9978, "fixNodeLength": 22, "sourceBeforeFix": "fields.contains(name)", "sourceAfterFix": "!fields.contains(name)"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "736f2f1c69f538fffcab5e4b36ecc40de3b270b6", "fixCommitParentSHA1": "dd043f8226e04e46ccbff2b8c2396079d222e632", "bugFilePath": "couchbase2/src/main/java/com/yahoo/ycsb/db/couchbase2/Couchbase2Client.java", "fixPatch": "diff --git a/couchbase2/src/main/java/com/yahoo/ycsb/db/couchbase2/Couchbase2Client.java b/couchbase2/src/main/java/com/yahoo/ycsb/db/couchbase2/Couchbase2Client.java\nindex 7833466..73e44a0 100644\n--- a/couchbase2/src/main/java/com/yahoo/ycsb/db/couchbase2/Couchbase2Client.java\n+++ b/couchbase2/src/main/java/com/yahoo/ycsb/db/couchbase2/Couchbase2Client.java\n@@ -856,7 +856,7 @@\n       for (Iterator<Map.Entry<String, JsonNode>> jsonFields = json.fields(); jsonFields.hasNext();) {\n         Map.Entry<String, JsonNode> jsonField = jsonFields.next();\n         String name = jsonField.getKey();\n-        if (checkFields && fields.contains(name)) {\n+        if (checkFields && !fields.contains(name)) {\n           continue;\n         }\n         JsonNode jsonValue = jsonField.getValue();\n", "projectName": "brianfrankcooper.YCSB", "bugLineNum": 859, "bugNodeStartChar": 33115, "bugNodeLength": 21, "fixLineNum": 859, "fixNodeStartChar": 33115, "fixNodeLength": 22, "sourceBeforeFix": "fields.contains(name)", "sourceAfterFix": "!fields.contains(name)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "c3c1e75d211f1a45d0e0e8042fd753b38c8c5d9f", "fixCommitParentSHA1": "e5d67bf37fca6a415455bc0cc75c8e1efe636cee", "bugFilePath": "googlebigtable/src/main/java/com/yahoo/ycsb/db/GoogleBigtableClient.java", "fixPatch": "diff --git a/googlebigtable/src/main/java/com/yahoo/ycsb/db/GoogleBigtableClient.java b/googlebigtable/src/main/java/com/yahoo/ycsb/db/GoogleBigtableClient.java\nindex b405d1a..86ab94e 100644\n--- a/googlebigtable/src/main/java/com/yahoo/ycsb/db/GoogleBigtableClient.java\n+++ b/googlebigtable/src/main/java/com/yahoo/ycsb/db/GoogleBigtableClient.java\n@@ -74,8 +74,8 @@\n   private static final String ASYNC_MAX_INFLIGHT_RPCS = \"mutatorMaxInflightRPCs\";\n   private static final String CLIENT_SIDE_BUFFERING = \"clientbuffering\";\n   \n-  /** Must be an object for synchronization and tracking running thread counts. */ \n-  private static Integer threadCount = 0;\n+  /** Tracks running thread counts so we know when to close the session. */ \n+  private static int threadCount = 0;\n   \n   /** This will load the hbase-site.xml config file and/or store CLI options. */\n   private static final Configuration CONFIG = HBaseConfiguration.create();\n@@ -125,7 +125,7 @@\n     System.err.println(\"Running Google Bigtable with Proto API\" +\n          (clientSideBuffering ? \" and client side buffering.\" : \".\"));\n     \n-    synchronized (threadCount) {\n+    synchronized (CONFIG) {\n       ++threadCount;\n       if (session == null) {\n         try {\n@@ -176,7 +176,7 @@\n         throw new DBException(e);\n       }\n     }\n-    synchronized (threadCount) {\n+    synchronized (CONFIG) {\n       --threadCount;\n       if (threadCount <= 0) {\n         try {\n", "projectName": "brianfrankcooper.YCSB", "bugLineNum": 128, "bugNodeStartChar": 5003, "bugNodeLength": 1166, "fixLineNum": 128, "fixNodeStartChar": 5003, "fixNodeLength": 1161, "sourceBeforeFix": "synchronized (threadCount) {   ++threadCount;   if (session == null) {     try {       options=BigtableOptionsFactory.fromConfiguration(CONFIG);       session=new BigtableSession(options);       client=session.getDataClient();     }  catch (    IOException e) {       throw new DBException(\"Error loading options from config: \",e);     }   }  else {     client=session.getDataClient();   }   if (clientSideBuffering) {     heapSizeManager=new HeapSizeManager(Long.parseLong(getProperties().getProperty(ASYNC_MUTATOR_MAX_MEMORY,Long.toString(AsyncExecutor.ASYNC_MUTATOR_MAX_MEMORY_DEFAULT))),Integer.parseInt(getProperties().getProperty(ASYNC_MAX_INFLIGHT_RPCS,Integer.toString(AsyncExecutor.MAX_INFLIGHT_RPCS_DEFAULT))));     asyncExecutor=new AsyncExecutor(client,heapSizeManager);   } } ", "sourceAfterFix": "synchronized (CONFIG) {   ++threadCount;   if (session == null) {     try {       options=BigtableOptionsFactory.fromConfiguration(CONFIG);       session=new BigtableSession(options);       client=session.getDataClient();     }  catch (    IOException e) {       throw new DBException(\"Error loading options from config: \",e);     }   }  else {     client=session.getDataClient();   }   if (clientSideBuffering) {     heapSizeManager=new HeapSizeManager(Long.parseLong(getProperties().getProperty(ASYNC_MUTATOR_MAX_MEMORY,Long.toString(AsyncExecutor.ASYNC_MUTATOR_MAX_MEMORY_DEFAULT))),Integer.parseInt(getProperties().getProperty(ASYNC_MAX_INFLIGHT_RPCS,Integer.toString(AsyncExecutor.MAX_INFLIGHT_RPCS_DEFAULT))));     asyncExecutor=new AsyncExecutor(client,heapSizeManager);   } } "}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "c3c1e75d211f1a45d0e0e8042fd753b38c8c5d9f", "fixCommitParentSHA1": "e5d67bf37fca6a415455bc0cc75c8e1efe636cee", "bugFilePath": "googlebigtable/src/main/java/com/yahoo/ycsb/db/GoogleBigtableClient.java", "fixPatch": "diff --git a/googlebigtable/src/main/java/com/yahoo/ycsb/db/GoogleBigtableClient.java b/googlebigtable/src/main/java/com/yahoo/ycsb/db/GoogleBigtableClient.java\nindex b405d1a..86ab94e 100644\n--- a/googlebigtable/src/main/java/com/yahoo/ycsb/db/GoogleBigtableClient.java\n+++ b/googlebigtable/src/main/java/com/yahoo/ycsb/db/GoogleBigtableClient.java\n@@ -74,8 +74,8 @@\n   private static final String ASYNC_MAX_INFLIGHT_RPCS = \"mutatorMaxInflightRPCs\";\n   private static final String CLIENT_SIDE_BUFFERING = \"clientbuffering\";\n   \n-  /** Must be an object for synchronization and tracking running thread counts. */ \n-  private static Integer threadCount = 0;\n+  /** Tracks running thread counts so we know when to close the session. */ \n+  private static int threadCount = 0;\n   \n   /** This will load the hbase-site.xml config file and/or store CLI options. */\n   private static final Configuration CONFIG = HBaseConfiguration.create();\n@@ -125,7 +125,7 @@\n     System.err.println(\"Running Google Bigtable with Proto API\" +\n          (clientSideBuffering ? \" and client side buffering.\" : \".\"));\n     \n-    synchronized (threadCount) {\n+    synchronized (CONFIG) {\n       ++threadCount;\n       if (session == null) {\n         try {\n@@ -176,7 +176,7 @@\n         throw new DBException(e);\n       }\n     }\n-    synchronized (threadCount) {\n+    synchronized (CONFIG) {\n       --threadCount;\n       if (threadCount <= 0) {\n         try {\n", "projectName": "brianfrankcooper.YCSB", "bugLineNum": 179, "bugNodeStartChar": 6870, "bugNodeLength": 214, "fixLineNum": 179, "fixNodeStartChar": 6870, "fixNodeLength": 209, "sourceBeforeFix": "synchronized (threadCount) {   --threadCount;   if (threadCount <= 0) {     try {       session.close();     }  catch (    IOException e) {       throw new DBException(e);     }   } } ", "sourceAfterFix": "synchronized (CONFIG) {   --threadCount;   if (threadCount <= 0) {     try {       session.close();     }  catch (    IOException e) {       throw new DBException(e);     }   } } "}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d9eecd20d44dc9556f84619e6437d9e99b13c716", "fixCommitParentSHA1": "e5d67bf37fca6a415455bc0cc75c8e1efe636cee", "bugFilePath": "googlebigtable/src/main/java/com/yahoo/ycsb/db/GoogleBigtableClient.java", "fixPatch": "diff --git a/googlebigtable/src/main/java/com/yahoo/ycsb/db/GoogleBigtableClient.java b/googlebigtable/src/main/java/com/yahoo/ycsb/db/GoogleBigtableClient.java\nindex b405d1a..86ab94e 100644\n--- a/googlebigtable/src/main/java/com/yahoo/ycsb/db/GoogleBigtableClient.java\n+++ b/googlebigtable/src/main/java/com/yahoo/ycsb/db/GoogleBigtableClient.java\n@@ -74,8 +74,8 @@\n   private static final String ASYNC_MAX_INFLIGHT_RPCS = \"mutatorMaxInflightRPCs\";\n   private static final String CLIENT_SIDE_BUFFERING = \"clientbuffering\";\n   \n-  /** Must be an object for synchronization and tracking running thread counts. */ \n-  private static Integer threadCount = 0;\n+  /** Tracks running thread counts so we know when to close the session. */ \n+  private static int threadCount = 0;\n   \n   /** This will load the hbase-site.xml config file and/or store CLI options. */\n   private static final Configuration CONFIG = HBaseConfiguration.create();\n@@ -125,7 +125,7 @@\n     System.err.println(\"Running Google Bigtable with Proto API\" +\n          (clientSideBuffering ? \" and client side buffering.\" : \".\"));\n     \n-    synchronized (threadCount) {\n+    synchronized (CONFIG) {\n       ++threadCount;\n       if (session == null) {\n         try {\n@@ -176,7 +176,7 @@\n         throw new DBException(e);\n       }\n     }\n-    synchronized (threadCount) {\n+    synchronized (CONFIG) {\n       --threadCount;\n       if (threadCount <= 0) {\n         try {\n", "projectName": "brianfrankcooper.YCSB", "bugLineNum": 128, "bugNodeStartChar": 5003, "bugNodeLength": 1166, "fixLineNum": 128, "fixNodeStartChar": 5003, "fixNodeLength": 1161, "sourceBeforeFix": "synchronized (threadCount) {   ++threadCount;   if (session == null) {     try {       options=BigtableOptionsFactory.fromConfiguration(CONFIG);       session=new BigtableSession(options);       client=session.getDataClient();     }  catch (    IOException e) {       throw new DBException(\"Error loading options from config: \",e);     }   }  else {     client=session.getDataClient();   }   if (clientSideBuffering) {     heapSizeManager=new HeapSizeManager(Long.parseLong(getProperties().getProperty(ASYNC_MUTATOR_MAX_MEMORY,Long.toString(AsyncExecutor.ASYNC_MUTATOR_MAX_MEMORY_DEFAULT))),Integer.parseInt(getProperties().getProperty(ASYNC_MAX_INFLIGHT_RPCS,Integer.toString(AsyncExecutor.MAX_INFLIGHT_RPCS_DEFAULT))));     asyncExecutor=new AsyncExecutor(client,heapSizeManager);   } } ", "sourceAfterFix": "synchronized (CONFIG) {   ++threadCount;   if (session == null) {     try {       options=BigtableOptionsFactory.fromConfiguration(CONFIG);       session=new BigtableSession(options);       client=session.getDataClient();     }  catch (    IOException e) {       throw new DBException(\"Error loading options from config: \",e);     }   }  else {     client=session.getDataClient();   }   if (clientSideBuffering) {     heapSizeManager=new HeapSizeManager(Long.parseLong(getProperties().getProperty(ASYNC_MUTATOR_MAX_MEMORY,Long.toString(AsyncExecutor.ASYNC_MUTATOR_MAX_MEMORY_DEFAULT))),Integer.parseInt(getProperties().getProperty(ASYNC_MAX_INFLIGHT_RPCS,Integer.toString(AsyncExecutor.MAX_INFLIGHT_RPCS_DEFAULT))));     asyncExecutor=new AsyncExecutor(client,heapSizeManager);   } } "}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d9eecd20d44dc9556f84619e6437d9e99b13c716", "fixCommitParentSHA1": "e5d67bf37fca6a415455bc0cc75c8e1efe636cee", "bugFilePath": "googlebigtable/src/main/java/com/yahoo/ycsb/db/GoogleBigtableClient.java", "fixPatch": "diff --git a/googlebigtable/src/main/java/com/yahoo/ycsb/db/GoogleBigtableClient.java b/googlebigtable/src/main/java/com/yahoo/ycsb/db/GoogleBigtableClient.java\nindex b405d1a..86ab94e 100644\n--- a/googlebigtable/src/main/java/com/yahoo/ycsb/db/GoogleBigtableClient.java\n+++ b/googlebigtable/src/main/java/com/yahoo/ycsb/db/GoogleBigtableClient.java\n@@ -74,8 +74,8 @@\n   private static final String ASYNC_MAX_INFLIGHT_RPCS = \"mutatorMaxInflightRPCs\";\n   private static final String CLIENT_SIDE_BUFFERING = \"clientbuffering\";\n   \n-  /** Must be an object for synchronization and tracking running thread counts. */ \n-  private static Integer threadCount = 0;\n+  /** Tracks running thread counts so we know when to close the session. */ \n+  private static int threadCount = 0;\n   \n   /** This will load the hbase-site.xml config file and/or store CLI options. */\n   private static final Configuration CONFIG = HBaseConfiguration.create();\n@@ -125,7 +125,7 @@\n     System.err.println(\"Running Google Bigtable with Proto API\" +\n          (clientSideBuffering ? \" and client side buffering.\" : \".\"));\n     \n-    synchronized (threadCount) {\n+    synchronized (CONFIG) {\n       ++threadCount;\n       if (session == null) {\n         try {\n@@ -176,7 +176,7 @@\n         throw new DBException(e);\n       }\n     }\n-    synchronized (threadCount) {\n+    synchronized (CONFIG) {\n       --threadCount;\n       if (threadCount <= 0) {\n         try {\n", "projectName": "brianfrankcooper.YCSB", "bugLineNum": 179, "bugNodeStartChar": 6870, "bugNodeLength": 214, "fixLineNum": 179, "fixNodeStartChar": 6870, "fixNodeLength": 209, "sourceBeforeFix": "synchronized (threadCount) {   --threadCount;   if (threadCount <= 0) {     try {       session.close();     }  catch (    IOException e) {       throw new DBException(e);     }   } } ", "sourceAfterFix": "synchronized (CONFIG) {   --threadCount;   if (threadCount <= 0) {     try {       session.close();     }  catch (    IOException e) {       throw new DBException(e);     }   } } "}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "f1f5970a2896e4cace7d1f01b1771c26315b8547", "fixCommitParentSHA1": "693a283864172a9da5d9e90ea34400f9b63d3c60", "bugFilePath": "core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementTimeSeries.java", "fixPatch": "diff --git a/core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementTimeSeries.java b/core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementTimeSeries.java\nindex 34805bc..5e8dea0 100644\n--- a/core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementTimeSeries.java\n+++ b/core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementTimeSeries.java\n@@ -76,7 +76,7 @@\n     _measurements=new Vector<SeriesUnit>();\n   }\n \n-  void checkEndOfUnit(boolean forceend)\n+  synchronized void checkEndOfUnit(boolean forceend)\n   {\n     long now=System.currentTimeMillis();\n \n", "projectName": "brianfrankcooper.YCSB", "bugLineNum": 79, "bugNodeStartChar": 2096, "bugNodeLength": 427, "fixLineNum": 79, "fixNodeStartChar": 2096, "fixNodeLength": 440, "sourceBeforeFix": "0", "sourceAfterFix": "32"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "fd29cda72cdc495f652731a8c94198cb08fb380a", "fixCommitParentSHA1": "624033b0773a1532dbe9bb0903b565ad4f5d1dfe", "bugFilePath": "core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementRaw.java", "fixPatch": "diff --git a/core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementRaw.java b/core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementRaw.java\nindex 132952d..15c3f18 100644\n--- a/core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementRaw.java\n+++ b/core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementRaw.java\n@@ -189,7 +189,7 @@\n           measurements.get((int)(totalOps*0.9999)).value());\n     }\n \n-    exportReturnCodes(exporter);\n+    exportStatusCounts(exporter);\n   }\n \n   @Override\n", "projectName": "brianfrankcooper.YCSB", "bugLineNum": 192, "bugNodeStartChar": 6309, "bugNodeLength": 27, "fixLineNum": 192, "fixNodeStartChar": 6309, "fixNodeLength": 28, "sourceBeforeFix": "exportReturnCodes(exporter)", "sourceAfterFix": "exportStatusCounts(exporter)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "fd29cda72cdc495f652731a8c94198cb08fb380a", "fixCommitParentSHA1": "624033b0773a1532dbe9bb0903b565ad4f5d1dfe", "bugFilePath": "core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementRaw.java", "fixPatch": "diff --git a/core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementRaw.java b/core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementRaw.java\nindex 132952d..15c3f18 100644\n--- a/core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementRaw.java\n+++ b/core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementRaw.java\n@@ -189,7 +189,7 @@\n           measurements.get((int)(totalOps*0.9999)).value());\n     }\n \n-    exportReturnCodes(exporter);\n+    exportStatusCounts(exporter);\n   }\n \n   @Override\n", "projectName": "brianfrankcooper.YCSB", "bugLineNum": 192, "bugNodeStartChar": 6309, "bugNodeLength": 27, "fixLineNum": 192, "fixNodeStartChar": 6309, "fixNodeLength": 28, "sourceBeforeFix": "exportReturnCodes(exporter)", "sourceAfterFix": "exportStatusCounts(exporter)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "cadd7d58548bdf3287bc1c2c1c148a202db7319e", "fixCommitParentSHA1": "624033b0773a1532dbe9bb0903b565ad4f5d1dfe", "bugFilePath": "core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementRaw.java", "fixPatch": "diff --git a/core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementRaw.java b/core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementRaw.java\nindex 132952d..15c3f18 100644\n--- a/core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementRaw.java\n+++ b/core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementRaw.java\n@@ -189,7 +189,7 @@\n           measurements.get((int)(totalOps*0.9999)).value());\n     }\n \n-    exportReturnCodes(exporter);\n+    exportStatusCounts(exporter);\n   }\n \n   @Override\n", "projectName": "brianfrankcooper.YCSB", "bugLineNum": 192, "bugNodeStartChar": 6309, "bugNodeLength": 27, "fixLineNum": 192, "fixNodeStartChar": 6309, "fixNodeLength": 28, "sourceBeforeFix": "exportReturnCodes(exporter)", "sourceAfterFix": "exportStatusCounts(exporter)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "cadd7d58548bdf3287bc1c2c1c148a202db7319e", "fixCommitParentSHA1": "624033b0773a1532dbe9bb0903b565ad4f5d1dfe", "bugFilePath": "core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementRaw.java", "fixPatch": "diff --git a/core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementRaw.java b/core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementRaw.java\nindex 132952d..15c3f18 100644\n--- a/core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementRaw.java\n+++ b/core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementRaw.java\n@@ -189,7 +189,7 @@\n           measurements.get((int)(totalOps*0.9999)).value());\n     }\n \n-    exportReturnCodes(exporter);\n+    exportStatusCounts(exporter);\n   }\n \n   @Override\n", "projectName": "brianfrankcooper.YCSB", "bugLineNum": 192, "bugNodeStartChar": 6309, "bugNodeLength": 27, "fixLineNum": 192, "fixNodeStartChar": 6309, "fixNodeLength": 28, "sourceBeforeFix": "exportReturnCodes(exporter)", "sourceAfterFix": "exportStatusCounts(exporter)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "04bbc38c496f77271d87cc23f9784be827744481", "fixCommitParentSHA1": "65bedc06162643ee72ef7d5de5d5bb9328ad299b", "bugFilePath": "jdbc/src/main/java/com/yahoo/ycsb/db/JdbcDBClient.java", "fixPatch": "diff --git a/jdbc/src/main/java/com/yahoo/ycsb/db/JdbcDBClient.java b/jdbc/src/main/java/com/yahoo/ycsb/db/JdbcDBClient.java\nindex 3cb1570..e59111d 100644\n--- a/jdbc/src/main/java/com/yahoo/ycsb/db/JdbcDBClient.java\n+++ b/jdbc/src/main/java/com/yahoo/ycsb/db/JdbcDBClient.java\n@@ -283,11 +283,11 @@\n     StringBuilder update = new StringBuilder(\"UPDATE \");\n     update.append(updateType.tableName);\n     update.append(\" SET \");\n-    for (int i = 1; i <= updateType.numFields; i++) {\n+    for (int i = 0; i < updateType.numFields; i++) {\n       update.append(COLUMN_PREFIX);\n       update.append(i);\n       update.append(\"=?\");\n-      if (i < updateType.numFields) update.append(\", \");\n+      if (i < updateType.numFields - 1) update.append(\", \");\n     }\n     update.append(\" WHERE \");\n     update.append(PRIMARY_KEY);\n", "projectName": "brianfrankcooper.YCSB", "bugLineNum": 286, "bugNodeStartChar": 11310, "bugNodeLength": 5, "fixLineNum": 286, "fixNodeStartChar": 11310, "fixNodeLength": 5, "sourceBeforeFix": "i=1", "sourceAfterFix": "i=0"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "0d63547e1a68b2c84a3bdd8f9d9a78e575f27686", "fixCommitParentSHA1": "b66dc890955c549713f89752d5552839a7886ef6", "bugFilePath": "core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementHdrHistogram.java", "fixPatch": "diff --git a/core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementHdrHistogram.java b/core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementHdrHistogram.java\nindex 6712d78..5373b40 100644\n--- a/core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementHdrHistogram.java\n+++ b/core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementHdrHistogram.java\n@@ -101,7 +101,7 @@\n     exporter.write(getName(), \"AverageLatency(us)\", totalHistogram.getMean());\n     exporter.write(getName(), \"MinLatency(us)\", totalHistogram.getMinValue());\n     exporter.write(getName(), \"MaxLatency(us)\", totalHistogram.getMaxValue());\n-    exporter.write(getName(), \"95thPercentileLatency(us)\", totalHistogram.getValueAtPercentile(90));\n+    exporter.write(getName(), \"95thPercentileLatency(us)\", totalHistogram.getValueAtPercentile(95));\n     exporter.write(getName(), \"99thPercentileLatency(us)\", totalHistogram.getValueAtPercentile(99));\n     \n     exportReturnCodes(exporter);\n", "projectName": "brianfrankcooper.YCSB", "bugLineNum": 104, "bugNodeStartChar": 3802, "bugNodeLength": 39, "fixLineNum": 104, "fixNodeStartChar": 3802, "fixNodeLength": 39, "sourceBeforeFix": "totalHistogram.getValueAtPercentile(90)", "sourceAfterFix": "totalHistogram.getValueAtPercentile(95)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "72f5dff8178df46a1e66114701dc9e9f30151fde", "fixCommitParentSHA1": "b66dc890955c549713f89752d5552839a7886ef6", "bugFilePath": "core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementHdrHistogram.java", "fixPatch": "diff --git a/core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementHdrHistogram.java b/core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementHdrHistogram.java\nindex 6712d78..5373b40 100644\n--- a/core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementHdrHistogram.java\n+++ b/core/src/main/java/com/yahoo/ycsb/measurements/OneMeasurementHdrHistogram.java\n@@ -101,7 +101,7 @@\n     exporter.write(getName(), \"AverageLatency(us)\", totalHistogram.getMean());\n     exporter.write(getName(), \"MinLatency(us)\", totalHistogram.getMinValue());\n     exporter.write(getName(), \"MaxLatency(us)\", totalHistogram.getMaxValue());\n-    exporter.write(getName(), \"95thPercentileLatency(us)\", totalHistogram.getValueAtPercentile(90));\n+    exporter.write(getName(), \"95thPercentileLatency(us)\", totalHistogram.getValueAtPercentile(95));\n     exporter.write(getName(), \"99thPercentileLatency(us)\", totalHistogram.getValueAtPercentile(99));\n     \n     exportReturnCodes(exporter);\n", "projectName": "brianfrankcooper.YCSB", "bugLineNum": 104, "bugNodeStartChar": 3802, "bugNodeLength": 39, "fixLineNum": 104, "fixNodeStartChar": 3802, "fixNodeLength": 39, "sourceBeforeFix": "totalHistogram.getValueAtPercentile(90)", "sourceAfterFix": "totalHistogram.getValueAtPercentile(95)"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "9a8e37a40016be51c6f977050adce8cdf6b50998", "fixCommitParentSHA1": "13e4086131ce15468e91c6e211827fc45be51749", "bugFilePath": "aerospike/src/main/java/com/yahoo/ycsb/db/AerospikeClient.java", "fixPatch": "diff --git a/aerospike/src/main/java/com/yahoo/ycsb/db/AerospikeClient.java b/aerospike/src/main/java/com/yahoo/ycsb/db/AerospikeClient.java\nindex 87d3dcf..361545e 100644\n--- a/aerospike/src/main/java/com/yahoo/ycsb/db/AerospikeClient.java\n+++ b/aerospike/src/main/java/com/yahoo/ycsb/db/AerospikeClient.java\n@@ -29,7 +29,7 @@\n   private static final String DEFAULT_NAMESPACE = \"ycsb\";\n \n   private static final int RESULT_OK = 0;\n-  private static final int RESULT_ERROR = 1;\n+  private static final int RESULT_ERROR = -1;\n \n   private static final int WRITE_OVERLOAD_DELAY = 5;\n   private static final int WRITE_OVERLOAD_TRIES = 3;\n", "projectName": "brianfrankcooper.YCSB", "bugLineNum": 32, "bugNodeStartChar": 1071, "bugNodeLength": 1, "fixLineNum": 32, "fixNodeStartChar": 1071, "fixNodeLength": 2, "sourceBeforeFix": "1", "sourceAfterFix": "-1"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "13e4086131ce15468e91c6e211827fc45be51749", "fixCommitParentSHA1": "dadbf6c5944a19ab688e166d35bf2f2767edc7fa", "bugFilePath": "aerospike/src/main/java/com/yahoo/ycsb/db/AerospikeClient.java", "fixPatch": "diff --git a/aerospike/src/main/java/com/yahoo/ycsb/db/AerospikeClient.java b/aerospike/src/main/java/com/yahoo/ycsb/db/AerospikeClient.java\nindex 3678f97..87d3dcf 100644\n--- a/aerospike/src/main/java/com/yahoo/ycsb/db/AerospikeClient.java\n+++ b/aerospike/src/main/java/com/yahoo/ycsb/db/AerospikeClient.java\n@@ -77,7 +77,7 @@\n           new com.aerospike.client.AerospikeClient(clientPolicy, host, port);\n     } catch (AerospikeException e) {\n       throw new DBException(String.format(\"Error while creating Aerospike \" +\n-          \"client for %s:%d.\", host, port));\n+          \"client for %s:%d.\", host, port), e);\n     }\n   }\n \n@@ -150,7 +150,7 @@\n         return RESULT_OK;\n       } catch (AerospikeException e) {\n         if (e.getResultCode() != ResultCode.DEVICE_OVERLOAD) {\n-          System.err.println(\"Error while updating key \" + key + \": \" + e);\n+          System.err.println(\"Error while writing key \" + key + \": \" + e);\n           return RESULT_ERROR;\n         }\n \n", "projectName": "brianfrankcooper.YCSB", "bugLineNum": 79, "bugNodeStartChar": 2667, "bugNodeLength": 109, "fixLineNum": 79, "fixNodeStartChar": 2667, "fixNodeLength": 112, "sourceBeforeFix": "new DBException(String.format(\"Error while creating Aerospike \" + \"client for %s:%d.\",host,port))", "sourceAfterFix": "new DBException(String.format(\"Error while creating Aerospike \" + \"client for %s:%d.\",host,port),e)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "24690edd29ec6049f2456b3ec463d8d1ae0b1663", "fixCommitParentSHA1": "c76f2db729cd5eaa045ce793a93372c4508d3f67", "bugFilePath": "gemfire/src/main/java/com/yahoo/ycsb/db/GemFireClient.java", "fixPatch": "diff --git a/gemfire/src/main/java/com/yahoo/ycsb/db/GemFireClient.java b/gemfire/src/main/java/com/yahoo/ycsb/db/GemFireClient.java\nindex 9fe598a..aa0cd64 100644\n--- a/gemfire/src/main/java/com/yahoo/ycsb/db/GemFireClient.java\n+++ b/gemfire/src/main/java/com/yahoo/ycsb/db/GemFireClient.java\n@@ -133,7 +133,7 @@\n     if (val != null) {\n       if (fields == null) {\n         for (String k : val.keySet()) {\n-          result.put(key, new ByteArrayByteIterator(val.get(key)));\n+          result.put(key, new ByteArrayByteIterator(val.get(k)));\n         }\n       } else {\n         for (String field : fields) {\n", "projectName": "brianfrankcooper.YCSB", "bugLineNum": 136, "bugNodeStartChar": 5285, "bugNodeLength": 12, "fixLineNum": 136, "fixNodeStartChar": 5285, "fixNodeLength": 10, "sourceBeforeFix": "val.get(key)", "sourceAfterFix": "val.get(k)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "8bfa50ba500a6ca952f97f11c8eaa2969947387e", "fixCommitParentSHA1": "20f889053b719d83a0b6d1a3686dfe7b891370bd", "bugFilePath": "core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java", "fixPatch": "diff --git a/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java b/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java\nindex 2d17889..29c967c 100644\n--- a/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java\n+++ b/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java\n@@ -570,15 +570,15 @@\n \n \t\t//do the transaction\n \t\t\n-\t\tlong st=System.currentTimeMillis();\n+\t\tlong st=System.nanoTime();\n \n \t\tdb.read(table,keyname,fields,new HashMap<String,ByteIterator>());\n \t\t\n \t\tdb.update(table,keyname,values);\n \n-\t\tlong en=System.currentTimeMillis();\n+\t\tlong en=System.nanoTime();\n \t\t\n-\t\tMeasurements.getMeasurements().measure(\"READ-MODIFY-WRITE\", (int)(en-st));\n+\t\tMeasurements.getMeasurements().measure(\"READ-MODIFY-WRITE\", (int)((en-st)/1000));\n \t}\n \t\n \tpublic void doTransactionScan(DB db)\n", "projectName": "brianfrankcooper.YCSB", "bugLineNum": 573, "bugNodeStartChar": 20458, "bugNodeLength": 26, "fixLineNum": 573, "fixNodeStartChar": 20458, "fixNodeLength": 17, "sourceBeforeFix": "System.currentTimeMillis()", "sourceAfterFix": "System.nanoTime()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "8bfa50ba500a6ca952f97f11c8eaa2969947387e", "fixCommitParentSHA1": "20f889053b719d83a0b6d1a3686dfe7b891370bd", "bugFilePath": "core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java", "fixPatch": "diff --git a/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java b/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java\nindex 2d17889..29c967c 100644\n--- a/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java\n+++ b/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java\n@@ -570,15 +570,15 @@\n \n \t\t//do the transaction\n \t\t\n-\t\tlong st=System.currentTimeMillis();\n+\t\tlong st=System.nanoTime();\n \n \t\tdb.read(table,keyname,fields,new HashMap<String,ByteIterator>());\n \t\t\n \t\tdb.update(table,keyname,values);\n \n-\t\tlong en=System.currentTimeMillis();\n+\t\tlong en=System.nanoTime();\n \t\t\n-\t\tMeasurements.getMeasurements().measure(\"READ-MODIFY-WRITE\", (int)(en-st));\n+\t\tMeasurements.getMeasurements().measure(\"READ-MODIFY-WRITE\", (int)((en-st)/1000));\n \t}\n \t\n \tpublic void doTransactionScan(DB db)\n", "projectName": "brianfrankcooper.YCSB", "bugLineNum": 573, "bugNodeStartChar": 20458, "bugNodeLength": 26, "fixLineNum": 573, "fixNodeStartChar": 20458, "fixNodeLength": 17, "sourceBeforeFix": "System.currentTimeMillis()", "sourceAfterFix": "System.nanoTime()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "8bfa50ba500a6ca952f97f11c8eaa2969947387e", "fixCommitParentSHA1": "20f889053b719d83a0b6d1a3686dfe7b891370bd", "bugFilePath": "core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java", "fixPatch": "diff --git a/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java b/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java\nindex 2d17889..29c967c 100644\n--- a/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java\n+++ b/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java\n@@ -570,15 +570,15 @@\n \n \t\t//do the transaction\n \t\t\n-\t\tlong st=System.currentTimeMillis();\n+\t\tlong st=System.nanoTime();\n \n \t\tdb.read(table,keyname,fields,new HashMap<String,ByteIterator>());\n \t\t\n \t\tdb.update(table,keyname,values);\n \n-\t\tlong en=System.currentTimeMillis();\n+\t\tlong en=System.nanoTime();\n \t\t\n-\t\tMeasurements.getMeasurements().measure(\"READ-MODIFY-WRITE\", (int)(en-st));\n+\t\tMeasurements.getMeasurements().measure(\"READ-MODIFY-WRITE\", (int)((en-st)/1000));\n \t}\n \t\n \tpublic void doTransactionScan(DB db)\n", "projectName": "brianfrankcooper.YCSB", "bugLineNum": 579, "bugNodeStartChar": 20604, "bugNodeLength": 26, "fixLineNum": 579, "fixNodeStartChar": 20604, "fixNodeLength": 17, "sourceBeforeFix": "System.currentTimeMillis()", "sourceAfterFix": "System.nanoTime()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "8bfa50ba500a6ca952f97f11c8eaa2969947387e", "fixCommitParentSHA1": "20f889053b719d83a0b6d1a3686dfe7b891370bd", "bugFilePath": "core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java", "fixPatch": "diff --git a/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java b/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java\nindex 2d17889..29c967c 100644\n--- a/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java\n+++ b/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java\n@@ -570,15 +570,15 @@\n \n \t\t//do the transaction\n \t\t\n-\t\tlong st=System.currentTimeMillis();\n+\t\tlong st=System.nanoTime();\n \n \t\tdb.read(table,keyname,fields,new HashMap<String,ByteIterator>());\n \t\t\n \t\tdb.update(table,keyname,values);\n \n-\t\tlong en=System.currentTimeMillis();\n+\t\tlong en=System.nanoTime();\n \t\t\n-\t\tMeasurements.getMeasurements().measure(\"READ-MODIFY-WRITE\", (int)(en-st));\n+\t\tMeasurements.getMeasurements().measure(\"READ-MODIFY-WRITE\", (int)((en-st)/1000));\n \t}\n \t\n \tpublic void doTransactionScan(DB db)\n", "projectName": "brianfrankcooper.YCSB", "bugLineNum": 579, "bugNodeStartChar": 20604, "bugNodeLength": 26, "fixLineNum": 579, "fixNodeStartChar": 20604, "fixNodeLength": 17, "sourceBeforeFix": "System.currentTimeMillis()", "sourceAfterFix": "System.nanoTime()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "ae1c9a922bd43a580f838ca538824dd2a86b64f5", "fixCommitParentSHA1": "b1f8580fddf166c6107d273540ddd06088c01177", "bugFilePath": "core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java", "fixPatch": "diff --git a/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java b/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java\nindex 2d17889..29c967c 100644\n--- a/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java\n+++ b/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java\n@@ -570,15 +570,15 @@\n \n \t\t//do the transaction\n \t\t\n-\t\tlong st=System.currentTimeMillis();\n+\t\tlong st=System.nanoTime();\n \n \t\tdb.read(table,keyname,fields,new HashMap<String,ByteIterator>());\n \t\t\n \t\tdb.update(table,keyname,values);\n \n-\t\tlong en=System.currentTimeMillis();\n+\t\tlong en=System.nanoTime();\n \t\t\n-\t\tMeasurements.getMeasurements().measure(\"READ-MODIFY-WRITE\", (int)(en-st));\n+\t\tMeasurements.getMeasurements().measure(\"READ-MODIFY-WRITE\", (int)((en-st)/1000));\n \t}\n \t\n \tpublic void doTransactionScan(DB db)\n", "projectName": "brianfrankcooper.YCSB", "bugLineNum": 573, "bugNodeStartChar": 20458, "bugNodeLength": 26, "fixLineNum": 573, "fixNodeStartChar": 20458, "fixNodeLength": 17, "sourceBeforeFix": "System.currentTimeMillis()", "sourceAfterFix": "System.nanoTime()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "ae1c9a922bd43a580f838ca538824dd2a86b64f5", "fixCommitParentSHA1": "b1f8580fddf166c6107d273540ddd06088c01177", "bugFilePath": "core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java", "fixPatch": "diff --git a/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java b/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java\nindex 2d17889..29c967c 100644\n--- a/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java\n+++ b/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java\n@@ -570,15 +570,15 @@\n \n \t\t//do the transaction\n \t\t\n-\t\tlong st=System.currentTimeMillis();\n+\t\tlong st=System.nanoTime();\n \n \t\tdb.read(table,keyname,fields,new HashMap<String,ByteIterator>());\n \t\t\n \t\tdb.update(table,keyname,values);\n \n-\t\tlong en=System.currentTimeMillis();\n+\t\tlong en=System.nanoTime();\n \t\t\n-\t\tMeasurements.getMeasurements().measure(\"READ-MODIFY-WRITE\", (int)(en-st));\n+\t\tMeasurements.getMeasurements().measure(\"READ-MODIFY-WRITE\", (int)((en-st)/1000));\n \t}\n \t\n \tpublic void doTransactionScan(DB db)\n", "projectName": "brianfrankcooper.YCSB", "bugLineNum": 573, "bugNodeStartChar": 20458, "bugNodeLength": 26, "fixLineNum": 573, "fixNodeStartChar": 20458, "fixNodeLength": 17, "sourceBeforeFix": "System.currentTimeMillis()", "sourceAfterFix": "System.nanoTime()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "ae1c9a922bd43a580f838ca538824dd2a86b64f5", "fixCommitParentSHA1": "b1f8580fddf166c6107d273540ddd06088c01177", "bugFilePath": "core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java", "fixPatch": "diff --git a/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java b/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java\nindex 2d17889..29c967c 100644\n--- a/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java\n+++ b/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java\n@@ -570,15 +570,15 @@\n \n \t\t//do the transaction\n \t\t\n-\t\tlong st=System.currentTimeMillis();\n+\t\tlong st=System.nanoTime();\n \n \t\tdb.read(table,keyname,fields,new HashMap<String,ByteIterator>());\n \t\t\n \t\tdb.update(table,keyname,values);\n \n-\t\tlong en=System.currentTimeMillis();\n+\t\tlong en=System.nanoTime();\n \t\t\n-\t\tMeasurements.getMeasurements().measure(\"READ-MODIFY-WRITE\", (int)(en-st));\n+\t\tMeasurements.getMeasurements().measure(\"READ-MODIFY-WRITE\", (int)((en-st)/1000));\n \t}\n \t\n \tpublic void doTransactionScan(DB db)\n", "projectName": "brianfrankcooper.YCSB", "bugLineNum": 579, "bugNodeStartChar": 20604, "bugNodeLength": 26, "fixLineNum": 579, "fixNodeStartChar": 20604, "fixNodeLength": 17, "sourceBeforeFix": "System.currentTimeMillis()", "sourceAfterFix": "System.nanoTime()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "ae1c9a922bd43a580f838ca538824dd2a86b64f5", "fixCommitParentSHA1": "b1f8580fddf166c6107d273540ddd06088c01177", "bugFilePath": "core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java", "fixPatch": "diff --git a/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java b/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java\nindex 2d17889..29c967c 100644\n--- a/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java\n+++ b/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java\n@@ -570,15 +570,15 @@\n \n \t\t//do the transaction\n \t\t\n-\t\tlong st=System.currentTimeMillis();\n+\t\tlong st=System.nanoTime();\n \n \t\tdb.read(table,keyname,fields,new HashMap<String,ByteIterator>());\n \t\t\n \t\tdb.update(table,keyname,values);\n \n-\t\tlong en=System.currentTimeMillis();\n+\t\tlong en=System.nanoTime();\n \t\t\n-\t\tMeasurements.getMeasurements().measure(\"READ-MODIFY-WRITE\", (int)(en-st));\n+\t\tMeasurements.getMeasurements().measure(\"READ-MODIFY-WRITE\", (int)((en-st)/1000));\n \t}\n \t\n \tpublic void doTransactionScan(DB db)\n", "projectName": "brianfrankcooper.YCSB", "bugLineNum": 579, "bugNodeStartChar": 20604, "bugNodeLength": 26, "fixLineNum": 579, "fixNodeStartChar": 20604, "fixNodeLength": 17, "sourceBeforeFix": "System.currentTimeMillis()", "sourceAfterFix": "System.nanoTime()"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "4baf500fc14016bfc22a339c68a4c05050d14a52", "fixCommitParentSHA1": "f6b8a359fb1729a51346c6020e8f388695d9a7d9", "bugFilePath": "db/redis/src/com/yahoo/ycsb/db/RedisClient.java", "fixPatch": "diff --git a/db/redis/src/com/yahoo/ycsb/db/RedisClient.java b/db/redis/src/com/yahoo/ycsb/db/RedisClient.java\nindex 7e9b5f8..0d5c3ff 100644\n--- a/db/redis/src/com/yahoo/ycsb/db/RedisClient.java\n+++ b/db/redis/src/com/yahoo/ycsb/db/RedisClient.java\n@@ -73,7 +73,7 @@\n     public int read(String table, String key, Set<String> fields,\n             HashMap<String, ByteIterator> result) {\n         if (fields == null) {\n-            StringByteIteartor.putAllAsByteIterators(result, jedis.hgetAll(key));\n+            StringByteIterator.putAllAsByteIterators(result, jedis.hgetAll(key));\n         }\n         else {\n             String[] fieldArray = (String[])fields.toArray(new String[fields.size()]);\n", "projectName": "brianfrankcooper.YCSB", "bugLineNum": 76, "bugNodeStartChar": 2212, "bugNodeLength": 68, "fixLineNum": 76, "fixNodeStartChar": 2212, "fixNodeLength": 68, "sourceBeforeFix": "StringByteIteartor.putAllAsByteIterators(result,jedis.hgetAll(key))", "sourceAfterFix": "StringByteIterator.putAllAsByteIterators(result,jedis.hgetAll(key))"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4baf500fc14016bfc22a339c68a4c05050d14a52", "fixCommitParentSHA1": "f6b8a359fb1729a51346c6020e8f388695d9a7d9", "bugFilePath": "db/redis/src/com/yahoo/ycsb/db/RedisClient.java", "fixPatch": "diff --git a/db/redis/src/com/yahoo/ycsb/db/RedisClient.java b/db/redis/src/com/yahoo/ycsb/db/RedisClient.java\nindex 7e9b5f8..0d5c3ff 100644\n--- a/db/redis/src/com/yahoo/ycsb/db/RedisClient.java\n+++ b/db/redis/src/com/yahoo/ycsb/db/RedisClient.java\n@@ -73,7 +73,7 @@\n     public int read(String table, String key, Set<String> fields,\n             HashMap<String, ByteIterator> result) {\n         if (fields == null) {\n-            StringByteIteartor.putAllAsByteIterators(result, jedis.hgetAll(key));\n+            StringByteIterator.putAllAsByteIterators(result, jedis.hgetAll(key));\n         }\n         else {\n             String[] fieldArray = (String[])fields.toArray(new String[fields.size()]);\n", "projectName": "brianfrankcooper.YCSB", "bugLineNum": 76, "bugNodeStartChar": 2212, "bugNodeLength": 68, "fixLineNum": 76, "fixNodeStartChar": 2212, "fixNodeLength": 68, "sourceBeforeFix": "StringByteIteartor.putAllAsByteIterators(result,jedis.hgetAll(key))", "sourceAfterFix": "StringByteIterator.putAllAsByteIterators(result,jedis.hgetAll(key))"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "8f9f46314222a36807eebee0fcacbab3d61b06d7", "fixCommitParentSHA1": "0231452bb57827b7f05e701208f307a9e0f2542d", "bugFilePath": "db/hbase/src/com/yahoo/ycsb/db/HBaseClient.java", "fixPatch": "diff --git a/db/hbase/src/com/yahoo/ycsb/db/HBaseClient.java b/db/hbase/src/com/yahoo/ycsb/db/HBaseClient.java\nindex 9a9f70b..0a5c3f5 100644\n--- a/db/hbase/src/com/yahoo/ycsb/db/HBaseClient.java\n+++ b/db/hbase/src/com/yahoo/ycsb/db/HBaseClient.java\n@@ -47,7 +47,9 @@\n  */\n public class HBaseClient extends com.yahoo.ycsb.DB\n {\n-    private static final Configuration config = HBaseConfiguration.create();\n+    // BFC: Change to fix broken build (with HBase 0.20.6)\n+    //private static final Configuration config = HBaseConfiguration.create();\n+    private static final HBaseConfiguration config = new HBaseConfiguration();\n \n     public boolean _debug=false;\n \n", "projectName": "brianfrankcooper.YCSB", "bugLineNum": 50, "bugNodeStartChar": 3669, "bugNodeLength": 72, "fixLineNum": 52, "fixNodeStartChar": 3807, "fixNodeLength": 74, "sourceBeforeFix": "private static final Configuration config=HBaseConfiguration.create(); ", "sourceAfterFix": "private static final HBaseConfiguration config=new HBaseConfiguration(); "}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "1acf1d0444177a86813d1807bb1910041c14ce75", "fixCommitParentSHA1": "26a5f7fae345120655456263e398f62bb8abc0e8", "bugFilePath": "src/com/yahoo/ycsb/Client.java", "fixPatch": "diff --git a/src/com/yahoo/ycsb/Client.java b/src/com/yahoo/ycsb/Client.java\nindex 69a2828..2f5b62e 100644\n--- a/src/com/yahoo/ycsb/Client.java\n+++ b/src/com/yahoo/ycsb/Client.java\n@@ -399,7 +399,7 @@\n \t\t\t}\n \n \t\t\t// if no exporter is provided the default text one will be used\n-\t\t\tString exporterStr = props.getProperty(\"exporter\");\n+\t\t\tString exporterStr = props.getProperty(\"exporter\", \"com.yahoo.ycsb.measurements.exporter.TextMeasurementsExporter\");\n \t\t\ttry\n \t\t\t{\n \t\t\t\texporter = (MeasurementsExporter) Class.forName(exporterStr).getConstructor(OutputStream.class).newInstance(out);\n", "projectName": "brianfrankcooper.YCSB", "bugLineNum": 402, "bugNodeStartChar": 12817, "bugNodeLength": 29, "fixLineNum": 402, "fixNodeStartChar": 12817, "fixNodeLength": 94, "sourceBeforeFix": "props.getProperty(\"exporter\")", "sourceAfterFix": "props.getProperty(\"exporter\",\"com.yahoo.ycsb.measurements.exporter.TextMeasurementsExporter\")"}]