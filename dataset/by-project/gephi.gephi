[{"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "3dddcc4cdf4a74ddbd4607c6aaee5bdd8ac46c27", "fixCommitParentSHA1": "803d8c8677ed27a39ff17d201b447590d82a90a7", "bugFilePath": "modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java", "fixPatch": "diff --git a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\nindex afb2d9a..51b85c0 100644\n--- a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\n+++ b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\n@@ -89,7 +89,7 @@\n         octree.initArchitecture();\n     }\n \n-    public void updateSelection(GL2 gl, GLU glu) {\n+    public synchronized void updateSelection(GL2 gl, GLU glu) {\n         if (vizConfig.isSelectionEnable() && currentSelectionArea != null && currentSelectionArea.isEnabled()) {\n             float[] mp = Arrays.copyOf(graphIO.getMousePosition(), 2);\n             float[] cent = currentSelectionArea.getSelectionAreaCenter();\n@@ -102,7 +102,7 @@\n     }\n \n     @Override\n-    public boolean updateWorld() {\n+    public synchronized boolean updateWorld() {\n         boolean repositioned = octree.repositionNodes();\n         boolean updated = dataBridge.updateWorld();\n \n@@ -142,7 +142,7 @@\n     }\n \n     @Override\n-    public void display(GL2 gl, GLU glu) {\n+    public synchronized void display(GL2 gl, GLU glu) {\n         markTime++;\n \n         VizModel vizModel = VizController.getInstance().getVizModel();\n@@ -299,7 +299,7 @@\n     }\n \n     @Override\n-    public void mouseClick() {\n+    public synchronized void mouseClick() {\n         if (vizConfig.isSelectionEnable() && rectangleSelection && !customSelection) {\n             Rectangle rectangle = (Rectangle) currentSelectionArea;\n             //rectangle.setBlocking(false);\n@@ -367,7 +367,7 @@\n     }\n \n     @Override\n-    public void mouseMove() {\n+    public synchronized void mouseMove() {\n         //Selection\n         if (vizConfig.isSelectionEnable() && rectangleSelection) {\n             Rectangle rectangle = (Rectangle) currentSelectionArea;\n@@ -447,7 +447,7 @@\n     }\n \n     @Override\n-    public void updateLOD() {\n+    public synchronized void updateLOD() {\n         Iterator<NodeModel> iterator = octree.getNodeIterator();\n         for (; iterator.hasNext();) {\n             NodeModel obj = iterator.next();\n@@ -456,7 +456,7 @@\n     }\n \n     @Override\n-    public List<NodeModel> getSelectedNodes() {\n+    public synchronized List<NodeModel> getSelectedNodes() {\n         List<NodeModel> selected = new ArrayList<>();\n         for (Iterator<NodeModel> itr = octree.getNodeIterator(); itr.hasNext();) {\n             NodeModel nodeModel = itr.next();\n@@ -468,7 +468,7 @@\n     }\n \n     @Override\n-    public List<EdgeModel> getSelectedEdges() {\n+    public synchronized List<EdgeModel> getSelectedEdges() {\n         List<EdgeModel> selected = new ArrayList<>();\n         for (Iterator<EdgeModel> itr = octree.getEdgeIterator(); itr.hasNext();) {\n             EdgeModel edgeModel = itr.next();\n@@ -480,7 +480,7 @@\n     }\n \n     @Override\n-    public List<Node> getSelectedUnderlyingNodes() {\n+    public synchronized List<Node> getSelectedUnderlyingNodes() {\n         List<Node> selected = new ArrayList<>();\n         for (Iterator<NodeModel> itr = octree.getNodeIterator(); itr.hasNext();) {\n             NodeModel nodeModel = itr.next();\n@@ -492,7 +492,7 @@\n     }\n \n     @Override\n-    public List<Edge> getSelectedUnderlyingEdges() {\n+    public synchronized List<Edge> getSelectedUnderlyingEdges() {\n         List<Edge> selected = new ArrayList<>();\n         for (Iterator<EdgeModel> itr = octree.getEdgeIterator(); itr.hasNext();) {\n             EdgeModel edgeModel = itr.next();\n@@ -545,7 +545,7 @@\n     }\n \n     @Override\n-    public void resetSelection() {\n+    public synchronized void resetSelection() {\n         resetNodesSelection();\n         resetEdgesSelection();\n         \n", "projectName": "gephi.gephi", "bugLineNum": 92, "bugNodeStartChar": 3494, "bugNodeLength": 538, "fixLineNum": 92, "fixNodeStartChar": 3494, "fixNodeLength": 551, "sourceBeforeFix": "1", "sourceAfterFix": "33"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "3dddcc4cdf4a74ddbd4607c6aaee5bdd8ac46c27", "fixCommitParentSHA1": "803d8c8677ed27a39ff17d201b447590d82a90a7", "bugFilePath": "modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java", "fixPatch": "diff --git a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\nindex afb2d9a..51b85c0 100644\n--- a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\n+++ b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\n@@ -89,7 +89,7 @@\n         octree.initArchitecture();\n     }\n \n-    public void updateSelection(GL2 gl, GLU glu) {\n+    public synchronized void updateSelection(GL2 gl, GLU glu) {\n         if (vizConfig.isSelectionEnable() && currentSelectionArea != null && currentSelectionArea.isEnabled()) {\n             float[] mp = Arrays.copyOf(graphIO.getMousePosition(), 2);\n             float[] cent = currentSelectionArea.getSelectionAreaCenter();\n@@ -102,7 +102,7 @@\n     }\n \n     @Override\n-    public boolean updateWorld() {\n+    public synchronized boolean updateWorld() {\n         boolean repositioned = octree.repositionNodes();\n         boolean updated = dataBridge.updateWorld();\n \n@@ -142,7 +142,7 @@\n     }\n \n     @Override\n-    public void display(GL2 gl, GLU glu) {\n+    public synchronized void display(GL2 gl, GLU glu) {\n         markTime++;\n \n         VizModel vizModel = VizController.getInstance().getVizModel();\n@@ -299,7 +299,7 @@\n     }\n \n     @Override\n-    public void mouseClick() {\n+    public synchronized void mouseClick() {\n         if (vizConfig.isSelectionEnable() && rectangleSelection && !customSelection) {\n             Rectangle rectangle = (Rectangle) currentSelectionArea;\n             //rectangle.setBlocking(false);\n@@ -367,7 +367,7 @@\n     }\n \n     @Override\n-    public void mouseMove() {\n+    public synchronized void mouseMove() {\n         //Selection\n         if (vizConfig.isSelectionEnable() && rectangleSelection) {\n             Rectangle rectangle = (Rectangle) currentSelectionArea;\n@@ -447,7 +447,7 @@\n     }\n \n     @Override\n-    public void updateLOD() {\n+    public synchronized void updateLOD() {\n         Iterator<NodeModel> iterator = octree.getNodeIterator();\n         for (; iterator.hasNext();) {\n             NodeModel obj = iterator.next();\n@@ -456,7 +456,7 @@\n     }\n \n     @Override\n-    public List<NodeModel> getSelectedNodes() {\n+    public synchronized List<NodeModel> getSelectedNodes() {\n         List<NodeModel> selected = new ArrayList<>();\n         for (Iterator<NodeModel> itr = octree.getNodeIterator(); itr.hasNext();) {\n             NodeModel nodeModel = itr.next();\n@@ -468,7 +468,7 @@\n     }\n \n     @Override\n-    public List<EdgeModel> getSelectedEdges() {\n+    public synchronized List<EdgeModel> getSelectedEdges() {\n         List<EdgeModel> selected = new ArrayList<>();\n         for (Iterator<EdgeModel> itr = octree.getEdgeIterator(); itr.hasNext();) {\n             EdgeModel edgeModel = itr.next();\n@@ -480,7 +480,7 @@\n     }\n \n     @Override\n-    public List<Node> getSelectedUnderlyingNodes() {\n+    public synchronized List<Node> getSelectedUnderlyingNodes() {\n         List<Node> selected = new ArrayList<>();\n         for (Iterator<NodeModel> itr = octree.getNodeIterator(); itr.hasNext();) {\n             NodeModel nodeModel = itr.next();\n@@ -492,7 +492,7 @@\n     }\n \n     @Override\n-    public List<Edge> getSelectedUnderlyingEdges() {\n+    public synchronized List<Edge> getSelectedUnderlyingEdges() {\n         List<Edge> selected = new ArrayList<>();\n         for (Iterator<EdgeModel> itr = octree.getEdgeIterator(); itr.hasNext();) {\n             EdgeModel edgeModel = itr.next();\n@@ -545,7 +545,7 @@\n     }\n \n     @Override\n-    public void resetSelection() {\n+    public synchronized void resetSelection() {\n         resetNodesSelection();\n         resetEdgesSelection();\n         \n", "projectName": "gephi.gephi", "bugLineNum": 104, "bugNodeStartChar": 4038, "bugNodeLength": 200, "fixLineNum": 104, "fixNodeStartChar": 4038, "fixNodeLength": 213, "sourceBeforeFix": "1", "sourceAfterFix": "33"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "3dddcc4cdf4a74ddbd4607c6aaee5bdd8ac46c27", "fixCommitParentSHA1": "803d8c8677ed27a39ff17d201b447590d82a90a7", "bugFilePath": "modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java", "fixPatch": "diff --git a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\nindex afb2d9a..51b85c0 100644\n--- a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\n+++ b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\n@@ -89,7 +89,7 @@\n         octree.initArchitecture();\n     }\n \n-    public void updateSelection(GL2 gl, GLU glu) {\n+    public synchronized void updateSelection(GL2 gl, GLU glu) {\n         if (vizConfig.isSelectionEnable() && currentSelectionArea != null && currentSelectionArea.isEnabled()) {\n             float[] mp = Arrays.copyOf(graphIO.getMousePosition(), 2);\n             float[] cent = currentSelectionArea.getSelectionAreaCenter();\n@@ -102,7 +102,7 @@\n     }\n \n     @Override\n-    public boolean updateWorld() {\n+    public synchronized boolean updateWorld() {\n         boolean repositioned = octree.repositionNodes();\n         boolean updated = dataBridge.updateWorld();\n \n@@ -142,7 +142,7 @@\n     }\n \n     @Override\n-    public void display(GL2 gl, GLU glu) {\n+    public synchronized void display(GL2 gl, GLU glu) {\n         markTime++;\n \n         VizModel vizModel = VizController.getInstance().getVizModel();\n@@ -299,7 +299,7 @@\n     }\n \n     @Override\n-    public void mouseClick() {\n+    public synchronized void mouseClick() {\n         if (vizConfig.isSelectionEnable() && rectangleSelection && !customSelection) {\n             Rectangle rectangle = (Rectangle) currentSelectionArea;\n             //rectangle.setBlocking(false);\n@@ -367,7 +367,7 @@\n     }\n \n     @Override\n-    public void mouseMove() {\n+    public synchronized void mouseMove() {\n         //Selection\n         if (vizConfig.isSelectionEnable() && rectangleSelection) {\n             Rectangle rectangle = (Rectangle) currentSelectionArea;\n@@ -447,7 +447,7 @@\n     }\n \n     @Override\n-    public void updateLOD() {\n+    public synchronized void updateLOD() {\n         Iterator<NodeModel> iterator = octree.getNodeIterator();\n         for (; iterator.hasNext();) {\n             NodeModel obj = iterator.next();\n@@ -456,7 +456,7 @@\n     }\n \n     @Override\n-    public List<NodeModel> getSelectedNodes() {\n+    public synchronized List<NodeModel> getSelectedNodes() {\n         List<NodeModel> selected = new ArrayList<>();\n         for (Iterator<NodeModel> itr = octree.getNodeIterator(); itr.hasNext();) {\n             NodeModel nodeModel = itr.next();\n@@ -468,7 +468,7 @@\n     }\n \n     @Override\n-    public List<EdgeModel> getSelectedEdges() {\n+    public synchronized List<EdgeModel> getSelectedEdges() {\n         List<EdgeModel> selected = new ArrayList<>();\n         for (Iterator<EdgeModel> itr = octree.getEdgeIterator(); itr.hasNext();) {\n             EdgeModel edgeModel = itr.next();\n@@ -480,7 +480,7 @@\n     }\n \n     @Override\n-    public List<Node> getSelectedUnderlyingNodes() {\n+    public synchronized List<Node> getSelectedUnderlyingNodes() {\n         List<Node> selected = new ArrayList<>();\n         for (Iterator<NodeModel> itr = octree.getNodeIterator(); itr.hasNext();) {\n             NodeModel nodeModel = itr.next();\n@@ -492,7 +492,7 @@\n     }\n \n     @Override\n-    public List<Edge> getSelectedUnderlyingEdges() {\n+    public synchronized List<Edge> getSelectedUnderlyingEdges() {\n         List<Edge> selected = new ArrayList<>();\n         for (Iterator<EdgeModel> itr = octree.getEdgeIterator(); itr.hasNext();) {\n             EdgeModel edgeModel = itr.next();\n@@ -545,7 +545,7 @@\n     }\n \n     @Override\n-    public void resetSelection() {\n+    public synchronized void resetSelection() {\n         resetNodesSelection();\n         resetEdgesSelection();\n         \n", "projectName": "gephi.gephi", "bugLineNum": 144, "bugNodeStartChar": 5510, "bugNodeLength": 5359, "fixLineNum": 144, "fixNodeStartChar": 5510, "fixNodeLength": 5372, "sourceBeforeFix": "1", "sourceAfterFix": "33"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "3dddcc4cdf4a74ddbd4607c6aaee5bdd8ac46c27", "fixCommitParentSHA1": "803d8c8677ed27a39ff17d201b447590d82a90a7", "bugFilePath": "modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java", "fixPatch": "diff --git a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\nindex afb2d9a..51b85c0 100644\n--- a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\n+++ b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\n@@ -89,7 +89,7 @@\n         octree.initArchitecture();\n     }\n \n-    public void updateSelection(GL2 gl, GLU glu) {\n+    public synchronized void updateSelection(GL2 gl, GLU glu) {\n         if (vizConfig.isSelectionEnable() && currentSelectionArea != null && currentSelectionArea.isEnabled()) {\n             float[] mp = Arrays.copyOf(graphIO.getMousePosition(), 2);\n             float[] cent = currentSelectionArea.getSelectionAreaCenter();\n@@ -102,7 +102,7 @@\n     }\n \n     @Override\n-    public boolean updateWorld() {\n+    public synchronized boolean updateWorld() {\n         boolean repositioned = octree.repositionNodes();\n         boolean updated = dataBridge.updateWorld();\n \n@@ -142,7 +142,7 @@\n     }\n \n     @Override\n-    public void display(GL2 gl, GLU glu) {\n+    public synchronized void display(GL2 gl, GLU glu) {\n         markTime++;\n \n         VizModel vizModel = VizController.getInstance().getVizModel();\n@@ -299,7 +299,7 @@\n     }\n \n     @Override\n-    public void mouseClick() {\n+    public synchronized void mouseClick() {\n         if (vizConfig.isSelectionEnable() && rectangleSelection && !customSelection) {\n             Rectangle rectangle = (Rectangle) currentSelectionArea;\n             //rectangle.setBlocking(false);\n@@ -367,7 +367,7 @@\n     }\n \n     @Override\n-    public void mouseMove() {\n+    public synchronized void mouseMove() {\n         //Selection\n         if (vizConfig.isSelectionEnable() && rectangleSelection) {\n             Rectangle rectangle = (Rectangle) currentSelectionArea;\n@@ -447,7 +447,7 @@\n     }\n \n     @Override\n-    public void updateLOD() {\n+    public synchronized void updateLOD() {\n         Iterator<NodeModel> iterator = octree.getNodeIterator();\n         for (; iterator.hasNext();) {\n             NodeModel obj = iterator.next();\n@@ -456,7 +456,7 @@\n     }\n \n     @Override\n-    public List<NodeModel> getSelectedNodes() {\n+    public synchronized List<NodeModel> getSelectedNodes() {\n         List<NodeModel> selected = new ArrayList<>();\n         for (Iterator<NodeModel> itr = octree.getNodeIterator(); itr.hasNext();) {\n             NodeModel nodeModel = itr.next();\n@@ -468,7 +468,7 @@\n     }\n \n     @Override\n-    public List<EdgeModel> getSelectedEdges() {\n+    public synchronized List<EdgeModel> getSelectedEdges() {\n         List<EdgeModel> selected = new ArrayList<>();\n         for (Iterator<EdgeModel> itr = octree.getEdgeIterator(); itr.hasNext();) {\n             EdgeModel edgeModel = itr.next();\n@@ -480,7 +480,7 @@\n     }\n \n     @Override\n-    public List<Node> getSelectedUnderlyingNodes() {\n+    public synchronized List<Node> getSelectedUnderlyingNodes() {\n         List<Node> selected = new ArrayList<>();\n         for (Iterator<NodeModel> itr = octree.getNodeIterator(); itr.hasNext();) {\n             NodeModel nodeModel = itr.next();\n@@ -492,7 +492,7 @@\n     }\n \n     @Override\n-    public List<Edge> getSelectedUnderlyingEdges() {\n+    public synchronized List<Edge> getSelectedUnderlyingEdges() {\n         List<Edge> selected = new ArrayList<>();\n         for (Iterator<EdgeModel> itr = octree.getEdgeIterator(); itr.hasNext();) {\n             EdgeModel edgeModel = itr.next();\n@@ -545,7 +545,7 @@\n     }\n \n     @Override\n-    public void resetSelection() {\n+    public synchronized void resetSelection() {\n         resetNodesSelection();\n         resetEdgesSelection();\n         \n", "projectName": "gephi.gephi", "bugLineNum": 301, "bugNodeStartChar": 11814, "bugNodeLength": 1949, "fixLineNum": 301, "fixNodeStartChar": 11814, "fixNodeLength": 1962, "sourceBeforeFix": "1", "sourceAfterFix": "33"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "3dddcc4cdf4a74ddbd4607c6aaee5bdd8ac46c27", "fixCommitParentSHA1": "803d8c8677ed27a39ff17d201b447590d82a90a7", "bugFilePath": "modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java", "fixPatch": "diff --git a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\nindex afb2d9a..51b85c0 100644\n--- a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\n+++ b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\n@@ -89,7 +89,7 @@\n         octree.initArchitecture();\n     }\n \n-    public void updateSelection(GL2 gl, GLU glu) {\n+    public synchronized void updateSelection(GL2 gl, GLU glu) {\n         if (vizConfig.isSelectionEnable() && currentSelectionArea != null && currentSelectionArea.isEnabled()) {\n             float[] mp = Arrays.copyOf(graphIO.getMousePosition(), 2);\n             float[] cent = currentSelectionArea.getSelectionAreaCenter();\n@@ -102,7 +102,7 @@\n     }\n \n     @Override\n-    public boolean updateWorld() {\n+    public synchronized boolean updateWorld() {\n         boolean repositioned = octree.repositionNodes();\n         boolean updated = dataBridge.updateWorld();\n \n@@ -142,7 +142,7 @@\n     }\n \n     @Override\n-    public void display(GL2 gl, GLU glu) {\n+    public synchronized void display(GL2 gl, GLU glu) {\n         markTime++;\n \n         VizModel vizModel = VizController.getInstance().getVizModel();\n@@ -299,7 +299,7 @@\n     }\n \n     @Override\n-    public void mouseClick() {\n+    public synchronized void mouseClick() {\n         if (vizConfig.isSelectionEnable() && rectangleSelection && !customSelection) {\n             Rectangle rectangle = (Rectangle) currentSelectionArea;\n             //rectangle.setBlocking(false);\n@@ -367,7 +367,7 @@\n     }\n \n     @Override\n-    public void mouseMove() {\n+    public synchronized void mouseMove() {\n         //Selection\n         if (vizConfig.isSelectionEnable() && rectangleSelection) {\n             Rectangle rectangle = (Rectangle) currentSelectionArea;\n@@ -447,7 +447,7 @@\n     }\n \n     @Override\n-    public void updateLOD() {\n+    public synchronized void updateLOD() {\n         Iterator<NodeModel> iterator = octree.getNodeIterator();\n         for (; iterator.hasNext();) {\n             NodeModel obj = iterator.next();\n@@ -456,7 +456,7 @@\n     }\n \n     @Override\n-    public List<NodeModel> getSelectedNodes() {\n+    public synchronized List<NodeModel> getSelectedNodes() {\n         List<NodeModel> selected = new ArrayList<>();\n         for (Iterator<NodeModel> itr = octree.getNodeIterator(); itr.hasNext();) {\n             NodeModel nodeModel = itr.next();\n@@ -468,7 +468,7 @@\n     }\n \n     @Override\n-    public List<EdgeModel> getSelectedEdges() {\n+    public synchronized List<EdgeModel> getSelectedEdges() {\n         List<EdgeModel> selected = new ArrayList<>();\n         for (Iterator<EdgeModel> itr = octree.getEdgeIterator(); itr.hasNext();) {\n             EdgeModel edgeModel = itr.next();\n@@ -480,7 +480,7 @@\n     }\n \n     @Override\n-    public List<Node> getSelectedUnderlyingNodes() {\n+    public synchronized List<Node> getSelectedUnderlyingNodes() {\n         List<Node> selected = new ArrayList<>();\n         for (Iterator<NodeModel> itr = octree.getNodeIterator(); itr.hasNext();) {\n             NodeModel nodeModel = itr.next();\n@@ -492,7 +492,7 @@\n     }\n \n     @Override\n-    public List<Edge> getSelectedUnderlyingEdges() {\n+    public synchronized List<Edge> getSelectedUnderlyingEdges() {\n         List<Edge> selected = new ArrayList<>();\n         for (Iterator<EdgeModel> itr = octree.getEdgeIterator(); itr.hasNext();) {\n             EdgeModel edgeModel = itr.next();\n@@ -545,7 +545,7 @@\n     }\n \n     @Override\n-    public void resetSelection() {\n+    public synchronized void resetSelection() {\n         resetNodesSelection();\n         resetEdgesSelection();\n         \n", "projectName": "gephi.gephi", "bugLineNum": 369, "bugNodeStartChar": 14325, "bugNodeLength": 1784, "fixLineNum": 369, "fixNodeStartChar": 14325, "fixNodeLength": 1797, "sourceBeforeFix": "1", "sourceAfterFix": "33"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "3dddcc4cdf4a74ddbd4607c6aaee5bdd8ac46c27", "fixCommitParentSHA1": "803d8c8677ed27a39ff17d201b447590d82a90a7", "bugFilePath": "modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java", "fixPatch": "diff --git a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\nindex afb2d9a..51b85c0 100644\n--- a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\n+++ b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\n@@ -89,7 +89,7 @@\n         octree.initArchitecture();\n     }\n \n-    public void updateSelection(GL2 gl, GLU glu) {\n+    public synchronized void updateSelection(GL2 gl, GLU glu) {\n         if (vizConfig.isSelectionEnable() && currentSelectionArea != null && currentSelectionArea.isEnabled()) {\n             float[] mp = Arrays.copyOf(graphIO.getMousePosition(), 2);\n             float[] cent = currentSelectionArea.getSelectionAreaCenter();\n@@ -102,7 +102,7 @@\n     }\n \n     @Override\n-    public boolean updateWorld() {\n+    public synchronized boolean updateWorld() {\n         boolean repositioned = octree.repositionNodes();\n         boolean updated = dataBridge.updateWorld();\n \n@@ -142,7 +142,7 @@\n     }\n \n     @Override\n-    public void display(GL2 gl, GLU glu) {\n+    public synchronized void display(GL2 gl, GLU glu) {\n         markTime++;\n \n         VizModel vizModel = VizController.getInstance().getVizModel();\n@@ -299,7 +299,7 @@\n     }\n \n     @Override\n-    public void mouseClick() {\n+    public synchronized void mouseClick() {\n         if (vizConfig.isSelectionEnable() && rectangleSelection && !customSelection) {\n             Rectangle rectangle = (Rectangle) currentSelectionArea;\n             //rectangle.setBlocking(false);\n@@ -367,7 +367,7 @@\n     }\n \n     @Override\n-    public void mouseMove() {\n+    public synchronized void mouseMove() {\n         //Selection\n         if (vizConfig.isSelectionEnable() && rectangleSelection) {\n             Rectangle rectangle = (Rectangle) currentSelectionArea;\n@@ -447,7 +447,7 @@\n     }\n \n     @Override\n-    public void updateLOD() {\n+    public synchronized void updateLOD() {\n         Iterator<NodeModel> iterator = octree.getNodeIterator();\n         for (; iterator.hasNext();) {\n             NodeModel obj = iterator.next();\n@@ -456,7 +456,7 @@\n     }\n \n     @Override\n-    public List<NodeModel> getSelectedNodes() {\n+    public synchronized List<NodeModel> getSelectedNodes() {\n         List<NodeModel> selected = new ArrayList<>();\n         for (Iterator<NodeModel> itr = octree.getNodeIterator(); itr.hasNext();) {\n             NodeModel nodeModel = itr.next();\n@@ -468,7 +468,7 @@\n     }\n \n     @Override\n-    public List<EdgeModel> getSelectedEdges() {\n+    public synchronized List<EdgeModel> getSelectedEdges() {\n         List<EdgeModel> selected = new ArrayList<>();\n         for (Iterator<EdgeModel> itr = octree.getEdgeIterator(); itr.hasNext();) {\n             EdgeModel edgeModel = itr.next();\n@@ -480,7 +480,7 @@\n     }\n \n     @Override\n-    public List<Node> getSelectedUnderlyingNodes() {\n+    public synchronized List<Node> getSelectedUnderlyingNodes() {\n         List<Node> selected = new ArrayList<>();\n         for (Iterator<NodeModel> itr = octree.getNodeIterator(); itr.hasNext();) {\n             NodeModel nodeModel = itr.next();\n@@ -492,7 +492,7 @@\n     }\n \n     @Override\n-    public List<Edge> getSelectedUnderlyingEdges() {\n+    public synchronized List<Edge> getSelectedUnderlyingEdges() {\n         List<Edge> selected = new ArrayList<>();\n         for (Iterator<EdgeModel> itr = octree.getEdgeIterator(); itr.hasNext();) {\n             EdgeModel edgeModel = itr.next();\n@@ -545,7 +545,7 @@\n     }\n \n     @Override\n-    public void resetSelection() {\n+    public synchronized void resetSelection() {\n         resetNodesSelection();\n         resetEdgesSelection();\n         \n", "projectName": "gephi.gephi", "bugLineNum": 449, "bugNodeStartChar": 16907, "bugNodeLength": 245, "fixLineNum": 449, "fixNodeStartChar": 16907, "fixNodeLength": 258, "sourceBeforeFix": "1", "sourceAfterFix": "33"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "3dddcc4cdf4a74ddbd4607c6aaee5bdd8ac46c27", "fixCommitParentSHA1": "803d8c8677ed27a39ff17d201b447590d82a90a7", "bugFilePath": "modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java", "fixPatch": "diff --git a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\nindex afb2d9a..51b85c0 100644\n--- a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\n+++ b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\n@@ -89,7 +89,7 @@\n         octree.initArchitecture();\n     }\n \n-    public void updateSelection(GL2 gl, GLU glu) {\n+    public synchronized void updateSelection(GL2 gl, GLU glu) {\n         if (vizConfig.isSelectionEnable() && currentSelectionArea != null && currentSelectionArea.isEnabled()) {\n             float[] mp = Arrays.copyOf(graphIO.getMousePosition(), 2);\n             float[] cent = currentSelectionArea.getSelectionAreaCenter();\n@@ -102,7 +102,7 @@\n     }\n \n     @Override\n-    public boolean updateWorld() {\n+    public synchronized boolean updateWorld() {\n         boolean repositioned = octree.repositionNodes();\n         boolean updated = dataBridge.updateWorld();\n \n@@ -142,7 +142,7 @@\n     }\n \n     @Override\n-    public void display(GL2 gl, GLU glu) {\n+    public synchronized void display(GL2 gl, GLU glu) {\n         markTime++;\n \n         VizModel vizModel = VizController.getInstance().getVizModel();\n@@ -299,7 +299,7 @@\n     }\n \n     @Override\n-    public void mouseClick() {\n+    public synchronized void mouseClick() {\n         if (vizConfig.isSelectionEnable() && rectangleSelection && !customSelection) {\n             Rectangle rectangle = (Rectangle) currentSelectionArea;\n             //rectangle.setBlocking(false);\n@@ -367,7 +367,7 @@\n     }\n \n     @Override\n-    public void mouseMove() {\n+    public synchronized void mouseMove() {\n         //Selection\n         if (vizConfig.isSelectionEnable() && rectangleSelection) {\n             Rectangle rectangle = (Rectangle) currentSelectionArea;\n@@ -447,7 +447,7 @@\n     }\n \n     @Override\n-    public void updateLOD() {\n+    public synchronized void updateLOD() {\n         Iterator<NodeModel> iterator = octree.getNodeIterator();\n         for (; iterator.hasNext();) {\n             NodeModel obj = iterator.next();\n@@ -456,7 +456,7 @@\n     }\n \n     @Override\n-    public List<NodeModel> getSelectedNodes() {\n+    public synchronized List<NodeModel> getSelectedNodes() {\n         List<NodeModel> selected = new ArrayList<>();\n         for (Iterator<NodeModel> itr = octree.getNodeIterator(); itr.hasNext();) {\n             NodeModel nodeModel = itr.next();\n@@ -468,7 +468,7 @@\n     }\n \n     @Override\n-    public List<EdgeModel> getSelectedEdges() {\n+    public synchronized List<EdgeModel> getSelectedEdges() {\n         List<EdgeModel> selected = new ArrayList<>();\n         for (Iterator<EdgeModel> itr = octree.getEdgeIterator(); itr.hasNext();) {\n             EdgeModel edgeModel = itr.next();\n@@ -480,7 +480,7 @@\n     }\n \n     @Override\n-    public List<Node> getSelectedUnderlyingNodes() {\n+    public synchronized List<Node> getSelectedUnderlyingNodes() {\n         List<Node> selected = new ArrayList<>();\n         for (Iterator<NodeModel> itr = octree.getNodeIterator(); itr.hasNext();) {\n             NodeModel nodeModel = itr.next();\n@@ -492,7 +492,7 @@\n     }\n \n     @Override\n-    public List<Edge> getSelectedUnderlyingEdges() {\n+    public synchronized List<Edge> getSelectedUnderlyingEdges() {\n         List<Edge> selected = new ArrayList<>();\n         for (Iterator<EdgeModel> itr = octree.getEdgeIterator(); itr.hasNext();) {\n             EdgeModel edgeModel = itr.next();\n@@ -545,7 +545,7 @@\n     }\n \n     @Override\n-    public void resetSelection() {\n+    public synchronized void resetSelection() {\n         resetNodesSelection();\n         resetEdgesSelection();\n         \n", "projectName": "gephi.gephi", "bugLineNum": 458, "bugNodeStartChar": 17158, "bugNodeLength": 378, "fixLineNum": 458, "fixNodeStartChar": 17158, "fixNodeLength": 391, "sourceBeforeFix": "1", "sourceAfterFix": "33"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "3dddcc4cdf4a74ddbd4607c6aaee5bdd8ac46c27", "fixCommitParentSHA1": "803d8c8677ed27a39ff17d201b447590d82a90a7", "bugFilePath": "modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java", "fixPatch": "diff --git a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\nindex afb2d9a..51b85c0 100644\n--- a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\n+++ b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\n@@ -89,7 +89,7 @@\n         octree.initArchitecture();\n     }\n \n-    public void updateSelection(GL2 gl, GLU glu) {\n+    public synchronized void updateSelection(GL2 gl, GLU glu) {\n         if (vizConfig.isSelectionEnable() && currentSelectionArea != null && currentSelectionArea.isEnabled()) {\n             float[] mp = Arrays.copyOf(graphIO.getMousePosition(), 2);\n             float[] cent = currentSelectionArea.getSelectionAreaCenter();\n@@ -102,7 +102,7 @@\n     }\n \n     @Override\n-    public boolean updateWorld() {\n+    public synchronized boolean updateWorld() {\n         boolean repositioned = octree.repositionNodes();\n         boolean updated = dataBridge.updateWorld();\n \n@@ -142,7 +142,7 @@\n     }\n \n     @Override\n-    public void display(GL2 gl, GLU glu) {\n+    public synchronized void display(GL2 gl, GLU glu) {\n         markTime++;\n \n         VizModel vizModel = VizController.getInstance().getVizModel();\n@@ -299,7 +299,7 @@\n     }\n \n     @Override\n-    public void mouseClick() {\n+    public synchronized void mouseClick() {\n         if (vizConfig.isSelectionEnable() && rectangleSelection && !customSelection) {\n             Rectangle rectangle = (Rectangle) currentSelectionArea;\n             //rectangle.setBlocking(false);\n@@ -367,7 +367,7 @@\n     }\n \n     @Override\n-    public void mouseMove() {\n+    public synchronized void mouseMove() {\n         //Selection\n         if (vizConfig.isSelectionEnable() && rectangleSelection) {\n             Rectangle rectangle = (Rectangle) currentSelectionArea;\n@@ -447,7 +447,7 @@\n     }\n \n     @Override\n-    public void updateLOD() {\n+    public synchronized void updateLOD() {\n         Iterator<NodeModel> iterator = octree.getNodeIterator();\n         for (; iterator.hasNext();) {\n             NodeModel obj = iterator.next();\n@@ -456,7 +456,7 @@\n     }\n \n     @Override\n-    public List<NodeModel> getSelectedNodes() {\n+    public synchronized List<NodeModel> getSelectedNodes() {\n         List<NodeModel> selected = new ArrayList<>();\n         for (Iterator<NodeModel> itr = octree.getNodeIterator(); itr.hasNext();) {\n             NodeModel nodeModel = itr.next();\n@@ -468,7 +468,7 @@\n     }\n \n     @Override\n-    public List<EdgeModel> getSelectedEdges() {\n+    public synchronized List<EdgeModel> getSelectedEdges() {\n         List<EdgeModel> selected = new ArrayList<>();\n         for (Iterator<EdgeModel> itr = octree.getEdgeIterator(); itr.hasNext();) {\n             EdgeModel edgeModel = itr.next();\n@@ -480,7 +480,7 @@\n     }\n \n     @Override\n-    public List<Node> getSelectedUnderlyingNodes() {\n+    public synchronized List<Node> getSelectedUnderlyingNodes() {\n         List<Node> selected = new ArrayList<>();\n         for (Iterator<NodeModel> itr = octree.getNodeIterator(); itr.hasNext();) {\n             NodeModel nodeModel = itr.next();\n@@ -492,7 +492,7 @@\n     }\n \n     @Override\n-    public List<Edge> getSelectedUnderlyingEdges() {\n+    public synchronized List<Edge> getSelectedUnderlyingEdges() {\n         List<Edge> selected = new ArrayList<>();\n         for (Iterator<EdgeModel> itr = octree.getEdgeIterator(); itr.hasNext();) {\n             EdgeModel edgeModel = itr.next();\n@@ -545,7 +545,7 @@\n     }\n \n     @Override\n-    public void resetSelection() {\n+    public synchronized void resetSelection() {\n         resetNodesSelection();\n         resetEdgesSelection();\n         \n", "projectName": "gephi.gephi", "bugLineNum": 470, "bugNodeStartChar": 17542, "bugNodeLength": 378, "fixLineNum": 470, "fixNodeStartChar": 17542, "fixNodeLength": 391, "sourceBeforeFix": "1", "sourceAfterFix": "33"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "3dddcc4cdf4a74ddbd4607c6aaee5bdd8ac46c27", "fixCommitParentSHA1": "803d8c8677ed27a39ff17d201b447590d82a90a7", "bugFilePath": "modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java", "fixPatch": "diff --git a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\nindex afb2d9a..51b85c0 100644\n--- a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\n+++ b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\n@@ -89,7 +89,7 @@\n         octree.initArchitecture();\n     }\n \n-    public void updateSelection(GL2 gl, GLU glu) {\n+    public synchronized void updateSelection(GL2 gl, GLU glu) {\n         if (vizConfig.isSelectionEnable() && currentSelectionArea != null && currentSelectionArea.isEnabled()) {\n             float[] mp = Arrays.copyOf(graphIO.getMousePosition(), 2);\n             float[] cent = currentSelectionArea.getSelectionAreaCenter();\n@@ -102,7 +102,7 @@\n     }\n \n     @Override\n-    public boolean updateWorld() {\n+    public synchronized boolean updateWorld() {\n         boolean repositioned = octree.repositionNodes();\n         boolean updated = dataBridge.updateWorld();\n \n@@ -142,7 +142,7 @@\n     }\n \n     @Override\n-    public void display(GL2 gl, GLU glu) {\n+    public synchronized void display(GL2 gl, GLU glu) {\n         markTime++;\n \n         VizModel vizModel = VizController.getInstance().getVizModel();\n@@ -299,7 +299,7 @@\n     }\n \n     @Override\n-    public void mouseClick() {\n+    public synchronized void mouseClick() {\n         if (vizConfig.isSelectionEnable() && rectangleSelection && !customSelection) {\n             Rectangle rectangle = (Rectangle) currentSelectionArea;\n             //rectangle.setBlocking(false);\n@@ -367,7 +367,7 @@\n     }\n \n     @Override\n-    public void mouseMove() {\n+    public synchronized void mouseMove() {\n         //Selection\n         if (vizConfig.isSelectionEnable() && rectangleSelection) {\n             Rectangle rectangle = (Rectangle) currentSelectionArea;\n@@ -447,7 +447,7 @@\n     }\n \n     @Override\n-    public void updateLOD() {\n+    public synchronized void updateLOD() {\n         Iterator<NodeModel> iterator = octree.getNodeIterator();\n         for (; iterator.hasNext();) {\n             NodeModel obj = iterator.next();\n@@ -456,7 +456,7 @@\n     }\n \n     @Override\n-    public List<NodeModel> getSelectedNodes() {\n+    public synchronized List<NodeModel> getSelectedNodes() {\n         List<NodeModel> selected = new ArrayList<>();\n         for (Iterator<NodeModel> itr = octree.getNodeIterator(); itr.hasNext();) {\n             NodeModel nodeModel = itr.next();\n@@ -468,7 +468,7 @@\n     }\n \n     @Override\n-    public List<EdgeModel> getSelectedEdges() {\n+    public synchronized List<EdgeModel> getSelectedEdges() {\n         List<EdgeModel> selected = new ArrayList<>();\n         for (Iterator<EdgeModel> itr = octree.getEdgeIterator(); itr.hasNext();) {\n             EdgeModel edgeModel = itr.next();\n@@ -480,7 +480,7 @@\n     }\n \n     @Override\n-    public List<Node> getSelectedUnderlyingNodes() {\n+    public synchronized List<Node> getSelectedUnderlyingNodes() {\n         List<Node> selected = new ArrayList<>();\n         for (Iterator<NodeModel> itr = octree.getNodeIterator(); itr.hasNext();) {\n             NodeModel nodeModel = itr.next();\n@@ -492,7 +492,7 @@\n     }\n \n     @Override\n-    public List<Edge> getSelectedUnderlyingEdges() {\n+    public synchronized List<Edge> getSelectedUnderlyingEdges() {\n         List<Edge> selected = new ArrayList<>();\n         for (Iterator<EdgeModel> itr = octree.getEdgeIterator(); itr.hasNext();) {\n             EdgeModel edgeModel = itr.next();\n@@ -545,7 +545,7 @@\n     }\n \n     @Override\n-    public void resetSelection() {\n+    public synchronized void resetSelection() {\n         resetNodesSelection();\n         resetEdgesSelection();\n         \n", "projectName": "gephi.gephi", "bugLineNum": 482, "bugNodeStartChar": 17926, "bugNodeLength": 388, "fixLineNum": 482, "fixNodeStartChar": 17926, "fixNodeLength": 401, "sourceBeforeFix": "1", "sourceAfterFix": "33"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "3dddcc4cdf4a74ddbd4607c6aaee5bdd8ac46c27", "fixCommitParentSHA1": "803d8c8677ed27a39ff17d201b447590d82a90a7", "bugFilePath": "modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java", "fixPatch": "diff --git a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\nindex afb2d9a..51b85c0 100644\n--- a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\n+++ b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\n@@ -89,7 +89,7 @@\n         octree.initArchitecture();\n     }\n \n-    public void updateSelection(GL2 gl, GLU glu) {\n+    public synchronized void updateSelection(GL2 gl, GLU glu) {\n         if (vizConfig.isSelectionEnable() && currentSelectionArea != null && currentSelectionArea.isEnabled()) {\n             float[] mp = Arrays.copyOf(graphIO.getMousePosition(), 2);\n             float[] cent = currentSelectionArea.getSelectionAreaCenter();\n@@ -102,7 +102,7 @@\n     }\n \n     @Override\n-    public boolean updateWorld() {\n+    public synchronized boolean updateWorld() {\n         boolean repositioned = octree.repositionNodes();\n         boolean updated = dataBridge.updateWorld();\n \n@@ -142,7 +142,7 @@\n     }\n \n     @Override\n-    public void display(GL2 gl, GLU glu) {\n+    public synchronized void display(GL2 gl, GLU glu) {\n         markTime++;\n \n         VizModel vizModel = VizController.getInstance().getVizModel();\n@@ -299,7 +299,7 @@\n     }\n \n     @Override\n-    public void mouseClick() {\n+    public synchronized void mouseClick() {\n         if (vizConfig.isSelectionEnable() && rectangleSelection && !customSelection) {\n             Rectangle rectangle = (Rectangle) currentSelectionArea;\n             //rectangle.setBlocking(false);\n@@ -367,7 +367,7 @@\n     }\n \n     @Override\n-    public void mouseMove() {\n+    public synchronized void mouseMove() {\n         //Selection\n         if (vizConfig.isSelectionEnable() && rectangleSelection) {\n             Rectangle rectangle = (Rectangle) currentSelectionArea;\n@@ -447,7 +447,7 @@\n     }\n \n     @Override\n-    public void updateLOD() {\n+    public synchronized void updateLOD() {\n         Iterator<NodeModel> iterator = octree.getNodeIterator();\n         for (; iterator.hasNext();) {\n             NodeModel obj = iterator.next();\n@@ -456,7 +456,7 @@\n     }\n \n     @Override\n-    public List<NodeModel> getSelectedNodes() {\n+    public synchronized List<NodeModel> getSelectedNodes() {\n         List<NodeModel> selected = new ArrayList<>();\n         for (Iterator<NodeModel> itr = octree.getNodeIterator(); itr.hasNext();) {\n             NodeModel nodeModel = itr.next();\n@@ -468,7 +468,7 @@\n     }\n \n     @Override\n-    public List<EdgeModel> getSelectedEdges() {\n+    public synchronized List<EdgeModel> getSelectedEdges() {\n         List<EdgeModel> selected = new ArrayList<>();\n         for (Iterator<EdgeModel> itr = octree.getEdgeIterator(); itr.hasNext();) {\n             EdgeModel edgeModel = itr.next();\n@@ -480,7 +480,7 @@\n     }\n \n     @Override\n-    public List<Node> getSelectedUnderlyingNodes() {\n+    public synchronized List<Node> getSelectedUnderlyingNodes() {\n         List<Node> selected = new ArrayList<>();\n         for (Iterator<NodeModel> itr = octree.getNodeIterator(); itr.hasNext();) {\n             NodeModel nodeModel = itr.next();\n@@ -492,7 +492,7 @@\n     }\n \n     @Override\n-    public List<Edge> getSelectedUnderlyingEdges() {\n+    public synchronized List<Edge> getSelectedUnderlyingEdges() {\n         List<Edge> selected = new ArrayList<>();\n         for (Iterator<EdgeModel> itr = octree.getEdgeIterator(); itr.hasNext();) {\n             EdgeModel edgeModel = itr.next();\n@@ -545,7 +545,7 @@\n     }\n \n     @Override\n-    public void resetSelection() {\n+    public synchronized void resetSelection() {\n         resetNodesSelection();\n         resetEdgesSelection();\n         \n", "projectName": "gephi.gephi", "bugLineNum": 494, "bugNodeStartChar": 18320, "bugNodeLength": 388, "fixLineNum": 494, "fixNodeStartChar": 18320, "fixNodeLength": 401, "sourceBeforeFix": "1", "sourceAfterFix": "33"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "3dddcc4cdf4a74ddbd4607c6aaee5bdd8ac46c27", "fixCommitParentSHA1": "803d8c8677ed27a39ff17d201b447590d82a90a7", "bugFilePath": "modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java", "fixPatch": "diff --git a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\nindex afb2d9a..51b85c0 100644\n--- a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\n+++ b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\n@@ -89,7 +89,7 @@\n         octree.initArchitecture();\n     }\n \n-    public void updateSelection(GL2 gl, GLU glu) {\n+    public synchronized void updateSelection(GL2 gl, GLU glu) {\n         if (vizConfig.isSelectionEnable() && currentSelectionArea != null && currentSelectionArea.isEnabled()) {\n             float[] mp = Arrays.copyOf(graphIO.getMousePosition(), 2);\n             float[] cent = currentSelectionArea.getSelectionAreaCenter();\n@@ -102,7 +102,7 @@\n     }\n \n     @Override\n-    public boolean updateWorld() {\n+    public synchronized boolean updateWorld() {\n         boolean repositioned = octree.repositionNodes();\n         boolean updated = dataBridge.updateWorld();\n \n@@ -142,7 +142,7 @@\n     }\n \n     @Override\n-    public void display(GL2 gl, GLU glu) {\n+    public synchronized void display(GL2 gl, GLU glu) {\n         markTime++;\n \n         VizModel vizModel = VizController.getInstance().getVizModel();\n@@ -299,7 +299,7 @@\n     }\n \n     @Override\n-    public void mouseClick() {\n+    public synchronized void mouseClick() {\n         if (vizConfig.isSelectionEnable() && rectangleSelection && !customSelection) {\n             Rectangle rectangle = (Rectangle) currentSelectionArea;\n             //rectangle.setBlocking(false);\n@@ -367,7 +367,7 @@\n     }\n \n     @Override\n-    public void mouseMove() {\n+    public synchronized void mouseMove() {\n         //Selection\n         if (vizConfig.isSelectionEnable() && rectangleSelection) {\n             Rectangle rectangle = (Rectangle) currentSelectionArea;\n@@ -447,7 +447,7 @@\n     }\n \n     @Override\n-    public void updateLOD() {\n+    public synchronized void updateLOD() {\n         Iterator<NodeModel> iterator = octree.getNodeIterator();\n         for (; iterator.hasNext();) {\n             NodeModel obj = iterator.next();\n@@ -456,7 +456,7 @@\n     }\n \n     @Override\n-    public List<NodeModel> getSelectedNodes() {\n+    public synchronized List<NodeModel> getSelectedNodes() {\n         List<NodeModel> selected = new ArrayList<>();\n         for (Iterator<NodeModel> itr = octree.getNodeIterator(); itr.hasNext();) {\n             NodeModel nodeModel = itr.next();\n@@ -468,7 +468,7 @@\n     }\n \n     @Override\n-    public List<EdgeModel> getSelectedEdges() {\n+    public synchronized List<EdgeModel> getSelectedEdges() {\n         List<EdgeModel> selected = new ArrayList<>();\n         for (Iterator<EdgeModel> itr = octree.getEdgeIterator(); itr.hasNext();) {\n             EdgeModel edgeModel = itr.next();\n@@ -480,7 +480,7 @@\n     }\n \n     @Override\n-    public List<Node> getSelectedUnderlyingNodes() {\n+    public synchronized List<Node> getSelectedUnderlyingNodes() {\n         List<Node> selected = new ArrayList<>();\n         for (Iterator<NodeModel> itr = octree.getNodeIterator(); itr.hasNext();) {\n             NodeModel nodeModel = itr.next();\n@@ -492,7 +492,7 @@\n     }\n \n     @Override\n-    public List<Edge> getSelectedUnderlyingEdges() {\n+    public synchronized List<Edge> getSelectedUnderlyingEdges() {\n         List<Edge> selected = new ArrayList<>();\n         for (Iterator<EdgeModel> itr = octree.getEdgeIterator(); itr.hasNext();) {\n             EdgeModel edgeModel = itr.next();\n@@ -545,7 +545,7 @@\n     }\n \n     @Override\n-    public void resetSelection() {\n+    public synchronized void resetSelection() {\n         resetNodesSelection();\n         resetEdgesSelection();\n         \n", "projectName": "gephi.gephi", "bugLineNum": 547, "bugNodeStartChar": 19812, "bugNodeLength": 305, "fixLineNum": 547, "fixNodeStartChar": 19812, "fixNodeLength": 318, "sourceBeforeFix": "1", "sourceAfterFix": "33"}, {"bugType": "SWAP_BOOLEAN_LITERAL", "fixCommitSHA1": "e5560c172ef6ba15be5dd24d588138bc3913ae04", "fixCommitParentSHA1": "a4a99577e4f975f9103a34b21025bc3ed353b132", "bugFilePath": "modules/VisualizationImpl/src/main/java/org/gephi/visualization/apiimpl/VizConfig.java", "fixPatch": "diff --git a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/apiimpl/VizConfig.java b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/apiimpl/VizConfig.java\nindex 2bbbcf5..a4ed634 100644\n--- a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/apiimpl/VizConfig.java\n+++ b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/apiimpl/VizConfig.java\n@@ -145,7 +145,7 @@\n     public static final int DEFAULT_OCTREE_DEPTH = 5;\n     public static final int DEFAULT_OCTREE_WIDTH = 50000;\n     public static final boolean DEFAULT_CLEAN_DELETED_MODELS = true;\n-    public static final boolean DEFAULT_LABEL_MIPMAP = true;\n+    public static final boolean DEFAULT_LABEL_MIPMAP = false;//Disabled since it works bad with Intel GPUs. See https://github.com/gephi/gephi/issues/1494 (Some label characters fade away when zooming out)\n     public static final boolean DEFAULT_LABEL_ANTIALIASED = true;\n     public static final boolean DEFAULT_LABEL_FRACTIONAL_METRICS = true;\n     public static final boolean DEFAULT_VIZBAR = true;\n", "projectName": "gephi.gephi", "bugLineNum": 148, "bugNodeStartChar": 9280, "bugNodeLength": 27, "fixLineNum": 148, "fixNodeStartChar": 9280, "fixNodeLength": 28, "sourceBeforeFix": "DEFAULT_LABEL_MIPMAP=true", "sourceAfterFix": "DEFAULT_LABEL_MIPMAP=false"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "e2fa9e88d60e6ca993224578812ca041c5cf7c02", "fixCommitParentSHA1": "8b1db28a6f4de78e294ba676947a9a52adf39c19", "bugFilePath": "modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/tables/AbstractElementsDataTable.java", "fixPatch": "diff --git a/modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/tables/AbstractElementsDataTable.java b/modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/tables/AbstractElementsDataTable.java\nindex 2ce6476..e52bce6 100644\n--- a/modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/tables/AbstractElementsDataTable.java\n+++ b/modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/tables/AbstractElementsDataTable.java\n@@ -371,7 +371,7 @@\n             int index = columnModel.getColumnIndexAtX(p.x);\n             int realIndex = columnModel.getColumn(index).getModelIndex();\n \n-            if (realIndex < columns.size()) {\n+            if (realIndex < columns.size() && columns.get(realIndex).getColumn() != null) {\n                 String id = columns.get(realIndex).getColumn().getId();\n \n                 return NbBundle.getMessage(AbstractElementsDataTable.class, \"AbstractElementsDataTable.column.tooltip\", id);\n", "projectName": "gephi.gephi", "bugLineNum": 374, "bugNodeStartChar": 15925, "bugNodeLength": 26, "fixLineNum": 374, "fixNodeStartChar": 15925, "fixNodeLength": 72, "sourceBeforeFix": "realIndex < columns.size()", "sourceAfterFix": "realIndex < columns.size() && columns.get(realIndex).getColumn() != null"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "99ed41cc78fe7dbc36ea17d9a6a1a56b51bcb12d", "fixCommitParentSHA1": "c7d98d185193c8911c6e70bbe610546816505d4a", "bugFilePath": "modules/StatisticsPlugin/src/test/java/org/gephi/statistics/plugin/DegreeNGTest.java", "fixPatch": "diff --git a/modules/StatisticsPlugin/src/test/java/org/gephi/statistics/plugin/DegreeNGTest.java b/modules/StatisticsPlugin/src/test/java/org/gephi/statistics/plugin/DegreeNGTest.java\nindex 6c9f1b5..bb5fd2c 100644\n--- a/modules/StatisticsPlugin/src/test/java/org/gephi/statistics/plugin/DegreeNGTest.java\n+++ b/modules/StatisticsPlugin/src/test/java/org/gephi/statistics/plugin/DegreeNGTest.java\n@@ -176,7 +176,7 @@\n         assertEquals(inDegree1, 0);\r\n         assertEquals(inDegree2, 1);\r\n         assertEquals(outDegree1, 1);\r\n-        assertEquals(avDegree, 1.0);\r\n+        assertEquals(avDegree, 0.5);\r\n     }\r\n \r\n     @Test\r\n@@ -194,7 +194,7 @@\n         assertEquals(inDegree3, 1);\r\n         assertEquals(degree1, 2);\r\n         assertEquals(outDegree5, 1);\r\n-        assertEquals(avDegree, 2.0);\r\n+        assertEquals(avDegree, 1.0);\r\n     }\r\n \r\n     @Test\r\n", "projectName": "gephi.gephi", "bugLineNum": 179, "bugNodeStartChar": 6667, "bugNodeLength": 27, "fixLineNum": 179, "fixNodeStartChar": 6489, "fixNodeLength": 27, "sourceBeforeFix": "assertEquals(avDegree,1.0)", "sourceAfterFix": "assertEquals(avDegree,0.5)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "99ed41cc78fe7dbc36ea17d9a6a1a56b51bcb12d", "fixCommitParentSHA1": "c7d98d185193c8911c6e70bbe610546816505d4a", "bugFilePath": "modules/StatisticsPlugin/src/test/java/org/gephi/statistics/plugin/DegreeNGTest.java", "fixPatch": "diff --git a/modules/StatisticsPlugin/src/test/java/org/gephi/statistics/plugin/DegreeNGTest.java b/modules/StatisticsPlugin/src/test/java/org/gephi/statistics/plugin/DegreeNGTest.java\nindex 6c9f1b5..bb5fd2c 100644\n--- a/modules/StatisticsPlugin/src/test/java/org/gephi/statistics/plugin/DegreeNGTest.java\n+++ b/modules/StatisticsPlugin/src/test/java/org/gephi/statistics/plugin/DegreeNGTest.java\n@@ -176,7 +176,7 @@\n         assertEquals(inDegree1, 0);\r\n         assertEquals(inDegree2, 1);\r\n         assertEquals(outDegree1, 1);\r\n-        assertEquals(avDegree, 1.0);\r\n+        assertEquals(avDegree, 0.5);\r\n     }\r\n \r\n     @Test\r\n@@ -194,7 +194,7 @@\n         assertEquals(inDegree3, 1);\r\n         assertEquals(degree1, 2);\r\n         assertEquals(outDegree5, 1);\r\n-        assertEquals(avDegree, 2.0);\r\n+        assertEquals(avDegree, 1.0);\r\n     }\r\n \r\n     @Test\r\n", "projectName": "gephi.gephi", "bugLineNum": 197, "bugNodeStartChar": 7421, "bugNodeLength": 27, "fixLineNum": 197, "fixNodeStartChar": 7225, "fixNodeLength": 27, "sourceBeforeFix": "assertEquals(avDegree,2.0)", "sourceAfterFix": "assertEquals(avDegree,1.0)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "99ed41cc78fe7dbc36ea17d9a6a1a56b51bcb12d", "fixCommitParentSHA1": "c7d98d185193c8911c6e70bbe610546816505d4a", "bugFilePath": "modules/StatisticsPlugin/src/test/java/org/gephi/statistics/plugin/WeightedDegreeNGTest.java", "fixPatch": "diff --git a/modules/StatisticsPlugin/src/test/java/org/gephi/statistics/plugin/WeightedDegreeNGTest.java b/modules/StatisticsPlugin/src/test/java/org/gephi/statistics/plugin/WeightedDegreeNGTest.java\nindex 77afe32..1a6c81e 100644\n--- a/modules/StatisticsPlugin/src/test/java/org/gephi/statistics/plugin/WeightedDegreeNGTest.java\n+++ b/modules/StatisticsPlugin/src/test/java/org/gephi/statistics/plugin/WeightedDegreeNGTest.java\n@@ -181,7 +181,7 @@\n         assertEquals(inDegree1, 0.0);\r\n         assertEquals(inDegree2, 1.0);\r\n         assertEquals(outDegree1, 1.0);\r\n-        assertEquals(avDegree, 1.0);\r\n+        assertEquals(avDegree, 0.5);\r\n     }\r\n \r\n     @Test\r\n@@ -200,7 +200,7 @@\n         assertEquals(inDegree3, 1.0);\r\n         assertEquals(degree1, 2.0);\r\n         assertEquals(outDegree5, 1.0);\r\n-        assertEquals(avDegree, 2.0);\r\n+        assertEquals(avDegree, 1.0);\r\n     }\r\n \r\n     @Test\r\n", "projectName": "gephi.gephi", "bugLineNum": 184, "bugNodeStartChar": 7083, "bugNodeLength": 27, "fixLineNum": 184, "fixNodeStartChar": 6900, "fixNodeLength": 27, "sourceBeforeFix": "assertEquals(avDegree,1.0)", "sourceAfterFix": "assertEquals(avDegree,0.5)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "99ed41cc78fe7dbc36ea17d9a6a1a56b51bcb12d", "fixCommitParentSHA1": "c7d98d185193c8911c6e70bbe610546816505d4a", "bugFilePath": "modules/StatisticsPlugin/src/test/java/org/gephi/statistics/plugin/WeightedDegreeNGTest.java", "fixPatch": "diff --git a/modules/StatisticsPlugin/src/test/java/org/gephi/statistics/plugin/WeightedDegreeNGTest.java b/modules/StatisticsPlugin/src/test/java/org/gephi/statistics/plugin/WeightedDegreeNGTest.java\nindex 77afe32..1a6c81e 100644\n--- a/modules/StatisticsPlugin/src/test/java/org/gephi/statistics/plugin/WeightedDegreeNGTest.java\n+++ b/modules/StatisticsPlugin/src/test/java/org/gephi/statistics/plugin/WeightedDegreeNGTest.java\n@@ -181,7 +181,7 @@\n         assertEquals(inDegree1, 0.0);\r\n         assertEquals(inDegree2, 1.0);\r\n         assertEquals(outDegree1, 1.0);\r\n-        assertEquals(avDegree, 1.0);\r\n+        assertEquals(avDegree, 0.5);\r\n     }\r\n \r\n     @Test\r\n@@ -200,7 +200,7 @@\n         assertEquals(inDegree3, 1.0);\r\n         assertEquals(degree1, 2.0);\r\n         assertEquals(outDegree5, 1.0);\r\n-        assertEquals(avDegree, 2.0);\r\n+        assertEquals(avDegree, 1.0);\r\n     }\r\n \r\n     @Test\r\n", "projectName": "gephi.gephi", "bugLineNum": 203, "bugNodeStartChar": 7931, "bugNodeLength": 27, "fixLineNum": 203, "fixNodeStartChar": 7729, "fixNodeLength": 27, "sourceBeforeFix": "assertEquals(avDegree,2.0)", "sourceAfterFix": "assertEquals(avDegree,1.0)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "211d12c368e84b0c43783b7bd8e0c4d5774da2ae", "fixCommitParentSHA1": "98b43156ed391a873b036f9e698f03fde3fb1a52", "bugFilePath": "modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/ConfigurationPanel.java", "fixPatch": "diff --git a/modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/ConfigurationPanel.java b/modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/ConfigurationPanel.java\nindex f28c614..f295bd3 100644\n--- a/modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/ConfigurationPanel.java\n+++ b/modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/ConfigurationPanel.java\n@@ -130,7 +130,7 @@\n     }\n \n     private boolean canChangeTimeRepresentation(GraphModel graphModel) {\n-        if (graphModel.getGraph().getEdgeCount() > 0) {\n+        if (graphModel.getGraph().getNodeCount() > 0) {\n             return false;//Graph has to be empty\n         }\n \n", "projectName": "gephi.gephi", "bugLineNum": 133, "bugNodeStartChar": 5720, "bugNodeLength": 36, "fixLineNum": 133, "fixNodeStartChar": 5720, "fixNodeLength": 36, "sourceBeforeFix": "graphModel.getGraph().getEdgeCount()", "sourceAfterFix": "graphModel.getGraph().getNodeCount()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "211d12c368e84b0c43783b7bd8e0c4d5774da2ae", "fixCommitParentSHA1": "98b43156ed391a873b036f9e698f03fde3fb1a52", "bugFilePath": "modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/ConfigurationPanel.java", "fixPatch": "diff --git a/modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/ConfigurationPanel.java b/modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/ConfigurationPanel.java\nindex f28c614..f295bd3 100644\n--- a/modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/ConfigurationPanel.java\n+++ b/modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/ConfigurationPanel.java\n@@ -130,7 +130,7 @@\n     }\n \n     private boolean canChangeTimeRepresentation(GraphModel graphModel) {\n-        if (graphModel.getGraph().getEdgeCount() > 0) {\n+        if (graphModel.getGraph().getNodeCount() > 0) {\n             return false;//Graph has to be empty\n         }\n \n", "projectName": "gephi.gephi", "bugLineNum": 133, "bugNodeStartChar": 5720, "bugNodeLength": 36, "fixLineNum": 133, "fixNodeStartChar": 5720, "fixNodeLength": 36, "sourceBeforeFix": "graphModel.getGraph().getEdgeCount()", "sourceAfterFix": "graphModel.getGraph().getNodeCount()"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "ff0c12880d6a3d3ee0b34787e7a2028e174cd788", "fixCommitParentSHA1": "e7fddb1fdc55c5b8b9dbfee38857016587c85701", "bugFilePath": "modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditEdges.java", "fixPatch": "diff --git a/modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditEdges.java b/modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditEdges.java\nindex 78682d5..b0603d6 100644\n--- a/modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditEdges.java\n+++ b/modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditEdges.java\n@@ -152,7 +152,7 @@\n                 PropertyEditor propEditor = PropertyEditorManager.findEditor(type);\n                 if (ac.canChangeColumnData(column)) {\n                     //Editable column, provide \"set\" method:\n-                    if (propEditor != null) {//The type can be edited by default:\n+                    if (propEditor != null && !type.isArray()) {//The type can be edited by default:\n                         p = new PropertySupport.Reflection(wrap, type, \"getValue\" + type.getSimpleName(), \"setValue\" + type.getSimpleName());\n                     } else {//Use the AttributeType as String:\n                         p = new PropertySupport.Reflection(wrap, String.class, \"getValueAsString\", \"setValueAsString\");\n", "projectName": "gephi.gephi", "bugLineNum": 155, "bugNodeStartChar": 6128, "bugNodeLength": 18, "fixLineNum": 155, "fixNodeStartChar": 6128, "fixNodeLength": 37, "sourceBeforeFix": "propEditor != null", "sourceAfterFix": "propEditor != null && !type.isArray()"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "ff0c12880d6a3d3ee0b34787e7a2028e174cd788", "fixCommitParentSHA1": "e7fddb1fdc55c5b8b9dbfee38857016587c85701", "bugFilePath": "modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditNodes.java", "fixPatch": "diff --git a/modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditNodes.java b/modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditNodes.java\nindex eb8e22d..be38f86 100644\n--- a/modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditNodes.java\n+++ b/modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditNodes.java\n@@ -152,7 +152,7 @@\n                 PropertyEditor propEditor = PropertyEditorManager.findEditor(type);\n                 if (ac.canChangeColumnData(column)) {\n                     //Editable column, provide \"set\" method:\n-                    if (propEditor != null) {//The type can be edited by default:\n+                    if (propEditor != null && !type.isArray()) {//The type can be edited by default:\n                         p = new PropertySupport.Reflection(wrap, type, \"getValue\" + type.getSimpleName(), \"setValue\" + type.getSimpleName());\n                     } else {//Use the AttributeType as String:\n                         p = new PropertySupport.Reflection(wrap, String.class, \"getValueAsString\", \"setValueAsString\");\n", "projectName": "gephi.gephi", "bugLineNum": 155, "bugNodeStartChar": 6182, "bugNodeLength": 18, "fixLineNum": 155, "fixNodeStartChar": 6182, "fixNodeLength": 37, "sourceBeforeFix": "propEditor != null", "sourceAfterFix": "propEditor != null && !type.isArray()"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "b17609137ae508249571c3480f9d00c8b7dcc199", "fixCommitParentSHA1": "52b3ab4066a791c8da66f704739c52053958a49a", "bugFilePath": "modules/DesktopAppearance/src/main/java/org/gephi/desktop/appearance/AppearanceUIController.java", "fixPatch": "diff --git a/modules/DesktopAppearance/src/main/java/org/gephi/desktop/appearance/AppearanceUIController.java b/modules/DesktopAppearance/src/main/java/org/gephi/desktop/appearance/AppearanceUIController.java\nindex 1af0f26..ead44e3 100644\n--- a/modules/DesktopAppearance/src/main/java/org/gephi/desktop/appearance/AppearanceUIController.java\n+++ b/modules/DesktopAppearance/src/main/java/org/gephi/desktop/appearance/AppearanceUIController.java\n@@ -383,7 +383,7 @@\n         public GraphChangeObserver(Graph graph, Column column) {\n             timer = new Timer(\"GraphChangeObserver\", true);\n             graphObserver = graph.getModel().createGraphObserver(graph, false);\n-            columnObserver = column != null ? column.createColumnObserver() : null;\n+            columnObserver = column != null ? column.createColumnObserver(false) : null;\n         }\n \n         @Override\n", "projectName": "gephi.gephi", "bugLineNum": 386, "bugNodeStartChar": 15617, "bugNodeLength": 29, "fixLineNum": 386, "fixNodeStartChar": 15617, "fixNodeLength": 34, "sourceBeforeFix": "column.createColumnObserver()", "sourceAfterFix": "column.createColumnObserver(false)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "25bce516d60ca8448ed6bfb269dd89987395c0c8", "fixCommitParentSHA1": "fc4fb0e34be8ec091fba7bc00d5af2482c924e04", "bugFilePath": "modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGEXF.java", "fixPatch": "diff --git a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGEXF.java b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGEXF.java\nindex b70f82b..40bb2df 100644\n--- a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGEXF.java\n+++ b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGEXF.java\n@@ -368,7 +368,7 @@\n \n         //Parent\n         if (!pid.isEmpty()) {\n-            report.logIssue(new Issue(NbBundle.getMessage(ImporterGEXF.class, \"importerGEXF_error_pid\"), Issue.Level.SEVERE));\n+            report.logIssue(new Issue(NbBundle.getMessage(ImporterGEXF.class, \"importerGEXF_error_pid\", id), Issue.Level.SEVERE));\n         }\n \n         if (!container.nodeExists(id)) {\n@@ -760,7 +760,7 @@\n             } else if (edgeType.equalsIgnoreCase(\"directed\")) {\n                 edge.setDirection(EdgeDirection.DIRECTED);\n             } else {\n-                report.logIssue(new Issue(NbBundle.getMessage(ImporterGEXF.class, \"importerGEXF_error_edgetype\", edgeType, edge), Issue.Level.SEVERE));\n+                report.logIssue(new Issue(NbBundle.getMessage(ImporterGEXF.class, \"importerGEXF_error_edgetype\", edgeType, edge.getId()), Issue.Level.SEVERE));\n             }\n         }\n \n", "projectName": "gephi.gephi", "bugLineNum": 371, "bugNodeStartChar": 16753, "bugNodeLength": 65, "fixLineNum": 371, "fixNodeStartChar": 16753, "fixNodeLength": 69, "sourceBeforeFix": "NbBundle.getMessage(ImporterGEXF.class,\"importerGEXF_error_pid\")", "sourceAfterFix": "NbBundle.getMessage(ImporterGEXF.class,\"importerGEXF_error_pid\",id)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "f5d49ee1ec8af12ff786e421e2fa3b3ea74c42e7", "fixCommitParentSHA1": "2c5d5cce2a7e8b3213e43ef78732b235dfc838eb", "bugFilePath": "modules/GraphAPI/src/main/java/org/gephi/graph/LegacyDataPersistenceProvider.java", "fixPatch": "diff --git a/modules/GraphAPI/src/main/java/org/gephi/graph/LegacyDataPersistenceProvider.java b/modules/GraphAPI/src/main/java/org/gephi/graph/LegacyDataPersistenceProvider.java\nindex 1c6dc1c..4b183dc 100644\n--- a/modules/GraphAPI/src/main/java/org/gephi/graph/LegacyDataPersistenceProvider.java\n+++ b/modules/GraphAPI/src/main/java/org/gephi/graph/LegacyDataPersistenceProvider.java\n@@ -155,11 +155,11 @@\n                     float b = Float.parseFloat(reader.getAttributeValue(null, \"b\"));\n                     float alpha = Float.parseFloat(reader.getAttributeValue(null, \"a\"));\n                     \n-                    //I have an old .gephi file with <color r=\"-1.0\" g=\"0.0\" b=\"0.0\" a=\"1.0\"> in every <edgedata>\n-                    //So it seems that old versions of Gephi stored r = -1 sometimes. I guess it means no edge color set up? So use black instead.\n+                    //Old gephi versions stored r = -1 to indicate that the edge had no color (use the node color)\n+                    //Since Gephi 0.9, we do that with alpha = 0\n                     if(r < 0 || g < 0 || b < 0){\n                         r = g = b = 0;\n-                        alpha = 1;\n+                        alpha = 0;\n                     }\n                     \n                     edge.setR(r);\n", "projectName": "gephi.gephi", "bugLineNum": 162, "bugNodeStartChar": 7794, "bugNodeLength": 9, "fixLineNum": 162, "fixNodeStartChar": 7794, "fixNodeLength": 9, "sourceBeforeFix": "alpha=1", "sourceAfterFix": "alpha=0"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "4a6e698536006e6ea9b0680756d9390b96ba278b", "fixCommitParentSHA1": "58e0c3f646c0a5fdf861a9a2bb0a835abb121288", "bugFilePath": "modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java", "fixPatch": "diff --git a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java\nindex c6a9dd2..4507381 100644\n--- a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java\n+++ b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java\n@@ -229,7 +229,7 @@\n \n         if (streamTokenizer.ttype == ']' || streamTokenizer.ttype == StreamTokenizer.TT_EOF) {\n             return;\n-        } else if (streamTokenizer.ttype == StreamTokenizer.TT_WORD) {\n+        } else if (streamTokenizer.ttype == StreamTokenizer.TT_WORD || streamTokenizer.ttype == '\"') {\n \n             if (streamTokenizer.sval.equalsIgnoreCase(\"label\")) {\n                 streamTokenizer.nextToken();\n@@ -367,7 +367,7 @@\n \n         if (streamTokenizer.ttype == ']' || streamTokenizer.ttype == StreamTokenizer.TT_EOF) {\n             return;\n-        } else if (streamTokenizer.ttype == StreamTokenizer.TT_WORD) {\n+        } else if (streamTokenizer.ttype == StreamTokenizer.TT_WORD || streamTokenizer.ttype == '\"') {\n             if (streamTokenizer.sval.equalsIgnoreCase(\"label\")) {\n                 streamTokenizer.nextToken();\n                 if (streamTokenizer.ttype == '=') {\n", "projectName": "gephi.gephi", "bugLineNum": 232, "bugNodeStartChar": 9140, "bugNodeLength": 48, "fixLineNum": 232, "fixNodeStartChar": 9140, "fixNodeLength": 80, "sourceBeforeFix": "streamTokenizer.ttype == StreamTokenizer.TT_WORD", "sourceAfterFix": "streamTokenizer.ttype == StreamTokenizer.TT_WORD || streamTokenizer.ttype == '\"'"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "4a6e698536006e6ea9b0680756d9390b96ba278b", "fixCommitParentSHA1": "58e0c3f646c0a5fdf861a9a2bb0a835abb121288", "bugFilePath": "modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java", "fixPatch": "diff --git a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java\nindex c6a9dd2..4507381 100644\n--- a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java\n+++ b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java\n@@ -229,7 +229,7 @@\n \n         if (streamTokenizer.ttype == ']' || streamTokenizer.ttype == StreamTokenizer.TT_EOF) {\n             return;\n-        } else if (streamTokenizer.ttype == StreamTokenizer.TT_WORD) {\n+        } else if (streamTokenizer.ttype == StreamTokenizer.TT_WORD || streamTokenizer.ttype == '\"') {\n \n             if (streamTokenizer.sval.equalsIgnoreCase(\"label\")) {\n                 streamTokenizer.nextToken();\n@@ -367,7 +367,7 @@\n \n         if (streamTokenizer.ttype == ']' || streamTokenizer.ttype == StreamTokenizer.TT_EOF) {\n             return;\n-        } else if (streamTokenizer.ttype == StreamTokenizer.TT_WORD) {\n+        } else if (streamTokenizer.ttype == StreamTokenizer.TT_WORD || streamTokenizer.ttype == '\"') {\n             if (streamTokenizer.sval.equalsIgnoreCase(\"label\")) {\n                 streamTokenizer.nextToken();\n                 if (streamTokenizer.ttype == '=') {\n", "projectName": "gephi.gephi", "bugLineNum": 232, "bugNodeStartChar": 9140, "bugNodeLength": 48, "fixLineNum": 232, "fixNodeStartChar": 9140, "fixNodeLength": 80, "sourceBeforeFix": "streamTokenizer.ttype == StreamTokenizer.TT_WORD", "sourceAfterFix": "streamTokenizer.ttype == StreamTokenizer.TT_WORD || streamTokenizer.ttype == '\"'"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "4a6e698536006e6ea9b0680756d9390b96ba278b", "fixCommitParentSHA1": "58e0c3f646c0a5fdf861a9a2bb0a835abb121288", "bugFilePath": "modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java", "fixPatch": "diff --git a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java\nindex c6a9dd2..4507381 100644\n--- a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java\n+++ b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java\n@@ -229,7 +229,7 @@\n \n         if (streamTokenizer.ttype == ']' || streamTokenizer.ttype == StreamTokenizer.TT_EOF) {\n             return;\n-        } else if (streamTokenizer.ttype == StreamTokenizer.TT_WORD) {\n+        } else if (streamTokenizer.ttype == StreamTokenizer.TT_WORD || streamTokenizer.ttype == '\"') {\n \n             if (streamTokenizer.sval.equalsIgnoreCase(\"label\")) {\n                 streamTokenizer.nextToken();\n@@ -367,7 +367,7 @@\n \n         if (streamTokenizer.ttype == ']' || streamTokenizer.ttype == StreamTokenizer.TT_EOF) {\n             return;\n-        } else if (streamTokenizer.ttype == StreamTokenizer.TT_WORD) {\n+        } else if (streamTokenizer.ttype == StreamTokenizer.TT_WORD || streamTokenizer.ttype == '\"') {\n             if (streamTokenizer.sval.equalsIgnoreCase(\"label\")) {\n                 streamTokenizer.nextToken();\n                 if (streamTokenizer.ttype == '=') {\n", "projectName": "gephi.gephi", "bugLineNum": 370, "bugNodeStartChar": 16202, "bugNodeLength": 48, "fixLineNum": 370, "fixNodeStartChar": 16202, "fixNodeLength": 80, "sourceBeforeFix": "streamTokenizer.ttype == StreamTokenizer.TT_WORD", "sourceAfterFix": "streamTokenizer.ttype == StreamTokenizer.TT_WORD || streamTokenizer.ttype == '\"'"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "4a6e698536006e6ea9b0680756d9390b96ba278b", "fixCommitParentSHA1": "58e0c3f646c0a5fdf861a9a2bb0a835abb121288", "bugFilePath": "modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java", "fixPatch": "diff --git a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java\nindex c6a9dd2..4507381 100644\n--- a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java\n+++ b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java\n@@ -229,7 +229,7 @@\n \n         if (streamTokenizer.ttype == ']' || streamTokenizer.ttype == StreamTokenizer.TT_EOF) {\n             return;\n-        } else if (streamTokenizer.ttype == StreamTokenizer.TT_WORD) {\n+        } else if (streamTokenizer.ttype == StreamTokenizer.TT_WORD || streamTokenizer.ttype == '\"') {\n \n             if (streamTokenizer.sval.equalsIgnoreCase(\"label\")) {\n                 streamTokenizer.nextToken();\n@@ -367,7 +367,7 @@\n \n         if (streamTokenizer.ttype == ']' || streamTokenizer.ttype == StreamTokenizer.TT_EOF) {\n             return;\n-        } else if (streamTokenizer.ttype == StreamTokenizer.TT_WORD) {\n+        } else if (streamTokenizer.ttype == StreamTokenizer.TT_WORD || streamTokenizer.ttype == '\"') {\n             if (streamTokenizer.sval.equalsIgnoreCase(\"label\")) {\n                 streamTokenizer.nextToken();\n                 if (streamTokenizer.ttype == '=') {\n", "projectName": "gephi.gephi", "bugLineNum": 370, "bugNodeStartChar": 16202, "bugNodeLength": 48, "fixLineNum": 370, "fixNodeStartChar": 16202, "fixNodeLength": 80, "sourceBeforeFix": "streamTokenizer.ttype == StreamTokenizer.TT_WORD", "sourceAfterFix": "streamTokenizer.ttype == StreamTokenizer.TT_WORD || streamTokenizer.ttype == '\"'"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "91aa3b2ca0c43b66747d7926e34fae38ef030efa", "fixCommitParentSHA1": "ad88b82e09f499758365212a694f4e1166214999", "bugFilePath": "modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGML.java", "fixPatch": "diff --git a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGML.java b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGML.java\nindex 9902d80..fe45926 100644\n--- a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGML.java\n+++ b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGML.java\n@@ -291,7 +291,7 @@\n             } else if (\"directed\".equalsIgnoreCase(key)) {\n                 if (value instanceof Double) {\n                     EdgeDirection type = ((Double) value) == 1 ? EdgeDirection.DIRECTED : EdgeDirection.UNDIRECTED;\n-                    edge.setType(type);\n+                    edge.setDirection(type);\n                 } else {\n                     report.logIssue(new Issue(NbBundle.getMessage(ImporterGML.class, \"importerGML_error_directedparse\", edge.toString()), Issue.Level.WARNING));\n                 }\n", "projectName": "gephi.gephi", "bugLineNum": 294, "bugNodeStartChar": 11459, "bugNodeLength": 18, "fixLineNum": 294, "fixNodeStartChar": 11459, "fixNodeLength": 23, "sourceBeforeFix": "edge.setType(type)", "sourceAfterFix": "edge.setDirection(type)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "91aa3b2ca0c43b66747d7926e34fae38ef030efa", "fixCommitParentSHA1": "ad88b82e09f499758365212a694f4e1166214999", "bugFilePath": "modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGML.java", "fixPatch": "diff --git a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGML.java b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGML.java\nindex 9902d80..fe45926 100644\n--- a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGML.java\n+++ b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGML.java\n@@ -291,7 +291,7 @@\n             } else if (\"directed\".equalsIgnoreCase(key)) {\n                 if (value instanceof Double) {\n                     EdgeDirection type = ((Double) value) == 1 ? EdgeDirection.DIRECTED : EdgeDirection.UNDIRECTED;\n-                    edge.setType(type);\n+                    edge.setDirection(type);\n                 } else {\n                     report.logIssue(new Issue(NbBundle.getMessage(ImporterGML.class, \"importerGML_error_directedparse\", edge.toString()), Issue.Level.WARNING));\n                 }\n", "projectName": "gephi.gephi", "bugLineNum": 294, "bugNodeStartChar": 11459, "bugNodeLength": 18, "fixLineNum": 294, "fixNodeStartChar": 11459, "fixNodeLength": 23, "sourceBeforeFix": "edge.setType(type)", "sourceAfterFix": "edge.setDirection(type)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "91aa3b2ca0c43b66747d7926e34fae38ef030efa", "fixCommitParentSHA1": "ad88b82e09f499758365212a694f4e1166214999", "bugFilePath": "modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java", "fixPatch": "diff --git a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java\nindex 17bdde1..234830e 100644\n--- a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java\n+++ b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java\n@@ -406,15 +406,15 @@\n         //Type\n         if (!directed.isEmpty()) {\n             if (directed.equalsIgnoreCase(\"true\")) {\n-                edge.setType(EdgeDirection.DIRECTED);\n+                edge.setDirection(EdgeDirection.DIRECTED);\n             } else if (directed.equalsIgnoreCase(\"false\")) {\n-                edge.setType(EdgeDirection.UNDIRECTED);\n+                edge.setDirection(EdgeDirection.UNDIRECTED);\n             } else {\n                 report.logIssue(new Issue(NbBundle.getMessage(ImporterGraphML.class, \"importerGraphML_error_edgetype\", directed, edge), Issue.Level.SEVERE));\n-                edge.setType(edgeDefault);\n+                edge.setDirection(edgeDefault);\n             }\n         } else {\n-            edge.setType(edgeDefault);\n+            edge.setDirection(edgeDefault);\n         }\n \n         boolean end = false;\n", "projectName": "gephi.gephi", "bugLineNum": 409, "bugNodeStartChar": 17497, "bugNodeLength": 36, "fixLineNum": 409, "fixNodeStartChar": 17497, "fixNodeLength": 41, "sourceBeforeFix": "edge.setType(EdgeDirection.DIRECTED)", "sourceAfterFix": "edge.setDirection(EdgeDirection.DIRECTED)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "91aa3b2ca0c43b66747d7926e34fae38ef030efa", "fixCommitParentSHA1": "ad88b82e09f499758365212a694f4e1166214999", "bugFilePath": "modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java", "fixPatch": "diff --git a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java\nindex 17bdde1..234830e 100644\n--- a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java\n+++ b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java\n@@ -406,15 +406,15 @@\n         //Type\n         if (!directed.isEmpty()) {\n             if (directed.equalsIgnoreCase(\"true\")) {\n-                edge.setType(EdgeDirection.DIRECTED);\n+                edge.setDirection(EdgeDirection.DIRECTED);\n             } else if (directed.equalsIgnoreCase(\"false\")) {\n-                edge.setType(EdgeDirection.UNDIRECTED);\n+                edge.setDirection(EdgeDirection.UNDIRECTED);\n             } else {\n                 report.logIssue(new Issue(NbBundle.getMessage(ImporterGraphML.class, \"importerGraphML_error_edgetype\", directed, edge), Issue.Level.SEVERE));\n-                edge.setType(edgeDefault);\n+                edge.setDirection(edgeDefault);\n             }\n         } else {\n-            edge.setType(edgeDefault);\n+            edge.setDirection(edgeDefault);\n         }\n \n         boolean end = false;\n", "projectName": "gephi.gephi", "bugLineNum": 409, "bugNodeStartChar": 17497, "bugNodeLength": 36, "fixLineNum": 409, "fixNodeStartChar": 17497, "fixNodeLength": 41, "sourceBeforeFix": "edge.setType(EdgeDirection.DIRECTED)", "sourceAfterFix": "edge.setDirection(EdgeDirection.DIRECTED)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "91aa3b2ca0c43b66747d7926e34fae38ef030efa", "fixCommitParentSHA1": "ad88b82e09f499758365212a694f4e1166214999", "bugFilePath": "modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java", "fixPatch": "diff --git a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java\nindex 17bdde1..234830e 100644\n--- a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java\n+++ b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java\n@@ -406,15 +406,15 @@\n         //Type\n         if (!directed.isEmpty()) {\n             if (directed.equalsIgnoreCase(\"true\")) {\n-                edge.setType(EdgeDirection.DIRECTED);\n+                edge.setDirection(EdgeDirection.DIRECTED);\n             } else if (directed.equalsIgnoreCase(\"false\")) {\n-                edge.setType(EdgeDirection.UNDIRECTED);\n+                edge.setDirection(EdgeDirection.UNDIRECTED);\n             } else {\n                 report.logIssue(new Issue(NbBundle.getMessage(ImporterGraphML.class, \"importerGraphML_error_edgetype\", directed, edge), Issue.Level.SEVERE));\n-                edge.setType(edgeDefault);\n+                edge.setDirection(edgeDefault);\n             }\n         } else {\n-            edge.setType(edgeDefault);\n+            edge.setDirection(edgeDefault);\n         }\n \n         boolean end = false;\n", "projectName": "gephi.gephi", "bugLineNum": 411, "bugNodeStartChar": 17612, "bugNodeLength": 38, "fixLineNum": 411, "fixNodeStartChar": 17612, "fixNodeLength": 43, "sourceBeforeFix": "edge.setType(EdgeDirection.UNDIRECTED)", "sourceAfterFix": "edge.setDirection(EdgeDirection.UNDIRECTED)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "91aa3b2ca0c43b66747d7926e34fae38ef030efa", "fixCommitParentSHA1": "ad88b82e09f499758365212a694f4e1166214999", "bugFilePath": "modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java", "fixPatch": "diff --git a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java\nindex 17bdde1..234830e 100644\n--- a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java\n+++ b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java\n@@ -406,15 +406,15 @@\n         //Type\n         if (!directed.isEmpty()) {\n             if (directed.equalsIgnoreCase(\"true\")) {\n-                edge.setType(EdgeDirection.DIRECTED);\n+                edge.setDirection(EdgeDirection.DIRECTED);\n             } else if (directed.equalsIgnoreCase(\"false\")) {\n-                edge.setType(EdgeDirection.UNDIRECTED);\n+                edge.setDirection(EdgeDirection.UNDIRECTED);\n             } else {\n                 report.logIssue(new Issue(NbBundle.getMessage(ImporterGraphML.class, \"importerGraphML_error_edgetype\", directed, edge), Issue.Level.SEVERE));\n-                edge.setType(edgeDefault);\n+                edge.setDirection(edgeDefault);\n             }\n         } else {\n-            edge.setType(edgeDefault);\n+            edge.setDirection(edgeDefault);\n         }\n \n         boolean end = false;\n", "projectName": "gephi.gephi", "bugLineNum": 411, "bugNodeStartChar": 17612, "bugNodeLength": 38, "fixLineNum": 411, "fixNodeStartChar": 17612, "fixNodeLength": 43, "sourceBeforeFix": "edge.setType(EdgeDirection.UNDIRECTED)", "sourceAfterFix": "edge.setDirection(EdgeDirection.UNDIRECTED)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "91aa3b2ca0c43b66747d7926e34fae38ef030efa", "fixCommitParentSHA1": "ad88b82e09f499758365212a694f4e1166214999", "bugFilePath": "modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java", "fixPatch": "diff --git a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java\nindex 17bdde1..234830e 100644\n--- a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java\n+++ b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java\n@@ -406,15 +406,15 @@\n         //Type\n         if (!directed.isEmpty()) {\n             if (directed.equalsIgnoreCase(\"true\")) {\n-                edge.setType(EdgeDirection.DIRECTED);\n+                edge.setDirection(EdgeDirection.DIRECTED);\n             } else if (directed.equalsIgnoreCase(\"false\")) {\n-                edge.setType(EdgeDirection.UNDIRECTED);\n+                edge.setDirection(EdgeDirection.UNDIRECTED);\n             } else {\n                 report.logIssue(new Issue(NbBundle.getMessage(ImporterGraphML.class, \"importerGraphML_error_edgetype\", directed, edge), Issue.Level.SEVERE));\n-                edge.setType(edgeDefault);\n+                edge.setDirection(edgeDefault);\n             }\n         } else {\n-            edge.setType(edgeDefault);\n+            edge.setDirection(edgeDefault);\n         }\n \n         boolean end = false;\n", "projectName": "gephi.gephi", "bugLineNum": 414, "bugNodeStartChar": 17847, "bugNodeLength": 25, "fixLineNum": 414, "fixNodeStartChar": 17847, "fixNodeLength": 30, "sourceBeforeFix": "edge.setType(edgeDefault)", "sourceAfterFix": "edge.setDirection(edgeDefault)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "91aa3b2ca0c43b66747d7926e34fae38ef030efa", "fixCommitParentSHA1": "ad88b82e09f499758365212a694f4e1166214999", "bugFilePath": "modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java", "fixPatch": "diff --git a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java\nindex 17bdde1..234830e 100644\n--- a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java\n+++ b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java\n@@ -406,15 +406,15 @@\n         //Type\n         if (!directed.isEmpty()) {\n             if (directed.equalsIgnoreCase(\"true\")) {\n-                edge.setType(EdgeDirection.DIRECTED);\n+                edge.setDirection(EdgeDirection.DIRECTED);\n             } else if (directed.equalsIgnoreCase(\"false\")) {\n-                edge.setType(EdgeDirection.UNDIRECTED);\n+                edge.setDirection(EdgeDirection.UNDIRECTED);\n             } else {\n                 report.logIssue(new Issue(NbBundle.getMessage(ImporterGraphML.class, \"importerGraphML_error_edgetype\", directed, edge), Issue.Level.SEVERE));\n-                edge.setType(edgeDefault);\n+                edge.setDirection(edgeDefault);\n             }\n         } else {\n-            edge.setType(edgeDefault);\n+            edge.setDirection(edgeDefault);\n         }\n \n         boolean end = false;\n", "projectName": "gephi.gephi", "bugLineNum": 414, "bugNodeStartChar": 17847, "bugNodeLength": 25, "fixLineNum": 414, "fixNodeStartChar": 17847, "fixNodeLength": 30, "sourceBeforeFix": "edge.setType(edgeDefault)", "sourceAfterFix": "edge.setDirection(edgeDefault)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "91aa3b2ca0c43b66747d7926e34fae38ef030efa", "fixCommitParentSHA1": "ad88b82e09f499758365212a694f4e1166214999", "bugFilePath": "modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java", "fixPatch": "diff --git a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java\nindex 17bdde1..234830e 100644\n--- a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java\n+++ b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java\n@@ -406,15 +406,15 @@\n         //Type\n         if (!directed.isEmpty()) {\n             if (directed.equalsIgnoreCase(\"true\")) {\n-                edge.setType(EdgeDirection.DIRECTED);\n+                edge.setDirection(EdgeDirection.DIRECTED);\n             } else if (directed.equalsIgnoreCase(\"false\")) {\n-                edge.setType(EdgeDirection.UNDIRECTED);\n+                edge.setDirection(EdgeDirection.UNDIRECTED);\n             } else {\n                 report.logIssue(new Issue(NbBundle.getMessage(ImporterGraphML.class, \"importerGraphML_error_edgetype\", directed, edge), Issue.Level.SEVERE));\n-                edge.setType(edgeDefault);\n+                edge.setDirection(edgeDefault);\n             }\n         } else {\n-            edge.setType(edgeDefault);\n+            edge.setDirection(edgeDefault);\n         }\n \n         boolean end = false;\n", "projectName": "gephi.gephi", "bugLineNum": 417, "bugNodeStartChar": 17917, "bugNodeLength": 25, "fixLineNum": 417, "fixNodeStartChar": 17917, "fixNodeLength": 30, "sourceBeforeFix": "edge.setType(edgeDefault)", "sourceAfterFix": "edge.setDirection(edgeDefault)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "91aa3b2ca0c43b66747d7926e34fae38ef030efa", "fixCommitParentSHA1": "ad88b82e09f499758365212a694f4e1166214999", "bugFilePath": "modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java", "fixPatch": "diff --git a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java\nindex 17bdde1..234830e 100644\n--- a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java\n+++ b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java\n@@ -406,15 +406,15 @@\n         //Type\n         if (!directed.isEmpty()) {\n             if (directed.equalsIgnoreCase(\"true\")) {\n-                edge.setType(EdgeDirection.DIRECTED);\n+                edge.setDirection(EdgeDirection.DIRECTED);\n             } else if (directed.equalsIgnoreCase(\"false\")) {\n-                edge.setType(EdgeDirection.UNDIRECTED);\n+                edge.setDirection(EdgeDirection.UNDIRECTED);\n             } else {\n                 report.logIssue(new Issue(NbBundle.getMessage(ImporterGraphML.class, \"importerGraphML_error_edgetype\", directed, edge), Issue.Level.SEVERE));\n-                edge.setType(edgeDefault);\n+                edge.setDirection(edgeDefault);\n             }\n         } else {\n-            edge.setType(edgeDefault);\n+            edge.setDirection(edgeDefault);\n         }\n \n         boolean end = false;\n", "projectName": "gephi.gephi", "bugLineNum": 417, "bugNodeStartChar": 17917, "bugNodeLength": 25, "fixLineNum": 417, "fixNodeStartChar": 17917, "fixNodeLength": 30, "sourceBeforeFix": "edge.setType(edgeDefault)", "sourceAfterFix": "edge.setDirection(edgeDefault)"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "8639593ad0e6bcbdbe8e6fe3263c9b2550169942", "fixCommitParentSHA1": "1d96fb5e6a7c606f7b676111d061d90940fe6f8a", "bugFilePath": "modules/VisualizationImpl/src/main/java/org/gephi/visualization/swing/StandardGraphIO.java", "fixPatch": "diff --git a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/swing/StandardGraphIO.java b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/swing/StandardGraphIO.java\nindex fd49c8a..67b74a9 100644\n--- a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/swing/StandardGraphIO.java\n+++ b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/swing/StandardGraphIO.java\n@@ -470,7 +470,7 @@\n         float newCameraLocation = Math.max(newCameraLocationX, newCameraLocationY);\n \n         graphDrawable.cameraLocation[0] = limits.getMinXoctree() + graphWidth / 2;\n-        graphDrawable.cameraLocation[1] = limits.getMinYoctree() + graphWidth / 2;\n+        graphDrawable.cameraLocation[1] = limits.getMinYoctree() + graphHeight / 2;\n         graphDrawable.cameraLocation[2] = newCameraLocation;\n \n         graphDrawable.cameraTarget[0] = graphDrawable.cameraLocation[0];\n", "projectName": "gephi.gephi", "bugLineNum": 473, "bugNodeStartChar": 18948, "bugNodeLength": 14, "fixLineNum": 473, "fixNodeStartChar": 18948, "fixNodeLength": 15, "sourceBeforeFix": "graphWidth / 2", "sourceAfterFix": "graphHeight / 2"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "8639593ad0e6bcbdbe8e6fe3263c9b2550169942", "fixCommitParentSHA1": "1d96fb5e6a7c606f7b676111d061d90940fe6f8a", "bugFilePath": "modules/VisualizationImpl/src/main/java/org/gephi/visualization/swing/StandardGraphIO.java", "fixPatch": "diff --git a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/swing/StandardGraphIO.java b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/swing/StandardGraphIO.java\nindex fd49c8a..67b74a9 100644\n--- a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/swing/StandardGraphIO.java\n+++ b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/swing/StandardGraphIO.java\n@@ -470,7 +470,7 @@\n         float newCameraLocation = Math.max(newCameraLocationX, newCameraLocationY);\n \n         graphDrawable.cameraLocation[0] = limits.getMinXoctree() + graphWidth / 2;\n-        graphDrawable.cameraLocation[1] = limits.getMinYoctree() + graphWidth / 2;\n+        graphDrawable.cameraLocation[1] = limits.getMinYoctree() + graphHeight / 2;\n         graphDrawable.cameraLocation[2] = newCameraLocation;\n \n         graphDrawable.cameraTarget[0] = graphDrawable.cameraLocation[0];\n", "projectName": "gephi.gephi", "bugLineNum": 473, "bugNodeStartChar": 18948, "bugNodeLength": 14, "fixLineNum": 473, "fixNodeStartChar": 18948, "fixNodeLength": 15, "sourceBeforeFix": "graphWidth / 2", "sourceAfterFix": "graphHeight / 2"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "1841a0dde698ed6d828aaf92d616fe16fe432868", "fixCommitParentSHA1": "f79e56880d9fde0fbf585306ddc7f2409946d021", "bugFilePath": "modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java", "fixPatch": "diff --git a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\nindex eea3873..4dee54a 100644\n--- a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\n+++ b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java\n@@ -197,7 +197,7 @@\n         markTime++;\n \n         //Arrows\n-        if (vizConfig.isShowArrows() && dataBridge.isDirected()) {\n+        if (edgeClass.isEnabled() && vizConfig.isShowArrows() && dataBridge.isDirected()) {\n             gl.glBegin(GL2.GL_TRIANGLES);\n             for (Iterator<EdgeModel> itr = octree.getEdgeIterator(); itr.hasNext();) {\n                 EdgeModel obj = itr.next();\n", "projectName": "gephi.gephi", "bugLineNum": 200, "bugNodeStartChar": 7304, "bugNodeLength": 51, "fixLineNum": 200, "fixNodeStartChar": 7304, "fixNodeLength": 76, "sourceBeforeFix": "vizConfig.isShowArrows() && dataBridge.isDirected()", "sourceAfterFix": "edgeClass.isEnabled() && vizConfig.isShowArrows() && dataBridge.isDirected()"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "68e7822ea532a179d9030bf01313d5445c97dcdf", "fixCommitParentSHA1": "69ccc431014d338894c42603dfd41055124d0acc", "bugFilePath": "modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/ActionsToolbar.java", "fixPatch": "diff --git a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/ActionsToolbar.java b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/ActionsToolbar.java\nindex d19d90a..98ec98c 100644\n--- a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/ActionsToolbar.java\n+++ b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/ActionsToolbar.java\n@@ -71,7 +71,7 @@\n \n     //Settings\n     private Color color = new Color(0.6f, 0.6f, 0.6f);\n-    private float size = 1f;\n+    private float size = 10.0f;\n \n     public ActionsToolbar() {\n         initDesign();\n", "projectName": "gephi.gephi", "bugLineNum": 74, "bugNodeStartChar": 2799, "bugNodeLength": 9, "fixLineNum": 74, "fixNodeStartChar": 2799, "fixNodeLength": 12, "sourceBeforeFix": "size=1f", "sourceAfterFix": "size=10.0f"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "09decb6804bf3f52765aed9e9c50cb5634b75ee6", "fixCommitParentSHA1": "dd10de286cb0b35cf8a7a25798e8e654f697a276", "bugFilePath": "modules/FiltersImpl/src/main/java/org/gephi/filters/FilterControllerImpl.java", "fixPatch": "diff --git a/modules/FiltersImpl/src/main/java/org/gephi/filters/FilterControllerImpl.java b/modules/FiltersImpl/src/main/java/org/gephi/filters/FilterControllerImpl.java\nindex 1a1038b..00e1caa 100644\n--- a/modules/FiltersImpl/src/main/java/org/gephi/filters/FilterControllerImpl.java\n+++ b/modules/FiltersImpl/src/main/java/org/gephi/filters/FilterControllerImpl.java\n@@ -273,7 +273,7 @@\n         HierarchicalGraph result;\n         if (model.getCurrentQuery() == query) {\n             GraphView view = model.getCurrentResult();\n-            if (view != null) {\n+            if (view == null) {\r\n                 return;\n             }\n             result = model.getGraphModel().getHierarchicalGraph(view);\n", "projectName": "gephi.gephi", "bugLineNum": 276, "bugNodeStartChar": 10800, "bugNodeLength": 12, "fixLineNum": 276, "fixNodeStartChar": 10800, "fixNodeLength": 12, "sourceBeforeFix": "view != null", "sourceAfterFix": "view == null"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "a37ff1aed07d334d9a8808558c1498d274fbb6a6", "fixCommitParentSHA1": "418f0a7fee09e0bfecdc0d08cfc73caf7d5ebe59", "bugFilePath": "modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/ActionsToolbar.java", "fixPatch": "diff --git a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/ActionsToolbar.java b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/ActionsToolbar.java\nindex a411461..1b84d09 100644\n--- a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/ActionsToolbar.java\n+++ b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/ActionsToolbar.java\n@@ -70,7 +70,7 @@\n \n     //Settings\n     private Color color = new Color(0.6f, 0.6f, 0.6f);\n-    private float size = 1f;\n+    private float size = 10.0f;\n \n     public ActionsToolbar() {\n         initDesign();\n", "projectName": "gephi.gephi", "bugLineNum": 73, "bugNodeStartChar": 2728, "bugNodeLength": 9, "fixLineNum": 73, "fixNodeStartChar": 2728, "fixNodeLength": 12, "sourceBeforeFix": "size=1f", "sourceAfterFix": "size=10.0f"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "8e6e2ce55e4bb14d15f1aa53488d283a4bb314fb", "fixCommitParentSHA1": "c376f88ca8f5408962c52def2436f006c1639e54", "bugFilePath": "modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/database/ImporterEdgeList.java", "fixPatch": "diff --git a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/database/ImporterEdgeList.java b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/database/ImporterEdgeList.java\nindex 86d46de..e0f38a4 100644\n--- a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/database/ImporterEdgeList.java\n+++ b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/database/ImporterEdgeList.java\n@@ -384,14 +384,14 @@\n                 break;\n             case SOURCE:\n                 String source = rs.getString(column);\n-                if (source != null) {\n+                if (source != null && !source.isEmpty()) {\r\n                     NodeDraft sourceNode = container.getNode(source);\n                     edgeDraft.setSource(sourceNode);\n                 }\n                 break;\n             case TARGET:\n                 String target = rs.getString(column);\n-                if (target != null) {\n+                if (target != null && !target.isEmpty()) {\r\n                     NodeDraft targetNode = container.getNode(target);\n                     edgeDraft.setTarget(targetNode);\n                 }\n", "projectName": "gephi.gephi", "bugLineNum": 387, "bugNodeStartChar": 14760, "bugNodeLength": 14, "fixLineNum": 387, "fixNodeStartChar": 14760, "fixNodeLength": 35, "sourceBeforeFix": "source != null", "sourceAfterFix": "source != null && !source.isEmpty()"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "8e6e2ce55e4bb14d15f1aa53488d283a4bb314fb", "fixCommitParentSHA1": "c376f88ca8f5408962c52def2436f006c1639e54", "bugFilePath": "modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/database/ImporterEdgeList.java", "fixPatch": "diff --git a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/database/ImporterEdgeList.java b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/database/ImporterEdgeList.java\nindex 86d46de..e0f38a4 100644\n--- a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/database/ImporterEdgeList.java\n+++ b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/database/ImporterEdgeList.java\n@@ -384,14 +384,14 @@\n                 break;\n             case SOURCE:\n                 String source = rs.getString(column);\n-                if (source != null) {\n+                if (source != null && !source.isEmpty()) {\r\n                     NodeDraft sourceNode = container.getNode(source);\n                     edgeDraft.setSource(sourceNode);\n                 }\n                 break;\n             case TARGET:\n                 String target = rs.getString(column);\n-                if (target != null) {\n+                if (target != null && !target.isEmpty()) {\r\n                     NodeDraft targetNode = container.getNode(target);\n                     edgeDraft.setTarget(targetNode);\n                 }\n", "projectName": "gephi.gephi", "bugLineNum": 394, "bugNodeStartChar": 15041, "bugNodeLength": 14, "fixLineNum": 394, "fixNodeStartChar": 15041, "fixNodeLength": 35, "sourceBeforeFix": "target != null", "sourceAfterFix": "target != null && !target.isEmpty()"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "c13ff9e39a62c0cf6ef41cb7593fd4bb4ea5ac4b", "fixCommitParentSHA1": "ae2c66f7379615364af444b97d6911794f04da0d", "bugFilePath": "modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/Installer.java", "fixPatch": "diff --git a/modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/Installer.java b/modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/Installer.java\nindex a7bdf3b..e46af77 100644\n--- a/modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/Installer.java\n+++ b/modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/Installer.java\n@@ -129,7 +129,7 @@\n         int option = JOptionPane.showConfirmDialog(WindowManager.getDefault().getMainWindow(), NbBundle.getMessage(Installer.class, \"CloseConfirmation.message\"), NbBundle.getMessage(Installer.class, \"CloseConfirmation.message\"), JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);\n         if (option == JOptionPane.YES_OPTION) {\n             Lookup.getDefault().lookup(ProjectControllerUI.class).saveProject();\n-        } else if (option == JOptionPane.CANCEL_OPTION) {\n+        } else if (option == JOptionPane.CANCEL_OPTION || option == JOptionPane.CLOSED_OPTION) {\n             return false;//Exit canceled\n         }\n         Lookup.getDefault().lookup(ProjectController.class).closeCurrentProject();\n", "projectName": "gephi.gephi", "bugLineNum": 132, "bugNodeStartChar": 5080, "bugNodeLength": 35, "fixLineNum": 132, "fixNodeStartChar": 5080, "fixNodeLength": 74, "sourceBeforeFix": "option == JOptionPane.CANCEL_OPTION", "sourceAfterFix": "option == JOptionPane.CANCEL_OPTION || option == JOptionPane.CLOSED_OPTION"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "c13ff9e39a62c0cf6ef41cb7593fd4bb4ea5ac4b", "fixCommitParentSHA1": "ae2c66f7379615364af444b97d6911794f04da0d", "bugFilePath": "modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/Installer.java", "fixPatch": "diff --git a/modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/Installer.java b/modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/Installer.java\nindex a7bdf3b..e46af77 100644\n--- a/modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/Installer.java\n+++ b/modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/Installer.java\n@@ -129,7 +129,7 @@\n         int option = JOptionPane.showConfirmDialog(WindowManager.getDefault().getMainWindow(), NbBundle.getMessage(Installer.class, \"CloseConfirmation.message\"), NbBundle.getMessage(Installer.class, \"CloseConfirmation.message\"), JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);\n         if (option == JOptionPane.YES_OPTION) {\n             Lookup.getDefault().lookup(ProjectControllerUI.class).saveProject();\n-        } else if (option == JOptionPane.CANCEL_OPTION) {\n+        } else if (option == JOptionPane.CANCEL_OPTION || option == JOptionPane.CLOSED_OPTION) {\n             return false;//Exit canceled\n         }\n         Lookup.getDefault().lookup(ProjectController.class).closeCurrentProject();\n", "projectName": "gephi.gephi", "bugLineNum": 132, "bugNodeStartChar": 5080, "bugNodeLength": 35, "fixLineNum": 132, "fixNodeStartChar": 5080, "fixNodeLength": 74, "sourceBeforeFix": "option == JOptionPane.CANCEL_OPTION", "sourceAfterFix": "option == JOptionPane.CANCEL_OPTION || option == JOptionPane.CLOSED_OPTION"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "8920576b404a74cdfc254027f57c0de871f13ee3", "fixCommitParentSHA1": "1b0cda8968d3d701700ff4c1d70d7440bfc6cf9f", "bugFilePath": "FiltersPlugin/src/org/gephi/filters/plugin/graph/OutDegreeRangeBuilder.java", "fixPatch": "diff --git a/FiltersPlugin/src/org/gephi/filters/plugin/graph/OutDegreeRangeBuilder.java b/FiltersPlugin/src/org/gephi/filters/plugin/graph/OutDegreeRangeBuilder.java\nindex f928fc4..0b9d660 100644\n--- a/FiltersPlugin/src/org/gephi/filters/plugin/graph/OutDegreeRangeBuilder.java\n+++ b/FiltersPlugin/src/org/gephi/filters/plugin/graph/OutDegreeRangeBuilder.java\n@@ -122,7 +122,7 @@\n             HierarchicalDirectedGraph hgraph = (HierarchicalDirectedGraph) graph;\n             List<Integer> values = new ArrayList<Integer>(((HierarchicalGraph) graph).getNodeCount());\n             for (Node n : hgraph.getNodes()) {\n-                int degree = hgraph.getMutualDegree(n);\n+                int degree = hgraph.getTotalOutDegree(n);\n                 values.add(degree);\n             }\n             return values.toArray(new Number[0]);\n", "projectName": "gephi.gephi", "bugLineNum": 125, "bugNodeStartChar": 4350, "bugNodeLength": 25, "fixLineNum": 125, "fixNodeStartChar": 4350, "fixNodeLength": 27, "sourceBeforeFix": "hgraph.getMutualDegree(n)", "sourceAfterFix": "hgraph.getTotalOutDegree(n)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "8920576b404a74cdfc254027f57c0de871f13ee3", "fixCommitParentSHA1": "1b0cda8968d3d701700ff4c1d70d7440bfc6cf9f", "bugFilePath": "FiltersPlugin/src/org/gephi/filters/plugin/graph/OutDegreeRangeBuilder.java", "fixPatch": "diff --git a/FiltersPlugin/src/org/gephi/filters/plugin/graph/OutDegreeRangeBuilder.java b/FiltersPlugin/src/org/gephi/filters/plugin/graph/OutDegreeRangeBuilder.java\nindex f928fc4..0b9d660 100644\n--- a/FiltersPlugin/src/org/gephi/filters/plugin/graph/OutDegreeRangeBuilder.java\n+++ b/FiltersPlugin/src/org/gephi/filters/plugin/graph/OutDegreeRangeBuilder.java\n@@ -122,7 +122,7 @@\n             HierarchicalDirectedGraph hgraph = (HierarchicalDirectedGraph) graph;\n             List<Integer> values = new ArrayList<Integer>(((HierarchicalGraph) graph).getNodeCount());\n             for (Node n : hgraph.getNodes()) {\n-                int degree = hgraph.getMutualDegree(n);\n+                int degree = hgraph.getTotalOutDegree(n);\n                 values.add(degree);\n             }\n             return values.toArray(new Number[0]);\n", "projectName": "gephi.gephi", "bugLineNum": 125, "bugNodeStartChar": 4350, "bugNodeLength": 25, "fixLineNum": 125, "fixNodeStartChar": 4350, "fixNodeLength": 27, "sourceBeforeFix": "hgraph.getMutualDegree(n)", "sourceAfterFix": "hgraph.getTotalOutDegree(n)"}, {"bugType": "SWAP_BOOLEAN_LITERAL", "fixCommitSHA1": "f6872713218d72d251ba6c1cff02208e629072e0", "fixCommitParentSHA1": "d8c7ae54e0555a95ad7154ce6937d738a1b46158", "bugFilePath": "DesktopDataLaboratory/src/org/gephi/desktop/datalab/DataTableTopComponent.java", "fixPatch": "diff --git a/DesktopDataLaboratory/src/org/gephi/desktop/datalab/DataTableTopComponent.java b/DesktopDataLaboratory/src/org/gephi/desktop/datalab/DataTableTopComponent.java\nindex 86c623d..d83a146 100644\n--- a/DesktopDataLaboratory/src/org/gephi/desktop/datalab/DataTableTopComponent.java\n+++ b/DesktopDataLaboratory/src/org/gephi/desktop/datalab/DataTableTopComponent.java\n@@ -121,7 +121,7 @@\n     private static final String DATA_LABORATORY_EDGES_NODES_LABELS = \"DataLaboratory_showEdgesNodesLabels\";\n     private static final Color invalidFilterColor = new Color(254, 150, 150);\n     private final boolean dynamicFiltering;\n-    private boolean visibleOnly = false;\n+    private boolean visibleOnly = true;\n     private boolean useSparklines = false;\n     private boolean timeIntervalGraphics = false;\n     private boolean showEdgesNodesLabels = false;\n@@ -150,7 +150,7 @@\n \n         //Get saved preferences if existing:\n         dynamicFiltering = NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_DYNAMIC_FILTERING, true);\n-        visibleOnly = NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_ONLY_VISIBLE, false);\n+        visibleOnly = NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_ONLY_VISIBLE, true);\n         useSparklines = NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_SPARKLINES, false);\n         timeIntervalGraphics = NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_TIME_INTERVAL_GRAPHICS, false);\n         showEdgesNodesLabels = NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_EDGES_NODES_LABELS, false);\n", "projectName": "gephi.gephi", "bugLineNum": 124, "bugNodeStartChar": 5736, "bugNodeLength": 19, "fixLineNum": 124, "fixNodeStartChar": 5736, "fixNodeLength": 18, "sourceBeforeFix": "visibleOnly=false", "sourceAfterFix": "visibleOnly=true"}, {"bugType": "SWAP_BOOLEAN_LITERAL", "fixCommitSHA1": "f6872713218d72d251ba6c1cff02208e629072e0", "fixCommitParentSHA1": "d8c7ae54e0555a95ad7154ce6937d738a1b46158", "bugFilePath": "DesktopDataLaboratory/src/org/gephi/desktop/datalab/DataTableTopComponent.java", "fixPatch": "diff --git a/DesktopDataLaboratory/src/org/gephi/desktop/datalab/DataTableTopComponent.java b/DesktopDataLaboratory/src/org/gephi/desktop/datalab/DataTableTopComponent.java\nindex 86c623d..d83a146 100644\n--- a/DesktopDataLaboratory/src/org/gephi/desktop/datalab/DataTableTopComponent.java\n+++ b/DesktopDataLaboratory/src/org/gephi/desktop/datalab/DataTableTopComponent.java\n@@ -121,7 +121,7 @@\n     private static final String DATA_LABORATORY_EDGES_NODES_LABELS = \"DataLaboratory_showEdgesNodesLabels\";\n     private static final Color invalidFilterColor = new Color(254, 150, 150);\n     private final boolean dynamicFiltering;\n-    private boolean visibleOnly = false;\n+    private boolean visibleOnly = true;\n     private boolean useSparklines = false;\n     private boolean timeIntervalGraphics = false;\n     private boolean showEdgesNodesLabels = false;\n@@ -150,7 +150,7 @@\n \n         //Get saved preferences if existing:\n         dynamicFiltering = NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_DYNAMIC_FILTERING, true);\n-        visibleOnly = NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_ONLY_VISIBLE, false);\n+        visibleOnly = NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_ONLY_VISIBLE, true);\n         useSparklines = NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_SPARKLINES, false);\n         timeIntervalGraphics = NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_TIME_INTERVAL_GRAPHICS, false);\n         showEdgesNodesLabels = NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_EDGES_NODES_LABELS, false);\n", "projectName": "gephi.gephi", "bugLineNum": 153, "bugNodeStartChar": 7273, "bugNodeLength": 100, "fixLineNum": 153, "fixNodeStartChar": 7273, "fixNodeLength": 99, "sourceBeforeFix": "NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_ONLY_VISIBLE,false)", "sourceAfterFix": "NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_ONLY_VISIBLE,true)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "0e05cfd1dbe7e423498620c807ac3ff8681688c9", "fixCommitParentSHA1": "74c8dcb3875ec066aa9a8f2d736000457bcec9dc", "bugFilePath": "PreviewAPI/src/org/gephi/preview/PreviewModelImpl.java", "fixPatch": "diff --git a/PreviewAPI/src/org/gephi/preview/PreviewModelImpl.java b/PreviewAPI/src/org/gephi/preview/PreviewModelImpl.java\nindex bff33e9..1438466 100644\n--- a/PreviewAPI/src/org/gephi/preview/PreviewModelImpl.java\n+++ b/PreviewAPI/src/org/gephi/preview/PreviewModelImpl.java\n@@ -286,16 +286,16 @@\n      */\n     private void completeManagedRenderersListIfNecessary() {\n         if (managedRenderers != null) {\n-            Set<Renderer> existing = new HashSet<Renderer>();\n+            Set<String> existing = new HashSet<String>();\n             for (ManagedRenderer mr : managedRenderers) {\n-                existing.add(mr.getRenderer());\n+                existing.add(mr.getRenderer().getClass().getName());\n             }\n \n             List<ManagedRenderer> completeManagedRenderersList = new ArrayList<ManagedRenderer>();\n             completeManagedRenderersList.addAll(Arrays.asList(managedRenderers));\n \n             for (Renderer renderer : previewController.getRegisteredRenderers()) {\n-                if (!existing.contains(renderer)) {\n+                if (!existing.contains(renderer.getClass().getName())) {\n                     completeManagedRenderersList.add(new ManagedRenderer(renderer, false));\n                 }\n             }\n@@ -336,7 +336,7 @@\n         //Validate no null ManagedRenderers\n         for (int i = 0; i < managedRenderers.length; i++) {\n             if (managedRenderers[i] == null) {\n-                throw new IllegalArgumentException(\"managedRenderers should not contains null values\");\n+                throw new IllegalArgumentException(\"managedRenderers should not contain null values\");\n             }\n         }\n \n", "projectName": "gephi.gephi", "bugLineNum": 289, "bugNodeStartChar": 10484, "bugNodeLength": 13, "fixLineNum": 289, "fixNodeStartChar": 10484, "fixNodeLength": 11, "sourceBeforeFix": "Set<Renderer>", "sourceAfterFix": "Set<String>"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "ab45cc12ff4e9b8e62aa1b3776367df3b1020b93", "fixCommitParentSHA1": "475ec779711c85367f943b13b4a539acc650cea0", "bugFilePath": "RankingPlugin/src/org/gephi/ranking/plugin/AttributeRankingBuilder.java", "fixPatch": "diff --git a/RankingPlugin/src/org/gephi/ranking/plugin/AttributeRankingBuilder.java b/RankingPlugin/src/org/gephi/ranking/plugin/AttributeRankingBuilder.java\nindex 2eecd4c..0e9b2e5 100644\n--- a/RankingPlugin/src/org/gephi/ranking/plugin/AttributeRankingBuilder.java\n+++ b/RankingPlugin/src/org/gephi/ranking/plugin/AttributeRankingBuilder.java\n@@ -301,7 +301,7 @@\n         @Override\n         public Number getMaximumValue() {\n             if (maximum == null) {\n-                AbstractRanking.refreshMinMax(this, graph);\n+                DynamicAttributeRanking.refreshMinMax(this, graph);\n             }\n             return maximum;\n         }\n@@ -309,7 +309,7 @@\n         @Override\n         public Number getMinimumValue() {\n             if (minimum == null) {\n-                AbstractRanking.refreshMinMax(this, graph);\n+                DynamicAttributeRanking.refreshMinMax(this, graph);\n             }\n             return minimum;\n         }\n", "projectName": "gephi.gephi", "bugLineNum": 304, "bugNodeStartChar": 12589, "bugNodeLength": 42, "fixLineNum": 304, "fixNodeStartChar": 12589, "fixNodeLength": 50, "sourceBeforeFix": "AbstractRanking.refreshMinMax(this,graph)", "sourceAfterFix": "DynamicAttributeRanking.refreshMinMax(this,graph)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "ab45cc12ff4e9b8e62aa1b3776367df3b1020b93", "fixCommitParentSHA1": "475ec779711c85367f943b13b4a539acc650cea0", "bugFilePath": "RankingPlugin/src/org/gephi/ranking/plugin/AttributeRankingBuilder.java", "fixPatch": "diff --git a/RankingPlugin/src/org/gephi/ranking/plugin/AttributeRankingBuilder.java b/RankingPlugin/src/org/gephi/ranking/plugin/AttributeRankingBuilder.java\nindex 2eecd4c..0e9b2e5 100644\n--- a/RankingPlugin/src/org/gephi/ranking/plugin/AttributeRankingBuilder.java\n+++ b/RankingPlugin/src/org/gephi/ranking/plugin/AttributeRankingBuilder.java\n@@ -301,7 +301,7 @@\n         @Override\n         public Number getMaximumValue() {\n             if (maximum == null) {\n-                AbstractRanking.refreshMinMax(this, graph);\n+                DynamicAttributeRanking.refreshMinMax(this, graph);\n             }\n             return maximum;\n         }\n@@ -309,7 +309,7 @@\n         @Override\n         public Number getMinimumValue() {\n             if (minimum == null) {\n-                AbstractRanking.refreshMinMax(this, graph);\n+                DynamicAttributeRanking.refreshMinMax(this, graph);\n             }\n             return minimum;\n         }\n", "projectName": "gephi.gephi", "bugLineNum": 304, "bugNodeStartChar": 12589, "bugNodeLength": 42, "fixLineNum": 304, "fixNodeStartChar": 12589, "fixNodeLength": 50, "sourceBeforeFix": "AbstractRanking.refreshMinMax(this,graph)", "sourceAfterFix": "DynamicAttributeRanking.refreshMinMax(this,graph)"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "ab45cc12ff4e9b8e62aa1b3776367df3b1020b93", "fixCommitParentSHA1": "475ec779711c85367f943b13b4a539acc650cea0", "bugFilePath": "RankingPlugin/src/org/gephi/ranking/plugin/AttributeRankingBuilder.java", "fixPatch": "diff --git a/RankingPlugin/src/org/gephi/ranking/plugin/AttributeRankingBuilder.java b/RankingPlugin/src/org/gephi/ranking/plugin/AttributeRankingBuilder.java\nindex 2eecd4c..0e9b2e5 100644\n--- a/RankingPlugin/src/org/gephi/ranking/plugin/AttributeRankingBuilder.java\n+++ b/RankingPlugin/src/org/gephi/ranking/plugin/AttributeRankingBuilder.java\n@@ -301,7 +301,7 @@\n         @Override\n         public Number getMaximumValue() {\n             if (maximum == null) {\n-                AbstractRanking.refreshMinMax(this, graph);\n+                DynamicAttributeRanking.refreshMinMax(this, graph);\n             }\n             return maximum;\n         }\n@@ -309,7 +309,7 @@\n         @Override\n         public Number getMinimumValue() {\n             if (minimum == null) {\n-                AbstractRanking.refreshMinMax(this, graph);\n+                DynamicAttributeRanking.refreshMinMax(this, graph);\n             }\n             return minimum;\n         }\n", "projectName": "gephi.gephi", "bugLineNum": 312, "bugNodeStartChar": 12797, "bugNodeLength": 42, "fixLineNum": 312, "fixNodeStartChar": 12797, "fixNodeLength": 50, "sourceBeforeFix": "AbstractRanking.refreshMinMax(this,graph)", "sourceAfterFix": "DynamicAttributeRanking.refreshMinMax(this,graph)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "ab45cc12ff4e9b8e62aa1b3776367df3b1020b93", "fixCommitParentSHA1": "475ec779711c85367f943b13b4a539acc650cea0", "bugFilePath": "RankingPlugin/src/org/gephi/ranking/plugin/AttributeRankingBuilder.java", "fixPatch": "diff --git a/RankingPlugin/src/org/gephi/ranking/plugin/AttributeRankingBuilder.java b/RankingPlugin/src/org/gephi/ranking/plugin/AttributeRankingBuilder.java\nindex 2eecd4c..0e9b2e5 100644\n--- a/RankingPlugin/src/org/gephi/ranking/plugin/AttributeRankingBuilder.java\n+++ b/RankingPlugin/src/org/gephi/ranking/plugin/AttributeRankingBuilder.java\n@@ -301,7 +301,7 @@\n         @Override\n         public Number getMaximumValue() {\n             if (maximum == null) {\n-                AbstractRanking.refreshMinMax(this, graph);\n+                DynamicAttributeRanking.refreshMinMax(this, graph);\n             }\n             return maximum;\n         }\n@@ -309,7 +309,7 @@\n         @Override\n         public Number getMinimumValue() {\n             if (minimum == null) {\n-                AbstractRanking.refreshMinMax(this, graph);\n+                DynamicAttributeRanking.refreshMinMax(this, graph);\n             }\n             return minimum;\n         }\n", "projectName": "gephi.gephi", "bugLineNum": 312, "bugNodeStartChar": 12797, "bugNodeLength": 42, "fixLineNum": 312, "fixNodeStartChar": 12797, "fixNodeLength": 50, "sourceBeforeFix": "AbstractRanking.refreshMinMax(this,graph)", "sourceAfterFix": "DynamicAttributeRanking.refreshMinMax(this,graph)"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "0e0e42c86be86838ba95ce67b855ef263488869d", "fixCommitParentSHA1": "35a28295cceca69a2c3d464ae88ddd4a21a583e0", "bugFilePath": "ImportAPI/src/org/gephi/io/importer/impl/EdgeDraftImpl.java", "fixPatch": "diff --git a/ImportAPI/src/org/gephi/io/importer/impl/EdgeDraftImpl.java b/ImportAPI/src/org/gephi/io/importer/impl/EdgeDraftImpl.java\nindex 0938fb4..6f2ac2c 100644\n--- a/ImportAPI/src/org/gephi/io/importer/impl/EdgeDraftImpl.java\n+++ b/ImportAPI/src/org/gephi/io/importer/impl/EdgeDraftImpl.java\n@@ -203,7 +203,8 @@\n         Double end = Double.POSITIVE_INFINITY;\n         if (dateFrom != null && !dateFrom.isEmpty()) {\n             try {\n-                if (container.getTimeFormat().equals(TimeFormat.DATE)) {\n+                if (container.getTimeFormat().equals(TimeFormat.DATE) ||\n+                        container.getTimeFormat().equals(TimeFormat.DATETIME)) {\n                     start = DynamicUtilities.getDoubleFromXMLDateString(dateFrom);\n                 } else {\n                     start = Double.parseDouble(dateFrom);\n@@ -214,7 +215,8 @@\n         }\n         if (dateTo != null && !dateTo.isEmpty()) {\n             try {\n-                if (container.getTimeFormat().equals(TimeFormat.DATE)) {\n+                if (container.getTimeFormat().equals(TimeFormat.DATE) ||\n+                        container.getTimeFormat().equals(TimeFormat.DATETIME)) {\n                     end = DynamicUtilities.getDoubleFromXMLDateString(dateTo);\n                 } else {\n                     end = Double.parseDouble(dateTo);\n", "projectName": "gephi.gephi", "bugLineNum": 206, "bugNodeStartChar": 7063, "bugNodeLength": 49, "fixLineNum": 206, "fixNodeStartChar": 7063, "fixNodeLength": 130, "sourceBeforeFix": "container.getTimeFormat().equals(TimeFormat.DATE)", "sourceAfterFix": "container.getTimeFormat().equals(TimeFormat.DATE) || container.getTimeFormat().equals(TimeFormat.DATETIME)"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "0e0e42c86be86838ba95ce67b855ef263488869d", "fixCommitParentSHA1": "35a28295cceca69a2c3d464ae88ddd4a21a583e0", "bugFilePath": "ImportAPI/src/org/gephi/io/importer/impl/EdgeDraftImpl.java", "fixPatch": "diff --git a/ImportAPI/src/org/gephi/io/importer/impl/EdgeDraftImpl.java b/ImportAPI/src/org/gephi/io/importer/impl/EdgeDraftImpl.java\nindex 0938fb4..6f2ac2c 100644\n--- a/ImportAPI/src/org/gephi/io/importer/impl/EdgeDraftImpl.java\n+++ b/ImportAPI/src/org/gephi/io/importer/impl/EdgeDraftImpl.java\n@@ -203,7 +203,8 @@\n         Double end = Double.POSITIVE_INFINITY;\n         if (dateFrom != null && !dateFrom.isEmpty()) {\n             try {\n-                if (container.getTimeFormat().equals(TimeFormat.DATE)) {\n+                if (container.getTimeFormat().equals(TimeFormat.DATE) ||\n+                        container.getTimeFormat().equals(TimeFormat.DATETIME)) {\n                     start = DynamicUtilities.getDoubleFromXMLDateString(dateFrom);\n                 } else {\n                     start = Double.parseDouble(dateFrom);\n@@ -214,7 +215,8 @@\n         }\n         if (dateTo != null && !dateTo.isEmpty()) {\n             try {\n-                if (container.getTimeFormat().equals(TimeFormat.DATE)) {\n+                if (container.getTimeFormat().equals(TimeFormat.DATE) ||\n+                        container.getTimeFormat().equals(TimeFormat.DATETIME)) {\n                     end = DynamicUtilities.getDoubleFromXMLDateString(dateTo);\n                 } else {\n                     end = Double.parseDouble(dateTo);\n", "projectName": "gephi.gephi", "bugLineNum": 217, "bugNodeStartChar": 7606, "bugNodeLength": 49, "fixLineNum": 217, "fixNodeStartChar": 7606, "fixNodeLength": 130, "sourceBeforeFix": "container.getTimeFormat().equals(TimeFormat.DATE)", "sourceAfterFix": "container.getTimeFormat().equals(TimeFormat.DATE) || container.getTimeFormat().equals(TimeFormat.DATETIME)"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "0e0e42c86be86838ba95ce67b855ef263488869d", "fixCommitParentSHA1": "35a28295cceca69a2c3d464ae88ddd4a21a583e0", "bugFilePath": "ImportAPI/src/org/gephi/io/importer/impl/NodeDraftImpl.java", "fixPatch": "diff --git a/ImportAPI/src/org/gephi/io/importer/impl/NodeDraftImpl.java b/ImportAPI/src/org/gephi/io/importer/impl/NodeDraftImpl.java\nindex d97f266..8ef6eb0 100644\n--- a/ImportAPI/src/org/gephi/io/importer/impl/NodeDraftImpl.java\n+++ b/ImportAPI/src/org/gephi/io/importer/impl/NodeDraftImpl.java\n@@ -247,7 +247,8 @@\n         Double end = Double.POSITIVE_INFINITY;\n         if (dateFrom != null && !dateFrom.isEmpty()) {\n             try {\n-                if (container.getTimeFormat().equals(TimeFormat.DATE)) {\n+                if (container.getTimeFormat().equals(TimeFormat.DATE) ||\n+                        container.getTimeFormat().equals(TimeFormat.DATETIME)) {\n                     start = DynamicUtilities.getDoubleFromXMLDateString(dateFrom);\n                 } else {\n                     start = Double.parseDouble(dateFrom);\n@@ -258,7 +259,8 @@\n         }\n         if (dateTo != null && !dateTo.isEmpty()) {\n             try {\n-                if (container.getTimeFormat().equals(TimeFormat.DATE)) {\n+                if (container.getTimeFormat().equals(TimeFormat.DATE) ||\n+                        container.getTimeFormat().equals(TimeFormat.DATETIME)) {\n                     end = DynamicUtilities.getDoubleFromXMLDateString(dateTo);\n                 } else {\n                     end = Double.parseDouble(dateTo);\n", "projectName": "gephi.gephi", "bugLineNum": 250, "bugNodeStartChar": 8202, "bugNodeLength": 49, "fixLineNum": 250, "fixNodeStartChar": 8202, "fixNodeLength": 130, "sourceBeforeFix": "container.getTimeFormat().equals(TimeFormat.DATE)", "sourceAfterFix": "container.getTimeFormat().equals(TimeFormat.DATE) || container.getTimeFormat().equals(TimeFormat.DATETIME)"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "0e0e42c86be86838ba95ce67b855ef263488869d", "fixCommitParentSHA1": "35a28295cceca69a2c3d464ae88ddd4a21a583e0", "bugFilePath": "ImportAPI/src/org/gephi/io/importer/impl/NodeDraftImpl.java", "fixPatch": "diff --git a/ImportAPI/src/org/gephi/io/importer/impl/NodeDraftImpl.java b/ImportAPI/src/org/gephi/io/importer/impl/NodeDraftImpl.java\nindex d97f266..8ef6eb0 100644\n--- a/ImportAPI/src/org/gephi/io/importer/impl/NodeDraftImpl.java\n+++ b/ImportAPI/src/org/gephi/io/importer/impl/NodeDraftImpl.java\n@@ -247,7 +247,8 @@\n         Double end = Double.POSITIVE_INFINITY;\n         if (dateFrom != null && !dateFrom.isEmpty()) {\n             try {\n-                if (container.getTimeFormat().equals(TimeFormat.DATE)) {\n+                if (container.getTimeFormat().equals(TimeFormat.DATE) ||\n+                        container.getTimeFormat().equals(TimeFormat.DATETIME)) {\n                     start = DynamicUtilities.getDoubleFromXMLDateString(dateFrom);\n                 } else {\n                     start = Double.parseDouble(dateFrom);\n@@ -258,7 +259,8 @@\n         }\n         if (dateTo != null && !dateTo.isEmpty()) {\n             try {\n-                if (container.getTimeFormat().equals(TimeFormat.DATE)) {\n+                if (container.getTimeFormat().equals(TimeFormat.DATE) ||\n+                        container.getTimeFormat().equals(TimeFormat.DATETIME)) {\n                     end = DynamicUtilities.getDoubleFromXMLDateString(dateTo);\n                 } else {\n                     end = Double.parseDouble(dateTo);\n", "projectName": "gephi.gephi", "bugLineNum": 261, "bugNodeStartChar": 8745, "bugNodeLength": 49, "fixLineNum": 261, "fixNodeStartChar": 8745, "fixNodeLength": 130, "sourceBeforeFix": "container.getTimeFormat().equals(TimeFormat.DATE)", "sourceAfterFix": "container.getTimeFormat().equals(TimeFormat.DATE) || container.getTimeFormat().equals(TimeFormat.DATETIME)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "2b571fd0a8120026c9e8d3a7933b1d5154576183", "fixCommitParentSHA1": "e09ca89d8ca343cd0dc31ca7397ec942bbbede22", "bugFilePath": "ProjectAPI/src/org/gephi/project/io/LoadTask.java", "fixPatch": "diff --git a/ProjectAPI/src/org/gephi/project/io/LoadTask.java b/ProjectAPI/src/org/gephi/project/io/LoadTask.java\nindex bc52e11..8cc26a8 100644\n--- a/ProjectAPI/src/org/gephi/project/io/LoadTask.java\n+++ b/ProjectAPI/src/org/gephi/project/io/LoadTask.java\n@@ -100,7 +100,7 @@\n                     System.out.println(\"Error:\" + errorType + \", message : \" + message);\n                 }\n             });\n-            InputStreamReader isReader = new InputStreamReader(fileObject.getInputStream());\n+            InputStreamReader isReader = new InputStreamReader(fileObject.getInputStream(), \"UTF-8\");\n             Xml10FilterReader filterReader = new Xml10FilterReader(isReader);\n             XMLStreamReader reader = inputFactory.createXMLStreamReader(filterReader);\n \n", "projectName": "gephi.gephi", "bugLineNum": 103, "bugNodeStartChar": 4102, "bugNodeLength": 50, "fixLineNum": 103, "fixNodeStartChar": 4102, "fixNodeLength": 59, "sourceBeforeFix": "new InputStreamReader(fileObject.getInputStream())", "sourceAfterFix": "new InputStreamReader(fileObject.getInputStream(),\"UTF-8\")"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "e376b7be0a40adaba56bbefce50c3f0930a9475c", "fixCommitParentSHA1": "318cd1aff04dfd6fa1ac0334a9d07cf306aa6975", "bugFilePath": "AttributesImpl/src/org/gephi/data/attributes/AttributeContollerImpl.java", "fixPatch": "diff --git a/AttributesImpl/src/org/gephi/data/attributes/AttributeContollerImpl.java b/AttributesImpl/src/org/gephi/data/attributes/AttributeContollerImpl.java\nindex fe994e0..bee36ea 100644\n--- a/AttributesImpl/src/org/gephi/data/attributes/AttributeContollerImpl.java\n+++ b/AttributesImpl/src/org/gephi/data/attributes/AttributeContollerImpl.java\n@@ -94,7 +94,7 @@\n         }\n     }\n \n-    public AttributeModel getModel() {\n+    public synchronized AttributeModel getModel() {\n         Workspace workspace = projectController.getCurrentWorkspace();\n         if (workspace != null) {\n             AttributeModel model = workspace.getLookup().lookup(AttributeModel.class);\n@@ -108,7 +108,7 @@\n         return null;\n     }\n \n-    public AttributeModel getModel(Workspace workspace) {\n+    public synchronized AttributeModel getModel(Workspace workspace) {\n         AttributeModel model = workspace.getLookup().lookup(AttributeModel.class);\n         if (model != null) {\n             return model;\n", "projectName": "gephi.gephi", "bugLineNum": 97, "bugNodeStartChar": 3748, "bugNodeLength": 448, "fixLineNum": 97, "fixNodeStartChar": 3748, "fixNodeLength": 461, "sourceBeforeFix": "1", "sourceAfterFix": "33"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "e376b7be0a40adaba56bbefce50c3f0930a9475c", "fixCommitParentSHA1": "318cd1aff04dfd6fa1ac0334a9d07cf306aa6975", "bugFilePath": "AttributesImpl/src/org/gephi/data/attributes/AttributeContollerImpl.java", "fixPatch": "diff --git a/AttributesImpl/src/org/gephi/data/attributes/AttributeContollerImpl.java b/AttributesImpl/src/org/gephi/data/attributes/AttributeContollerImpl.java\nindex fe994e0..bee36ea 100644\n--- a/AttributesImpl/src/org/gephi/data/attributes/AttributeContollerImpl.java\n+++ b/AttributesImpl/src/org/gephi/data/attributes/AttributeContollerImpl.java\n@@ -94,7 +94,7 @@\n         }\n     }\n \n-    public AttributeModel getModel() {\n+    public synchronized AttributeModel getModel() {\n         Workspace workspace = projectController.getCurrentWorkspace();\n         if (workspace != null) {\n             AttributeModel model = workspace.getLookup().lookup(AttributeModel.class);\n@@ -108,7 +108,7 @@\n         return null;\n     }\n \n-    public AttributeModel getModel(Workspace workspace) {\n+    public synchronized AttributeModel getModel(Workspace workspace) {\n         AttributeModel model = workspace.getLookup().lookup(AttributeModel.class);\n         if (model != null) {\n             return model;\n", "projectName": "gephi.gephi", "bugLineNum": 111, "bugNodeStartChar": 4202, "bugNodeLength": 304, "fixLineNum": 111, "fixNodeStartChar": 4202, "fixNodeLength": 317, "sourceBeforeFix": "1", "sourceAfterFix": "33"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "616550ff7616a0dabf8d5bab40c22c63f17d2bc4", "fixCommitParentSHA1": "f6378023ce74dc3e611206b4b770b860e2469b25", "bugFilePath": "LayoutAPI/src/org/gephi/layout/LayoutControllerImpl.java", "fixPatch": "diff --git a/LayoutAPI/src/org/gephi/layout/LayoutControllerImpl.java b/LayoutAPI/src/org/gephi/layout/LayoutControllerImpl.java\nindex 0e6a444..1e79af1 100644\n--- a/LayoutAPI/src/org/gephi/layout/LayoutControllerImpl.java\n+++ b/LayoutAPI/src/org/gephi/layout/LayoutControllerImpl.java\n@@ -60,7 +60,7 @@\n             }\n \n             public void unselect(Workspace workspace) {\n-                if (model.getSelectedLayout() != null) {\n+                if (model != null && model.getSelectedLayout() != null) {\n                     model.saveProperties(model.getSelectedLayout());\n                 }\n             }\n", "projectName": "gephi.gephi", "bugLineNum": 63, "bugNodeStartChar": 2201, "bugNodeLength": 33, "fixLineNum": 63, "fixNodeStartChar": 2201, "fixNodeLength": 50, "sourceBeforeFix": "model.getSelectedLayout() != null", "sourceAfterFix": "model != null && model.getSelectedLayout() != null"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "60c931c322a76db91f97b12752e61e139f0ab90d", "fixCommitParentSHA1": "54ce0d866d09f8b5755c5ff138ac953cc6b0ae0f", "bugFilePath": "ProjectAPI/src/org/gephi/project/io/LoadTask.java", "fixPatch": "diff --git a/ProjectAPI/src/org/gephi/project/io/LoadTask.java b/ProjectAPI/src/org/gephi/project/io/LoadTask.java\nindex 3c25de1..45b1349 100644\n--- a/ProjectAPI/src/org/gephi/project/io/LoadTask.java\n+++ b/ProjectAPI/src/org/gephi/project/io/LoadTask.java\n@@ -56,7 +56,7 @@\n     public void run() {\n         try {\n             Progress.start(progressTicket);\n-            Progress.setDisplayName(progressTicket, NbBundle.getMessage(SaveTask.class, \"LoadTask.name\"));\n+            Progress.setDisplayName(progressTicket, NbBundle.getMessage(LoadTask.class, \"LoadTask.name\"));\n             FileObject fileObject = FileUtil.toFileObject(file);\n             if (FileUtil.isArchiveFile(fileObject)) {\n                 //Unzip\n", "projectName": "gephi.gephi", "bugLineNum": 59, "bugNodeStartChar": 1936, "bugNodeLength": 14, "fixLineNum": 59, "fixNodeStartChar": 1936, "fixNodeLength": 14, "sourceBeforeFix": "SaveTask.class", "sourceAfterFix": "LoadTask.class"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "bc09228e0d7291198a8e5f989450121fcbe2ac81", "fixCommitParentSHA1": "86ec9dd043e07668316f35bd6114aa3d9fe54005", "bugFilePath": "LayoutPlugin/src/org/gephi/layout/plugin/rotate/ClockwiseRotate.java", "fixPatch": "diff --git a/LayoutPlugin/src/org/gephi/layout/plugin/rotate/ClockwiseRotate.java b/LayoutPlugin/src/org/gephi/layout/plugin/rotate/ClockwiseRotate.java\nindex 21af04d..e5e7914 100644\n--- a/LayoutPlugin/src/org/gephi/layout/plugin/rotate/ClockwiseRotate.java\n+++ b/LayoutPlugin/src/org/gephi/layout/plugin/rotate/ClockwiseRotate.java\n@@ -38,7 +38,7 @@\n     private ClockwiseRotateLayoutUI ui = new ClockwiseRotateLayoutUI();\n \n     public Layout buildLayout() {\n-        return new RotateLayout(this, -90);\n+        return new RotateLayout(this, 90);\n     }\n \n     public String getName() {\n", "projectName": "gephi.gephi", "bugLineNum": 41, "bugNodeStartChar": 1356, "bugNodeLength": 3, "fixLineNum": 41, "fixNodeStartChar": 1356, "fixNodeLength": 2, "sourceBeforeFix": "-90", "sourceAfterFix": "90"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "762fa1b98d95fff88c642627d2cd546999afbc9a", "fixCommitParentSHA1": "3868f65226e64584ef7056f6022d0b5f4bbdcd20", "bugFilePath": "DesktopDataLaboratory/src/org/gephi/desktop/datalab/persistence/DataLaboratoryPersistenceProvider.java", "fixPatch": "diff --git a/DesktopDataLaboratory/src/org/gephi/desktop/datalab/persistence/DataLaboratoryPersistenceProvider.java b/DesktopDataLaboratory/src/org/gephi/desktop/datalab/persistence/DataLaboratoryPersistenceProvider.java\nindex 76ea222..cfdc922 100644\n--- a/DesktopDataLaboratory/src/org/gephi/desktop/datalab/persistence/DataLaboratoryPersistenceProvider.java\n+++ b/DesktopDataLaboratory/src/org/gephi/desktop/datalab/persistence/DataLaboratoryPersistenceProvider.java\n@@ -112,7 +112,7 @@\n                         nodeColumns.addAvailableColumn(column);\n                     }\n                 } else if (EDGE_COLUMN.equalsIgnoreCase(name)) {\n-                    String id = reader.getAttributeValue(null, \"id\");\n+                    Integer id = Integer.parseInt(reader.getAttributeValue(null, \"id\"));\n                     AttributeColumn column = edgesTable.getColumn(id);\n                     if (column != null) {\n                         edgeColumns.addAvailableColumn(column);\n", "projectName": "gephi.gephi", "bugLineNum": 115, "bugNodeStartChar": 4970, "bugNodeLength": 49, "fixLineNum": 115, "fixNodeStartChar": 4970, "fixNodeLength": 68, "sourceBeforeFix": "String id=reader.getAttributeValue(null,\"id\"); ", "sourceAfterFix": "Integer id=Integer.parseInt(reader.getAttributeValue(null,\"id\")); "}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "262f36ae8088206c992628ce7ba1d60e5527b31d", "fixCommitParentSHA1": "16c527131f9ddfcc1b0795822494c1fffc46b657", "bugFilePath": "FiltersPlugin/src/org/gephi/filters/plugin/dynamic/DynamicRangeBuilder.java", "fixPatch": "diff --git a/FiltersPlugin/src/org/gephi/filters/plugin/dynamic/DynamicRangeBuilder.java b/FiltersPlugin/src/org/gephi/filters/plugin/dynamic/DynamicRangeBuilder.java\nindex b561725..85c330a 100644\n--- a/FiltersPlugin/src/org/gephi/filters/plugin/dynamic/DynamicRangeBuilder.java\n+++ b/FiltersPlugin/src/org/gephi/filters/plugin/dynamic/DynamicRangeBuilder.java\n@@ -204,7 +204,7 @@\n             }\n             if (edgeColumn != null) {\n                 for (Edge e : graph.getEdgesAndMetaEdges()) {\n-                    Object obj = e.getEdgeData().getAttributes().getValue(nodeColumn.getIndex());\n+                    Object obj = e.getEdgeData().getAttributes().getValue(edgeColumn.getIndex());\n                     if (obj != null) {\n                         TimeInterval timeInterval = (TimeInterval) obj;\n                         min = Math.min(min, Double.isInfinite(timeInterval.getLow()) ? min : timeInterval.getLow());\n", "projectName": "gephi.gephi", "bugLineNum": 207, "bugNodeStartChar": 8088, "bugNodeLength": 21, "fixLineNum": 207, "fixNodeStartChar": 8088, "fixNodeLength": 21, "sourceBeforeFix": "nodeColumn.getIndex()", "sourceAfterFix": "edgeColumn.getIndex()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "262f36ae8088206c992628ce7ba1d60e5527b31d", "fixCommitParentSHA1": "16c527131f9ddfcc1b0795822494c1fffc46b657", "bugFilePath": "FiltersPlugin/src/org/gephi/filters/plugin/dynamic/DynamicRangeBuilder.java", "fixPatch": "diff --git a/FiltersPlugin/src/org/gephi/filters/plugin/dynamic/DynamicRangeBuilder.java b/FiltersPlugin/src/org/gephi/filters/plugin/dynamic/DynamicRangeBuilder.java\nindex b561725..85c330a 100644\n--- a/FiltersPlugin/src/org/gephi/filters/plugin/dynamic/DynamicRangeBuilder.java\n+++ b/FiltersPlugin/src/org/gephi/filters/plugin/dynamic/DynamicRangeBuilder.java\n@@ -204,7 +204,7 @@\n             }\n             if (edgeColumn != null) {\n                 for (Edge e : graph.getEdgesAndMetaEdges()) {\n-                    Object obj = e.getEdgeData().getAttributes().getValue(nodeColumn.getIndex());\n+                    Object obj = e.getEdgeData().getAttributes().getValue(edgeColumn.getIndex());\n                     if (obj != null) {\n                         TimeInterval timeInterval = (TimeInterval) obj;\n                         min = Math.min(min, Double.isInfinite(timeInterval.getLow()) ? min : timeInterval.getLow());\n", "projectName": "gephi.gephi", "bugLineNum": 207, "bugNodeStartChar": 8088, "bugNodeLength": 21, "fixLineNum": 207, "fixNodeStartChar": 8088, "fixNodeLength": 21, "sourceBeforeFix": "nodeColumn.getIndex()", "sourceAfterFix": "edgeColumn.getIndex()"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "9b9d9cb2297165ec4159efa35322f1b149908f9f", "fixCommitParentSHA1": "355f12408eaaa5af7e2c7de368d2ddfc1cb4ba8d", "bugFilePath": "DesktopBranding/src/org/gephi/branding/desktop/multilingual/LanguageAction.java", "fixPatch": "diff --git a/DesktopBranding/src/org/gephi/branding/desktop/multilingual/LanguageAction.java b/DesktopBranding/src/org/gephi/branding/desktop/multilingual/LanguageAction.java\nindex da61654..bdeb2a0 100644\n--- a/DesktopBranding/src/org/gephi/branding/desktop/multilingual/LanguageAction.java\n+++ b/DesktopBranding/src/org/gephi/branding/desktop/multilingual/LanguageAction.java\n@@ -108,7 +108,7 @@\n \n     private void setLanguage(Language language) {\n         String homePath;\n-        if (Utilities.isMac()) {\n+        if (Utilities.isMac() || Utilities.isUnix()) {\n             homePath = System.getProperty(\"netbeans.home\");\n         } else {\n             homePath = System.getProperty(\"user.dir\");\n", "projectName": "gephi.gephi", "bugLineNum": 111, "bugNodeStartChar": 3708, "bugNodeLength": 17, "fixLineNum": 111, "fixNodeStartChar": 3708, "fixNodeLength": 39, "sourceBeforeFix": "Utilities.isMac()", "sourceAfterFix": "Utilities.isMac() || Utilities.isUnix()"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "81a280e48f171b6862257853ff9ac97b7da9e7af", "fixCommitParentSHA1": "ab99b142944a0c383544363cf3779982a8ead914", "bugFilePath": "ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGDF.java", "fixPatch": "diff --git a/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGDF.java b/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGDF.java\nindex 95579b9..2a3d3e7 100644\n--- a/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGDF.java\n+++ b/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGDF.java\n@@ -314,7 +314,7 @@\n \n     private void attributesNodeColumns(AttributeModel attributeModel) {\n         List<AttributeColumn> cols = new ArrayList<AttributeColumn>();\n-        if (attributeModel != null) {\n+        if (exportAttributes && attributeModel != null) {\n             for (AttributeColumn column : attributeModel.getNodeTable().getColumns()) {\n                 if (!isNodeDefaultColumn(column.getId())) {\n                     cols.add(column);\n@@ -326,7 +326,7 @@\n \n     private void attributesEdgeColumns(AttributeModel attributeModel) {\n         List<AttributeColumn> cols = new ArrayList<AttributeColumn>();\n-        if (attributeModel != null) {\n+        if (exportAttributes && attributeModel != null) {\n             for (AttributeColumn column : attributeModel.getEdgeTable().getColumns()) {\n                 if (!isEdgeDefaultColumn(column.getId())) {\n                     cols.add(column);\n", "projectName": "gephi.gephi", "bugLineNum": 317, "bugNodeStartChar": 11723, "bugNodeLength": 22, "fixLineNum": 317, "fixNodeStartChar": 11723, "fixNodeLength": 42, "sourceBeforeFix": "attributeModel != null", "sourceAfterFix": "exportAttributes && attributeModel != null"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "81a280e48f171b6862257853ff9ac97b7da9e7af", "fixCommitParentSHA1": "ab99b142944a0c383544363cf3779982a8ead914", "bugFilePath": "ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGDF.java", "fixPatch": "diff --git a/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGDF.java b/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGDF.java\nindex 95579b9..2a3d3e7 100644\n--- a/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGDF.java\n+++ b/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGDF.java\n@@ -314,7 +314,7 @@\n \n     private void attributesNodeColumns(AttributeModel attributeModel) {\n         List<AttributeColumn> cols = new ArrayList<AttributeColumn>();\n-        if (attributeModel != null) {\n+        if (exportAttributes && attributeModel != null) {\n             for (AttributeColumn column : attributeModel.getNodeTable().getColumns()) {\n                 if (!isNodeDefaultColumn(column.getId())) {\n                     cols.add(column);\n@@ -326,7 +326,7 @@\n \n     private void attributesEdgeColumns(AttributeModel attributeModel) {\n         List<AttributeColumn> cols = new ArrayList<AttributeColumn>();\n-        if (attributeModel != null) {\n+        if (exportAttributes && attributeModel != null) {\n             for (AttributeColumn column : attributeModel.getEdgeTable().getColumns()) {\n                 if (!isEdgeDefaultColumn(column.getId())) {\n                     cols.add(column);\n", "projectName": "gephi.gephi", "bugLineNum": 329, "bugNodeStartChar": 12199, "bugNodeLength": 22, "fixLineNum": 329, "fixNodeStartChar": 12199, "fixNodeLength": 42, "sourceBeforeFix": "attributeModel != null", "sourceAfterFix": "exportAttributes && attributeModel != null"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "40df292ac802e1023d0208b497945d8841958022", "fixCommitParentSHA1": "6e38f0637d02780abd56df83699884a6f8f11cdc", "bugFilePath": "FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java", "fixPatch": "diff --git a/FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java b/FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java\nindex 8786574..40ac4fa 100644\n--- a/FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java\n+++ b/FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java\n@@ -90,9 +90,9 @@\n \n             List<Node> nodes = new ArrayList<Node>();\n             for (Node n : hgraph.getNodes()) {\n-                if (n.getNodeData().getId().toLowerCase().contains(str)) {\n+                if (n.getNodeData().getId().toLowerCase().equals(str)) {\n                     nodes.add(n);\n-                } else if ((n.getNodeData().getLabel() != null) && n.getNodeData().getLabel().toLowerCase().contains(str)) {\n+                } else if ((n.getNodeData().getLabel() != null) && n.getNodeData().getLabel().toLowerCase().equals(str)) {\n                     nodes.add(n);\n                 }\n             }\n", "projectName": "gephi.gephi", "bugLineNum": 93, "bugNodeStartChar": 2730, "bugNodeLength": 51, "fixLineNum": 93, "fixNodeStartChar": 2730, "fixNodeLength": 49, "sourceBeforeFix": "n.getNodeData().getId().toLowerCase().contains(str)", "sourceAfterFix": "n.getNodeData().getId().toLowerCase().equals(str)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "40df292ac802e1023d0208b497945d8841958022", "fixCommitParentSHA1": "6e38f0637d02780abd56df83699884a6f8f11cdc", "bugFilePath": "FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java", "fixPatch": "diff --git a/FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java b/FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java\nindex 8786574..40ac4fa 100644\n--- a/FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java\n+++ b/FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java\n@@ -90,9 +90,9 @@\n \n             List<Node> nodes = new ArrayList<Node>();\n             for (Node n : hgraph.getNodes()) {\n-                if (n.getNodeData().getId().toLowerCase().contains(str)) {\n+                if (n.getNodeData().getId().toLowerCase().equals(str)) {\n                     nodes.add(n);\n-                } else if ((n.getNodeData().getLabel() != null) && n.getNodeData().getLabel().toLowerCase().contains(str)) {\n+                } else if ((n.getNodeData().getLabel() != null) && n.getNodeData().getLabel().toLowerCase().equals(str)) {\n                     nodes.add(n);\n                 }\n             }\n", "projectName": "gephi.gephi", "bugLineNum": 93, "bugNodeStartChar": 2730, "bugNodeLength": 51, "fixLineNum": 93, "fixNodeStartChar": 2730, "fixNodeLength": 49, "sourceBeforeFix": "n.getNodeData().getId().toLowerCase().contains(str)", "sourceAfterFix": "n.getNodeData().getId().toLowerCase().equals(str)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "40df292ac802e1023d0208b497945d8841958022", "fixCommitParentSHA1": "6e38f0637d02780abd56df83699884a6f8f11cdc", "bugFilePath": "FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java", "fixPatch": "diff --git a/FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java b/FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java\nindex 8786574..40ac4fa 100644\n--- a/FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java\n+++ b/FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java\n@@ -90,9 +90,9 @@\n \n             List<Node> nodes = new ArrayList<Node>();\n             for (Node n : hgraph.getNodes()) {\n-                if (n.getNodeData().getId().toLowerCase().contains(str)) {\n+                if (n.getNodeData().getId().toLowerCase().equals(str)) {\n                     nodes.add(n);\n-                } else if ((n.getNodeData().getLabel() != null) && n.getNodeData().getLabel().toLowerCase().contains(str)) {\n+                } else if ((n.getNodeData().getLabel() != null) && n.getNodeData().getLabel().toLowerCase().equals(str)) {\n                     nodes.add(n);\n                 }\n             }\n", "projectName": "gephi.gephi", "bugLineNum": 95, "bugNodeStartChar": 2886, "bugNodeLength": 54, "fixLineNum": 95, "fixNodeStartChar": 2886, "fixNodeLength": 52, "sourceBeforeFix": "n.getNodeData().getLabel().toLowerCase().contains(str)", "sourceAfterFix": "n.getNodeData().getLabel().toLowerCase().equals(str)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "40df292ac802e1023d0208b497945d8841958022", "fixCommitParentSHA1": "6e38f0637d02780abd56df83699884a6f8f11cdc", "bugFilePath": "FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java", "fixPatch": "diff --git a/FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java b/FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java\nindex 8786574..40ac4fa 100644\n--- a/FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java\n+++ b/FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java\n@@ -90,9 +90,9 @@\n \n             List<Node> nodes = new ArrayList<Node>();\n             for (Node n : hgraph.getNodes()) {\n-                if (n.getNodeData().getId().toLowerCase().contains(str)) {\n+                if (n.getNodeData().getId().toLowerCase().equals(str)) {\n                     nodes.add(n);\n-                } else if ((n.getNodeData().getLabel() != null) && n.getNodeData().getLabel().toLowerCase().contains(str)) {\n+                } else if ((n.getNodeData().getLabel() != null) && n.getNodeData().getLabel().toLowerCase().equals(str)) {\n                     nodes.add(n);\n                 }\n             }\n", "projectName": "gephi.gephi", "bugLineNum": 95, "bugNodeStartChar": 2886, "bugNodeLength": 54, "fixLineNum": 95, "fixNodeStartChar": 2886, "fixNodeLength": 52, "sourceBeforeFix": "n.getNodeData().getLabel().toLowerCase().contains(str)", "sourceAfterFix": "n.getNodeData().getLabel().toLowerCase().equals(str)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "abde91f259c890625f89eb020d1d127b90611e58", "fixCommitParentSHA1": "de091e7699f4d0ec6408f9f7dfcbac59e7a91260", "bugFilePath": "DesktopDataLaboratory/src/org/gephi/desktop/datalab/persistence/DataLaboratoryPersistenceProvider.java", "fixPatch": "diff --git a/DesktopDataLaboratory/src/org/gephi/desktop/datalab/persistence/DataLaboratoryPersistenceProvider.java b/DesktopDataLaboratory/src/org/gephi/desktop/datalab/persistence/DataLaboratoryPersistenceProvider.java\nindex 49fac15..76ea222 100644\n--- a/DesktopDataLaboratory/src/org/gephi/desktop/datalab/persistence/DataLaboratoryPersistenceProvider.java\n+++ b/DesktopDataLaboratory/src/org/gephi/desktop/datalab/persistence/DataLaboratoryPersistenceProvider.java\n@@ -106,7 +106,7 @@\n             if (eventType.equals(XMLEvent.START_ELEMENT)) {\n                 String name = reader.getLocalName();\n                 if (NODE_COLUMN.equalsIgnoreCase(name)) {\n-                    String id = reader.getAttributeValue(null, \"id\");\n+                    Integer id = Integer.parseInt(reader.getAttributeValue(null, \"id\"));\n                     AttributeColumn column = nodesTable.getColumn(id);\n                     if (column != null) {\n                         nodeColumns.addAvailableColumn(column);\n", "projectName": "gephi.gephi", "bugLineNum": 109, "bugNodeStartChar": 4617, "bugNodeLength": 49, "fixLineNum": 109, "fixNodeStartChar": 4617, "fixNodeLength": 68, "sourceBeforeFix": "String id=reader.getAttributeValue(null,\"id\"); ", "sourceAfterFix": "Integer id=Integer.parseInt(reader.getAttributeValue(null,\"id\")); "}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "fe4e66a2c409163edc185928807fa082505e63be", "fixCommitParentSHA1": "4c263d8e9a12f28162f2a90e8c43ea196dc7e3ca", "bugFilePath": "DesktopDataLaboratory/src/org/gephi/desktop/datalab/general/actions/MergeColumnsUI.java", "fixPatch": "diff --git a/DesktopDataLaboratory/src/org/gephi/desktop/datalab/general/actions/MergeColumnsUI.java b/DesktopDataLaboratory/src/org/gephi/desktop/datalab/general/actions/MergeColumnsUI.java\nindex 3477b1b..32365a7 100644\n--- a/DesktopDataLaboratory/src/org/gephi/desktop/datalab/general/actions/MergeColumnsUI.java\n+++ b/DesktopDataLaboratory/src/org/gephi/desktop/datalab/general/actions/MergeColumnsUI.java\n@@ -352,7 +352,7 @@\n         });\n \n         infoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);\n-        infoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/gephi/ui/datatable/resources/info.png\"))); // NOI18N\n+        infoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/gephi/desktop/datalab/resources/info.png\"))); // NOI18N\n         infoLabel.setText(org.openide.util.NbBundle.getMessage(MergeColumnsUI.class, \"MergeColumnsUI.infoLabel.text\")); // NOI18N\n         infoLabel.setEnabled(false);\n \n@@ -386,7 +386,7 @@\n                                         .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))\n                             .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                                 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n-                                .addComponent(availableStrategiesComboBox, 0, 232, Short.MAX_VALUE)\n+                                .addComponent(availableStrategiesComboBox, 0, 218, Short.MAX_VALUE)\n                                 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                 .addComponent(infoLabel)\n                                 .addContainerGap())))))\n", "projectName": "gephi.gephi", "bugLineNum": 387, "bugNodeStartChar": 16774, "bugNodeLength": 231, "fixLineNum": 387, "fixNodeStartChar": 16774, "fixNodeLength": 231, "sourceBeforeFix": "layout.createSequentialGroup().addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(availableStrategiesComboBox,0,232,Short.MAX_VALUE)", "sourceAfterFix": "layout.createSequentialGroup().addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(availableStrategiesComboBox,0,218,Short.MAX_VALUE)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "6cc0fdc67c2c6f12131ed252473d3c7d77d90cb5", "fixCommitParentSHA1": "e0f95b67df087b5bd06fb2be321ddfd1d69b1eac", "bugFilePath": "DesktopDataLaboratory/src/org/gephi/desktop/datalab/EdgeDataTable.java", "fixPatch": "diff --git a/DesktopDataLaboratory/src/org/gephi/desktop/datalab/EdgeDataTable.java b/DesktopDataLaboratory/src/org/gephi/desktop/datalab/EdgeDataTable.java\nindex aeb985d..db1e774 100644\n--- a/DesktopDataLaboratory/src/org/gephi/desktop/datalab/EdgeDataTable.java\n+++ b/DesktopDataLaboratory/src/org/gephi/desktop/datalab/EdgeDataTable.java\n@@ -271,10 +271,10 @@\n         }\n \n         if (model == null) {\n-            model = new EdgeDataTableModel(graph.getEdges().toArray(), columns.toArray(new EdgeDataColumn[0]));\n+            model = new EdgeDataTableModel(graph.getEdgesAndMetaEdges().toArray(), columns.toArray(new EdgeDataColumn[0]));\n             table.setModel(model);\n         } else {\n-            model.setEdges(graph.getEdges().toArray());\n+            model.setEdges(graph.getEdgesAndMetaEdges().toArray());\n             model.setColumns(columns.toArray(new EdgeDataColumn[0]));\n         }\n \n", "projectName": "gephi.gephi", "bugLineNum": 274, "bugNodeStartChar": 11890, "bugNodeLength": 16, "fixLineNum": 274, "fixNodeStartChar": 11890, "fixNodeLength": 28, "sourceBeforeFix": "graph.getEdges()", "sourceAfterFix": "graph.getEdgesAndMetaEdges()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "6cc0fdc67c2c6f12131ed252473d3c7d77d90cb5", "fixCommitParentSHA1": "e0f95b67df087b5bd06fb2be321ddfd1d69b1eac", "bugFilePath": "DesktopDataLaboratory/src/org/gephi/desktop/datalab/EdgeDataTable.java", "fixPatch": "diff --git a/DesktopDataLaboratory/src/org/gephi/desktop/datalab/EdgeDataTable.java b/DesktopDataLaboratory/src/org/gephi/desktop/datalab/EdgeDataTable.java\nindex aeb985d..db1e774 100644\n--- a/DesktopDataLaboratory/src/org/gephi/desktop/datalab/EdgeDataTable.java\n+++ b/DesktopDataLaboratory/src/org/gephi/desktop/datalab/EdgeDataTable.java\n@@ -271,10 +271,10 @@\n         }\n \n         if (model == null) {\n-            model = new EdgeDataTableModel(graph.getEdges().toArray(), columns.toArray(new EdgeDataColumn[0]));\n+            model = new EdgeDataTableModel(graph.getEdgesAndMetaEdges().toArray(), columns.toArray(new EdgeDataColumn[0]));\n             table.setModel(model);\n         } else {\n-            model.setEdges(graph.getEdges().toArray());\n+            model.setEdges(graph.getEdgesAndMetaEdges().toArray());\n             model.setColumns(columns.toArray(new EdgeDataColumn[0]));\n         }\n \n", "projectName": "gephi.gephi", "bugLineNum": 274, "bugNodeStartChar": 11890, "bugNodeLength": 16, "fixLineNum": 274, "fixNodeStartChar": 11890, "fixNodeLength": 28, "sourceBeforeFix": "graph.getEdges()", "sourceAfterFix": "graph.getEdgesAndMetaEdges()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "6cc0fdc67c2c6f12131ed252473d3c7d77d90cb5", "fixCommitParentSHA1": "e0f95b67df087b5bd06fb2be321ddfd1d69b1eac", "bugFilePath": "DesktopDataLaboratory/src/org/gephi/desktop/datalab/EdgeDataTable.java", "fixPatch": "diff --git a/DesktopDataLaboratory/src/org/gephi/desktop/datalab/EdgeDataTable.java b/DesktopDataLaboratory/src/org/gephi/desktop/datalab/EdgeDataTable.java\nindex aeb985d..db1e774 100644\n--- a/DesktopDataLaboratory/src/org/gephi/desktop/datalab/EdgeDataTable.java\n+++ b/DesktopDataLaboratory/src/org/gephi/desktop/datalab/EdgeDataTable.java\n@@ -271,10 +271,10 @@\n         }\n \n         if (model == null) {\n-            model = new EdgeDataTableModel(graph.getEdges().toArray(), columns.toArray(new EdgeDataColumn[0]));\n+            model = new EdgeDataTableModel(graph.getEdgesAndMetaEdges().toArray(), columns.toArray(new EdgeDataColumn[0]));\n             table.setModel(model);\n         } else {\n-            model.setEdges(graph.getEdges().toArray());\n+            model.setEdges(graph.getEdgesAndMetaEdges().toArray());\n             model.setColumns(columns.toArray(new EdgeDataColumn[0]));\n         }\n \n", "projectName": "gephi.gephi", "bugLineNum": 277, "bugNodeStartChar": 12038, "bugNodeLength": 16, "fixLineNum": 277, "fixNodeStartChar": 12038, "fixNodeLength": 28, "sourceBeforeFix": "graph.getEdges()", "sourceAfterFix": "graph.getEdgesAndMetaEdges()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "6cc0fdc67c2c6f12131ed252473d3c7d77d90cb5", "fixCommitParentSHA1": "e0f95b67df087b5bd06fb2be321ddfd1d69b1eac", "bugFilePath": "DesktopDataLaboratory/src/org/gephi/desktop/datalab/EdgeDataTable.java", "fixPatch": "diff --git a/DesktopDataLaboratory/src/org/gephi/desktop/datalab/EdgeDataTable.java b/DesktopDataLaboratory/src/org/gephi/desktop/datalab/EdgeDataTable.java\nindex aeb985d..db1e774 100644\n--- a/DesktopDataLaboratory/src/org/gephi/desktop/datalab/EdgeDataTable.java\n+++ b/DesktopDataLaboratory/src/org/gephi/desktop/datalab/EdgeDataTable.java\n@@ -271,10 +271,10 @@\n         }\n \n         if (model == null) {\n-            model = new EdgeDataTableModel(graph.getEdges().toArray(), columns.toArray(new EdgeDataColumn[0]));\n+            model = new EdgeDataTableModel(graph.getEdgesAndMetaEdges().toArray(), columns.toArray(new EdgeDataColumn[0]));\n             table.setModel(model);\n         } else {\n-            model.setEdges(graph.getEdges().toArray());\n+            model.setEdges(graph.getEdgesAndMetaEdges().toArray());\n             model.setColumns(columns.toArray(new EdgeDataColumn[0]));\n         }\n \n", "projectName": "gephi.gephi", "bugLineNum": 277, "bugNodeStartChar": 12038, "bugNodeLength": 16, "fixLineNum": 277, "fixNodeStartChar": 12038, "fixNodeLength": 28, "sourceBeforeFix": "graph.getEdges()", "sourceAfterFix": "graph.getEdgesAndMetaEdges()"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "d5d886baf0d9ab5b389dd4276bf13cf8032c7df7", "fixCommitParentSHA1": "6c618789281c7b272a95ee915a3b2a6e4b319471", "bugFilePath": "ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGML.java", "fixPatch": "diff --git a/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGML.java b/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGML.java\nindex bf649bf..a619921 100644\n--- a/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGML.java\n+++ b/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGML.java\n@@ -235,7 +235,7 @@\n             } else if (\"target\".equals(key)) {\n                 NodeDraft target = container.getNode(value.toString());\n                 edgeDraft.setTarget(target);\n-            } else if (\"value\".equals(key)) {\n+            } else if (\"value\".equals(key) || \"weight\".equals(key)) {\n                 if (value instanceof Double) {\n                     edgeDraft.setWeight(((Double) value).floatValue());\n                 }\n@@ -253,7 +253,7 @@\n         for (int i = 0; i < list.size(); i += 2) {\n             String key = (String) list.get(i);\n             Object value = list.get(i + 1);\n-            if (\"source\".equals(key) || \"target\".equals(key) || \"value\".equals(key) || \"label\".equals(key)) {\n+            if (\"source\".equals(key) || \"target\".equals(key) || \"value\".equals(key) || \"weight\".equals(key) || \"label\".equals(key)) {\n                 continue; // already parsed\n             }\n             if (value instanceof ArrayList) {\n", "projectName": "gephi.gephi", "bugLineNum": 238, "bugNodeStartChar": 9224, "bugNodeLength": 19, "fixLineNum": 238, "fixNodeStartChar": 9224, "fixNodeLength": 43, "sourceBeforeFix": "\"value\".equals(key)", "sourceAfterFix": "\"value\".equals(key) || \"weight\".equals(key)"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "d5d886baf0d9ab5b389dd4276bf13cf8032c7df7", "fixCommitParentSHA1": "6c618789281c7b272a95ee915a3b2a6e4b319471", "bugFilePath": "ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGML.java", "fixPatch": "diff --git a/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGML.java b/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGML.java\nindex bf649bf..a619921 100644\n--- a/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGML.java\n+++ b/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGML.java\n@@ -235,7 +235,7 @@\n             } else if (\"target\".equals(key)) {\n                 NodeDraft target = container.getNode(value.toString());\n                 edgeDraft.setTarget(target);\n-            } else if (\"value\".equals(key)) {\n+            } else if (\"value\".equals(key) || \"weight\".equals(key)) {\n                 if (value instanceof Double) {\n                     edgeDraft.setWeight(((Double) value).floatValue());\n                 }\n@@ -253,7 +253,7 @@\n         for (int i = 0; i < list.size(); i += 2) {\n             String key = (String) list.get(i);\n             Object value = list.get(i + 1);\n-            if (\"source\".equals(key) || \"target\".equals(key) || \"value\".equals(key) || \"label\".equals(key)) {\n+            if (\"source\".equals(key) || \"target\".equals(key) || \"value\".equals(key) || \"weight\".equals(key) || \"label\".equals(key)) {\n                 continue; // already parsed\n             }\n             if (value instanceof ArrayList) {\n", "projectName": "gephi.gephi", "bugLineNum": 256, "bugNodeStartChar": 9908, "bugNodeLength": 90, "fixLineNum": 256, "fixNodeStartChar": 9908, "fixNodeLength": 114, "sourceBeforeFix": "\"source\".equals(key) || \"target\".equals(key) || \"value\".equals(key)|| \"label\".equals(key)", "sourceAfterFix": "\"source\".equals(key) || \"target\".equals(key) || \"value\".equals(key)|| \"weight\".equals(key)|| \"label\".equals(key)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "c1e5e2e4627433ecc5158d873494777d24d9efd4", "fixCommitParentSHA1": "981e55b41fad60a7c0d0fc7d6634dd90472aedd6", "bugFilePath": "ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGraphML.java", "fixPatch": "diff --git a/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGraphML.java b/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGraphML.java\nindex 8161260..b391a04 100644\n--- a/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGraphML.java\n+++ b/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGraphML.java\n@@ -481,7 +481,7 @@\n             }\n \n             //Data attribute value\n-            AttributeColumn column = container.getAttributeModel().getNodeTable().getColumn(fore);\n+            AttributeColumn column = container.getAttributeModel().getEdgeTable().getColumn(fore);\n             if (column != null) {\n                 try {\n                     Object val = column.getType().parse(value);\n", "projectName": "gephi.gephi", "bugLineNum": 484, "bugNodeStartChar": 20132, "bugNodeLength": 44, "fixLineNum": 484, "fixNodeStartChar": 20132, "fixNodeLength": 44, "sourceBeforeFix": "container.getAttributeModel().getNodeTable()", "sourceAfterFix": "container.getAttributeModel().getEdgeTable()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "c1e5e2e4627433ecc5158d873494777d24d9efd4", "fixCommitParentSHA1": "981e55b41fad60a7c0d0fc7d6634dd90472aedd6", "bugFilePath": "ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGraphML.java", "fixPatch": "diff --git a/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGraphML.java b/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGraphML.java\nindex 8161260..b391a04 100644\n--- a/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGraphML.java\n+++ b/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGraphML.java\n@@ -481,7 +481,7 @@\n             }\n \n             //Data attribute value\n-            AttributeColumn column = container.getAttributeModel().getNodeTable().getColumn(fore);\n+            AttributeColumn column = container.getAttributeModel().getEdgeTable().getColumn(fore);\n             if (column != null) {\n                 try {\n                     Object val = column.getType().parse(value);\n", "projectName": "gephi.gephi", "bugLineNum": 484, "bugNodeStartChar": 20132, "bugNodeLength": 44, "fixLineNum": 484, "fixNodeStartChar": 20132, "fixNodeLength": 44, "sourceBeforeFix": "container.getAttributeModel().getNodeTable()", "sourceAfterFix": "container.getAttributeModel().getEdgeTable()"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "8a9e1bcbff1ff10cf122b23b3a1aa437f02a2086", "fixCommitParentSHA1": "b6fc25ba45d751940df624f8af63b7ef156ace83", "bugFilePath": "PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java", "fixPatch": "diff --git a/PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java b/PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java\nindex c94de3a..f278275 100644\n--- a/PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java\n+++ b/PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java\n@@ -265,7 +265,7 @@\n         org.gephi.graph.api.TextData sourceEdgeTextData = sourceEdgeData.getTextData();\n \n         String label = sourceEdgeData.getLabel();\n-        if (sourceEdgeTextData != null && sourceEdgeTextData.getText() != null && sourceEdgeTextData.getText().isEmpty() && sourceEdgeTextData.isVisible()) {\n+        if (sourceEdgeTextData != null && sourceEdgeTextData.getText() != null && !sourceEdgeTextData.getText().isEmpty() && sourceEdgeTextData.isVisible()) {\n             label = sourceEdgeTextData.getText();\n         } else if (sourceEdgeTextData != null && !sourceEdgeTextData.isVisible()) {\n             label = null;\n@@ -302,7 +302,7 @@\n         org.gephi.graph.api.TextData sourceEdgeTextData = sourceEdgeData.getTextData();\n \n         String label = sourceEdgeData.getLabel();\n-        if (sourceEdgeTextData != null && sourceEdgeTextData.getText() != null && sourceEdgeTextData.getText().isEmpty() && sourceEdgeTextData.isVisible()) {\n+        if (sourceEdgeTextData != null && sourceEdgeTextData.getText() != null && !sourceEdgeTextData.getText().isEmpty() && sourceEdgeTextData.isVisible()) {\n             label = sourceEdgeTextData.getText();\n         } else if (sourceEdgeTextData != null && !sourceEdgeTextData.isVisible()) {\n             label = null;\n@@ -339,7 +339,7 @@\n         org.gephi.graph.api.TextData sourceEdgeTextData = sourceEdgeData.getTextData();\n \n         String label = sourceEdgeData.getLabel();\n-        if (sourceEdgeTextData != null && sourceEdgeTextData.getText() != null && sourceEdgeTextData.getText().isEmpty() && sourceEdgeTextData.isVisible()) {\n+        if (sourceEdgeTextData != null && sourceEdgeTextData.getText() != null && !sourceEdgeTextData.getText().isEmpty() && sourceEdgeTextData.isVisible()) {\n             label = sourceEdgeTextData.getText();\n         } else if (sourceEdgeTextData != null && !sourceEdgeTextData.isVisible()) {\n             label = null;\n", "projectName": "gephi.gephi", "bugLineNum": 268, "bugNodeStartChar": 10000, "bugNodeLength": 38, "fixLineNum": 268, "fixNodeStartChar": 10000, "fixNodeLength": 39, "sourceBeforeFix": "sourceEdgeTextData.getText().isEmpty()", "sourceAfterFix": "!sourceEdgeTextData.getText().isEmpty()"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "8a9e1bcbff1ff10cf122b23b3a1aa437f02a2086", "fixCommitParentSHA1": "b6fc25ba45d751940df624f8af63b7ef156ace83", "bugFilePath": "PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java", "fixPatch": "diff --git a/PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java b/PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java\nindex c94de3a..f278275 100644\n--- a/PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java\n+++ b/PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java\n@@ -265,7 +265,7 @@\n         org.gephi.graph.api.TextData sourceEdgeTextData = sourceEdgeData.getTextData();\n \n         String label = sourceEdgeData.getLabel();\n-        if (sourceEdgeTextData != null && sourceEdgeTextData.getText() != null && sourceEdgeTextData.getText().isEmpty() && sourceEdgeTextData.isVisible()) {\n+        if (sourceEdgeTextData != null && sourceEdgeTextData.getText() != null && !sourceEdgeTextData.getText().isEmpty() && sourceEdgeTextData.isVisible()) {\n             label = sourceEdgeTextData.getText();\n         } else if (sourceEdgeTextData != null && !sourceEdgeTextData.isVisible()) {\n             label = null;\n@@ -302,7 +302,7 @@\n         org.gephi.graph.api.TextData sourceEdgeTextData = sourceEdgeData.getTextData();\n \n         String label = sourceEdgeData.getLabel();\n-        if (sourceEdgeTextData != null && sourceEdgeTextData.getText() != null && sourceEdgeTextData.getText().isEmpty() && sourceEdgeTextData.isVisible()) {\n+        if (sourceEdgeTextData != null && sourceEdgeTextData.getText() != null && !sourceEdgeTextData.getText().isEmpty() && sourceEdgeTextData.isVisible()) {\n             label = sourceEdgeTextData.getText();\n         } else if (sourceEdgeTextData != null && !sourceEdgeTextData.isVisible()) {\n             label = null;\n@@ -339,7 +339,7 @@\n         org.gephi.graph.api.TextData sourceEdgeTextData = sourceEdgeData.getTextData();\n \n         String label = sourceEdgeData.getLabel();\n-        if (sourceEdgeTextData != null && sourceEdgeTextData.getText() != null && sourceEdgeTextData.getText().isEmpty() && sourceEdgeTextData.isVisible()) {\n+        if (sourceEdgeTextData != null && sourceEdgeTextData.getText() != null && !sourceEdgeTextData.getText().isEmpty() && sourceEdgeTextData.isVisible()) {\n             label = sourceEdgeTextData.getText();\n         } else if (sourceEdgeTextData != null && !sourceEdgeTextData.isVisible()) {\n             label = null;\n", "projectName": "gephi.gephi", "bugLineNum": 305, "bugNodeStartChar": 11557, "bugNodeLength": 38, "fixLineNum": 305, "fixNodeStartChar": 11557, "fixNodeLength": 39, "sourceBeforeFix": "sourceEdgeTextData.getText().isEmpty()", "sourceAfterFix": "!sourceEdgeTextData.getText().isEmpty()"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "8a9e1bcbff1ff10cf122b23b3a1aa437f02a2086", "fixCommitParentSHA1": "b6fc25ba45d751940df624f8af63b7ef156ace83", "bugFilePath": "PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java", "fixPatch": "diff --git a/PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java b/PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java\nindex c94de3a..f278275 100644\n--- a/PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java\n+++ b/PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java\n@@ -265,7 +265,7 @@\n         org.gephi.graph.api.TextData sourceEdgeTextData = sourceEdgeData.getTextData();\n \n         String label = sourceEdgeData.getLabel();\n-        if (sourceEdgeTextData != null && sourceEdgeTextData.getText() != null && sourceEdgeTextData.getText().isEmpty() && sourceEdgeTextData.isVisible()) {\n+        if (sourceEdgeTextData != null && sourceEdgeTextData.getText() != null && !sourceEdgeTextData.getText().isEmpty() && sourceEdgeTextData.isVisible()) {\n             label = sourceEdgeTextData.getText();\n         } else if (sourceEdgeTextData != null && !sourceEdgeTextData.isVisible()) {\n             label = null;\n@@ -302,7 +302,7 @@\n         org.gephi.graph.api.TextData sourceEdgeTextData = sourceEdgeData.getTextData();\n \n         String label = sourceEdgeData.getLabel();\n-        if (sourceEdgeTextData != null && sourceEdgeTextData.getText() != null && sourceEdgeTextData.getText().isEmpty() && sourceEdgeTextData.isVisible()) {\n+        if (sourceEdgeTextData != null && sourceEdgeTextData.getText() != null && !sourceEdgeTextData.getText().isEmpty() && sourceEdgeTextData.isVisible()) {\n             label = sourceEdgeTextData.getText();\n         } else if (sourceEdgeTextData != null && !sourceEdgeTextData.isVisible()) {\n             label = null;\n@@ -339,7 +339,7 @@\n         org.gephi.graph.api.TextData sourceEdgeTextData = sourceEdgeData.getTextData();\n \n         String label = sourceEdgeData.getLabel();\n-        if (sourceEdgeTextData != null && sourceEdgeTextData.getText() != null && sourceEdgeTextData.getText().isEmpty() && sourceEdgeTextData.isVisible()) {\n+        if (sourceEdgeTextData != null && sourceEdgeTextData.getText() != null && !sourceEdgeTextData.getText().isEmpty() && sourceEdgeTextData.isVisible()) {\n             label = sourceEdgeTextData.getText();\n         } else if (sourceEdgeTextData != null && !sourceEdgeTextData.isVisible()) {\n             label = null;\n", "projectName": "gephi.gephi", "bugLineNum": 342, "bugNodeStartChar": 13099, "bugNodeLength": 38, "fixLineNum": 342, "fixNodeStartChar": 13099, "fixNodeLength": 39, "sourceBeforeFix": "sourceEdgeTextData.getText().isEmpty()", "sourceAfterFix": "!sourceEdgeTextData.getText().isEmpty()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "98e7fe490c342853f703b473cc6bf19fb175b7db", "fixCommitParentSHA1": "d38e41f9c55acd76241a42993fa66efc73977e1b", "bugFilePath": "FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java", "fixPatch": "diff --git a/FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java b/FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java\nindex ecdbe0f..4278a08 100644\n--- a/FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java\n+++ b/FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java\n@@ -90,7 +90,7 @@\n             for (Node n : graph.getNodes()) {\n                 if (n.getNodeData().getId().toLowerCase().contains(str)) {\n                     nodes.add(n);\n-                } else if (n.getNodeData().getLabel().toLowerCase().contains(str)) {\n+                } else if ((n.getNodeData().getLabel() != null) && n.getNodeData().getLabel().toLowerCase().contains(str)) {\n                     nodes.add(n);\n                 }\n             }\n@@ -130,7 +130,7 @@\n         }\n \n         public String getName() {\n-            return NbBundle.getMessage(DegreeRangeBuilder.class, \"EgoBuilder.name\");\n+            return NbBundle.getMessage(EgoBuilder.class, \"EgoBuilder.name\");\n         }\n \n         public FilterProperty[] getProperties() {\n", "projectName": "gephi.gephi", "bugLineNum": 133, "bugNodeStartChar": 3954, "bugNodeLength": 24, "fixLineNum": 133, "fixNodeStartChar": 3954, "fixNodeLength": 16, "sourceBeforeFix": "DegreeRangeBuilder.class", "sourceAfterFix": "EgoBuilder.class"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "0c8811ff956adbf3c3c01f9f696da026b2ba685c", "fixCommitParentSHA1": "17369db71fa86ddfc628d79b552f099f937b4fbb", "bugFilePath": "PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java", "fixPatch": "diff --git a/PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java b/PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java\nindex bab8752..c94de3a 100644\n--- a/PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java\n+++ b/PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java\n@@ -200,7 +200,7 @@\n         String label = sourceNodeData.getLabel();\n         if (sourceNodeTextData != null && sourceNodeTextData.getText() != null && !sourceNodeTextData.getText().isEmpty() && sourceNodeTextData.isVisible()) {\n             label = sourceNodeTextData.getText();\n-        } else if(sourceNodeData!=null && !sourceNodeTextData.isVisible()) {\n+        } else if (sourceNodeTextData != null && !sourceNodeTextData.isVisible()) {\n             label = null;\n         }\n \n", "projectName": "gephi.gephi", "bugLineNum": 203, "bugNodeStartChar": 7539, "bugNodeLength": 20, "fixLineNum": 203, "fixNodeStartChar": 7540, "fixNodeLength": 26, "sourceBeforeFix": "sourceNodeData != null", "sourceAfterFix": "sourceNodeTextData != null"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "0c8811ff956adbf3c3c01f9f696da026b2ba685c", "fixCommitParentSHA1": "17369db71fa86ddfc628d79b552f099f937b4fbb", "bugFilePath": "PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java", "fixPatch": "diff --git a/PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java b/PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java\nindex bab8752..c94de3a 100644\n--- a/PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java\n+++ b/PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java\n@@ -200,7 +200,7 @@\n         String label = sourceNodeData.getLabel();\n         if (sourceNodeTextData != null && sourceNodeTextData.getText() != null && !sourceNodeTextData.getText().isEmpty() && sourceNodeTextData.isVisible()) {\n             label = sourceNodeTextData.getText();\n-        } else if(sourceNodeData!=null && !sourceNodeTextData.isVisible()) {\n+        } else if (sourceNodeTextData != null && !sourceNodeTextData.isVisible()) {\n             label = null;\n         }\n \n", "projectName": "gephi.gephi", "bugLineNum": 203, "bugNodeStartChar": 7539, "bugNodeLength": 20, "fixLineNum": 203, "fixNodeStartChar": 7540, "fixNodeLength": 26, "sourceBeforeFix": "sourceNodeData != null", "sourceAfterFix": "sourceNodeTextData != null"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "c9e0838e7d5852ede0d58e3d69e70d7c337f78da", "fixCommitParentSHA1": "d1257681555435fd2d11e18dd7aa15e88fc309d8", "bugFilePath": "PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java", "fixPatch": "diff --git a/PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java b/PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java\nindex 9ef404d..41122b7 100644\n--- a/PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java\n+++ b/PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java\n@@ -167,7 +167,7 @@\n         org.gephi.graph.api.TextData sourceNodeTextData = sourceNodeData.getTextData();\n \n         String label = sourceNodeData.getLabel();\n-        if (sourceNodeTextData != null && sourceNodeTextData.getText() != null && sourceNodeTextData.getText().isEmpty()) {\n+        if (sourceNodeTextData != null && sourceNodeTextData.getText() != null && !sourceNodeTextData.getText().isEmpty()) {\n             label = sourceNodeTextData.getText();\n         }\n \n", "projectName": "gephi.gephi", "bugLineNum": 170, "bugNodeStartChar": 5599, "bugNodeLength": 38, "fixLineNum": 170, "fixNodeStartChar": 5599, "fixNodeLength": 39, "sourceBeforeFix": "sourceNodeTextData.getText().isEmpty()", "sourceAfterFix": "!sourceNodeTextData.getText().isEmpty()"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "afb5512b0d89927ef716b655e8c55b1093110e02", "fixCommitParentSHA1": "2ddfcf7cd7229a36242e45febfeda1e1182a35e3", "bugFilePath": "PartitionAPI/src/org/gephi/partition/impl/PartitionFactory.java", "fixPatch": "diff --git a/PartitionAPI/src/org/gephi/partition/impl/PartitionFactory.java b/PartitionAPI/src/org/gephi/partition/impl/PartitionFactory.java\nindex ad2d9e2..0e85330 100644\n--- a/PartitionAPI/src/org/gephi/partition/impl/PartitionFactory.java\n+++ b/PartitionAPI/src/org/gephi/partition/impl/PartitionFactory.java\n@@ -63,7 +63,7 @@\n                 }\n                 values.add(value);\n             }\n-            if (values.size() < 2f / 3f * nonNullvalues) {      //If #different values is < 2:3 of total non-null values\n+            if (values.size() < 9f / 10f * nonNullvalues) {      //If #different values is < 2:3 of total non-null values\n                 return true;\n             }\n         }\n", "projectName": "gephi.gephi", "bugLineNum": 66, "bugNodeStartChar": 2314, "bugNodeLength": 7, "fixLineNum": 66, "fixNodeStartChar": 2314, "fixNodeLength": 8, "sourceBeforeFix": "2f / 3f", "sourceAfterFix": "9f / 10f"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "72510eeab69456ab24afbf86dcd5db46e09aa2ab", "fixCommitParentSHA1": "8535b0c8f6ff071fd51d6d2a068263527858b0fa", "bugFilePath": "StatisticsAPI/src/org/gephi/statistics/StatisticsModelImpl.java", "fixPatch": "diff --git a/StatisticsAPI/src/org/gephi/statistics/StatisticsModelImpl.java b/StatisticsAPI/src/org/gephi/statistics/StatisticsModelImpl.java\nindex 9bd201e..473fe10 100644\n--- a/StatisticsAPI/src/org/gephi/statistics/StatisticsModelImpl.java\n+++ b/StatisticsAPI/src/org/gephi/statistics/StatisticsModelImpl.java\n@@ -165,7 +165,7 @@\n                 Element reportE = document.createElement(\"report\");\n                 reportE.setAttribute(\"class\", entry.getKey().getName());\n                 reportE.setAttribute(\"value\", entry.getValue());\n-                resultsE.appendChild(reportE);\n+                reportsE.appendChild(reportE);\n             }\n         }\n         modelE.appendChild(reportsE);\n", "projectName": "gephi.gephi", "bugLineNum": 168, "bugNodeStartChar": 5788, "bugNodeLength": 29, "fixLineNum": 168, "fixNodeStartChar": 5788, "fixNodeLength": 29, "sourceBeforeFix": "resultsE.appendChild(reportE)", "sourceAfterFix": "reportsE.appendChild(reportE)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "72510eeab69456ab24afbf86dcd5db46e09aa2ab", "fixCommitParentSHA1": "8535b0c8f6ff071fd51d6d2a068263527858b0fa", "bugFilePath": "StatisticsAPI/src/org/gephi/statistics/StatisticsModelImpl.java", "fixPatch": "diff --git a/StatisticsAPI/src/org/gephi/statistics/StatisticsModelImpl.java b/StatisticsAPI/src/org/gephi/statistics/StatisticsModelImpl.java\nindex 9bd201e..473fe10 100644\n--- a/StatisticsAPI/src/org/gephi/statistics/StatisticsModelImpl.java\n+++ b/StatisticsAPI/src/org/gephi/statistics/StatisticsModelImpl.java\n@@ -165,7 +165,7 @@\n                 Element reportE = document.createElement(\"report\");\n                 reportE.setAttribute(\"class\", entry.getKey().getName());\n                 reportE.setAttribute(\"value\", entry.getValue());\n-                resultsE.appendChild(reportE);\n+                reportsE.appendChild(reportE);\n             }\n         }\n         modelE.appendChild(reportsE);\n", "projectName": "gephi.gephi", "bugLineNum": 168, "bugNodeStartChar": 5788, "bugNodeLength": 29, "fixLineNum": 168, "fixNodeStartChar": 5788, "fixNodeLength": 29, "sourceBeforeFix": "resultsE.appendChild(reportE)", "sourceAfterFix": "reportsE.appendChild(reportE)"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "c187c614375e49d10ca703a2313c1a53a51e90d9", "fixCommitParentSHA1": "c592d4acc46cff98a383ebf53df3ba73c388c0b4", "bugFilePath": "VisualizationModule/src/org/gephi/visualization/bridge/DHNSDataBridge.java", "fixPatch": "diff --git a/VisualizationModule/src/org/gephi/visualization/bridge/DHNSDataBridge.java b/VisualizationModule/src/org/gephi/visualization/bridge/DHNSDataBridge.java\nindex 3703b72..5da525e 100644\n--- a/VisualizationModule/src/org/gephi/visualization/bridge/DHNSDataBridge.java\n+++ b/VisualizationModule/src/org/gephi/visualization/bridge/DHNSDataBridge.java\n@@ -209,7 +209,7 @@\n                     arrowObj.setCacheMarker(cacheMarker);\n                 }\n             } else {\n-                if (!undirected && vizConfig.isShowArrows() && !edge.isSelfLoop()) {\n+                if (!undirected && vizConfig.isShowArrows() && !edge.isSelfLoop() && edge.isDirected()) {\n                     ModelImpl arrowObj = ((Edge2dModel) obj).getArrow();\n                     arrowObj.setCacheMarker(cacheMarker);\n                 }\n", "projectName": "gephi.gephi", "bugLineNum": 212, "bugNodeStartChar": 8302, "bugNodeLength": 61, "fixLineNum": 212, "fixNodeStartChar": 8302, "fixNodeLength": 82, "sourceBeforeFix": "!undirected && vizConfig.isShowArrows() && !edge.isSelfLoop()", "sourceAfterFix": "!undirected && vizConfig.isShowArrows() && !edge.isSelfLoop()&& edge.isDirected()"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "e0db0f19bd1aa3c7ce48ed02ed99b3ea950e1cee", "fixCommitParentSHA1": "64b750ac64e88477b536a9062b42cab2f0c85329", "bugFilePath": "ProcessorPlugin/src/org/gephi/io/processor/plugin/DynamicProcessor.java", "fixPatch": "diff --git a/ProcessorPlugin/src/org/gephi/io/processor/plugin/DynamicProcessor.java b/ProcessorPlugin/src/org/gephi/io/processor/plugin/DynamicProcessor.java\nindex 850887c..54fceca 100644\n--- a/ProcessorPlugin/src/org/gephi/io/processor/plugin/DynamicProcessor.java\n+++ b/ProcessorPlugin/src/org/gephi/io/processor/plugin/DynamicProcessor.java\n@@ -231,7 +231,7 @@\n \n             Double[] toAdd = new Double[]{toRemove[0], excludingPoint};\n \n-            return new TimeInterval(source, toAdd[0], toAdd[1], toRemove[0], toRemove[0]);\n+            return new TimeInterval(source, toAdd[0], toAdd[1], toRemove[0], toRemove[1]);\n         }\n         return source;\n \n", "projectName": "gephi.gephi", "bugLineNum": 234, "bugNodeStartChar": 9834, "bugNodeLength": 11, "fixLineNum": 234, "fixNodeStartChar": 9834, "fixNodeLength": 11, "sourceBeforeFix": "toRemove[0]", "sourceAfterFix": "toRemove[1]"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "4cd1f08314076c86ecb4d1e8699cdcbbaba6b567", "fixCommitParentSHA1": "0a9129cbc57187d61b273c10c49b03026a7047e0", "bugFilePath": "ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGEXF2.java", "fixPatch": "diff --git a/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGEXF2.java b/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGEXF2.java\nindex 19e8781..a414025 100644\n--- a/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGEXF2.java\n+++ b/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGEXF2.java\n@@ -748,9 +748,9 @@\n \n             //Type\n             AttributeType attributeType = AttributeType.STRING;\n-            if (type.equalsIgnoreCase(\"boolean\")) {\n+            if (type.equalsIgnoreCase(\"boolean\") || type.equalsIgnoreCase(\"bool\")) {\n                 attributeType = dynamic ? AttributeType.DYNAMIC_BOOLEAN : AttributeType.BOOLEAN;\n-            } else if (type.equalsIgnoreCase(\"integer\")) {\n+            } else if (type.equalsIgnoreCase(\"integer\") || type.equalsIgnoreCase(\"int\")) {\n                 attributeType = dynamic ? AttributeType.DYNAMIC_INT : AttributeType.INT;\n             } else if (type.equalsIgnoreCase(\"long\")) {\n                 attributeType = dynamic ? AttributeType.DYNAMIC_LONG : AttributeType.LONG;\n", "projectName": "gephi.gephi", "bugLineNum": 751, "bugNodeStartChar": 31199, "bugNodeLength": 32, "fixLineNum": 751, "fixNodeStartChar": 31199, "fixNodeLength": 65, "sourceBeforeFix": "type.equalsIgnoreCase(\"boolean\")", "sourceAfterFix": "type.equalsIgnoreCase(\"boolean\") || type.equalsIgnoreCase(\"bool\")"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "4cd1f08314076c86ecb4d1e8699cdcbbaba6b567", "fixCommitParentSHA1": "0a9129cbc57187d61b273c10c49b03026a7047e0", "bugFilePath": "ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGEXF2.java", "fixPatch": "diff --git a/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGEXF2.java b/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGEXF2.java\nindex 19e8781..a414025 100644\n--- a/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGEXF2.java\n+++ b/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGEXF2.java\n@@ -748,9 +748,9 @@\n \n             //Type\n             AttributeType attributeType = AttributeType.STRING;\n-            if (type.equalsIgnoreCase(\"boolean\")) {\n+            if (type.equalsIgnoreCase(\"boolean\") || type.equalsIgnoreCase(\"bool\")) {\n                 attributeType = dynamic ? AttributeType.DYNAMIC_BOOLEAN : AttributeType.BOOLEAN;\n-            } else if (type.equalsIgnoreCase(\"integer\")) {\n+            } else if (type.equalsIgnoreCase(\"integer\") || type.equalsIgnoreCase(\"int\")) {\n                 attributeType = dynamic ? AttributeType.DYNAMIC_INT : AttributeType.INT;\n             } else if (type.equalsIgnoreCase(\"long\")) {\n                 attributeType = dynamic ? AttributeType.DYNAMIC_LONG : AttributeType.LONG;\n", "projectName": "gephi.gephi", "bugLineNum": 753, "bugNodeStartChar": 31355, "bugNodeLength": 32, "fixLineNum": 753, "fixNodeStartChar": 31355, "fixNodeLength": 64, "sourceBeforeFix": "type.equalsIgnoreCase(\"integer\")", "sourceAfterFix": "type.equalsIgnoreCase(\"integer\") || type.equalsIgnoreCase(\"int\")"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "8b0fec4451e8147bbe5bdbf29d235744c9aca01a", "fixCommitParentSHA1": "ead4c3a90e18ae863fb73be984f1448b8f701a7e", "bugFilePath": "ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGraphML.java", "fixPatch": "diff --git a/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGraphML.java b/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGraphML.java\nindex 283a029..2fb28bc 100644\n--- a/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGraphML.java\n+++ b/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGraphML.java\n@@ -202,7 +202,7 @@\n             positionKey2E.setAttribute(\"attr.type\", \"float\");\n             positionKey2E.setAttribute(\"for\", \"node\");\n             root.appendChild(positionKey2E);\n-            if (minZ != 0f && maxZ != 0f) {\n+            if (minZ != 0f || maxZ != 0f) {\n                 Element positionKey3E = document.createElement(\"key\");\n                 positionKey3E.setAttribute(\"id\", \"z\");\n                 positionKey3E.setAttribute(\"attr.name\", \"z\");\n@@ -388,7 +388,7 @@\n             nodeE.appendChild(positionXE);\n             Element positionYE = createNodePositionY(document, n);\n             nodeE.appendChild(positionYE);\n-            if (minZ != 0f && maxZ != 0f) {\n+            if (minZ != 0f || maxZ != 0f) {\n                 Element positionZE = createNodePositionZ(document, n);\n                 nodeE.appendChild(positionZE);\n             }\n", "projectName": "gephi.gephi", "bugLineNum": 205, "bugNodeStartChar": 7676, "bugNodeLength": 24, "fixLineNum": 205, "fixNodeStartChar": 7676, "fixNodeLength": 24, "sourceBeforeFix": "minZ != 0f && maxZ != 0f", "sourceAfterFix": "minZ != 0f || maxZ != 0f"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "8b0fec4451e8147bbe5bdbf29d235744c9aca01a", "fixCommitParentSHA1": "ead4c3a90e18ae863fb73be984f1448b8f701a7e", "bugFilePath": "ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGraphML.java", "fixPatch": "diff --git a/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGraphML.java b/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGraphML.java\nindex 283a029..2fb28bc 100644\n--- a/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGraphML.java\n+++ b/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGraphML.java\n@@ -202,7 +202,7 @@\n             positionKey2E.setAttribute(\"attr.type\", \"float\");\n             positionKey2E.setAttribute(\"for\", \"node\");\n             root.appendChild(positionKey2E);\n-            if (minZ != 0f && maxZ != 0f) {\n+            if (minZ != 0f || maxZ != 0f) {\n                 Element positionKey3E = document.createElement(\"key\");\n                 positionKey3E.setAttribute(\"id\", \"z\");\n                 positionKey3E.setAttribute(\"attr.name\", \"z\");\n@@ -388,7 +388,7 @@\n             nodeE.appendChild(positionXE);\n             Element positionYE = createNodePositionY(document, n);\n             nodeE.appendChild(positionYE);\n-            if (minZ != 0f && maxZ != 0f) {\n+            if (minZ != 0f || maxZ != 0f) {\n                 Element positionZE = createNodePositionZ(document, n);\n                 nodeE.appendChild(positionZE);\n             }\n", "projectName": "gephi.gephi", "bugLineNum": 391, "bugNodeStartChar": 14977, "bugNodeLength": 24, "fixLineNum": 391, "fixNodeStartChar": 14977, "fixNodeLength": 24, "sourceBeforeFix": "minZ != 0f && maxZ != 0f", "sourceAfterFix": "minZ != 0f || maxZ != 0f"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "be32765c0ef5c0c0b48f8c649e971595a439013a", "fixCommitParentSHA1": "0ccf4b5d33513e0071ab3b669856903ea7f6a8be", "bugFilePath": "VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java", "fixPatch": "diff --git a/VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java b/VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java\nindex 586a53d..30c45df 100644\n--- a/VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java\n+++ b/VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java\n@@ -268,10 +268,10 @@\n         if (sizeModeClass.equals(\"FixedSizeMode\")) {\n //            sizeMode = new FixedSizeMode(this);\n             sizeMode = VizController.getInstance().getTextManager().getSizeModes()[0];\n-        } else if (colorModeClass.equals(\"ProportionalSizeMode\")) {\n+        } else if (sizeModeClass.equals(\"ProportionalSizeMode\")) {\n //            sizeMode = new ProportionalSizeMode(this);\n             sizeMode = VizController.getInstance().getTextManager().getSizeModes()[2];\n-        } else if (colorModeClass.equals(\"ScaledSizeMode\")) {\n+        } else if (sizeModeClass.equals(\"ScaledSizeMode\")) {\n //            sizeMode = new ScaledSizeMode(this);\n             sizeMode = VizController.getInstance().getTextManager().getSizeModes()[1];\n         }\n", "projectName": "gephi.gephi", "bugLineNum": 271, "bugNodeStartChar": 9428, "bugNodeLength": 45, "fixLineNum": 271, "fixNodeStartChar": 9428, "fixNodeLength": 44, "sourceBeforeFix": "colorModeClass.equals(\"ProportionalSizeMode\")", "sourceAfterFix": "sizeModeClass.equals(\"ProportionalSizeMode\")"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "be32765c0ef5c0c0b48f8c649e971595a439013a", "fixCommitParentSHA1": "0ccf4b5d33513e0071ab3b669856903ea7f6a8be", "bugFilePath": "VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java", "fixPatch": "diff --git a/VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java b/VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java\nindex 586a53d..30c45df 100644\n--- a/VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java\n+++ b/VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java\n@@ -268,10 +268,10 @@\n         if (sizeModeClass.equals(\"FixedSizeMode\")) {\n //            sizeMode = new FixedSizeMode(this);\n             sizeMode = VizController.getInstance().getTextManager().getSizeModes()[0];\n-        } else if (colorModeClass.equals(\"ProportionalSizeMode\")) {\n+        } else if (sizeModeClass.equals(\"ProportionalSizeMode\")) {\n //            sizeMode = new ProportionalSizeMode(this);\n             sizeMode = VizController.getInstance().getTextManager().getSizeModes()[2];\n-        } else if (colorModeClass.equals(\"ScaledSizeMode\")) {\n+        } else if (sizeModeClass.equals(\"ScaledSizeMode\")) {\n //            sizeMode = new ScaledSizeMode(this);\n             sizeMode = VizController.getInstance().getTextManager().getSizeModes()[1];\n         }\n", "projectName": "gephi.gephi", "bugLineNum": 271, "bugNodeStartChar": 9428, "bugNodeLength": 45, "fixLineNum": 271, "fixNodeStartChar": 9428, "fixNodeLength": 44, "sourceBeforeFix": "colorModeClass.equals(\"ProportionalSizeMode\")", "sourceAfterFix": "sizeModeClass.equals(\"ProportionalSizeMode\")"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "be32765c0ef5c0c0b48f8c649e971595a439013a", "fixCommitParentSHA1": "0ccf4b5d33513e0071ab3b669856903ea7f6a8be", "bugFilePath": "VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java", "fixPatch": "diff --git a/VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java b/VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java\nindex 586a53d..30c45df 100644\n--- a/VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java\n+++ b/VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java\n@@ -268,10 +268,10 @@\n         if (sizeModeClass.equals(\"FixedSizeMode\")) {\n //            sizeMode = new FixedSizeMode(this);\n             sizeMode = VizController.getInstance().getTextManager().getSizeModes()[0];\n-        } else if (colorModeClass.equals(\"ProportionalSizeMode\")) {\n+        } else if (sizeModeClass.equals(\"ProportionalSizeMode\")) {\n //            sizeMode = new ProportionalSizeMode(this);\n             sizeMode = VizController.getInstance().getTextManager().getSizeModes()[2];\n-        } else if (colorModeClass.equals(\"ScaledSizeMode\")) {\n+        } else if (sizeModeClass.equals(\"ScaledSizeMode\")) {\n //            sizeMode = new ScaledSizeMode(this);\n             sizeMode = VizController.getInstance().getTextManager().getSizeModes()[1];\n         }\n", "projectName": "gephi.gephi", "bugLineNum": 274, "bugNodeStartChar": 9640, "bugNodeLength": 39, "fixLineNum": 274, "fixNodeStartChar": 9640, "fixNodeLength": 38, "sourceBeforeFix": "colorModeClass.equals(\"ScaledSizeMode\")", "sourceAfterFix": "sizeModeClass.equals(\"ScaledSizeMode\")"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "be32765c0ef5c0c0b48f8c649e971595a439013a", "fixCommitParentSHA1": "0ccf4b5d33513e0071ab3b669856903ea7f6a8be", "bugFilePath": "VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java", "fixPatch": "diff --git a/VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java b/VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java\nindex 586a53d..30c45df 100644\n--- a/VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java\n+++ b/VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java\n@@ -268,10 +268,10 @@\n         if (sizeModeClass.equals(\"FixedSizeMode\")) {\n //            sizeMode = new FixedSizeMode(this);\n             sizeMode = VizController.getInstance().getTextManager().getSizeModes()[0];\n-        } else if (colorModeClass.equals(\"ProportionalSizeMode\")) {\n+        } else if (sizeModeClass.equals(\"ProportionalSizeMode\")) {\n //            sizeMode = new ProportionalSizeMode(this);\n             sizeMode = VizController.getInstance().getTextManager().getSizeModes()[2];\n-        } else if (colorModeClass.equals(\"ScaledSizeMode\")) {\n+        } else if (sizeModeClass.equals(\"ScaledSizeMode\")) {\n //            sizeMode = new ScaledSizeMode(this);\n             sizeMode = VizController.getInstance().getTextManager().getSizeModes()[1];\n         }\n", "projectName": "gephi.gephi", "bugLineNum": 274, "bugNodeStartChar": 9640, "bugNodeLength": 39, "fixLineNum": 274, "fixNodeStartChar": 9640, "fixNodeLength": 38, "sourceBeforeFix": "colorModeClass.equals(\"ScaledSizeMode\")", "sourceAfterFix": "sizeModeClass.equals(\"ScaledSizeMode\")"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "b3ac3b95006a90e62773cda8943c5395895b4a10", "fixCommitParentSHA1": "48ebdae48ac86b19c4db9c19d68a001849d23bd6", "bugFilePath": "VisualizationModule/src/org/gephi/visualization/apiimpl/VizConfig.java", "fixPatch": "diff --git a/VisualizationModule/src/org/gephi/visualization/apiimpl/VizConfig.java b/VisualizationModule/src/org/gephi/visualization/apiimpl/VizConfig.java\nindex 340d238..bd31220 100644\n--- a/VisualizationModule/src/org/gephi/visualization/apiimpl/VizConfig.java\n+++ b/VisualizationModule/src/org/gephi/visualization/apiimpl/VizConfig.java\n@@ -125,7 +125,7 @@\n     public static final Color DEFAULT_NODE_SELECTED_UNIQUE_COLOR = new Color(0.8f, 0.2f, 0.2f);\n     public static final Color DEFAULT_NODE_NEIGHBOR_SELECTED_UNIQUE_COLOR = new Color(0.2f, 1f, 0.3f);\n     public static final int DEFAULT_OCTREE_DEPTH = 5;\n-    public static final int DEFAULT_OCTREE_WIDTH = 10000;\n+    public static final int DEFAULT_OCTREE_WIDTH = 50000;\n     public static final boolean DEFAULT_CLEAN_DELETED_MODELS = true;\n     public static final boolean DEFAULT_LABEL_MIPMAP = true;\n     public static final boolean DEFAULT_LABEL_ANTIALIASED = true;\n", "projectName": "gephi.gephi", "bugLineNum": 128, "bugNodeStartChar": 8232, "bugNodeLength": 28, "fixLineNum": 128, "fixNodeStartChar": 8232, "fixNodeLength": 28, "sourceBeforeFix": "DEFAULT_OCTREE_WIDTH=10000", "sourceAfterFix": "DEFAULT_OCTREE_WIDTH=50000"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "d97570d432254fb85f8b99658aaf9892d2cedbe5", "fixCommitParentSHA1": "c4b8c5a4c633670158f95e87c104c1146a2e265a", "bugFilePath": "FiltersPlugin/src/org/gephi/filters/plugin/partition/PartitionBuilder.java", "fixPatch": "diff --git a/FiltersPlugin/src/org/gephi/filters/plugin/partition/PartitionBuilder.java b/FiltersPlugin/src/org/gephi/filters/plugin/partition/PartitionBuilder.java\nindex c53f51a..ec96ae2 100644\n--- a/FiltersPlugin/src/org/gephi/filters/plugin/partition/PartitionBuilder.java\n+++ b/FiltersPlugin/src/org/gephi/filters/plugin/partition/PartitionBuilder.java\n@@ -148,7 +148,7 @@\n         }\n     }\n \n-    public static class PartitionFilter implements Filter {\n+    public static abstract class PartitionFilter implements Filter {\n \n         private Partition partition;\n         private FilterProperty[] filterProperties;\n", "projectName": "gephi.gephi", "bugLineNum": 151, "bugNodeStartChar": 5083, "bugNodeLength": 4321, "fixLineNum": 151, "fixNodeStartChar": 5083, "fixNodeLength": 4330, "sourceBeforeFix": "9", "sourceAfterFix": "1033"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "c60610c399277d16c94872e2279f861eb8ccd9b1", "fixCommitParentSHA1": "57449181445da09713b55f6424befee33b22c1ef", "bugFilePath": "DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java", "fixPatch": "diff --git a/DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java b/DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java\nindex 70cf4d1..64fb1b6 100644\n--- a/DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java\n+++ b/DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java\n@@ -175,7 +175,7 @@\n             }\n \n             //Execute task\n-            final String containerSource = \"Stream \" + importer;\n+            final String containerSource = \"Stream \" + importerName;\n             executor.execute(task, new Runnable() {\n \n                 public void run() {\n@@ -234,7 +234,7 @@\n             }\n \n             //Execute task\n-            final String containerSource = \"Stream \" + importer;\n+            final String containerSource = \"Stream \" + importerName;\n             executor.execute(task, new Runnable() {\n \n                 public void run() {\n", "projectName": "gephi.gephi", "bugLineNum": 178, "bugNodeStartChar": 7436, "bugNodeLength": 20, "fixLineNum": 178, "fixNodeStartChar": 7436, "fixNodeLength": 24, "sourceBeforeFix": "\"Stream \" + importer", "sourceAfterFix": "\"Stream \" + importerName"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "c60610c399277d16c94872e2279f861eb8ccd9b1", "fixCommitParentSHA1": "57449181445da09713b55f6424befee33b22c1ef", "bugFilePath": "DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java", "fixPatch": "diff --git a/DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java b/DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java\nindex 70cf4d1..64fb1b6 100644\n--- a/DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java\n+++ b/DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java\n@@ -175,7 +175,7 @@\n             }\n \n             //Execute task\n-            final String containerSource = \"Stream \" + importer;\n+            final String containerSource = \"Stream \" + importerName;\n             executor.execute(task, new Runnable() {\n \n                 public void run() {\n@@ -234,7 +234,7 @@\n             }\n \n             //Execute task\n-            final String containerSource = \"Stream \" + importer;\n+            final String containerSource = \"Stream \" + importerName;\n             executor.execute(task, new Runnable() {\n \n                 public void run() {\n", "projectName": "gephi.gephi", "bugLineNum": 178, "bugNodeStartChar": 7436, "bugNodeLength": 20, "fixLineNum": 178, "fixNodeStartChar": 7436, "fixNodeLength": 24, "sourceBeforeFix": "\"Stream \" + importer", "sourceAfterFix": "\"Stream \" + importerName"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "c60610c399277d16c94872e2279f861eb8ccd9b1", "fixCommitParentSHA1": "57449181445da09713b55f6424befee33b22c1ef", "bugFilePath": "DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java", "fixPatch": "diff --git a/DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java b/DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java\nindex 70cf4d1..64fb1b6 100644\n--- a/DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java\n+++ b/DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java\n@@ -175,7 +175,7 @@\n             }\n \n             //Execute task\n-            final String containerSource = \"Stream \" + importer;\n+            final String containerSource = \"Stream \" + importerName;\n             executor.execute(task, new Runnable() {\n \n                 public void run() {\n@@ -234,7 +234,7 @@\n             }\n \n             //Execute task\n-            final String containerSource = \"Stream \" + importer;\n+            final String containerSource = \"Stream \" + importerName;\n             executor.execute(task, new Runnable() {\n \n                 public void run() {\n", "projectName": "gephi.gephi", "bugLineNum": 237, "bugNodeStartChar": 9971, "bugNodeLength": 20, "fixLineNum": 237, "fixNodeStartChar": 9971, "fixNodeLength": 24, "sourceBeforeFix": "\"Stream \" + importer", "sourceAfterFix": "\"Stream \" + importerName"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "c60610c399277d16c94872e2279f861eb8ccd9b1", "fixCommitParentSHA1": "57449181445da09713b55f6424befee33b22c1ef", "bugFilePath": "DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java", "fixPatch": "diff --git a/DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java b/DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java\nindex 70cf4d1..64fb1b6 100644\n--- a/DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java\n+++ b/DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java\n@@ -175,7 +175,7 @@\n             }\n \n             //Execute task\n-            final String containerSource = \"Stream \" + importer;\n+            final String containerSource = \"Stream \" + importerName;\n             executor.execute(task, new Runnable() {\n \n                 public void run() {\n@@ -234,7 +234,7 @@\n             }\n \n             //Execute task\n-            final String containerSource = \"Stream \" + importer;\n+            final String containerSource = \"Stream \" + importerName;\n             executor.execute(task, new Runnable() {\n \n                 public void run() {\n", "projectName": "gephi.gephi", "bugLineNum": 237, "bugNodeStartChar": 9971, "bugNodeLength": 20, "fixLineNum": 237, "fixNodeStartChar": 9971, "fixNodeLength": 24, "sourceBeforeFix": "\"Stream \" + importer", "sourceAfterFix": "\"Stream \" + importerName"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "8c267e67579f089ec1415933f9111036fc21c3bb", "fixCommitParentSHA1": "b0f9c74e291ac47332441fc25bf6d9411db12967", "bugFilePath": "DesktopProject/src/org/gephi/desktop/project/ProjectControllerUIImpl.java", "fixPatch": "diff --git a/DesktopProject/src/org/gephi/desktop/project/ProjectControllerUIImpl.java b/DesktopProject/src/org/gephi/desktop/project/ProjectControllerUIImpl.java\nindex 1218bdd..ffb53da 100644\n--- a/DesktopProject/src/org/gephi/desktop/project/ProjectControllerUIImpl.java\n+++ b/DesktopProject/src/org/gephi/desktop/project/ProjectControllerUIImpl.java\n@@ -100,7 +100,7 @@\n                 StatusDisplayer.getDefault().setStatusText(NbBundle.getMessage(ProjectControllerUIImpl.class, \"ProjectControllerUI.status.saved\", fileName));\n             }\n         };\n-        if (saveRunnable instanceof LongTask) {\n+        if (saveTask instanceof LongTask) {\n             longTaskExecutor.execute((LongTask) saveTask, saveRunnable);\n         } else {\n             longTaskExecutor.execute(null, saveRunnable);\n@@ -291,7 +291,7 @@\n                 StatusDisplayer.getDefault().setStatusText(NbBundle.getMessage(ProjectControllerUIImpl.class, \"ProjectControllerUI.status.opened\", fileName));\n             }\n         };\n-        if (loadRunnable instanceof LongTask) {\n+        if (loadTask instanceof LongTask) {\n             longTaskExecutor.execute((LongTask) loadTask, loadRunnable);\n         } else {\n             longTaskExecutor.execute(null, loadRunnable);\n", "projectName": "gephi.gephi", "bugLineNum": 103, "bugNodeStartChar": 3766, "bugNodeLength": 32, "fixLineNum": 103, "fixNodeStartChar": 3766, "fixNodeLength": 28, "sourceBeforeFix": "saveRunnable instanceof LongTask", "sourceAfterFix": "saveTask instanceof LongTask"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "8c267e67579f089ec1415933f9111036fc21c3bb", "fixCommitParentSHA1": "b0f9c74e291ac47332441fc25bf6d9411db12967", "bugFilePath": "DesktopProject/src/org/gephi/desktop/project/ProjectControllerUIImpl.java", "fixPatch": "diff --git a/DesktopProject/src/org/gephi/desktop/project/ProjectControllerUIImpl.java b/DesktopProject/src/org/gephi/desktop/project/ProjectControllerUIImpl.java\nindex 1218bdd..ffb53da 100644\n--- a/DesktopProject/src/org/gephi/desktop/project/ProjectControllerUIImpl.java\n+++ b/DesktopProject/src/org/gephi/desktop/project/ProjectControllerUIImpl.java\n@@ -100,7 +100,7 @@\n                 StatusDisplayer.getDefault().setStatusText(NbBundle.getMessage(ProjectControllerUIImpl.class, \"ProjectControllerUI.status.saved\", fileName));\n             }\n         };\n-        if (saveRunnable instanceof LongTask) {\n+        if (saveTask instanceof LongTask) {\n             longTaskExecutor.execute((LongTask) saveTask, saveRunnable);\n         } else {\n             longTaskExecutor.execute(null, saveRunnable);\n@@ -291,7 +291,7 @@\n                 StatusDisplayer.getDefault().setStatusText(NbBundle.getMessage(ProjectControllerUIImpl.class, \"ProjectControllerUI.status.opened\", fileName));\n             }\n         };\n-        if (loadRunnable instanceof LongTask) {\n+        if (loadTask instanceof LongTask) {\n             longTaskExecutor.execute((LongTask) loadTask, loadRunnable);\n         } else {\n             longTaskExecutor.execute(null, loadRunnable);\n", "projectName": "gephi.gephi", "bugLineNum": 294, "bugNodeStartChar": 11701, "bugNodeLength": 32, "fixLineNum": 294, "fixNodeStartChar": 11701, "fixNodeLength": 28, "sourceBeforeFix": "loadRunnable instanceof LongTask", "sourceAfterFix": "loadTask instanceof LongTask"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "490158fab2471fca661a14ef2127c1bebfa42dbb", "fixCommitParentSHA1": "f99dd419424b195180535e52a8a8397759e7d3ea", "bugFilePath": "DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java", "fixPatch": "diff --git a/DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java b/DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java\nindex de825a4..09e7a9c 100644\n--- a/DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java\n+++ b/DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java\n@@ -327,7 +327,7 @@\n             ImporterUI ui = controller.getUI(importer);\n             if (ui != null) {\n                 ui.setup(importer);\n-                String title = NbBundle.getMessage(DesktopImportControllerUI.class, \"DesktopImportControllerUI.spigot.ui.dialog.title\");\n+                String title = NbBundle.getMessage(DesktopImportControllerUI.class, \"DesktopImportControllerUI.spigot.ui.dialog.title\", ui.getDisplayName());\n                 JPanel panel = ui.getPanel();\n                 final DialogDescriptor dd = new DialogDescriptor(panel, title);\n                 if (panel instanceof ValidationPanel) {\n", "projectName": "gephi.gephi", "bugLineNum": 330, "bugNodeStartChar": 13893, "bugNodeLength": 104, "fixLineNum": 330, "fixNodeStartChar": 13893, "fixNodeLength": 125, "sourceBeforeFix": "NbBundle.getMessage(DesktopImportControllerUI.class,\"DesktopImportControllerUI.spigot.ui.dialog.title\")", "sourceAfterFix": "NbBundle.getMessage(DesktopImportControllerUI.class,\"DesktopImportControllerUI.spigot.ui.dialog.title\",ui.getDisplayName())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "35076f03b4d9b49d15c77bcf6d42f7463fff4397", "fixCommitParentSHA1": "b43d6eab73532db6fb7123a162c20e6c259e8243", "bugFilePath": "ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGEXF.java", "fixPatch": "diff --git a/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGEXF.java b/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGEXF.java\nindex 48b4b6c..897b733 100644\n--- a/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGEXF.java\n+++ b/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGEXF.java\n@@ -409,10 +409,10 @@\n         edgeE.setAttribute(\"source\", e.getSource().getNodeData().getId());\n         edgeE.setAttribute(\"target\", e.getTarget().getNodeData().getId());\n \n-        if( e.isDirected() && !graphModel.isDirected() ) {\n+        if( e.isDirected() && graphModel.isMixed() ) {\n             edgeE.setAttribute(\"type\", \"directed\");\n         }\n-        else if( !e.isDirected() && graphModel.isDirected() ) {\n+        else if( !e.isDirected() && graphModel.isMixed() ) {\n             edgeE.setAttribute(\"type\", \"undirected\");\n         }\n \n", "projectName": "gephi.gephi", "bugLineNum": 415, "bugNodeStartChar": 15138, "bugNodeLength": 23, "fixLineNum": 415, "fixNodeStartChar": 15138, "fixNodeLength": 20, "sourceBeforeFix": "graphModel.isDirected()", "sourceAfterFix": "graphModel.isMixed()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "35076f03b4d9b49d15c77bcf6d42f7463fff4397", "fixCommitParentSHA1": "b43d6eab73532db6fb7123a162c20e6c259e8243", "bugFilePath": "ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGEXF.java", "fixPatch": "diff --git a/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGEXF.java b/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGEXF.java\nindex 48b4b6c..897b733 100644\n--- a/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGEXF.java\n+++ b/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGEXF.java\n@@ -409,10 +409,10 @@\n         edgeE.setAttribute(\"source\", e.getSource().getNodeData().getId());\n         edgeE.setAttribute(\"target\", e.getTarget().getNodeData().getId());\n \n-        if( e.isDirected() && !graphModel.isDirected() ) {\n+        if( e.isDirected() && graphModel.isMixed() ) {\n             edgeE.setAttribute(\"type\", \"directed\");\n         }\n-        else if( !e.isDirected() && graphModel.isDirected() ) {\n+        else if( !e.isDirected() && graphModel.isMixed() ) {\n             edgeE.setAttribute(\"type\", \"undirected\");\n         }\n \n", "projectName": "gephi.gephi", "bugLineNum": 415, "bugNodeStartChar": 15138, "bugNodeLength": 23, "fixLineNum": 415, "fixNodeStartChar": 15138, "fixNodeLength": 20, "sourceBeforeFix": "graphModel.isDirected()", "sourceAfterFix": "graphModel.isMixed()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "5ee46848f4043aafcb7f8d49e7ecbf4494001653", "fixCommitParentSHA1": "79ab12d138b22b4da1537c31395d7b30b219a940", "bugFilePath": "DesktopFilters/src/org/gephi/desktop/filters/query/QueryNode.java", "fixPatch": "diff --git a/DesktopFilters/src/org/gephi/desktop/filters/query/QueryNode.java b/DesktopFilters/src/org/gephi/desktop/filters/query/QueryNode.java\nindex a860816..c4807a9 100644\n--- a/DesktopFilters/src/org/gephi/desktop/filters/query/QueryNode.java\n+++ b/DesktopFilters/src/org/gephi/desktop/filters/query/QueryNode.java\n@@ -53,7 +53,7 @@\n     }\n \n     private boolean isSelected() {\n-        return FiltersTopComponent.findInstance().getUiModel().getSelectedQuery() == query;\n+        return FiltersTopComponent.findInstance().getUiModel().getSelectedRoot() == query;\n     }\n \n \n", "projectName": "gephi.gephi", "bugLineNum": 56, "bugNodeStartChar": 1739, "bugNodeLength": 66, "fixLineNum": 56, "fixNodeStartChar": 1739, "fixNodeLength": 65, "sourceBeforeFix": "FiltersTopComponent.findInstance().getUiModel().getSelectedQuery()", "sourceAfterFix": "FiltersTopComponent.findInstance().getUiModel().getSelectedRoot()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "5ee46848f4043aafcb7f8d49e7ecbf4494001653", "fixCommitParentSHA1": "79ab12d138b22b4da1537c31395d7b30b219a940", "bugFilePath": "DesktopFilters/src/org/gephi/desktop/filters/query/QueryNode.java", "fixPatch": "diff --git a/DesktopFilters/src/org/gephi/desktop/filters/query/QueryNode.java b/DesktopFilters/src/org/gephi/desktop/filters/query/QueryNode.java\nindex a860816..c4807a9 100644\n--- a/DesktopFilters/src/org/gephi/desktop/filters/query/QueryNode.java\n+++ b/DesktopFilters/src/org/gephi/desktop/filters/query/QueryNode.java\n@@ -53,7 +53,7 @@\n     }\n \n     private boolean isSelected() {\n-        return FiltersTopComponent.findInstance().getUiModel().getSelectedQuery() == query;\n+        return FiltersTopComponent.findInstance().getUiModel().getSelectedRoot() == query;\n     }\n \n \n", "projectName": "gephi.gephi", "bugLineNum": 56, "bugNodeStartChar": 1739, "bugNodeLength": 66, "fixLineNum": 56, "fixNodeStartChar": 1739, "fixNodeLength": 65, "sourceBeforeFix": "FiltersTopComponent.findInstance().getUiModel().getSelectedQuery()", "sourceAfterFix": "FiltersTopComponent.findInstance().getUiModel().getSelectedRoot()"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "a3422173e0e6eb6f53bdde5ff73cee047285a59c", "fixCommitParentSHA1": "9aac11600e340cf9f7e2167b3dfe4618ac4076bb", "bugFilePath": "DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalGraphImpl.java", "fixPatch": "diff --git a/DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalGraphImpl.java b/DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalGraphImpl.java\nindex 3714eb5..cda3585 100644\n--- a/DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalGraphImpl.java\n+++ b/DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalGraphImpl.java\n@@ -170,7 +170,7 @@\n         checkNode(node);\n         AbstractEdge absEdge = checkEdge(edge);\n         if (absEdge.getSource(view.getViewId()) == node) {\n-            return absEdge.getTarget();\n+            return absEdge.getTarget(view.getViewId());\n         } else if (absEdge.getTarget(view.getViewId()) == node) {\n             return absEdge.getSource(view.getViewId());\n         }\n", "projectName": "gephi.gephi", "bugLineNum": 173, "bugNodeStartChar": 6283, "bugNodeLength": 19, "fixLineNum": 173, "fixNodeStartChar": 6283, "fixNodeLength": 35, "sourceBeforeFix": "absEdge.getTarget()", "sourceAfterFix": "absEdge.getTarget(view.getViewId())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "d589551ccf801e17aa74741b64b075db79a5e2a2", "fixCommitParentSHA1": "b527b7e5c469b85b7ef67143b4c2e08f2e339ac5", "bugFilePath": "LayoutPlugin/src/org/gephi/layout/plugin/scale/ScaleLayout.java", "fixPatch": "diff --git a/LayoutPlugin/src/org/gephi/layout/plugin/scale/ScaleLayout.java b/LayoutPlugin/src/org/gephi/layout/plugin/scale/ScaleLayout.java\nindex 25db7f7..ab66ce1 100644\n--- a/LayoutPlugin/src/org/gephi/layout/plugin/scale/ScaleLayout.java\n+++ b/LayoutPlugin/src/org/gephi/layout/plugin/scale/ScaleLayout.java\n@@ -54,7 +54,7 @@\n         double xMean = 0, yMean = 0;\n         for (Node n : graph.getNodes()) {\n             xMean += n.getNodeData().x();\n-            yMean += n.getNodeData().x();\n+            yMean += n.getNodeData().y();\n         }\n         xMean /= graph.getNodeCount();\n         yMean /= graph.getNodeCount();\n", "projectName": "gephi.gephi", "bugLineNum": 57, "bugNodeStartChar": 1785, "bugNodeLength": 19, "fixLineNum": 57, "fixNodeStartChar": 1785, "fixNodeLength": 19, "sourceBeforeFix": "n.getNodeData().x()", "sourceAfterFix": "n.getNodeData().y()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d589551ccf801e17aa74741b64b075db79a5e2a2", "fixCommitParentSHA1": "b527b7e5c469b85b7ef67143b4c2e08f2e339ac5", "bugFilePath": "LayoutPlugin/src/org/gephi/layout/plugin/scale/ScaleLayout.java", "fixPatch": "diff --git a/LayoutPlugin/src/org/gephi/layout/plugin/scale/ScaleLayout.java b/LayoutPlugin/src/org/gephi/layout/plugin/scale/ScaleLayout.java\nindex 25db7f7..ab66ce1 100644\n--- a/LayoutPlugin/src/org/gephi/layout/plugin/scale/ScaleLayout.java\n+++ b/LayoutPlugin/src/org/gephi/layout/plugin/scale/ScaleLayout.java\n@@ -54,7 +54,7 @@\n         double xMean = 0, yMean = 0;\n         for (Node n : graph.getNodes()) {\n             xMean += n.getNodeData().x();\n-            yMean += n.getNodeData().x();\n+            yMean += n.getNodeData().y();\n         }\n         xMean /= graph.getNodeCount();\n         yMean /= graph.getNodeCount();\n", "projectName": "gephi.gephi", "bugLineNum": 57, "bugNodeStartChar": 1785, "bugNodeLength": 19, "fixLineNum": 57, "fixNodeStartChar": 1785, "fixNodeLength": 19, "sourceBeforeFix": "n.getNodeData().x()", "sourceAfterFix": "n.getNodeData().y()"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "7982cd3d6716b56dd9d13db35e61a79b89090646", "fixCommitParentSHA1": "eb0134ad067cdb5e5b04de58a23cbfaba5f8c1e3", "bugFilePath": "DesktopImport/src/org/gephi/desktop/importer/DesktopImportController.java", "fixPatch": "diff --git a/DesktopImport/src/org/gephi/desktop/importer/DesktopImportController.java b/DesktopImport/src/org/gephi/desktop/importer/DesktopImportController.java\nindex 28d3b0e..fbbb070 100644\n--- a/DesktopImport/src/org/gephi/desktop/importer/DesktopImportController.java\n+++ b/DesktopImport/src/org/gephi/desktop/importer/DesktopImportController.java\n@@ -494,7 +494,7 @@\n                 return true;\n             }\n         }\n-        if (fileObject.hasExt(\"zip\")) {\n+        if (fileObject.hasExt(\"zip\") || fileObject.hasExt(\"ZIP\")) {\n             return true;\n         }\n         return false;\n", "projectName": "gephi.gephi", "bugLineNum": 497, "bugNodeStartChar": 19578, "bugNodeLength": 24, "fixLineNum": 497, "fixNodeStartChar": 19578, "fixNodeLength": 52, "sourceBeforeFix": "fileObject.hasExt(\"zip\")", "sourceAfterFix": "fileObject.hasExt(\"zip\") || fileObject.hasExt(\"ZIP\")"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "7346f16a2b9513dabebfdbec521bbf520ad63d2b", "fixCommitParentSHA1": "42ef9aac9a8e3a381fdb0a1d3020268fd5aa6af9", "bugFilePath": "StatisticsPlugin/src/org/gephi/statistics/plugin/DegreeDistribution.java", "fixPatch": "diff --git a/StatisticsPlugin/src/org/gephi/statistics/plugin/DegreeDistribution.java b/StatisticsPlugin/src/org/gephi/statistics/plugin/DegreeDistribution.java\nindex aba37f7..beb49b6 100644\n--- a/StatisticsPlugin/src/org/gephi/statistics/plugin/DegreeDistribution.java\n+++ b/StatisticsPlugin/src/org/gephi/statistics/plugin/DegreeDistribution.java\n@@ -127,7 +127,7 @@\n         if (this.mDirected) {\n             graph = graphModel.getDirectedGraphVisible();\n         } else {\n-            graph = graphModel.getUndirectedGraph();\n+            graph = graphModel.getUndirectedGraphVisible();\n         }\n \n         graph.readLock();\n", "projectName": "gephi.gephi", "bugLineNum": 130, "bugNodeStartChar": 4502, "bugNodeLength": 31, "fixLineNum": 130, "fixNodeStartChar": 4502, "fixNodeLength": 38, "sourceBeforeFix": "graphModel.getUndirectedGraph()", "sourceAfterFix": "graphModel.getUndirectedGraphVisible()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "7346f16a2b9513dabebfdbec521bbf520ad63d2b", "fixCommitParentSHA1": "42ef9aac9a8e3a381fdb0a1d3020268fd5aa6af9", "bugFilePath": "StatisticsPlugin/src/org/gephi/statistics/plugin/DegreeDistribution.java", "fixPatch": "diff --git a/StatisticsPlugin/src/org/gephi/statistics/plugin/DegreeDistribution.java b/StatisticsPlugin/src/org/gephi/statistics/plugin/DegreeDistribution.java\nindex aba37f7..beb49b6 100644\n--- a/StatisticsPlugin/src/org/gephi/statistics/plugin/DegreeDistribution.java\n+++ b/StatisticsPlugin/src/org/gephi/statistics/plugin/DegreeDistribution.java\n@@ -127,7 +127,7 @@\n         if (this.mDirected) {\n             graph = graphModel.getDirectedGraphVisible();\n         } else {\n-            graph = graphModel.getUndirectedGraph();\n+            graph = graphModel.getUndirectedGraphVisible();\n         }\n \n         graph.readLock();\n", "projectName": "gephi.gephi", "bugLineNum": 130, "bugNodeStartChar": 4502, "bugNodeLength": 31, "fixLineNum": 130, "fixNodeStartChar": 4502, "fixNodeLength": 38, "sourceBeforeFix": "graphModel.getUndirectedGraph()", "sourceAfterFix": "graphModel.getUndirectedGraphVisible()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "7346f16a2b9513dabebfdbec521bbf520ad63d2b", "fixCommitParentSHA1": "42ef9aac9a8e3a381fdb0a1d3020268fd5aa6af9", "bugFilePath": "StatisticsPlugin/src/org/gephi/statistics/plugin/GraphDensity.java", "fixPatch": "diff --git a/StatisticsPlugin/src/org/gephi/statistics/plugin/GraphDensity.java b/StatisticsPlugin/src/org/gephi/statistics/plugin/GraphDensity.java\nindex 52adb67..b007800 100644\n--- a/StatisticsPlugin/src/org/gephi/statistics/plugin/GraphDensity.java\n+++ b/StatisticsPlugin/src/org/gephi/statistics/plugin/GraphDensity.java\n@@ -70,9 +70,9 @@\n         Graph graph;\n \n         if (mDirected) {\n-            graph = graphModel.getDirectedGraph();\n+            graph = graphModel.getDirectedGraphVisible();\n         } else {\n-            graph = graphModel.getUndirectedGraph();\n+            graph = graphModel.getUndirectedGraphVisible();\n         }\n \n         this.mGraphRevision = \"(\" + graph.getNodeVersion() + \", \" + graph.getEdgeVersion() + \")\";\n", "projectName": "gephi.gephi", "bugLineNum": 73, "bugNodeStartChar": 1718, "bugNodeLength": 29, "fixLineNum": 73, "fixNodeStartChar": 1718, "fixNodeLength": 36, "sourceBeforeFix": "graphModel.getDirectedGraph()", "sourceAfterFix": "graphModel.getDirectedGraphVisible()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "7346f16a2b9513dabebfdbec521bbf520ad63d2b", "fixCommitParentSHA1": "42ef9aac9a8e3a381fdb0a1d3020268fd5aa6af9", "bugFilePath": "StatisticsPlugin/src/org/gephi/statistics/plugin/GraphDensity.java", "fixPatch": "diff --git a/StatisticsPlugin/src/org/gephi/statistics/plugin/GraphDensity.java b/StatisticsPlugin/src/org/gephi/statistics/plugin/GraphDensity.java\nindex 52adb67..b007800 100644\n--- a/StatisticsPlugin/src/org/gephi/statistics/plugin/GraphDensity.java\n+++ b/StatisticsPlugin/src/org/gephi/statistics/plugin/GraphDensity.java\n@@ -70,9 +70,9 @@\n         Graph graph;\n \n         if (mDirected) {\n-            graph = graphModel.getDirectedGraph();\n+            graph = graphModel.getDirectedGraphVisible();\n         } else {\n-            graph = graphModel.getUndirectedGraph();\n+            graph = graphModel.getUndirectedGraphVisible();\n         }\n \n         this.mGraphRevision = \"(\" + graph.getNodeVersion() + \", \" + graph.getEdgeVersion() + \")\";\n", "projectName": "gephi.gephi", "bugLineNum": 73, "bugNodeStartChar": 1718, "bugNodeLength": 29, "fixLineNum": 73, "fixNodeStartChar": 1718, "fixNodeLength": 36, "sourceBeforeFix": "graphModel.getDirectedGraph()", "sourceAfterFix": "graphModel.getDirectedGraphVisible()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "7346f16a2b9513dabebfdbec521bbf520ad63d2b", "fixCommitParentSHA1": "42ef9aac9a8e3a381fdb0a1d3020268fd5aa6af9", "bugFilePath": "StatisticsPlugin/src/org/gephi/statistics/plugin/GraphDensity.java", "fixPatch": "diff --git a/StatisticsPlugin/src/org/gephi/statistics/plugin/GraphDensity.java b/StatisticsPlugin/src/org/gephi/statistics/plugin/GraphDensity.java\nindex 52adb67..b007800 100644\n--- a/StatisticsPlugin/src/org/gephi/statistics/plugin/GraphDensity.java\n+++ b/StatisticsPlugin/src/org/gephi/statistics/plugin/GraphDensity.java\n@@ -70,9 +70,9 @@\n         Graph graph;\n \n         if (mDirected) {\n-            graph = graphModel.getDirectedGraph();\n+            graph = graphModel.getDirectedGraphVisible();\n         } else {\n-            graph = graphModel.getUndirectedGraph();\n+            graph = graphModel.getUndirectedGraphVisible();\n         }\n \n         this.mGraphRevision = \"(\" + graph.getNodeVersion() + \", \" + graph.getEdgeVersion() + \")\";\n", "projectName": "gephi.gephi", "bugLineNum": 75, "bugNodeStartChar": 1786, "bugNodeLength": 31, "fixLineNum": 75, "fixNodeStartChar": 1786, "fixNodeLength": 38, "sourceBeforeFix": "graphModel.getUndirectedGraph()", "sourceAfterFix": "graphModel.getUndirectedGraphVisible()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "7346f16a2b9513dabebfdbec521bbf520ad63d2b", "fixCommitParentSHA1": "42ef9aac9a8e3a381fdb0a1d3020268fd5aa6af9", "bugFilePath": "StatisticsPlugin/src/org/gephi/statistics/plugin/GraphDensity.java", "fixPatch": "diff --git a/StatisticsPlugin/src/org/gephi/statistics/plugin/GraphDensity.java b/StatisticsPlugin/src/org/gephi/statistics/plugin/GraphDensity.java\nindex 52adb67..b007800 100644\n--- a/StatisticsPlugin/src/org/gephi/statistics/plugin/GraphDensity.java\n+++ b/StatisticsPlugin/src/org/gephi/statistics/plugin/GraphDensity.java\n@@ -70,9 +70,9 @@\n         Graph graph;\n \n         if (mDirected) {\n-            graph = graphModel.getDirectedGraph();\n+            graph = graphModel.getDirectedGraphVisible();\n         } else {\n-            graph = graphModel.getUndirectedGraph();\n+            graph = graphModel.getUndirectedGraphVisible();\n         }\n \n         this.mGraphRevision = \"(\" + graph.getNodeVersion() + \", \" + graph.getEdgeVersion() + \")\";\n", "projectName": "gephi.gephi", "bugLineNum": 75, "bugNodeStartChar": 1786, "bugNodeLength": 31, "fixLineNum": 75, "fixNodeStartChar": 1786, "fixNodeLength": 38, "sourceBeforeFix": "graphModel.getUndirectedGraph()", "sourceAfterFix": "graphModel.getUndirectedGraphVisible()"}, {"bugType": "SWAP_ARGUMENTS", "fixCommitSHA1": "ec6418b6bdbd1595b0cc5446b298ba68bf27af37", "fixCommitParentSHA1": "005de1611062926782fd0d68de6943d43be8a90b", "bugFilePath": "VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java", "fixPatch": "diff --git a/VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java b/VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java\nindex 8af1225..53bee10 100644\n--- a/VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java\n+++ b/VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java\n@@ -231,13 +231,13 @@\n         String nodeFontName = nodeFontE.getAttribute(\"name\");\n         int nodeFontSize = Integer.parseInt(nodeFontE.getAttribute(\"size\"));\n         int nodeFontStyle = Integer.parseInt(nodeFontE.getAttribute(\"style\"));\n-        nodeFont = new Font(nodeFontName, nodeFontSize, nodeFontStyle);\n+        nodeFont = new Font(nodeFontName, nodeFontStyle, nodeFontSize);\n \n         Element edgeFontE = (Element) textModelElement.getElementsByTagName(\"edgefont\").item(0);\n         String edgeFontName = edgeFontE.getAttribute(\"name\");\n         int edgeFontSize = Integer.parseInt(edgeFontE.getAttribute(\"size\"));\n         int edgeFontStyle = Integer.parseInt(edgeFontE.getAttribute(\"style\"));\n-        edgeFont = new Font(edgeFontName, edgeFontSize, edgeFontStyle);\n+        edgeFont = new Font(edgeFontName, edgeFontStyle, edgeFontSize);\n \n         //Color\n         Element nodeColorE = (Element) textModelElement.getElementsByTagName(\"nodecolor\").item(0);\n", "projectName": "gephi.gephi", "bugLineNum": 234, "bugNodeStartChar": 7296, "bugNodeLength": 51, "fixLineNum": 234, "fixNodeStartChar": 7296, "fixNodeLength": 51, "sourceBeforeFix": "new Font(nodeFontName,nodeFontSize,nodeFontStyle)", "sourceAfterFix": "new Font(nodeFontName,nodeFontStyle,nodeFontSize)"}, {"bugType": "SWAP_ARGUMENTS", "fixCommitSHA1": "ec6418b6bdbd1595b0cc5446b298ba68bf27af37", "fixCommitParentSHA1": "005de1611062926782fd0d68de6943d43be8a90b", "bugFilePath": "VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java", "fixPatch": "diff --git a/VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java b/VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java\nindex 8af1225..53bee10 100644\n--- a/VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java\n+++ b/VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java\n@@ -231,13 +231,13 @@\n         String nodeFontName = nodeFontE.getAttribute(\"name\");\n         int nodeFontSize = Integer.parseInt(nodeFontE.getAttribute(\"size\"));\n         int nodeFontStyle = Integer.parseInt(nodeFontE.getAttribute(\"style\"));\n-        nodeFont = new Font(nodeFontName, nodeFontSize, nodeFontStyle);\n+        nodeFont = new Font(nodeFontName, nodeFontStyle, nodeFontSize);\n \n         Element edgeFontE = (Element) textModelElement.getElementsByTagName(\"edgefont\").item(0);\n         String edgeFontName = edgeFontE.getAttribute(\"name\");\n         int edgeFontSize = Integer.parseInt(edgeFontE.getAttribute(\"size\"));\n         int edgeFontStyle = Integer.parseInt(edgeFontE.getAttribute(\"style\"));\n-        edgeFont = new Font(edgeFontName, edgeFontSize, edgeFontStyle);\n+        edgeFont = new Font(edgeFontName, edgeFontStyle, edgeFontSize);\n \n         //Color\n         Element nodeColorE = (Element) textModelElement.getElementsByTagName(\"nodecolor\").item(0);\n", "projectName": "gephi.gephi", "bugLineNum": 240, "bugNodeStartChar": 7684, "bugNodeLength": 51, "fixLineNum": 240, "fixNodeStartChar": 7684, "fixNodeLength": 51, "sourceBeforeFix": "new Font(edgeFontName,edgeFontSize,edgeFontStyle)", "sourceAfterFix": "new Font(edgeFontName,edgeFontStyle,edgeFontSize)"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "d2f4d3fa8625b347e7936091c3bd1a1e2f07d89c", "fixCommitParentSHA1": "8f1bf2316f6c68b090e274642e7fd2698248079e", "bugFilePath": "ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java", "fixPatch": "diff --git a/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java b/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java\nindex e1270a8..a9301b4 100644\n--- a/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java\n+++ b/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java\n@@ -58,14 +58,14 @@\n     public void save(Project project) {\n         ProjectInformation info = project.getLookup().lookup(ProjectInformation.class);\n         if (info != null) {\n-            if (!titleTextField.getText().isEmpty() && !titleTextField.getText().equals(info.getName())) {\n+            if (!nameTextField.getText().isEmpty() && !nameTextField.getText().equals(info.getName())) {\n                 ProjectController pc = Lookup.getDefault().lookup(ProjectController.class);\n-                pc.renameProject(project, titleTextField.getText());\n+                pc.renameProject(project, nameTextField.getText());\n             }\n         }\n         ProjectMetaData metaData = project.getLookup().lookup(ProjectMetaData.class);\n         if (metaData != null) {\n-            metaData.setTitle(nameTextField.getText());\n+            metaData.setTitle(titleTextField.getText());\n \n             metaData.setAuthor(authorTextField.getText());\n             metaData.setKeywords(keywordsTextField.getText());\n", "projectName": "gephi.gephi", "bugLineNum": 61, "bugNodeStartChar": 2116, "bugNodeLength": 24, "fixLineNum": 61, "fixNodeStartChar": 2116, "fixNodeLength": 23, "sourceBeforeFix": "titleTextField.getText()", "sourceAfterFix": "nameTextField.getText()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d2f4d3fa8625b347e7936091c3bd1a1e2f07d89c", "fixCommitParentSHA1": "8f1bf2316f6c68b090e274642e7fd2698248079e", "bugFilePath": "ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java", "fixPatch": "diff --git a/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java b/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java\nindex e1270a8..a9301b4 100644\n--- a/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java\n+++ b/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java\n@@ -58,14 +58,14 @@\n     public void save(Project project) {\n         ProjectInformation info = project.getLookup().lookup(ProjectInformation.class);\n         if (info != null) {\n-            if (!titleTextField.getText().isEmpty() && !titleTextField.getText().equals(info.getName())) {\n+            if (!nameTextField.getText().isEmpty() && !nameTextField.getText().equals(info.getName())) {\n                 ProjectController pc = Lookup.getDefault().lookup(ProjectController.class);\n-                pc.renameProject(project, titleTextField.getText());\n+                pc.renameProject(project, nameTextField.getText());\n             }\n         }\n         ProjectMetaData metaData = project.getLookup().lookup(ProjectMetaData.class);\n         if (metaData != null) {\n-            metaData.setTitle(nameTextField.getText());\n+            metaData.setTitle(titleTextField.getText());\n \n             metaData.setAuthor(authorTextField.getText());\n             metaData.setKeywords(keywordsTextField.getText());\n", "projectName": "gephi.gephi", "bugLineNum": 61, "bugNodeStartChar": 2116, "bugNodeLength": 24, "fixLineNum": 61, "fixNodeStartChar": 2116, "fixNodeLength": 23, "sourceBeforeFix": "titleTextField.getText()", "sourceAfterFix": "nameTextField.getText()"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "d2f4d3fa8625b347e7936091c3bd1a1e2f07d89c", "fixCommitParentSHA1": "8f1bf2316f6c68b090e274642e7fd2698248079e", "bugFilePath": "ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java", "fixPatch": "diff --git a/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java b/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java\nindex e1270a8..a9301b4 100644\n--- a/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java\n+++ b/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java\n@@ -58,14 +58,14 @@\n     public void save(Project project) {\n         ProjectInformation info = project.getLookup().lookup(ProjectInformation.class);\n         if (info != null) {\n-            if (!titleTextField.getText().isEmpty() && !titleTextField.getText().equals(info.getName())) {\n+            if (!nameTextField.getText().isEmpty() && !nameTextField.getText().equals(info.getName())) {\n                 ProjectController pc = Lookup.getDefault().lookup(ProjectController.class);\n-                pc.renameProject(project, titleTextField.getText());\n+                pc.renameProject(project, nameTextField.getText());\n             }\n         }\n         ProjectMetaData metaData = project.getLookup().lookup(ProjectMetaData.class);\n         if (metaData != null) {\n-            metaData.setTitle(nameTextField.getText());\n+            metaData.setTitle(titleTextField.getText());\n \n             metaData.setAuthor(authorTextField.getText());\n             metaData.setKeywords(keywordsTextField.getText());\n", "projectName": "gephi.gephi", "bugLineNum": 63, "bugNodeStartChar": 2340, "bugNodeLength": 24, "fixLineNum": 63, "fixNodeStartChar": 2340, "fixNodeLength": 23, "sourceBeforeFix": "titleTextField.getText()", "sourceAfterFix": "nameTextField.getText()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d2f4d3fa8625b347e7936091c3bd1a1e2f07d89c", "fixCommitParentSHA1": "8f1bf2316f6c68b090e274642e7fd2698248079e", "bugFilePath": "ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java", "fixPatch": "diff --git a/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java b/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java\nindex e1270a8..a9301b4 100644\n--- a/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java\n+++ b/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java\n@@ -58,14 +58,14 @@\n     public void save(Project project) {\n         ProjectInformation info = project.getLookup().lookup(ProjectInformation.class);\n         if (info != null) {\n-            if (!titleTextField.getText().isEmpty() && !titleTextField.getText().equals(info.getName())) {\n+            if (!nameTextField.getText().isEmpty() && !nameTextField.getText().equals(info.getName())) {\n                 ProjectController pc = Lookup.getDefault().lookup(ProjectController.class);\n-                pc.renameProject(project, titleTextField.getText());\n+                pc.renameProject(project, nameTextField.getText());\n             }\n         }\n         ProjectMetaData metaData = project.getLookup().lookup(ProjectMetaData.class);\n         if (metaData != null) {\n-            metaData.setTitle(nameTextField.getText());\n+            metaData.setTitle(titleTextField.getText());\n \n             metaData.setAuthor(authorTextField.getText());\n             metaData.setKeywords(keywordsTextField.getText());\n", "projectName": "gephi.gephi", "bugLineNum": 63, "bugNodeStartChar": 2340, "bugNodeLength": 24, "fixLineNum": 63, "fixNodeStartChar": 2340, "fixNodeLength": 23, "sourceBeforeFix": "titleTextField.getText()", "sourceAfterFix": "nameTextField.getText()"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "d2f4d3fa8625b347e7936091c3bd1a1e2f07d89c", "fixCommitParentSHA1": "8f1bf2316f6c68b090e274642e7fd2698248079e", "bugFilePath": "ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java", "fixPatch": "diff --git a/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java b/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java\nindex e1270a8..a9301b4 100644\n--- a/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java\n+++ b/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java\n@@ -58,14 +58,14 @@\n     public void save(Project project) {\n         ProjectInformation info = project.getLookup().lookup(ProjectInformation.class);\n         if (info != null) {\n-            if (!titleTextField.getText().isEmpty() && !titleTextField.getText().equals(info.getName())) {\n+            if (!nameTextField.getText().isEmpty() && !nameTextField.getText().equals(info.getName())) {\n                 ProjectController pc = Lookup.getDefault().lookup(ProjectController.class);\n-                pc.renameProject(project, titleTextField.getText());\n+                pc.renameProject(project, nameTextField.getText());\n             }\n         }\n         ProjectMetaData metaData = project.getLookup().lookup(ProjectMetaData.class);\n         if (metaData != null) {\n-            metaData.setTitle(nameTextField.getText());\n+            metaData.setTitle(titleTextField.getText());\n \n             metaData.setAuthor(authorTextField.getText());\n             metaData.setKeywords(keywordsTextField.getText());\n", "projectName": "gephi.gephi", "bugLineNum": 68, "bugNodeStartChar": 2539, "bugNodeLength": 23, "fixLineNum": 68, "fixNodeStartChar": 2539, "fixNodeLength": 24, "sourceBeforeFix": "nameTextField.getText()", "sourceAfterFix": "titleTextField.getText()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d2f4d3fa8625b347e7936091c3bd1a1e2f07d89c", "fixCommitParentSHA1": "8f1bf2316f6c68b090e274642e7fd2698248079e", "bugFilePath": "ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java", "fixPatch": "diff --git a/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java b/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java\nindex e1270a8..a9301b4 100644\n--- a/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java\n+++ b/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java\n@@ -58,14 +58,14 @@\n     public void save(Project project) {\n         ProjectInformation info = project.getLookup().lookup(ProjectInformation.class);\n         if (info != null) {\n-            if (!titleTextField.getText().isEmpty() && !titleTextField.getText().equals(info.getName())) {\n+            if (!nameTextField.getText().isEmpty() && !nameTextField.getText().equals(info.getName())) {\n                 ProjectController pc = Lookup.getDefault().lookup(ProjectController.class);\n-                pc.renameProject(project, titleTextField.getText());\n+                pc.renameProject(project, nameTextField.getText());\n             }\n         }\n         ProjectMetaData metaData = project.getLookup().lookup(ProjectMetaData.class);\n         if (metaData != null) {\n-            metaData.setTitle(nameTextField.getText());\n+            metaData.setTitle(titleTextField.getText());\n \n             metaData.setAuthor(authorTextField.getText());\n             metaData.setKeywords(keywordsTextField.getText());\n", "projectName": "gephi.gephi", "bugLineNum": 68, "bugNodeStartChar": 2539, "bugNodeLength": 23, "fixLineNum": 68, "fixNodeStartChar": 2539, "fixNodeLength": 24, "sourceBeforeFix": "nameTextField.getText()", "sourceAfterFix": "titleTextField.getText()"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "0f2731335aac2410e85d739743e8589cce75846c", "fixCommitParentSHA1": "32ea21599aa2a397cd0910d68237e2e06063fdc2", "bugFilePath": "VisualizationModule/src/org/gephi/visualization/opengl/text/TextManager.java", "fixPatch": "diff --git a/VisualizationModule/src/org/gephi/visualization/opengl/text/TextManager.java b/VisualizationModule/src/org/gephi/visualization/opengl/text/TextManager.java\nindex 3361f60..52f9856 100644\n--- a/VisualizationModule/src/org/gephi/visualization/opengl/text/TextManager.java\n+++ b/VisualizationModule/src/org/gephi/visualization/opengl/text/TextManager.java\n@@ -119,7 +119,7 @@\n                     TextManager.this.model = VizController.getInstance().getVizModel().getTextModel();\n \n                     //Initialize columns if needed\n-                    if (model.getNodeTextColumns() == null) {\n+                    if (model.getNodeTextColumns() == null || model.getNodeTextColumns().length == 0) {\n                         AttributeController attributeController = Lookup.getDefault().lookup(AttributeController.class);\n                         if (attributeController != null && attributeController.getModel() != null) {\n                             AttributeModel attributeModel = attributeController.getModel();\n", "projectName": "gephi.gephi", "bugLineNum": 122, "bugNodeStartChar": 4265, "bugNodeLength": 34, "fixLineNum": 122, "fixNodeStartChar": 4265, "fixNodeLength": 76, "sourceBeforeFix": "model.getNodeTextColumns() == null", "sourceAfterFix": "model.getNodeTextColumns() == null || model.getNodeTextColumns().length == 0"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "0f2731335aac2410e85d739743e8589cce75846c", "fixCommitParentSHA1": "32ea21599aa2a397cd0910d68237e2e06063fdc2", "bugFilePath": "VisualizationModule/src/org/gephi/visualization/opengl/text/TextManager.java", "fixPatch": "diff --git a/VisualizationModule/src/org/gephi/visualization/opengl/text/TextManager.java b/VisualizationModule/src/org/gephi/visualization/opengl/text/TextManager.java\nindex 3361f60..52f9856 100644\n--- a/VisualizationModule/src/org/gephi/visualization/opengl/text/TextManager.java\n+++ b/VisualizationModule/src/org/gephi/visualization/opengl/text/TextManager.java\n@@ -119,7 +119,7 @@\n                     TextManager.this.model = VizController.getInstance().getVizModel().getTextModel();\n \n                     //Initialize columns if needed\n-                    if (model.getNodeTextColumns() == null) {\n+                    if (model.getNodeTextColumns() == null || model.getNodeTextColumns().length == 0) {\n                         AttributeController attributeController = Lookup.getDefault().lookup(AttributeController.class);\n                         if (attributeController != null && attributeController.getModel() != null) {\n                             AttributeModel attributeModel = attributeController.getModel();\n", "projectName": "gephi.gephi", "bugLineNum": 122, "bugNodeStartChar": 4265, "bugNodeLength": 34, "fixLineNum": 122, "fixNodeStartChar": 4265, "fixNodeLength": 76, "sourceBeforeFix": "model.getNodeTextColumns() == null", "sourceAfterFix": "model.getNodeTextColumns() == null || model.getNodeTextColumns().length == 0"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "d21216740a86906787667da2daf2c939b5e3b18b", "fixCommitParentSHA1": "918fa6f80e47f9c209e06f7756303a3203432a80", "bugFilePath": "DesktopExport/src/org/gephi/desktop/io/export/api/GraphFileExporterUI.java", "fixPatch": "diff --git a/DesktopExport/src/org/gephi/desktop/io/export/api/GraphFileExporterUI.java b/DesktopExport/src/org/gephi/desktop/io/export/api/GraphFileExporterUI.java\nindex c45c685..a8d30e6 100644\n--- a/DesktopExport/src/org/gephi/desktop/io/export/api/GraphFileExporterUI.java\n+++ b/DesktopExport/src/org/gephi/desktop/io/export/api/GraphFileExporterUI.java\n@@ -153,7 +153,7 @@\n                 }\n \n                 //Selected file extension change\n-                if (selectedFile != null) {\n+                if (selectedFile != null && fileFilter != null) {\n                     String filePath = selectedFile.getAbsolutePath();\n                     filePath = filePath.substring(0, filePath.lastIndexOf(\".\"));\n                     filePath = filePath.concat(fileFilter.getExtensions().get(0));\n", "projectName": "gephi.gephi", "bugLineNum": 156, "bugNodeStartChar": 6380, "bugNodeLength": 20, "fixLineNum": 156, "fixNodeStartChar": 6380, "fixNodeLength": 42, "sourceBeforeFix": "selectedFile != null", "sourceAfterFix": "selectedFile != null && fileFilter != null"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "d21216740a86906787667da2daf2c939b5e3b18b", "fixCommitParentSHA1": "918fa6f80e47f9c209e06f7756303a3203432a80", "bugFilePath": "DesktopExport/src/org/gephi/desktop/io/export/api/VectorialFileExporterUI.java", "fixPatch": "diff --git a/DesktopExport/src/org/gephi/desktop/io/export/api/VectorialFileExporterUI.java b/DesktopExport/src/org/gephi/desktop/io/export/api/VectorialFileExporterUI.java\nindex ed37f48..493697b 100644\n--- a/DesktopExport/src/org/gephi/desktop/io/export/api/VectorialFileExporterUI.java\n+++ b/DesktopExport/src/org/gephi/desktop/io/export/api/VectorialFileExporterUI.java\n@@ -147,7 +147,7 @@\n                 }\n \n                 //Selected file extension change\n-                if (selectedFile != null) {\n+                if (selectedFile != null && fileFilter != null) {\n                     String filePath = selectedFile.getAbsolutePath();\n                     filePath = filePath.substring(0, filePath.lastIndexOf(\".\"));\n                     filePath = filePath.concat(fileFilter.getExtensions().get(0));\n", "projectName": "gephi.gephi", "bugLineNum": 150, "bugNodeStartChar": 6140, "bugNodeLength": 20, "fixLineNum": 150, "fixNodeStartChar": 6140, "fixNodeLength": 42, "sourceBeforeFix": "selectedFile != null", "sourceAfterFix": "selectedFile != null && fileFilter != null"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "4e92c5bf64ea83a33f1a3898cf2335c983f4858e", "fixCommitParentSHA1": "c5f73c0062764413556d8bd7ec8200a632327fef", "bugFilePath": "DesktopFilters/src/org/gephi/filters/impl/FilterControllerImpl.java", "fixPatch": "diff --git a/DesktopFilters/src/org/gephi/filters/impl/FilterControllerImpl.java b/DesktopFilters/src/org/gephi/filters/impl/FilterControllerImpl.java\nindex 8c3122b..ad4678c 100644\n--- a/DesktopFilters/src/org/gephi/filters/impl/FilterControllerImpl.java\n+++ b/DesktopFilters/src/org/gephi/filters/impl/FilterControllerImpl.java\n@@ -93,7 +93,7 @@\n \n             public void disable() {\n                 GraphModel graphModel = Lookup.getDefault().lookup(GraphController.class).getModel();\n-                if (model.getCurrentResult() != null) {\n+                if (model.getCurrentResult() != null && graphModel != null) {\n                     graphModel.destroyView(model.getCurrentResult());\n                     model.setCurrentResult(null);\n                 }\n", "projectName": "gephi.gephi", "bugLineNum": 96, "bugNodeStartChar": 3648, "bugNodeLength": 32, "fixLineNum": 96, "fixNodeStartChar": 3648, "fixNodeLength": 54, "sourceBeforeFix": "model.getCurrentResult() != null", "sourceAfterFix": "model.getCurrentResult() != null && graphModel != null"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "2547a5a2d2e74a4fa37fd64923bc8cfdce991373", "fixCommitParentSHA1": "102e5eb4ab23272a865cb33a13a6f0284d27eff2", "bugFilePath": "FiltersPlugin/src/org/gephi/filters/plugin/edge/EdgeWeightBuilder.java", "fixPatch": "diff --git a/FiltersPlugin/src/org/gephi/filters/plugin/edge/EdgeWeightBuilder.java b/FiltersPlugin/src/org/gephi/filters/plugin/edge/EdgeWeightBuilder.java\nindex 1259668..00711e7 100644\n--- a/FiltersPlugin/src/org/gephi/filters/plugin/edge/EdgeWeightBuilder.java\n+++ b/FiltersPlugin/src/org/gephi/filters/plugin/edge/EdgeWeightBuilder.java\n@@ -122,7 +122,7 @@\n                 refreshRange();\n                 return weights;\n             } else {\n-                return values.toArray(new Integer[0]);\n+                return values.toArray(new Float[0]);\n             }\n         }\n \n", "projectName": "gephi.gephi", "bugLineNum": 125, "bugNodeStartChar": 4025, "bugNodeLength": 10, "fixLineNum": 125, "fixNodeStartChar": 4025, "fixNodeLength": 8, "sourceBeforeFix": "Integer[]", "sourceAfterFix": "Float[]"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "2ea6ea3e6dd568fe52a9410913e801714da07c13", "fixCommitParentSHA1": "3c1058b0639b00686bd7c3bc813b7f5d51ca21ca", "bugFilePath": "FiltersPlugin/src/org/gephi/filters/plugin/attribute/AttributeEqualBuilder.java", "fixPatch": "diff --git a/FiltersPlugin/src/org/gephi/filters/plugin/attribute/AttributeEqualBuilder.java b/FiltersPlugin/src/org/gephi/filters/plugin/attribute/AttributeEqualBuilder.java\nindex 6959489..46ed8d7 100644\n--- a/FiltersPlugin/src/org/gephi/filters/plugin/attribute/AttributeEqualBuilder.java\n+++ b/FiltersPlugin/src/org/gephi/filters/plugin/attribute/AttributeEqualBuilder.java\n@@ -281,7 +281,7 @@\n             }\n             Object[] valuesArray = vals.toArray();\n             min = AttributeUtils.getDefault().getMin(column, valuesArray);\n-            max = AttributeUtils.getDefault().getMin(column, valuesArray);\n+            max = AttributeUtils.getDefault().getMax(column, valuesArray);\n         }\n \n         public String getName() {\n", "projectName": "gephi.gephi", "bugLineNum": 284, "bugNodeStartChar": 9605, "bugNodeLength": 55, "fixLineNum": 284, "fixNodeStartChar": 9605, "fixNodeLength": 55, "sourceBeforeFix": "AttributeUtils.getDefault().getMin(column,valuesArray)", "sourceAfterFix": "AttributeUtils.getDefault().getMax(column,valuesArray)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "2ea6ea3e6dd568fe52a9410913e801714da07c13", "fixCommitParentSHA1": "3c1058b0639b00686bd7c3bc813b7f5d51ca21ca", "bugFilePath": "FiltersPlugin/src/org/gephi/filters/plugin/attribute/AttributeEqualBuilder.java", "fixPatch": "diff --git a/FiltersPlugin/src/org/gephi/filters/plugin/attribute/AttributeEqualBuilder.java b/FiltersPlugin/src/org/gephi/filters/plugin/attribute/AttributeEqualBuilder.java\nindex 6959489..46ed8d7 100644\n--- a/FiltersPlugin/src/org/gephi/filters/plugin/attribute/AttributeEqualBuilder.java\n+++ b/FiltersPlugin/src/org/gephi/filters/plugin/attribute/AttributeEqualBuilder.java\n@@ -281,7 +281,7 @@\n             }\n             Object[] valuesArray = vals.toArray();\n             min = AttributeUtils.getDefault().getMin(column, valuesArray);\n-            max = AttributeUtils.getDefault().getMin(column, valuesArray);\n+            max = AttributeUtils.getDefault().getMax(column, valuesArray);\n         }\n \n         public String getName() {\n", "projectName": "gephi.gephi", "bugLineNum": 284, "bugNodeStartChar": 9605, "bugNodeLength": 55, "fixLineNum": 284, "fixNodeStartChar": 9605, "fixNodeLength": 55, "sourceBeforeFix": "AttributeUtils.getDefault().getMin(column,valuesArray)", "sourceAfterFix": "AttributeUtils.getDefault().getMax(column,valuesArray)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "a076b497cd3ad3b559d00c145d3504441472a48b", "fixCommitParentSHA1": "5168af0501d022ffdf38b961f190fb22a9fbb862", "bugFilePath": "DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalDirectedGraphImplFiltered.java", "fixPatch": "diff --git a/DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalDirectedGraphImplFiltered.java b/DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalDirectedGraphImplFiltered.java\nindex 26ef2a1..364400f 100644\n--- a/DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalDirectedGraphImplFiltered.java\n+++ b/DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalDirectedGraphImplFiltered.java\n@@ -93,7 +93,7 @@\n     public int getDegree(Node node) {\n         view.checkUpdate();\n         AbstractNode absNode = checkNode(node);\n-        int count = view.getClusteredLayerInDegree(absNode);\n+        int count = view.getClusteredLayerDegree(absNode);\n         return count;\n     }\n \n", "projectName": "gephi.gephi", "bugLineNum": 96, "bugNodeStartChar": 3744, "bugNodeLength": 39, "fixLineNum": 96, "fixNodeStartChar": 3744, "fixNodeLength": 37, "sourceBeforeFix": "view.getClusteredLayerInDegree(absNode)", "sourceAfterFix": "view.getClusteredLayerDegree(absNode)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "a076b497cd3ad3b559d00c145d3504441472a48b", "fixCommitParentSHA1": "5168af0501d022ffdf38b961f190fb22a9fbb862", "bugFilePath": "DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalDirectedGraphImplFiltered.java", "fixPatch": "diff --git a/DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalDirectedGraphImplFiltered.java b/DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalDirectedGraphImplFiltered.java\nindex 26ef2a1..364400f 100644\n--- a/DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalDirectedGraphImplFiltered.java\n+++ b/DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalDirectedGraphImplFiltered.java\n@@ -93,7 +93,7 @@\n     public int getDegree(Node node) {\n         view.checkUpdate();\n         AbstractNode absNode = checkNode(node);\n-        int count = view.getClusteredLayerInDegree(absNode);\n+        int count = view.getClusteredLayerDegree(absNode);\n         return count;\n     }\n \n", "projectName": "gephi.gephi", "bugLineNum": 96, "bugNodeStartChar": 3744, "bugNodeLength": 39, "fixLineNum": 96, "fixNodeStartChar": 3744, "fixNodeLength": 37, "sourceBeforeFix": "view.getClusteredLayerInDegree(absNode)", "sourceAfterFix": "view.getClusteredLayerDegree(absNode)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "a076b497cd3ad3b559d00c145d3504441472a48b", "fixCommitParentSHA1": "5168af0501d022ffdf38b961f190fb22a9fbb862", "bugFilePath": "DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalUndirectedGraphImplFiltered.java", "fixPatch": "diff --git a/DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalUndirectedGraphImplFiltered.java b/DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalUndirectedGraphImplFiltered.java\nindex 88f4d8f..0cdcc0f 100644\n--- a/DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalUndirectedGraphImplFiltered.java\n+++ b/DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalUndirectedGraphImplFiltered.java\n@@ -98,7 +98,7 @@\n     public int getDegree(Node node) {\n         view.checkUpdate();\n         AbstractNode absNode = checkNode(node);\n-        int count = view.getClusteredLayerInDegree(absNode);\n+        int count = view.getClusteredLayerDegree(absNode);\n         return count;\n     }\n \n", "projectName": "gephi.gephi", "bugLineNum": 101, "bugNodeStartChar": 3763, "bugNodeLength": 39, "fixLineNum": 101, "fixNodeStartChar": 3763, "fixNodeLength": 37, "sourceBeforeFix": "view.getClusteredLayerInDegree(absNode)", "sourceAfterFix": "view.getClusteredLayerDegree(absNode)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "a076b497cd3ad3b559d00c145d3504441472a48b", "fixCommitParentSHA1": "5168af0501d022ffdf38b961f190fb22a9fbb862", "bugFilePath": "DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalUndirectedGraphImplFiltered.java", "fixPatch": "diff --git a/DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalUndirectedGraphImplFiltered.java b/DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalUndirectedGraphImplFiltered.java\nindex 88f4d8f..0cdcc0f 100644\n--- a/DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalUndirectedGraphImplFiltered.java\n+++ b/DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalUndirectedGraphImplFiltered.java\n@@ -98,7 +98,7 @@\n     public int getDegree(Node node) {\n         view.checkUpdate();\n         AbstractNode absNode = checkNode(node);\n-        int count = view.getClusteredLayerInDegree(absNode);\n+        int count = view.getClusteredLayerDegree(absNode);\n         return count;\n     }\n \n", "projectName": "gephi.gephi", "bugLineNum": 101, "bugNodeStartChar": 3763, "bugNodeLength": 39, "fixLineNum": 101, "fixNodeStartChar": 3763, "fixNodeLength": 37, "sourceBeforeFix": "view.getClusteredLayerInDegree(absNode)", "sourceAfterFix": "view.getClusteredLayerDegree(absNode)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "488cbd59b19eb8f89f510bfa02e476468e9da450", "fixCommitParentSHA1": "04f49ae6b0ba39819a7ba6f510de2d2455b031f3", "bugFilePath": "DHNSGraph/src/org/gephi/graph/dhns/edge/EdgeDataImpl.java", "fixPatch": "diff --git a/DHNSGraph/src/org/gephi/graph/dhns/edge/EdgeDataImpl.java b/DHNSGraph/src/org/gephi/graph/dhns/edge/EdgeDataImpl.java\nindex 1df63db..f870722 100644\n--- a/DHNSGraph/src/org/gephi/graph/dhns/edge/EdgeDataImpl.java\n+++ b/DHNSGraph/src/org/gephi/graph/dhns/edge/EdgeDataImpl.java\n@@ -88,15 +88,15 @@\n     }\n \n     public float x() {\n-        return (getSource().x() + getTarget().x()) / 2f;\n+        return (getSource().x() + getTarget().x()) / 3f;\n     }\n \n     public float y() {\n-        return (getSource().y() + getTarget().y()) / 2f;\n+        return (getSource().y() + getTarget().y()) / 3f;\n     }\n \n     public float z() {\n-        return (getSource().z() + getTarget().z()) / 2f;\n+        return (getSource().z() + getTarget().z()) / 3f;\n     }\n \n     public void setX(float x) {\n", "projectName": "gephi.gephi", "bugLineNum": 91, "bugNodeStartChar": 2438, "bugNodeLength": 40, "fixLineNum": 91, "fixNodeStartChar": 2438, "fixNodeLength": 40, "sourceBeforeFix": "(getSource().x() + getTarget().x()) / 2f", "sourceAfterFix": "(getSource().x() + getTarget().x()) / 3f"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "488cbd59b19eb8f89f510bfa02e476468e9da450", "fixCommitParentSHA1": "04f49ae6b0ba39819a7ba6f510de2d2455b031f3", "bugFilePath": "DHNSGraph/src/org/gephi/graph/dhns/edge/EdgeDataImpl.java", "fixPatch": "diff --git a/DHNSGraph/src/org/gephi/graph/dhns/edge/EdgeDataImpl.java b/DHNSGraph/src/org/gephi/graph/dhns/edge/EdgeDataImpl.java\nindex 1df63db..f870722 100644\n--- a/DHNSGraph/src/org/gephi/graph/dhns/edge/EdgeDataImpl.java\n+++ b/DHNSGraph/src/org/gephi/graph/dhns/edge/EdgeDataImpl.java\n@@ -88,15 +88,15 @@\n     }\n \n     public float x() {\n-        return (getSource().x() + getTarget().x()) / 2f;\n+        return (getSource().x() + getTarget().x()) / 3f;\n     }\n \n     public float y() {\n-        return (getSource().y() + getTarget().y()) / 2f;\n+        return (getSource().y() + getTarget().y()) / 3f;\n     }\n \n     public float z() {\n-        return (getSource().z() + getTarget().z()) / 2f;\n+        return (getSource().z() + getTarget().z()) / 3f;\n     }\n \n     public void setX(float x) {\n", "projectName": "gephi.gephi", "bugLineNum": 95, "bugNodeStartChar": 2525, "bugNodeLength": 40, "fixLineNum": 95, "fixNodeStartChar": 2525, "fixNodeLength": 40, "sourceBeforeFix": "(getSource().y() + getTarget().y()) / 2f", "sourceAfterFix": "(getSource().y() + getTarget().y()) / 3f"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "488cbd59b19eb8f89f510bfa02e476468e9da450", "fixCommitParentSHA1": "04f49ae6b0ba39819a7ba6f510de2d2455b031f3", "bugFilePath": "DHNSGraph/src/org/gephi/graph/dhns/edge/EdgeDataImpl.java", "fixPatch": "diff --git a/DHNSGraph/src/org/gephi/graph/dhns/edge/EdgeDataImpl.java b/DHNSGraph/src/org/gephi/graph/dhns/edge/EdgeDataImpl.java\nindex 1df63db..f870722 100644\n--- a/DHNSGraph/src/org/gephi/graph/dhns/edge/EdgeDataImpl.java\n+++ b/DHNSGraph/src/org/gephi/graph/dhns/edge/EdgeDataImpl.java\n@@ -88,15 +88,15 @@\n     }\n \n     public float x() {\n-        return (getSource().x() + getTarget().x()) / 2f;\n+        return (getSource().x() + getTarget().x()) / 3f;\n     }\n \n     public float y() {\n-        return (getSource().y() + getTarget().y()) / 2f;\n+        return (getSource().y() + getTarget().y()) / 3f;\n     }\n \n     public float z() {\n-        return (getSource().z() + getTarget().z()) / 2f;\n+        return (getSource().z() + getTarget().z()) / 3f;\n     }\n \n     public void setX(float x) {\n", "projectName": "gephi.gephi", "bugLineNum": 99, "bugNodeStartChar": 2612, "bugNodeLength": 40, "fixLineNum": 99, "fixNodeStartChar": 2612, "fixNodeLength": 40, "sourceBeforeFix": "(getSource().z() + getTarget().z()) / 2f", "sourceAfterFix": "(getSource().z() + getTarget().z()) / 3f"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "b1aa0100b3f37551bcd8507d168449d8b03c5c57", "fixCommitParentSHA1": "5fee5e8382579c75bf383897625e3c00ca05e14b", "bugFilePath": "DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java", "fixPatch": "diff --git a/DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java b/DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java\nindex a91b507..76cf514 100644\n--- a/DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java\n+++ b/DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java\n@@ -72,7 +72,7 @@\n             expand(view, absNode);\n         //sightManager.updateSight((SightImpl) sight);\n         }\n-        graphVersion.incNodeVersion();\n+        graphVersion.incNodeAndEdgeVersion();\n         dhns.getWriteLock().unlock();\n         dhns.getEventManager().fireEvent(EventType.NODES_AND_EDGES_UPDATED);\n     }\n@@ -94,7 +94,7 @@\n             retract(view, ((AbstractNode) node));\n         //sightManager.updateSight((SightImpl)sight);\n         }\n-        graphVersion.incNodeVersion();\n+        graphVersion.incNodeAndEdgeVersion();\n         dhns.getWriteLock().unlock();\n         dhns.getEventManager().fireEvent(EventType.NODES_AND_EDGES_UPDATED);\n     }\n", "projectName": "gephi.gephi", "bugLineNum": 75, "bugNodeStartChar": 2610, "bugNodeLength": 29, "fixLineNum": 75, "fixNodeStartChar": 2610, "fixNodeLength": 36, "sourceBeforeFix": "graphVersion.incNodeVersion()", "sourceAfterFix": "graphVersion.incNodeAndEdgeVersion()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "b1aa0100b3f37551bcd8507d168449d8b03c5c57", "fixCommitParentSHA1": "5fee5e8382579c75bf383897625e3c00ca05e14b", "bugFilePath": "DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java", "fixPatch": "diff --git a/DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java b/DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java\nindex a91b507..76cf514 100644\n--- a/DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java\n+++ b/DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java\n@@ -72,7 +72,7 @@\n             expand(view, absNode);\n         //sightManager.updateSight((SightImpl) sight);\n         }\n-        graphVersion.incNodeVersion();\n+        graphVersion.incNodeAndEdgeVersion();\n         dhns.getWriteLock().unlock();\n         dhns.getEventManager().fireEvent(EventType.NODES_AND_EDGES_UPDATED);\n     }\n@@ -94,7 +94,7 @@\n             retract(view, ((AbstractNode) node));\n         //sightManager.updateSight((SightImpl)sight);\n         }\n-        graphVersion.incNodeVersion();\n+        graphVersion.incNodeAndEdgeVersion();\n         dhns.getWriteLock().unlock();\n         dhns.getEventManager().fireEvent(EventType.NODES_AND_EDGES_UPDATED);\n     }\n", "projectName": "gephi.gephi", "bugLineNum": 75, "bugNodeStartChar": 2610, "bugNodeLength": 29, "fixLineNum": 75, "fixNodeStartChar": 2610, "fixNodeLength": 36, "sourceBeforeFix": "graphVersion.incNodeVersion()", "sourceAfterFix": "graphVersion.incNodeAndEdgeVersion()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "b1aa0100b3f37551bcd8507d168449d8b03c5c57", "fixCommitParentSHA1": "5fee5e8382579c75bf383897625e3c00ca05e14b", "bugFilePath": "DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java", "fixPatch": "diff --git a/DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java b/DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java\nindex a91b507..76cf514 100644\n--- a/DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java\n+++ b/DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java\n@@ -72,7 +72,7 @@\n             expand(view, absNode);\n         //sightManager.updateSight((SightImpl) sight);\n         }\n-        graphVersion.incNodeVersion();\n+        graphVersion.incNodeAndEdgeVersion();\n         dhns.getWriteLock().unlock();\n         dhns.getEventManager().fireEvent(EventType.NODES_AND_EDGES_UPDATED);\n     }\n@@ -94,7 +94,7 @@\n             retract(view, ((AbstractNode) node));\n         //sightManager.updateSight((SightImpl)sight);\n         }\n-        graphVersion.incNodeVersion();\n+        graphVersion.incNodeAndEdgeVersion();\n         dhns.getWriteLock().unlock();\n         dhns.getEventManager().fireEvent(EventType.NODES_AND_EDGES_UPDATED);\n     }\n", "projectName": "gephi.gephi", "bugLineNum": 97, "bugNodeStartChar": 3332, "bugNodeLength": 29, "fixLineNum": 97, "fixNodeStartChar": 3332, "fixNodeLength": 36, "sourceBeforeFix": "graphVersion.incNodeVersion()", "sourceAfterFix": "graphVersion.incNodeAndEdgeVersion()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "b1aa0100b3f37551bcd8507d168449d8b03c5c57", "fixCommitParentSHA1": "5fee5e8382579c75bf383897625e3c00ca05e14b", "bugFilePath": "DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java", "fixPatch": "diff --git a/DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java b/DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java\nindex a91b507..76cf514 100644\n--- a/DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java\n+++ b/DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java\n@@ -72,7 +72,7 @@\n             expand(view, absNode);\n         //sightManager.updateSight((SightImpl) sight);\n         }\n-        graphVersion.incNodeVersion();\n+        graphVersion.incNodeAndEdgeVersion();\n         dhns.getWriteLock().unlock();\n         dhns.getEventManager().fireEvent(EventType.NODES_AND_EDGES_UPDATED);\n     }\n@@ -94,7 +94,7 @@\n             retract(view, ((AbstractNode) node));\n         //sightManager.updateSight((SightImpl)sight);\n         }\n-        graphVersion.incNodeVersion();\n+        graphVersion.incNodeAndEdgeVersion();\n         dhns.getWriteLock().unlock();\n         dhns.getEventManager().fireEvent(EventType.NODES_AND_EDGES_UPDATED);\n     }\n", "projectName": "gephi.gephi", "bugLineNum": 97, "bugNodeStartChar": 3332, "bugNodeLength": 29, "fixLineNum": 97, "fixNodeStartChar": 3332, "fixNodeLength": 36, "sourceBeforeFix": "graphVersion.incNodeVersion()", "sourceAfterFix": "graphVersion.incNodeAndEdgeVersion()"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "79c128ee2c9a9f6c24fc6941840e5ef354d8bd78", "fixCommitParentSHA1": "921150569c92089a5469ea6d83c7eda916e36685", "bugFilePath": "DHNSGraph/src/org/gephi/graph/dhns/edge/AbstractEdge.java", "fixPatch": "diff --git a/DHNSGraph/src/org/gephi/graph/dhns/edge/AbstractEdge.java b/DHNSGraph/src/org/gephi/graph/dhns/edge/AbstractEdge.java\nindex fc00dd0..9b9e2a3 100644\n--- a/DHNSGraph/src/org/gephi/graph/dhns/edge/AbstractEdge.java\n+++ b/DHNSGraph/src/org/gephi/graph/dhns/edge/AbstractEdge.java\n@@ -111,7 +111,7 @@\n     }\n \n     public boolean hasAttributes() {\n-        return edgeData.getAttributes() == null;\n+        return edgeData.getAttributes() != null;\n     }\n \n     public void setAttributes(Attributes attributes) {\n", "projectName": "gephi.gephi", "bugLineNum": 114, "bugNodeStartChar": 2835, "bugNodeLength": 32, "fixLineNum": 114, "fixNodeStartChar": 2835, "fixNodeLength": 32, "sourceBeforeFix": "edgeData.getAttributes() == null", "sourceAfterFix": "edgeData.getAttributes() != null"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "79c128ee2c9a9f6c24fc6941840e5ef354d8bd78", "fixCommitParentSHA1": "921150569c92089a5469ea6d83c7eda916e36685", "bugFilePath": "DHNSGraph/src/org/gephi/graph/dhns/node/AbstractNode.java", "fixPatch": "diff --git a/DHNSGraph/src/org/gephi/graph/dhns/node/AbstractNode.java b/DHNSGraph/src/org/gephi/graph/dhns/node/AbstractNode.java\nindex 9979681..112d2c5 100644\n--- a/DHNSGraph/src/org/gephi/graph/dhns/node/AbstractNode.java\n+++ b/DHNSGraph/src/org/gephi/graph/dhns/node/AbstractNode.java\n@@ -50,7 +50,7 @@\n     }\n \n     public boolean hasAttributes() {\n-        return nodeData.getAttributes() == null;\n+        return nodeData.getAttributes() != null;\n     }\n \n     public void setAttributes(Attributes attributes) {\n", "projectName": "gephi.gephi", "bugLineNum": 53, "bugNodeStartChar": 1464, "bugNodeLength": 32, "fixLineNum": 53, "fixNodeStartChar": 1464, "fixNodeLength": 32, "sourceBeforeFix": "nodeData.getAttributes() == null", "sourceAfterFix": "nodeData.getAttributes() != null"}]