[{"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "35eb6a64e279fdd6f92b00764aec0e66e0a8d82f", "fixCommitParentSHA1": "5e61d6a1b3b0251869be71cf2913210dfa870276", "bugFilePath": "modules/swagger-jaxrs2/src/main/java/io/swagger/v3/jaxrs2/SecurityParser.java", "fixPatch": "diff --git a/modules/swagger-jaxrs2/src/main/java/io/swagger/v3/jaxrs2/SecurityParser.java b/modules/swagger-jaxrs2/src/main/java/io/swagger/v3/jaxrs2/SecurityParser.java\nindex 4d3520d..0e94419 100644\n--- a/modules/swagger-jaxrs2/src/main/java/io/swagger/v3/jaxrs2/SecurityParser.java\n+++ b/modules/swagger-jaxrs2/src/main/java/io/swagger/v3/jaxrs2/SecurityParser.java\n@@ -17,7 +17,7 @@\n \n public class SecurityParser {\n \n-    static class SecuritySchemePair {\n+    public static class SecuritySchemePair {\n         public String key;\n         public SecurityScheme securityScheme;\n     }\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 20, "bugNodeStartChar": 618, "bugNodeLength": 112, "fixLineNum": 20, "fixNodeStartChar": 618, "fixNodeLength": 119, "sourceBeforeFix": "8", "sourceAfterFix": "9"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "a2838169e30225be8ccb952cff82c792fcbcc95f", "fixCommitParentSHA1": "5e61d6a1b3b0251869be71cf2913210dfa870276", "bugFilePath": "modules/swagger-jaxrs2/src/main/java/io/swagger/v3/jaxrs2/SecurityParser.java", "fixPatch": "diff --git a/modules/swagger-jaxrs2/src/main/java/io/swagger/v3/jaxrs2/SecurityParser.java b/modules/swagger-jaxrs2/src/main/java/io/swagger/v3/jaxrs2/SecurityParser.java\nindex 4d3520d..0e94419 100644\n--- a/modules/swagger-jaxrs2/src/main/java/io/swagger/v3/jaxrs2/SecurityParser.java\n+++ b/modules/swagger-jaxrs2/src/main/java/io/swagger/v3/jaxrs2/SecurityParser.java\n@@ -17,7 +17,7 @@\n \n public class SecurityParser {\n \n-    static class SecuritySchemePair {\n+    public static class SecuritySchemePair {\n         public String key;\n         public SecurityScheme securityScheme;\n     }\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 20, "bugNodeStartChar": 618, "bugNodeLength": 112, "fixLineNum": 20, "fixNodeStartChar": 618, "fixNodeLength": 119, "sourceBeforeFix": "8", "sourceAfterFix": "9"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "a261bf70759098246da6a7ac5463d1db8a907214", "fixCommitParentSHA1": "3657ae857400034a5f65c021b8847b91ed46902d", "bugFilePath": "modules/swagger-core/src/main/java/io/swagger/v3/core/jackson/ModelResolver.java", "fixPatch": "diff --git a/modules/swagger-core/src/main/java/io/swagger/v3/core/jackson/ModelResolver.java b/modules/swagger-core/src/main/java/io/swagger/v3/core/jackson/ModelResolver.java\nindex baea6e8..aeca799 100644\n--- a/modules/swagger-core/src/main/java/io/swagger/v3/core/jackson/ModelResolver.java\n+++ b/modules/swagger-core/src/main/java/io/swagger/v3/core/jackson/ModelResolver.java\n@@ -999,7 +999,7 @@\n                 }\n             }\n         }\n-        if (subtypeProps.isEmpty()) {\n+        if (subtypeProps == null || subtypeProps.isEmpty()) {\n             child.setProperties(null);\n         }\n     }\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 1002, "bugNodeStartChar": 45381, "bugNodeLength": 22, "fixLineNum": 1002, "fixNodeStartChar": 45381, "fixNodeLength": 46, "sourceBeforeFix": "subtypeProps.isEmpty()", "sourceAfterFix": "subtypeProps == null || subtypeProps.isEmpty()"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "09ca7c3d598d13a865596fbfd5b2a6dc6ece7237", "fixCommitParentSHA1": "3657ae857400034a5f65c021b8847b91ed46902d", "bugFilePath": "modules/swagger-core/src/main/java/io/swagger/v3/core/jackson/ModelResolver.java", "fixPatch": "diff --git a/modules/swagger-core/src/main/java/io/swagger/v3/core/jackson/ModelResolver.java b/modules/swagger-core/src/main/java/io/swagger/v3/core/jackson/ModelResolver.java\nindex baea6e8..aeca799 100644\n--- a/modules/swagger-core/src/main/java/io/swagger/v3/core/jackson/ModelResolver.java\n+++ b/modules/swagger-core/src/main/java/io/swagger/v3/core/jackson/ModelResolver.java\n@@ -999,7 +999,7 @@\n                 }\n             }\n         }\n-        if (subtypeProps.isEmpty()) {\n+        if (subtypeProps == null || subtypeProps.isEmpty()) {\n             child.setProperties(null);\n         }\n     }\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 1002, "bugNodeStartChar": 45381, "bugNodeLength": 22, "fixLineNum": 1002, "fixNodeStartChar": 45381, "fixNodeLength": 46, "sourceBeforeFix": "subtypeProps.isEmpty()", "sourceAfterFix": "subtypeProps == null || subtypeProps.isEmpty()"}, {"bugType": "OVERLOAD_METHOD_DELETED_ARGS", "fixCommitSHA1": "3e1c4d53a4730e2660c191def7615501a6fe982f", "fixCommitParentSHA1": "343d8ad1d36b18ab8d697bfcc2c3566bae34229b", "bugFilePath": "modules/swagger-core/src/main/java/io/swagger/v3/core/jackson/ModelResolver.java", "fixPatch": "diff --git a/modules/swagger-core/src/main/java/io/swagger/v3/core/jackson/ModelResolver.java b/modules/swagger-core/src/main/java/io/swagger/v3/core/jackson/ModelResolver.java\nindex df1d55f..739a52d 100644\n--- a/modules/swagger-core/src/main/java/io/swagger/v3/core/jackson/ModelResolver.java\n+++ b/modules/swagger-core/src/main/java/io/swagger/v3/core/jackson/ModelResolver.java\n@@ -445,7 +445,7 @@\n             final AnnotatedMember member = propDef.getPrimaryMember();\n             if (member != null && !ignore(member, xmlAccessorTypeAnnotation, propName, propertiesToIgnore)) {\n \n-                JavaType propType = member.getType(beanDesc.bindingsForBeanType());\n+                JavaType propType = member.getType();\n                 property = resolveAnnotatedType(propType, member, propName, context, model, (t, a) -> {\n                     JsonUnwrapped uw = member.getAnnotation(JsonUnwrapped.class);\n                     if (uw != null && uw.enabled()) {\n@@ -636,7 +636,7 @@\n                     final String name = def.getName();\n                     if (name != null && name.equals(propertyName)) {\n                         final AnnotatedMember propMember = def.getPrimaryMember();\n-                        final JavaType propType = propMember.getType(beanDesc.bindingsForBeanType());\n+                        final JavaType propType = propMember.getType();\n                         if (PrimitiveType.fromType(propType) != null) {\n                             return PrimitiveType.createProperty(propType);\n                         } else {\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 448, "bugNodeStartChar": 19757, "bugNodeLength": 46, "fixLineNum": 448, "fixNodeStartChar": 19757, "fixNodeLength": 16, "sourceBeforeFix": "member.getType(beanDesc.bindingsForBeanType())", "sourceAfterFix": "member.getType()"}, {"bugType": "OVERLOAD_METHOD_DELETED_ARGS", "fixCommitSHA1": "3e1c4d53a4730e2660c191def7615501a6fe982f", "fixCommitParentSHA1": "343d8ad1d36b18ab8d697bfcc2c3566bae34229b", "bugFilePath": "modules/swagger-core/src/main/java/io/swagger/v3/core/jackson/ModelResolver.java", "fixPatch": "diff --git a/modules/swagger-core/src/main/java/io/swagger/v3/core/jackson/ModelResolver.java b/modules/swagger-core/src/main/java/io/swagger/v3/core/jackson/ModelResolver.java\nindex df1d55f..739a52d 100644\n--- a/modules/swagger-core/src/main/java/io/swagger/v3/core/jackson/ModelResolver.java\n+++ b/modules/swagger-core/src/main/java/io/swagger/v3/core/jackson/ModelResolver.java\n@@ -445,7 +445,7 @@\n             final AnnotatedMember member = propDef.getPrimaryMember();\n             if (member != null && !ignore(member, xmlAccessorTypeAnnotation, propName, propertiesToIgnore)) {\n \n-                JavaType propType = member.getType(beanDesc.bindingsForBeanType());\n+                JavaType propType = member.getType();\n                 property = resolveAnnotatedType(propType, member, propName, context, model, (t, a) -> {\n                     JsonUnwrapped uw = member.getAnnotation(JsonUnwrapped.class);\n                     if (uw != null && uw.enabled()) {\n@@ -636,7 +636,7 @@\n                     final String name = def.getName();\n                     if (name != null && name.equals(propertyName)) {\n                         final AnnotatedMember propMember = def.getPrimaryMember();\n-                        final JavaType propType = propMember.getType(beanDesc.bindingsForBeanType());\n+                        final JavaType propType = propMember.getType();\n                         if (PrimitiveType.fromType(propType) != null) {\n                             return PrimitiveType.createProperty(propType);\n                         } else {\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 639, "bugNodeStartChar": 28549, "bugNodeLength": 50, "fixLineNum": 639, "fixNodeStartChar": 28549, "fixNodeLength": 20, "sourceBeforeFix": "propMember.getType(beanDesc.bindingsForBeanType())", "sourceAfterFix": "propMember.getType()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "f3a55f30abec0d1445ef65a89b16e49e3a8e2a2d", "fixCommitParentSHA1": "18c91c9a1d0596c6fa73a924ecd86182f9a5d985", "bugFilePath": "modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java", "fixPatch": "diff --git a/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java b/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java\nindex d5eb567..73d8a86 100644\n--- a/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java\n+++ b/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java\n@@ -114,7 +114,7 @@\n \n                 // Gather the field's details\n                 if (field != null) {\n-                    paramType = field.getRawType();\n+                \tparamType = field.getType();\n \n                     for (final Annotation fieldAnnotation : field.annotations()) {\n                         if (!paramAnnotations.contains(fieldAnnotation)) {\n@@ -127,7 +127,8 @@\n                 if (setter != null) {\n                     // Do not set the param class/type from the setter if the values are already identified\n                     if (paramType == null) {\n-                        paramType = setter.getRawParameterTypes() != null ? setter.getRawParameterTypes()[0] : null;\n+                    \t// paramType will stay null if there is no parameter\n+                    \tparamType = setter.getParameterType(0); \n                     }\n \n                     for (final Annotation fieldAnnotation : setter.annotations()) {\n@@ -141,7 +142,7 @@\n                 if (getter != null) {\n                     // Do not set the param class/type from the getter if the values are already identified\n                     if (paramType == null) {\n-                        paramType = getter.getRawReturnType();\n+                        paramType = getter.getType();\n                     }\n \n                     for (final Annotation fieldAnnotation : getter.annotations()) {\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 117, "bugNodeStartChar": 4834, "bugNodeLength": 18, "fixLineNum": 117, "fixNodeStartChar": 4831, "fixNodeLength": 15, "sourceBeforeFix": "field.getRawType()", "sourceAfterFix": "field.getType()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "f3a55f30abec0d1445ef65a89b16e49e3a8e2a2d", "fixCommitParentSHA1": "18c91c9a1d0596c6fa73a924ecd86182f9a5d985", "bugFilePath": "modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java", "fixPatch": "diff --git a/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java b/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java\nindex d5eb567..73d8a86 100644\n--- a/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java\n+++ b/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java\n@@ -114,7 +114,7 @@\n \n                 // Gather the field's details\n                 if (field != null) {\n-                    paramType = field.getRawType();\n+                \tparamType = field.getType();\n \n                     for (final Annotation fieldAnnotation : field.annotations()) {\n                         if (!paramAnnotations.contains(fieldAnnotation)) {\n@@ -127,7 +127,8 @@\n                 if (setter != null) {\n                     // Do not set the param class/type from the setter if the values are already identified\n                     if (paramType == null) {\n-                        paramType = setter.getRawParameterTypes() != null ? setter.getRawParameterTypes()[0] : null;\n+                    \t// paramType will stay null if there is no parameter\n+                    \tparamType = setter.getParameterType(0); \n                     }\n \n                     for (final Annotation fieldAnnotation : setter.annotations()) {\n@@ -141,7 +142,7 @@\n                 if (getter != null) {\n                     // Do not set the param class/type from the getter if the values are already identified\n                     if (paramType == null) {\n-                        paramType = getter.getRawReturnType();\n+                        paramType = getter.getType();\n                     }\n \n                     for (final Annotation fieldAnnotation : getter.annotations()) {\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 117, "bugNodeStartChar": 4834, "bugNodeLength": 18, "fixLineNum": 117, "fixNodeStartChar": 4831, "fixNodeLength": 15, "sourceBeforeFix": "field.getRawType()", "sourceAfterFix": "field.getType()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "f3a55f30abec0d1445ef65a89b16e49e3a8e2a2d", "fixCommitParentSHA1": "18c91c9a1d0596c6fa73a924ecd86182f9a5d985", "bugFilePath": "modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java", "fixPatch": "diff --git a/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java b/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java\nindex d5eb567..73d8a86 100644\n--- a/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java\n+++ b/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java\n@@ -114,7 +114,7 @@\n \n                 // Gather the field's details\n                 if (field != null) {\n-                    paramType = field.getRawType();\n+                \tparamType = field.getType();\n \n                     for (final Annotation fieldAnnotation : field.annotations()) {\n                         if (!paramAnnotations.contains(fieldAnnotation)) {\n@@ -127,7 +127,8 @@\n                 if (setter != null) {\n                     // Do not set the param class/type from the setter if the values are already identified\n                     if (paramType == null) {\n-                        paramType = setter.getRawParameterTypes() != null ? setter.getRawParameterTypes()[0] : null;\n+                    \t// paramType will stay null if there is no parameter\n+                    \tparamType = setter.getParameterType(0); \n                     }\n \n                     for (final Annotation fieldAnnotation : setter.annotations()) {\n@@ -141,7 +142,7 @@\n                 if (getter != null) {\n                     // Do not set the param class/type from the getter if the values are already identified\n                     if (paramType == null) {\n-                        paramType = getter.getRawReturnType();\n+                        paramType = getter.getType();\n                     }\n \n                     for (final Annotation fieldAnnotation : getter.annotations()) {\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 144, "bugNodeStartChar": 6144, "bugNodeLength": 25, "fixLineNum": 144, "fixNodeStartChar": 6144, "fixNodeLength": 16, "sourceBeforeFix": "getter.getRawReturnType()", "sourceAfterFix": "getter.getType()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "f3a55f30abec0d1445ef65a89b16e49e3a8e2a2d", "fixCommitParentSHA1": "18c91c9a1d0596c6fa73a924ecd86182f9a5d985", "bugFilePath": "modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java", "fixPatch": "diff --git a/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java b/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java\nindex d5eb567..73d8a86 100644\n--- a/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java\n+++ b/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java\n@@ -114,7 +114,7 @@\n \n                 // Gather the field's details\n                 if (field != null) {\n-                    paramType = field.getRawType();\n+                \tparamType = field.getType();\n \n                     for (final Annotation fieldAnnotation : field.annotations()) {\n                         if (!paramAnnotations.contains(fieldAnnotation)) {\n@@ -127,7 +127,8 @@\n                 if (setter != null) {\n                     // Do not set the param class/type from the setter if the values are already identified\n                     if (paramType == null) {\n-                        paramType = setter.getRawParameterTypes() != null ? setter.getRawParameterTypes()[0] : null;\n+                    \t// paramType will stay null if there is no parameter\n+                    \tparamType = setter.getParameterType(0); \n                     }\n \n                     for (final Annotation fieldAnnotation : setter.annotations()) {\n@@ -141,7 +142,7 @@\n                 if (getter != null) {\n                     // Do not set the param class/type from the getter if the values are already identified\n                     if (paramType == null) {\n-                        paramType = getter.getRawReturnType();\n+                        paramType = getter.getType();\n                     }\n \n                     for (final Annotation fieldAnnotation : getter.annotations()) {\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 144, "bugNodeStartChar": 6144, "bugNodeLength": 25, "fixLineNum": 144, "fixNodeStartChar": 6144, "fixNodeLength": 16, "sourceBeforeFix": "getter.getRawReturnType()", "sourceAfterFix": "getter.getType()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "85d8d2fce8253c065ccaa9b02d8a30a58bbea67b", "fixCommitParentSHA1": "e20e13f7ec191861d29ea79ce01b950cd9212f43", "bugFilePath": "modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java", "fixPatch": "diff --git a/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java b/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java\nindex d5eb567..73d8a86 100644\n--- a/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java\n+++ b/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java\n@@ -114,7 +114,7 @@\n \n                 // Gather the field's details\n                 if (field != null) {\n-                    paramType = field.getRawType();\n+                \tparamType = field.getType();\n \n                     for (final Annotation fieldAnnotation : field.annotations()) {\n                         if (!paramAnnotations.contains(fieldAnnotation)) {\n@@ -127,7 +127,8 @@\n                 if (setter != null) {\n                     // Do not set the param class/type from the setter if the values are already identified\n                     if (paramType == null) {\n-                        paramType = setter.getRawParameterTypes() != null ? setter.getRawParameterTypes()[0] : null;\n+                    \t// paramType will stay null if there is no parameter\n+                    \tparamType = setter.getParameterType(0); \n                     }\n \n                     for (final Annotation fieldAnnotation : setter.annotations()) {\n@@ -141,7 +142,7 @@\n                 if (getter != null) {\n                     // Do not set the param class/type from the getter if the values are already identified\n                     if (paramType == null) {\n-                        paramType = getter.getRawReturnType();\n+                        paramType = getter.getType();\n                     }\n \n                     for (final Annotation fieldAnnotation : getter.annotations()) {\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 117, "bugNodeStartChar": 4834, "bugNodeLength": 18, "fixLineNum": 117, "fixNodeStartChar": 4831, "fixNodeLength": 15, "sourceBeforeFix": "field.getRawType()", "sourceAfterFix": "field.getType()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "85d8d2fce8253c065ccaa9b02d8a30a58bbea67b", "fixCommitParentSHA1": "e20e13f7ec191861d29ea79ce01b950cd9212f43", "bugFilePath": "modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java", "fixPatch": "diff --git a/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java b/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java\nindex d5eb567..73d8a86 100644\n--- a/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java\n+++ b/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java\n@@ -114,7 +114,7 @@\n \n                 // Gather the field's details\n                 if (field != null) {\n-                    paramType = field.getRawType();\n+                \tparamType = field.getType();\n \n                     for (final Annotation fieldAnnotation : field.annotations()) {\n                         if (!paramAnnotations.contains(fieldAnnotation)) {\n@@ -127,7 +127,8 @@\n                 if (setter != null) {\n                     // Do not set the param class/type from the setter if the values are already identified\n                     if (paramType == null) {\n-                        paramType = setter.getRawParameterTypes() != null ? setter.getRawParameterTypes()[0] : null;\n+                    \t// paramType will stay null if there is no parameter\n+                    \tparamType = setter.getParameterType(0); \n                     }\n \n                     for (final Annotation fieldAnnotation : setter.annotations()) {\n@@ -141,7 +142,7 @@\n                 if (getter != null) {\n                     // Do not set the param class/type from the getter if the values are already identified\n                     if (paramType == null) {\n-                        paramType = getter.getRawReturnType();\n+                        paramType = getter.getType();\n                     }\n \n                     for (final Annotation fieldAnnotation : getter.annotations()) {\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 117, "bugNodeStartChar": 4834, "bugNodeLength": 18, "fixLineNum": 117, "fixNodeStartChar": 4831, "fixNodeLength": 15, "sourceBeforeFix": "field.getRawType()", "sourceAfterFix": "field.getType()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "85d8d2fce8253c065ccaa9b02d8a30a58bbea67b", "fixCommitParentSHA1": "e20e13f7ec191861d29ea79ce01b950cd9212f43", "bugFilePath": "modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java", "fixPatch": "diff --git a/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java b/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java\nindex d5eb567..73d8a86 100644\n--- a/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java\n+++ b/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java\n@@ -114,7 +114,7 @@\n \n                 // Gather the field's details\n                 if (field != null) {\n-                    paramType = field.getRawType();\n+                \tparamType = field.getType();\n \n                     for (final Annotation fieldAnnotation : field.annotations()) {\n                         if (!paramAnnotations.contains(fieldAnnotation)) {\n@@ -127,7 +127,8 @@\n                 if (setter != null) {\n                     // Do not set the param class/type from the setter if the values are already identified\n                     if (paramType == null) {\n-                        paramType = setter.getRawParameterTypes() != null ? setter.getRawParameterTypes()[0] : null;\n+                    \t// paramType will stay null if there is no parameter\n+                    \tparamType = setter.getParameterType(0); \n                     }\n \n                     for (final Annotation fieldAnnotation : setter.annotations()) {\n@@ -141,7 +142,7 @@\n                 if (getter != null) {\n                     // Do not set the param class/type from the getter if the values are already identified\n                     if (paramType == null) {\n-                        paramType = getter.getRawReturnType();\n+                        paramType = getter.getType();\n                     }\n \n                     for (final Annotation fieldAnnotation : getter.annotations()) {\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 144, "bugNodeStartChar": 6144, "bugNodeLength": 25, "fixLineNum": 144, "fixNodeStartChar": 6144, "fixNodeLength": 16, "sourceBeforeFix": "getter.getRawReturnType()", "sourceAfterFix": "getter.getType()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "85d8d2fce8253c065ccaa9b02d8a30a58bbea67b", "fixCommitParentSHA1": "e20e13f7ec191861d29ea79ce01b950cd9212f43", "bugFilePath": "modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java", "fixPatch": "diff --git a/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java b/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java\nindex d5eb567..73d8a86 100644\n--- a/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java\n+++ b/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java\n@@ -114,7 +114,7 @@\n \n                 // Gather the field's details\n                 if (field != null) {\n-                    paramType = field.getRawType();\n+                \tparamType = field.getType();\n \n                     for (final Annotation fieldAnnotation : field.annotations()) {\n                         if (!paramAnnotations.contains(fieldAnnotation)) {\n@@ -127,7 +127,8 @@\n                 if (setter != null) {\n                     // Do not set the param class/type from the setter if the values are already identified\n                     if (paramType == null) {\n-                        paramType = setter.getRawParameterTypes() != null ? setter.getRawParameterTypes()[0] : null;\n+                    \t// paramType will stay null if there is no parameter\n+                    \tparamType = setter.getParameterType(0); \n                     }\n \n                     for (final Annotation fieldAnnotation : setter.annotations()) {\n@@ -141,7 +142,7 @@\n                 if (getter != null) {\n                     // Do not set the param class/type from the getter if the values are already identified\n                     if (paramType == null) {\n-                        paramType = getter.getRawReturnType();\n+                        paramType = getter.getType();\n                     }\n \n                     for (final Annotation fieldAnnotation : getter.annotations()) {\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 144, "bugNodeStartChar": 6144, "bugNodeLength": 25, "fixLineNum": 144, "fixNodeStartChar": 6144, "fixNodeLength": 16, "sourceBeforeFix": "getter.getRawReturnType()", "sourceAfterFix": "getter.getType()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "fc78d3384d12c17b4a4234a1d8f1568bf4dd3bc4", "fixCommitParentSHA1": "75dbcb374fa32e6cc792b58ea5b6d5f0c8d920b5", "bugFilePath": "modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/DefaultParameterExtension.java", "fixPatch": "diff --git a/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/DefaultParameterExtension.java b/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/DefaultParameterExtension.java\nindex 75f3043..d7c694a 100644\n--- a/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/DefaultParameterExtension.java\n+++ b/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/DefaultParameterExtension.java\n@@ -140,7 +140,7 @@\n \n                 // Gather the field's details\n                 if (field != null) {\n-                    paramType = field.getRawType();\n+                    paramType = field.getType();\n \n                     for (final Annotation fieldAnnotation : field.annotations()) {\n                         if (!paramAnnotations.contains(fieldAnnotation)) {\n@@ -153,7 +153,8 @@\n                 if (setter != null) {\n                     // Do not set the param class/type from the setter if the values are already identified\n                     if (paramType == null) {\n-                        paramType = setter.getRawParameterTypes() != null ? setter.getRawParameterTypes()[0] : null;\n+                    \t// paramType will stay null if there is no parameter\n+                        paramType = setter.getParameterType(0); \n                     }\n \n                     for (final Annotation fieldAnnotation : setter.annotations()) {\n@@ -167,7 +168,7 @@\n                 if (getter != null) {\n                     // Do not set the param class/type from the getter if the values are already identified\n                     if (paramType == null) {\n-                        paramType = getter.getRawReturnType();\n+                        paramType = getter.getType();\n                     }\n \n                     for (final Annotation fieldAnnotation : getter.annotations()) {\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 143, "bugNodeStartChar": 5895, "bugNodeLength": 18, "fixLineNum": 143, "fixNodeStartChar": 5895, "fixNodeLength": 15, "sourceBeforeFix": "field.getRawType()", "sourceAfterFix": "field.getType()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "fc78d3384d12c17b4a4234a1d8f1568bf4dd3bc4", "fixCommitParentSHA1": "75dbcb374fa32e6cc792b58ea5b6d5f0c8d920b5", "bugFilePath": "modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/DefaultParameterExtension.java", "fixPatch": "diff --git a/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/DefaultParameterExtension.java b/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/DefaultParameterExtension.java\nindex 75f3043..d7c694a 100644\n--- a/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/DefaultParameterExtension.java\n+++ b/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/DefaultParameterExtension.java\n@@ -140,7 +140,7 @@\n \n                 // Gather the field's details\n                 if (field != null) {\n-                    paramType = field.getRawType();\n+                    paramType = field.getType();\n \n                     for (final Annotation fieldAnnotation : field.annotations()) {\n                         if (!paramAnnotations.contains(fieldAnnotation)) {\n@@ -153,7 +153,8 @@\n                 if (setter != null) {\n                     // Do not set the param class/type from the setter if the values are already identified\n                     if (paramType == null) {\n-                        paramType = setter.getRawParameterTypes() != null ? setter.getRawParameterTypes()[0] : null;\n+                    \t// paramType will stay null if there is no parameter\n+                        paramType = setter.getParameterType(0); \n                     }\n \n                     for (final Annotation fieldAnnotation : setter.annotations()) {\n@@ -167,7 +168,7 @@\n                 if (getter != null) {\n                     // Do not set the param class/type from the getter if the values are already identified\n                     if (paramType == null) {\n-                        paramType = getter.getRawReturnType();\n+                        paramType = getter.getType();\n                     }\n \n                     for (final Annotation fieldAnnotation : getter.annotations()) {\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 143, "bugNodeStartChar": 5895, "bugNodeLength": 18, "fixLineNum": 143, "fixNodeStartChar": 5895, "fixNodeLength": 15, "sourceBeforeFix": "field.getRawType()", "sourceAfterFix": "field.getType()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "fc78d3384d12c17b4a4234a1d8f1568bf4dd3bc4", "fixCommitParentSHA1": "75dbcb374fa32e6cc792b58ea5b6d5f0c8d920b5", "bugFilePath": "modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/DefaultParameterExtension.java", "fixPatch": "diff --git a/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/DefaultParameterExtension.java b/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/DefaultParameterExtension.java\nindex 75f3043..d7c694a 100644\n--- a/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/DefaultParameterExtension.java\n+++ b/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/DefaultParameterExtension.java\n@@ -140,7 +140,7 @@\n \n                 // Gather the field's details\n                 if (field != null) {\n-                    paramType = field.getRawType();\n+                    paramType = field.getType();\n \n                     for (final Annotation fieldAnnotation : field.annotations()) {\n                         if (!paramAnnotations.contains(fieldAnnotation)) {\n@@ -153,7 +153,8 @@\n                 if (setter != null) {\n                     // Do not set the param class/type from the setter if the values are already identified\n                     if (paramType == null) {\n-                        paramType = setter.getRawParameterTypes() != null ? setter.getRawParameterTypes()[0] : null;\n+                    \t// paramType will stay null if there is no parameter\n+                        paramType = setter.getParameterType(0); \n                     }\n \n                     for (final Annotation fieldAnnotation : setter.annotations()) {\n@@ -167,7 +168,7 @@\n                 if (getter != null) {\n                     // Do not set the param class/type from the getter if the values are already identified\n                     if (paramType == null) {\n-                        paramType = getter.getRawReturnType();\n+                        paramType = getter.getType();\n                     }\n \n                     for (final Annotation fieldAnnotation : getter.annotations()) {\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 170, "bugNodeStartChar": 7221, "bugNodeLength": 25, "fixLineNum": 170, "fixNodeStartChar": 7221, "fixNodeLength": 16, "sourceBeforeFix": "getter.getRawReturnType()", "sourceAfterFix": "getter.getType()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "fc78d3384d12c17b4a4234a1d8f1568bf4dd3bc4", "fixCommitParentSHA1": "75dbcb374fa32e6cc792b58ea5b6d5f0c8d920b5", "bugFilePath": "modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/DefaultParameterExtension.java", "fixPatch": "diff --git a/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/DefaultParameterExtension.java b/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/DefaultParameterExtension.java\nindex 75f3043..d7c694a 100644\n--- a/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/DefaultParameterExtension.java\n+++ b/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/DefaultParameterExtension.java\n@@ -140,7 +140,7 @@\n \n                 // Gather the field's details\n                 if (field != null) {\n-                    paramType = field.getRawType();\n+                    paramType = field.getType();\n \n                     for (final Annotation fieldAnnotation : field.annotations()) {\n                         if (!paramAnnotations.contains(fieldAnnotation)) {\n@@ -153,7 +153,8 @@\n                 if (setter != null) {\n                     // Do not set the param class/type from the setter if the values are already identified\n                     if (paramType == null) {\n-                        paramType = setter.getRawParameterTypes() != null ? setter.getRawParameterTypes()[0] : null;\n+                    \t// paramType will stay null if there is no parameter\n+                        paramType = setter.getParameterType(0); \n                     }\n \n                     for (final Annotation fieldAnnotation : setter.annotations()) {\n@@ -167,7 +168,7 @@\n                 if (getter != null) {\n                     // Do not set the param class/type from the getter if the values are already identified\n                     if (paramType == null) {\n-                        paramType = getter.getRawReturnType();\n+                        paramType = getter.getType();\n                     }\n \n                     for (final Annotation fieldAnnotation : getter.annotations()) {\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 170, "bugNodeStartChar": 7221, "bugNodeLength": 25, "fixLineNum": 170, "fixNodeStartChar": 7221, "fixNodeLength": 16, "sourceBeforeFix": "getter.getRawReturnType()", "sourceAfterFix": "getter.getType()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "4597da262b00311e03c657db986f712387def622", "fixCommitParentSHA1": "3f1c673602646cd2bb1fc7af3b47ec12d7708112", "bugFilePath": "modules/swagger-core/src/test/java/io/swagger/ModelSerializerTest.java", "fixPatch": "diff --git a/modules/swagger-core/src/test/java/io/swagger/ModelSerializerTest.java b/modules/swagger-core/src/test/java/io/swagger/ModelSerializerTest.java\nindex adbdcec..07b33c3 100644\n--- a/modules/swagger-core/src/test/java/io/swagger/ModelSerializerTest.java\n+++ b/modules/swagger-core/src/test/java/io/swagger/ModelSerializerTest.java\n@@ -324,7 +324,7 @@\n \n         final ModelImpl model = Json.mapper().readValue(json, ModelImpl.class);\n \n-        assertTrue(model.getUniqueItems());\n+        assertFalse(model.getUniqueItems());\n     }\n \n     @Test\n@@ -336,6 +336,6 @@\n \n         final ModelImpl model = Json.mapper().readValue(json, ModelImpl.class);\n \n-        assertFalse(model.getUniqueItems());\n+        assertTrue(model.getUniqueItems());\n     }\n }\n\\ No newline at end of file\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 327, "bugNodeStartChar": 13199, "bugNodeLength": 34, "fixLineNum": 327, "fixNodeStartChar": 13199, "fixNodeLength": 35, "sourceBeforeFix": "assertTrue(model.getUniqueItems())", "sourceAfterFix": "assertFalse(model.getUniqueItems())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4597da262b00311e03c657db986f712387def622", "fixCommitParentSHA1": "3f1c673602646cd2bb1fc7af3b47ec12d7708112", "bugFilePath": "modules/swagger-core/src/test/java/io/swagger/ModelSerializerTest.java", "fixPatch": "diff --git a/modules/swagger-core/src/test/java/io/swagger/ModelSerializerTest.java b/modules/swagger-core/src/test/java/io/swagger/ModelSerializerTest.java\nindex adbdcec..07b33c3 100644\n--- a/modules/swagger-core/src/test/java/io/swagger/ModelSerializerTest.java\n+++ b/modules/swagger-core/src/test/java/io/swagger/ModelSerializerTest.java\n@@ -324,7 +324,7 @@\n \n         final ModelImpl model = Json.mapper().readValue(json, ModelImpl.class);\n \n-        assertTrue(model.getUniqueItems());\n+        assertFalse(model.getUniqueItems());\n     }\n \n     @Test\n@@ -336,6 +336,6 @@\n \n         final ModelImpl model = Json.mapper().readValue(json, ModelImpl.class);\n \n-        assertFalse(model.getUniqueItems());\n+        assertTrue(model.getUniqueItems());\n     }\n }\n\\ No newline at end of file\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 327, "bugNodeStartChar": 13199, "bugNodeLength": 34, "fixLineNum": 327, "fixNodeStartChar": 13199, "fixNodeLength": 35, "sourceBeforeFix": "assertTrue(model.getUniqueItems())", "sourceAfterFix": "assertFalse(model.getUniqueItems())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "4597da262b00311e03c657db986f712387def622", "fixCommitParentSHA1": "3f1c673602646cd2bb1fc7af3b47ec12d7708112", "bugFilePath": "modules/swagger-core/src/test/java/io/swagger/ModelSerializerTest.java", "fixPatch": "diff --git a/modules/swagger-core/src/test/java/io/swagger/ModelSerializerTest.java b/modules/swagger-core/src/test/java/io/swagger/ModelSerializerTest.java\nindex adbdcec..07b33c3 100644\n--- a/modules/swagger-core/src/test/java/io/swagger/ModelSerializerTest.java\n+++ b/modules/swagger-core/src/test/java/io/swagger/ModelSerializerTest.java\n@@ -324,7 +324,7 @@\n \n         final ModelImpl model = Json.mapper().readValue(json, ModelImpl.class);\n \n-        assertTrue(model.getUniqueItems());\n+        assertFalse(model.getUniqueItems());\n     }\n \n     @Test\n@@ -336,6 +336,6 @@\n \n         final ModelImpl model = Json.mapper().readValue(json, ModelImpl.class);\n \n-        assertFalse(model.getUniqueItems());\n+        assertTrue(model.getUniqueItems());\n     }\n }\n\\ No newline at end of file\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 339, "bugNodeStartChar": 13524, "bugNodeLength": 35, "fixLineNum": 339, "fixNodeStartChar": 13524, "fixNodeLength": 34, "sourceBeforeFix": "assertFalse(model.getUniqueItems())", "sourceAfterFix": "assertTrue(model.getUniqueItems())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4597da262b00311e03c657db986f712387def622", "fixCommitParentSHA1": "3f1c673602646cd2bb1fc7af3b47ec12d7708112", "bugFilePath": "modules/swagger-core/src/test/java/io/swagger/ModelSerializerTest.java", "fixPatch": "diff --git a/modules/swagger-core/src/test/java/io/swagger/ModelSerializerTest.java b/modules/swagger-core/src/test/java/io/swagger/ModelSerializerTest.java\nindex adbdcec..07b33c3 100644\n--- a/modules/swagger-core/src/test/java/io/swagger/ModelSerializerTest.java\n+++ b/modules/swagger-core/src/test/java/io/swagger/ModelSerializerTest.java\n@@ -324,7 +324,7 @@\n \n         final ModelImpl model = Json.mapper().readValue(json, ModelImpl.class);\n \n-        assertTrue(model.getUniqueItems());\n+        assertFalse(model.getUniqueItems());\n     }\n \n     @Test\n@@ -336,6 +336,6 @@\n \n         final ModelImpl model = Json.mapper().readValue(json, ModelImpl.class);\n \n-        assertFalse(model.getUniqueItems());\n+        assertTrue(model.getUniqueItems());\n     }\n }\n\\ No newline at end of file\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 339, "bugNodeStartChar": 13524, "bugNodeLength": 35, "fixLineNum": 339, "fixNodeStartChar": 13524, "fixNodeLength": 34, "sourceBeforeFix": "assertFalse(model.getUniqueItems())", "sourceAfterFix": "assertTrue(model.getUniqueItems())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "efd00f07de1672cfed0d7751b942b136ff82cd1e", "fixCommitParentSHA1": "155e1a7fe08cbbbae9bf555a3bb44d5af6c42c63", "bugFilePath": "modules/swagger-core/src/main/java/io/swagger/util/ParameterProcessor.java", "fixPatch": "diff --git a/modules/swagger-core/src/main/java/io/swagger/util/ParameterProcessor.java b/modules/swagger-core/src/main/java/io/swagger/util/ParameterProcessor.java\nindex 0b08708..21b970a 100644\n--- a/modules/swagger-core/src/main/java/io/swagger/util/ParameterProcessor.java\n+++ b/modules/swagger-core/src/main/java/io/swagger/util/ParameterProcessor.java\n@@ -376,7 +376,7 @@\n                     apiParam = new ApiImplicitParamWrapper((ApiImplicitParam) item);\n                 } else if (\"javax.ws.rs.DefaultValue\".equals(item.annotationType().getName())) {\n                     try {\n-                        rsDefault = (String) item.getClass().getMethod(\"value\").invoke(item);\n+                        rsDefault = (String) item.annotationType().getMethod(\"value\").invoke(item);\n                     } catch (Exception ex) {\n                         LOGGER.error(\"Invocation of value method failed\", ex);\n                     }\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 379, "bugNodeStartChar": 16766, "bugNodeLength": 15, "fixLineNum": 379, "fixNodeStartChar": 16766, "fixNodeLength": 21, "sourceBeforeFix": "item.getClass()", "sourceAfterFix": "item.annotationType()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "efd00f07de1672cfed0d7751b942b136ff82cd1e", "fixCommitParentSHA1": "155e1a7fe08cbbbae9bf555a3bb44d5af6c42c63", "bugFilePath": "modules/swagger-core/src/main/java/io/swagger/util/ParameterProcessor.java", "fixPatch": "diff --git a/modules/swagger-core/src/main/java/io/swagger/util/ParameterProcessor.java b/modules/swagger-core/src/main/java/io/swagger/util/ParameterProcessor.java\nindex 0b08708..21b970a 100644\n--- a/modules/swagger-core/src/main/java/io/swagger/util/ParameterProcessor.java\n+++ b/modules/swagger-core/src/main/java/io/swagger/util/ParameterProcessor.java\n@@ -376,7 +376,7 @@\n                     apiParam = new ApiImplicitParamWrapper((ApiImplicitParam) item);\n                 } else if (\"javax.ws.rs.DefaultValue\".equals(item.annotationType().getName())) {\n                     try {\n-                        rsDefault = (String) item.getClass().getMethod(\"value\").invoke(item);\n+                        rsDefault = (String) item.annotationType().getMethod(\"value\").invoke(item);\n                     } catch (Exception ex) {\n                         LOGGER.error(\"Invocation of value method failed\", ex);\n                     }\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 379, "bugNodeStartChar": 16766, "bugNodeLength": 15, "fixLineNum": 379, "fixNodeStartChar": 16766, "fixNodeLength": 21, "sourceBeforeFix": "item.getClass()", "sourceAfterFix": "item.annotationType()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "41d67a3d7b3c2cc86be1792d79083f0d56981d2f", "fixCommitParentSHA1": "a8a22bd0edcd3dd902cbcd8683c1f9d2ed79d2a8", "bugFilePath": "modules/swagger-core/src/main/java/io/swagger/util/ParameterProcessor.java", "fixPatch": "diff --git a/modules/swagger-core/src/main/java/io/swagger/util/ParameterProcessor.java b/modules/swagger-core/src/main/java/io/swagger/util/ParameterProcessor.java\nindex 0b08708..21b970a 100644\n--- a/modules/swagger-core/src/main/java/io/swagger/util/ParameterProcessor.java\n+++ b/modules/swagger-core/src/main/java/io/swagger/util/ParameterProcessor.java\n@@ -376,7 +376,7 @@\n                     apiParam = new ApiImplicitParamWrapper((ApiImplicitParam) item);\n                 } else if (\"javax.ws.rs.DefaultValue\".equals(item.annotationType().getName())) {\n                     try {\n-                        rsDefault = (String) item.getClass().getMethod(\"value\").invoke(item);\n+                        rsDefault = (String) item.annotationType().getMethod(\"value\").invoke(item);\n                     } catch (Exception ex) {\n                         LOGGER.error(\"Invocation of value method failed\", ex);\n                     }\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 379, "bugNodeStartChar": 16766, "bugNodeLength": 15, "fixLineNum": 379, "fixNodeStartChar": 16766, "fixNodeLength": 21, "sourceBeforeFix": "item.getClass()", "sourceAfterFix": "item.annotationType()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "41d67a3d7b3c2cc86be1792d79083f0d56981d2f", "fixCommitParentSHA1": "a8a22bd0edcd3dd902cbcd8683c1f9d2ed79d2a8", "bugFilePath": "modules/swagger-core/src/main/java/io/swagger/util/ParameterProcessor.java", "fixPatch": "diff --git a/modules/swagger-core/src/main/java/io/swagger/util/ParameterProcessor.java b/modules/swagger-core/src/main/java/io/swagger/util/ParameterProcessor.java\nindex 0b08708..21b970a 100644\n--- a/modules/swagger-core/src/main/java/io/swagger/util/ParameterProcessor.java\n+++ b/modules/swagger-core/src/main/java/io/swagger/util/ParameterProcessor.java\n@@ -376,7 +376,7 @@\n                     apiParam = new ApiImplicitParamWrapper((ApiImplicitParam) item);\n                 } else if (\"javax.ws.rs.DefaultValue\".equals(item.annotationType().getName())) {\n                     try {\n-                        rsDefault = (String) item.getClass().getMethod(\"value\").invoke(item);\n+                        rsDefault = (String) item.annotationType().getMethod(\"value\").invoke(item);\n                     } catch (Exception ex) {\n                         LOGGER.error(\"Invocation of value method failed\", ex);\n                     }\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 379, "bugNodeStartChar": 16766, "bugNodeLength": 15, "fixLineNum": 379, "fixNodeStartChar": 16766, "fixNodeLength": 21, "sourceBeforeFix": "item.getClass()", "sourceAfterFix": "item.annotationType()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "bc6815fa67ef06bd49f0845c45f41532c93ebfe8", "fixCommitParentSHA1": "16553a2b237014cfeacc6c599561c663a1220543", "bugFilePath": "modules/swagger-jaxrs/src/test/java/io/swagger/models/Pet.java", "fixPatch": "diff --git a/modules/swagger-jaxrs/src/test/java/io/swagger/models/Pet.java b/modules/swagger-jaxrs/src/test/java/io/swagger/models/Pet.java\nindex 622a624..2893e18 100644\n--- a/modules/swagger-jaxrs/src/test/java/io/swagger/models/Pet.java\n+++ b/modules/swagger-jaxrs/src/test/java/io/swagger/models/Pet.java\n@@ -43,7 +43,7 @@\n     }\r\n \r\n     public void setCategoryWithApiModel(CategoryWithApiModel category) {\r\n-        this.categoryWithApiModel = categoryWithApiModel;\r\n+        this.categoryWithApiModel = category;\r\n     }\r\n \r\n     @XmlElement(name = \"name\")\r\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 46, "bugNodeStartChar": 1251, "bugNodeLength": 48, "fixLineNum": 46, "fixNodeStartChar": 1206, "fixNodeLength": 36, "sourceBeforeFix": "this.categoryWithApiModel=categoryWithApiModel", "sourceAfterFix": "this.categoryWithApiModel=category"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "0bdd8d4cae5dbc17b9a830d31e467d9b413cf7a9", "fixCommitParentSHA1": "16553a2b237014cfeacc6c599561c663a1220543", "bugFilePath": "modules/swagger-jaxrs/src/test/java/io/swagger/models/Pet.java", "fixPatch": "diff --git a/modules/swagger-jaxrs/src/test/java/io/swagger/models/Pet.java b/modules/swagger-jaxrs/src/test/java/io/swagger/models/Pet.java\nindex 622a624..2893e18 100644\n--- a/modules/swagger-jaxrs/src/test/java/io/swagger/models/Pet.java\n+++ b/modules/swagger-jaxrs/src/test/java/io/swagger/models/Pet.java\n@@ -43,7 +43,7 @@\n     }\r\n \r\n     public void setCategoryWithApiModel(CategoryWithApiModel category) {\r\n-        this.categoryWithApiModel = categoryWithApiModel;\r\n+        this.categoryWithApiModel = category;\r\n     }\r\n \r\n     @XmlElement(name = \"name\")\r\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 46, "bugNodeStartChar": 1251, "bugNodeLength": 48, "fixLineNum": 46, "fixNodeStartChar": 1206, "fixNodeLength": 36, "sourceBeforeFix": "this.categoryWithApiModel=categoryWithApiModel", "sourceAfterFix": "this.categoryWithApiModel=category"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "964ff7c2dcd8169005995e40a0269124f89d90bc", "fixCommitParentSHA1": "e9f0b1d2aa886299c45aaf6a42cfa98a89dc6489", "bugFilePath": "modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/Reader.java", "fixPatch": "diff --git a/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/Reader.java b/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/Reader.java\nindex 82d3915..a319ea8 100644\n--- a/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/Reader.java\n+++ b/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/Reader.java\n@@ -489,7 +489,7 @@\n             io.swagger.models.auth.ApiKeyAuthDefinition apiKeyAuthDefinition = new io.swagger.models.auth.ApiKeyAuthDefinition();\n \n             apiKeyAuthDefinition.setName(apiKeyAuthConfig.name());\n-            apiKeyAuthDefinition.setIn(In.valueOf(apiKeyAuthConfig.in().toValue()));\n+            apiKeyAuthDefinition.setIn(In.forValue(apiKeyAuthConfig.in().toValue()));\n             apiKeyAuthDefinition.setDescription(apiKeyAuthConfig.description());\n \n             swagger.addSecurityDefinition(apiKeyAuthConfig.key(), apiKeyAuthDefinition);\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 492, "bugNodeStartChar": 22055, "bugNodeLength": 43, "fixLineNum": 492, "fixNodeStartChar": 22055, "fixNodeLength": 44, "sourceBeforeFix": "In.valueOf(apiKeyAuthConfig.in().toValue())", "sourceAfterFix": "In.forValue(apiKeyAuthConfig.in().toValue())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "964ff7c2dcd8169005995e40a0269124f89d90bc", "fixCommitParentSHA1": "e9f0b1d2aa886299c45aaf6a42cfa98a89dc6489", "bugFilePath": "modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/Reader.java", "fixPatch": "diff --git a/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/Reader.java b/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/Reader.java\nindex 82d3915..a319ea8 100644\n--- a/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/Reader.java\n+++ b/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/Reader.java\n@@ -489,7 +489,7 @@\n             io.swagger.models.auth.ApiKeyAuthDefinition apiKeyAuthDefinition = new io.swagger.models.auth.ApiKeyAuthDefinition();\n \n             apiKeyAuthDefinition.setName(apiKeyAuthConfig.name());\n-            apiKeyAuthDefinition.setIn(In.valueOf(apiKeyAuthConfig.in().toValue()));\n+            apiKeyAuthDefinition.setIn(In.forValue(apiKeyAuthConfig.in().toValue()));\n             apiKeyAuthDefinition.setDescription(apiKeyAuthConfig.description());\n \n             swagger.addSecurityDefinition(apiKeyAuthConfig.key(), apiKeyAuthDefinition);\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 492, "bugNodeStartChar": 22055, "bugNodeLength": 43, "fixLineNum": 492, "fixNodeStartChar": 22055, "fixNodeLength": 44, "sourceBeforeFix": "In.valueOf(apiKeyAuthConfig.in().toValue())", "sourceAfterFix": "In.forValue(apiKeyAuthConfig.in().toValue())"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "6b61905020b584c7e2e7bd5b0b059c166cfb05b2", "fixCommitParentSHA1": "6072e7004130e1e75da373ac1792939909196bc8", "bugFilePath": "modules/swagger-core/src/test/java/io/swagger/ModelSerializerTest.java", "fixPatch": "diff --git a/modules/swagger-core/src/test/java/io/swagger/ModelSerializerTest.java b/modules/swagger-core/src/test/java/io/swagger/ModelSerializerTest.java\nindex 8c01d5e..f63bf73 100644\n--- a/modules/swagger-core/src/test/java/io/swagger/ModelSerializerTest.java\n+++ b/modules/swagger-core/src/test/java/io/swagger/ModelSerializerTest.java\n@@ -280,6 +280,6 @@\n         final ModelImpl model = Json.mapper().readValue(json, ModelImpl.class);\n \n         assertNotNull(model.getEnum());\n-        assertTrue(model.getEnum().size() == 2);\n+        assertTrue(model.getEnum().size() == 3);\n     }\n }\n\\ No newline at end of file\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 283, "bugNodeStartChar": 11634, "bugNodeLength": 27, "fixLineNum": 283, "fixNodeStartChar": 11634, "fixNodeLength": 27, "sourceBeforeFix": "model.getEnum().size() == 2", "sourceAfterFix": "model.getEnum().size() == 3"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "f4764e5d440eb811cf9b5a54717615abaa99ed7d", "fixCommitParentSHA1": "e6f52f88ab97a607239a61430b1c62c6aaf6035c", "bugFilePath": "modules/swagger-core/src/main/java/io/swagger/util/PropertyDeserializer.java", "fixPatch": "diff --git a/modules/swagger-core/src/main/java/io/swagger/util/PropertyDeserializer.java b/modules/swagger-core/src/main/java/io/swagger/util/PropertyDeserializer.java\nindex 83e0621..e278754 100644\n--- a/modules/swagger-core/src/main/java/io/swagger/util/PropertyDeserializer.java\n+++ b/modules/swagger-core/src/main/java/io/swagger/util/PropertyDeserializer.java\n@@ -145,7 +145,7 @@\n \n         if (ObjectProperty.isType(type) || node.get(\"properties\") != null) {\n             detailNode = node.get(\"additionalProperties\");\n-            if (detailNode != null) {\n+            if (detailNode != null && detailNode.getNodeType().equals(JsonNodeType.OBJECT)) {\n                 Property items = propertyFromNode(detailNode);\n                 if (items != null) {\n                     MapProperty mapProperty = new MapProperty(items).description(description);\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 148, "bugNodeStartChar": 5619, "bugNodeLength": 18, "fixLineNum": 148, "fixNodeStartChar": 5619, "fixNodeLength": 74, "sourceBeforeFix": "detailNode != null", "sourceAfterFix": "detailNode != null && detailNode.getNodeType().equals(JsonNodeType.OBJECT)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "69b950bf50cc482a7bac2631a0d4d5afae964a94", "fixCommitParentSHA1": "646d305cafc7de6ae1573b20033006636b2d8d89", "bugFilePath": "modules/swagger-core/src/main/java/io/swagger/util/PrimitiveType.java", "fixPatch": "diff --git a/modules/swagger-core/src/main/java/io/swagger/util/PrimitiveType.java b/modules/swagger-core/src/main/java/io/swagger/util/PrimitiveType.java\nindex 46505bd..8c49809 100644\n--- a/modules/swagger-core/src/main/java/io/swagger/util/PrimitiveType.java\n+++ b/modules/swagger-core/src/main/java/io/swagger/util/PrimitiveType.java\n@@ -201,9 +201,9 @@\n         BASE_CLASSES = Collections.unmodifiableMap(baseClasses);\n \n         final Map<String, PrimitiveType> externalClasses = new HashMap<String, PrimitiveType>();\n-        addKeys(externalClasses, DATE, \"org.joda.time.LocalDate\");\n+        addKeys(externalClasses, DATE, \"org.joda.time.LocalDate\", \"java.time.LocalDate\");\n         addKeys(externalClasses, DATE_TIME, \"org.joda.time.DateTime\", \"org.joda.time.ReadableDateTime\",\n-                \"javax.xml.datatype.XMLGregorianCalendar\");\n+                \"javax.xml.datatype.XMLGregorianCalendar\", \"java.time.LocalDateTime\");\n         EXTERNAL_CLASSES = Collections.unmodifiableMap(externalClasses);\n \n         final Map<String, PrimitiveType> names = new TreeMap<String, PrimitiveType>(String.CASE_INSENSITIVE_ORDER);\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 204, "bugNodeStartChar": 6222, "bugNodeLength": 57, "fixLineNum": 204, "fixNodeStartChar": 6222, "fixNodeLength": 80, "sourceBeforeFix": "addKeys(externalClasses,DATE,\"org.joda.time.LocalDate\")", "sourceAfterFix": "addKeys(externalClasses,DATE,\"org.joda.time.LocalDate\",\"java.time.LocalDate\")"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "69b950bf50cc482a7bac2631a0d4d5afae964a94", "fixCommitParentSHA1": "646d305cafc7de6ae1573b20033006636b2d8d89", "bugFilePath": "modules/swagger-core/src/main/java/io/swagger/util/PrimitiveType.java", "fixPatch": "diff --git a/modules/swagger-core/src/main/java/io/swagger/util/PrimitiveType.java b/modules/swagger-core/src/main/java/io/swagger/util/PrimitiveType.java\nindex 46505bd..8c49809 100644\n--- a/modules/swagger-core/src/main/java/io/swagger/util/PrimitiveType.java\n+++ b/modules/swagger-core/src/main/java/io/swagger/util/PrimitiveType.java\n@@ -201,9 +201,9 @@\n         BASE_CLASSES = Collections.unmodifiableMap(baseClasses);\n \n         final Map<String, PrimitiveType> externalClasses = new HashMap<String, PrimitiveType>();\n-        addKeys(externalClasses, DATE, \"org.joda.time.LocalDate\");\n+        addKeys(externalClasses, DATE, \"org.joda.time.LocalDate\", \"java.time.LocalDate\");\n         addKeys(externalClasses, DATE_TIME, \"org.joda.time.DateTime\", \"org.joda.time.ReadableDateTime\",\n-                \"javax.xml.datatype.XMLGregorianCalendar\");\n+                \"javax.xml.datatype.XMLGregorianCalendar\", \"java.time.LocalDateTime\");\n         EXTERNAL_CLASSES = Collections.unmodifiableMap(externalClasses);\n \n         final Map<String, PrimitiveType> names = new TreeMap<String, PrimitiveType>(String.CASE_INSENSITIVE_ORDER);\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 205, "bugNodeStartChar": 6289, "bugNodeLength": 154, "fixLineNum": 205, "fixNodeStartChar": 6289, "fixNodeLength": 181, "sourceBeforeFix": "addKeys(externalClasses,DATE_TIME,\"org.joda.time.DateTime\",\"org.joda.time.ReadableDateTime\",\"javax.xml.datatype.XMLGregorianCalendar\")", "sourceAfterFix": "addKeys(externalClasses,DATE_TIME,\"org.joda.time.DateTime\",\"org.joda.time.ReadableDateTime\",\"javax.xml.datatype.XMLGregorianCalendar\",\"java.time.LocalDateTime\")"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "be46bcbdc1b71801e798e0d1ed0102fd1ff5d678", "fixCommitParentSHA1": "1a7d0eb20f0542c02477224ed05dc7586c913345", "bugFilePath": "modules/swagger-core/src/main/java/io/swagger/util/PrimitiveType.java", "fixPatch": "diff --git a/modules/swagger-core/src/main/java/io/swagger/util/PrimitiveType.java b/modules/swagger-core/src/main/java/io/swagger/util/PrimitiveType.java\nindex 46505bd..8c49809 100644\n--- a/modules/swagger-core/src/main/java/io/swagger/util/PrimitiveType.java\n+++ b/modules/swagger-core/src/main/java/io/swagger/util/PrimitiveType.java\n@@ -201,9 +201,9 @@\n         BASE_CLASSES = Collections.unmodifiableMap(baseClasses);\n \n         final Map<String, PrimitiveType> externalClasses = new HashMap<String, PrimitiveType>();\n-        addKeys(externalClasses, DATE, \"org.joda.time.LocalDate\");\n+        addKeys(externalClasses, DATE, \"org.joda.time.LocalDate\", \"java.time.LocalDate\");\n         addKeys(externalClasses, DATE_TIME, \"org.joda.time.DateTime\", \"org.joda.time.ReadableDateTime\",\n-                \"javax.xml.datatype.XMLGregorianCalendar\");\n+                \"javax.xml.datatype.XMLGregorianCalendar\", \"java.time.LocalDateTime\");\n         EXTERNAL_CLASSES = Collections.unmodifiableMap(externalClasses);\n \n         final Map<String, PrimitiveType> names = new TreeMap<String, PrimitiveType>(String.CASE_INSENSITIVE_ORDER);\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 204, "bugNodeStartChar": 6222, "bugNodeLength": 57, "fixLineNum": 204, "fixNodeStartChar": 6222, "fixNodeLength": 80, "sourceBeforeFix": "addKeys(externalClasses,DATE,\"org.joda.time.LocalDate\")", "sourceAfterFix": "addKeys(externalClasses,DATE,\"org.joda.time.LocalDate\",\"java.time.LocalDate\")"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "be46bcbdc1b71801e798e0d1ed0102fd1ff5d678", "fixCommitParentSHA1": "1a7d0eb20f0542c02477224ed05dc7586c913345", "bugFilePath": "modules/swagger-core/src/main/java/io/swagger/util/PrimitiveType.java", "fixPatch": "diff --git a/modules/swagger-core/src/main/java/io/swagger/util/PrimitiveType.java b/modules/swagger-core/src/main/java/io/swagger/util/PrimitiveType.java\nindex 46505bd..8c49809 100644\n--- a/modules/swagger-core/src/main/java/io/swagger/util/PrimitiveType.java\n+++ b/modules/swagger-core/src/main/java/io/swagger/util/PrimitiveType.java\n@@ -201,9 +201,9 @@\n         BASE_CLASSES = Collections.unmodifiableMap(baseClasses);\n \n         final Map<String, PrimitiveType> externalClasses = new HashMap<String, PrimitiveType>();\n-        addKeys(externalClasses, DATE, \"org.joda.time.LocalDate\");\n+        addKeys(externalClasses, DATE, \"org.joda.time.LocalDate\", \"java.time.LocalDate\");\n         addKeys(externalClasses, DATE_TIME, \"org.joda.time.DateTime\", \"org.joda.time.ReadableDateTime\",\n-                \"javax.xml.datatype.XMLGregorianCalendar\");\n+                \"javax.xml.datatype.XMLGregorianCalendar\", \"java.time.LocalDateTime\");\n         EXTERNAL_CLASSES = Collections.unmodifiableMap(externalClasses);\n \n         final Map<String, PrimitiveType> names = new TreeMap<String, PrimitiveType>(String.CASE_INSENSITIVE_ORDER);\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 205, "bugNodeStartChar": 6289, "bugNodeLength": 154, "fixLineNum": 205, "fixNodeStartChar": 6289, "fixNodeLength": 181, "sourceBeforeFix": "addKeys(externalClasses,DATE_TIME,\"org.joda.time.DateTime\",\"org.joda.time.ReadableDateTime\",\"javax.xml.datatype.XMLGregorianCalendar\")", "sourceAfterFix": "addKeys(externalClasses,DATE_TIME,\"org.joda.time.DateTime\",\"org.joda.time.ReadableDateTime\",\"javax.xml.datatype.XMLGregorianCalendar\",\"java.time.LocalDateTime\")"}, {"bugType": "SWAP_ARGUMENTS", "fixCommitSHA1": "907ddc126cd19f6a1c464608faa6da739483e682", "fixCommitParentSHA1": "60bbedcda1870593bd25ff5da276ee6af9737651", "bugFilePath": "modules/swagger-core/src/test/java/io/swagger/model/override/OverrideTest.java", "fixPatch": "diff --git a/modules/swagger-core/src/test/java/io/swagger/model/override/OverrideTest.java b/modules/swagger-core/src/test/java/io/swagger/model/override/OverrideTest.java\nindex 3c15918..08235b2 100644\n--- a/modules/swagger-core/src/test/java/io/swagger/model/override/OverrideTest.java\n+++ b/modules/swagger-core/src/test/java/io/swagger/model/override/OverrideTest.java\n@@ -27,8 +27,8 @@\n \n         final Model model = read.get(GenericModel.class.getSimpleName());\n         assertTrue(model.getProperties().containsKey(NAME));\n-        assertEquals(model.getProperties().get(NAME).getType(), \"string\");\n+        assertEquals(\"string\", model.getProperties().get(NAME).getType());\n         assertTrue(model.getProperties().containsKey(COUNT));\n-        assertEquals(model.getProperties().get(COUNT).getType(), \"integer\");\n+        assertEquals(\"integer\", model.getProperties().get(COUNT).getType());\n     }\n }\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 30, "bugNodeStartChar": 1008, "bugNodeLength": 65, "fixLineNum": 30, "fixNodeStartChar": 1008, "fixNodeLength": 65, "sourceBeforeFix": "assertEquals(model.getProperties().get(NAME).getType(),\"string\")", "sourceAfterFix": "assertEquals(\"string\",model.getProperties().get(NAME).getType())"}, {"bugType": "SWAP_ARGUMENTS", "fixCommitSHA1": "907ddc126cd19f6a1c464608faa6da739483e682", "fixCommitParentSHA1": "60bbedcda1870593bd25ff5da276ee6af9737651", "bugFilePath": "modules/swagger-core/src/test/java/io/swagger/model/override/OverrideTest.java", "fixPatch": "diff --git a/modules/swagger-core/src/test/java/io/swagger/model/override/OverrideTest.java b/modules/swagger-core/src/test/java/io/swagger/model/override/OverrideTest.java\nindex 3c15918..08235b2 100644\n--- a/modules/swagger-core/src/test/java/io/swagger/model/override/OverrideTest.java\n+++ b/modules/swagger-core/src/test/java/io/swagger/model/override/OverrideTest.java\n@@ -27,8 +27,8 @@\n \n         final Model model = read.get(GenericModel.class.getSimpleName());\n         assertTrue(model.getProperties().containsKey(NAME));\n-        assertEquals(model.getProperties().get(NAME).getType(), \"string\");\n+        assertEquals(\"string\", model.getProperties().get(NAME).getType());\n         assertTrue(model.getProperties().containsKey(COUNT));\n-        assertEquals(model.getProperties().get(COUNT).getType(), \"integer\");\n+        assertEquals(\"integer\", model.getProperties().get(COUNT).getType());\n     }\n }\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 32, "bugNodeStartChar": 1145, "bugNodeLength": 67, "fixLineNum": 32, "fixNodeStartChar": 1145, "fixNodeLength": 67, "sourceBeforeFix": "assertEquals(model.getProperties().get(COUNT).getType(),\"integer\")", "sourceAfterFix": "assertEquals(\"integer\",model.getProperties().get(COUNT).getType())"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "7b369654b3440d47965e7322daf8f89fa15ebdad", "fixCommitParentSHA1": "400662d7253c0c2efb14316f8948ddc61a60069e", "bugFilePath": "modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/utils/ReflectionUtils.java", "fixPatch": "diff --git a/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/utils/ReflectionUtils.java b/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/utils/ReflectionUtils.java\nindex 4701727..ce0424a 100644\n--- a/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/utils/ReflectionUtils.java\n+++ b/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/utils/ReflectionUtils.java\n@@ -83,7 +83,11 @@\n         Type[] gpTypes = methodToFind.getGenericParameterTypes();\n         methodLoop:\n         for (Method method : cls.getMethods()) {\n-            if (!method.getName().equals(methodToSearch) || !method.getReturnType().isAssignableFrom(methodToFind.getReturnType())) {\n+            if (\n+            \t!method.getName().equals(methodToSearch) || \n+            \t!method.getReturnType().isAssignableFrom(methodToFind.getReturnType()) ||\n+            \tmethod.getParameterTypes().length != pTypes.length\n+            \t) {\n                 continue;\n             }\n             Class<?>[] pt = method.getParameterTypes();\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 86, "bugNodeStartChar": 3325, "bugNodeLength": 114, "fixLineNum": 87, "fixNodeStartChar": 3339, "fixNodeLength": 195, "sourceBeforeFix": "!method.getName().equals(methodToSearch) || !method.getReturnType().isAssignableFrom(methodToFind.getReturnType())", "sourceAfterFix": "!method.getName().equals(methodToSearch) || !method.getReturnType().isAssignableFrom(methodToFind.getReturnType()) || method.getParameterTypes().length != pTypes.length"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "164db8e5245d1da97ccb99b2f093834703486ef9", "fixCommitParentSHA1": "69dbfe25e8f149117d8600b2b454fc94eff32096", "bugFilePath": "modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/listing/ApiListingResource.java", "fixPatch": "diff --git a/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/listing/ApiListingResource.java b/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/listing/ApiListingResource.java\nindex 86113aa..9165322 100644\n--- a/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/listing/ApiListingResource.java\n+++ b/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/listing/ApiListingResource.java\n@@ -40,7 +40,7 @@\n \n @Path(\"/\")\n public class ApiListingResource {\n-    static boolean initialized = false;\n+    boolean initialized = false;\n     Logger LOGGER = LoggerFactory.getLogger(ApiListingResource.class);\n     @Context\n     ServletContext context;\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 43, "bugNodeStartChar": 1251, "bugNodeLength": 35, "fixLineNum": 43, "fixNodeStartChar": 1251, "fixNodeLength": 28, "sourceBeforeFix": "8", "sourceAfterFix": "0"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "9c440d3303888ea32ff028d4779c59c13f92b341", "fixCommitParentSHA1": "400662d7253c0c2efb14316f8948ddc61a60069e", "bugFilePath": "modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/utils/ReflectionUtils.java", "fixPatch": "diff --git a/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/utils/ReflectionUtils.java b/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/utils/ReflectionUtils.java\nindex 4701727..ce0424a 100644\n--- a/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/utils/ReflectionUtils.java\n+++ b/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/utils/ReflectionUtils.java\n@@ -83,7 +83,11 @@\n         Type[] gpTypes = methodToFind.getGenericParameterTypes();\n         methodLoop:\n         for (Method method : cls.getMethods()) {\n-            if (!method.getName().equals(methodToSearch) || !method.getReturnType().isAssignableFrom(methodToFind.getReturnType())) {\n+            if (\n+            \t!method.getName().equals(methodToSearch) || \n+            \t!method.getReturnType().isAssignableFrom(methodToFind.getReturnType()) ||\n+            \tmethod.getParameterTypes().length != pTypes.length\n+            \t) {\n                 continue;\n             }\n             Class<?>[] pt = method.getParameterTypes();\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 86, "bugNodeStartChar": 3325, "bugNodeLength": 114, "fixLineNum": 87, "fixNodeStartChar": 3339, "fixNodeLength": 195, "sourceBeforeFix": "!method.getName().equals(methodToSearch) || !method.getReturnType().isAssignableFrom(methodToFind.getReturnType())", "sourceAfterFix": "!method.getName().equals(methodToSearch) || !method.getReturnType().isAssignableFrom(methodToFind.getReturnType()) || method.getParameterTypes().length != pTypes.length"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d1cb70710f70a129598e92a638d536b9207aa01f", "fixCommitParentSHA1": "b36a323211503978fd314dddaab01bf964ad358b", "bugFilePath": "modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java", "fixPatch": "diff --git a/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java b/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java\nindex 3cce777..b677597 100644\n--- a/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java\n+++ b/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java\n@@ -52,27 +52,27 @@\n     }\n \n     @Override\n-    public ResponseImpl schema(Property property) {\n+    public Response schema(Property property) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl description(String description) {\n+    public Response description(String description) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl example(String type, Object example) {\n+    public Response example(String type, Object example) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl header(String name, Property property) {\n+    public Response header(String name, Property property) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl headers(Map<String, Property> headers) {\n+    public Response headers(Map<String, Property> headers) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n", "projectName": "swagger-api.swagger-core", "bugLineNum": 54, "bugNodeStartChar": 1237, "bugNodeLength": 122, "fixLineNum": 54, "fixNodeStartChar": 1237, "fixNodeLength": 118, "sourceBeforeFix": "@Override public ResponseImpl schema(Property property){   throw new RuntimeException(\"Not implemented\"); } ", "sourceAfterFix": "@Override public Response schema(Property property){   throw new RuntimeException(\"Not implemented\"); } "}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d1cb70710f70a129598e92a638d536b9207aa01f", "fixCommitParentSHA1": "b36a323211503978fd314dddaab01bf964ad358b", "bugFilePath": "modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java", "fixPatch": "diff --git a/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java b/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java\nindex 3cce777..b677597 100644\n--- a/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java\n+++ b/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java\n@@ -52,27 +52,27 @@\n     }\n \n     @Override\n-    public ResponseImpl schema(Property property) {\n+    public Response schema(Property property) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl description(String description) {\n+    public Response description(String description) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl example(String type, Object example) {\n+    public Response example(String type, Object example) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl header(String name, Property property) {\n+    public Response header(String name, Property property) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl headers(Map<String, Property> headers) {\n+    public Response headers(Map<String, Property> headers) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n", "projectName": "swagger-api.swagger-core", "bugLineNum": 59, "bugNodeStartChar": 1365, "bugNodeLength": 128, "fixLineNum": 59, "fixNodeStartChar": 1365, "fixNodeLength": 124, "sourceBeforeFix": "@Override public ResponseImpl description(String description){   throw new RuntimeException(\"Not implemented\"); } ", "sourceAfterFix": "@Override public Response description(String description){   throw new RuntimeException(\"Not implemented\"); } "}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d1cb70710f70a129598e92a638d536b9207aa01f", "fixCommitParentSHA1": "b36a323211503978fd314dddaab01bf964ad358b", "bugFilePath": "modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java", "fixPatch": "diff --git a/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java b/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java\nindex 3cce777..b677597 100644\n--- a/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java\n+++ b/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java\n@@ -52,27 +52,27 @@\n     }\n \n     @Override\n-    public ResponseImpl schema(Property property) {\n+    public Response schema(Property property) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl description(String description) {\n+    public Response description(String description) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl example(String type, Object example) {\n+    public Response example(String type, Object example) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl header(String name, Property property) {\n+    public Response header(String name, Property property) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl headers(Map<String, Property> headers) {\n+    public Response headers(Map<String, Property> headers) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n", "projectName": "swagger-api.swagger-core", "bugLineNum": 64, "bugNodeStartChar": 1499, "bugNodeLength": 133, "fixLineNum": 64, "fixNodeStartChar": 1499, "fixNodeLength": 129, "sourceBeforeFix": "@Override public ResponseImpl example(String type,Object example){   throw new RuntimeException(\"Not implemented\"); } ", "sourceAfterFix": "@Override public Response example(String type,Object example){   throw new RuntimeException(\"Not implemented\"); } "}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d1cb70710f70a129598e92a638d536b9207aa01f", "fixCommitParentSHA1": "b36a323211503978fd314dddaab01bf964ad358b", "bugFilePath": "modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java", "fixPatch": "diff --git a/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java b/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java\nindex 3cce777..b677597 100644\n--- a/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java\n+++ b/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java\n@@ -52,27 +52,27 @@\n     }\n \n     @Override\n-    public ResponseImpl schema(Property property) {\n+    public Response schema(Property property) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl description(String description) {\n+    public Response description(String description) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl example(String type, Object example) {\n+    public Response example(String type, Object example) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl header(String name, Property property) {\n+    public Response header(String name, Property property) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl headers(Map<String, Property> headers) {\n+    public Response headers(Map<String, Property> headers) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n", "projectName": "swagger-api.swagger-core", "bugLineNum": 69, "bugNodeStartChar": 1638, "bugNodeLength": 135, "fixLineNum": 69, "fixNodeStartChar": 1638, "fixNodeLength": 131, "sourceBeforeFix": "@Override public ResponseImpl header(String name,Property property){   throw new RuntimeException(\"Not implemented\"); } ", "sourceAfterFix": "@Override public Response header(String name,Property property){   throw new RuntimeException(\"Not implemented\"); } "}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d1cb70710f70a129598e92a638d536b9207aa01f", "fixCommitParentSHA1": "b36a323211503978fd314dddaab01bf964ad358b", "bugFilePath": "modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java", "fixPatch": "diff --git a/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java b/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java\nindex 3cce777..b677597 100644\n--- a/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java\n+++ b/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java\n@@ -52,27 +52,27 @@\n     }\n \n     @Override\n-    public ResponseImpl schema(Property property) {\n+    public Response schema(Property property) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl description(String description) {\n+    public Response description(String description) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl example(String type, Object example) {\n+    public Response example(String type, Object example) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl header(String name, Property property) {\n+    public Response header(String name, Property property) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl headers(Map<String, Property> headers) {\n+    public Response headers(Map<String, Property> headers) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n", "projectName": "swagger-api.swagger-core", "bugLineNum": 74, "bugNodeStartChar": 1779, "bugNodeLength": 135, "fixLineNum": 74, "fixNodeStartChar": 1779, "fixNodeLength": 131, "sourceBeforeFix": "@Override public ResponseImpl headers(Map<String,Property> headers){   throw new RuntimeException(\"Not implemented\"); } ", "sourceAfterFix": "@Override public Response headers(Map<String,Property> headers){   throw new RuntimeException(\"Not implemented\"); } "}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d1cb70710f70a129598e92a638d536b9207aa01f", "fixCommitParentSHA1": "b36a323211503978fd314dddaab01bf964ad358b", "bugFilePath": "modules/swagger-models/src/main/java/io/swagger/models/Response.java", "fixPatch": "diff --git a/modules/swagger-models/src/main/java/io/swagger/models/Response.java b/modules/swagger-models/src/main/java/io/swagger/models/Response.java\nindex b0cf545..53d624c 100644\n--- a/modules/swagger-models/src/main/java/io/swagger/models/Response.java\n+++ b/modules/swagger-models/src/main/java/io/swagger/models/Response.java\n@@ -8,15 +8,15 @@\n  * Created by russellb337 on 7/9/15.\n  */\n public interface Response {\n-    ResponseImpl schema(Property property);\n+    Response schema(Property property);\n \n-    ResponseImpl description(String description);\n+    Response description(String description);\n \n-    ResponseImpl example(String type, Object example);\n+    Response example(String type, Object example);\n \n-    ResponseImpl header(String name, Property property);\n+    Response header(String name, Property property);\n \n-    ResponseImpl headers(Map<String, Property> headers);\n+    Response headers(Map<String, Property> headers);\n \n     String getDescription();\n \n", "projectName": "swagger-api.swagger-core", "bugLineNum": 11, "bugNodeStartChar": 175, "bugNodeLength": 39, "fixLineNum": 11, "fixNodeStartChar": 175, "fixNodeLength": 35, "sourceBeforeFix": "ResponseImpl schema(Property property); ", "sourceAfterFix": "Response schema(Property property); "}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d1cb70710f70a129598e92a638d536b9207aa01f", "fixCommitParentSHA1": "b36a323211503978fd314dddaab01bf964ad358b", "bugFilePath": "modules/swagger-models/src/main/java/io/swagger/models/Response.java", "fixPatch": "diff --git a/modules/swagger-models/src/main/java/io/swagger/models/Response.java b/modules/swagger-models/src/main/java/io/swagger/models/Response.java\nindex b0cf545..53d624c 100644\n--- a/modules/swagger-models/src/main/java/io/swagger/models/Response.java\n+++ b/modules/swagger-models/src/main/java/io/swagger/models/Response.java\n@@ -8,15 +8,15 @@\n  * Created by russellb337 on 7/9/15.\n  */\n public interface Response {\n-    ResponseImpl schema(Property property);\n+    Response schema(Property property);\n \n-    ResponseImpl description(String description);\n+    Response description(String description);\n \n-    ResponseImpl example(String type, Object example);\n+    Response example(String type, Object example);\n \n-    ResponseImpl header(String name, Property property);\n+    Response header(String name, Property property);\n \n-    ResponseImpl headers(Map<String, Property> headers);\n+    Response headers(Map<String, Property> headers);\n \n     String getDescription();\n \n", "projectName": "swagger-api.swagger-core", "bugLineNum": 13, "bugNodeStartChar": 220, "bugNodeLength": 45, "fixLineNum": 13, "fixNodeStartChar": 220, "fixNodeLength": 41, "sourceBeforeFix": "ResponseImpl description(String description); ", "sourceAfterFix": "Response description(String description); "}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d1cb70710f70a129598e92a638d536b9207aa01f", "fixCommitParentSHA1": "b36a323211503978fd314dddaab01bf964ad358b", "bugFilePath": "modules/swagger-models/src/main/java/io/swagger/models/Response.java", "fixPatch": "diff --git a/modules/swagger-models/src/main/java/io/swagger/models/Response.java b/modules/swagger-models/src/main/java/io/swagger/models/Response.java\nindex b0cf545..53d624c 100644\n--- a/modules/swagger-models/src/main/java/io/swagger/models/Response.java\n+++ b/modules/swagger-models/src/main/java/io/swagger/models/Response.java\n@@ -8,15 +8,15 @@\n  * Created by russellb337 on 7/9/15.\n  */\n public interface Response {\n-    ResponseImpl schema(Property property);\n+    Response schema(Property property);\n \n-    ResponseImpl description(String description);\n+    Response description(String description);\n \n-    ResponseImpl example(String type, Object example);\n+    Response example(String type, Object example);\n \n-    ResponseImpl header(String name, Property property);\n+    Response header(String name, Property property);\n \n-    ResponseImpl headers(Map<String, Property> headers);\n+    Response headers(Map<String, Property> headers);\n \n     String getDescription();\n \n", "projectName": "swagger-api.swagger-core", "bugLineNum": 15, "bugNodeStartChar": 271, "bugNodeLength": 50, "fixLineNum": 15, "fixNodeStartChar": 271, "fixNodeLength": 46, "sourceBeforeFix": "ResponseImpl example(String type,Object example); ", "sourceAfterFix": "Response example(String type,Object example); "}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d1cb70710f70a129598e92a638d536b9207aa01f", "fixCommitParentSHA1": "b36a323211503978fd314dddaab01bf964ad358b", "bugFilePath": "modules/swagger-models/src/main/java/io/swagger/models/Response.java", "fixPatch": "diff --git a/modules/swagger-models/src/main/java/io/swagger/models/Response.java b/modules/swagger-models/src/main/java/io/swagger/models/Response.java\nindex b0cf545..53d624c 100644\n--- a/modules/swagger-models/src/main/java/io/swagger/models/Response.java\n+++ b/modules/swagger-models/src/main/java/io/swagger/models/Response.java\n@@ -8,15 +8,15 @@\n  * Created by russellb337 on 7/9/15.\n  */\n public interface Response {\n-    ResponseImpl schema(Property property);\n+    Response schema(Property property);\n \n-    ResponseImpl description(String description);\n+    Response description(String description);\n \n-    ResponseImpl example(String type, Object example);\n+    Response example(String type, Object example);\n \n-    ResponseImpl header(String name, Property property);\n+    Response header(String name, Property property);\n \n-    ResponseImpl headers(Map<String, Property> headers);\n+    Response headers(Map<String, Property> headers);\n \n     String getDescription();\n \n", "projectName": "swagger-api.swagger-core", "bugLineNum": 17, "bugNodeStartChar": 327, "bugNodeLength": 52, "fixLineNum": 17, "fixNodeStartChar": 327, "fixNodeLength": 48, "sourceBeforeFix": "ResponseImpl header(String name,Property property); ", "sourceAfterFix": "Response header(String name,Property property); "}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d1cb70710f70a129598e92a638d536b9207aa01f", "fixCommitParentSHA1": "b36a323211503978fd314dddaab01bf964ad358b", "bugFilePath": "modules/swagger-models/src/main/java/io/swagger/models/Response.java", "fixPatch": "diff --git a/modules/swagger-models/src/main/java/io/swagger/models/Response.java b/modules/swagger-models/src/main/java/io/swagger/models/Response.java\nindex b0cf545..53d624c 100644\n--- a/modules/swagger-models/src/main/java/io/swagger/models/Response.java\n+++ b/modules/swagger-models/src/main/java/io/swagger/models/Response.java\n@@ -8,15 +8,15 @@\n  * Created by russellb337 on 7/9/15.\n  */\n public interface Response {\n-    ResponseImpl schema(Property property);\n+    Response schema(Property property);\n \n-    ResponseImpl description(String description);\n+    Response description(String description);\n \n-    ResponseImpl example(String type, Object example);\n+    Response example(String type, Object example);\n \n-    ResponseImpl header(String name, Property property);\n+    Response header(String name, Property property);\n \n-    ResponseImpl headers(Map<String, Property> headers);\n+    Response headers(Map<String, Property> headers);\n \n     String getDescription();\n \n", "projectName": "swagger-api.swagger-core", "bugLineNum": 19, "bugNodeStartChar": 385, "bugNodeLength": 52, "fixLineNum": 19, "fixNodeStartChar": 385, "fixNodeLength": 48, "sourceBeforeFix": "ResponseImpl headers(Map<String,Property> headers); ", "sourceAfterFix": "Response headers(Map<String,Property> headers); "}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d1cb70710f70a129598e92a638d536b9207aa01f", "fixCommitParentSHA1": "b36a323211503978fd314dddaab01bf964ad358b", "bugFilePath": "modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java", "fixPatch": "diff --git a/modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java b/modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java\nindex 1268977..732460c 100644\n--- a/modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java\n+++ b/modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java\n@@ -13,19 +13,19 @@\n     private Map<String, Property> headers;\n \n     @Override\n-    public ResponseImpl schema(Property property) {\n+    public Response schema(Property property) {\n         this.setSchema(property);\n         return this;\n     }\n \n     @Override\n-    public ResponseImpl description(String description) {\n+    public Response description(String description) {\n         this.setDescription(description);\n         return this;\n     }\n \n     @Override\n-    public ResponseImpl example(String type, Object example) {\n+    public Response example(String type, Object example) {\n         if (examples == null) {\n             examples = new HashMap<String, Object>();\n         }\n@@ -34,13 +34,13 @@\n     }\n \n     @Override\n-    public ResponseImpl header(String name, Property property) {\n+    public Response header(String name, Property property) {\n         addHeader(name, property);\n         return this;\n     }\n \n     @Override\n-    public ResponseImpl headers(Map<String, Property> headers) {\n+    public Response headers(Map<String, Property> headers) {\n         this.headers = headers;\n         return this;\n     }\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 15, "bugNodeStartChar": 355, "bugNodeLength": 122, "fixLineNum": 15, "fixNodeStartChar": 355, "fixNodeLength": 118, "sourceBeforeFix": "@Override public ResponseImpl schema(Property property){   this.setSchema(property);   return this; } ", "sourceAfterFix": "@Override public Response schema(Property property){   this.setSchema(property);   return this; } "}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d1cb70710f70a129598e92a638d536b9207aa01f", "fixCommitParentSHA1": "b36a323211503978fd314dddaab01bf964ad358b", "bugFilePath": "modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java", "fixPatch": "diff --git a/modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java b/modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java\nindex 1268977..732460c 100644\n--- a/modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java\n+++ b/modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java\n@@ -13,19 +13,19 @@\n     private Map<String, Property> headers;\n \n     @Override\n-    public ResponseImpl schema(Property property) {\n+    public Response schema(Property property) {\n         this.setSchema(property);\n         return this;\n     }\n \n     @Override\n-    public ResponseImpl description(String description) {\n+    public Response description(String description) {\n         this.setDescription(description);\n         return this;\n     }\n \n     @Override\n-    public ResponseImpl example(String type, Object example) {\n+    public Response example(String type, Object example) {\n         if (examples == null) {\n             examples = new HashMap<String, Object>();\n         }\n@@ -34,13 +34,13 @@\n     }\n \n     @Override\n-    public ResponseImpl header(String name, Property property) {\n+    public Response header(String name, Property property) {\n         addHeader(name, property);\n         return this;\n     }\n \n     @Override\n-    public ResponseImpl headers(Map<String, Property> headers) {\n+    public Response headers(Map<String, Property> headers) {\n         this.headers = headers;\n         return this;\n     }\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 21, "bugNodeStartChar": 483, "bugNodeLength": 136, "fixLineNum": 21, "fixNodeStartChar": 483, "fixNodeLength": 132, "sourceBeforeFix": "@Override public ResponseImpl description(String description){   this.setDescription(description);   return this; } ", "sourceAfterFix": "@Override public Response description(String description){   this.setDescription(description);   return this; } "}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d1cb70710f70a129598e92a638d536b9207aa01f", "fixCommitParentSHA1": "b36a323211503978fd314dddaab01bf964ad358b", "bugFilePath": "modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java", "fixPatch": "diff --git a/modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java b/modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java\nindex 1268977..732460c 100644\n--- a/modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java\n+++ b/modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java\n@@ -13,19 +13,19 @@\n     private Map<String, Property> headers;\n \n     @Override\n-    public ResponseImpl schema(Property property) {\n+    public Response schema(Property property) {\n         this.setSchema(property);\n         return this;\n     }\n \n     @Override\n-    public ResponseImpl description(String description) {\n+    public Response description(String description) {\n         this.setDescription(description);\n         return this;\n     }\n \n     @Override\n-    public ResponseImpl example(String type, Object example) {\n+    public Response example(String type, Object example) {\n         if (examples == null) {\n             examples = new HashMap<String, Object>();\n         }\n@@ -34,13 +34,13 @@\n     }\n \n     @Override\n-    public ResponseImpl header(String name, Property property) {\n+    public Response header(String name, Property property) {\n         addHeader(name, property);\n         return this;\n     }\n \n     @Override\n-    public ResponseImpl headers(Map<String, Property> headers) {\n+    public Response headers(Map<String, Property> headers) {\n         this.headers = headers;\n         return this;\n     }\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 27, "bugNodeStartChar": 625, "bugNodeLength": 232, "fixLineNum": 27, "fixNodeStartChar": 625, "fixNodeLength": 228, "sourceBeforeFix": "@Override public ResponseImpl example(String type,Object example){   if (examples == null) {     examples=new HashMap<String,Object>();   }   examples.put(type,example);   return this; } ", "sourceAfterFix": "@Override public Response example(String type,Object example){   if (examples == null) {     examples=new HashMap<String,Object>();   }   examples.put(type,example);   return this; } "}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d1cb70710f70a129598e92a638d536b9207aa01f", "fixCommitParentSHA1": "b36a323211503978fd314dddaab01bf964ad358b", "bugFilePath": "modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java", "fixPatch": "diff --git a/modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java b/modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java\nindex 1268977..732460c 100644\n--- a/modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java\n+++ b/modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java\n@@ -13,19 +13,19 @@\n     private Map<String, Property> headers;\n \n     @Override\n-    public ResponseImpl schema(Property property) {\n+    public Response schema(Property property) {\n         this.setSchema(property);\n         return this;\n     }\n \n     @Override\n-    public ResponseImpl description(String description) {\n+    public Response description(String description) {\n         this.setDescription(description);\n         return this;\n     }\n \n     @Override\n-    public ResponseImpl example(String type, Object example) {\n+    public Response example(String type, Object example) {\n         if (examples == null) {\n             examples = new HashMap<String, Object>();\n         }\n@@ -34,13 +34,13 @@\n     }\n \n     @Override\n-    public ResponseImpl header(String name, Property property) {\n+    public Response header(String name, Property property) {\n         addHeader(name, property);\n         return this;\n     }\n \n     @Override\n-    public ResponseImpl headers(Map<String, Property> headers) {\n+    public Response headers(Map<String, Property> headers) {\n         this.headers = headers;\n         return this;\n     }\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 36, "bugNodeStartChar": 863, "bugNodeLength": 136, "fixLineNum": 36, "fixNodeStartChar": 863, "fixNodeLength": 132, "sourceBeforeFix": "@Override public ResponseImpl header(String name,Property property){   addHeader(name,property);   return this; } ", "sourceAfterFix": "@Override public Response header(String name,Property property){   addHeader(name,property);   return this; } "}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d1cb70710f70a129598e92a638d536b9207aa01f", "fixCommitParentSHA1": "b36a323211503978fd314dddaab01bf964ad358b", "bugFilePath": "modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java", "fixPatch": "diff --git a/modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java b/modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java\nindex 1268977..732460c 100644\n--- a/modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java\n+++ b/modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java\n@@ -13,19 +13,19 @@\n     private Map<String, Property> headers;\n \n     @Override\n-    public ResponseImpl schema(Property property) {\n+    public Response schema(Property property) {\n         this.setSchema(property);\n         return this;\n     }\n \n     @Override\n-    public ResponseImpl description(String description) {\n+    public Response description(String description) {\n         this.setDescription(description);\n         return this;\n     }\n \n     @Override\n-    public ResponseImpl example(String type, Object example) {\n+    public Response example(String type, Object example) {\n         if (examples == null) {\n             examples = new HashMap<String, Object>();\n         }\n@@ -34,13 +34,13 @@\n     }\n \n     @Override\n-    public ResponseImpl header(String name, Property property) {\n+    public Response header(String name, Property property) {\n         addHeader(name, property);\n         return this;\n     }\n \n     @Override\n-    public ResponseImpl headers(Map<String, Property> headers) {\n+    public Response headers(Map<String, Property> headers) {\n         this.headers = headers;\n         return this;\n     }\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 42, "bugNodeStartChar": 1005, "bugNodeLength": 133, "fixLineNum": 42, "fixNodeStartChar": 1005, "fixNodeLength": 129, "sourceBeforeFix": "@Override public ResponseImpl headers(Map<String,Property> headers){   this.headers=headers;   return this; } ", "sourceAfterFix": "@Override public Response headers(Map<String,Property> headers){   this.headers=headers;   return this; } "}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "f96aeff677f2874dfbab1578decfed57438b4361", "fixCommitParentSHA1": "42056f20c52407e4c13283794a65d6d71b3a7e41", "bugFilePath": "modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java", "fixPatch": "diff --git a/modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java b/modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java\nindex 41fbdf9..660d11c 100644\n--- a/modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java\n+++ b/modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java\n@@ -566,7 +566,7 @@\n                     return item;\n                 }\n             }\n-            LOGGER.error(\"no property for \" + type + \", \" + format);\n+            LOGGER.debug(\"no property for \" + type + \", \" + format);\n             return null;\n         }\n \n", "projectName": "swagger-api.swagger-core", "bugLineNum": 569, "bugNodeStartChar": 20568, "bugNodeLength": 55, "fixLineNum": 569, "fixNodeStartChar": 20568, "fixNodeLength": 55, "sourceBeforeFix": "LOGGER.error(\"no property for \" + type + \", \"+ format)", "sourceAfterFix": "LOGGER.debug(\"no property for \" + type + \", \"+ format)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "f96aeff677f2874dfbab1578decfed57438b4361", "fixCommitParentSHA1": "42056f20c52407e4c13283794a65d6d71b3a7e41", "bugFilePath": "modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java", "fixPatch": "diff --git a/modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java b/modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java\nindex 41fbdf9..660d11c 100644\n--- a/modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java\n+++ b/modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java\n@@ -566,7 +566,7 @@\n                     return item;\n                 }\n             }\n-            LOGGER.error(\"no property for \" + type + \", \" + format);\n+            LOGGER.debug(\"no property for \" + type + \", \" + format);\n             return null;\n         }\n \n", "projectName": "swagger-api.swagger-core", "bugLineNum": 569, "bugNodeStartChar": 20568, "bugNodeLength": 55, "fixLineNum": 569, "fixNodeStartChar": 20568, "fixNodeLength": 55, "sourceBeforeFix": "LOGGER.error(\"no property for \" + type + \", \"+ format)", "sourceAfterFix": "LOGGER.debug(\"no property for \" + type + \", \"+ format)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "183a6fccd65bc0cd6de129aa2c7b35b13bfd2797", "fixCommitParentSHA1": "42056f20c52407e4c13283794a65d6d71b3a7e41", "bugFilePath": "modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java", "fixPatch": "diff --git a/modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java b/modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java\nindex 41fbdf9..660d11c 100644\n--- a/modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java\n+++ b/modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java\n@@ -566,7 +566,7 @@\n                     return item;\n                 }\n             }\n-            LOGGER.error(\"no property for \" + type + \", \" + format);\n+            LOGGER.debug(\"no property for \" + type + \", \" + format);\n             return null;\n         }\n \n", "projectName": "swagger-api.swagger-core", "bugLineNum": 569, "bugNodeStartChar": 20568, "bugNodeLength": 55, "fixLineNum": 569, "fixNodeStartChar": 20568, "fixNodeLength": 55, "sourceBeforeFix": "LOGGER.error(\"no property for \" + type + \", \"+ format)", "sourceAfterFix": "LOGGER.debug(\"no property for \" + type + \", \"+ format)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "183a6fccd65bc0cd6de129aa2c7b35b13bfd2797", "fixCommitParentSHA1": "42056f20c52407e4c13283794a65d6d71b3a7e41", "bugFilePath": "modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java", "fixPatch": "diff --git a/modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java b/modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java\nindex 41fbdf9..660d11c 100644\n--- a/modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java\n+++ b/modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java\n@@ -566,7 +566,7 @@\n                     return item;\n                 }\n             }\n-            LOGGER.error(\"no property for \" + type + \", \" + format);\n+            LOGGER.debug(\"no property for \" + type + \", \" + format);\n             return null;\n         }\n \n", "projectName": "swagger-api.swagger-core", "bugLineNum": 569, "bugNodeStartChar": 20568, "bugNodeLength": 55, "fixLineNum": 569, "fixNodeStartChar": 20568, "fixNodeLength": 55, "sourceBeforeFix": "LOGGER.error(\"no property for \" + type + \", \"+ format)", "sourceAfterFix": "LOGGER.debug(\"no property for \" + type + \", \"+ format)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "1c1d6418e06a6cf1d8441d8ef329e1c8f48868e0", "fixCommitParentSHA1": "c22e4183fa5ef0ff22530a67b6adbb6eff19eacc", "bugFilePath": "samples/java-jaxrs-no-webxml/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java", "fixPatch": "diff --git a/samples/java-jaxrs-no-webxml/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java b/samples/java-jaxrs-no-webxml/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java\nindex 1593487..f25980a 100644\n--- a/samples/java-jaxrs-no-webxml/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java\n+++ b/samples/java-jaxrs-no-webxml/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java\n@@ -60,7 +60,7 @@\n     }\n   }\n \n-  @PATCH\n+  @DELETE\n   @Path(\"/{petId}\")\n   @ApiOperation(value = \"Deletes a pet\")\n   @ApiResponses(value = { @ApiResponse(code = 400, message = \"Invalid pet value\")})\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 63, "bugNodeStartChar": 2336, "bugNodeLength": 6, "fixLineNum": 63, "fixNodeStartChar": 2336, "fixNodeLength": 7, "sourceBeforeFix": "@PATCH", "sourceAfterFix": "@DELETE"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "1c1d6418e06a6cf1d8441d8ef329e1c8f48868e0", "fixCommitParentSHA1": "c22e4183fa5ef0ff22530a67b6adbb6eff19eacc", "bugFilePath": "samples/java-jaxrs/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java", "fixPatch": "diff --git a/samples/java-jaxrs/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java b/samples/java-jaxrs/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java\nindex 62652e6..277a84b 100644\n--- a/samples/java-jaxrs/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java\n+++ b/samples/java-jaxrs/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java\n@@ -92,7 +92,7 @@\n             .build();\n   }\n \n-  @PATCH\n+  @DELETE\n   @Path(\"/{petId}\")\n   @ApiOperation(value = \"Deletes a pet\")\n   @ApiResponses(value = { @ApiResponse(code = 400, message = \"Invalid pet value\")})\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 95, "bugNodeStartChar": 3523, "bugNodeLength": 6, "fixLineNum": 95, "fixNodeStartChar": 3523, "fixNodeLength": 7, "sourceBeforeFix": "@PATCH", "sourceAfterFix": "@DELETE"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "1c1d6418e06a6cf1d8441d8ef329e1c8f48868e0", "fixCommitParentSHA1": "c22e4183fa5ef0ff22530a67b6adbb6eff19eacc", "bugFilePath": "samples/java-mule/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java", "fixPatch": "diff --git a/samples/java-mule/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java b/samples/java-mule/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java\nindex 1593487..f25980a 100644\n--- a/samples/java-mule/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java\n+++ b/samples/java-mule/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java\n@@ -60,7 +60,7 @@\n     }\n   }\n \n-  @PATCH\n+  @DELETE\n   @Path(\"/{petId}\")\n   @ApiOperation(value = \"Deletes a pet\")\n   @ApiResponses(value = { @ApiResponse(code = 400, message = \"Invalid pet value\")})\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 63, "bugNodeStartChar": 2336, "bugNodeLength": 6, "fixLineNum": 63, "fixNodeStartChar": 2336, "fixNodeLength": 7, "sourceBeforeFix": "@PATCH", "sourceAfterFix": "@DELETE"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d19a8c2afb68e3ad9199b41d09827b3b75506f96", "fixCommitParentSHA1": "e77198fa5794ebd9704076eca173576d946ac7a6", "bugFilePath": "samples/java-jaxrs/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java", "fixPatch": "diff --git a/samples/java-jaxrs/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java b/samples/java-jaxrs/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java\nindex b98bf0f..9637b54 100644\n--- a/samples/java-jaxrs/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java\n+++ b/samples/java-jaxrs/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java\n@@ -34,16 +34,16 @@\n   @GET\n   @Path(\"/{petId}\")\n   @ApiOperation(value = \"Find pet by ID\", \n-    notes = \"Returns a pet when ID < 10.  ID > 10 or nonintegers will simulate API error conditions\", \n-    response = Pet.class)\n+    notes = \"Returns a pet when ID < 10.  ID > 10 or nonintegers will simulate API error conditions\"\n+  )\n   @ApiResponses(value = { @ApiResponse(code = 400, message = \"Invalid ID supplied\"),\n       @ApiResponse(code = 404, message = \"Pet not found\") })\n-  public Response getPetById(\n+  public Pet getPetById(\n       @ApiParam(value = \"ID of pet that needs to be fetched\", allowableValues = \"range[1,5]\", required = true) @PathParam(\"petId\") String petId)\n       throws NotFoundException {\n     Pet pet = petData.getPetbyId(ru.getLong(0, 100000, 0, petId));\n     if (null != pet) {\n-      return Response.ok().entity(pet).build();\n+      return pet;\n     } else {\n       throw new NotFoundException(404, \"Pet not found\");\n     }\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 34, "bugNodeStartChar": 1171, "bugNodeLength": 768, "fixLineNum": 34, "fixNodeStartChar": 1171, "fixNodeLength": 763, "sourceBeforeFix": "@GET @Path(\"/{petId}\") @ApiOperation(value=\"Find pet by ID\",notes=\"Returns a pet when ID < 10.  ID > 10 or nonintegers will simulate API error conditions\",response=Pet.class) @ApiResponses(value={@ApiResponse(code=400,message=\"Invalid ID supplied\"),@ApiResponse(code=404,message=\"Pet not found\")}) public Response getPetById(@ApiParam(value=\"ID of pet that needs to be fetched\",allowableValues=\"range[1,5]\",required=true) @PathParam(\"petId\") String petId) throws NotFoundException {   Pet pet=petData.getPetbyId(ru.getLong(0,100000,0,petId));   if (null != pet) {     return Response.ok().entity(pet).build();   }  else {     throw new NotFoundException(404,\"Pet not found\");   } } ", "sourceAfterFix": "@GET @Path(\"/{petId}\") @ApiOperation(value=\"Find pet by ID\",notes=\"Returns a pet when ID < 10.  ID > 10 or nonintegers will simulate API error conditions\",response=Pet.class) @ApiResponses(value={@ApiResponse(code=400,message=\"Invalid ID supplied\"),@ApiResponse(code=404,message=\"Pet not found\")}) public Pet getPetById(@ApiParam(value=\"ID of pet that needs to be fetched\",allowableValues=\"range[1,5]\",required=true) @PathParam(\"petId\") String petId) throws NotFoundException {   Pet pet=petData.getPetbyId(ru.getLong(0,100000,0,petId));   if (null != pet) {     return Response.ok().entity(pet).build();   }  else {     throw new NotFoundException(404,\"Pet not found\");   } } "}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "23b774c63a24955749fa8234cd6a1ef878541462", "fixCommitParentSHA1": "34a36bdfbc35be68731e89a73d32e22bf8cb15a2", "bugFilePath": "src/main/scala/com/wordnik/swagger/core/ApiOperation.java", "fixPatch": "diff --git a/src/main/scala/com/wordnik/swagger/core/ApiOperation.java b/src/main/scala/com/wordnik/swagger/core/ApiOperation.java\nindex bbe6eb8..dca30a7 100644\n--- a/src/main/scala/com/wordnik/swagger/core/ApiOperation.java\n+++ b/src/main/scala/com/wordnik/swagger/core/ApiOperation.java\n@@ -26,7 +26,7 @@\n public @interface ApiOperation {\n     String value();\n     String responseClass() default \"ok\";\n-    boolean mutiValueResponse() default false; //to indicate if return type will contain one or more of the response value\n+    boolean multiValueResponse() default false; //to indicate if return type will contain one or more of the response value\n     String notes() default \"\";\n     String tags() default \"\";\n }\n", "projectName": "swagger-api.swagger-core", "bugLineNum": 29, "bugNodeStartChar": 968, "bugNodeLength": 118, "fixLineNum": 29, "fixNodeStartChar": 968, "fixNodeLength": 119, "sourceBeforeFix": "boolean mutiValueResponse() default false; ", "sourceAfterFix": "boolean multiValueResponse() default false; "}]