[{"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "97f40446edd5f66145bde79c4a7c0de6a88716e9", "fixCommitParentSHA1": "0a08c07a229eaf482adc1c40618812ee4ff9cbdd", "bugFilePath": "src/main/java/com/squareup/javapoet/CodeWriter.java", "fixPatch": "diff --git a/src/main/java/com/squareup/javapoet/CodeWriter.java b/src/main/java/com/squareup/javapoet/CodeWriter.java\nindex 31abd5b..df372f5 100644\n--- a/src/main/java/com/squareup/javapoet/CodeWriter.java\n+++ b/src/main/java/com/squareup/javapoet/CodeWriter.java\n@@ -66,11 +66,11 @@\n     this(out, \"  \");\n   }\n \n-  public CodeWriter(Appendable out, String indent) {\n+  CodeWriter(Appendable out, String indent) {\n     this(out, indent, Collections.<String, ClassName>emptyMap());\n   }\n \n-  public CodeWriter(Appendable out, String indent, Map<String, ClassName> importedTypes) {\n+  CodeWriter(Appendable out, String indent, Map<String, ClassName> importedTypes) {\n     this.out = checkNotNull(out, \"out == null\");\n     this.indent = checkNotNull(indent, \"indent == null\");\n     this.importedTypes = checkNotNull(importedTypes, \"importedTypes == null\");\n", "projectName": "square.javapoet", "bugLineNum": 69, "bugNodeStartChar": 2414, "bugNodeLength": 120, "fixLineNum": 69, "fixNodeStartChar": 2414, "fixNodeLength": 113, "sourceBeforeFix": "1", "sourceAfterFix": "0"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "97f40446edd5f66145bde79c4a7c0de6a88716e9", "fixCommitParentSHA1": "0a08c07a229eaf482adc1c40618812ee4ff9cbdd", "bugFilePath": "src/main/java/com/squareup/javapoet/CodeWriter.java", "fixPatch": "diff --git a/src/main/java/com/squareup/javapoet/CodeWriter.java b/src/main/java/com/squareup/javapoet/CodeWriter.java\nindex 31abd5b..df372f5 100644\n--- a/src/main/java/com/squareup/javapoet/CodeWriter.java\n+++ b/src/main/java/com/squareup/javapoet/CodeWriter.java\n@@ -66,11 +66,11 @@\n     this(out, \"  \");\n   }\n \n-  public CodeWriter(Appendable out, String indent) {\n+  CodeWriter(Appendable out, String indent) {\n     this(out, indent, Collections.<String, ClassName>emptyMap());\n   }\n \n-  public CodeWriter(Appendable out, String indent, Map<String, ClassName> importedTypes) {\n+  CodeWriter(Appendable out, String indent, Map<String, ClassName> importedTypes) {\n     this.out = checkNotNull(out, \"out == null\");\n     this.indent = checkNotNull(indent, \"indent == null\");\n     this.importedTypes = checkNotNull(importedTypes, \"importedTypes == null\");\n", "projectName": "square.javapoet", "bugLineNum": 73, "bugNodeStartChar": 2538, "bugNodeLength": 278, "fixLineNum": 73, "fixNodeStartChar": 2538, "fixNodeLength": 271, "sourceBeforeFix": "1", "sourceAfterFix": "0"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "97f40446edd5f66145bde79c4a7c0de6a88716e9", "fixCommitParentSHA1": "0a08c07a229eaf482adc1c40618812ee4ff9cbdd", "bugFilePath": "src/main/java/com/squareup/javapoet/TypeSpec.java", "fixPatch": "diff --git a/src/main/java/com/squareup/javapoet/TypeSpec.java b/src/main/java/com/squareup/javapoet/TypeSpec.java\nindex 974237a..b126be9 100644\n--- a/src/main/java/com/squareup/javapoet/TypeSpec.java\n+++ b/src/main/java/com/squareup/javapoet/TypeSpec.java\n@@ -321,7 +321,7 @@\n     private final Set<Modifier> implicitTypeModifiers;\n     private final Set<Modifier> asMemberModifiers;\n \n-    private Kind(Set<Modifier> implicitFieldModifiers,\n+    Kind(Set<Modifier> implicitFieldModifiers,\n         Set<Modifier> implicitMethodModifiers,\n         Set<Modifier> implicitTypeModifiers,\n         Set<Modifier> asMemberModifiers) {\n", "projectName": "square.javapoet", "bugLineNum": 324, "bugNodeStartChar": 11918, "bugNodeLength": 421, "fixLineNum": 324, "fixNodeStartChar": 11918, "fixNodeLength": 413, "sourceBeforeFix": "2", "sourceAfterFix": "0"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "b0e92a07d0ca51f073ea47d2a3c9ec9b81500ddf", "fixCommitParentSHA1": "dcd2c68d6b1d40f8c6f0307cc32c53dbc046284f", "bugFilePath": "src/main/java/com/squareup/javawriter/JavaWriter.java", "fixPatch": "diff --git a/src/main/java/com/squareup/javawriter/JavaWriter.java b/src/main/java/com/squareup/javawriter/JavaWriter.java\nindex bd3d0a9..adb26cc 100644\n--- a/src/main/java/com/squareup/javawriter/JavaWriter.java\n+++ b/src/main/java/com/squareup/javawriter/JavaWriter.java\n@@ -152,7 +152,7 @@\n       }\n     }\n \n-    if (importedClassIndex.isEmpty()) {\n+    if (!importedClassIndex.isEmpty()) {\n       appendable.append('\\n');\n     }\n \n", "projectName": "square.javapoet", "bugLineNum": 155, "bugNodeStartChar": 5798, "bugNodeLength": 28, "fixLineNum": 155, "fixNodeStartChar": 5798, "fixNodeLength": 29, "sourceBeforeFix": "importedClassIndex.isEmpty()", "sourceAfterFix": "!importedClassIndex.isEmpty()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "89ed905358dd09d005398028198cc388b9b59a94", "fixCommitParentSHA1": "c22ec0248f118fd2e87b564afe063ecf251473aa", "bugFilePath": "src/test/java/com/squareup/javawriter/JavaWriterTest.java", "fixPatch": "diff --git a/src/test/java/com/squareup/javawriter/JavaWriterTest.java b/src/test/java/com/squareup/javawriter/JavaWriterTest.java\nindex 1a7dd82..4990037 100644\n--- a/src/test/java/com/squareup/javawriter/JavaWriterTest.java\n+++ b/src/test/java/com/squareup/javawriter/JavaWriterTest.java\n@@ -188,7 +188,7 @@\n     javaWriter.emitPackage(\"com.squareup\");\n     javaWriter.beginType(\"com.squareup.Foo\", \"class\", 0);\n     javaWriter.beginMethod(\"int\", \"foo\", 0, \"java.lang.String\", \"s\");\n-    javaWriter.emitSingleLineCOmment(\"foo\");\n+    javaWriter.emitSingleLineComment(\"foo\");\n     javaWriter.emitStatement(\"int j = s.length() + %s\", 13);\n     javaWriter.endMethod();\n     javaWriter.endType();\n@@ -452,7 +452,7 @@\n   }\n \n   @Test public void eolComment() throws IOException {\n-    javaWriter.emitSingleLineCOmment(\"foo\");\n+    javaWriter.emitSingleLineComment(\"foo\");\n     assertCode(\"// foo\\n\");\n   }\n \n", "projectName": "square.javapoet", "bugLineNum": 191, "bugNodeStartChar": 6557, "bugNodeLength": 39, "fixLineNum": 191, "fixNodeStartChar": 6557, "fixNodeLength": 39, "sourceBeforeFix": "javaWriter.emitSingleLineCOmment(\"foo\")", "sourceAfterFix": "javaWriter.emitSingleLineComment(\"foo\")"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "89ed905358dd09d005398028198cc388b9b59a94", "fixCommitParentSHA1": "c22ec0248f118fd2e87b564afe063ecf251473aa", "bugFilePath": "src/test/java/com/squareup/javawriter/JavaWriterTest.java", "fixPatch": "diff --git a/src/test/java/com/squareup/javawriter/JavaWriterTest.java b/src/test/java/com/squareup/javawriter/JavaWriterTest.java\nindex 1a7dd82..4990037 100644\n--- a/src/test/java/com/squareup/javawriter/JavaWriterTest.java\n+++ b/src/test/java/com/squareup/javawriter/JavaWriterTest.java\n@@ -188,7 +188,7 @@\n     javaWriter.emitPackage(\"com.squareup\");\n     javaWriter.beginType(\"com.squareup.Foo\", \"class\", 0);\n     javaWriter.beginMethod(\"int\", \"foo\", 0, \"java.lang.String\", \"s\");\n-    javaWriter.emitSingleLineCOmment(\"foo\");\n+    javaWriter.emitSingleLineComment(\"foo\");\n     javaWriter.emitStatement(\"int j = s.length() + %s\", 13);\n     javaWriter.endMethod();\n     javaWriter.endType();\n@@ -452,7 +452,7 @@\n   }\n \n   @Test public void eolComment() throws IOException {\n-    javaWriter.emitSingleLineCOmment(\"foo\");\n+    javaWriter.emitSingleLineComment(\"foo\");\n     assertCode(\"// foo\\n\");\n   }\n \n", "projectName": "square.javapoet", "bugLineNum": 191, "bugNodeStartChar": 6557, "bugNodeLength": 39, "fixLineNum": 191, "fixNodeStartChar": 6557, "fixNodeLength": 39, "sourceBeforeFix": "javaWriter.emitSingleLineCOmment(\"foo\")", "sourceAfterFix": "javaWriter.emitSingleLineComment(\"foo\")"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "89ed905358dd09d005398028198cc388b9b59a94", "fixCommitParentSHA1": "c22ec0248f118fd2e87b564afe063ecf251473aa", "bugFilePath": "src/test/java/com/squareup/javawriter/JavaWriterTest.java", "fixPatch": "diff --git a/src/test/java/com/squareup/javawriter/JavaWriterTest.java b/src/test/java/com/squareup/javawriter/JavaWriterTest.java\nindex 1a7dd82..4990037 100644\n--- a/src/test/java/com/squareup/javawriter/JavaWriterTest.java\n+++ b/src/test/java/com/squareup/javawriter/JavaWriterTest.java\n@@ -188,7 +188,7 @@\n     javaWriter.emitPackage(\"com.squareup\");\n     javaWriter.beginType(\"com.squareup.Foo\", \"class\", 0);\n     javaWriter.beginMethod(\"int\", \"foo\", 0, \"java.lang.String\", \"s\");\n-    javaWriter.emitSingleLineCOmment(\"foo\");\n+    javaWriter.emitSingleLineComment(\"foo\");\n     javaWriter.emitStatement(\"int j = s.length() + %s\", 13);\n     javaWriter.endMethod();\n     javaWriter.endType();\n@@ -452,7 +452,7 @@\n   }\n \n   @Test public void eolComment() throws IOException {\n-    javaWriter.emitSingleLineCOmment(\"foo\");\n+    javaWriter.emitSingleLineComment(\"foo\");\n     assertCode(\"// foo\\n\");\n   }\n \n", "projectName": "square.javapoet", "bugLineNum": 455, "bugNodeStartChar": 15850, "bugNodeLength": 39, "fixLineNum": 455, "fixNodeStartChar": 15850, "fixNodeLength": 39, "sourceBeforeFix": "javaWriter.emitSingleLineCOmment(\"foo\")", "sourceAfterFix": "javaWriter.emitSingleLineComment(\"foo\")"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "89ed905358dd09d005398028198cc388b9b59a94", "fixCommitParentSHA1": "c22ec0248f118fd2e87b564afe063ecf251473aa", "bugFilePath": "src/test/java/com/squareup/javawriter/JavaWriterTest.java", "fixPatch": "diff --git a/src/test/java/com/squareup/javawriter/JavaWriterTest.java b/src/test/java/com/squareup/javawriter/JavaWriterTest.java\nindex 1a7dd82..4990037 100644\n--- a/src/test/java/com/squareup/javawriter/JavaWriterTest.java\n+++ b/src/test/java/com/squareup/javawriter/JavaWriterTest.java\n@@ -188,7 +188,7 @@\n     javaWriter.emitPackage(\"com.squareup\");\n     javaWriter.beginType(\"com.squareup.Foo\", \"class\", 0);\n     javaWriter.beginMethod(\"int\", \"foo\", 0, \"java.lang.String\", \"s\");\n-    javaWriter.emitSingleLineCOmment(\"foo\");\n+    javaWriter.emitSingleLineComment(\"foo\");\n     javaWriter.emitStatement(\"int j = s.length() + %s\", 13);\n     javaWriter.endMethod();\n     javaWriter.endType();\n@@ -452,7 +452,7 @@\n   }\n \n   @Test public void eolComment() throws IOException {\n-    javaWriter.emitSingleLineCOmment(\"foo\");\n+    javaWriter.emitSingleLineComment(\"foo\");\n     assertCode(\"// foo\\n\");\n   }\n \n", "projectName": "square.javapoet", "bugLineNum": 455, "bugNodeStartChar": 15850, "bugNodeLength": 39, "fixLineNum": 455, "fixNodeStartChar": 15850, "fixNodeLength": 39, "sourceBeforeFix": "javaWriter.emitSingleLineCOmment(\"foo\")", "sourceAfterFix": "javaWriter.emitSingleLineComment(\"foo\")"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "3deba86fbc98387501b2076b82c35ac78a56de21", "fixCommitParentSHA1": "c22ec0248f118fd2e87b564afe063ecf251473aa", "bugFilePath": "src/test/java/com/squareup/javawriter/JavaWriterTest.java", "fixPatch": "diff --git a/src/test/java/com/squareup/javawriter/JavaWriterTest.java b/src/test/java/com/squareup/javawriter/JavaWriterTest.java\nindex 1a7dd82..4990037 100644\n--- a/src/test/java/com/squareup/javawriter/JavaWriterTest.java\n+++ b/src/test/java/com/squareup/javawriter/JavaWriterTest.java\n@@ -188,7 +188,7 @@\n     javaWriter.emitPackage(\"com.squareup\");\n     javaWriter.beginType(\"com.squareup.Foo\", \"class\", 0);\n     javaWriter.beginMethod(\"int\", \"foo\", 0, \"java.lang.String\", \"s\");\n-    javaWriter.emitSingleLineCOmment(\"foo\");\n+    javaWriter.emitSingleLineComment(\"foo\");\n     javaWriter.emitStatement(\"int j = s.length() + %s\", 13);\n     javaWriter.endMethod();\n     javaWriter.endType();\n@@ -452,7 +452,7 @@\n   }\n \n   @Test public void eolComment() throws IOException {\n-    javaWriter.emitSingleLineCOmment(\"foo\");\n+    javaWriter.emitSingleLineComment(\"foo\");\n     assertCode(\"// foo\\n\");\n   }\n \n", "projectName": "square.javapoet", "bugLineNum": 191, "bugNodeStartChar": 6557, "bugNodeLength": 39, "fixLineNum": 191, "fixNodeStartChar": 6557, "fixNodeLength": 39, "sourceBeforeFix": "javaWriter.emitSingleLineCOmment(\"foo\")", "sourceAfterFix": "javaWriter.emitSingleLineComment(\"foo\")"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "3deba86fbc98387501b2076b82c35ac78a56de21", "fixCommitParentSHA1": "c22ec0248f118fd2e87b564afe063ecf251473aa", "bugFilePath": "src/test/java/com/squareup/javawriter/JavaWriterTest.java", "fixPatch": "diff --git a/src/test/java/com/squareup/javawriter/JavaWriterTest.java b/src/test/java/com/squareup/javawriter/JavaWriterTest.java\nindex 1a7dd82..4990037 100644\n--- a/src/test/java/com/squareup/javawriter/JavaWriterTest.java\n+++ b/src/test/java/com/squareup/javawriter/JavaWriterTest.java\n@@ -188,7 +188,7 @@\n     javaWriter.emitPackage(\"com.squareup\");\n     javaWriter.beginType(\"com.squareup.Foo\", \"class\", 0);\n     javaWriter.beginMethod(\"int\", \"foo\", 0, \"java.lang.String\", \"s\");\n-    javaWriter.emitSingleLineCOmment(\"foo\");\n+    javaWriter.emitSingleLineComment(\"foo\");\n     javaWriter.emitStatement(\"int j = s.length() + %s\", 13);\n     javaWriter.endMethod();\n     javaWriter.endType();\n@@ -452,7 +452,7 @@\n   }\n \n   @Test public void eolComment() throws IOException {\n-    javaWriter.emitSingleLineCOmment(\"foo\");\n+    javaWriter.emitSingleLineComment(\"foo\");\n     assertCode(\"// foo\\n\");\n   }\n \n", "projectName": "square.javapoet", "bugLineNum": 191, "bugNodeStartChar": 6557, "bugNodeLength": 39, "fixLineNum": 191, "fixNodeStartChar": 6557, "fixNodeLength": 39, "sourceBeforeFix": "javaWriter.emitSingleLineCOmment(\"foo\")", "sourceAfterFix": "javaWriter.emitSingleLineComment(\"foo\")"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "3deba86fbc98387501b2076b82c35ac78a56de21", "fixCommitParentSHA1": "c22ec0248f118fd2e87b564afe063ecf251473aa", "bugFilePath": "src/test/java/com/squareup/javawriter/JavaWriterTest.java", "fixPatch": "diff --git a/src/test/java/com/squareup/javawriter/JavaWriterTest.java b/src/test/java/com/squareup/javawriter/JavaWriterTest.java\nindex 1a7dd82..4990037 100644\n--- a/src/test/java/com/squareup/javawriter/JavaWriterTest.java\n+++ b/src/test/java/com/squareup/javawriter/JavaWriterTest.java\n@@ -188,7 +188,7 @@\n     javaWriter.emitPackage(\"com.squareup\");\n     javaWriter.beginType(\"com.squareup.Foo\", \"class\", 0);\n     javaWriter.beginMethod(\"int\", \"foo\", 0, \"java.lang.String\", \"s\");\n-    javaWriter.emitSingleLineCOmment(\"foo\");\n+    javaWriter.emitSingleLineComment(\"foo\");\n     javaWriter.emitStatement(\"int j = s.length() + %s\", 13);\n     javaWriter.endMethod();\n     javaWriter.endType();\n@@ -452,7 +452,7 @@\n   }\n \n   @Test public void eolComment() throws IOException {\n-    javaWriter.emitSingleLineCOmment(\"foo\");\n+    javaWriter.emitSingleLineComment(\"foo\");\n     assertCode(\"// foo\\n\");\n   }\n \n", "projectName": "square.javapoet", "bugLineNum": 455, "bugNodeStartChar": 15850, "bugNodeLength": 39, "fixLineNum": 455, "fixNodeStartChar": 15850, "fixNodeLength": 39, "sourceBeforeFix": "javaWriter.emitSingleLineCOmment(\"foo\")", "sourceAfterFix": "javaWriter.emitSingleLineComment(\"foo\")"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "3deba86fbc98387501b2076b82c35ac78a56de21", "fixCommitParentSHA1": "c22ec0248f118fd2e87b564afe063ecf251473aa", "bugFilePath": "src/test/java/com/squareup/javawriter/JavaWriterTest.java", "fixPatch": "diff --git a/src/test/java/com/squareup/javawriter/JavaWriterTest.java b/src/test/java/com/squareup/javawriter/JavaWriterTest.java\nindex 1a7dd82..4990037 100644\n--- a/src/test/java/com/squareup/javawriter/JavaWriterTest.java\n+++ b/src/test/java/com/squareup/javawriter/JavaWriterTest.java\n@@ -188,7 +188,7 @@\n     javaWriter.emitPackage(\"com.squareup\");\n     javaWriter.beginType(\"com.squareup.Foo\", \"class\", 0);\n     javaWriter.beginMethod(\"int\", \"foo\", 0, \"java.lang.String\", \"s\");\n-    javaWriter.emitSingleLineCOmment(\"foo\");\n+    javaWriter.emitSingleLineComment(\"foo\");\n     javaWriter.emitStatement(\"int j = s.length() + %s\", 13);\n     javaWriter.endMethod();\n     javaWriter.endType();\n@@ -452,7 +452,7 @@\n   }\n \n   @Test public void eolComment() throws IOException {\n-    javaWriter.emitSingleLineCOmment(\"foo\");\n+    javaWriter.emitSingleLineComment(\"foo\");\n     assertCode(\"// foo\\n\");\n   }\n \n", "projectName": "square.javapoet", "bugLineNum": 455, "bugNodeStartChar": 15850, "bugNodeLength": 39, "fixLineNum": 455, "fixNodeStartChar": 15850, "fixNodeLength": 39, "sourceBeforeFix": "javaWriter.emitSingleLineCOmment(\"foo\")", "sourceAfterFix": "javaWriter.emitSingleLineComment(\"foo\")"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "4d8567ca0f96ad746c42291da84240b27e8f0110", "fixCommitParentSHA1": "1158267d1bc81e6430da873e26406fccd6ac1dc1", "bugFilePath": "src/main/java/com/squareup/protoss/schema/JavaWriter.java", "fixPatch": "diff --git a/src/main/java/com/squareup/protoss/schema/JavaWriter.java b/src/main/java/com/squareup/protoss/schema/JavaWriter.java\nindex 391b812..a7054d3 100644\n--- a/src/main/java/com/squareup/protoss/schema/JavaWriter.java\n+++ b/src/main/java/com/squareup/protoss/schema/JavaWriter.java\n@@ -36,7 +36,7 @@\n  *\n  * @author Jesse Wilson\n  */\n-public final class JavaWriter implements Closeable {\n+final class JavaWriter implements Closeable {\n   private static final Pattern TYPE_PATTERN = Pattern.compile(\"(?:[\\\\w$]+\\\\.)*([\\\\w$]+)\");\n   private static final String INDENT = \"  \";\n \n", "projectName": "square.javapoet", "bugLineNum": 31, "bugNodeStartChar": 981, "bugNodeLength": 13336, "fixLineNum": 31, "fixNodeStartChar": 981, "fixNodeLength": 13329, "sourceBeforeFix": "17", "sourceAfterFix": "16"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "b1c51f175484ddbac853d12e5b31c3aa6ca10bff", "fixCommitParentSHA1": "e20c87daa96fa048dfe8da4156813a138ee5075a", "bugFilePath": "src/main/java/com/squareup/protoss/schema/JavaWriter.java", "fixPatch": "diff --git a/src/main/java/com/squareup/protoss/schema/JavaWriter.java b/src/main/java/com/squareup/protoss/schema/JavaWriter.java\nindex 391b812..a7054d3 100644\n--- a/src/main/java/com/squareup/protoss/schema/JavaWriter.java\n+++ b/src/main/java/com/squareup/protoss/schema/JavaWriter.java\n@@ -36,7 +36,7 @@\n  *\n  * @author Jesse Wilson\n  */\n-public final class JavaWriter implements Closeable {\n+final class JavaWriter implements Closeable {\n   private static final Pattern TYPE_PATTERN = Pattern.compile(\"(?:[\\\\w$]+\\\\.)*([\\\\w$]+)\");\n   private static final String INDENT = \"  \";\n \n", "projectName": "square.javapoet", "bugLineNum": 31, "bugNodeStartChar": 981, "bugNodeLength": 13336, "fixLineNum": 31, "fixNodeStartChar": 981, "fixNodeLength": 13329, "sourceBeforeFix": "17", "sourceAfterFix": "16"}]