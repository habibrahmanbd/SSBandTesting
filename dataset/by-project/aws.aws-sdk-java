[
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "d204b5988150a9e99f8a323794f81aa08d7dd595",
    "fixCommitParentSHA1": "52b7520f91bbaf7ed1120b8901076a39301836f3",
    "bugFilePath": "aws-java-sdk-core/src/main/java/com/amazonaws/auth/SystemPropertiesCredentialsProvider.java",
    "fixPatch": "diff --git a/aws-java-sdk-core/src/main/java/com/amazonaws/auth/SystemPropertiesCredentialsProvider.java b/aws-java-sdk-core/src/main/java/com/amazonaws/auth/SystemPropertiesCredentialsProvider.java\nindex 010e660..f7fa798 100644\n--- a/aws-java-sdk-core/src/main/java/com/amazonaws/auth/SystemPropertiesCredentialsProvider.java\n+++ b/aws-java-sdk-core/src/main/java/com/amazonaws/auth/SystemPropertiesCredentialsProvider.java\n@@ -51,7 +51,7 @@\n         if (StringUtils.isNullOrEmpty(sessionToken)) {\n             return new BasicAWSCredentials(accessKey, secretKey);\n         } else {\n-            return new BasicAWSSessionCredentials(accessKey, secretKey, sessionToken);\n+            return new BasicSessionCredentials(accessKey, secretKey, sessionToken);\n         }\n     }\n \n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 54,
    "bugNodeStartChar": 2119,
    "bugNodeLength": 66,
    "fixLineNum": 54,
    "fixNodeStartChar": 2119,
    "fixNodeLength": 63,
    "sourceBeforeFix": "new BasicAWSSessionCredentials(accessKey,secretKey,sessionToken)",
    "sourceAfterFix": "new BasicSessionCredentials(accessKey,secretKey,sessionToken)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "175d89d7652a572df375f43c0fe18259453312cc",
    "fixCommitParentSHA1": "61c197fc1b6b4fedcb452fd5c908d995604f46c9",
    "bugFilePath": "aws-java-sdk-s3/src/main/java/com/amazonaws/services/s3/transfer/TransferManager.java",
    "fixPatch": "diff --git a/aws-java-sdk-s3/src/main/java/com/amazonaws/services/s3/transfer/TransferManager.java b/aws-java-sdk-s3/src/main/java/com/amazonaws/services/s3/transfer/TransferManager.java\nindex c709909..98f7351 100644\n--- a/aws-java-sdk-s3/src/main/java/com/amazonaws/services/s3/transfer/TransferManager.java\n+++ b/aws-java-sdk-s3/src/main/java/com/amazonaws/services/s3/transfer/TransferManager.java\n@@ -1526,7 +1526,7 @@\n                             .replaceAll(\"\\\\\\\\\", \"/\");\n \n                     ObjectMetadata metadata = new ObjectMetadata();\n-                    ObjectTagging objectTagging = new ObjectTagging();\n+                    ObjectTagging objectTagging = new ObjectTagging(new ArrayList<Tag>());\n \n                     // Invoke the callback if it's present.\n                     // The callback allows the user to customize the metadata\n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 1529,
    "bugNodeStartChar": 72879,
    "bugNodeLength": 19,
    "fixLineNum": 1529,
    "fixNodeStartChar": 72879,
    "fixNodeLength": 39,
    "sourceBeforeFix": "new ObjectTagging()",
    "sourceAfterFix": "new ObjectTagging(new ArrayList<Tag>())"
  },
  {
    "bugType": "CHANGE_OPERATOR",
    "fixCommitSHA1": "4047754cadfeb091f73672117f54b8d0279020ac",
    "fixCommitParentSHA1": "8948f15f51b0a7d0c34cad23dcf57d330fa2ff16",
    "bugFilePath": "aws-java-sdk-cloudwatchmetrics/src/main/java/com/amazonaws/metrics/internal/cloudwatch/MetricUploaderThread.java",
    "fixPatch": "diff --git a/aws-java-sdk-cloudwatchmetrics/src/main/java/com/amazonaws/metrics/internal/cloudwatch/MetricUploaderThread.java b/aws-java-sdk-cloudwatchmetrics/src/main/java/com/amazonaws/metrics/internal/cloudwatch/MetricUploaderThread.java\nindex 542c669..ae09584 100644\n--- a/aws-java-sdk-cloudwatchmetrics/src/main/java/com/amazonaws/metrics/internal/cloudwatch/MetricUploaderThread.java\n+++ b/aws-java-sdk-cloudwatchmetrics/src/main/java/com/amazonaws/metrics/internal/cloudwatch/MetricUploaderThread.java\n@@ -50,7 +50,7 @@\n \t\t\tamazonCloudWatchClient = new AmazonCloudWatchClient(config.getCredentialsProvider());\n \t\t} else if (config.getClientConfiguration() != null && config.getCredentialsProvider() == null) {\n \t\t\tamazonCloudWatchClient = new AmazonCloudWatchClient(config.getClientConfiguration());\n-\t\t} else if (config.getClientConfiguration() != null && config.getCredentialsProvider() == null) {\n+\t\t} else if (config.getClientConfiguration() != null && config.getCredentialsProvider() != null) {\n \t\t\tamazonCloudWatchClient = new AmazonCloudWatchClient(config.getCredentialsProvider(),\n \t\t\t\t\tconfig.getClientConfiguration());\n \t\t}\n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 53,
    "bugNodeStartChar": 2476,
    "bugNodeLength": 39,
    "fixLineNum": 53,
    "fixNodeStartChar": 2476,
    "fixNodeLength": 39,
    "sourceBeforeFix": "config.getCredentialsProvider() == null",
    "sourceAfterFix": "config.getCredentialsProvider() != null"
  },
  {
    "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
    "fixCommitSHA1": "f667668148d05770b74f1d7a12e05ddfcec50921",
    "fixCommitParentSHA1": "c1d69bf9e004bb8a84112ace3c88d36479e24c5e",
    "bugFilePath": "aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java",
    "fixPatch": "diff --git a/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java b/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\nindex 772153d..f2eaaf5 100644\n--- a/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\n+++ b/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\n@@ -54,22 +54,22 @@\n      * Returns a custom policy for the given parameters.\n      */\n     public static String buildCustomPolicy(String resourcePath,\n-            Date activeFrom, Date expiresOn, String ipAddress) {\n+            Date expiresOn, Date activeFrom, String ipAddress) {\n         return \"{\\\"Statement\\\": [{\"\n                 + \"\\\"Resource\\\":\\\"\"\n                 + resourcePath\n                 + \"\\\"\"\n                 + \",\\\"Condition\\\":{\"\n                 + \"\\\"DateLessThan\\\":{\\\"AWS:EpochTime\\\":\"\n-                + MILLISECONDS.toSeconds(activeFrom.getTime())\n+                + MILLISECONDS.toSeconds(expiresOn.getTime())\n                 + \"}\"\n                 + \",\\\"IpAddress\\\":{\\\"AWS:SourceIp\\\":\\\"\"\n                 + ipAddress\n                 + \"\\\"}\"\n-                + (expiresOn == null\n+                + (activeFrom == null\n                    ? \"\"\n                    : \",\\\"DateGreaterThan\\\":{\\\"AWS:EpochTime\\\":\"\n-                     + MILLISECONDS.toSeconds(expiresOn.getTime()) + \"}\"\n+                     + MILLISECONDS.toSeconds(activeFrom.getTime()) + \"}\"\n                   )\n                 + \"}}]}\";\n     }\n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 64,
    "bugNodeStartChar": 2196,
    "bugNodeLength": 20,
    "fixLineNum": 64,
    "fixNodeStartChar": 2196,
    "fixNodeLength": 19,
    "sourceBeforeFix": "activeFrom.getTime()",
    "sourceAfterFix": "expiresOn.getTime()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "f667668148d05770b74f1d7a12e05ddfcec50921",
    "fixCommitParentSHA1": "c1d69bf9e004bb8a84112ace3c88d36479e24c5e",
    "bugFilePath": "aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java",
    "fixPatch": "diff --git a/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java b/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\nindex 772153d..f2eaaf5 100644\n--- a/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\n+++ b/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\n@@ -54,22 +54,22 @@\n      * Returns a custom policy for the given parameters.\n      */\n     public static String buildCustomPolicy(String resourcePath,\n-            Date activeFrom, Date expiresOn, String ipAddress) {\n+            Date expiresOn, Date activeFrom, String ipAddress) {\n         return \"{\\\"Statement\\\": [{\"\n                 + \"\\\"Resource\\\":\\\"\"\n                 + resourcePath\n                 + \"\\\"\"\n                 + \",\\\"Condition\\\":{\"\n                 + \"\\\"DateLessThan\\\":{\\\"AWS:EpochTime\\\":\"\n-                + MILLISECONDS.toSeconds(activeFrom.getTime())\n+                + MILLISECONDS.toSeconds(expiresOn.getTime())\n                 + \"}\"\n                 + \",\\\"IpAddress\\\":{\\\"AWS:SourceIp\\\":\\\"\"\n                 + ipAddress\n                 + \"\\\"}\"\n-                + (expiresOn == null\n+                + (activeFrom == null\n                    ? \"\"\n                    : \",\\\"DateGreaterThan\\\":{\\\"AWS:EpochTime\\\":\"\n-                     + MILLISECONDS.toSeconds(expiresOn.getTime()) + \"}\"\n+                     + MILLISECONDS.toSeconds(activeFrom.getTime()) + \"}\"\n                   )\n                 + \"}}]}\";\n     }\n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 64,
    "bugNodeStartChar": 2196,
    "bugNodeLength": 20,
    "fixLineNum": 64,
    "fixNodeStartChar": 2196,
    "fixNodeLength": 19,
    "sourceBeforeFix": "activeFrom.getTime()",
    "sourceAfterFix": "expiresOn.getTime()"
  },
  {
    "bugType": "CHANGE_OPERAND",
    "fixCommitSHA1": "f667668148d05770b74f1d7a12e05ddfcec50921",
    "fixCommitParentSHA1": "c1d69bf9e004bb8a84112ace3c88d36479e24c5e",
    "bugFilePath": "aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java",
    "fixPatch": "diff --git a/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java b/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\nindex 772153d..f2eaaf5 100644\n--- a/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\n+++ b/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\n@@ -54,22 +54,22 @@\n      * Returns a custom policy for the given parameters.\n      */\n     public static String buildCustomPolicy(String resourcePath,\n-            Date activeFrom, Date expiresOn, String ipAddress) {\n+            Date expiresOn, Date activeFrom, String ipAddress) {\n         return \"{\\\"Statement\\\": [{\"\n                 + \"\\\"Resource\\\":\\\"\"\n                 + resourcePath\n                 + \"\\\"\"\n                 + \",\\\"Condition\\\":{\"\n                 + \"\\\"DateLessThan\\\":{\\\"AWS:EpochTime\\\":\"\n-                + MILLISECONDS.toSeconds(activeFrom.getTime())\n+                + MILLISECONDS.toSeconds(expiresOn.getTime())\n                 + \"}\"\n                 + \",\\\"IpAddress\\\":{\\\"AWS:SourceIp\\\":\\\"\"\n                 + ipAddress\n                 + \"\\\"}\"\n-                + (expiresOn == null\n+                + (activeFrom == null\n                    ? \"\"\n                    : \",\\\"DateGreaterThan\\\":{\\\"AWS:EpochTime\\\":\"\n-                     + MILLISECONDS.toSeconds(expiresOn.getTime()) + \"}\"\n+                     + MILLISECONDS.toSeconds(activeFrom.getTime()) + \"}\"\n                   )\n                 + \"}}]}\";\n     }\n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 69,
    "bugNodeStartChar": 2367,
    "bugNodeLength": 17,
    "fixLineNum": 69,
    "fixNodeStartChar": 2367,
    "fixNodeLength": 18,
    "sourceBeforeFix": "expiresOn == null",
    "sourceAfterFix": "activeFrom == null"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "f667668148d05770b74f1d7a12e05ddfcec50921",
    "fixCommitParentSHA1": "c1d69bf9e004bb8a84112ace3c88d36479e24c5e",
    "bugFilePath": "aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java",
    "fixPatch": "diff --git a/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java b/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\nindex 772153d..f2eaaf5 100644\n--- a/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\n+++ b/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\n@@ -54,22 +54,22 @@\n      * Returns a custom policy for the given parameters.\n      */\n     public static String buildCustomPolicy(String resourcePath,\n-            Date activeFrom, Date expiresOn, String ipAddress) {\n+            Date expiresOn, Date activeFrom, String ipAddress) {\n         return \"{\\\"Statement\\\": [{\"\n                 + \"\\\"Resource\\\":\\\"\"\n                 + resourcePath\n                 + \"\\\"\"\n                 + \",\\\"Condition\\\":{\"\n                 + \"\\\"DateLessThan\\\":{\\\"AWS:EpochTime\\\":\"\n-                + MILLISECONDS.toSeconds(activeFrom.getTime())\n+                + MILLISECONDS.toSeconds(expiresOn.getTime())\n                 + \"}\"\n                 + \",\\\"IpAddress\\\":{\\\"AWS:SourceIp\\\":\\\"\"\n                 + ipAddress\n                 + \"\\\"}\"\n-                + (expiresOn == null\n+                + (activeFrom == null\n                    ? \"\"\n                    : \",\\\"DateGreaterThan\\\":{\\\"AWS:EpochTime\\\":\"\n-                     + MILLISECONDS.toSeconds(expiresOn.getTime()) + \"}\"\n+                     + MILLISECONDS.toSeconds(activeFrom.getTime()) + \"}\"\n                   )\n                 + \"}}]}\";\n     }\n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 69,
    "bugNodeStartChar": 2367,
    "bugNodeLength": 17,
    "fixLineNum": 69,
    "fixNodeStartChar": 2367,
    "fixNodeLength": 18,
    "sourceBeforeFix": "expiresOn == null",
    "sourceAfterFix": "activeFrom == null"
  },
  {
    "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
    "fixCommitSHA1": "f667668148d05770b74f1d7a12e05ddfcec50921",
    "fixCommitParentSHA1": "c1d69bf9e004bb8a84112ace3c88d36479e24c5e",
    "bugFilePath": "aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java",
    "fixPatch": "diff --git a/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java b/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\nindex 772153d..f2eaaf5 100644\n--- a/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\n+++ b/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\n@@ -54,22 +54,22 @@\n      * Returns a custom policy for the given parameters.\n      */\n     public static String buildCustomPolicy(String resourcePath,\n-            Date activeFrom, Date expiresOn, String ipAddress) {\n+            Date expiresOn, Date activeFrom, String ipAddress) {\n         return \"{\\\"Statement\\\": [{\"\n                 + \"\\\"Resource\\\":\\\"\"\n                 + resourcePath\n                 + \"\\\"\"\n                 + \",\\\"Condition\\\":{\"\n                 + \"\\\"DateLessThan\\\":{\\\"AWS:EpochTime\\\":\"\n-                + MILLISECONDS.toSeconds(activeFrom.getTime())\n+                + MILLISECONDS.toSeconds(expiresOn.getTime())\n                 + \"}\"\n                 + \",\\\"IpAddress\\\":{\\\"AWS:SourceIp\\\":\\\"\"\n                 + ipAddress\n                 + \"\\\"}\"\n-                + (expiresOn == null\n+                + (activeFrom == null\n                    ? \"\"\n                    : \",\\\"DateGreaterThan\\\":{\\\"AWS:EpochTime\\\":\"\n-                     + MILLISECONDS.toSeconds(expiresOn.getTime()) + \"}\"\n+                     + MILLISECONDS.toSeconds(activeFrom.getTime()) + \"}\"\n                   )\n                 + \"}}]}\";\n     }\n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 72,
    "bugNodeStartChar": 2519,
    "bugNodeLength": 19,
    "fixLineNum": 72,
    "fixNodeStartChar": 2519,
    "fixNodeLength": 20,
    "sourceBeforeFix": "expiresOn.getTime()",
    "sourceAfterFix": "activeFrom.getTime()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "f667668148d05770b74f1d7a12e05ddfcec50921",
    "fixCommitParentSHA1": "c1d69bf9e004bb8a84112ace3c88d36479e24c5e",
    "bugFilePath": "aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java",
    "fixPatch": "diff --git a/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java b/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\nindex 772153d..f2eaaf5 100644\n--- a/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\n+++ b/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\n@@ -54,22 +54,22 @@\n      * Returns a custom policy for the given parameters.\n      */\n     public static String buildCustomPolicy(String resourcePath,\n-            Date activeFrom, Date expiresOn, String ipAddress) {\n+            Date expiresOn, Date activeFrom, String ipAddress) {\n         return \"{\\\"Statement\\\": [{\"\n                 + \"\\\"Resource\\\":\\\"\"\n                 + resourcePath\n                 + \"\\\"\"\n                 + \",\\\"Condition\\\":{\"\n                 + \"\\\"DateLessThan\\\":{\\\"AWS:EpochTime\\\":\"\n-                + MILLISECONDS.toSeconds(activeFrom.getTime())\n+                + MILLISECONDS.toSeconds(expiresOn.getTime())\n                 + \"}\"\n                 + \",\\\"IpAddress\\\":{\\\"AWS:SourceIp\\\":\\\"\"\n                 + ipAddress\n                 + \"\\\"}\"\n-                + (expiresOn == null\n+                + (activeFrom == null\n                    ? \"\"\n                    : \",\\\"DateGreaterThan\\\":{\\\"AWS:EpochTime\\\":\"\n-                     + MILLISECONDS.toSeconds(expiresOn.getTime()) + \"}\"\n+                     + MILLISECONDS.toSeconds(activeFrom.getTime()) + \"}\"\n                   )\n                 + \"}}]}\";\n     }\n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 72,
    "bugNodeStartChar": 2519,
    "bugNodeLength": 19,
    "fixLineNum": 72,
    "fixNodeStartChar": 2519,
    "fixNodeLength": 20,
    "sourceBeforeFix": "expiresOn.getTime()",
    "sourceAfterFix": "activeFrom.getTime()"
  },
  {
    "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
    "fixCommitSHA1": "1c3bc7d2c3e4e95de1f85b283b0d7e12c70b54fc",
    "fixCommitParentSHA1": "2e3c0698886b08b1f380cca3b666cbf890facb50",
    "bugFilePath": "aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java",
    "fixPatch": "diff --git a/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java b/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\nindex 772153d..f2eaaf5 100644\n--- a/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\n+++ b/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\n@@ -54,22 +54,22 @@\n      * Returns a custom policy for the given parameters.\n      */\n     public static String buildCustomPolicy(String resourcePath,\n-            Date activeFrom, Date expiresOn, String ipAddress) {\n+            Date expiresOn, Date activeFrom, String ipAddress) {\n         return \"{\\\"Statement\\\": [{\"\n                 + \"\\\"Resource\\\":\\\"\"\n                 + resourcePath\n                 + \"\\\"\"\n                 + \",\\\"Condition\\\":{\"\n                 + \"\\\"DateLessThan\\\":{\\\"AWS:EpochTime\\\":\"\n-                + MILLISECONDS.toSeconds(activeFrom.getTime())\n+                + MILLISECONDS.toSeconds(expiresOn.getTime())\n                 + \"}\"\n                 + \",\\\"IpAddress\\\":{\\\"AWS:SourceIp\\\":\\\"\"\n                 + ipAddress\n                 + \"\\\"}\"\n-                + (expiresOn == null\n+                + (activeFrom == null\n                    ? \"\"\n                    : \",\\\"DateGreaterThan\\\":{\\\"AWS:EpochTime\\\":\"\n-                     + MILLISECONDS.toSeconds(expiresOn.getTime()) + \"}\"\n+                     + MILLISECONDS.toSeconds(activeFrom.getTime()) + \"}\"\n                   )\n                 + \"}}]}\";\n     }\n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 64,
    "bugNodeStartChar": 2196,
    "bugNodeLength": 20,
    "fixLineNum": 64,
    "fixNodeStartChar": 2196,
    "fixNodeLength": 19,
    "sourceBeforeFix": "activeFrom.getTime()",
    "sourceAfterFix": "expiresOn.getTime()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "1c3bc7d2c3e4e95de1f85b283b0d7e12c70b54fc",
    "fixCommitParentSHA1": "2e3c0698886b08b1f380cca3b666cbf890facb50",
    "bugFilePath": "aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java",
    "fixPatch": "diff --git a/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java b/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\nindex 772153d..f2eaaf5 100644\n--- a/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\n+++ b/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\n@@ -54,22 +54,22 @@\n      * Returns a custom policy for the given parameters.\n      */\n     public static String buildCustomPolicy(String resourcePath,\n-            Date activeFrom, Date expiresOn, String ipAddress) {\n+            Date expiresOn, Date activeFrom, String ipAddress) {\n         return \"{\\\"Statement\\\": [{\"\n                 + \"\\\"Resource\\\":\\\"\"\n                 + resourcePath\n                 + \"\\\"\"\n                 + \",\\\"Condition\\\":{\"\n                 + \"\\\"DateLessThan\\\":{\\\"AWS:EpochTime\\\":\"\n-                + MILLISECONDS.toSeconds(activeFrom.getTime())\n+                + MILLISECONDS.toSeconds(expiresOn.getTime())\n                 + \"}\"\n                 + \",\\\"IpAddress\\\":{\\\"AWS:SourceIp\\\":\\\"\"\n                 + ipAddress\n                 + \"\\\"}\"\n-                + (expiresOn == null\n+                + (activeFrom == null\n                    ? \"\"\n                    : \",\\\"DateGreaterThan\\\":{\\\"AWS:EpochTime\\\":\"\n-                     + MILLISECONDS.toSeconds(expiresOn.getTime()) + \"}\"\n+                     + MILLISECONDS.toSeconds(activeFrom.getTime()) + \"}\"\n                   )\n                 + \"}}]}\";\n     }\n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 64,
    "bugNodeStartChar": 2196,
    "bugNodeLength": 20,
    "fixLineNum": 64,
    "fixNodeStartChar": 2196,
    "fixNodeLength": 19,
    "sourceBeforeFix": "activeFrom.getTime()",
    "sourceAfterFix": "expiresOn.getTime()"
  },
  {
    "bugType": "CHANGE_OPERAND",
    "fixCommitSHA1": "1c3bc7d2c3e4e95de1f85b283b0d7e12c70b54fc",
    "fixCommitParentSHA1": "2e3c0698886b08b1f380cca3b666cbf890facb50",
    "bugFilePath": "aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java",
    "fixPatch": "diff --git a/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java b/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\nindex 772153d..f2eaaf5 100644\n--- a/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\n+++ b/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\n@@ -54,22 +54,22 @@\n      * Returns a custom policy for the given parameters.\n      */\n     public static String buildCustomPolicy(String resourcePath,\n-            Date activeFrom, Date expiresOn, String ipAddress) {\n+            Date expiresOn, Date activeFrom, String ipAddress) {\n         return \"{\\\"Statement\\\": [{\"\n                 + \"\\\"Resource\\\":\\\"\"\n                 + resourcePath\n                 + \"\\\"\"\n                 + \",\\\"Condition\\\":{\"\n                 + \"\\\"DateLessThan\\\":{\\\"AWS:EpochTime\\\":\"\n-                + MILLISECONDS.toSeconds(activeFrom.getTime())\n+                + MILLISECONDS.toSeconds(expiresOn.getTime())\n                 + \"}\"\n                 + \",\\\"IpAddress\\\":{\\\"AWS:SourceIp\\\":\\\"\"\n                 + ipAddress\n                 + \"\\\"}\"\n-                + (expiresOn == null\n+                + (activeFrom == null\n                    ? \"\"\n                    : \",\\\"DateGreaterThan\\\":{\\\"AWS:EpochTime\\\":\"\n-                     + MILLISECONDS.toSeconds(expiresOn.getTime()) + \"}\"\n+                     + MILLISECONDS.toSeconds(activeFrom.getTime()) + \"}\"\n                   )\n                 + \"}}]}\";\n     }\n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 69,
    "bugNodeStartChar": 2367,
    "bugNodeLength": 17,
    "fixLineNum": 69,
    "fixNodeStartChar": 2367,
    "fixNodeLength": 18,
    "sourceBeforeFix": "expiresOn == null",
    "sourceAfterFix": "activeFrom == null"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "1c3bc7d2c3e4e95de1f85b283b0d7e12c70b54fc",
    "fixCommitParentSHA1": "2e3c0698886b08b1f380cca3b666cbf890facb50",
    "bugFilePath": "aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java",
    "fixPatch": "diff --git a/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java b/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\nindex 772153d..f2eaaf5 100644\n--- a/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\n+++ b/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\n@@ -54,22 +54,22 @@\n      * Returns a custom policy for the given parameters.\n      */\n     public static String buildCustomPolicy(String resourcePath,\n-            Date activeFrom, Date expiresOn, String ipAddress) {\n+            Date expiresOn, Date activeFrom, String ipAddress) {\n         return \"{\\\"Statement\\\": [{\"\n                 + \"\\\"Resource\\\":\\\"\"\n                 + resourcePath\n                 + \"\\\"\"\n                 + \",\\\"Condition\\\":{\"\n                 + \"\\\"DateLessThan\\\":{\\\"AWS:EpochTime\\\":\"\n-                + MILLISECONDS.toSeconds(activeFrom.getTime())\n+                + MILLISECONDS.toSeconds(expiresOn.getTime())\n                 + \"}\"\n                 + \",\\\"IpAddress\\\":{\\\"AWS:SourceIp\\\":\\\"\"\n                 + ipAddress\n                 + \"\\\"}\"\n-                + (expiresOn == null\n+                + (activeFrom == null\n                    ? \"\"\n                    : \",\\\"DateGreaterThan\\\":{\\\"AWS:EpochTime\\\":\"\n-                     + MILLISECONDS.toSeconds(expiresOn.getTime()) + \"}\"\n+                     + MILLISECONDS.toSeconds(activeFrom.getTime()) + \"}\"\n                   )\n                 + \"}}]}\";\n     }\n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 69,
    "bugNodeStartChar": 2367,
    "bugNodeLength": 17,
    "fixLineNum": 69,
    "fixNodeStartChar": 2367,
    "fixNodeLength": 18,
    "sourceBeforeFix": "expiresOn == null",
    "sourceAfterFix": "activeFrom == null"
  },
  {
    "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
    "fixCommitSHA1": "1c3bc7d2c3e4e95de1f85b283b0d7e12c70b54fc",
    "fixCommitParentSHA1": "2e3c0698886b08b1f380cca3b666cbf890facb50",
    "bugFilePath": "aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java",
    "fixPatch": "diff --git a/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java b/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\nindex 772153d..f2eaaf5 100644\n--- a/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\n+++ b/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\n@@ -54,22 +54,22 @@\n      * Returns a custom policy for the given parameters.\n      */\n     public static String buildCustomPolicy(String resourcePath,\n-            Date activeFrom, Date expiresOn, String ipAddress) {\n+            Date expiresOn, Date activeFrom, String ipAddress) {\n         return \"{\\\"Statement\\\": [{\"\n                 + \"\\\"Resource\\\":\\\"\"\n                 + resourcePath\n                 + \"\\\"\"\n                 + \",\\\"Condition\\\":{\"\n                 + \"\\\"DateLessThan\\\":{\\\"AWS:EpochTime\\\":\"\n-                + MILLISECONDS.toSeconds(activeFrom.getTime())\n+                + MILLISECONDS.toSeconds(expiresOn.getTime())\n                 + \"}\"\n                 + \",\\\"IpAddress\\\":{\\\"AWS:SourceIp\\\":\\\"\"\n                 + ipAddress\n                 + \"\\\"}\"\n-                + (expiresOn == null\n+                + (activeFrom == null\n                    ? \"\"\n                    : \",\\\"DateGreaterThan\\\":{\\\"AWS:EpochTime\\\":\"\n-                     + MILLISECONDS.toSeconds(expiresOn.getTime()) + \"}\"\n+                     + MILLISECONDS.toSeconds(activeFrom.getTime()) + \"}\"\n                   )\n                 + \"}}]}\";\n     }\n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 72,
    "bugNodeStartChar": 2519,
    "bugNodeLength": 19,
    "fixLineNum": 72,
    "fixNodeStartChar": 2519,
    "fixNodeLength": 20,
    "sourceBeforeFix": "expiresOn.getTime()",
    "sourceAfterFix": "activeFrom.getTime()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "1c3bc7d2c3e4e95de1f85b283b0d7e12c70b54fc",
    "fixCommitParentSHA1": "2e3c0698886b08b1f380cca3b666cbf890facb50",
    "bugFilePath": "aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java",
    "fixPatch": "diff --git a/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java b/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\nindex 772153d..f2eaaf5 100644\n--- a/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\n+++ b/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\n@@ -54,22 +54,22 @@\n      * Returns a custom policy for the given parameters.\n      */\n     public static String buildCustomPolicy(String resourcePath,\n-            Date activeFrom, Date expiresOn, String ipAddress) {\n+            Date expiresOn, Date activeFrom, String ipAddress) {\n         return \"{\\\"Statement\\\": [{\"\n                 + \"\\\"Resource\\\":\\\"\"\n                 + resourcePath\n                 + \"\\\"\"\n                 + \",\\\"Condition\\\":{\"\n                 + \"\\\"DateLessThan\\\":{\\\"AWS:EpochTime\\\":\"\n-                + MILLISECONDS.toSeconds(activeFrom.getTime())\n+                + MILLISECONDS.toSeconds(expiresOn.getTime())\n                 + \"}\"\n                 + \",\\\"IpAddress\\\":{\\\"AWS:SourceIp\\\":\\\"\"\n                 + ipAddress\n                 + \"\\\"}\"\n-                + (expiresOn == null\n+                + (activeFrom == null\n                    ? \"\"\n                    : \",\\\"DateGreaterThan\\\":{\\\"AWS:EpochTime\\\":\"\n-                     + MILLISECONDS.toSeconds(expiresOn.getTime()) + \"}\"\n+                     + MILLISECONDS.toSeconds(activeFrom.getTime()) + \"}\"\n                   )\n                 + \"}}]}\";\n     }\n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 72,
    "bugNodeStartChar": 2519,
    "bugNodeLength": 19,
    "fixLineNum": 72,
    "fixNodeStartChar": 2519,
    "fixNodeLength": 20,
    "sourceBeforeFix": "expiresOn.getTime()",
    "sourceAfterFix": "activeFrom.getTime()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "5d1ba89bffef2112aee336866c69df3b4e90f884",
    "fixCommitParentSHA1": "7660f6ad511ecf72388bf2834b967a74e2822a2a",
    "bugFilePath": "aws-java-sdk-dynamodb/src/main/java/com/amazonaws/services/dynamodbv2/document/Item.java",
    "fixPatch": "diff --git a/aws-java-sdk-dynamodb/src/main/java/com/amazonaws/services/dynamodbv2/document/Item.java b/aws-java-sdk-dynamodb/src/main/java/com/amazonaws/services/dynamodbv2/document/Item.java\nindex 286dbd6..f60a998 100644\n--- a/aws-java-sdk-dynamodb/src/main/java/com/amazonaws/services/dynamodbv2/document/Item.java\n+++ b/aws-java-sdk-dynamodb/src/main/java/com/amazonaws/services/dynamodbv2/document/Item.java\n@@ -908,7 +908,7 @@\n     public Item withJSON(String attrName, String json) {\n         checkInvalidAttribute(attrName, json);\n         attributes.put(attrName,\n-            valueConformer.transform(Jackson.fromJsonString(json, Map.class)));\n+            valueConformer.transform(Jackson.fromJsonString(json, Object.class)));\n         return this;\n     }\n \n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 911,
    "bugNodeStartChar": 34873,
    "bugNodeLength": 9,
    "fixLineNum": 911,
    "fixNodeStartChar": 34873,
    "fixNodeLength": 12,
    "sourceBeforeFix": "Map.class",
    "sourceAfterFix": "Object.class"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "fbfd5fd9bb171b1ab5533822c1a201f6d12c6523",
    "fixCommitParentSHA1": "f5154b157568ddf33e71c2b2b68580646a073b58",
    "bugFilePath": "aws-java-sdk-dynamodb/src/main/java/com/amazonaws/services/dynamodbv2/document/Item.java",
    "fixPatch": "diff --git a/aws-java-sdk-dynamodb/src/main/java/com/amazonaws/services/dynamodbv2/document/Item.java b/aws-java-sdk-dynamodb/src/main/java/com/amazonaws/services/dynamodbv2/document/Item.java\nindex 286dbd6..f60a998 100644\n--- a/aws-java-sdk-dynamodb/src/main/java/com/amazonaws/services/dynamodbv2/document/Item.java\n+++ b/aws-java-sdk-dynamodb/src/main/java/com/amazonaws/services/dynamodbv2/document/Item.java\n@@ -908,7 +908,7 @@\n     public Item withJSON(String attrName, String json) {\n         checkInvalidAttribute(attrName, json);\n         attributes.put(attrName,\n-            valueConformer.transform(Jackson.fromJsonString(json, Map.class)));\n+            valueConformer.transform(Jackson.fromJsonString(json, Object.class)));\n         return this;\n     }\n \n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 911,
    "bugNodeStartChar": 34873,
    "bugNodeLength": 9,
    "fixLineNum": 911,
    "fixNodeStartChar": 34873,
    "fixNodeLength": 12,
    "sourceBeforeFix": "Map.class",
    "sourceAfterFix": "Object.class"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "3cb271c1e9849365329f9812310890d2070a3436",
    "fixCommitParentSHA1": "42d2587360a3ccefc0f082c9d7ef3b4b9ead793c",
    "bugFilePath": "aws-java-sdk-sns/src/main/java/com/amazonaws/services/sns/util/SignatureChecker.java",
    "fixPatch": "diff --git a/aws-java-sdk-sns/src/main/java/com/amazonaws/services/sns/util/SignatureChecker.java b/aws-java-sdk-sns/src/main/java/com/amazonaws/services/sns/util/SignatureChecker.java\nindex 9d321fa..ff4290a 100644\n--- a/aws-java-sdk-sns/src/main/java/com/amazonaws/services/sns/util/SignatureChecker.java\n+++ b/aws-java-sdk-sns/src/main/java/com/amazonaws/services/sns/util/SignatureChecker.java\n@@ -55,7 +55,7 @@\n     private final String SUBJECT = \"Subject\";\n     private final String TOPIC = \"TopicArn\";\n     private final String TOKEN = \"Token\";\n-    private final Set<String> INTERESTING_FIELDS = new HashSet<String>(Arrays.asList(TYPE, SUBSCRIBE_TYPE, MESSAGE,\n+    private final Set<String> INTERESTING_FIELDS = new HashSet<String>(Arrays.asList(TYPE, SUBSCRIBE_URL, MESSAGE,\n             TIMESTAMP, SIGNATURE, SIGNATURE_VERSION, MESSAGE_ID, SUBJECT, TOPIC, TOKEN));\n \n     /**\n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 58,
    "bugNodeStartChar": 2178,
    "bugNodeLength": 132,
    "fixLineNum": 58,
    "fixNodeStartChar": 2178,
    "fixNodeLength": 131,
    "sourceBeforeFix": "Arrays.asList(TYPE,SUBSCRIBE_TYPE,MESSAGE,TIMESTAMP,SIGNATURE,SIGNATURE_VERSION,MESSAGE_ID,SUBJECT,TOPIC,TOKEN)",
    "sourceAfterFix": "Arrays.asList(TYPE,SUBSCRIBE_URL,MESSAGE,TIMESTAMP,SIGNATURE,SIGNATURE_VERSION,MESSAGE_ID,SUBJECT,TOPIC,TOKEN)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "1613bc438d87e914c5e396b8b23a97bceb1eaca0",
    "fixCommitParentSHA1": "747c50c1312fde969a8434465f5afb0ed135b282",
    "bugFilePath": "aws-java-sdk-sns/src/main/java/com/amazonaws/services/sns/util/SignatureChecker.java",
    "fixPatch": "diff --git a/aws-java-sdk-sns/src/main/java/com/amazonaws/services/sns/util/SignatureChecker.java b/aws-java-sdk-sns/src/main/java/com/amazonaws/services/sns/util/SignatureChecker.java\nindex 99b97b4..3afe9c3 100644\n--- a/aws-java-sdk-sns/src/main/java/com/amazonaws/services/sns/util/SignatureChecker.java\n+++ b/aws-java-sdk-sns/src/main/java/com/amazonaws/services/sns/util/SignatureChecker.java\n@@ -55,7 +55,7 @@\n     private final String SUBJECT = \"Subject\";\n     private final String TOPIC = \"TopicArn\";\n     private final String TOKEN = \"Token\";\n-    private final Set<String> INTERESTING_FIELDS = new HashSet<String>(Arrays.asList(TYPE, SUBSCRIBE_TYPE, MESSAGE,\n+    private final Set<String> INTERESTING_FIELDS = new HashSet<String>(Arrays.asList(TYPE, SUBSCRIBE_URL, MESSAGE,\n             TIMESTAMP, SIGNATURE, SIGNATURE_VERSION, MESSAGE_ID, SUBJECT, TOPIC, TOKEN));\n \n     /**\n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 58,
    "bugNodeStartChar": 2178,
    "bugNodeLength": 132,
    "fixLineNum": 58,
    "fixNodeStartChar": 2178,
    "fixNodeLength": 131,
    "sourceBeforeFix": "Arrays.asList(TYPE,SUBSCRIBE_TYPE,MESSAGE,TIMESTAMP,SIGNATURE,SIGNATURE_VERSION,MESSAGE_ID,SUBJECT,TOPIC,TOKEN)",
    "sourceAfterFix": "Arrays.asList(TYPE,SUBSCRIBE_URL,MESSAGE,TIMESTAMP,SIGNATURE,SIGNATURE_VERSION,MESSAGE_ID,SUBJECT,TOPIC,TOKEN)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "ddb09b32a93354cb9baebf8e85a815c18dfc0320",
    "fixCommitParentSHA1": "73c411315326959357effc41e6698cccb9dad2eb",
    "bugFilePath": "aws-java-sdk-core/src/main/java/com/amazonaws/util/StringUtils.java",
    "fixPatch": "diff --git a/aws-java-sdk-core/src/main/java/com/amazonaws/util/StringUtils.java b/aws-java-sdk-core/src/main/java/com/amazonaws/util/StringUtils.java\nindex e0146f3..de98efb 100644\n--- a/aws-java-sdk-core/src/main/java/com/amazonaws/util/StringUtils.java\n+++ b/aws-java-sdk-core/src/main/java/com/amazonaws/util/StringUtils.java\n@@ -141,7 +141,7 @@\n         int indexOf = buffer.indexOf( partToMatch );\n         while ( indexOf != -1 ) {\n             buffer = buffer.replace( indexOf, indexOf + partToMatch.length(), replacement );\n-            indexOf = buffer.indexOf( partToMatch );\n+            indexOf = buffer.indexOf( partToMatch, indexOf + replacement.length() );\n         }\n \n         return buffer.toString();\n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 144,
    "bugNodeStartChar": 4271,
    "bugNodeLength": 29,
    "fixLineNum": 144,
    "fixNodeStartChar": 4271,
    "fixNodeLength": 61,
    "sourceBeforeFix": "buffer.indexOf(partToMatch)",
    "sourceAfterFix": "buffer.indexOf(partToMatch,indexOf + replacement.length())"
  },
  {
    "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
    "fixCommitSHA1": "5289280d8c8e7000d450c4f1ae3e3193dfb0d14f",
    "fixCommitParentSHA1": "a190ac3a97a0b2cbdc0a9fab9a4c9a5ad97670de",
    "bugFilePath": "aws-java-sdk-swf-libraries/src/main/java/com/amazonaws/services/simpleworkflow/flow/generic/StartChildWorkflowExecutionParameters.java",
    "fixPatch": "diff --git a/aws-java-sdk-swf-libraries/src/main/java/com/amazonaws/services/simpleworkflow/flow/generic/StartChildWorkflowExecutionParameters.java b/aws-java-sdk-swf-libraries/src/main/java/com/amazonaws/services/simpleworkflow/flow/generic/StartChildWorkflowExecutionParameters.java\nindex abdde8a..96cad46 100644\n--- a/aws-java-sdk-swf-libraries/src/main/java/com/amazonaws/services/simpleworkflow/flow/generic/StartChildWorkflowExecutionParameters.java\n+++ b/aws-java-sdk-swf-libraries/src/main/java/com/amazonaws/services/simpleworkflow/flow/generic/StartChildWorkflowExecutionParameters.java\n@@ -264,7 +264,7 @@\n                 startChildWorkflowExecutionParameters.setTaskPriority(taskPriority);\n             }\n \n-            String lambdaRole = options.getLambdaRole();\n+            String lambdaRole = optionsOverride.getLambdaRole();\n             if (lambdaRole != null) {\n                 startChildWorkflowExecutionParameters.setLambdaRole(lambdaRole);\n             }\n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 267,
    "bugNodeStartChar": 8888,
    "bugNodeLength": 23,
    "fixLineNum": 267,
    "fixNodeStartChar": 8888,
    "fixNodeLength": 31,
    "sourceBeforeFix": "options.getLambdaRole()",
    "sourceAfterFix": "optionsOverride.getLambdaRole()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "5289280d8c8e7000d450c4f1ae3e3193dfb0d14f",
    "fixCommitParentSHA1": "a190ac3a97a0b2cbdc0a9fab9a4c9a5ad97670de",
    "bugFilePath": "aws-java-sdk-swf-libraries/src/main/java/com/amazonaws/services/simpleworkflow/flow/generic/StartChildWorkflowExecutionParameters.java",
    "fixPatch": "diff --git a/aws-java-sdk-swf-libraries/src/main/java/com/amazonaws/services/simpleworkflow/flow/generic/StartChildWorkflowExecutionParameters.java b/aws-java-sdk-swf-libraries/src/main/java/com/amazonaws/services/simpleworkflow/flow/generic/StartChildWorkflowExecutionParameters.java\nindex abdde8a..96cad46 100644\n--- a/aws-java-sdk-swf-libraries/src/main/java/com/amazonaws/services/simpleworkflow/flow/generic/StartChildWorkflowExecutionParameters.java\n+++ b/aws-java-sdk-swf-libraries/src/main/java/com/amazonaws/services/simpleworkflow/flow/generic/StartChildWorkflowExecutionParameters.java\n@@ -264,7 +264,7 @@\n                 startChildWorkflowExecutionParameters.setTaskPriority(taskPriority);\n             }\n \n-            String lambdaRole = options.getLambdaRole();\n+            String lambdaRole = optionsOverride.getLambdaRole();\n             if (lambdaRole != null) {\n                 startChildWorkflowExecutionParameters.setLambdaRole(lambdaRole);\n             }\n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 267,
    "bugNodeStartChar": 8888,
    "bugNodeLength": 23,
    "fixLineNum": 267,
    "fixNodeStartChar": 8888,
    "fixNodeLength": 31,
    "sourceBeforeFix": "options.getLambdaRole()",
    "sourceAfterFix": "optionsOverride.getLambdaRole()"
  },
  {
    "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
    "fixCommitSHA1": "fcbae65716a5006d4adee83eeafe35ed48ef1278",
    "fixCommitParentSHA1": "a190ac3a97a0b2cbdc0a9fab9a4c9a5ad97670de",
    "bugFilePath": "aws-java-sdk-swf-libraries/src/main/java/com/amazonaws/services/simpleworkflow/flow/generic/StartChildWorkflowExecutionParameters.java",
    "fixPatch": "diff --git a/aws-java-sdk-swf-libraries/src/main/java/com/amazonaws/services/simpleworkflow/flow/generic/StartChildWorkflowExecutionParameters.java b/aws-java-sdk-swf-libraries/src/main/java/com/amazonaws/services/simpleworkflow/flow/generic/StartChildWorkflowExecutionParameters.java\nindex abdde8a..96cad46 100644\n--- a/aws-java-sdk-swf-libraries/src/main/java/com/amazonaws/services/simpleworkflow/flow/generic/StartChildWorkflowExecutionParameters.java\n+++ b/aws-java-sdk-swf-libraries/src/main/java/com/amazonaws/services/simpleworkflow/flow/generic/StartChildWorkflowExecutionParameters.java\n@@ -264,7 +264,7 @@\n                 startChildWorkflowExecutionParameters.setTaskPriority(taskPriority);\n             }\n \n-            String lambdaRole = options.getLambdaRole();\n+            String lambdaRole = optionsOverride.getLambdaRole();\n             if (lambdaRole != null) {\n                 startChildWorkflowExecutionParameters.setLambdaRole(lambdaRole);\n             }\n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 267,
    "bugNodeStartChar": 8888,
    "bugNodeLength": 23,
    "fixLineNum": 267,
    "fixNodeStartChar": 8888,
    "fixNodeLength": 31,
    "sourceBeforeFix": "options.getLambdaRole()",
    "sourceAfterFix": "optionsOverride.getLambdaRole()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "fcbae65716a5006d4adee83eeafe35ed48ef1278",
    "fixCommitParentSHA1": "a190ac3a97a0b2cbdc0a9fab9a4c9a5ad97670de",
    "bugFilePath": "aws-java-sdk-swf-libraries/src/main/java/com/amazonaws/services/simpleworkflow/flow/generic/StartChildWorkflowExecutionParameters.java",
    "fixPatch": "diff --git a/aws-java-sdk-swf-libraries/src/main/java/com/amazonaws/services/simpleworkflow/flow/generic/StartChildWorkflowExecutionParameters.java b/aws-java-sdk-swf-libraries/src/main/java/com/amazonaws/services/simpleworkflow/flow/generic/StartChildWorkflowExecutionParameters.java\nindex abdde8a..96cad46 100644\n--- a/aws-java-sdk-swf-libraries/src/main/java/com/amazonaws/services/simpleworkflow/flow/generic/StartChildWorkflowExecutionParameters.java\n+++ b/aws-java-sdk-swf-libraries/src/main/java/com/amazonaws/services/simpleworkflow/flow/generic/StartChildWorkflowExecutionParameters.java\n@@ -264,7 +264,7 @@\n                 startChildWorkflowExecutionParameters.setTaskPriority(taskPriority);\n             }\n \n-            String lambdaRole = options.getLambdaRole();\n+            String lambdaRole = optionsOverride.getLambdaRole();\n             if (lambdaRole != null) {\n                 startChildWorkflowExecutionParameters.setLambdaRole(lambdaRole);\n             }\n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 267,
    "bugNodeStartChar": 8888,
    "bugNodeLength": 23,
    "fixLineNum": 267,
    "fixNodeStartChar": 8888,
    "fixNodeLength": 31,
    "sourceBeforeFix": "options.getLambdaRole()",
    "sourceAfterFix": "optionsOverride.getLambdaRole()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "04ad420f594bedd8cd5c40160d67585f70686a9c",
    "fixCommitParentSHA1": "d3f9d13904b88d3ef56ab92d3d2d0c583514e4c9",
    "bugFilePath": "aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java",
    "fixPatch": "diff --git a/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java b/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java\nindex 560babf..f94fdd0 100644\n--- a/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java\n+++ b/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java\n@@ -96,7 +96,7 @@\n                 try {\n                     return unmarshaller.unmarshall(jsonContent.jsonNode);\n                 } catch (Exception e) {\n-                    LOG.error(\"Unable to unmarshall exception content\", e);\n+                    LOG.info(\"Unable to unmarshall exception content\", e);\n                     return null;\n                 }\n             }\n@@ -136,7 +136,7 @@\n             try {\n                 rawJsonContent = IOUtils.toString(httpResponse.getContent());\n             } catch (Exception e) {\n-                LOG.error(\"Unable to read HTTP response content\", e);\n+                LOG.info(\"Unable to read HTTP response content\", e);\n             }\n             return new JsonContent(rawJsonContent);\n \n@@ -151,7 +151,7 @@\n             try {\n                 return MAPPER.readTree(rawJsonContent);\n             } catch (Exception e) {\n-                LOG.error(\"Unable to parse HTTP response content\", e);\n+                LOG.info(\"Unable to parse HTTP response content\", e);\n                 return null;\n             }\n         }\n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 99,
    "bugNodeStartChar": 4094,
    "bugNodeLength": 54,
    "fixLineNum": 99,
    "fixNodeStartChar": 4094,
    "fixNodeLength": 53,
    "sourceBeforeFix": "LOG.error(\"Unable to unmarshall exception content\",e)",
    "sourceAfterFix": "LOG.info(\"Unable to unmarshall exception content\",e)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "04ad420f594bedd8cd5c40160d67585f70686a9c",
    "fixCommitParentSHA1": "d3f9d13904b88d3ef56ab92d3d2d0c583514e4c9",
    "bugFilePath": "aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java",
    "fixPatch": "diff --git a/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java b/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java\nindex 560babf..f94fdd0 100644\n--- a/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java\n+++ b/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java\n@@ -96,7 +96,7 @@\n                 try {\n                     return unmarshaller.unmarshall(jsonContent.jsonNode);\n                 } catch (Exception e) {\n-                    LOG.error(\"Unable to unmarshall exception content\", e);\n+                    LOG.info(\"Unable to unmarshall exception content\", e);\n                     return null;\n                 }\n             }\n@@ -136,7 +136,7 @@\n             try {\n                 rawJsonContent = IOUtils.toString(httpResponse.getContent());\n             } catch (Exception e) {\n-                LOG.error(\"Unable to read HTTP response content\", e);\n+                LOG.info(\"Unable to read HTTP response content\", e);\n             }\n             return new JsonContent(rawJsonContent);\n \n@@ -151,7 +151,7 @@\n             try {\n                 return MAPPER.readTree(rawJsonContent);\n             } catch (Exception e) {\n-                LOG.error(\"Unable to parse HTTP response content\", e);\n+                LOG.info(\"Unable to parse HTTP response content\", e);\n                 return null;\n             }\n         }\n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 99,
    "bugNodeStartChar": 4094,
    "bugNodeLength": 54,
    "fixLineNum": 99,
    "fixNodeStartChar": 4094,
    "fixNodeLength": 53,
    "sourceBeforeFix": "LOG.error(\"Unable to unmarshall exception content\",e)",
    "sourceAfterFix": "LOG.info(\"Unable to unmarshall exception content\",e)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "04ad420f594bedd8cd5c40160d67585f70686a9c",
    "fixCommitParentSHA1": "d3f9d13904b88d3ef56ab92d3d2d0c583514e4c9",
    "bugFilePath": "aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java",
    "fixPatch": "diff --git a/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java b/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java\nindex 560babf..f94fdd0 100644\n--- a/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java\n+++ b/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java\n@@ -96,7 +96,7 @@\n                 try {\n                     return unmarshaller.unmarshall(jsonContent.jsonNode);\n                 } catch (Exception e) {\n-                    LOG.error(\"Unable to unmarshall exception content\", e);\n+                    LOG.info(\"Unable to unmarshall exception content\", e);\n                     return null;\n                 }\n             }\n@@ -136,7 +136,7 @@\n             try {\n                 rawJsonContent = IOUtils.toString(httpResponse.getContent());\n             } catch (Exception e) {\n-                LOG.error(\"Unable to read HTTP response content\", e);\n+                LOG.info(\"Unable to read HTTP response content\", e);\n             }\n             return new JsonContent(rawJsonContent);\n \n@@ -151,7 +151,7 @@\n             try {\n                 return MAPPER.readTree(rawJsonContent);\n             } catch (Exception e) {\n-                LOG.error(\"Unable to parse HTTP response content\", e);\n+                LOG.info(\"Unable to parse HTTP response content\", e);\n                 return null;\n             }\n         }\n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 139,
    "bugNodeStartChar": 5521,
    "bugNodeLength": 52,
    "fixLineNum": 139,
    "fixNodeStartChar": 5521,
    "fixNodeLength": 51,
    "sourceBeforeFix": "LOG.error(\"Unable to read HTTP response content\",e)",
    "sourceAfterFix": "LOG.info(\"Unable to read HTTP response content\",e)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "04ad420f594bedd8cd5c40160d67585f70686a9c",
    "fixCommitParentSHA1": "d3f9d13904b88d3ef56ab92d3d2d0c583514e4c9",
    "bugFilePath": "aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java",
    "fixPatch": "diff --git a/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java b/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java\nindex 560babf..f94fdd0 100644\n--- a/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java\n+++ b/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java\n@@ -96,7 +96,7 @@\n                 try {\n                     return unmarshaller.unmarshall(jsonContent.jsonNode);\n                 } catch (Exception e) {\n-                    LOG.error(\"Unable to unmarshall exception content\", e);\n+                    LOG.info(\"Unable to unmarshall exception content\", e);\n                     return null;\n                 }\n             }\n@@ -136,7 +136,7 @@\n             try {\n                 rawJsonContent = IOUtils.toString(httpResponse.getContent());\n             } catch (Exception e) {\n-                LOG.error(\"Unable to read HTTP response content\", e);\n+                LOG.info(\"Unable to read HTTP response content\", e);\n             }\n             return new JsonContent(rawJsonContent);\n \n@@ -151,7 +151,7 @@\n             try {\n                 return MAPPER.readTree(rawJsonContent);\n             } catch (Exception e) {\n-                LOG.error(\"Unable to parse HTTP response content\", e);\n+                LOG.info(\"Unable to parse HTTP response content\", e);\n                 return null;\n             }\n         }\n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 139,
    "bugNodeStartChar": 5521,
    "bugNodeLength": 52,
    "fixLineNum": 139,
    "fixNodeStartChar": 5521,
    "fixNodeLength": 51,
    "sourceBeforeFix": "LOG.error(\"Unable to read HTTP response content\",e)",
    "sourceAfterFix": "LOG.info(\"Unable to read HTTP response content\",e)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "04ad420f594bedd8cd5c40160d67585f70686a9c",
    "fixCommitParentSHA1": "d3f9d13904b88d3ef56ab92d3d2d0c583514e4c9",
    "bugFilePath": "aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java",
    "fixPatch": "diff --git a/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java b/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java\nindex 560babf..f94fdd0 100644\n--- a/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java\n+++ b/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java\n@@ -96,7 +96,7 @@\n                 try {\n                     return unmarshaller.unmarshall(jsonContent.jsonNode);\n                 } catch (Exception e) {\n-                    LOG.error(\"Unable to unmarshall exception content\", e);\n+                    LOG.info(\"Unable to unmarshall exception content\", e);\n                     return null;\n                 }\n             }\n@@ -136,7 +136,7 @@\n             try {\n                 rawJsonContent = IOUtils.toString(httpResponse.getContent());\n             } catch (Exception e) {\n-                LOG.error(\"Unable to read HTTP response content\", e);\n+                LOG.info(\"Unable to read HTTP response content\", e);\n             }\n             return new JsonContent(rawJsonContent);\n \n@@ -151,7 +151,7 @@\n             try {\n                 return MAPPER.readTree(rawJsonContent);\n             } catch (Exception e) {\n-                LOG.error(\"Unable to parse HTTP response content\", e);\n+                LOG.info(\"Unable to parse HTTP response content\", e);\n                 return null;\n             }\n         }\n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 154,
    "bugNodeStartChar": 5987,
    "bugNodeLength": 53,
    "fixLineNum": 154,
    "fixNodeStartChar": 5987,
    "fixNodeLength": 52,
    "sourceBeforeFix": "LOG.error(\"Unable to parse HTTP response content\",e)",
    "sourceAfterFix": "LOG.info(\"Unable to parse HTTP response content\",e)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "04ad420f594bedd8cd5c40160d67585f70686a9c",
    "fixCommitParentSHA1": "d3f9d13904b88d3ef56ab92d3d2d0c583514e4c9",
    "bugFilePath": "aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java",
    "fixPatch": "diff --git a/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java b/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java\nindex 560babf..f94fdd0 100644\n--- a/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java\n+++ b/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java\n@@ -96,7 +96,7 @@\n                 try {\n                     return unmarshaller.unmarshall(jsonContent.jsonNode);\n                 } catch (Exception e) {\n-                    LOG.error(\"Unable to unmarshall exception content\", e);\n+                    LOG.info(\"Unable to unmarshall exception content\", e);\n                     return null;\n                 }\n             }\n@@ -136,7 +136,7 @@\n             try {\n                 rawJsonContent = IOUtils.toString(httpResponse.getContent());\n             } catch (Exception e) {\n-                LOG.error(\"Unable to read HTTP response content\", e);\n+                LOG.info(\"Unable to read HTTP response content\", e);\n             }\n             return new JsonContent(rawJsonContent);\n \n@@ -151,7 +151,7 @@\n             try {\n                 return MAPPER.readTree(rawJsonContent);\n             } catch (Exception e) {\n-                LOG.error(\"Unable to parse HTTP response content\", e);\n+                LOG.info(\"Unable to parse HTTP response content\", e);\n                 return null;\n             }\n         }\n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 154,
    "bugNodeStartChar": 5987,
    "bugNodeLength": 53,
    "fixLineNum": 154,
    "fixNodeStartChar": 5987,
    "fixNodeLength": 52,
    "sourceBeforeFix": "LOG.error(\"Unable to parse HTTP response content\",e)",
    "sourceAfterFix": "LOG.info(\"Unable to parse HTTP response content\",e)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "346f05e0af4e661b8bbb3a15122b8b920fc2767a",
    "fixCommitParentSHA1": "f07abdc0d3993e14d378619b8ac23ec98c07c69a",
    "bugFilePath": "src/main/java/com/amazonaws/http/HttpClientFactory.java",
    "fixPatch": "diff --git a/src/main/java/com/amazonaws/http/HttpClientFactory.java b/src/main/java/com/amazonaws/http/HttpClientFactory.java\nindex 3eea5e2..b524b12 100644\n--- a/src/main/java/com/amazonaws/http/HttpClientFactory.java\n+++ b/src/main/java/com/amazonaws/http/HttpClientFactory.java\n@@ -209,7 +209,7 @@\n \n         public Socket createLayeredSocket(Socket arg0, String arg1, int arg2, HttpParams arg3)\n                 throws IOException, UnknownHostException {\n-            return getSSLContext().getSocketFactory().createSocket();\n+            return getSSLContext().getSocketFactory().createSocket(arg0, arg1, arg2, true);\n         }\n     }\n \n",
    "projectName": "aws.aws-sdk-java",
    "bugLineNum": 212,
    "bugNodeStartChar": 9235,
    "bugNodeLength": 49,
    "fixLineNum": 212,
    "fixNodeStartChar": 9235,
    "fixNodeLength": 71,
    "sourceBeforeFix": "getSSLContext().getSocketFactory().createSocket()",
    "sourceAfterFix": "getSSLContext().getSocketFactory().createSocket(arg0,arg1,arg2,true)"
  }
]