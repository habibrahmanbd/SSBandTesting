[{"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "958fa58492daee485f640bf3261449d9bab9ee6e", "fixCommitParentSHA1": "381a9d2e70e976531aa3d3962a0965d91a17140d", "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java", "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java b/presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java\nindex 8c89b90..30657a9 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java\n@@ -550,7 +550,7 @@\n      */\n     @VisibleForTesting\n     static class UnrecoverableS3OperationException\n-            extends RuntimeException\n+            extends IOException\n     {\n         public UnrecoverableS3OperationException(Path path, Throwable cause)\n         {\n", "projectName": "facebook.presto", "bugLineNum": 547, "bugNodeStartChar": 23056, "bugNodeLength": 568, "fixLineNum": 547, "fixNodeStartChar": 23056, "fixNodeLength": 563, "sourceBeforeFix": "/**   * This exception is for stopping retries for S3 calls that shouldn't be retried. For example, \"Caused by: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403 ...\"  */ @VisibleForTesting static class UnrecoverableS3OperationException extends RuntimeException {   public UnrecoverableS3OperationException(  Path path,  Throwable cause){     super(format(\"%s (Path: %s)\",cause,path),cause);   } } ", "sourceAfterFix": "/**   * This exception is for stopping retries for S3 calls that shouldn't be retried. For example, \"Caused by: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403 ...\"  */ @VisibleForTesting static class UnrecoverableS3OperationException extends IOException {   public UnrecoverableS3OperationException(  Path path,  Throwable cause){     super(format(\"%s (Path: %s)\",cause,path),cause);   } } "}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "958fa58492daee485f640bf3261449d9bab9ee6e", "fixCommitParentSHA1": "381a9d2e70e976531aa3d3962a0965d91a17140d", "bugFilePath": "presto-hive/src/test/java/com/facebook/presto/hive/s3/TestPrestoS3FileSystem.java", "fixPatch": "diff --git a/presto-hive/src/test/java/com/facebook/presto/hive/s3/TestPrestoS3FileSystem.java b/presto-hive/src/test/java/com/facebook/presto/hive/s3/TestPrestoS3FileSystem.java\nindex 76f21fa..daa6fb9 100644\n--- a/presto-hive/src/test/java/com/facebook/presto/hive/s3/TestPrestoS3FileSystem.java\n+++ b/presto-hive/src/test/java/com/facebook/presto/hive/s3/TestPrestoS3FileSystem.java\n@@ -233,7 +233,7 @@\n     }\n \n     @SuppressWarnings(\"ResultOfMethodCallIgnored\")\n-    @Test(expectedExceptions = RuntimeException.class, expectedExceptionsMessageRegExp = \".*Failing getObject call with \" + SC_NOT_FOUND + \".*\")\n+    @Test(expectedExceptions = IOException.class, expectedExceptionsMessageRegExp = \".*Failing getObject call with \" + SC_NOT_FOUND + \".*\")\n     public void testReadNotFound()\n             throws Exception\n     {\n@@ -249,7 +249,7 @@\n     }\n \n     @SuppressWarnings(\"ResultOfMethodCallIgnored\")\n-    @Test(expectedExceptions = RuntimeException.class, expectedExceptionsMessageRegExp = \".*Failing getObject call with \" + SC_FORBIDDEN + \".*\")\n+    @Test(expectedExceptions = IOException.class, expectedExceptionsMessageRegExp = \".*Failing getObject call with \" + SC_FORBIDDEN + \".*\")\n     public void testReadForbidden()\n             throws Exception\n     {\n@@ -357,7 +357,7 @@\n         }\n     }\n \n-    @Test(expectedExceptions = RuntimeException.class, expectedExceptionsMessageRegExp = \".*Failing getObjectMetadata call with \" + SC_FORBIDDEN + \".*\")\n+    @Test(expectedExceptions = IOException.class, expectedExceptionsMessageRegExp = \".*Failing getObjectMetadata call with \" + SC_FORBIDDEN + \".*\")\n     public void testGetMetadataForbidden()\n             throws Exception\n     {\n@@ -410,7 +410,7 @@\n     }\n \n     @Test(expectedExceptions = UnrecoverableS3OperationException.class, expectedExceptionsMessageRegExp = \".*\\\\Q (Path: /tmp/test/path)\\\\E\")\n-    public void testUnrecoverableS3ExceptionMessage()\n+    public void testUnrecoverableS3ExceptionMessage() throws Exception\n     {\n         throw new UnrecoverableS3OperationException(new Path(\"/tmp/test/path\"), new IOException(\"test io exception\"));\n     }\n", "projectName": "facebook.presto", "bugLineNum": 236, "bugNodeStartChar": 11059, "bugNodeLength": 22, "fixLineNum": 236, "fixNodeStartChar": 11059, "fixNodeLength": 17, "sourceBeforeFix": "RuntimeException.class", "sourceAfterFix": "IOException.class"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "958fa58492daee485f640bf3261449d9bab9ee6e", "fixCommitParentSHA1": "381a9d2e70e976531aa3d3962a0965d91a17140d", "bugFilePath": "presto-hive/src/test/java/com/facebook/presto/hive/s3/TestPrestoS3FileSystem.java", "fixPatch": "diff --git a/presto-hive/src/test/java/com/facebook/presto/hive/s3/TestPrestoS3FileSystem.java b/presto-hive/src/test/java/com/facebook/presto/hive/s3/TestPrestoS3FileSystem.java\nindex 76f21fa..daa6fb9 100644\n--- a/presto-hive/src/test/java/com/facebook/presto/hive/s3/TestPrestoS3FileSystem.java\n+++ b/presto-hive/src/test/java/com/facebook/presto/hive/s3/TestPrestoS3FileSystem.java\n@@ -233,7 +233,7 @@\n     }\n \n     @SuppressWarnings(\"ResultOfMethodCallIgnored\")\n-    @Test(expectedExceptions = RuntimeException.class, expectedExceptionsMessageRegExp = \".*Failing getObject call with \" + SC_NOT_FOUND + \".*\")\n+    @Test(expectedExceptions = IOException.class, expectedExceptionsMessageRegExp = \".*Failing getObject call with \" + SC_NOT_FOUND + \".*\")\n     public void testReadNotFound()\n             throws Exception\n     {\n@@ -249,7 +249,7 @@\n     }\n \n     @SuppressWarnings(\"ResultOfMethodCallIgnored\")\n-    @Test(expectedExceptions = RuntimeException.class, expectedExceptionsMessageRegExp = \".*Failing getObject call with \" + SC_FORBIDDEN + \".*\")\n+    @Test(expectedExceptions = IOException.class, expectedExceptionsMessageRegExp = \".*Failing getObject call with \" + SC_FORBIDDEN + \".*\")\n     public void testReadForbidden()\n             throws Exception\n     {\n@@ -357,7 +357,7 @@\n         }\n     }\n \n-    @Test(expectedExceptions = RuntimeException.class, expectedExceptionsMessageRegExp = \".*Failing getObjectMetadata call with \" + SC_FORBIDDEN + \".*\")\n+    @Test(expectedExceptions = IOException.class, expectedExceptionsMessageRegExp = \".*Failing getObjectMetadata call with \" + SC_FORBIDDEN + \".*\")\n     public void testGetMetadataForbidden()\n             throws Exception\n     {\n@@ -410,7 +410,7 @@\n     }\n \n     @Test(expectedExceptions = UnrecoverableS3OperationException.class, expectedExceptionsMessageRegExp = \".*\\\\Q (Path: /tmp/test/path)\\\\E\")\n-    public void testUnrecoverableS3ExceptionMessage()\n+    public void testUnrecoverableS3ExceptionMessage() throws Exception\n     {\n         throw new UnrecoverableS3OperationException(new Path(\"/tmp/test/path\"), new IOException(\"test io exception\"));\n     }\n", "projectName": "facebook.presto", "bugLineNum": 252, "bugNodeStartChar": 11770, "bugNodeLength": 22, "fixLineNum": 252, "fixNodeStartChar": 11770, "fixNodeLength": 17, "sourceBeforeFix": "RuntimeException.class", "sourceAfterFix": "IOException.class"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "958fa58492daee485f640bf3261449d9bab9ee6e", "fixCommitParentSHA1": "381a9d2e70e976531aa3d3962a0965d91a17140d", "bugFilePath": "presto-hive/src/test/java/com/facebook/presto/hive/s3/TestPrestoS3FileSystem.java", "fixPatch": "diff --git a/presto-hive/src/test/java/com/facebook/presto/hive/s3/TestPrestoS3FileSystem.java b/presto-hive/src/test/java/com/facebook/presto/hive/s3/TestPrestoS3FileSystem.java\nindex 76f21fa..daa6fb9 100644\n--- a/presto-hive/src/test/java/com/facebook/presto/hive/s3/TestPrestoS3FileSystem.java\n+++ b/presto-hive/src/test/java/com/facebook/presto/hive/s3/TestPrestoS3FileSystem.java\n@@ -233,7 +233,7 @@\n     }\n \n     @SuppressWarnings(\"ResultOfMethodCallIgnored\")\n-    @Test(expectedExceptions = RuntimeException.class, expectedExceptionsMessageRegExp = \".*Failing getObject call with \" + SC_NOT_FOUND + \".*\")\n+    @Test(expectedExceptions = IOException.class, expectedExceptionsMessageRegExp = \".*Failing getObject call with \" + SC_NOT_FOUND + \".*\")\n     public void testReadNotFound()\n             throws Exception\n     {\n@@ -249,7 +249,7 @@\n     }\n \n     @SuppressWarnings(\"ResultOfMethodCallIgnored\")\n-    @Test(expectedExceptions = RuntimeException.class, expectedExceptionsMessageRegExp = \".*Failing getObject call with \" + SC_FORBIDDEN + \".*\")\n+    @Test(expectedExceptions = IOException.class, expectedExceptionsMessageRegExp = \".*Failing getObject call with \" + SC_FORBIDDEN + \".*\")\n     public void testReadForbidden()\n             throws Exception\n     {\n@@ -357,7 +357,7 @@\n         }\n     }\n \n-    @Test(expectedExceptions = RuntimeException.class, expectedExceptionsMessageRegExp = \".*Failing getObjectMetadata call with \" + SC_FORBIDDEN + \".*\")\n+    @Test(expectedExceptions = IOException.class, expectedExceptionsMessageRegExp = \".*Failing getObjectMetadata call with \" + SC_FORBIDDEN + \".*\")\n     public void testGetMetadataForbidden()\n             throws Exception\n     {\n@@ -410,7 +410,7 @@\n     }\n \n     @Test(expectedExceptions = UnrecoverableS3OperationException.class, expectedExceptionsMessageRegExp = \".*\\\\Q (Path: /tmp/test/path)\\\\E\")\n-    public void testUnrecoverableS3ExceptionMessage()\n+    public void testUnrecoverableS3ExceptionMessage() throws Exception\n     {\n         throw new UnrecoverableS3OperationException(new Path(\"/tmp/test/path\"), new IOException(\"test io exception\"));\n     }\n", "projectName": "facebook.presto", "bugLineNum": 360, "bugNodeStartChar": 16048, "bugNodeLength": 22, "fixLineNum": 360, "fixNodeStartChar": 16048, "fixNodeLength": 17, "sourceBeforeFix": "RuntimeException.class", "sourceAfterFix": "IOException.class"}, {"bugType": "ADD_THROWS_EXCEPTION", "fixCommitSHA1": "958fa58492daee485f640bf3261449d9bab9ee6e", "fixCommitParentSHA1": "381a9d2e70e976531aa3d3962a0965d91a17140d", "bugFilePath": "presto-hive/src/test/java/com/facebook/presto/hive/s3/TestPrestoS3FileSystem.java", "fixPatch": "diff --git a/presto-hive/src/test/java/com/facebook/presto/hive/s3/TestPrestoS3FileSystem.java b/presto-hive/src/test/java/com/facebook/presto/hive/s3/TestPrestoS3FileSystem.java\nindex 76f21fa..daa6fb9 100644\n--- a/presto-hive/src/test/java/com/facebook/presto/hive/s3/TestPrestoS3FileSystem.java\n+++ b/presto-hive/src/test/java/com/facebook/presto/hive/s3/TestPrestoS3FileSystem.java\n@@ -233,7 +233,7 @@\n     }\n \n     @SuppressWarnings(\"ResultOfMethodCallIgnored\")\n-    @Test(expectedExceptions = RuntimeException.class, expectedExceptionsMessageRegExp = \".*Failing getObject call with \" + SC_NOT_FOUND + \".*\")\n+    @Test(expectedExceptions = IOException.class, expectedExceptionsMessageRegExp = \".*Failing getObject call with \" + SC_NOT_FOUND + \".*\")\n     public void testReadNotFound()\n             throws Exception\n     {\n@@ -249,7 +249,7 @@\n     }\n \n     @SuppressWarnings(\"ResultOfMethodCallIgnored\")\n-    @Test(expectedExceptions = RuntimeException.class, expectedExceptionsMessageRegExp = \".*Failing getObject call with \" + SC_FORBIDDEN + \".*\")\n+    @Test(expectedExceptions = IOException.class, expectedExceptionsMessageRegExp = \".*Failing getObject call with \" + SC_FORBIDDEN + \".*\")\n     public void testReadForbidden()\n             throws Exception\n     {\n@@ -357,7 +357,7 @@\n         }\n     }\n \n-    @Test(expectedExceptions = RuntimeException.class, expectedExceptionsMessageRegExp = \".*Failing getObjectMetadata call with \" + SC_FORBIDDEN + \".*\")\n+    @Test(expectedExceptions = IOException.class, expectedExceptionsMessageRegExp = \".*Failing getObjectMetadata call with \" + SC_FORBIDDEN + \".*\")\n     public void testGetMetadataForbidden()\n             throws Exception\n     {\n@@ -410,7 +410,7 @@\n     }\n \n     @Test(expectedExceptions = UnrecoverableS3OperationException.class, expectedExceptionsMessageRegExp = \".*\\\\Q (Path: /tmp/test/path)\\\\E\")\n-    public void testUnrecoverableS3ExceptionMessage()\n+    public void testUnrecoverableS3ExceptionMessage() throws Exception\n     {\n         throw new UnrecoverableS3OperationException(new Path(\"/tmp/test/path\"), new IOException(\"test io exception\"));\n     }\n", "projectName": "facebook.presto", "bugLineNum": 412, "bugNodeStartChar": 18015, "bugNodeLength": 321, "fixLineNum": 412, "fixNodeStartChar": 18015, "fixNodeLength": 338, "sourceBeforeFix": "1", "sourceAfterFix": "1"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "70c31b498c5083f9efc1914b679737235826149f", "fixCommitParentSHA1": "3cb676a4593b1b6b4426d76a87b16489cf41b336", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java\nindex 5ae466d..c206b64 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java\n@@ -156,11 +156,11 @@\n         this.functionManager = functionManager;\n \n         Optional<Duration> totalCpuTime = stats.map(s -> new Duration(s.values().stream()\n-                .mapToLong(planNode -> planNode.getPlanNodeScheduledTime().toMillis())\n+                .mapToLong(planNode -> planNode.getPlanNodeCpuTime().toMillis())\n                 .sum(), MILLISECONDS));\n \n         Optional<Duration> totalScheduledTime = stats.map(s -> new Duration(s.values().stream()\n-                .mapToLong(planNode -> planNode.getPlanNodeCpuTime().toMillis())\n+                .mapToLong(planNode -> planNode.getPlanNodeScheduledTime().toMillis())\n                 .sum(), MILLISECONDS));\n \n         this.representation = new PlanRepresentation(planRoot, types, totalCpuTime, totalScheduledTime);\n", "projectName": "facebook.presto", "bugLineNum": 159, "bugNodeStartChar": 7934, "bugNodeLength": 35, "fixLineNum": 159, "fixNodeStartChar": 7934, "fixNodeLength": 29, "sourceBeforeFix": "planNode.getPlanNodeScheduledTime()", "sourceAfterFix": "planNode.getPlanNodeCpuTime()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "70c31b498c5083f9efc1914b679737235826149f", "fixCommitParentSHA1": "3cb676a4593b1b6b4426d76a87b16489cf41b336", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java\nindex 5ae466d..c206b64 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java\n@@ -156,11 +156,11 @@\n         this.functionManager = functionManager;\n \n         Optional<Duration> totalCpuTime = stats.map(s -> new Duration(s.values().stream()\n-                .mapToLong(planNode -> planNode.getPlanNodeScheduledTime().toMillis())\n+                .mapToLong(planNode -> planNode.getPlanNodeCpuTime().toMillis())\n                 .sum(), MILLISECONDS));\n \n         Optional<Duration> totalScheduledTime = stats.map(s -> new Duration(s.values().stream()\n-                .mapToLong(planNode -> planNode.getPlanNodeCpuTime().toMillis())\n+                .mapToLong(planNode -> planNode.getPlanNodeScheduledTime().toMillis())\n                 .sum(), MILLISECONDS));\n \n         this.representation = new PlanRepresentation(planRoot, types, totalCpuTime, totalScheduledTime);\n", "projectName": "facebook.presto", "bugLineNum": 159, "bugNodeStartChar": 7934, "bugNodeLength": 35, "fixLineNum": 159, "fixNodeStartChar": 7934, "fixNodeLength": 29, "sourceBeforeFix": "planNode.getPlanNodeScheduledTime()", "sourceAfterFix": "planNode.getPlanNodeCpuTime()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "70c31b498c5083f9efc1914b679737235826149f", "fixCommitParentSHA1": "3cb676a4593b1b6b4426d76a87b16489cf41b336", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java\nindex 5ae466d..c206b64 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java\n@@ -156,11 +156,11 @@\n         this.functionManager = functionManager;\n \n         Optional<Duration> totalCpuTime = stats.map(s -> new Duration(s.values().stream()\n-                .mapToLong(planNode -> planNode.getPlanNodeScheduledTime().toMillis())\n+                .mapToLong(planNode -> planNode.getPlanNodeCpuTime().toMillis())\n                 .sum(), MILLISECONDS));\n \n         Optional<Duration> totalScheduledTime = stats.map(s -> new Duration(s.values().stream()\n-                .mapToLong(planNode -> planNode.getPlanNodeCpuTime().toMillis())\n+                .mapToLong(planNode -> planNode.getPlanNodeScheduledTime().toMillis())\n                 .sum(), MILLISECONDS));\n \n         this.representation = new PlanRepresentation(planRoot, types, totalCpuTime, totalScheduledTime);\n", "projectName": "facebook.presto", "bugLineNum": 163, "bugNodeStartChar": 8158, "bugNodeLength": 29, "fixLineNum": 163, "fixNodeStartChar": 8158, "fixNodeLength": 35, "sourceBeforeFix": "planNode.getPlanNodeCpuTime()", "sourceAfterFix": "planNode.getPlanNodeScheduledTime()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "70c31b498c5083f9efc1914b679737235826149f", "fixCommitParentSHA1": "3cb676a4593b1b6b4426d76a87b16489cf41b336", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java\nindex 5ae466d..c206b64 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java\n@@ -156,11 +156,11 @@\n         this.functionManager = functionManager;\n \n         Optional<Duration> totalCpuTime = stats.map(s -> new Duration(s.values().stream()\n-                .mapToLong(planNode -> planNode.getPlanNodeScheduledTime().toMillis())\n+                .mapToLong(planNode -> planNode.getPlanNodeCpuTime().toMillis())\n                 .sum(), MILLISECONDS));\n \n         Optional<Duration> totalScheduledTime = stats.map(s -> new Duration(s.values().stream()\n-                .mapToLong(planNode -> planNode.getPlanNodeCpuTime().toMillis())\n+                .mapToLong(planNode -> planNode.getPlanNodeScheduledTime().toMillis())\n                 .sum(), MILLISECONDS));\n \n         this.representation = new PlanRepresentation(planRoot, types, totalCpuTime, totalScheduledTime);\n", "projectName": "facebook.presto", "bugLineNum": 163, "bugNodeStartChar": 8158, "bugNodeLength": 29, "fixLineNum": 163, "fixNodeStartChar": 8158, "fixNodeLength": 35, "sourceBeforeFix": "planNode.getPlanNodeCpuTime()", "sourceAfterFix": "planNode.getPlanNodeScheduledTime()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "03d70ad6fdf692ec23cf00bfa5b6e9093c77f0b4", "fixCommitParentSHA1": "7518a70d01edd99de9ebdc7e8cedefb11b298563", "bugFilePath": "presto-verifier/src/main/java/com/facebook/presto/verifier/framework/QueryRewriter.java", "fixPatch": "diff --git a/presto-verifier/src/main/java/com/facebook/presto/verifier/framework/QueryRewriter.java b/presto-verifier/src/main/java/com/facebook/presto/verifier/framework/QueryRewriter.java\nindex 1809500..45dc3ab 100644\n--- a/presto-verifier/src/main/java/com/facebook/presto/verifier/framework/QueryRewriter.java\n+++ b/presto-verifier/src/main/java/com/facebook/presto/verifier/framework/QueryRewriter.java\n@@ -61,15 +61,15 @@\n {\n     private final SqlParser sqlParser;\n     private final PrestoAction prestoAction;\n-    private final List<Property> tablePropertiesOverride;\n+    private final List<Property> tablePropertyOverrides;\n     private final Map<TargetCluster, QualifiedName> prefixes;\n \n     @Inject\n-    public QueryRewriter(SqlParser sqlParser, PrestoAction prestoAction, List<Property> tablePropertiesOverride, VerifierConfig config)\n+    public QueryRewriter(SqlParser sqlParser, PrestoAction prestoAction, List<Property> tablePropertyOverrides, VerifierConfig config)\n     {\n         this.sqlParser = requireNonNull(sqlParser, \"sqlParser is null\");\n         this.prestoAction = requireNonNull(prestoAction, \"prestoAction is null\");\n-        this.tablePropertiesOverride = requireNonNull(tablePropertiesOverride, \"tablePropertiesOverride is null\");\n+        this.tablePropertyOverrides = requireNonNull(tablePropertyOverrides, \"tablePropertyOverrides is null\");\n         this.prefixes = ImmutableMap.of(\n                 CONTROL, config.getControlTablePrefix(),\n                 TEST, config.getTestTablePrefix());\n@@ -93,7 +93,7 @@\n                             temporaryTableName,\n                             createTableAsSelect.getQuery(),\n                             createTableAsSelect.isNotExists(),\n-                            applyPropertyOverride(createTableAsSelect.getProperties(), tablePropertiesOverride),\n+                            applyPropertyOverride(createTableAsSelect.getProperties(), tablePropertyOverrides),\n                             createTableAsSelect.isWithData(),\n                             createTableAsSelect.getColumnAliases(),\n                             createTableAsSelect.getComment()),\n@@ -110,7 +110,7 @@\n                                     temporaryTableName,\n                                     ImmutableList.of(new LikeClause(originalTableName, Optional.of(INCLUDING))),\n                                     false,\n-                                    tablePropertiesOverride,\n+                                    tablePropertyOverrides,\n                                     Optional.empty())),\n                     new Insert(\n                             temporaryTableName,\n@@ -127,7 +127,7 @@\n                             temporaryTableName,\n                             (Query) statement,\n                             false,\n-                            tablePropertiesOverride,\n+                            tablePropertyOverrides,\n                             true,\n                             Optional.of(generateStorageColumnAliases((Query) statement, controlConfiguration, context)),\n                             Optional.empty()),\n", "projectName": "facebook.presto", "bugLineNum": 109, "bugNodeStartChar": 5373, "bugNodeLength": 343, "fixLineNum": 109, "fixNodeStartChar": 5373, "fixNodeLength": 342, "sourceBeforeFix": "new CreateTable(temporaryTableName,ImmutableList.of(new LikeClause(originalTableName,Optional.of(INCLUDING))),false,tablePropertiesOverride,Optional.empty())", "sourceAfterFix": "new CreateTable(temporaryTableName,ImmutableList.of(new LikeClause(originalTableName,Optional.of(INCLUDING))),false,tablePropertyOverrides,Optional.empty())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "03d70ad6fdf692ec23cf00bfa5b6e9093c77f0b4", "fixCommitParentSHA1": "7518a70d01edd99de9ebdc7e8cedefb11b298563", "bugFilePath": "presto-verifier/src/main/java/com/facebook/presto/verifier/framework/QueryRewriter.java", "fixPatch": "diff --git a/presto-verifier/src/main/java/com/facebook/presto/verifier/framework/QueryRewriter.java b/presto-verifier/src/main/java/com/facebook/presto/verifier/framework/QueryRewriter.java\nindex 1809500..45dc3ab 100644\n--- a/presto-verifier/src/main/java/com/facebook/presto/verifier/framework/QueryRewriter.java\n+++ b/presto-verifier/src/main/java/com/facebook/presto/verifier/framework/QueryRewriter.java\n@@ -61,15 +61,15 @@\n {\n     private final SqlParser sqlParser;\n     private final PrestoAction prestoAction;\n-    private final List<Property> tablePropertiesOverride;\n+    private final List<Property> tablePropertyOverrides;\n     private final Map<TargetCluster, QualifiedName> prefixes;\n \n     @Inject\n-    public QueryRewriter(SqlParser sqlParser, PrestoAction prestoAction, List<Property> tablePropertiesOverride, VerifierConfig config)\n+    public QueryRewriter(SqlParser sqlParser, PrestoAction prestoAction, List<Property> tablePropertyOverrides, VerifierConfig config)\n     {\n         this.sqlParser = requireNonNull(sqlParser, \"sqlParser is null\");\n         this.prestoAction = requireNonNull(prestoAction, \"prestoAction is null\");\n-        this.tablePropertiesOverride = requireNonNull(tablePropertiesOverride, \"tablePropertiesOverride is null\");\n+        this.tablePropertyOverrides = requireNonNull(tablePropertyOverrides, \"tablePropertyOverrides is null\");\n         this.prefixes = ImmutableMap.of(\n                 CONTROL, config.getControlTablePrefix(),\n                 TEST, config.getTestTablePrefix());\n@@ -93,7 +93,7 @@\n                             temporaryTableName,\n                             createTableAsSelect.getQuery(),\n                             createTableAsSelect.isNotExists(),\n-                            applyPropertyOverride(createTableAsSelect.getProperties(), tablePropertiesOverride),\n+                            applyPropertyOverride(createTableAsSelect.getProperties(), tablePropertyOverrides),\n                             createTableAsSelect.isWithData(),\n                             createTableAsSelect.getColumnAliases(),\n                             createTableAsSelect.getComment()),\n@@ -110,7 +110,7 @@\n                                     temporaryTableName,\n                                     ImmutableList.of(new LikeClause(originalTableName, Optional.of(INCLUDING))),\n                                     false,\n-                                    tablePropertiesOverride,\n+                                    tablePropertyOverrides,\n                                     Optional.empty())),\n                     new Insert(\n                             temporaryTableName,\n@@ -127,7 +127,7 @@\n                             temporaryTableName,\n                             (Query) statement,\n                             false,\n-                            tablePropertiesOverride,\n+                            tablePropertyOverrides,\n                             true,\n                             Optional.of(generateStorageColumnAliases((Query) statement, controlConfiguration, context)),\n                             Optional.empty()),\n", "projectName": "facebook.presto", "bugLineNum": 126, "bugNodeStartChar": 6278, "bugNodeLength": 408, "fixLineNum": 126, "fixNodeStartChar": 6278, "fixNodeLength": 407, "sourceBeforeFix": "new CreateTableAsSelect(temporaryTableName,(Query)statement,false,tablePropertiesOverride,true,Optional.of(generateStorageColumnAliases((Query)statement,controlConfiguration,context)),Optional.empty())", "sourceAfterFix": "new CreateTableAsSelect(temporaryTableName,(Query)statement,false,tablePropertyOverrides,true,Optional.of(generateStorageColumnAliases((Query)statement,controlConfiguration,context)),Optional.empty())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "c801fd79fae4bf687cbf44ae8d391b080508a2dd", "fixCommitParentSHA1": "8fb01b585e58b76ce0e405e4da015b525ca66b0c", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/sql/planner/assertions/RowExpressionVerifier.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/sql/planner/assertions/RowExpressionVerifier.java b/presto-main/src/test/java/com/facebook/presto/sql/planner/assertions/RowExpressionVerifier.java\nindex c0d733b..db0cda9 100644\n--- a/presto-main/src/test/java/com/facebook/presto/sql/planner/assertions/RowExpressionVerifier.java\n+++ b/presto-main/src/test/java/com/facebook/presto/sql/planner/assertions/RowExpressionVerifier.java\n@@ -137,7 +137,7 @@\n             return false;\n         }\n \n-        if (!expected.getType().equals(actual.getType().toString())) {\n+        if (!expected.getType().equalsIgnoreCase(actual.getType().toString())) {\n             return false;\n         }\n \n", "projectName": "facebook.presto", "bugLineNum": 140, "bugNodeStartChar": 7287, "bugNodeLength": 54, "fixLineNum": 140, "fixNodeStartChar": 7287, "fixNodeLength": 64, "sourceBeforeFix": "expected.getType().equals(actual.getType().toString())", "sourceAfterFix": "expected.getType().equalsIgnoreCase(actual.getType().toString())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "c801fd79fae4bf687cbf44ae8d391b080508a2dd", "fixCommitParentSHA1": "8fb01b585e58b76ce0e405e4da015b525ca66b0c", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/sql/planner/assertions/RowExpressionVerifier.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/sql/planner/assertions/RowExpressionVerifier.java b/presto-main/src/test/java/com/facebook/presto/sql/planner/assertions/RowExpressionVerifier.java\nindex c0d733b..db0cda9 100644\n--- a/presto-main/src/test/java/com/facebook/presto/sql/planner/assertions/RowExpressionVerifier.java\n+++ b/presto-main/src/test/java/com/facebook/presto/sql/planner/assertions/RowExpressionVerifier.java\n@@ -137,7 +137,7 @@\n             return false;\n         }\n \n-        if (!expected.getType().equals(actual.getType().toString())) {\n+        if (!expected.getType().equalsIgnoreCase(actual.getType().toString())) {\n             return false;\n         }\n \n", "projectName": "facebook.presto", "bugLineNum": 140, "bugNodeStartChar": 7287, "bugNodeLength": 54, "fixLineNum": 140, "fixNodeStartChar": 7287, "fixNodeLength": 64, "sourceBeforeFix": "expected.getType().equals(actual.getType().toString())", "sourceAfterFix": "expected.getType().equalsIgnoreCase(actual.getType().toString())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "7bd1426548ed403be685f65b57179394d17cadcc", "fixCommitParentSHA1": "f65d4d9d840e06f742659f7ecf4b6cd95d342403", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/execution/QueryStateMachine.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/QueryStateMachine.java b/presto-main/src/main/java/com/facebook/presto/execution/QueryStateMachine.java\nindex 6bc9385..83dbcdf 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/QueryStateMachine.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/QueryStateMachine.java\n@@ -481,7 +481,7 @@\n                 }\n \n                 if (plan.isMaterializedExchangeSource()) {\n-                    writtenOutputPhysicalDataSize += stageStats.getPhysicalWrittenDataSize().toBytes();\n+                    writtenIntermediatePhysicalDataSize += stageStats.getPhysicalWrittenDataSize().toBytes();\n                 }\n                 else {\n                     writtenOutputPositions += stageInfo.getStageStats().getOperatorSummaries().stream()\n", "projectName": "facebook.presto", "bugLineNum": 484, "bugNodeStartChar": 19774, "bugNodeLength": 82, "fixLineNum": 484, "fixNodeStartChar": 19774, "fixNodeLength": 88, "sourceBeforeFix": "writtenOutputPhysicalDataSize+=stageStats.getPhysicalWrittenDataSize().toBytes()", "sourceAfterFix": "writtenIntermediatePhysicalDataSize+=stageStats.getPhysicalWrittenDataSize().toBytes()"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "95cbe760e15985289b0cd901b91b0aa8f66cfac2", "fixCommitParentSHA1": "1f00cf22e858bebb20ce0fcca37991cf6e239de8", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/plan/ExchangeNode.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/ExchangeNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/ExchangeNode.java\nindex d192e87..550f978 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/ExchangeNode.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/ExchangeNode.java\n@@ -120,7 +120,7 @@\n                 \"local exchanges do not support constant partition function arguments\");\n \n         checkArgument(!scope.isRemote() || type == REPARTITION || !partitioningScheme.isReplicateNullsAndAny(), \"Only REPARTITION can replicate remotely\");\n-        checkArgument(scope != REMOTE_MATERIALIZED || type != REPARTITION, \"Only REPARTITION can be REMOTE_MATERIALIZED: %s\", type);\n+        checkArgument(scope != REMOTE_MATERIALIZED || type == REPARTITION, \"Only REPARTITION can be REMOTE_MATERIALIZED: %s\", type);\n \n         orderingScheme.ifPresent(ordering -> {\n             PartitioningHandle partitioningHandle = partitioningScheme.getPartitioning().getHandle();\n", "projectName": "facebook.presto", "bugLineNum": 123, "bugNodeStartChar": 5026, "bugNodeLength": 19, "fixLineNum": 123, "fixNodeStartChar": 5026, "fixNodeLength": 19, "sourceBeforeFix": "type != REPARTITION", "sourceAfterFix": "type == REPARTITION"}, {"bugType": "SWAP_BOOLEAN_LITERAL", "fixCommitSHA1": "4666559c319d6b1118568b03083d9e12479018d4", "fixCommitParentSHA1": "b9175e2a9948f9ab653c3421b4871ef988bfc4c6", "bugFilePath": "presto-hive/src/test/java/com/facebook/presto/hive/s3/TestHiveS3Config.java", "fixPatch": "diff --git a/presto-hive/src/test/java/com/facebook/presto/hive/s3/TestHiveS3Config.java b/presto-hive/src/test/java/com/facebook/presto/hive/s3/TestHiveS3Config.java\nindex dae60ef..6a8a1c1 100644\n--- a/presto-hive/src/test/java/com/facebook/presto/hive/s3/TestHiveS3Config.java\n+++ b/presto-hive/src/test/java/com/facebook/presto/hive/s3/TestHiveS3Config.java\n@@ -59,7 +59,7 @@\n                 .setPinS3ClientToCurrentRegion(false)\n                 .setS3UserAgentPrefix(\"\")\n                 .setS3AclType(PrestoS3AclType.PRIVATE)\n-                .setSkipGlacierObjects(true));\n+                .setSkipGlacierObjects(false));\n     }\n \n     @Test\n@@ -91,7 +91,7 @@\n                 .put(\"hive.s3.pin-client-to-current-region\", \"true\")\n                 .put(\"hive.s3.user-agent-prefix\", \"user-agent-prefix\")\n                 .put(\"hive.s3.upload-acl-type\", \"PUBLIC_READ\")\n-                .put(\"hive.s3.skip-glacier-objects\", \"false\")\n+                .put(\"hive.s3.skip-glacier-objects\", \"true\")\n                 .build();\n \n         HiveS3Config expected = new HiveS3Config()\n@@ -120,7 +120,7 @@\n                 .setPinS3ClientToCurrentRegion(true)\n                 .setS3UserAgentPrefix(\"user-agent-prefix\")\n                 .setS3AclType(PrestoS3AclType.PUBLIC_READ)\n-                .setSkipGlacierObjects(false);\n+                .setSkipGlacierObjects(true);\n \n         assertFullMapping(properties, expected);\n     }\n", "projectName": "facebook.presto", "bugLineNum": 36, "bugNodeStartChar": 1289, "bugNodeLength": 1406, "fixLineNum": 36, "fixNodeStartChar": 1289, "fixNodeLength": 1407, "sourceBeforeFix": "recordDefaults(HiveS3Config.class).setS3AwsAccessKey(null).setS3AwsSecretKey(null).setS3Endpoint(null).setS3SignerType(null).setS3PathStyleAccess(false).setS3UseInstanceCredentials(true).setS3SslEnabled(true).setS3SseEnabled(false).setS3SseType(PrestoS3SseType.S3).setS3SseKmsKeyId(null).setS3KmsKeyId(null).setS3EncryptionMaterialsProvider(null).setS3MaxClientRetries(5).setS3MaxErrorRetries(10).setS3MaxBackoffTime(new Duration(10,TimeUnit.MINUTES)).setS3MaxRetryTime(new Duration(10,TimeUnit.MINUTES)).setS3ConnectTimeout(new Duration(5,TimeUnit.SECONDS)).setS3SocketTimeout(new Duration(5,TimeUnit.SECONDS)).setS3MultipartMinFileSize(new DataSize(16,Unit.MEGABYTE)).setS3MultipartMinPartSize(new DataSize(5,Unit.MEGABYTE)).setS3MaxConnections(500).setS3StagingDirectory(new File(StandardSystemProperty.JAVA_IO_TMPDIR.value())).setPinS3ClientToCurrentRegion(false).setS3UserAgentPrefix(\"\").setS3AclType(PrestoS3AclType.PRIVATE).setSkipGlacierObjects(true)", "sourceAfterFix": "recordDefaults(HiveS3Config.class).setS3AwsAccessKey(null).setS3AwsSecretKey(null).setS3Endpoint(null).setS3SignerType(null).setS3PathStyleAccess(false).setS3UseInstanceCredentials(true).setS3SslEnabled(true).setS3SseEnabled(false).setS3SseType(PrestoS3SseType.S3).setS3SseKmsKeyId(null).setS3KmsKeyId(null).setS3EncryptionMaterialsProvider(null).setS3MaxClientRetries(5).setS3MaxErrorRetries(10).setS3MaxBackoffTime(new Duration(10,TimeUnit.MINUTES)).setS3MaxRetryTime(new Duration(10,TimeUnit.MINUTES)).setS3ConnectTimeout(new Duration(5,TimeUnit.SECONDS)).setS3SocketTimeout(new Duration(5,TimeUnit.SECONDS)).setS3MultipartMinFileSize(new DataSize(16,Unit.MEGABYTE)).setS3MultipartMinPartSize(new DataSize(5,Unit.MEGABYTE)).setS3MaxConnections(500).setS3StagingDirectory(new File(StandardSystemProperty.JAVA_IO_TMPDIR.value())).setPinS3ClientToCurrentRegion(false).setS3UserAgentPrefix(\"\").setS3AclType(PrestoS3AclType.PRIVATE).setSkipGlacierObjects(false)"}, {"bugType": "SWAP_BOOLEAN_LITERAL", "fixCommitSHA1": "4666559c319d6b1118568b03083d9e12479018d4", "fixCommitParentSHA1": "b9175e2a9948f9ab653c3421b4871ef988bfc4c6", "bugFilePath": "presto-hive/src/test/java/com/facebook/presto/hive/s3/TestHiveS3Config.java", "fixPatch": "diff --git a/presto-hive/src/test/java/com/facebook/presto/hive/s3/TestHiveS3Config.java b/presto-hive/src/test/java/com/facebook/presto/hive/s3/TestHiveS3Config.java\nindex dae60ef..6a8a1c1 100644\n--- a/presto-hive/src/test/java/com/facebook/presto/hive/s3/TestHiveS3Config.java\n+++ b/presto-hive/src/test/java/com/facebook/presto/hive/s3/TestHiveS3Config.java\n@@ -59,7 +59,7 @@\n                 .setPinS3ClientToCurrentRegion(false)\n                 .setS3UserAgentPrefix(\"\")\n                 .setS3AclType(PrestoS3AclType.PRIVATE)\n-                .setSkipGlacierObjects(true));\n+                .setSkipGlacierObjects(false));\n     }\n \n     @Test\n@@ -91,7 +91,7 @@\n                 .put(\"hive.s3.pin-client-to-current-region\", \"true\")\n                 .put(\"hive.s3.user-agent-prefix\", \"user-agent-prefix\")\n                 .put(\"hive.s3.upload-acl-type\", \"PUBLIC_READ\")\n-                .put(\"hive.s3.skip-glacier-objects\", \"false\")\n+                .put(\"hive.s3.skip-glacier-objects\", \"true\")\n                 .build();\n \n         HiveS3Config expected = new HiveS3Config()\n@@ -120,7 +120,7 @@\n                 .setPinS3ClientToCurrentRegion(true)\n                 .setS3UserAgentPrefix(\"user-agent-prefix\")\n                 .setS3AclType(PrestoS3AclType.PUBLIC_READ)\n-                .setSkipGlacierObjects(false);\n+                .setSkipGlacierObjects(true);\n \n         assertFullMapping(properties, expected);\n     }\n", "projectName": "facebook.presto", "bugLineNum": 97, "bugNodeStartChar": 4455, "bugNodeLength": 1450, "fixLineNum": 97, "fixNodeStartChar": 4455, "fixNodeLength": 1449, "sourceBeforeFix": "new HiveS3Config().setS3AwsAccessKey(\"abc123\").setS3AwsSecretKey(\"secret\").setS3Endpoint(\"endpoint.example.com\").setS3SignerType(PrestoS3SignerType.S3SignerType).setS3PathStyleAccess(true).setS3UseInstanceCredentials(false).setS3SslEnabled(false).setS3SseEnabled(true).setS3SseType(PrestoS3SseType.KMS).setS3SseKmsKeyId(\"KMS_KEY_ID\").setS3EncryptionMaterialsProvider(\"EMP_CLASS\").setS3KmsKeyId(\"KEY_ID\").setS3MaxClientRetries(9).setS3MaxErrorRetries(8).setS3MaxBackoffTime(new Duration(4,TimeUnit.MINUTES)).setS3MaxRetryTime(new Duration(20,TimeUnit.MINUTES)).setS3ConnectTimeout(new Duration(8,TimeUnit.SECONDS)).setS3SocketTimeout(new Duration(4,TimeUnit.MINUTES)).setS3MultipartMinFileSize(new DataSize(32,Unit.MEGABYTE)).setS3MultipartMinPartSize(new DataSize(15,Unit.MEGABYTE)).setS3MaxConnections(77).setS3StagingDirectory(new File(\"/s3-staging\")).setPinS3ClientToCurrentRegion(true).setS3UserAgentPrefix(\"user-agent-prefix\").setS3AclType(PrestoS3AclType.PUBLIC_READ).setSkipGlacierObjects(false)", "sourceAfterFix": "new HiveS3Config().setS3AwsAccessKey(\"abc123\").setS3AwsSecretKey(\"secret\").setS3Endpoint(\"endpoint.example.com\").setS3SignerType(PrestoS3SignerType.S3SignerType).setS3PathStyleAccess(true).setS3UseInstanceCredentials(false).setS3SslEnabled(false).setS3SseEnabled(true).setS3SseType(PrestoS3SseType.KMS).setS3SseKmsKeyId(\"KMS_KEY_ID\").setS3EncryptionMaterialsProvider(\"EMP_CLASS\").setS3KmsKeyId(\"KEY_ID\").setS3MaxClientRetries(9).setS3MaxErrorRetries(8).setS3MaxBackoffTime(new Duration(4,TimeUnit.MINUTES)).setS3MaxRetryTime(new Duration(20,TimeUnit.MINUTES)).setS3ConnectTimeout(new Duration(8,TimeUnit.SECONDS)).setS3SocketTimeout(new Duration(4,TimeUnit.MINUTES)).setS3MultipartMinFileSize(new DataSize(32,Unit.MEGABYTE)).setS3MultipartMinPartSize(new DataSize(15,Unit.MEGABYTE)).setS3MaxConnections(77).setS3StagingDirectory(new File(\"/s3-staging\")).setPinS3ClientToCurrentRegion(true).setS3UserAgentPrefix(\"user-agent-prefix\").setS3AclType(PrestoS3AclType.PUBLIC_READ).setSkipGlacierObjects(true)"}, {"bugType": "SWAP_ARGUMENTS", "fixCommitSHA1": "d6a891e13eb646dfbfd5d7e0d9c1791b4c9a9b18", "fixCommitParentSHA1": "e78c69ed1abfded400d9d58c94f39ce8c296a53b", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java b/presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java\nindex 52368f9..24bc432 100644\n--- a/presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java\n+++ b/presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java\n@@ -186,8 +186,8 @@\n                 booleanProperty(\n                         DYNAMIC_SCHEDULE_FOR_GROUPED_EXECUTION,\n                         \"Experimental: Use dynamic schedule for grouped execution when possible\",\n-                        false,\n-                        featuresConfig.isDynamicScheduleForGroupedExecutionEnabled()),\n+                        featuresConfig.isDynamicScheduleForGroupedExecutionEnabled(),\n+                        false),\n                 booleanProperty(\n                         PREFER_STREAMING_OPERATORS,\n                         \"Prefer source table layouts that produce streaming operators\",\n", "projectName": "facebook.presto", "bugLineNum": 186, "bugNodeStartChar": 11420, "bugNodeLength": 295, "fixLineNum": 186, "fixNodeStartChar": 11420, "fixNodeLength": 295, "sourceBeforeFix": "booleanProperty(DYNAMIC_SCHEDULE_FOR_GROUPED_EXECUTION,\"Experimental: Use dynamic schedule for grouped execution when possible\",false,featuresConfig.isDynamicScheduleForGroupedExecutionEnabled())", "sourceAfterFix": "booleanProperty(DYNAMIC_SCHEDULE_FOR_GROUPED_EXECUTION,\"Experimental: Use dynamic schedule for grouped execution when possible\",featuresConfig.isDynamicScheduleForGroupedExecutionEnabled(),false)"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "ae376bd69f5d5ee6d0461abd00b7870d8e26960b", "fixCommitParentSHA1": "15cde0d69ac71add991299b9b11ccca9c832232c", "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/metastore/SemiTransactionalHiveMetastore.java", "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/metastore/SemiTransactionalHiveMetastore.java b/presto-hive/src/main/java/com/facebook/presto/hive/metastore/SemiTransactionalHiveMetastore.java\nindex 88d9fea..612d313 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/metastore/SemiTransactionalHiveMetastore.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/metastore/SemiTransactionalHiveMetastore.java\n@@ -1458,7 +1458,7 @@\n             switch (declaredIntentionToWrite.getMode()) {\n                 case STAGE_AND_MOVE_TO_TARGET_DIRECTORY:\n                 case DIRECT_TO_TARGET_NEW_DIRECTORY: {\n-                    if (skipTargetCleanupOnRollback && declaredIntentionToWrite.getMode() != DIRECT_TO_TARGET_NEW_DIRECTORY) {\n+                    if (skipTargetCleanupOnRollback && declaredIntentionToWrite.getMode() == DIRECT_TO_TARGET_NEW_DIRECTORY) {\n                         break;\n                     }\n                     // Note: For STAGE_AND_MOVE_TO_TARGET_DIRECTORY there is no need to cleanup the target directory as it will only be written\n", "projectName": "facebook.presto", "bugLineNum": 1461, "bugNodeStartChar": 71750, "bugNodeLength": 68, "fixLineNum": 1461, "fixNodeStartChar": 71750, "fixNodeLength": 68, "sourceBeforeFix": "declaredIntentionToWrite.getMode() != DIRECT_TO_TARGET_NEW_DIRECTORY", "sourceAfterFix": "declaredIntentionToWrite.getMode() == DIRECT_TO_TARGET_NEW_DIRECTORY"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "15cde0d69ac71add991299b9b11ccca9c832232c", "fixCommitParentSHA1": "b62e4bbbe1f909b2817419c7f56e6fe1a2aea3aa", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java\nindex 1e1223d..3aad8bc 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java\n@@ -727,7 +727,13 @@\n                     .map(PlanNode::getId)\n                     .collect(toList());\n \n-            NodeRepresentation nodeOutput = addNode(node, operatorName, format(formatString, arguments.toArray(new Object[0])), allNodes, ImmutableList.of(), ImmutableList.of());\n+            NodeRepresentation nodeOutput = addNode(\n+                    node,\n+                    operatorName,\n+                    format(formatString, arguments.toArray(new Object[0])),\n+                    allNodes,\n+                    ImmutableList.of(sourceNode),\n+                    ImmutableList.of());\n \n             if (projectNode.isPresent()) {\n                 printAssignments(nodeOutput, projectNode.get().getAssignments());\n", "projectName": "facebook.presto", "bugLineNum": 730, "bugNodeStartChar": 34109, "bugNodeLength": 18, "fixLineNum": 735, "fixNodeStartChar": 34210, "fixNodeLength": 28, "sourceBeforeFix": "ImmutableList.of()", "sourceAfterFix": "ImmutableList.of(sourceNode)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "ddfc832922cf8edce42fbc3d6dad9bfe15f4648c", "fixCommitParentSHA1": "4004b0fde0e9ac1ff7429604d8d0b2a8ed52c5d3", "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/metastore/MetastoreUtil.java", "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/metastore/MetastoreUtil.java b/presto-hive/src/main/java/com/facebook/presto/hive/metastore/MetastoreUtil.java\nindex 4d9c41b..f47ab74 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/metastore/MetastoreUtil.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/metastore/MetastoreUtil.java\n@@ -177,7 +177,7 @@\n \n     public static String makePartName(List<Column> partitionColumns, List<String> values)\n     {\n-        checkArgument(partitionColumns.size() == values.size());\n+        checkArgument(partitionColumns.size() == values.size(), \"Partition value count does not match the partition column count\");\n         List<String> partitionColumnNames = partitionColumns.stream().map(Column::getName).collect(toList());\n         return FileUtils.makePartName(partitionColumnNames, values);\n     }\n", "projectName": "facebook.presto", "bugLineNum": 180, "bugNodeStartChar": 7743, "bugNodeLength": 55, "fixLineNum": 180, "fixNodeStartChar": 7743, "fixNodeLength": 122, "sourceBeforeFix": "checkArgument(partitionColumns.size() == values.size())", "sourceAfterFix": "checkArgument(partitionColumns.size() == values.size(),\"Partition value count does not match the partition column count\")"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "dad70872c09aa162f4567263f677a49b0455be76", "fixCommitParentSHA1": "8445be07cb4d3c1892a5300f7d987d7a7051dbd9", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/cost/TestSemiJoinStatsCalculator.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/cost/TestSemiJoinStatsCalculator.java b/presto-main/src/test/java/com/facebook/presto/cost/TestSemiJoinStatsCalculator.java\nindex bd23432..f4de536 100644\n--- a/presto-main/src/test/java/com/facebook/presto/cost/TestSemiJoinStatsCalculator.java\n+++ b/presto-main/src/test/java/com/facebook/presto/cost/TestSemiJoinStatsCalculator.java\n@@ -204,7 +204,7 @@\n                 .outputRowsCount(inputStatistics.getOutputRowCount() * xStats.getValuesFraction() * 0.5);\n \n         // source stats are unknown\n-        assertThat(computeSemiJoin(inputStatistics, inputStatistics, unknown, u))\n+        assertThat(computeAntiJoin(inputStatistics, inputStatistics, unknown, u))\n                 .symbolStats(unknown, stats -> stats\n                         .nullsFraction(0)\n                         .distinctValuesCountUnknown()\n@@ -214,7 +214,7 @@\n                 .outputRowsCountUnknown();\n \n         // filtering stats are unknown\n-        assertThat(computeSemiJoin(inputStatistics, inputStatistics, x, unknown))\n+        assertThat(computeAntiJoin(inputStatistics, inputStatistics, x, unknown))\n                 .symbolStats(x, stats -> stats\n                         .nullsFraction(0)\n                         .lowValue(xStats.getLowValue())\n", "projectName": "facebook.presto", "bugLineNum": 207, "bugNodeStartChar": 9294, "bugNodeLength": 61, "fixLineNum": 207, "fixNodeStartChar": 9294, "fixNodeLength": 61, "sourceBeforeFix": "computeSemiJoin(inputStatistics,inputStatistics,unknown,u)", "sourceAfterFix": "computeAntiJoin(inputStatistics,inputStatistics,unknown,u)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "dad70872c09aa162f4567263f677a49b0455be76", "fixCommitParentSHA1": "8445be07cb4d3c1892a5300f7d987d7a7051dbd9", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/cost/TestSemiJoinStatsCalculator.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/cost/TestSemiJoinStatsCalculator.java b/presto-main/src/test/java/com/facebook/presto/cost/TestSemiJoinStatsCalculator.java\nindex bd23432..f4de536 100644\n--- a/presto-main/src/test/java/com/facebook/presto/cost/TestSemiJoinStatsCalculator.java\n+++ b/presto-main/src/test/java/com/facebook/presto/cost/TestSemiJoinStatsCalculator.java\n@@ -204,7 +204,7 @@\n                 .outputRowsCount(inputStatistics.getOutputRowCount() * xStats.getValuesFraction() * 0.5);\n \n         // source stats are unknown\n-        assertThat(computeSemiJoin(inputStatistics, inputStatistics, unknown, u))\n+        assertThat(computeAntiJoin(inputStatistics, inputStatistics, unknown, u))\n                 .symbolStats(unknown, stats -> stats\n                         .nullsFraction(0)\n                         .distinctValuesCountUnknown()\n@@ -214,7 +214,7 @@\n                 .outputRowsCountUnknown();\n \n         // filtering stats are unknown\n-        assertThat(computeSemiJoin(inputStatistics, inputStatistics, x, unknown))\n+        assertThat(computeAntiJoin(inputStatistics, inputStatistics, x, unknown))\n                 .symbolStats(x, stats -> stats\n                         .nullsFraction(0)\n                         .lowValue(xStats.getLowValue())\n", "projectName": "facebook.presto", "bugLineNum": 207, "bugNodeStartChar": 9294, "bugNodeLength": 61, "fixLineNum": 207, "fixNodeStartChar": 9294, "fixNodeLength": 61, "sourceBeforeFix": "computeSemiJoin(inputStatistics,inputStatistics,unknown,u)", "sourceAfterFix": "computeAntiJoin(inputStatistics,inputStatistics,unknown,u)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "dad70872c09aa162f4567263f677a49b0455be76", "fixCommitParentSHA1": "8445be07cb4d3c1892a5300f7d987d7a7051dbd9", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/cost/TestSemiJoinStatsCalculator.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/cost/TestSemiJoinStatsCalculator.java b/presto-main/src/test/java/com/facebook/presto/cost/TestSemiJoinStatsCalculator.java\nindex bd23432..f4de536 100644\n--- a/presto-main/src/test/java/com/facebook/presto/cost/TestSemiJoinStatsCalculator.java\n+++ b/presto-main/src/test/java/com/facebook/presto/cost/TestSemiJoinStatsCalculator.java\n@@ -204,7 +204,7 @@\n                 .outputRowsCount(inputStatistics.getOutputRowCount() * xStats.getValuesFraction() * 0.5);\n \n         // source stats are unknown\n-        assertThat(computeSemiJoin(inputStatistics, inputStatistics, unknown, u))\n+        assertThat(computeAntiJoin(inputStatistics, inputStatistics, unknown, u))\n                 .symbolStats(unknown, stats -> stats\n                         .nullsFraction(0)\n                         .distinctValuesCountUnknown()\n@@ -214,7 +214,7 @@\n                 .outputRowsCountUnknown();\n \n         // filtering stats are unknown\n-        assertThat(computeSemiJoin(inputStatistics, inputStatistics, x, unknown))\n+        assertThat(computeAntiJoin(inputStatistics, inputStatistics, x, unknown))\n                 .symbolStats(x, stats -> stats\n                         .nullsFraction(0)\n                         .lowValue(xStats.getLowValue())\n", "projectName": "facebook.presto", "bugLineNum": 217, "bugNodeStartChar": 9781, "bugNodeLength": 61, "fixLineNum": 217, "fixNodeStartChar": 9781, "fixNodeLength": 61, "sourceBeforeFix": "computeSemiJoin(inputStatistics,inputStatistics,x,unknown)", "sourceAfterFix": "computeAntiJoin(inputStatistics,inputStatistics,x,unknown)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "dad70872c09aa162f4567263f677a49b0455be76", "fixCommitParentSHA1": "8445be07cb4d3c1892a5300f7d987d7a7051dbd9", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/cost/TestSemiJoinStatsCalculator.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/cost/TestSemiJoinStatsCalculator.java b/presto-main/src/test/java/com/facebook/presto/cost/TestSemiJoinStatsCalculator.java\nindex bd23432..f4de536 100644\n--- a/presto-main/src/test/java/com/facebook/presto/cost/TestSemiJoinStatsCalculator.java\n+++ b/presto-main/src/test/java/com/facebook/presto/cost/TestSemiJoinStatsCalculator.java\n@@ -204,7 +204,7 @@\n                 .outputRowsCount(inputStatistics.getOutputRowCount() * xStats.getValuesFraction() * 0.5);\n \n         // source stats are unknown\n-        assertThat(computeSemiJoin(inputStatistics, inputStatistics, unknown, u))\n+        assertThat(computeAntiJoin(inputStatistics, inputStatistics, unknown, u))\n                 .symbolStats(unknown, stats -> stats\n                         .nullsFraction(0)\n                         .distinctValuesCountUnknown()\n@@ -214,7 +214,7 @@\n                 .outputRowsCountUnknown();\n \n         // filtering stats are unknown\n-        assertThat(computeSemiJoin(inputStatistics, inputStatistics, x, unknown))\n+        assertThat(computeAntiJoin(inputStatistics, inputStatistics, x, unknown))\n                 .symbolStats(x, stats -> stats\n                         .nullsFraction(0)\n                         .lowValue(xStats.getLowValue())\n", "projectName": "facebook.presto", "bugLineNum": 217, "bugNodeStartChar": 9781, "bugNodeLength": 61, "fixLineNum": 217, "fixNodeStartChar": 9781, "fixNodeLength": 61, "sourceBeforeFix": "computeSemiJoin(inputStatistics,inputStatistics,x,unknown)", "sourceAfterFix": "computeAntiJoin(inputStatistics,inputStatistics,x,unknown)"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "6a654d972b09abc6b3fb9e829ca7d226ea25adb9", "fixCommitParentSHA1": "fadbdab11ecf4903015de261ede0698a99cc06f9", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/execution/scheduler/ScheduleResult.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/scheduler/ScheduleResult.java b/presto-main/src/main/java/com/facebook/presto/execution/scheduler/ScheduleResult.java\nindex 975032a..3df9ab7 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/scheduler/ScheduleResult.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/scheduler/ScheduleResult.java\n@@ -110,7 +110,7 @@\n         return toStringHelper(this)\n                 .add(\"finished\", finished)\n                 .add(\"newTasks\", newTasks.size())\n-                .add(\"blocked\", blocked.isDone())\n+                .add(\"blocked\", !blocked.isDone())\n                 .add(\"splitsScheduled\", splitsScheduled)\n                 .add(\"blockedReason\", blockedReason)\n                 .toString();\n", "projectName": "facebook.presto", "bugLineNum": 113, "bugNodeStartChar": 4112, "bugNodeLength": 16, "fixLineNum": 113, "fixNodeStartChar": 4112, "fixNodeLength": 17, "sourceBeforeFix": "blocked.isDone()", "sourceAfterFix": "!blocked.isDone()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "8937e1332466715fe8c001abfce055e20d1af019", "fixCommitParentSHA1": "cbe66e90a26f5f18951a0dec732f9f1056896165", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/transaction/InMemoryTransactionManager.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/transaction/InMemoryTransactionManager.java b/presto-main/src/main/java/com/facebook/presto/transaction/InMemoryTransactionManager.java\nindex c2f8eeb..998fdcc 100644\n--- a/presto-main/src/main/java/com/facebook/presto/transaction/InMemoryTransactionManager.java\n+++ b/presto-main/src/main/java/com/facebook/presto/transaction/InMemoryTransactionManager.java\n@@ -249,7 +249,7 @@\n     @Override\n     public void trySetInactive(TransactionId transactionId)\n     {\n-        tryGetTransactionMetadata(transactionId).ifPresent(TransactionMetadata::setInActive);\n+        tryGetTransactionMetadata(transactionId).ifPresent(TransactionMetadata::setInactive);\n     }\n \n     private TransactionMetadata getTransactionMetadata(TransactionId transactionId)\n@@ -344,7 +344,7 @@\n             idleStartTime.set(null);\n         }\n \n-        public void setInActive()\n+        public void setInactive()\n         {\n             idleStartTime.set(System.nanoTime());\n         }\n", "projectName": "facebook.presto", "bugLineNum": 252, "bugNodeStartChar": 10704, "bugNodeLength": 32, "fixLineNum": 252, "fixNodeStartChar": 10704, "fixNodeLength": 32, "sourceBeforeFix": "TransactionMetadata::setInActive", "sourceAfterFix": "TransactionMetadata::setInactive"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "bef3817b62b1d1e399aabcf7df5b6ebfe0e1a8a5", "fixCommitParentSHA1": "258a0f37bddf0f66d3fe045e0bbfa6dbe62ae97c", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/version/EmbedVersion.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/version/EmbedVersion.java b/presto-main/src/main/java/com/facebook/presto/version/EmbedVersion.java\nindex e85b51a..bbdfbab 100644\n--- a/presto-main/src/main/java/com/facebook/presto/version/EmbedVersion.java\n+++ b/presto-main/src/main/java/com/facebook/presto/version/EmbedVersion.java\n@@ -82,7 +82,7 @@\n         String configuredVersion = serverConfig.getPrestoVersion();\n \n         String version = configuredVersion;\n-        if (Objects.equals(builtInVersion, configuredVersion)) {\n+        if (!Objects.equals(builtInVersion, configuredVersion)) {\n             version = format(\"%s__%s\", builtInVersion, configuredVersion);\n         }\n         return format(\"Presto_%s___\", version);\n", "projectName": "facebook.presto", "bugLineNum": 85, "bugNodeStartChar": 3427, "bugNodeLength": 49, "fixLineNum": 85, "fixNodeStartChar": 3427, "fixNodeLength": 50, "sourceBeforeFix": "Objects.equals(builtInVersion,configuredVersion)", "sourceAfterFix": "!Objects.equals(builtInVersion,configuredVersion)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "84a3d0b65bf27867edeb1617498726558ce73062", "fixCommitParentSHA1": "1b5af9069b5e07841c01a950c0eb592ebdd6aa67", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/server/protocol/Query.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/server/protocol/Query.java b/presto-main/src/main/java/com/facebook/presto/server/protocol/Query.java\nindex fc9a7f4..b240777 100644\n--- a/presto-main/src/main/java/com/facebook/presto/server/protocol/Query.java\n+++ b/presto-main/src/main/java/com/facebook/presto/server/protocol/Query.java\n@@ -416,7 +416,7 @@\n                 }\n \n                 Page page = serde.deserialize(serializedPage);\n-                bytes += page.getSizeInBytes();\n+                bytes += page.getLogicalSizeInBytes();\n                 rows += page.getPositionCount();\n                 pages.add(new RowIterable(session.toConnectorSession(), types, page));\n             }\n", "projectName": "facebook.presto", "bugLineNum": 419, "bugNodeStartChar": 15401, "bugNodeLength": 21, "fixLineNum": 419, "fixNodeStartChar": 15401, "fixNodeLength": 28, "sourceBeforeFix": "page.getSizeInBytes()", "sourceAfterFix": "page.getLogicalSizeInBytes()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "84a3d0b65bf27867edeb1617498726558ce73062", "fixCommitParentSHA1": "1b5af9069b5e07841c01a950c0eb592ebdd6aa67", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/server/protocol/Query.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/server/protocol/Query.java b/presto-main/src/main/java/com/facebook/presto/server/protocol/Query.java\nindex fc9a7f4..b240777 100644\n--- a/presto-main/src/main/java/com/facebook/presto/server/protocol/Query.java\n+++ b/presto-main/src/main/java/com/facebook/presto/server/protocol/Query.java\n@@ -416,7 +416,7 @@\n                 }\n \n                 Page page = serde.deserialize(serializedPage);\n-                bytes += page.getSizeInBytes();\n+                bytes += page.getLogicalSizeInBytes();\n                 rows += page.getPositionCount();\n                 pages.add(new RowIterable(session.toConnectorSession(), types, page));\n             }\n", "projectName": "facebook.presto", "bugLineNum": 419, "bugNodeStartChar": 15401, "bugNodeLength": 21, "fixLineNum": 419, "fixNodeStartChar": 15401, "fixNodeLength": 28, "sourceBeforeFix": "page.getSizeInBytes()", "sourceAfterFix": "page.getLogicalSizeInBytes()"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "e9f858336e2ca5427369e024618dcbf952507cc5", "fixCommitParentSHA1": "a9a8d87fe56b93aab123db11b0eff1867a47b3b3", "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/HiveUtil.java", "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveUtil.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveUtil.java\nindex e4ae774..6b67380 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveUtil.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveUtil.java\n@@ -390,7 +390,7 @@\n             deserializer.initialize(configuration, schema);\n         }\n         catch (SerDeException e) {\n-            throw new RuntimeException(\"error initializing deserializer: \" + deserializer.getClass().getName());\n+            throw new RuntimeException(\"error initializing deserializer: \" + deserializer.getClass().getName(), e);\n         }\n     }\n \n", "projectName": "facebook.presto", "bugLineNum": 393, "bugNodeStartChar": 18178, "bugNodeLength": 93, "fixLineNum": 393, "fixNodeStartChar": 18178, "fixNodeLength": 96, "sourceBeforeFix": "new RuntimeException(\"error initializing deserializer: \" + deserializer.getClass().getName())", "sourceAfterFix": "new RuntimeException(\"error initializing deserializer: \" + deserializer.getClass().getName(),e)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "49a4a256f9c9959e84d09855b73fabec1e8a235c", "fixCommitParentSHA1": "d1d8a89a466a872e75ea17edff100d39e29650b5", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/operator/BenchmarkWindowOperator.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/operator/BenchmarkWindowOperator.java b/presto-main/src/test/java/com/facebook/presto/operator/BenchmarkWindowOperator.java\nindex bc1c981..353b92f 100644\n--- a/presto-main/src/test/java/com/facebook/presto/operator/BenchmarkWindowOperator.java\n+++ b/presto-main/src/test/java/com/facebook/presto/operator/BenchmarkWindowOperator.java\n@@ -216,7 +216,7 @@\n     @Benchmark\n     public List<Page> benchmark(BenchmarkWindowOperator.Context context)\n     {\n-        DriverContext driverContext = context.createTaskContext().addPipelineContext(0, true, true).addDriverContext();\n+        DriverContext driverContext = context.createTaskContext().addPipelineContext(0, true, true, false).addDriverContext();\n         Operator operator = context.getOperatorFactory().createOperator(driverContext);\n \n         Iterator<Page> input = context.getPages().iterator();\n", "projectName": "facebook.presto", "bugLineNum": 219, "bugNodeStartChar": 8883, "bugNodeLength": 61, "fixLineNum": 219, "fixNodeStartChar": 8883, "fixNodeLength": 68, "sourceBeforeFix": "context.createTaskContext().addPipelineContext(0,true,true)", "sourceAfterFix": "context.createTaskContext().addPipelineContext(0,true,true,false)"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "19b42d810ff7c7924e84ec624385320a1bea96ef", "fixCommitParentSHA1": "8ab08fb4b08708643850320cd88bdb50f3f7a49b", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/operator/JoinUtils.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/JoinUtils.java b/presto-main/src/main/java/com/facebook/presto/operator/JoinUtils.java\nindex e629fe4..906182d 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/JoinUtils.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/JoinUtils.java\n@@ -19,7 +19,10 @@\n \n import java.util.List;\n \n-final class JoinUtils\n+/**\n+ * This class must be public as it is accessed via join compiler reflection.\n+ */\n+public final class JoinUtils\n {\n     private JoinUtils() {}\n \n", "projectName": "facebook.presto", "bugLineNum": 22, "bugNodeStartChar": 755, "bugNodeLength": 748, "fixLineNum": 22, "fixNodeStartChar": 755, "fixNodeLength": 840, "sourceBeforeFix": "16", "sourceAfterFix": "17"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "cdd2f673c253f0103756957467ee74db81829d98", "fixCommitParentSHA1": "30d455ec987b257b704b96428a494c7c9066d9d5", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/server/PrestoSystemRequirements.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/server/PrestoSystemRequirements.java b/presto-main/src/main/java/com/facebook/presto/server/PrestoSystemRequirements.java\nindex 001c420..7f2abfe 100644\n--- a/presto-main/src/main/java/com/facebook/presto/server/PrestoSystemRequirements.java\n+++ b/presto-main/src/main/java/com/facebook/presto/server/PrestoSystemRequirements.java\n@@ -104,7 +104,7 @@\n         }\n \n         JavaVersion version = JavaVersion.parse(javaVersion);\n-        if (version.getMajor() == 8 && version.getUpdate().isPresent() && version.getUpdate().getAsInt() >= 92) {\n+        if (version.getMajor() == 8 && version.getUpdate().isPresent() && version.getUpdate().getAsInt() >= 151) {\n             return;\n         }\n \n@@ -112,7 +112,7 @@\n             return;\n         }\n \n-        failRequirement(\"Presto requires Java 8u92+ (found %s)\", javaVersion);\n+        failRequirement(\"Presto requires Java 8u151+ (found %s)\", javaVersion);\n     }\n \n     private static void verifyUsingG1Gc()\n", "projectName": "facebook.presto", "bugLineNum": 107, "bugNodeStartChar": 3708, "bugNodeLength": 36, "fixLineNum": 107, "fixNodeStartChar": 3708, "fixNodeLength": 37, "sourceBeforeFix": "version.getUpdate().getAsInt() >= 92", "sourceAfterFix": "version.getUpdate().getAsInt() >= 151"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "8e044027612e7f383e3ccdf2f976b4212edd1283", "fixCommitParentSHA1": "999e0aa1859fcd917e3ddf8702a3af2d5731c495", "bugFilePath": "presto-parser/src/main/java/com/facebook/presto/sql/parser/ErrorHandler.java", "fixPatch": "diff --git a/presto-parser/src/main/java/com/facebook/presto/sql/parser/ErrorHandler.java b/presto-parser/src/main/java/com/facebook/presto/sql/parser/ErrorHandler.java\nindex c7bd446..ecd23d8 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/parser/ErrorHandler.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/parser/ErrorHandler.java\n@@ -86,7 +86,7 @@\n             message = String.format(\"mismatched input '%s'. Expecting: %s\", ((Token) offendingSymbol).getText(), expected);\n         }\n         catch (Exception exception) {\n-            LOG.error(e, \"Unexpected failure when handling parsing error. This is likely a bug in the implementation\");\n+            LOG.error(exception, \"Unexpected failure when handling parsing error. This is likely a bug in the implementation\");\n         }\n \n         throw new ParsingException(message, e, line, charPositionInLine);\n", "projectName": "facebook.presto", "bugLineNum": 89, "bugNodeStartChar": 3649, "bugNodeLength": 106, "fixLineNum": 89, "fixNodeStartChar": 3649, "fixNodeLength": 114, "sourceBeforeFix": "LOG.error(e,\"Unexpected failure when handling parsing error. This is likely a bug in the implementation\")", "sourceAfterFix": "LOG.error(exception,\"Unexpected failure when handling parsing error. This is likely a bug in the implementation\")"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "175ad301ad86b5b5f5eae58f0fd97aecc0345014", "fixCommitParentSHA1": "50ed39f50ffe60fb03cd9e8f467157ce2db81638", "bugFilePath": "presto-spi/src/main/java/com/facebook/presto/spi/block/SingleRowBlock.java", "fixPatch": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/block/SingleRowBlock.java b/presto-spi/src/main/java/com/facebook/presto/spi/block/SingleRowBlock.java\nindex 89867e9..33ee8fa 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/block/SingleRowBlock.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/block/SingleRowBlock.java\n@@ -55,7 +55,7 @@\n     {\n         long sizeInBytes = 0;\n         for (int i = 0; i < fieldBlocks.length; i++) {\n-            sizeInBytes += getRawFieldBlock(i).getSizeInBytes();\n+            sizeInBytes += getRawFieldBlock(i).getRegionSizeInBytes(rowIndex, 1);\n         }\n         return sizeInBytes;\n     }\n", "projectName": "facebook.presto", "bugLineNum": 58, "bugNodeStartChar": 1524, "bugNodeLength": 36, "fixLineNum": 58, "fixNodeStartChar": 1524, "fixNodeLength": 53, "sourceBeforeFix": "getRawFieldBlock(i).getSizeInBytes()", "sourceAfterFix": "getRawFieldBlock(i).getRegionSizeInBytes(rowIndex,1)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "e907dbe391122f632a974c54bb0ff79d04c1bd2d", "fixCommitParentSHA1": "daff49aeccb7cd351f5f7057f54cbabe65946f99", "bugFilePath": "presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestHiveTableStatistics.java", "fixPatch": "diff --git a/presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestHiveTableStatistics.java b/presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestHiveTableStatistics.java\nindex 1c1cb5f..107e3ba 100644\n--- a/presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestHiveTableStatistics.java\n+++ b/presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestHiveTableStatistics.java\n@@ -282,14 +282,14 @@\n                 row(\"p_nationkey\", null, 5.0, 0.0, null, \"1\", \"24\"),\n                 row(\"p_name\", null, 6.0, 0.0, null, null, null),\n                 row(\"p_regionkey\", null, 3.0, 0.0, null, \"1\", \"3\"),\n-                row(\"p_comment\", null, 1.0, 0.0, null, null, null),\n+                row(\"p_comment\", null, 7.0, 0.0, null, null, null),\n                 row(null, null, null, null, 15.0, null, null));\n \n         assertThat(query(showStatsPartitionOne)).containsOnly(\n                 row(\"p_nationkey\", null, 5.0, 0.0, null, \"1\", \"24\"),\n                 row(\"p_name\", null, 6.0, 0.0, null, null, null),\n                 row(\"p_regionkey\", null, 1.0, 0.0, null, \"1\", \"1\"),\n-                row(\"p_comment\", null, 1.0, 0.0, null, null, null),\n+                row(\"p_comment\", null, 7.0, 0.0, null, null, null),\n                 row(null, null, null, null, 5.0, null, null));\n \n         assertThat(query(showStatsPartitionTwo)).containsOnly(\n@@ -307,21 +307,21 @@\n                 row(\"p_nationkey\", null, 5.0, 0.0, null, \"1\", \"24\"),\n                 row(\"p_name\", null, 6.0, 0.0, null, null, null),\n                 row(\"p_regionkey\", null, 3.0, 0.0, null, \"1\", \"3\"),\n-                row(\"p_comment\", null, 1.0, 0.0, null, null, null),\n+                row(\"p_comment\", null, 7.0, 0.0, null, null, null),\n                 row(null, null, null, null, 15.0, null, null));\n \n         assertThat(query(showStatsPartitionOne)).containsOnly(\n                 row(\"p_nationkey\", null, 5.0, 0.0, null, \"1\", \"24\"),\n                 row(\"p_name\", null, 6.0, 0.0, null, null, null),\n                 row(\"p_regionkey\", null, 1.0, 0.0, null, \"1\", \"1\"),\n-                row(\"p_comment\", null, 1.0, 0.0, null, null, null),\n+                row(\"p_comment\", null, 7.0, 0.0, null, null, null),\n                 row(null, null, null, null, 5.0, null, null));\n \n         assertThat(query(showStatsPartitionTwo)).containsOnly(\n                 row(\"p_nationkey\", null, 4.0, 0.0, null, \"8\", \"21\"),\n                 row(\"p_name\", null, 6.0, 0.0, null, null, null),\n                 row(\"p_regionkey\", null, 1.0, 0.0, null, \"2\", \"2\"),\n-                row(\"p_comment\", null, 1.0, 0.0, null, null, null),\n+                row(\"p_comment\", null, 5.0, 0.0, null, null, null),\n                 row(null, null, null, null, 5.0, null, null));\n     }\n \n", "projectName": "facebook.presto", "bugLineNum": 285, "bugNodeStartChar": 15085, "bugNodeLength": 50, "fixLineNum": 285, "fixNodeStartChar": 15085, "fixNodeLength": 50, "sourceBeforeFix": "row(\"p_comment\",null,1.0,0.0,null,null,null)", "sourceAfterFix": "row(\"p_comment\",null,7.0,0.0,null,null,null)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "e907dbe391122f632a974c54bb0ff79d04c1bd2d", "fixCommitParentSHA1": "daff49aeccb7cd351f5f7057f54cbabe65946f99", "bugFilePath": "presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestHiveTableStatistics.java", "fixPatch": "diff --git a/presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestHiveTableStatistics.java b/presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestHiveTableStatistics.java\nindex 1c1cb5f..107e3ba 100644\n--- a/presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestHiveTableStatistics.java\n+++ b/presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestHiveTableStatistics.java\n@@ -282,14 +282,14 @@\n                 row(\"p_nationkey\", null, 5.0, 0.0, null, \"1\", \"24\"),\n                 row(\"p_name\", null, 6.0, 0.0, null, null, null),\n                 row(\"p_regionkey\", null, 3.0, 0.0, null, \"1\", \"3\"),\n-                row(\"p_comment\", null, 1.0, 0.0, null, null, null),\n+                row(\"p_comment\", null, 7.0, 0.0, null, null, null),\n                 row(null, null, null, null, 15.0, null, null));\n \n         assertThat(query(showStatsPartitionOne)).containsOnly(\n                 row(\"p_nationkey\", null, 5.0, 0.0, null, \"1\", \"24\"),\n                 row(\"p_name\", null, 6.0, 0.0, null, null, null),\n                 row(\"p_regionkey\", null, 1.0, 0.0, null, \"1\", \"1\"),\n-                row(\"p_comment\", null, 1.0, 0.0, null, null, null),\n+                row(\"p_comment\", null, 7.0, 0.0, null, null, null),\n                 row(null, null, null, null, 5.0, null, null));\n \n         assertThat(query(showStatsPartitionTwo)).containsOnly(\n@@ -307,21 +307,21 @@\n                 row(\"p_nationkey\", null, 5.0, 0.0, null, \"1\", \"24\"),\n                 row(\"p_name\", null, 6.0, 0.0, null, null, null),\n                 row(\"p_regionkey\", null, 3.0, 0.0, null, \"1\", \"3\"),\n-                row(\"p_comment\", null, 1.0, 0.0, null, null, null),\n+                row(\"p_comment\", null, 7.0, 0.0, null, null, null),\n                 row(null, null, null, null, 15.0, null, null));\n \n         assertThat(query(showStatsPartitionOne)).containsOnly(\n                 row(\"p_nationkey\", null, 5.0, 0.0, null, \"1\", \"24\"),\n                 row(\"p_name\", null, 6.0, 0.0, null, null, null),\n                 row(\"p_regionkey\", null, 1.0, 0.0, null, \"1\", \"1\"),\n-                row(\"p_comment\", null, 1.0, 0.0, null, null, null),\n+                row(\"p_comment\", null, 7.0, 0.0, null, null, null),\n                 row(null, null, null, null, 5.0, null, null));\n \n         assertThat(query(showStatsPartitionTwo)).containsOnly(\n                 row(\"p_nationkey\", null, 4.0, 0.0, null, \"8\", \"21\"),\n                 row(\"p_name\", null, 6.0, 0.0, null, null, null),\n                 row(\"p_regionkey\", null, 1.0, 0.0, null, \"2\", \"2\"),\n-                row(\"p_comment\", null, 1.0, 0.0, null, null, null),\n+                row(\"p_comment\", null, 5.0, 0.0, null, null, null),\n                 row(null, null, null, null, 5.0, null, null));\n     }\n \n", "projectName": "facebook.presto", "bugLineNum": 292, "bugNodeStartChar": 15483, "bugNodeLength": 50, "fixLineNum": 292, "fixNodeStartChar": 15483, "fixNodeLength": 50, "sourceBeforeFix": "row(\"p_comment\",null,1.0,0.0,null,null,null)", "sourceAfterFix": "row(\"p_comment\",null,7.0,0.0,null,null,null)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "e907dbe391122f632a974c54bb0ff79d04c1bd2d", "fixCommitParentSHA1": "daff49aeccb7cd351f5f7057f54cbabe65946f99", "bugFilePath": "presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestHiveTableStatistics.java", "fixPatch": "diff --git a/presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestHiveTableStatistics.java b/presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestHiveTableStatistics.java\nindex 1c1cb5f..107e3ba 100644\n--- a/presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestHiveTableStatistics.java\n+++ b/presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestHiveTableStatistics.java\n@@ -282,14 +282,14 @@\n                 row(\"p_nationkey\", null, 5.0, 0.0, null, \"1\", \"24\"),\n                 row(\"p_name\", null, 6.0, 0.0, null, null, null),\n                 row(\"p_regionkey\", null, 3.0, 0.0, null, \"1\", \"3\"),\n-                row(\"p_comment\", null, 1.0, 0.0, null, null, null),\n+                row(\"p_comment\", null, 7.0, 0.0, null, null, null),\n                 row(null, null, null, null, 15.0, null, null));\n \n         assertThat(query(showStatsPartitionOne)).containsOnly(\n                 row(\"p_nationkey\", null, 5.0, 0.0, null, \"1\", \"24\"),\n                 row(\"p_name\", null, 6.0, 0.0, null, null, null),\n                 row(\"p_regionkey\", null, 1.0, 0.0, null, \"1\", \"1\"),\n-                row(\"p_comment\", null, 1.0, 0.0, null, null, null),\n+                row(\"p_comment\", null, 7.0, 0.0, null, null, null),\n                 row(null, null, null, null, 5.0, null, null));\n \n         assertThat(query(showStatsPartitionTwo)).containsOnly(\n@@ -307,21 +307,21 @@\n                 row(\"p_nationkey\", null, 5.0, 0.0, null, \"1\", \"24\"),\n                 row(\"p_name\", null, 6.0, 0.0, null, null, null),\n                 row(\"p_regionkey\", null, 3.0, 0.0, null, \"1\", \"3\"),\n-                row(\"p_comment\", null, 1.0, 0.0, null, null, null),\n+                row(\"p_comment\", null, 7.0, 0.0, null, null, null),\n                 row(null, null, null, null, 15.0, null, null));\n \n         assertThat(query(showStatsPartitionOne)).containsOnly(\n                 row(\"p_nationkey\", null, 5.0, 0.0, null, \"1\", \"24\"),\n                 row(\"p_name\", null, 6.0, 0.0, null, null, null),\n                 row(\"p_regionkey\", null, 1.0, 0.0, null, \"1\", \"1\"),\n-                row(\"p_comment\", null, 1.0, 0.0, null, null, null),\n+                row(\"p_comment\", null, 7.0, 0.0, null, null, null),\n                 row(null, null, null, null, 5.0, null, null));\n \n         assertThat(query(showStatsPartitionTwo)).containsOnly(\n                 row(\"p_nationkey\", null, 4.0, 0.0, null, \"8\", \"21\"),\n                 row(\"p_name\", null, 6.0, 0.0, null, null, null),\n                 row(\"p_regionkey\", null, 1.0, 0.0, null, \"2\", \"2\"),\n-                row(\"p_comment\", null, 1.0, 0.0, null, null, null),\n+                row(\"p_comment\", null, 5.0, 0.0, null, null, null),\n                 row(null, null, null, null, 5.0, null, null));\n     }\n \n", "projectName": "facebook.presto", "bugLineNum": 310, "bugNodeStartChar": 16461, "bugNodeLength": 50, "fixLineNum": 310, "fixNodeStartChar": 16461, "fixNodeLength": 50, "sourceBeforeFix": "row(\"p_comment\",null,1.0,0.0,null,null,null)", "sourceAfterFix": "row(\"p_comment\",null,7.0,0.0,null,null,null)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "e907dbe391122f632a974c54bb0ff79d04c1bd2d", "fixCommitParentSHA1": "daff49aeccb7cd351f5f7057f54cbabe65946f99", "bugFilePath": "presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestHiveTableStatistics.java", "fixPatch": "diff --git a/presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestHiveTableStatistics.java b/presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestHiveTableStatistics.java\nindex 1c1cb5f..107e3ba 100644\n--- a/presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestHiveTableStatistics.java\n+++ b/presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestHiveTableStatistics.java\n@@ -282,14 +282,14 @@\n                 row(\"p_nationkey\", null, 5.0, 0.0, null, \"1\", \"24\"),\n                 row(\"p_name\", null, 6.0, 0.0, null, null, null),\n                 row(\"p_regionkey\", null, 3.0, 0.0, null, \"1\", \"3\"),\n-                row(\"p_comment\", null, 1.0, 0.0, null, null, null),\n+                row(\"p_comment\", null, 7.0, 0.0, null, null, null),\n                 row(null, null, null, null, 15.0, null, null));\n \n         assertThat(query(showStatsPartitionOne)).containsOnly(\n                 row(\"p_nationkey\", null, 5.0, 0.0, null, \"1\", \"24\"),\n                 row(\"p_name\", null, 6.0, 0.0, null, null, null),\n                 row(\"p_regionkey\", null, 1.0, 0.0, null, \"1\", \"1\"),\n-                row(\"p_comment\", null, 1.0, 0.0, null, null, null),\n+                row(\"p_comment\", null, 7.0, 0.0, null, null, null),\n                 row(null, null, null, null, 5.0, null, null));\n \n         assertThat(query(showStatsPartitionTwo)).containsOnly(\n@@ -307,21 +307,21 @@\n                 row(\"p_nationkey\", null, 5.0, 0.0, null, \"1\", \"24\"),\n                 row(\"p_name\", null, 6.0, 0.0, null, null, null),\n                 row(\"p_regionkey\", null, 3.0, 0.0, null, \"1\", \"3\"),\n-                row(\"p_comment\", null, 1.0, 0.0, null, null, null),\n+                row(\"p_comment\", null, 7.0, 0.0, null, null, null),\n                 row(null, null, null, null, 15.0, null, null));\n \n         assertThat(query(showStatsPartitionOne)).containsOnly(\n                 row(\"p_nationkey\", null, 5.0, 0.0, null, \"1\", \"24\"),\n                 row(\"p_name\", null, 6.0, 0.0, null, null, null),\n                 row(\"p_regionkey\", null, 1.0, 0.0, null, \"1\", \"1\"),\n-                row(\"p_comment\", null, 1.0, 0.0, null, null, null),\n+                row(\"p_comment\", null, 7.0, 0.0, null, null, null),\n                 row(null, null, null, null, 5.0, null, null));\n \n         assertThat(query(showStatsPartitionTwo)).containsOnly(\n                 row(\"p_nationkey\", null, 4.0, 0.0, null, \"8\", \"21\"),\n                 row(\"p_name\", null, 6.0, 0.0, null, null, null),\n                 row(\"p_regionkey\", null, 1.0, 0.0, null, \"2\", \"2\"),\n-                row(\"p_comment\", null, 1.0, 0.0, null, null, null),\n+                row(\"p_comment\", null, 5.0, 0.0, null, null, null),\n                 row(null, null, null, null, 5.0, null, null));\n     }\n \n", "projectName": "facebook.presto", "bugLineNum": 317, "bugNodeStartChar": 16859, "bugNodeLength": 50, "fixLineNum": 317, "fixNodeStartChar": 16859, "fixNodeLength": 50, "sourceBeforeFix": "row(\"p_comment\",null,1.0,0.0,null,null,null)", "sourceAfterFix": "row(\"p_comment\",null,7.0,0.0,null,null,null)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "e907dbe391122f632a974c54bb0ff79d04c1bd2d", "fixCommitParentSHA1": "daff49aeccb7cd351f5f7057f54cbabe65946f99", "bugFilePath": "presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestHiveTableStatistics.java", "fixPatch": "diff --git a/presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestHiveTableStatistics.java b/presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestHiveTableStatistics.java\nindex 1c1cb5f..107e3ba 100644\n--- a/presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestHiveTableStatistics.java\n+++ b/presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestHiveTableStatistics.java\n@@ -282,14 +282,14 @@\n                 row(\"p_nationkey\", null, 5.0, 0.0, null, \"1\", \"24\"),\n                 row(\"p_name\", null, 6.0, 0.0, null, null, null),\n                 row(\"p_regionkey\", null, 3.0, 0.0, null, \"1\", \"3\"),\n-                row(\"p_comment\", null, 1.0, 0.0, null, null, null),\n+                row(\"p_comment\", null, 7.0, 0.0, null, null, null),\n                 row(null, null, null, null, 15.0, null, null));\n \n         assertThat(query(showStatsPartitionOne)).containsOnly(\n                 row(\"p_nationkey\", null, 5.0, 0.0, null, \"1\", \"24\"),\n                 row(\"p_name\", null, 6.0, 0.0, null, null, null),\n                 row(\"p_regionkey\", null, 1.0, 0.0, null, \"1\", \"1\"),\n-                row(\"p_comment\", null, 1.0, 0.0, null, null, null),\n+                row(\"p_comment\", null, 7.0, 0.0, null, null, null),\n                 row(null, null, null, null, 5.0, null, null));\n \n         assertThat(query(showStatsPartitionTwo)).containsOnly(\n@@ -307,21 +307,21 @@\n                 row(\"p_nationkey\", null, 5.0, 0.0, null, \"1\", \"24\"),\n                 row(\"p_name\", null, 6.0, 0.0, null, null, null),\n                 row(\"p_regionkey\", null, 3.0, 0.0, null, \"1\", \"3\"),\n-                row(\"p_comment\", null, 1.0, 0.0, null, null, null),\n+                row(\"p_comment\", null, 7.0, 0.0, null, null, null),\n                 row(null, null, null, null, 15.0, null, null));\n \n         assertThat(query(showStatsPartitionOne)).containsOnly(\n                 row(\"p_nationkey\", null, 5.0, 0.0, null, \"1\", \"24\"),\n                 row(\"p_name\", null, 6.0, 0.0, null, null, null),\n                 row(\"p_regionkey\", null, 1.0, 0.0, null, \"1\", \"1\"),\n-                row(\"p_comment\", null, 1.0, 0.0, null, null, null),\n+                row(\"p_comment\", null, 7.0, 0.0, null, null, null),\n                 row(null, null, null, null, 5.0, null, null));\n \n         assertThat(query(showStatsPartitionTwo)).containsOnly(\n                 row(\"p_nationkey\", null, 4.0, 0.0, null, \"8\", \"21\"),\n                 row(\"p_name\", null, 6.0, 0.0, null, null, null),\n                 row(\"p_regionkey\", null, 1.0, 0.0, null, \"2\", \"2\"),\n-                row(\"p_comment\", null, 1.0, 0.0, null, null, null),\n+                row(\"p_comment\", null, 5.0, 0.0, null, null, null),\n                 row(null, null, null, null, 5.0, null, null));\n     }\n \n", "projectName": "facebook.presto", "bugLineNum": 324, "bugNodeStartChar": 17256, "bugNodeLength": 50, "fixLineNum": 324, "fixNodeStartChar": 17256, "fixNodeLength": 50, "sourceBeforeFix": "row(\"p_comment\",null,1.0,0.0,null,null,null)", "sourceAfterFix": "row(\"p_comment\",null,5.0,0.0,null,null,null)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "f56894832282ce8373d6be58d2f5926b16148976", "fixCommitParentSHA1": "4278c9b6765e8889efc0d50ddc3bb3d0b3110a78", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/cost/PlanNodeStatsEstimate.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/cost/PlanNodeStatsEstimate.java b/presto-main/src/main/java/com/facebook/presto/cost/PlanNodeStatsEstimate.java\nindex a6431f4..a860546 100644\n--- a/presto-main/src/main/java/com/facebook/presto/cost/PlanNodeStatsEstimate.java\n+++ b/presto-main/src/main/java/com/facebook/presto/cost/PlanNodeStatsEstimate.java\n@@ -35,7 +35,7 @@\n \n public class PlanNodeStatsEstimate\n {\n-    private static final double DEFAULT_DATA_SIZE_PER_COLUMN = 10;\n+    private static final double DEFAULT_DATA_SIZE_PER_COLUMN = 50;\n     public static final PlanNodeStatsEstimate UNKNOWN_STATS = builder().build();\n \n     private final double outputRowCount;\n", "projectName": "facebook.presto", "bugLineNum": 38, "bugNodeStartChar": 1382, "bugNodeLength": 33, "fixLineNum": 38, "fixNodeStartChar": 1382, "fixNodeLength": 33, "sourceBeforeFix": "DEFAULT_DATA_SIZE_PER_COLUMN=10", "sourceAfterFix": "DEFAULT_DATA_SIZE_PER_COLUMN=50"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "48ea8f3eaa9a3047893d0acd5304035912ebb681", "fixCommitParentSHA1": "686aaadd7959226f731e7161f5b08d4ab24055f8", "bugFilePath": "presto-orc/src/main/java/com/facebook/presto/orc/stream/OrcInputStream.java", "fixPatch": "diff --git a/presto-orc/src/main/java/com/facebook/presto/orc/stream/OrcInputStream.java b/presto-orc/src/main/java/com/facebook/presto/orc/stream/OrcInputStream.java\nindex bb6f353..5a579da 100644\n--- a/presto-orc/src/main/java/com/facebook/presto/orc/stream/OrcInputStream.java\n+++ b/presto-orc/src/main/java/com/facebook/presto/orc/stream/OrcInputStream.java\n@@ -67,7 +67,7 @@\n         requireNonNull(systemMemoryContext, \"systemMemoryContext is null\");\n         this.bufferMemoryUsage = systemMemoryContext.newLocalMemoryContext();\n         this.fixedMemoryUsage = systemMemoryContext.newLocalMemoryContext();\n-        this.fixedMemoryUsage.setBytes(sliceInput.length());\n+        this.fixedMemoryUsage.setBytes(sliceInput.getRetainedSize());\n \n         if (!decompressor.isPresent()) {\n             this.current = sliceInput;\n@@ -83,7 +83,7 @@\n     public void close()\n     {\n         current = null;\n-        fixedMemoryUsage.setBytes(compressedSliceInput.length()); // see comments above for fixedMemoryUsage\n+        fixedMemoryUsage.setBytes(compressedSliceInput.getRetainedSize()); // see comments above for fixedMemoryUsage\n \n         buffer = null;\n         bufferMemoryUsage.setBytes(0);\n", "projectName": "facebook.presto", "bugLineNum": 70, "bugNodeStartChar": 3076, "bugNodeLength": 19, "fixLineNum": 70, "fixNodeStartChar": 3076, "fixNodeLength": 28, "sourceBeforeFix": "sliceInput.length()", "sourceAfterFix": "sliceInput.getRetainedSize()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "48ea8f3eaa9a3047893d0acd5304035912ebb681", "fixCommitParentSHA1": "686aaadd7959226f731e7161f5b08d4ab24055f8", "bugFilePath": "presto-orc/src/main/java/com/facebook/presto/orc/stream/OrcInputStream.java", "fixPatch": "diff --git a/presto-orc/src/main/java/com/facebook/presto/orc/stream/OrcInputStream.java b/presto-orc/src/main/java/com/facebook/presto/orc/stream/OrcInputStream.java\nindex bb6f353..5a579da 100644\n--- a/presto-orc/src/main/java/com/facebook/presto/orc/stream/OrcInputStream.java\n+++ b/presto-orc/src/main/java/com/facebook/presto/orc/stream/OrcInputStream.java\n@@ -67,7 +67,7 @@\n         requireNonNull(systemMemoryContext, \"systemMemoryContext is null\");\n         this.bufferMemoryUsage = systemMemoryContext.newLocalMemoryContext();\n         this.fixedMemoryUsage = systemMemoryContext.newLocalMemoryContext();\n-        this.fixedMemoryUsage.setBytes(sliceInput.length());\n+        this.fixedMemoryUsage.setBytes(sliceInput.getRetainedSize());\n \n         if (!decompressor.isPresent()) {\n             this.current = sliceInput;\n@@ -83,7 +83,7 @@\n     public void close()\n     {\n         current = null;\n-        fixedMemoryUsage.setBytes(compressedSliceInput.length()); // see comments above for fixedMemoryUsage\n+        fixedMemoryUsage.setBytes(compressedSliceInput.getRetainedSize()); // see comments above for fixedMemoryUsage\n \n         buffer = null;\n         bufferMemoryUsage.setBytes(0);\n", "projectName": "facebook.presto", "bugLineNum": 70, "bugNodeStartChar": 3076, "bugNodeLength": 19, "fixLineNum": 70, "fixNodeStartChar": 3076, "fixNodeLength": 28, "sourceBeforeFix": "sliceInput.length()", "sourceAfterFix": "sliceInput.getRetainedSize()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "48ea8f3eaa9a3047893d0acd5304035912ebb681", "fixCommitParentSHA1": "686aaadd7959226f731e7161f5b08d4ab24055f8", "bugFilePath": "presto-orc/src/main/java/com/facebook/presto/orc/stream/OrcInputStream.java", "fixPatch": "diff --git a/presto-orc/src/main/java/com/facebook/presto/orc/stream/OrcInputStream.java b/presto-orc/src/main/java/com/facebook/presto/orc/stream/OrcInputStream.java\nindex bb6f353..5a579da 100644\n--- a/presto-orc/src/main/java/com/facebook/presto/orc/stream/OrcInputStream.java\n+++ b/presto-orc/src/main/java/com/facebook/presto/orc/stream/OrcInputStream.java\n@@ -67,7 +67,7 @@\n         requireNonNull(systemMemoryContext, \"systemMemoryContext is null\");\n         this.bufferMemoryUsage = systemMemoryContext.newLocalMemoryContext();\n         this.fixedMemoryUsage = systemMemoryContext.newLocalMemoryContext();\n-        this.fixedMemoryUsage.setBytes(sliceInput.length());\n+        this.fixedMemoryUsage.setBytes(sliceInput.getRetainedSize());\n \n         if (!decompressor.isPresent()) {\n             this.current = sliceInput;\n@@ -83,7 +83,7 @@\n     public void close()\n     {\n         current = null;\n-        fixedMemoryUsage.setBytes(compressedSliceInput.length()); // see comments above for fixedMemoryUsage\n+        fixedMemoryUsage.setBytes(compressedSliceInput.getRetainedSize()); // see comments above for fixedMemoryUsage\n \n         buffer = null;\n         bufferMemoryUsage.setBytes(0);\n", "projectName": "facebook.presto", "bugLineNum": 86, "bugNodeStartChar": 3490, "bugNodeLength": 29, "fixLineNum": 86, "fixNodeStartChar": 3490, "fixNodeLength": 38, "sourceBeforeFix": "compressedSliceInput.length()", "sourceAfterFix": "compressedSliceInput.getRetainedSize()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "48ea8f3eaa9a3047893d0acd5304035912ebb681", "fixCommitParentSHA1": "686aaadd7959226f731e7161f5b08d4ab24055f8", "bugFilePath": "presto-orc/src/main/java/com/facebook/presto/orc/stream/OrcInputStream.java", "fixPatch": "diff --git a/presto-orc/src/main/java/com/facebook/presto/orc/stream/OrcInputStream.java b/presto-orc/src/main/java/com/facebook/presto/orc/stream/OrcInputStream.java\nindex bb6f353..5a579da 100644\n--- a/presto-orc/src/main/java/com/facebook/presto/orc/stream/OrcInputStream.java\n+++ b/presto-orc/src/main/java/com/facebook/presto/orc/stream/OrcInputStream.java\n@@ -67,7 +67,7 @@\n         requireNonNull(systemMemoryContext, \"systemMemoryContext is null\");\n         this.bufferMemoryUsage = systemMemoryContext.newLocalMemoryContext();\n         this.fixedMemoryUsage = systemMemoryContext.newLocalMemoryContext();\n-        this.fixedMemoryUsage.setBytes(sliceInput.length());\n+        this.fixedMemoryUsage.setBytes(sliceInput.getRetainedSize());\n \n         if (!decompressor.isPresent()) {\n             this.current = sliceInput;\n@@ -83,7 +83,7 @@\n     public void close()\n     {\n         current = null;\n-        fixedMemoryUsage.setBytes(compressedSliceInput.length()); // see comments above for fixedMemoryUsage\n+        fixedMemoryUsage.setBytes(compressedSliceInput.getRetainedSize()); // see comments above for fixedMemoryUsage\n \n         buffer = null;\n         bufferMemoryUsage.setBytes(0);\n", "projectName": "facebook.presto", "bugLineNum": 86, "bugNodeStartChar": 3490, "bugNodeLength": 29, "fixLineNum": 86, "fixNodeStartChar": 3490, "fixNodeLength": 38, "sourceBeforeFix": "compressedSliceInput.length()", "sourceAfterFix": "compressedSliceInput.getRetainedSize()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "acb1b41805a108bf3b9052af416510b5b5f4636d", "fixCommitParentSHA1": "bcfba9fcab5a4cd297b0c4fc056cb9ae15406cf5", "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/util/SortBuffer.java", "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/util/SortBuffer.java b/presto-hive/src/main/java/com/facebook/presto/hive/util/SortBuffer.java\nindex 110ea49..cce1eaf 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/util/SortBuffer.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/util/SortBuffer.java\n@@ -85,7 +85,7 @@\n     {\n         checkState(canAdd(page), \"page buffer is full\");\n         pages.add(page);\n-        usedMemoryBytes += page.getSizeInBytes();\n+        usedMemoryBytes += page.getRetainedSizeInBytes();\n         rowCount = addExact(rowCount, page.getPositionCount());\n     }\n \n", "projectName": "facebook.presto", "bugLineNum": 88, "bugNodeStartChar": 3108, "bugNodeLength": 21, "fixLineNum": 88, "fixNodeStartChar": 3108, "fixNodeLength": 29, "sourceBeforeFix": "page.getSizeInBytes()", "sourceAfterFix": "page.getRetainedSizeInBytes()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "acb1b41805a108bf3b9052af416510b5b5f4636d", "fixCommitParentSHA1": "bcfba9fcab5a4cd297b0c4fc056cb9ae15406cf5", "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/util/SortBuffer.java", "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/util/SortBuffer.java b/presto-hive/src/main/java/com/facebook/presto/hive/util/SortBuffer.java\nindex 110ea49..cce1eaf 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/util/SortBuffer.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/util/SortBuffer.java\n@@ -85,7 +85,7 @@\n     {\n         checkState(canAdd(page), \"page buffer is full\");\n         pages.add(page);\n-        usedMemoryBytes += page.getSizeInBytes();\n+        usedMemoryBytes += page.getRetainedSizeInBytes();\n         rowCount = addExact(rowCount, page.getPositionCount());\n     }\n \n", "projectName": "facebook.presto", "bugLineNum": 88, "bugNodeStartChar": 3108, "bugNodeLength": 21, "fixLineNum": 88, "fixNodeStartChar": 3108, "fixNodeLength": 29, "sourceBeforeFix": "page.getSizeInBytes()", "sourceAfterFix": "page.getRetainedSizeInBytes()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "6efaa261a643a8ed1059b1adb4a6f902789a462e", "fixCommitParentSHA1": "f3978ed0f9213b5e8f51e2381abbf3f53d6d9048", "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/metastore/thrift/ThriftHiveMetastoreClient.java", "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/metastore/thrift/ThriftHiveMetastoreClient.java b/presto-hive/src/main/java/com/facebook/presto/hive/metastore/thrift/ThriftHiveMetastoreClient.java\nindex fedae78..9f3813d 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/metastore/thrift/ThriftHiveMetastoreClient.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/metastore/thrift/ThriftHiveMetastoreClient.java\n@@ -147,10 +147,10 @@\n     }\n \n     @Override\n-    public Map<String, List<ColumnStatisticsObj>> getPartitionColumnStatistics(String databaseName, String tableName, List<String> columnNames, List<String> partitionValues)\n+    public Map<String, List<ColumnStatisticsObj>> getPartitionColumnStatistics(String databaseName, String tableName, List<String> partitionNames, List<String> columnNames)\n             throws TException\n     {\n-        PartitionsStatsRequest partitionsStatsRequest = new PartitionsStatsRequest(databaseName, tableName, columnNames, partitionValues);\n+        PartitionsStatsRequest partitionsStatsRequest = new PartitionsStatsRequest(databaseName, tableName, columnNames, partitionNames);\n         return client.get_partitions_statistics_req(partitionsStatsRequest).getPartStats();\n     }\n \n", "projectName": "facebook.presto", "bugLineNum": 153, "bugNodeStartChar": 4949, "bugNodeLength": 81, "fixLineNum": 153, "fixNodeStartChar": 4949, "fixNodeLength": 80, "sourceBeforeFix": "new PartitionsStatsRequest(databaseName,tableName,columnNames,partitionValues)", "sourceAfterFix": "new PartitionsStatsRequest(databaseName,tableName,columnNames,partitionNames)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "b30c9ba15edd3060a51d6e46a735cdbd838ada7f", "fixCommitParentSHA1": "29dc0b93701b6ccb435daf51b94228c6b163e36f", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/server/security/AuthenticationFilter.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/server/security/AuthenticationFilter.java b/presto-main/src/main/java/com/facebook/presto/server/security/AuthenticationFilter.java\nindex ec62c72..d7b6c1a 100644\n--- a/presto-main/src/main/java/com/facebook/presto/server/security/AuthenticationFilter.java\n+++ b/presto-main/src/main/java/com/facebook/presto/server/security/AuthenticationFilter.java\n@@ -96,7 +96,7 @@\n         skipRequestBody(request);\n \n         for (String value : authenticateHeaders) {\n-            response.setHeader(WWW_AUTHENTICATE, value);\n+            response.addHeader(WWW_AUTHENTICATE, value);\n         }\n \n         if (messages.isEmpty()) {\n", "projectName": "facebook.presto", "bugLineNum": 99, "bugNodeStartChar": 3433, "bugNodeLength": 43, "fixLineNum": 99, "fixNodeStartChar": 3433, "fixNodeLength": 43, "sourceBeforeFix": "response.setHeader(WWW_AUTHENTICATE,value)", "sourceAfterFix": "response.addHeader(WWW_AUTHENTICATE,value)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "b30c9ba15edd3060a51d6e46a735cdbd838ada7f", "fixCommitParentSHA1": "29dc0b93701b6ccb435daf51b94228c6b163e36f", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/server/security/AuthenticationFilter.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/server/security/AuthenticationFilter.java b/presto-main/src/main/java/com/facebook/presto/server/security/AuthenticationFilter.java\nindex ec62c72..d7b6c1a 100644\n--- a/presto-main/src/main/java/com/facebook/presto/server/security/AuthenticationFilter.java\n+++ b/presto-main/src/main/java/com/facebook/presto/server/security/AuthenticationFilter.java\n@@ -96,7 +96,7 @@\n         skipRequestBody(request);\n \n         for (String value : authenticateHeaders) {\n-            response.setHeader(WWW_AUTHENTICATE, value);\n+            response.addHeader(WWW_AUTHENTICATE, value);\n         }\n \n         if (messages.isEmpty()) {\n", "projectName": "facebook.presto", "bugLineNum": 99, "bugNodeStartChar": 3433, "bugNodeLength": 43, "fixLineNum": 99, "fixNodeStartChar": 3433, "fixNodeLength": 43, "sourceBeforeFix": "response.setHeader(WWW_AUTHENTICATE,value)", "sourceAfterFix": "response.addHeader(WWW_AUTHENTICATE,value)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "3a06b2912286fded8cd90996525876b73d87ea92", "fixCommitParentSHA1": "a4ed9b70372354692239b23e58fda926fba2db95", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/server/CoordinatorModule.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/server/CoordinatorModule.java b/presto-main/src/main/java/com/facebook/presto/server/CoordinatorModule.java\nindex a462e19..20b2f57 100644\n--- a/presto-main/src/main/java/com/facebook/presto/server/CoordinatorModule.java\n+++ b/presto-main/src/main/java/com/facebook/presto/server/CoordinatorModule.java\n@@ -144,8 +144,8 @@\n         // query execution visualizer\n         jaxrsBinder(binder).bind(QueryExecutionResource.class);\n \n-        // main webapp entry point\n-        jaxrsBinder(binder).bind(WebAppResource.class);\n+        // resource for serving static content\n+        jaxrsBinder(binder).bind(WebUiResource.class);\n \n         // query manager\n         jaxrsBinder(binder).bind(QueryResource.class);\n", "projectName": "facebook.presto", "bugLineNum": 148, "bugNodeStartChar": 7339, "bugNodeLength": 20, "fixLineNum": 148, "fixNodeStartChar": 7351, "fixNodeLength": 19, "sourceBeforeFix": "WebAppResource.class", "sourceAfterFix": "WebUiResource.class"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "4e5331a21a2efbf87f31b2ccde50208a9ac31046", "fixCommitParentSHA1": "50d13df01d20ed1f4a8a9131c09d1301e9ac963b", "bugFilePath": "presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java", "fixPatch": "diff --git a/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java b/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java\nindex 5ec47e2..70abb99 100644\n--- a/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java\n+++ b/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java\n@@ -362,7 +362,7 @@\n \n     private static Point tileXYToLatitudeLongitude(int tileX, int tileY, int zoomLevel)\n     {\n-        int mapSize = mapSize(zoomLevel);\n+        long mapSize = mapSize(zoomLevel);\n         double x = (clip(tileX * TILE_PIXELS, 0, mapSize) / mapSize) - 0.5;\n         double y = 0.5 - (clip(tileY * TILE_PIXELS, 0, mapSize) / mapSize);\n \n@@ -377,7 +377,7 @@\n         double sinLatitude = Math.sin(latitude * Math.PI / 180);\n         double y = 0.5 - Math.log((1 + sinLatitude) / (1 - sinLatitude)) / (4 * Math.PI);\n \n-        int mapSize = mapSize(zoomLevel);\n+        long mapSize = mapSize(zoomLevel);\n         int tileX = (int) clip(x * mapSize, 0, mapSize - 1);\n         int tileY = (int) clip(y * mapSize, 0, mapSize - 1);\n         return BingTile.fromCoordinates(tileX / TILE_PIXELS, tileY / TILE_PIXELS, zoomLevel);\n@@ -467,8 +467,8 @@\n         return Math.min(Math.max(n, minValue), maxValue);\n     }\n \n-    private static int mapSize(int zoomLevel)\n+    private static long mapSize(int zoomLevel)\n     {\n-        return 256 << zoomLevel;\n+        return 256L << zoomLevel;\n     }\n }\n", "projectName": "facebook.presto", "bugLineNum": 472, "bugNodeStartChar": 20615, "bugNodeLength": 16, "fixLineNum": 472, "fixNodeStartChar": 20615, "fixNodeLength": 17, "sourceBeforeFix": "256 << zoomLevel", "sourceAfterFix": "256L << zoomLevel"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "ab46f2477a01e3d3e3dfcc10e249ae1349d72991", "fixCommitParentSHA1": "55300c81a28017ab8d19ab615e9d99949900a1e6", "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java\nindex 365d4eb..0588bbb 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java\n@@ -288,7 +288,7 @@\n                 String partName = makePartName(table.getPartitionColumns(), partition.getValues());\n \n                 // verify partition is online\n-                verifyOnline(tableName, Optional.of(partName), getProtectMode(partition), table.getParameters());\n+                verifyOnline(tableName, Optional.of(partName), getProtectMode(partition), partition.getParameters());\n \n                 // verify partition is not marked as non-readable\n                 String partitionNotReadable = partition.getParameters().get(OBJECT_NOT_READABLE);\n", "projectName": "facebook.presto", "bugLineNum": 291, "bugNodeStartChar": 14335, "bugNodeLength": 21, "fixLineNum": 291, "fixNodeStartChar": 14335, "fixNodeLength": 25, "sourceBeforeFix": "table.getParameters()", "sourceAfterFix": "partition.getParameters()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "ab46f2477a01e3d3e3dfcc10e249ae1349d72991", "fixCommitParentSHA1": "55300c81a28017ab8d19ab615e9d99949900a1e6", "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java\nindex 365d4eb..0588bbb 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java\n@@ -288,7 +288,7 @@\n                 String partName = makePartName(table.getPartitionColumns(), partition.getValues());\n \n                 // verify partition is online\n-                verifyOnline(tableName, Optional.of(partName), getProtectMode(partition), table.getParameters());\n+                verifyOnline(tableName, Optional.of(partName), getProtectMode(partition), partition.getParameters());\n \n                 // verify partition is not marked as non-readable\n                 String partitionNotReadable = partition.getParameters().get(OBJECT_NOT_READABLE);\n", "projectName": "facebook.presto", "bugLineNum": 291, "bugNodeStartChar": 14335, "bugNodeLength": 21, "fixLineNum": 291, "fixNodeStartChar": 14335, "fixNodeLength": 25, "sourceBeforeFix": "table.getParameters()", "sourceAfterFix": "partition.getParameters()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "9ccdcd329701d68eca26f144807bc13e1d82f3cd", "fixCommitParentSHA1": "5192ed99aac9040e1fbfbca5f766bc12011cd69b", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/operator/scalar/FunctionAssertions.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/operator/scalar/FunctionAssertions.java b/presto-main/src/test/java/com/facebook/presto/operator/scalar/FunctionAssertions.java\nindex 9a140b8..e71db4f 100644\n--- a/presto-main/src/test/java/com/facebook/presto/operator/scalar/FunctionAssertions.java\n+++ b/presto-main/src/test/java/com/facebook/presto/operator/scalar/FunctionAssertions.java\n@@ -461,7 +461,7 @@\n         requireNonNull(projection, \"projection is null\");\n \n         Expression projectionExpression = createExpression(session, projection, metadata, SYMBOL_TYPES);\n-        RowExpression projectionRowExpression = toRowExpression(projectionExpression);\n+        RowExpression projectionRowExpression = toRowExpression(session, projectionExpression);\n         PageProcessor processor = compiler.compilePageProcessor(Optional.empty(), ImmutableList.of(projectionRowExpression)).get();\n \n         // This is a heuristic to detect whether the retained size of cachedInstance is bounded.\n@@ -572,7 +572,7 @@\n         requireNonNull(projection, \"projection is null\");\n \n         Expression projectionExpression = createExpression(session, projection, metadata, SYMBOL_TYPES);\n-        RowExpression projectionRowExpression = toRowExpression(projectionExpression);\n+        RowExpression projectionRowExpression = toRowExpression(session, projectionExpression);\n \n         List<Object> results = new ArrayList<>();\n \n@@ -623,11 +623,11 @@\n         return results;\n     }\n \n-    private RowExpression toRowExpression(Expression projectionExpression)\n+    private RowExpression toRowExpression(Session session, Expression projectionExpression)\n     {\n         Expression translatedProjection = new SymbolToInputRewriter(INPUT_MAPPING).rewrite(projectionExpression);\n         Map<NodeRef<Expression>, Type> expressionTypes = getExpressionTypesFromInput(\n-                TEST_SESSION,\n+                session,\n                 metadata,\n                 SQL_PARSER,\n                 INPUT_TYPES,\n@@ -686,7 +686,7 @@\n         requireNonNull(filter, \"filter is null\");\n \n         Expression filterExpression = createExpression(session, filter, metadata, SYMBOL_TYPES);\n-        RowExpression filterRowExpression = toRowExpression(filterExpression);\n+        RowExpression filterRowExpression = toRowExpression(session, filterExpression);\n \n         List<Boolean> results = new ArrayList<>();\n \n", "projectName": "facebook.presto", "bugLineNum": 629, "bugNodeStartChar": 26198, "bugNodeLength": 233, "fixLineNum": 629, "fixNodeStartChar": 26198, "fixNodeLength": 228, "sourceBeforeFix": "getExpressionTypesFromInput(TEST_SESSION,metadata,SQL_PARSER,INPUT_TYPES,ImmutableList.of(translatedProjection),ImmutableList.of())", "sourceAfterFix": "getExpressionTypesFromInput(session,metadata,SQL_PARSER,INPUT_TYPES,ImmutableList.of(translatedProjection),ImmutableList.of())"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "0095d1d5839085cb2d299a0956a22e7b2958688f", "fixCommitParentSHA1": "84be87ec8b76a97d617f5d72094dc9aaca8621e8", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/operator/MultiChannelGroupByHash.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/MultiChannelGroupByHash.java b/presto-main/src/main/java/com/facebook/presto/operator/MultiChannelGroupByHash.java\nindex 8986038..26f257c 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/MultiChannelGroupByHash.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/MultiChannelGroupByHash.java\n@@ -632,7 +632,7 @@\n         public boolean process()\n         {\n             int positionCount = page.getPositionCount();\n-            checkState(lastPosition < positionCount, \"position count out of bound\");\n+            checkState(lastPosition <= positionCount, \"position count out of bound\");\n             checkState(!finished);\n \n             // needRehash() == false indicates we have reached capacity boundary and a rehash is needed.\n", "projectName": "facebook.presto", "bugLineNum": 635, "bugNodeStartChar": 24079, "bugNodeLength": 28, "fixLineNum": 635, "fixNodeStartChar": 24079, "fixNodeLength": 29, "sourceBeforeFix": "lastPosition < positionCount", "sourceAfterFix": "lastPosition <= positionCount"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "96d28a7ac975cd67a0697d7010e89473bb0716e1", "fixCommitParentSHA1": "6c08d90042e8c018c52f16e2272b1e7dbb3fad89", "bugFilePath": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "fixPatch": "diff --git a/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java b/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java\nindex d74374d..03ba598 100644\n--- a/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java\n+++ b/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java\n@@ -226,7 +226,7 @@\n         // Write huge chunks direct to OutputStream\n         if (length >= DIRECT_FLUSH_SIZE) {\n             flushBufferToOutputStream();\n-            writeDirectlyToOutputStream((byte[]) source.getBase(), sourceIndex + (int) (slice.getAddress() - ARRAY_BYTE_BASE_OFFSET), length);\n+            writeDirectlyToOutputStream((byte[]) source.getBase(), sourceIndex + (int) (source.getAddress() - ARRAY_BYTE_BASE_OFFSET), length);\n             bufferOffset += length;\n         }\n         else {\n", "projectName": "facebook.presto", "bugLineNum": 229, "bugNodeStartChar": 6691, "bugNodeLength": 18, "fixLineNum": 229, "fixNodeStartChar": 6691, "fixNodeLength": 19, "sourceBeforeFix": "slice.getAddress()", "sourceAfterFix": "source.getAddress()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "96d28a7ac975cd67a0697d7010e89473bb0716e1", "fixCommitParentSHA1": "6c08d90042e8c018c52f16e2272b1e7dbb3fad89", "bugFilePath": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "fixPatch": "diff --git a/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java b/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java\nindex d74374d..03ba598 100644\n--- a/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java\n+++ b/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java\n@@ -226,7 +226,7 @@\n         // Write huge chunks direct to OutputStream\n         if (length >= DIRECT_FLUSH_SIZE) {\n             flushBufferToOutputStream();\n-            writeDirectlyToOutputStream((byte[]) source.getBase(), sourceIndex + (int) (slice.getAddress() - ARRAY_BYTE_BASE_OFFSET), length);\n+            writeDirectlyToOutputStream((byte[]) source.getBase(), sourceIndex + (int) (source.getAddress() - ARRAY_BYTE_BASE_OFFSET), length);\n             bufferOffset += length;\n         }\n         else {\n", "projectName": "facebook.presto", "bugLineNum": 229, "bugNodeStartChar": 6691, "bugNodeLength": 18, "fixLineNum": 229, "fixNodeStartChar": 6691, "fixNodeLength": 19, "sourceBeforeFix": "slice.getAddress()", "sourceAfterFix": "source.getAddress()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "998d200618f6c6699f8bacd059ffda7c54f4d39e", "fixCommitParentSHA1": "5bcc5b810895eb0463cd285f1689212b6ace7ba4", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/PreconditionRules.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/PreconditionRules.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/PreconditionRules.java\nindex b6f68a1..fb7a052 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/PreconditionRules.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/PreconditionRules.java\n@@ -28,10 +28,10 @@\n \n     public static Rule<ExchangeNode> checkRulesAreFiredBeforeAddExchangesRule()\n     {\n-        return checkPlanDoNotMatch(exchange(), \"Expected rules to be fired before 'AddExchanges' optimizer\");\n+        return checkNoPlanNodeMatches(exchange(), \"Expected rules to be fired before 'AddExchanges' optimizer\");\n     }\n \n-    public static <T extends PlanNode> Rule<T> checkPlanDoNotMatch(Pattern<T> pattern, String message)\n+    private static <T extends PlanNode> Rule<T> checkNoPlanNodeMatches(Pattern<T> pattern, String message)\n     {\n         return new CheckNoPlanNodeMatchesRule<>(pattern, message);\n     }\n", "projectName": "facebook.presto", "bugLineNum": 31, "bugNodeStartChar": 1173, "bugNodeLength": 93, "fixLineNum": 31, "fixNodeStartChar": 1173, "fixNodeLength": 96, "sourceBeforeFix": "checkPlanDoNotMatch(exchange(),\"Expected rules to be fired before 'AddExchanges' optimizer\")", "sourceAfterFix": "checkNoPlanNodeMatches(exchange(),\"Expected rules to be fired before 'AddExchanges' optimizer\")"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "998d200618f6c6699f8bacd059ffda7c54f4d39e", "fixCommitParentSHA1": "5bcc5b810895eb0463cd285f1689212b6ace7ba4", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/PreconditionRules.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/PreconditionRules.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/PreconditionRules.java\nindex b6f68a1..fb7a052 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/PreconditionRules.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/PreconditionRules.java\n@@ -28,10 +28,10 @@\n \n     public static Rule<ExchangeNode> checkRulesAreFiredBeforeAddExchangesRule()\n     {\n-        return checkPlanDoNotMatch(exchange(), \"Expected rules to be fired before 'AddExchanges' optimizer\");\n+        return checkNoPlanNodeMatches(exchange(), \"Expected rules to be fired before 'AddExchanges' optimizer\");\n     }\n \n-    public static <T extends PlanNode> Rule<T> checkPlanDoNotMatch(Pattern<T> pattern, String message)\n+    private static <T extends PlanNode> Rule<T> checkNoPlanNodeMatches(Pattern<T> pattern, String message)\n     {\n         return new CheckNoPlanNodeMatchesRule<>(pattern, message);\n     }\n", "projectName": "facebook.presto", "bugLineNum": 31, "bugNodeStartChar": 1173, "bugNodeLength": 93, "fixLineNum": 31, "fixNodeStartChar": 1173, "fixNodeLength": 96, "sourceBeforeFix": "checkPlanDoNotMatch(exchange(),\"Expected rules to be fired before 'AddExchanges' optimizer\")", "sourceAfterFix": "checkNoPlanNodeMatches(exchange(),\"Expected rules to be fired before 'AddExchanges' optimizer\")"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "e2ecd6fd07c9c2bb437463cca31a7f18e525675f", "fixCommitParentSHA1": "1ae191089bb87bc60c5e1402441b1e9fa416bee9", "bugFilePath": "presto-spi/src/main/java/com/facebook/presto/spi/block/AbstractSingleArrayBlock.java", "fixPatch": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/block/AbstractSingleArrayBlock.java b/presto-spi/src/main/java/com/facebook/presto/spi/block/AbstractSingleArrayBlock.java\nindex 2c15685..69351eb 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/block/AbstractSingleArrayBlock.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/block/AbstractSingleArrayBlock.java\n@@ -25,7 +25,7 @@\n         this.start = start;\n     }\n \n-    protected abstract BlockBuilder getBlock();\n+    protected abstract Block getBlock();\n \n     private void checkReadablePosition(int position)\n     {\n", "projectName": "facebook.presto", "bugLineNum": 28, "bugNodeStartChar": 835, "bugNodeLength": 43, "fixLineNum": 28, "fixNodeStartChar": 835, "fixNodeLength": 36, "sourceBeforeFix": "protected abstract BlockBuilder getBlock(); ", "sourceAfterFix": "protected abstract Block getBlock(); "}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "e2ecd6fd07c9c2bb437463cca31a7f18e525675f", "fixCommitParentSHA1": "1ae191089bb87bc60c5e1402441b1e9fa416bee9", "bugFilePath": "presto-spi/src/main/java/com/facebook/presto/spi/block/SingleArrayBlockWriter.java", "fixPatch": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/block/SingleArrayBlockWriter.java b/presto-spi/src/main/java/com/facebook/presto/spi/block/SingleArrayBlockWriter.java\nindex e3a9fa6..ad1f9ef 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/block/SingleArrayBlockWriter.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/block/SingleArrayBlockWriter.java\n@@ -36,7 +36,7 @@\n     }\n \n     @Override\n-    protected BlockBuilder getBlock()\n+    protected Block getBlock()\n     {\n         return blockBuilder;\n     }\n", "projectName": "facebook.presto", "bugLineNum": 38, "bugNodeStartChar": 1291, "bugNodeLength": 88, "fixLineNum": 38, "fixNodeStartChar": 1291, "fixNodeLength": 81, "sourceBeforeFix": "@Override protected BlockBuilder getBlock(){   return blockBuilder; } ", "sourceAfterFix": "@Override protected Block getBlock(){   return blockBuilder; } "}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "b19495efb6fc2f8d656141a46ff61bea8a5731b3", "fixCommitParentSHA1": "80a19d640cfe6505889a612f6ee9e5780fbd0c0d", "bugFilePath": "presto-product-tests/src/main/java/com/facebook/presto/tests/jdbc/LdapSimbaJdbcTests.java", "fixPatch": "diff --git a/presto-product-tests/src/main/java/com/facebook/presto/tests/jdbc/LdapSimbaJdbcTests.java b/presto-product-tests/src/main/java/com/facebook/presto/tests/jdbc/LdapSimbaJdbcTests.java\nindex 22057c8..a520c9f 100644\n--- a/presto-product-tests/src/main/java/com/facebook/presto/tests/jdbc/LdapSimbaJdbcTests.java\n+++ b/presto-product-tests/src/main/java/com/facebook/presto/tests/jdbc/LdapSimbaJdbcTests.java\n@@ -45,7 +45,7 @@\n     private static final String MALFORMED_CREDENTIALS_ERROR =\n             \"[Teradata][Presto](100240) Authentication failed: Malformed decoded credentials.\";\n     private static final String UNAUTHORIZED_USER_ERROR =\n-            \"[Teradata][Presto](100240) Authentication failed: Unknown reason.\";\n+            \"[Teradata][Presto](100240) Authentication failed: Unauthorized user.\";\n     private static final String INVALID_SSL_PROPERTY =\n             \"[Teradata][Presto](100200) Connection string is invalid: SSL value is not valid for given AuthenticationType.\";\n \n@@ -138,7 +138,7 @@\n     @Test(groups = {LDAP, SIMBA_JDBC, PROFILE_SPECIFIC_TESTS}, timeOut = TIMEOUT)\n     public void shouldFailForUserWithColon()\n     {\n-        expectQueryToFail(\"UserWith:Colon\", ldapUserPassword, INVALID_CREDENTIALS_ERROR);\n+        expectQueryToFail(\"UserWith:Colon\", ldapUserPassword, MALFORMED_CREDENTIALS_ERROR);\n     }\n \n     private void expectQueryToFailForUserNotInGroup(String user)\n", "projectName": "facebook.presto", "bugLineNum": 141, "bugNodeStartChar": 6021, "bugNodeLength": 80, "fixLineNum": 141, "fixNodeStartChar": 6021, "fixNodeLength": 82, "sourceBeforeFix": "expectQueryToFail(\"UserWith:Colon\",ldapUserPassword,INVALID_CREDENTIALS_ERROR)", "sourceAfterFix": "expectQueryToFail(\"UserWith:Colon\",ldapUserPassword,MALFORMED_CREDENTIALS_ERROR)"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "f0878162c7c12ed87b0d7953632811442af36dc3", "fixCommitParentSHA1": "8088788aa438689d2b662f31905993dfc6a593a0", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/operator/scalar/SequenceFunction.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/scalar/SequenceFunction.java b/presto-main/src/main/java/com/facebook/presto/operator/scalar/SequenceFunction.java\nindex 1009fdd..125d09d 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/scalar/SequenceFunction.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/scalar/SequenceFunction.java\n@@ -157,9 +157,9 @@\n                 INVALID_FUNCTION_ARGUMENT,\n                 \"step must not be zero\");\n         checkCondition(\n-                step > 0 ? stop >= start : stop < start,\n+                step > 0 ? stop >= start : stop <= start,\n                 INVALID_FUNCTION_ARGUMENT,\n-                \"sequence stop value should be greater than or equal to start value if step is greater than zero otherwise stop should be less than start\");\n+                \"sequence stop value should be greater than or equal to start value if step is greater than zero otherwise stop should be less than or equal to start\");\n     }\n \n     private static void checkMaxEntry(int length)\n", "projectName": "facebook.presto", "bugLineNum": 160, "bugNodeStartChar": 6158, "bugNodeLength": 12, "fixLineNum": 160, "fixNodeStartChar": 6158, "fixNodeLength": 13, "sourceBeforeFix": "stop < start", "sourceAfterFix": "stop <= start"}, {"bugType": "OVERLOAD_METHOD_DELETED_ARGS", "fixCommitSHA1": "165540532a351f8c2c249f0aad2b1827441aa46e", "fixCommitParentSHA1": "f4a644df54da667a2052e6a57d5ce552ed2e48af", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/operator/aggregation/TestStateCompiler.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/operator/aggregation/TestStateCompiler.java b/presto-main/src/test/java/com/facebook/presto/operator/aggregation/TestStateCompiler.java\nindex 0f1b40d..1630216 100644\n--- a/presto-main/src/test/java/com/facebook/presto/operator/aggregation/TestStateCompiler.java\n+++ b/presto-main/src/test/java/com/facebook/presto/operator/aggregation/TestStateCompiler.java\n@@ -255,7 +255,7 @@\n                 field.setAccessible(true);\n                 if (type == BlockBigArray.class || type == BooleanBigArray.class || type == SliceBigArray.class ||\n                         type == ByteBigArray.class || type == DoubleBigArray.class || type == LongBigArray.class || type == IntBigArray.class) {\n-                    MethodHandle sizeOf = Reflection.methodHandle(type, \"sizeOf\", null);\n+                    MethodHandle sizeOf = Reflection.methodHandle(type, \"sizeOf\");\n                     retainedSize += (long) sizeOf.invokeWithArguments(field.get(state));\n                 }\n             }\n@@ -283,7 +283,7 @@\n                         continue;\n                     }\n                     bigArrayField.setAccessible(true);\n-                    MethodHandle sizeOf = Reflection.methodHandle(bigArrayField.getType(), \"sizeOf\", null);\n+                    MethodHandle sizeOf = Reflection.methodHandle(bigArrayField.getType(), \"sizeOf\");\n                     overhead += (long) sizeOf.invokeWithArguments(bigArrayField.get(stateField.get(state)));\n                 }\n             }\n", "projectName": "facebook.presto", "bugLineNum": 258, "bugNodeStartChar": 12505, "bugNodeLength": 45, "fixLineNum": 258, "fixNodeStartChar": 12505, "fixNodeLength": 39, "sourceBeforeFix": "Reflection.methodHandle(type,\"sizeOf\",null)", "sourceAfterFix": "Reflection.methodHandle(type,\"sizeOf\")"}, {"bugType": "OVERLOAD_METHOD_DELETED_ARGS", "fixCommitSHA1": "165540532a351f8c2c249f0aad2b1827441aa46e", "fixCommitParentSHA1": "f4a644df54da667a2052e6a57d5ce552ed2e48af", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/operator/aggregation/TestStateCompiler.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/operator/aggregation/TestStateCompiler.java b/presto-main/src/test/java/com/facebook/presto/operator/aggregation/TestStateCompiler.java\nindex 0f1b40d..1630216 100644\n--- a/presto-main/src/test/java/com/facebook/presto/operator/aggregation/TestStateCompiler.java\n+++ b/presto-main/src/test/java/com/facebook/presto/operator/aggregation/TestStateCompiler.java\n@@ -255,7 +255,7 @@\n                 field.setAccessible(true);\n                 if (type == BlockBigArray.class || type == BooleanBigArray.class || type == SliceBigArray.class ||\n                         type == ByteBigArray.class || type == DoubleBigArray.class || type == LongBigArray.class || type == IntBigArray.class) {\n-                    MethodHandle sizeOf = Reflection.methodHandle(type, \"sizeOf\", null);\n+                    MethodHandle sizeOf = Reflection.methodHandle(type, \"sizeOf\");\n                     retainedSize += (long) sizeOf.invokeWithArguments(field.get(state));\n                 }\n             }\n@@ -283,7 +283,7 @@\n                         continue;\n                     }\n                     bigArrayField.setAccessible(true);\n-                    MethodHandle sizeOf = Reflection.methodHandle(bigArrayField.getType(), \"sizeOf\", null);\n+                    MethodHandle sizeOf = Reflection.methodHandle(bigArrayField.getType(), \"sizeOf\");\n                     overhead += (long) sizeOf.invokeWithArguments(bigArrayField.get(stateField.get(state)));\n                 }\n             }\n", "projectName": "facebook.presto", "bugLineNum": 286, "bugNodeStartChar": 13718, "bugNodeLength": 64, "fixLineNum": 286, "fixNodeStartChar": 13718, "fixNodeLength": 58, "sourceBeforeFix": "Reflection.methodHandle(bigArrayField.getType(),\"sizeOf\",null)", "sourceAfterFix": "Reflection.methodHandle(bigArrayField.getType(),\"sizeOf\")"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "c81c6ad44ba6bd2ff42c9fe7d336b863f3574405", "fixCommitParentSHA1": "b08ec028c6ecca511b734e2f0fc8a62edc1d2bfb", "bugFilePath": "presto-spi/src/main/java/com/facebook/presto/spi/memory/MemoryPoolInfo.java", "fixPatch": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/memory/MemoryPoolInfo.java b/presto-spi/src/main/java/com/facebook/presto/spi/memory/MemoryPoolInfo.java\nindex da4e2e2..346d003 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/memory/MemoryPoolInfo.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/memory/MemoryPoolInfo.java\n@@ -43,7 +43,7 @@\n         this.reservedBytes = reservedBytes;\n         this.reservedRevocableBytes = reservedRevocableBytes;\n         this.queryMemoryReservations = unmodifiableMap(new HashMap<>(queryMemoryReservations));\n-        this.queryMemoryRevocableReservations = unmodifiableMap(new HashMap<>(queryMemoryReservations));\n+        this.queryMemoryRevocableReservations = unmodifiableMap(new HashMap<>(queryMemoryRevocableReservations));\n     }\n \n     @JsonProperty\n", "projectName": "facebook.presto", "bugLineNum": 46, "bugNodeStartChar": 1940, "bugNodeLength": 38, "fixLineNum": 46, "fixNodeStartChar": 1940, "fixNodeLength": 47, "sourceBeforeFix": "new HashMap<>(queryMemoryReservations)", "sourceAfterFix": "new HashMap<>(queryMemoryRevocableReservations)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "a7fa6dab83a23d885554eff6786e3eee69fb795a", "fixCommitParentSHA1": "4ce94e057436c1eb4d888a6e164ca7392307c755", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/testing/MaterializedResult.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/testing/MaterializedResult.java b/presto-main/src/main/java/com/facebook/presto/testing/MaterializedResult.java\nindex d40c6b9..6c24d39 100644\n--- a/presto-main/src/main/java/com/facebook/presto/testing/MaterializedResult.java\n+++ b/presto-main/src/main/java/com/facebook/presto/testing/MaterializedResult.java\n@@ -189,11 +189,11 @@\n                 .toString();\n     }\n \n-    public Set<String> getOnlyColumnAsSet()\n+    public Set<Object> getOnlyColumnAsSet()\n     {\n         checkState(types.size() == 1, \"result set must have exactly one column\");\n         return rows.stream()\n-                .map(row -> (String) row.getField(0))\n+                .map(row -> row.getField(0))\n                 .collect(toImmutableSet());\n     }\n \n", "projectName": "facebook.presto", "bugLineNum": 192, "bugNodeStartChar": 7144, "bugNodeLength": 11, "fixLineNum": 192, "fixNodeStartChar": 7144, "fixNodeLength": 11, "sourceBeforeFix": "Set<String>", "sourceAfterFix": "Set<Object>"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "4eb2512dfb649d34c29b7ae62214b2c354ee1a8e", "fixCommitParentSHA1": "be3e0767ced067d5b72398dfb468da56458dec2a", "bugFilePath": "presto-bytecode/src/main/java/com/facebook/presto/bytecode/instruction/InvokeInstruction.java", "fixPatch": "diff --git a/presto-bytecode/src/main/java/com/facebook/presto/bytecode/instruction/InvokeInstruction.java b/presto-bytecode/src/main/java/com/facebook/presto/bytecode/instruction/InvokeInstruction.java\nindex f1e05be..8c499ee 100644\n--- a/presto-bytecode/src/main/java/com/facebook/presto/bytecode/instruction/InvokeInstruction.java\n+++ b/presto-bytecode/src/main/java/com/facebook/presto/bytecode/instruction/InvokeInstruction.java\n@@ -357,7 +357,7 @@\n     @Override\n     public void accept(MethodVisitor visitor, MethodGenerationContext generationContext)\n     {\n-        visitor.visitMethodInsn(opCode.getOpCode(), target.getClassName(), name, getMethodDescription());\n+        visitor.visitMethodInsn(opCode.getOpCode(), target.getClassName(), name, getMethodDescription(), target.isInterface());\n     }\n \n     @Override\n", "projectName": "facebook.presto", "bugLineNum": 360, "bugNodeStartChar": 12879, "bugNodeLength": 96, "fixLineNum": 360, "fixNodeStartChar": 12879, "fixNodeLength": 118, "sourceBeforeFix": "visitor.visitMethodInsn(opCode.getOpCode(),target.getClassName(),name,getMethodDescription())", "sourceAfterFix": "visitor.visitMethodInsn(opCode.getOpCode(),target.getClassName(),name,getMethodDescription(),target.isInterface())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "a77c7ff49e8091a4e40951212b0f04d786adf8e9", "fixCommitParentSHA1": "a0f257c6f3af830af1d42e1c118c1b01a701405a", "bugFilePath": "presto-base-jdbc/src/main/java/com/facebook/presto/plugin/jdbc/BaseJdbcClient.java", "fixPatch": "diff --git a/presto-base-jdbc/src/main/java/com/facebook/presto/plugin/jdbc/BaseJdbcClient.java b/presto-base-jdbc/src/main/java/com/facebook/presto/plugin/jdbc/BaseJdbcClient.java\nindex 386a05a..ae26299 100644\n--- a/presto-base-jdbc/src/main/java/com/facebook/presto/plugin/jdbc/BaseJdbcClient.java\n+++ b/presto-base-jdbc/src/main/java/com/facebook/presto/plugin/jdbc/BaseJdbcClient.java\n@@ -527,7 +527,7 @@\n             if (((VarcharType) type).isUnbounded()) {\n                 return \"varchar\";\n             }\n-            return \"varchar(\" + ((VarcharType) type).getLength() + \")\";\n+            return \"varchar(\" + ((VarcharType) type).getLengthSafe() + \")\";\n         }\n         if (type instanceof CharType) {\n             if (((CharType) type).getLength() == CharType.MAX_LENGTH) {\n", "projectName": "facebook.presto", "bugLineNum": 530, "bugNodeStartChar": 21131, "bugNodeLength": 32, "fixLineNum": 530, "fixNodeStartChar": 21131, "fixNodeLength": 36, "sourceBeforeFix": "((VarcharType)type).getLength()", "sourceAfterFix": "((VarcharType)type).getLengthSafe()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "a77c7ff49e8091a4e40951212b0f04d786adf8e9", "fixCommitParentSHA1": "a0f257c6f3af830af1d42e1c118c1b01a701405a", "bugFilePath": "presto-base-jdbc/src/main/java/com/facebook/presto/plugin/jdbc/BaseJdbcClient.java", "fixPatch": "diff --git a/presto-base-jdbc/src/main/java/com/facebook/presto/plugin/jdbc/BaseJdbcClient.java b/presto-base-jdbc/src/main/java/com/facebook/presto/plugin/jdbc/BaseJdbcClient.java\nindex 386a05a..ae26299 100644\n--- a/presto-base-jdbc/src/main/java/com/facebook/presto/plugin/jdbc/BaseJdbcClient.java\n+++ b/presto-base-jdbc/src/main/java/com/facebook/presto/plugin/jdbc/BaseJdbcClient.java\n@@ -527,7 +527,7 @@\n             if (((VarcharType) type).isUnbounded()) {\n                 return \"varchar\";\n             }\n-            return \"varchar(\" + ((VarcharType) type).getLength() + \")\";\n+            return \"varchar(\" + ((VarcharType) type).getLengthSafe() + \")\";\n         }\n         if (type instanceof CharType) {\n             if (((CharType) type).getLength() == CharType.MAX_LENGTH) {\n", "projectName": "facebook.presto", "bugLineNum": 530, "bugNodeStartChar": 21131, "bugNodeLength": 32, "fixLineNum": 530, "fixNodeStartChar": 21131, "fixNodeLength": 36, "sourceBeforeFix": "((VarcharType)type).getLength()", "sourceAfterFix": "((VarcharType)type).getLengthSafe()"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "7f16b343eb4bdffd477aa5a8fb3c80b9b54e5602", "fixCommitParentSHA1": "54629737d4ed4d1be2e1637ddd1b1ee523b58f69", "bugFilePath": "presto-spi/src/main/java/com/facebook/presto/spi/block/SingleRowBlockWriter.java", "fixPatch": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/block/SingleRowBlockWriter.java b/presto-spi/src/main/java/com/facebook/presto/spi/block/SingleRowBlockWriter.java\nindex 2e7ac15..e397a3e 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/block/SingleRowBlockWriter.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/block/SingleRowBlockWriter.java\n@@ -210,7 +210,7 @@\n             return format(\"RowBlock{SingleRowBlockWriter=%d, fieldBlockBuilderReturned=false, positionCount=%d}\", numFields, getPositionCount());\n         }\n         else {\n-            return format(\"RowBlock{SingleRowBlockWriter=%d, fieldBlockBuilderReturned=true}\");\n+            return format(\"RowBlock{SingleRowBlockWriter=%d, fieldBlockBuilderReturned=true}\", numFields);\n         }\n     }\n \n", "projectName": "facebook.presto", "bugLineNum": 213, "bugNodeStartChar": 6229, "bugNodeLength": 75, "fixLineNum": 213, "fixNodeStartChar": 6229, "fixNodeLength": 86, "sourceBeforeFix": "format(\"RowBlock{SingleRowBlockWriter=%d, fieldBlockBuilderReturned=true}\")", "sourceAfterFix": "format(\"RowBlock{SingleRowBlockWriter=%d, fieldBlockBuilderReturned=true}\",numFields)"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "b16ab7c7615dbf555ee60f5bac09821d1886e136", "fixCommitParentSHA1": "5358a9d6a1190f72fb22fbd753e820aa10066ed2", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/execution/resourceGroups/InternalResourceGroup.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/resourceGroups/InternalResourceGroup.java b/presto-main/src/main/java/com/facebook/presto/execution/resourceGroups/InternalResourceGroup.java\nindex f285fc7..df70212 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/resourceGroups/InternalResourceGroup.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/resourceGroups/InternalResourceGroup.java\n@@ -837,7 +837,7 @@\n                 maxRunning = Math.max(1, maxRunning);\n             }\n             return runningQueries.size() + descendantRunningQueries < maxRunning &&\n-                    cachedMemoryUsageBytes < softMemoryLimitBytes;\n+                    cachedMemoryUsageBytes <= softMemoryLimitBytes;\n         }\n     }\n \n", "projectName": "facebook.presto", "bugLineNum": 840, "bugNodeStartChar": 30715, "bugNodeLength": 45, "fixLineNum": 840, "fixNodeStartChar": 30715, "fixNodeLength": 46, "sourceBeforeFix": "cachedMemoryUsageBytes < softMemoryLimitBytes", "sourceAfterFix": "cachedMemoryUsageBytes <= softMemoryLimitBytes"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "b16ab7c7615dbf555ee60f5bac09821d1886e136", "fixCommitParentSHA1": "5358a9d6a1190f72fb22fbd753e820aa10066ed2", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/execution/resourceGroups/TestResourceGroups.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/execution/resourceGroups/TestResourceGroups.java b/presto-main/src/test/java/com/facebook/presto/execution/resourceGroups/TestResourceGroups.java\nindex cbf9437..1cc024e 100644\n--- a/presto-main/src/test/java/com/facebook/presto/execution/resourceGroups/TestResourceGroups.java\n+++ b/presto-main/src/test/java/com/facebook/presto/execution/resourceGroups/TestResourceGroups.java\n@@ -177,7 +177,7 @@\n         root.setSoftMemoryLimit(new DataSize(1, BYTE));\n         root.setMaxQueuedQueries(4);\n         root.setMaxRunningQueries(3);\n-        MockQueryExecution query1 = new MockQueryExecution(1);\n+        MockQueryExecution query1 = new MockQueryExecution(2);\n         root.run(query1);\n         // Process the group to refresh stats\n         root.processQueuedQueries();\n@@ -207,7 +207,7 @@\n         subgroup.setMaxQueuedQueries(4);\n         subgroup.setMaxRunningQueries(3);\n \n-        MockQueryExecution query1 = new MockQueryExecution(1);\n+        MockQueryExecution query1 = new MockQueryExecution(2);\n         subgroup.run(query1);\n         // Process the group to refresh stats\n         root.processQueuedQueries();\n", "projectName": "facebook.presto", "bugLineNum": 180, "bugNodeStartChar": 8060, "bugNodeLength": 25, "fixLineNum": 180, "fixNodeStartChar": 8060, "fixNodeLength": 25, "sourceBeforeFix": "new MockQueryExecution(1)", "sourceAfterFix": "new MockQueryExecution(2)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "b16ab7c7615dbf555ee60f5bac09821d1886e136", "fixCommitParentSHA1": "5358a9d6a1190f72fb22fbd753e820aa10066ed2", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/execution/resourceGroups/TestResourceGroups.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/execution/resourceGroups/TestResourceGroups.java b/presto-main/src/test/java/com/facebook/presto/execution/resourceGroups/TestResourceGroups.java\nindex cbf9437..1cc024e 100644\n--- a/presto-main/src/test/java/com/facebook/presto/execution/resourceGroups/TestResourceGroups.java\n+++ b/presto-main/src/test/java/com/facebook/presto/execution/resourceGroups/TestResourceGroups.java\n@@ -177,7 +177,7 @@\n         root.setSoftMemoryLimit(new DataSize(1, BYTE));\n         root.setMaxQueuedQueries(4);\n         root.setMaxRunningQueries(3);\n-        MockQueryExecution query1 = new MockQueryExecution(1);\n+        MockQueryExecution query1 = new MockQueryExecution(2);\n         root.run(query1);\n         // Process the group to refresh stats\n         root.processQueuedQueries();\n@@ -207,7 +207,7 @@\n         subgroup.setMaxQueuedQueries(4);\n         subgroup.setMaxRunningQueries(3);\n \n-        MockQueryExecution query1 = new MockQueryExecution(1);\n+        MockQueryExecution query1 = new MockQueryExecution(2);\n         subgroup.run(query1);\n         // Process the group to refresh stats\n         root.processQueuedQueries();\n", "projectName": "facebook.presto", "bugLineNum": 210, "bugNodeStartChar": 9264, "bugNodeLength": 25, "fixLineNum": 210, "fixNodeStartChar": 9264, "fixNodeLength": 25, "sourceBeforeFix": "new MockQueryExecution(1)", "sourceAfterFix": "new MockQueryExecution(2)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "e4d57393934db18a4b8161de6a27edc57d51e4ce", "fixCommitParentSHA1": "09fe07a21a12867897a51c0dfd378aeee4c665c7", "bugFilePath": "presto-raptor/src/test/java/com/facebook/presto/raptor/metadata/TestShardCleaner.java", "fixPatch": "diff --git a/presto-raptor/src/test/java/com/facebook/presto/raptor/metadata/TestShardCleaner.java b/presto-raptor/src/test/java/com/facebook/presto/raptor/metadata/TestShardCleaner.java\nindex 20e6849..608b3e6 100644\n--- a/presto-raptor/src/test/java/com/facebook/presto/raptor/metadata/TestShardCleaner.java\n+++ b/presto-raptor/src/test/java/com/facebook/presto/raptor/metadata/TestShardCleaner.java\n@@ -207,7 +207,7 @@\n         Set<UUID> shards = ImmutableSet.of(shard1, shard2, shard3);\n \n         for (UUID shard : shards) {\n-            shardDao.insertShard(shard, tableId, null, 0, 0, 0);\n+            shardDao.insertShard(shard, tableId, null, 0, 0, 0, 0);\n             createShardFile(shard);\n             assertTrue(shardFileExists(shard));\n         }\n", "projectName": "facebook.presto", "bugLineNum": 210, "bugNodeStartChar": 7372, "bugNodeLength": 51, "fixLineNum": 210, "fixNodeStartChar": 7372, "fixNodeLength": 54, "sourceBeforeFix": "shardDao.insertShard(shard,tableId,null,0,0,0)", "sourceAfterFix": "shardDao.insertShard(shard,tableId,null,0,0,0,0)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "83a71882f9aaea06c482d5efb4fbaa5c3c39b079", "fixCommitParentSHA1": "eb69cdc8c81763d8f6aaba3d6aa1cdadd1b77fe7", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/event/query/QueryMonitor.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/event/query/QueryMonitor.java b/presto-main/src/main/java/com/facebook/presto/event/query/QueryMonitor.java\nindex f8ab18c..5bdd4d5 100644\n--- a/presto-main/src/main/java/com/facebook/presto/event/query/QueryMonitor.java\n+++ b/presto-main/src/main/java/com/facebook/presto/event/query/QueryMonitor.java\n@@ -153,7 +153,7 @@\n                         input.getSchema(),\n                         input.getTable(),\n                         input.getColumns().stream()\n-                                .map(Column::toString).collect(Collectors.toList()),\n+                                .map(Column::getName).collect(Collectors.toList()),\n                         input.getConnectorInfo()));\n             }\n \n", "projectName": "facebook.presto", "bugLineNum": 156, "bugNodeStartChar": 7428, "bugNodeLength": 16, "fixLineNum": 156, "fixNodeStartChar": 7428, "fixNodeLength": 15, "sourceBeforeFix": "Column::toString", "sourceAfterFix": "Column::getName"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "4f6aa5813bb02b22ec197af3f4b9cb3bb24964c7", "fixCommitParentSHA1": "54aa42128eb0137b808a8cf97ac806a4ec8fe479", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/memory/LocalMemoryManager.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/memory/LocalMemoryManager.java b/presto-main/src/main/java/com/facebook/presto/memory/LocalMemoryManager.java\nindex 8a82a1d..0011eca 100644\n--- a/presto-main/src/main/java/com/facebook/presto/memory/LocalMemoryManager.java\n+++ b/presto-main/src/main/java/com/facebook/presto/memory/LocalMemoryManager.java\n@@ -49,7 +49,7 @@\n         maxMemory = new DataSize(maxHeap - systemMemoryConfig.getReservedSystemMemory().toBytes(), BYTE);\n \n         ImmutableMap.Builder<MemoryPoolId, MemoryPool> builder = ImmutableMap.builder();\n-        checkArgument(config.getMaxQueryMemoryPerNode().toBytes() < maxMemory.toBytes(), format(\"%s set to %s, but only %s of useable heap available\", QUERY_MAX_MEMORY_PER_NODE_CONFIG, config.getMaxQueryMemoryPerNode(), maxMemory));\n+        checkArgument(config.getMaxQueryMemoryPerNode().toBytes() <= maxMemory.toBytes(), format(\"%s set to %s, but only %s of useable heap available\", QUERY_MAX_MEMORY_PER_NODE_CONFIG, config.getMaxQueryMemoryPerNode(), maxMemory));\n         builder.put(RESERVED_POOL, new MemoryPool(RESERVED_POOL, config.getMaxQueryMemoryPerNode()));\n         DataSize generalPoolSize = new DataSize(Math.max(0, maxMemory.toBytes() - config.getMaxQueryMemoryPerNode().toBytes()), BYTE);\n         builder.put(GENERAL_POOL, new MemoryPool(GENERAL_POOL, generalPoolSize));\n", "projectName": "facebook.presto", "bugLineNum": 52, "bugNodeStartChar": 2324, "bugNodeLength": 65, "fixLineNum": 52, "fixNodeStartChar": 2324, "fixNodeLength": 66, "sourceBeforeFix": "config.getMaxQueryMemoryPerNode().toBytes() < maxMemory.toBytes()", "sourceAfterFix": "config.getMaxQueryMemoryPerNode().toBytes() <= maxMemory.toBytes()"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "fbc26e589318e29e5971fe526c114cb66e2fea5f", "fixCommitParentSHA1": "f4b969328cb5d47fc00f856c123363bc061afe33", "bugFilePath": "presto-parser/src/main/java/com/facebook/presto/sql/tree/Unnest.java", "fixPatch": "diff --git a/presto-parser/src/main/java/com/facebook/presto/sql/tree/Unnest.java b/presto-parser/src/main/java/com/facebook/presto/sql/tree/Unnest.java\nindex cfa4598..a689af9 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/tree/Unnest.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/tree/Unnest.java\n@@ -80,7 +80,7 @@\n     @Override\n     public int hashCode()\n     {\n-        return Objects.hash(expressions);\n+        return Objects.hash(expressions, withOrdinality);\n     }\n \n     @Override\n@@ -93,6 +93,6 @@\n             return false;\n         }\n         Unnest other = (Unnest) obj;\n-        return Objects.equals(this.expressions, other.expressions);\n+        return Objects.equals(expressions, other.expressions) && withOrdinality == other.withOrdinality;\n     }\n }\n", "projectName": "facebook.presto", "bugLineNum": 83, "bugNodeStartChar": 2314, "bugNodeLength": 25, "fixLineNum": 83, "fixNodeStartChar": 2314, "fixNodeLength": 41, "sourceBeforeFix": "Objects.hash(expressions)", "sourceAfterFix": "Objects.hash(expressions,withOrdinality)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "fbc26e589318e29e5971fe526c114cb66e2fea5f", "fixCommitParentSHA1": "f4b969328cb5d47fc00f856c123363bc061afe33", "bugFilePath": "presto-parser/src/test/java/com/facebook/presto/sql/parser/TestSqlParser.java", "fixPatch": "diff --git a/presto-parser/src/test/java/com/facebook/presto/sql/parser/TestSqlParser.java b/presto-parser/src/test/java/com/facebook/presto/sql/parser/TestSqlParser.java\nindex 499e6ab..3bf8198 100644\n--- a/presto-parser/src/test/java/com/facebook/presto/sql/parser/TestSqlParser.java\n+++ b/presto-parser/src/test/java/com/facebook/presto/sql/parser/TestSqlParser.java\n@@ -1738,21 +1738,21 @@\n                                 new Table(QualifiedName.of(\"t\")),\n                                 new Unnest(ImmutableList.of(new Identifier(\"a\")), false),\n                                 Optional.empty())));\n-        assertStatement(\"SELECT * FROM t CROSS JOIN UNNEST(a) WITH ORDINALITY\",\n+        assertStatement(\"SELECT * FROM t CROSS JOIN UNNEST(a, b) WITH ORDINALITY\",\n                 simpleQuery(\n                         selectList(new AllColumns()),\n                         new Join(\n                                 Join.Type.CROSS,\n                                 new Table(QualifiedName.of(\"t\")),\n-                                new Unnest(ImmutableList.of(new Identifier(\"a\")), true),\n+                                new Unnest(ImmutableList.of(new Identifier(\"a\"), new Identifier(\"b\")), true),\n                                 Optional.empty())));\n-        assertStatement(\"SELECT * FROM t FULL JOIN UNNEST(a) ON true\",\n+        assertStatement(\"SELECT * FROM t FULL JOIN UNNEST(a) AS tmp (c) ON true\",\n                 simpleQuery(\n                         selectList(new AllColumns()),\n                         new Join(\n                                 Join.Type.FULL,\n                                 new Table(QualifiedName.of(\"t\")),\n-                                new Unnest(ImmutableList.of(new Identifier(\"a\")), true),\n+                                new AliasedRelation(new Unnest(ImmutableList.of(new Identifier(\"a\")), false), new Identifier(\"tmp\"), ImmutableList.of(new Identifier(\"c\"))),\n                                 Optional.of(new JoinOn(BooleanLiteral.TRUE_LITERAL)))));\n     }\n \n", "projectName": "facebook.presto", "bugLineNum": 1747, "bugNodeStartChar": 87732, "bugNodeLength": 37, "fixLineNum": 1747, "fixNodeStartChar": 87732, "fixNodeLength": 58, "sourceBeforeFix": "ImmutableList.of(new Identifier(\"a\"))", "sourceAfterFix": "ImmutableList.of(new Identifier(\"a\"),new Identifier(\"b\"))"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "d79d8da2ff4ed76577133e5d0da796d9e2642e40", "fixCommitParentSHA1": "1bd2e8f66a021e780d418d225dd1617cb13c3cba", "bugFilePath": "presto-spi/src/main/java/com/facebook/presto/spi/block/ArrayBlock.java", "fixPatch": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/block/ArrayBlock.java b/presto-spi/src/main/java/com/facebook/presto/spi/block/ArrayBlock.java\nindex 6ad6271..8cf3d52 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/block/ArrayBlock.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/block/ArrayBlock.java\n@@ -31,7 +31,7 @@\n     private final Block values;\n     private final int[] offsets;\n \n-    private long sizeInBytes;\n+    private volatile long sizeInBytes;\n     private final long retainedSizeInBytes;\n \n     public ArrayBlock(int positionCount, boolean[] valueIsNull, int[] offsets, Block values)\n@@ -78,7 +78,6 @@\n     @Override\n     public long getSizeInBytes()\n     {\n-        // this is racy but is safe because sizeInBytes is an int and the calculation is stable\n         if (sizeInBytes < 0) {\n             calculateSize();\n         }\n", "projectName": "facebook.presto", "bugLineNum": 34, "bugNodeStartChar": 1125, "bugNodeLength": 25, "fixLineNum": 34, "fixNodeStartChar": 1125, "fixNodeLength": 34, "sourceBeforeFix": "2", "sourceAfterFix": "66"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "d79d8da2ff4ed76577133e5d0da796d9e2642e40", "fixCommitParentSHA1": "1bd2e8f66a021e780d418d225dd1617cb13c3cba", "bugFilePath": "presto-spi/src/main/java/com/facebook/presto/spi/block/MapBlock.java", "fixPatch": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/block/MapBlock.java b/presto-spi/src/main/java/com/facebook/presto/spi/block/MapBlock.java\nindex 6457704..4957f6a 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/block/MapBlock.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/block/MapBlock.java\n@@ -41,7 +41,7 @@\n     private final Block valueBlock;\n     private final int[] hashTables; // hash to location in map;\n \n-    private long sizeInBytes;\n+    private volatile long sizeInBytes;\n     private final long retainedSizeInBytes;\n \n     /**\n@@ -125,7 +125,6 @@\n     @Override\n     public long getSizeInBytes()\n     {\n-        // this is racy but is safe because sizeInBytes is an int and the calculation is stable\n         if (sizeInBytes < 0) {\n             calculateSize();\n         }\n", "projectName": "facebook.presto", "bugLineNum": 44, "bugNodeStartChar": 1486, "bugNodeLength": 25, "fixLineNum": 44, "fixNodeStartChar": 1486, "fixNodeLength": 34, "sourceBeforeFix": "2", "sourceAfterFix": "66"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "1568a560348de41adffd9b4a181bcf64b4f01073", "fixCommitParentSHA1": "e9c67a7b808b9feadaef6e6bd60eeb968ae8fcda", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/MergeLimitWithDistinct.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/MergeLimitWithDistinct.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/MergeLimitWithDistinct.java\nindex 3030658..40f39e4 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/MergeLimitWithDistinct.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/MergeLimitWithDistinct.java\n@@ -45,7 +45,7 @@\n \n         AggregationNode child = (AggregationNode) input;\n \n-        if (isDistinct(child)) {\n+        if (!isDistinct(child)) {\n             return Optional.empty();\n         }\n \n@@ -64,8 +64,8 @@\n      */\n     private boolean isDistinct(AggregationNode node)\n     {\n-        return !node.getAggregations().isEmpty() ||\n-                node.getOutputSymbols().size() != node.getGroupingKeys().size() ||\n-                !node.getOutputSymbols().containsAll(node.getGroupingKeys());\n+        return node.getAggregations().isEmpty() &&\n+                node.getOutputSymbols().size() == node.getGroupingKeys().size() &&\n+                node.getOutputSymbols().containsAll(node.getGroupingKeys());\n     }\n }\n", "projectName": "facebook.presto", "bugLineNum": 48, "bugNodeStartChar": 1580, "bugNodeLength": 17, "fixLineNum": 48, "fixNodeStartChar": 1580, "fixNodeLength": 18, "sourceBeforeFix": "isDistinct(child)", "sourceAfterFix": "!isDistinct(child)"}, {"bugType": "OVERLOAD_METHOD_DELETED_ARGS", "fixCommitSHA1": "5266fb18f1b3915144b72d8ba25d49004fa18cb0", "fixCommitParentSHA1": "ec3ddb7d224fd005944951a12888278366bee687", "bugFilePath": "presto-spi/src/main/java/com/facebook/presto/spi/block/SliceArrayBlock.java", "fixPatch": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/block/SliceArrayBlock.java b/presto-spi/src/main/java/com/facebook/presto/spi/block/SliceArrayBlock.java\nindex 913511a..4b17fac 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/block/SliceArrayBlock.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/block/SliceArrayBlock.java\n@@ -225,7 +225,7 @@\n     private static long getSliceArrayRetainedSizeInBytes(Slice[] values)\n     {\n         long sizeInBytes = sizeOf(values);\n-        Map<Object, Boolean> uniqueRetained = new IdentityHashMap<>(values.length);\n+        Map<Object, Boolean> uniqueRetained = new IdentityHashMap<>();\n         for (Slice value : values) {\n             if (value == null) {\n                 continue;\n", "projectName": "facebook.presto", "bugLineNum": 228, "bugNodeStartChar": 7841, "bugNodeLength": 36, "fixLineNum": 228, "fixNodeStartChar": 7841, "fixNodeLength": 23, "sourceBeforeFix": "new IdentityHashMap<>(values.length)", "sourceAfterFix": "new IdentityHashMap<>()"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "8bf441ad65512c05162d67de34c709ecd936dc16", "fixCommitParentSHA1": "7136430395a825999f98ac5264394b8e875c88ab", "bugFilePath": "presto-product-tests/src/main/java/com/facebook/presto/tests/sqlserver/Select.java", "fixPatch": "diff --git a/presto-product-tests/src/main/java/com/facebook/presto/tests/sqlserver/Select.java b/presto-product-tests/src/main/java/com/facebook/presto/tests/sqlserver/Select.java\nindex b2ddd1f..383407a 100644\n--- a/presto-product-tests/src/main/java/com/facebook/presto/tests/sqlserver/Select.java\n+++ b/presto-product-tests/src/main/java/com/facebook/presto/tests/sqlserver/Select.java\n@@ -156,7 +156,7 @@\n                                 Timestamp.valueOf(\"9999-12-31 23:59:59.999\"), Timestamp.valueOf(\"2079-06-06 00:00:00\"),\n                                 Double.valueOf(\"12345678912.3456756\"), Float.valueOf(\"12345678.6557\")\n                         ),\n-                        row(null, null, null, null, null, null, null, null, null, null, null, null, null, null)\n+                        row(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null)\n                 );\n     }\n \n", "projectName": "facebook.presto", "bugLineNum": 159, "bugNodeStartChar": 7132, "bugNodeLength": 87, "fixLineNum": 159, "fixNodeStartChar": 7132, "fixNodeLength": 111, "sourceBeforeFix": "row(null,null,null,null,null,null,null,null,null,null,null,null,null,null)", "sourceAfterFix": "row(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "e7a5ab4073d673afe757f2cb55af27c95b99aa54", "fixCommitParentSHA1": "c6df1f20262e9258db3d01d38f3ea00db4252dde", "bugFilePath": "presto-spi/src/main/java/com/facebook/presto/spi/block/SingleMapBlock.java", "fixPatch": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/block/SingleMapBlock.java b/presto-spi/src/main/java/com/facebook/presto/spi/block/SingleMapBlock.java\nindex 16187c2..d031eae 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/block/SingleMapBlock.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/block/SingleMapBlock.java\n@@ -30,7 +30,7 @@\n public class SingleMapBlock\n         extends AbstractSingleMapBlock\n {\n-    private static final int INSTANCE_SIZE = ClassLayout.parseClass(SingleMapBlockWriter.class).instanceSize();\n+    private static final int INSTANCE_SIZE = ClassLayout.parseClass(SingleMapBlock.class).instanceSize();\n \n     private final int offset;\n     private final int positionCount;\n", "projectName": "facebook.presto", "bugLineNum": 33, "bugNodeStartChar": 1239, "bugNodeLength": 26, "fixLineNum": 33, "fixNodeStartChar": 1239, "fixNodeLength": 20, "sourceBeforeFix": "SingleMapBlockWriter.class", "sourceAfterFix": "SingleMapBlock.class"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "10c93df27435ffbc037cde5e6063c9dbc6c0eb3f", "fixCommitParentSHA1": "c7a5a207a917985a39726fcbc21d8cd5b79e10d8", "bugFilePath": "presto-benchmark-driver/src/main/java/com/facebook/presto/benchmark/driver/BenchmarkDriverOptions.java", "fixPatch": "diff --git a/presto-benchmark-driver/src/main/java/com/facebook/presto/benchmark/driver/BenchmarkDriverOptions.java b/presto-benchmark-driver/src/main/java/com/facebook/presto/benchmark/driver/BenchmarkDriverOptions.java\nindex 0685b71..7e97b21 100644\n--- a/presto-benchmark-driver/src/main/java/com/facebook/presto/benchmark/driver/BenchmarkDriverOptions.java\n+++ b/presto-benchmark-driver/src/main/java/com/facebook/presto/benchmark/driver/BenchmarkDriverOptions.java\n@@ -110,7 +110,7 @@\n \n         HostAndPort host = HostAndPort.fromString(server);\n         try {\n-            return new URI(\"http\", null, host.getHostText(), host.getPortOrDefault(80), null, null, null);\n+            return new URI(\"http\", null, host.getHost(), host.getPortOrDefault(80), null, null, null);\n         }\n         catch (URISyntaxException e) {\n             throw new IllegalArgumentException(e);\n", "projectName": "facebook.presto", "bugLineNum": 113, "bugNodeStartChar": 4506, "bugNodeLength": 18, "fixLineNum": 113, "fixNodeStartChar": 4506, "fixNodeLength": 14, "sourceBeforeFix": "host.getHostText()", "sourceAfterFix": "host.getHost()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "10c93df27435ffbc037cde5e6063c9dbc6c0eb3f", "fixCommitParentSHA1": "c7a5a207a917985a39726fcbc21d8cd5b79e10d8", "bugFilePath": "presto-benchmark-driver/src/main/java/com/facebook/presto/benchmark/driver/BenchmarkDriverOptions.java", "fixPatch": "diff --git a/presto-benchmark-driver/src/main/java/com/facebook/presto/benchmark/driver/BenchmarkDriverOptions.java b/presto-benchmark-driver/src/main/java/com/facebook/presto/benchmark/driver/BenchmarkDriverOptions.java\nindex 0685b71..7e97b21 100644\n--- a/presto-benchmark-driver/src/main/java/com/facebook/presto/benchmark/driver/BenchmarkDriverOptions.java\n+++ b/presto-benchmark-driver/src/main/java/com/facebook/presto/benchmark/driver/BenchmarkDriverOptions.java\n@@ -110,7 +110,7 @@\n \n         HostAndPort host = HostAndPort.fromString(server);\n         try {\n-            return new URI(\"http\", null, host.getHostText(), host.getPortOrDefault(80), null, null, null);\n+            return new URI(\"http\", null, host.getHost(), host.getPortOrDefault(80), null, null, null);\n         }\n         catch (URISyntaxException e) {\n             throw new IllegalArgumentException(e);\n", "projectName": "facebook.presto", "bugLineNum": 113, "bugNodeStartChar": 4506, "bugNodeLength": 18, "fixLineNum": 113, "fixNodeStartChar": 4506, "fixNodeLength": 14, "sourceBeforeFix": "host.getHostText()", "sourceAfterFix": "host.getHost()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "10c93df27435ffbc037cde5e6063c9dbc6c0eb3f", "fixCommitParentSHA1": "c7a5a207a917985a39726fcbc21d8cd5b79e10d8", "bugFilePath": "presto-cli/src/main/java/com/facebook/presto/cli/ClientOptions.java", "fixPatch": "diff --git a/presto-cli/src/main/java/com/facebook/presto/cli/ClientOptions.java b/presto-cli/src/main/java/com/facebook/presto/cli/ClientOptions.java\nindex 819fc93..7b62737 100644\n--- a/presto-cli/src/main/java/com/facebook/presto/cli/ClientOptions.java\n+++ b/presto-cli/src/main/java/com/facebook/presto/cli/ClientOptions.java\n@@ -171,7 +171,7 @@\n \n         HostAndPort host = HostAndPort.fromString(server);\n         try {\n-            return new URI(\"http\", null, host.getHostText(), host.getPortOrDefault(80), null, null, null);\n+            return new URI(\"http\", null, host.getHost(), host.getPortOrDefault(80), null, null, null);\n         }\n         catch (URISyntaxException e) {\n             throw new IllegalArgumentException(e);\n", "projectName": "facebook.presto", "bugLineNum": 174, "bugNodeStartChar": 7290, "bugNodeLength": 18, "fixLineNum": 174, "fixNodeStartChar": 7290, "fixNodeLength": 14, "sourceBeforeFix": "host.getHostText()", "sourceAfterFix": "host.getHost()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "10c93df27435ffbc037cde5e6063c9dbc6c0eb3f", "fixCommitParentSHA1": "c7a5a207a917985a39726fcbc21d8cd5b79e10d8", "bugFilePath": "presto-cli/src/main/java/com/facebook/presto/cli/ClientOptions.java", "fixPatch": "diff --git a/presto-cli/src/main/java/com/facebook/presto/cli/ClientOptions.java b/presto-cli/src/main/java/com/facebook/presto/cli/ClientOptions.java\nindex 819fc93..7b62737 100644\n--- a/presto-cli/src/main/java/com/facebook/presto/cli/ClientOptions.java\n+++ b/presto-cli/src/main/java/com/facebook/presto/cli/ClientOptions.java\n@@ -171,7 +171,7 @@\n \n         HostAndPort host = HostAndPort.fromString(server);\n         try {\n-            return new URI(\"http\", null, host.getHostText(), host.getPortOrDefault(80), null, null, null);\n+            return new URI(\"http\", null, host.getHost(), host.getPortOrDefault(80), null, null, null);\n         }\n         catch (URISyntaxException e) {\n             throw new IllegalArgumentException(e);\n", "projectName": "facebook.presto", "bugLineNum": 174, "bugNodeStartChar": 7290, "bugNodeLength": 18, "fixLineNum": 174, "fixNodeStartChar": 7290, "fixNodeLength": 14, "sourceBeforeFix": "host.getHostText()", "sourceAfterFix": "host.getHost()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "10c93df27435ffbc037cde5e6063c9dbc6c0eb3f", "fixCommitParentSHA1": "c7a5a207a917985a39726fcbc21d8cd5b79e10d8", "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/StaticHiveCluster.java", "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/StaticHiveCluster.java b/presto-hive/src/main/java/com/facebook/presto/hive/StaticHiveCluster.java\nindex 3a37c83..4facd97 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/StaticHiveCluster.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/StaticHiveCluster.java\n@@ -71,7 +71,7 @@\n         TTransportException lastException = null;\n         for (HostAndPort metastore : metastores) {\n             try {\n-                return clientFactory.create(metastore.getHostText(), metastore.getPort());\n+                return clientFactory.create(metastore.getHost(), metastore.getPort());\n             }\n             catch (TTransportException e) {\n                 lastException = e;\n", "projectName": "facebook.presto", "bugLineNum": 74, "bugNodeStartChar": 2953, "bugNodeLength": 23, "fixLineNum": 74, "fixNodeStartChar": 2953, "fixNodeLength": 19, "sourceBeforeFix": "metastore.getHostText()", "sourceAfterFix": "metastore.getHost()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "10c93df27435ffbc037cde5e6063c9dbc6c0eb3f", "fixCommitParentSHA1": "c7a5a207a917985a39726fcbc21d8cd5b79e10d8", "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/StaticHiveCluster.java", "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/StaticHiveCluster.java b/presto-hive/src/main/java/com/facebook/presto/hive/StaticHiveCluster.java\nindex 3a37c83..4facd97 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/StaticHiveCluster.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/StaticHiveCluster.java\n@@ -71,7 +71,7 @@\n         TTransportException lastException = null;\n         for (HostAndPort metastore : metastores) {\n             try {\n-                return clientFactory.create(metastore.getHostText(), metastore.getPort());\n+                return clientFactory.create(metastore.getHost(), metastore.getPort());\n             }\n             catch (TTransportException e) {\n                 lastException = e;\n", "projectName": "facebook.presto", "bugLineNum": 74, "bugNodeStartChar": 2953, "bugNodeLength": 23, "fixLineNum": 74, "fixNodeStartChar": 2953, "fixNodeLength": 19, "sourceBeforeFix": "metastore.getHostText()", "sourceAfterFix": "metastore.getHost()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "10c93df27435ffbc037cde5e6063c9dbc6c0eb3f", "fixCommitParentSHA1": "c7a5a207a917985a39726fcbc21d8cd5b79e10d8", "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/thrift/Transport.java", "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/thrift/Transport.java b/presto-hive/src/main/java/com/facebook/presto/hive/thrift/Transport.java\nindex b9bdd52..a8ffe3d 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/thrift/Transport.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/thrift/Transport.java\n@@ -82,7 +82,7 @@\n \n     private static Socket createSocksSocket(HostAndPort proxy)\n     {\n-        SocketAddress address = InetSocketAddress.createUnresolved(proxy.getHostText(), proxy.getPort());\n+        SocketAddress address = InetSocketAddress.createUnresolved(proxy.getHost(), proxy.getPort());\n         return new Socket(new Proxy(Proxy.Type.SOCKS, address));\n     }\n \n", "projectName": "facebook.presto", "bugLineNum": 85, "bugNodeStartChar": 2869, "bugNodeLength": 19, "fixLineNum": 85, "fixNodeStartChar": 2869, "fixNodeLength": 15, "sourceBeforeFix": "proxy.getHostText()", "sourceAfterFix": "proxy.getHost()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "10c93df27435ffbc037cde5e6063c9dbc6c0eb3f", "fixCommitParentSHA1": "c7a5a207a917985a39726fcbc21d8cd5b79e10d8", "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/thrift/Transport.java", "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/thrift/Transport.java b/presto-hive/src/main/java/com/facebook/presto/hive/thrift/Transport.java\nindex b9bdd52..a8ffe3d 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/thrift/Transport.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/thrift/Transport.java\n@@ -82,7 +82,7 @@\n \n     private static Socket createSocksSocket(HostAndPort proxy)\n     {\n-        SocketAddress address = InetSocketAddress.createUnresolved(proxy.getHostText(), proxy.getPort());\n+        SocketAddress address = InetSocketAddress.createUnresolved(proxy.getHost(), proxy.getPort());\n         return new Socket(new Proxy(Proxy.Type.SOCKS, address));\n     }\n \n", "projectName": "facebook.presto", "bugLineNum": 85, "bugNodeStartChar": 2869, "bugNodeLength": 19, "fixLineNum": 85, "fixNodeStartChar": 2869, "fixNodeLength": 15, "sourceBeforeFix": "proxy.getHostText()", "sourceAfterFix": "proxy.getHost()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "10c93df27435ffbc037cde5e6063c9dbc6c0eb3f", "fixCommitParentSHA1": "c7a5a207a917985a39726fcbc21d8cd5b79e10d8", "bugFilePath": "presto-jdbc/src/main/java/com/facebook/presto/jdbc/PrestoDriverUri.java", "fixPatch": "diff --git a/presto-jdbc/src/main/java/com/facebook/presto/jdbc/PrestoDriverUri.java b/presto-jdbc/src/main/java/com/facebook/presto/jdbc/PrestoDriverUri.java\nindex 3590804..f56ec18 100644\n--- a/presto-jdbc/src/main/java/com/facebook/presto/jdbc/PrestoDriverUri.java\n+++ b/presto-jdbc/src/main/java/com/facebook/presto/jdbc/PrestoDriverUri.java\n@@ -126,7 +126,7 @@\n \n         return uriBuilder()\n                 .scheme(scheme)\n-                .host(address.getHostText()).port(address.getPort())\n+                .host(address.getHost()).port(address.getPort())\n                 .build();\n     }\n \n", "projectName": "facebook.presto", "bugLineNum": 129, "bugNodeStartChar": 3669, "bugNodeLength": 21, "fixLineNum": 129, "fixNodeStartChar": 3669, "fixNodeLength": 17, "sourceBeforeFix": "address.getHostText()", "sourceAfterFix": "address.getHost()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "10c93df27435ffbc037cde5e6063c9dbc6c0eb3f", "fixCommitParentSHA1": "c7a5a207a917985a39726fcbc21d8cd5b79e10d8", "bugFilePath": "presto-jdbc/src/main/java/com/facebook/presto/jdbc/PrestoDriverUri.java", "fixPatch": "diff --git a/presto-jdbc/src/main/java/com/facebook/presto/jdbc/PrestoDriverUri.java b/presto-jdbc/src/main/java/com/facebook/presto/jdbc/PrestoDriverUri.java\nindex 3590804..f56ec18 100644\n--- a/presto-jdbc/src/main/java/com/facebook/presto/jdbc/PrestoDriverUri.java\n+++ b/presto-jdbc/src/main/java/com/facebook/presto/jdbc/PrestoDriverUri.java\n@@ -126,7 +126,7 @@\n \n         return uriBuilder()\n                 .scheme(scheme)\n-                .host(address.getHostText()).port(address.getPort())\n+                .host(address.getHost()).port(address.getPort())\n                 .build();\n     }\n \n", "projectName": "facebook.presto", "bugLineNum": 129, "bugNodeStartChar": 3669, "bugNodeLength": 21, "fixLineNum": 129, "fixNodeStartChar": 3669, "fixNodeLength": 17, "sourceBeforeFix": "address.getHostText()", "sourceAfterFix": "address.getHost()"}, {"bugType": "SWAP_ARGUMENTS", "fixCommitSHA1": "af18c0227b3fe793f2c9072ec593ff32693f821c", "fixCommitParentSHA1": "2f12402577207fdce0197ee8af966b01ff23fa0e", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java b/presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java\nindex 409d22f..c0dd292 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java\n@@ -966,7 +966,7 @@\n                         throw new SemanticException(TYPE_MISMATCH,\n                                 node,\n                                 \"column %d in %s query has incompatible types: %s, %s\",\n-                                i, outputFieldTypes[i].getDisplayName(), setOperationName, descFieldType.getDisplayName());\n+                                i, setOperationName, outputFieldTypes[i].getDisplayName(), descFieldType.getDisplayName());\n                     }\n                     outputFieldTypes[i] = commonSuperType.get();\n                 }\n", "projectName": "facebook.presto", "bugLineNum": 966, "bugNodeStartChar": 46858, "bugNodeLength": 285, "fixLineNum": 966, "fixNodeStartChar": 46858, "fixNodeLength": 285, "sourceBeforeFix": "new SemanticException(TYPE_MISMATCH,node,\"column %d in %s query has incompatible types: %s, %s\",i,outputFieldTypes[i].getDisplayName(),setOperationName,descFieldType.getDisplayName())", "sourceAfterFix": "new SemanticException(TYPE_MISMATCH,node,\"column %d in %s query has incompatible types: %s, %s\",i,setOperationName,outputFieldTypes[i].getDisplayName(),descFieldType.getDisplayName())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "3079a06d9695ca88467c96c40c5608afef87fa5d", "fixCommitParentSHA1": "8ca45ca10539b9163f86769f61c215dacb780fc8", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/PushProjectionThroughExchange.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/PushProjectionThroughExchange.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/PushProjectionThroughExchange.java\nindex c4efa05..b64aaeb 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/PushProjectionThroughExchange.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/PushProjectionThroughExchange.java\n@@ -138,7 +138,7 @@\n                 exchange.getPartitioningScheme().getPartitioning(),\n                 outputBuilder.build(),\n                 exchange.getPartitioningScheme().getHashColumn(),\n-                exchange.getPartitioningScheme().isReplicateNulls(),\n+                exchange.getPartitioningScheme().isReplicateNullsAndAny(),\n                 exchange.getPartitioningScheme().getBucketToPartition());\n \n         PlanNode result = new ExchangeNode(\n", "projectName": "facebook.presto", "bugLineNum": 141, "bugNodeStartChar": 5855, "bugNodeLength": 51, "fixLineNum": 141, "fixNodeStartChar": 5855, "fixNodeLength": 57, "sourceBeforeFix": "exchange.getPartitioningScheme().isReplicateNulls()", "sourceAfterFix": "exchange.getPartitioningScheme().isReplicateNullsAndAny()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "3079a06d9695ca88467c96c40c5608afef87fa5d", "fixCommitParentSHA1": "8ca45ca10539b9163f86769f61c215dacb780fc8", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/PushProjectionThroughExchange.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/PushProjectionThroughExchange.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/PushProjectionThroughExchange.java\nindex c4efa05..b64aaeb 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/PushProjectionThroughExchange.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/PushProjectionThroughExchange.java\n@@ -138,7 +138,7 @@\n                 exchange.getPartitioningScheme().getPartitioning(),\n                 outputBuilder.build(),\n                 exchange.getPartitioningScheme().getHashColumn(),\n-                exchange.getPartitioningScheme().isReplicateNulls(),\n+                exchange.getPartitioningScheme().isReplicateNullsAndAny(),\n                 exchange.getPartitioningScheme().getBucketToPartition());\n \n         PlanNode result = new ExchangeNode(\n", "projectName": "facebook.presto", "bugLineNum": 141, "bugNodeStartChar": 5855, "bugNodeLength": 51, "fixLineNum": 141, "fixNodeStartChar": 5855, "fixNodeLength": 57, "sourceBeforeFix": "exchange.getPartitioningScheme().isReplicateNulls()", "sourceAfterFix": "exchange.getPartitioningScheme().isReplicateNullsAndAny()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "720619e271e68d5848185c2a7e45175b18e98f90", "fixCommitParentSHA1": "f1b346522f53ff82ca88cc7c16e22d8f0c3da89a", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/failureDetector/HeartbeatFailureDetector.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/failureDetector/HeartbeatFailureDetector.java b/presto-main/src/main/java/com/facebook/presto/failureDetector/HeartbeatFailureDetector.java\nindex 332a0f2..b945b39 100644\n--- a/presto-main/src/main/java/com/facebook/presto/failureDetector/HeartbeatFailureDetector.java\n+++ b/presto-main/src/main/java/com/facebook/presto/failureDetector/HeartbeatFailureDetector.java\n@@ -162,11 +162,12 @@\n                 }\n \n                 Exception lastFailureException = task.getStats().getLastFailureException();\n-                if (lastFailureException instanceof SocketTimeoutException || lastFailureException instanceof UnknownHostException) {\n+                if (lastFailureException instanceof ConnectException) {\n                     return GONE;\n                 }\n \n-                if (lastFailureException instanceof ConnectException) {\n+                if (lastFailureException instanceof SocketTimeoutException) {\n+                    // TODO: distinguish between process unresponsiveness (e.g GC pause) and host reboot\n                     return UNRESPONSIVE;\n                 }\n \n", "projectName": "facebook.presto", "bugLineNum": 169, "bugNodeStartChar": 6369, "bugNodeLength": 48, "fixLineNum": 169, "fixNodeStartChar": 6369, "fixNodeLength": 54, "sourceBeforeFix": "lastFailureException instanceof ConnectException", "sourceAfterFix": "lastFailureException instanceof SocketTimeoutException"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "2fb0eb51ffad15d396955ab06d0bb30fb0b186bb", "fixCommitParentSHA1": "cd3ff6d59d36efc75985f463ba58c586c31a87cd", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/operator/TestAggregationOperator.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/operator/TestAggregationOperator.java b/presto-main/src/test/java/com/facebook/presto/operator/TestAggregationOperator.java\nindex 96ed093..ca888fb 100644\n--- a/presto-main/src/test/java/com/facebook/presto/operator/TestAggregationOperator.java\n+++ b/presto-main/src/test/java/com/facebook/presto/operator/TestAggregationOperator.java\n@@ -107,7 +107,7 @@\n                         DOUBLE_SUM.bind(ImmutableList.of(5), Optional.empty()),\n                         maxVarcharColumn.bind(ImmutableList.of(6), Optional.empty())));\n \n-        MaterializedResult expected = resultBuilder(driverContext.getSession(), BIGINT, BIGINT, DOUBLE, VARCHAR, BIGINT, BIGINT, DOUBLE, VARCHAR)\n+        MaterializedResult expected = resultBuilder(driverContext.getSession(), BIGINT, BIGINT, DOUBLE, VARCHAR, BIGINT, BIGINT, REAL, DOUBLE, VARCHAR)\n                 .row(100L, 4950L, 49.5, \"399\", 100L, 54950L, 44950.0f, 54950.0, \"599\")\n                 .build();\n \n", "projectName": "facebook.presto", "bugLineNum": 110, "bugNodeStartChar": 5850, "bugNodeLength": 107, "fixLineNum": 110, "fixNodeStartChar": 5850, "fixNodeLength": 113, "sourceBeforeFix": "resultBuilder(driverContext.getSession(),BIGINT,BIGINT,DOUBLE,VARCHAR,BIGINT,BIGINT,DOUBLE,VARCHAR)", "sourceAfterFix": "resultBuilder(driverContext.getSession(),BIGINT,BIGINT,DOUBLE,VARCHAR,BIGINT,BIGINT,REAL,DOUBLE,VARCHAR)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "5d12b156e1150162ba3def263b2da14793304b4e", "fixCommitParentSHA1": "89003e6b52a561b4e2cc0e4682d8fa7e4cc61cd7", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java b/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java\nindex 9d007bd..75305b8 100644\n--- a/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java\n+++ b/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java\n@@ -118,7 +118,7 @@\n         );\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probePages.getTypes(), buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probePages.getTypesWithoutHash(), buildPages.getTypesWithoutHash()))\n                 .row(\"20\", 1020L, 2020L, \"20\", 30L, 40L)\n                 .row(\"21\", 1021L, 2021L, \"21\", 31L, 41L)\n                 .row(\"22\", 1022L, 2022L, \"22\", 32L, 42L)\n@@ -169,7 +169,7 @@\n         );\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypesWithoutHash()))\n                 .row(\"a\", \"a\")\n                 .row(\"a\", \"a\")\n                 .row(\"b\", \"b\")\n@@ -588,7 +588,7 @@\n                 Optional.empty());\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypesWithoutHash()))\n                 .row(\"a\", \"a\")\n                 .row(\"a\", \"a\")\n                 .row(\"b\", \"b\")\n@@ -637,7 +637,7 @@\n                 Optional.empty());\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypesWithoutHash()))\n                 .row(\"a\", \"a\")\n                 .row(\"a\", \"a\")\n                 .row(\"b\", null)\n", "projectName": "facebook.presto", "bugLineNum": 172, "bugNodeStartChar": 7541, "bugNodeLength": 21, "fixLineNum": 172, "fixNodeStartChar": 7541, "fixNodeLength": 32, "sourceBeforeFix": "buildPages.getTypes()", "sourceAfterFix": "buildPages.getTypesWithoutHash()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "5d12b156e1150162ba3def263b2da14793304b4e", "fixCommitParentSHA1": "89003e6b52a561b4e2cc0e4682d8fa7e4cc61cd7", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java b/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java\nindex 9d007bd..75305b8 100644\n--- a/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java\n+++ b/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java\n@@ -118,7 +118,7 @@\n         );\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probePages.getTypes(), buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probePages.getTypesWithoutHash(), buildPages.getTypesWithoutHash()))\n                 .row(\"20\", 1020L, 2020L, \"20\", 30L, 40L)\n                 .row(\"21\", 1021L, 2021L, \"21\", 31L, 41L)\n                 .row(\"22\", 1022L, 2022L, \"22\", 32L, 42L)\n@@ -169,7 +169,7 @@\n         );\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypesWithoutHash()))\n                 .row(\"a\", \"a\")\n                 .row(\"a\", \"a\")\n                 .row(\"b\", \"b\")\n@@ -588,7 +588,7 @@\n                 Optional.empty());\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypesWithoutHash()))\n                 .row(\"a\", \"a\")\n                 .row(\"a\", \"a\")\n                 .row(\"b\", \"b\")\n@@ -637,7 +637,7 @@\n                 Optional.empty());\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypesWithoutHash()))\n                 .row(\"a\", \"a\")\n                 .row(\"a\", \"a\")\n                 .row(\"b\", null)\n", "projectName": "facebook.presto", "bugLineNum": 172, "bugNodeStartChar": 7541, "bugNodeLength": 21, "fixLineNum": 172, "fixNodeStartChar": 7541, "fixNodeLength": 32, "sourceBeforeFix": "buildPages.getTypes()", "sourceAfterFix": "buildPages.getTypesWithoutHash()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "5d12b156e1150162ba3def263b2da14793304b4e", "fixCommitParentSHA1": "89003e6b52a561b4e2cc0e4682d8fa7e4cc61cd7", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java b/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java\nindex 9d007bd..75305b8 100644\n--- a/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java\n+++ b/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java\n@@ -118,7 +118,7 @@\n         );\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probePages.getTypes(), buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probePages.getTypesWithoutHash(), buildPages.getTypesWithoutHash()))\n                 .row(\"20\", 1020L, 2020L, \"20\", 30L, 40L)\n                 .row(\"21\", 1021L, 2021L, \"21\", 31L, 41L)\n                 .row(\"22\", 1022L, 2022L, \"22\", 32L, 42L)\n@@ -169,7 +169,7 @@\n         );\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypesWithoutHash()))\n                 .row(\"a\", \"a\")\n                 .row(\"a\", \"a\")\n                 .row(\"b\", \"b\")\n@@ -588,7 +588,7 @@\n                 Optional.empty());\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypesWithoutHash()))\n                 .row(\"a\", \"a\")\n                 .row(\"a\", \"a\")\n                 .row(\"b\", \"b\")\n@@ -637,7 +637,7 @@\n                 Optional.empty());\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypesWithoutHash()))\n                 .row(\"a\", \"a\")\n                 .row(\"a\", \"a\")\n                 .row(\"b\", null)\n", "projectName": "facebook.presto", "bugLineNum": 591, "bugNodeStartChar": 26606, "bugNodeLength": 21, "fixLineNum": 591, "fixNodeStartChar": 26606, "fixNodeLength": 32, "sourceBeforeFix": "buildPages.getTypes()", "sourceAfterFix": "buildPages.getTypesWithoutHash()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "5d12b156e1150162ba3def263b2da14793304b4e", "fixCommitParentSHA1": "89003e6b52a561b4e2cc0e4682d8fa7e4cc61cd7", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java b/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java\nindex 9d007bd..75305b8 100644\n--- a/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java\n+++ b/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java\n@@ -118,7 +118,7 @@\n         );\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probePages.getTypes(), buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probePages.getTypesWithoutHash(), buildPages.getTypesWithoutHash()))\n                 .row(\"20\", 1020L, 2020L, \"20\", 30L, 40L)\n                 .row(\"21\", 1021L, 2021L, \"21\", 31L, 41L)\n                 .row(\"22\", 1022L, 2022L, \"22\", 32L, 42L)\n@@ -169,7 +169,7 @@\n         );\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypesWithoutHash()))\n                 .row(\"a\", \"a\")\n                 .row(\"a\", \"a\")\n                 .row(\"b\", \"b\")\n@@ -588,7 +588,7 @@\n                 Optional.empty());\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypesWithoutHash()))\n                 .row(\"a\", \"a\")\n                 .row(\"a\", \"a\")\n                 .row(\"b\", \"b\")\n@@ -637,7 +637,7 @@\n                 Optional.empty());\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypesWithoutHash()))\n                 .row(\"a\", \"a\")\n                 .row(\"a\", \"a\")\n                 .row(\"b\", null)\n", "projectName": "facebook.presto", "bugLineNum": 591, "bugNodeStartChar": 26606, "bugNodeLength": 21, "fixLineNum": 591, "fixNodeStartChar": 26606, "fixNodeLength": 32, "sourceBeforeFix": "buildPages.getTypes()", "sourceAfterFix": "buildPages.getTypesWithoutHash()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "5d12b156e1150162ba3def263b2da14793304b4e", "fixCommitParentSHA1": "89003e6b52a561b4e2cc0e4682d8fa7e4cc61cd7", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java b/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java\nindex 9d007bd..75305b8 100644\n--- a/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java\n+++ b/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java\n@@ -118,7 +118,7 @@\n         );\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probePages.getTypes(), buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probePages.getTypesWithoutHash(), buildPages.getTypesWithoutHash()))\n                 .row(\"20\", 1020L, 2020L, \"20\", 30L, 40L)\n                 .row(\"21\", 1021L, 2021L, \"21\", 31L, 41L)\n                 .row(\"22\", 1022L, 2022L, \"22\", 32L, 42L)\n@@ -169,7 +169,7 @@\n         );\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypesWithoutHash()))\n                 .row(\"a\", \"a\")\n                 .row(\"a\", \"a\")\n                 .row(\"b\", \"b\")\n@@ -588,7 +588,7 @@\n                 Optional.empty());\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypesWithoutHash()))\n                 .row(\"a\", \"a\")\n                 .row(\"a\", \"a\")\n                 .row(\"b\", \"b\")\n@@ -637,7 +637,7 @@\n                 Optional.empty());\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypesWithoutHash()))\n                 .row(\"a\", \"a\")\n                 .row(\"a\", \"a\")\n                 .row(\"b\", null)\n", "projectName": "facebook.presto", "bugLineNum": 640, "bugNodeStartChar": 28833, "bugNodeLength": 21, "fixLineNum": 640, "fixNodeStartChar": 28833, "fixNodeLength": 32, "sourceBeforeFix": "buildPages.getTypes()", "sourceAfterFix": "buildPages.getTypesWithoutHash()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "5d12b156e1150162ba3def263b2da14793304b4e", "fixCommitParentSHA1": "89003e6b52a561b4e2cc0e4682d8fa7e4cc61cd7", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java b/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java\nindex 9d007bd..75305b8 100644\n--- a/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java\n+++ b/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java\n@@ -118,7 +118,7 @@\n         );\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probePages.getTypes(), buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probePages.getTypesWithoutHash(), buildPages.getTypesWithoutHash()))\n                 .row(\"20\", 1020L, 2020L, \"20\", 30L, 40L)\n                 .row(\"21\", 1021L, 2021L, \"21\", 31L, 41L)\n                 .row(\"22\", 1022L, 2022L, \"22\", 32L, 42L)\n@@ -169,7 +169,7 @@\n         );\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypesWithoutHash()))\n                 .row(\"a\", \"a\")\n                 .row(\"a\", \"a\")\n                 .row(\"b\", \"b\")\n@@ -588,7 +588,7 @@\n                 Optional.empty());\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypesWithoutHash()))\n                 .row(\"a\", \"a\")\n                 .row(\"a\", \"a\")\n                 .row(\"b\", \"b\")\n@@ -637,7 +637,7 @@\n                 Optional.empty());\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypesWithoutHash()))\n                 .row(\"a\", \"a\")\n                 .row(\"a\", \"a\")\n                 .row(\"b\", null)\n", "projectName": "facebook.presto", "bugLineNum": 640, "bugNodeStartChar": 28833, "bugNodeLength": 21, "fixLineNum": 640, "fixNodeStartChar": 28833, "fixNodeLength": 32, "sourceBeforeFix": "buildPages.getTypes()", "sourceAfterFix": "buildPages.getTypesWithoutHash()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "8e9c4a899c3532b3a6866525a5977129f4af78ea", "fixCommitParentSHA1": "5ccf1a05925c84a1534e3e2afbee98d1838eb261", "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/HiveErrorCode.java", "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveErrorCode.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveErrorCode.java\nindex 221426d..2dd754b 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveErrorCode.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveErrorCode.java\n@@ -26,11 +26,11 @@\n {\n     HIVE_METASTORE_ERROR(0, EXTERNAL),\n     HIVE_CURSOR_ERROR(1, EXTERNAL),\n-    HIVE_TABLE_OFFLINE(2, EXTERNAL),\n+    HIVE_TABLE_OFFLINE(2, USER_ERROR),\n     HIVE_CANNOT_OPEN_SPLIT(3, EXTERNAL),\n     HIVE_FILE_NOT_FOUND(4, EXTERNAL),\n     HIVE_UNKNOWN_ERROR(5, EXTERNAL),\n-    HIVE_PARTITION_OFFLINE(6, EXTERNAL),\n+    HIVE_PARTITION_OFFLINE(6, USER_ERROR),\n     HIVE_BAD_DATA(7, EXTERNAL),\n     HIVE_PARTITION_SCHEMA_MISMATCH(8, EXTERNAL),\n     HIVE_MISSING_DATA(9, EXTERNAL),\n@@ -44,8 +44,8 @@\n     // code HIVE_WRITER_ERROR(17) is deprecated\n     HIVE_SERDE_NOT_FOUND(18, EXTERNAL),\n     HIVE_UNSUPPORTED_FORMAT(19, EXTERNAL),\n-    HIVE_PARTITION_READ_ONLY(20, EXTERNAL),\n-    HIVE_TOO_MANY_OPEN_PARTITIONS(21, EXTERNAL),\n+    HIVE_PARTITION_READ_ONLY(20, USER_ERROR),\n+    HIVE_TOO_MANY_OPEN_PARTITIONS(21, USER_ERROR),\n     HIVE_CONCURRENT_MODIFICATION_DETECTED(22, EXTERNAL),\n     HIVE_COLUMN_ORDER_MISMATCH(23, USER_ERROR),\n     HIVE_FILE_MISSING_COLUMN_NAMES(24, EXTERNAL),\n", "projectName": "facebook.presto", "bugLineNum": 29, "bugNodeStartChar": 1059, "bugNodeLength": 31, "fixLineNum": 29, "fixNodeStartChar": 1059, "fixNodeLength": 33, "sourceBeforeFix": "HIVE_TABLE_OFFLINE(2,EXTERNAL)", "sourceAfterFix": "HIVE_TABLE_OFFLINE(2,USER_ERROR)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "8e9c4a899c3532b3a6866525a5977129f4af78ea", "fixCommitParentSHA1": "5ccf1a05925c84a1534e3e2afbee98d1838eb261", "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/HiveErrorCode.java", "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveErrorCode.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveErrorCode.java\nindex 221426d..2dd754b 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveErrorCode.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveErrorCode.java\n@@ -26,11 +26,11 @@\n {\n     HIVE_METASTORE_ERROR(0, EXTERNAL),\n     HIVE_CURSOR_ERROR(1, EXTERNAL),\n-    HIVE_TABLE_OFFLINE(2, EXTERNAL),\n+    HIVE_TABLE_OFFLINE(2, USER_ERROR),\n     HIVE_CANNOT_OPEN_SPLIT(3, EXTERNAL),\n     HIVE_FILE_NOT_FOUND(4, EXTERNAL),\n     HIVE_UNKNOWN_ERROR(5, EXTERNAL),\n-    HIVE_PARTITION_OFFLINE(6, EXTERNAL),\n+    HIVE_PARTITION_OFFLINE(6, USER_ERROR),\n     HIVE_BAD_DATA(7, EXTERNAL),\n     HIVE_PARTITION_SCHEMA_MISMATCH(8, EXTERNAL),\n     HIVE_MISSING_DATA(9, EXTERNAL),\n@@ -44,8 +44,8 @@\n     // code HIVE_WRITER_ERROR(17) is deprecated\n     HIVE_SERDE_NOT_FOUND(18, EXTERNAL),\n     HIVE_UNSUPPORTED_FORMAT(19, EXTERNAL),\n-    HIVE_PARTITION_READ_ONLY(20, EXTERNAL),\n-    HIVE_TOO_MANY_OPEN_PARTITIONS(21, EXTERNAL),\n+    HIVE_PARTITION_READ_ONLY(20, USER_ERROR),\n+    HIVE_TOO_MANY_OPEN_PARTITIONS(21, USER_ERROR),\n     HIVE_CONCURRENT_MODIFICATION_DETECTED(22, EXTERNAL),\n     HIVE_COLUMN_ORDER_MISMATCH(23, USER_ERROR),\n     HIVE_FILE_MISSING_COLUMN_NAMES(24, EXTERNAL),\n", "projectName": "facebook.presto", "bugLineNum": 33, "bugNodeStartChar": 1212, "bugNodeLength": 35, "fixLineNum": 33, "fixNodeStartChar": 1212, "fixNodeLength": 37, "sourceBeforeFix": "HIVE_PARTITION_OFFLINE(6,EXTERNAL)", "sourceAfterFix": "HIVE_PARTITION_OFFLINE(6,USER_ERROR)"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "26604fde31e9f4586c18209285b7b5c3bc80d51e", "fixCommitParentSHA1": "a7963ee419fc023b2cffcdff2a26b5e7068a9cb2", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/execution/SqlTaskExecution.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/SqlTaskExecution.java b/presto-main/src/main/java/com/facebook/presto/execution/SqlTaskExecution.java\nindex dca9c66..88af518 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/SqlTaskExecution.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/SqlTaskExecution.java\n@@ -304,7 +304,7 @@\n         return updatedUnpartitionedSources;\n     }\n \n-    private void schedulePartitionedSource(TaskSource source)\n+    private synchronized void schedulePartitionedSource(TaskSource source)\n     {\n         // if this is not for the currently scheduling source, save off the splits for\n         // when the source is scheduled\n@@ -335,12 +335,12 @@\n         }\n     }\n \n-    private boolean isSchedulingSource(PlanNodeId sourceId)\n+    private synchronized boolean isSchedulingSource(PlanNodeId sourceId)\n     {\n         return !sourceStartOrder.isEmpty() && sourceStartOrder.peek().equals(sourceId);\n     }\n \n-    private void scheduleUnpartitionedSource(TaskSource source, Map<PlanNodeId, TaskSource> updatedUnpartitionedSources)\n+    private synchronized void scheduleUnpartitionedSource(TaskSource source, Map<PlanNodeId, TaskSource> updatedUnpartitionedSources)\n     {\n         // create new source\n         TaskSource newSource;\n@@ -419,7 +419,7 @@\n         }\n     }\n \n-    public Set<PlanNodeId> getNoMoreSplits()\n+    public synchronized Set<PlanNodeId> getNoMoreSplits()\n     {\n         ImmutableSet.Builder<PlanNodeId> noMoreSplits = ImmutableSet.builder();\n         for (Entry<PlanNodeId, DriverSplitRunnerFactory> entry : partitionedDriverFactories.entrySet()) {\n", "projectName": "facebook.presto", "bugLineNum": 307, "bugNodeStartChar": 13173, "bugNodeLength": 1305, "fixLineNum": 307, "fixNodeStartChar": 13173, "fixNodeLength": 1318, "sourceBeforeFix": "2", "sourceAfterFix": "34"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "26604fde31e9f4586c18209285b7b5c3bc80d51e", "fixCommitParentSHA1": "a7963ee419fc023b2cffcdff2a26b5e7068a9cb2", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/execution/SqlTaskExecution.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/SqlTaskExecution.java b/presto-main/src/main/java/com/facebook/presto/execution/SqlTaskExecution.java\nindex dca9c66..88af518 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/SqlTaskExecution.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/SqlTaskExecution.java\n@@ -304,7 +304,7 @@\n         return updatedUnpartitionedSources;\n     }\n \n-    private void schedulePartitionedSource(TaskSource source)\n+    private synchronized void schedulePartitionedSource(TaskSource source)\n     {\n         // if this is not for the currently scheduling source, save off the splits for\n         // when the source is scheduled\n@@ -335,12 +335,12 @@\n         }\n     }\n \n-    private boolean isSchedulingSource(PlanNodeId sourceId)\n+    private synchronized boolean isSchedulingSource(PlanNodeId sourceId)\n     {\n         return !sourceStartOrder.isEmpty() && sourceStartOrder.peek().equals(sourceId);\n     }\n \n-    private void scheduleUnpartitionedSource(TaskSource source, Map<PlanNodeId, TaskSource> updatedUnpartitionedSources)\n+    private synchronized void scheduleUnpartitionedSource(TaskSource source, Map<PlanNodeId, TaskSource> updatedUnpartitionedSources)\n     {\n         // create new source\n         TaskSource newSource;\n@@ -419,7 +419,7 @@\n         }\n     }\n \n-    public Set<PlanNodeId> getNoMoreSplits()\n+    public synchronized Set<PlanNodeId> getNoMoreSplits()\n     {\n         ImmutableSet.Builder<PlanNodeId> noMoreSplits = ImmutableSet.builder();\n         for (Entry<PlanNodeId, DriverSplitRunnerFactory> entry : partitionedDriverFactories.entrySet()) {\n", "projectName": "facebook.presto", "bugLineNum": 338, "bugNodeStartChar": 14484, "bugNodeLength": 155, "fixLineNum": 338, "fixNodeStartChar": 14484, "fixNodeLength": 168, "sourceBeforeFix": "2", "sourceAfterFix": "34"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "26604fde31e9f4586c18209285b7b5c3bc80d51e", "fixCommitParentSHA1": "a7963ee419fc023b2cffcdff2a26b5e7068a9cb2", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/execution/SqlTaskExecution.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/SqlTaskExecution.java b/presto-main/src/main/java/com/facebook/presto/execution/SqlTaskExecution.java\nindex dca9c66..88af518 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/SqlTaskExecution.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/SqlTaskExecution.java\n@@ -304,7 +304,7 @@\n         return updatedUnpartitionedSources;\n     }\n \n-    private void schedulePartitionedSource(TaskSource source)\n+    private synchronized void schedulePartitionedSource(TaskSource source)\n     {\n         // if this is not for the currently scheduling source, save off the splits for\n         // when the source is scheduled\n@@ -335,12 +335,12 @@\n         }\n     }\n \n-    private boolean isSchedulingSource(PlanNodeId sourceId)\n+    private synchronized boolean isSchedulingSource(PlanNodeId sourceId)\n     {\n         return !sourceStartOrder.isEmpty() && sourceStartOrder.peek().equals(sourceId);\n     }\n \n-    private void scheduleUnpartitionedSource(TaskSource source, Map<PlanNodeId, TaskSource> updatedUnpartitionedSources)\n+    private synchronized void scheduleUnpartitionedSource(TaskSource source, Map<PlanNodeId, TaskSource> updatedUnpartitionedSources)\n     {\n         // create new source\n         TaskSource newSource;\n@@ -419,7 +419,7 @@\n         }\n     }\n \n-    public Set<PlanNodeId> getNoMoreSplits()\n+    public synchronized Set<PlanNodeId> getNoMoreSplits()\n     {\n         ImmutableSet.Builder<PlanNodeId> noMoreSplits = ImmutableSet.builder();\n         for (Entry<PlanNodeId, DriverSplitRunnerFactory> entry : partitionedDriverFactories.entrySet()) {\n", "projectName": "facebook.presto", "bugLineNum": 343, "bugNodeStartChar": 14645, "bugNodeLength": 691, "fixLineNum": 343, "fixNodeStartChar": 14645, "fixNodeLength": 704, "sourceBeforeFix": "2", "sourceAfterFix": "34"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "26604fde31e9f4586c18209285b7b5c3bc80d51e", "fixCommitParentSHA1": "a7963ee419fc023b2cffcdff2a26b5e7068a9cb2", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/execution/SqlTaskExecution.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/SqlTaskExecution.java b/presto-main/src/main/java/com/facebook/presto/execution/SqlTaskExecution.java\nindex dca9c66..88af518 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/SqlTaskExecution.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/SqlTaskExecution.java\n@@ -304,7 +304,7 @@\n         return updatedUnpartitionedSources;\n     }\n \n-    private void schedulePartitionedSource(TaskSource source)\n+    private synchronized void schedulePartitionedSource(TaskSource source)\n     {\n         // if this is not for the currently scheduling source, save off the splits for\n         // when the source is scheduled\n@@ -335,12 +335,12 @@\n         }\n     }\n \n-    private boolean isSchedulingSource(PlanNodeId sourceId)\n+    private synchronized boolean isSchedulingSource(PlanNodeId sourceId)\n     {\n         return !sourceStartOrder.isEmpty() && sourceStartOrder.peek().equals(sourceId);\n     }\n \n-    private void scheduleUnpartitionedSource(TaskSource source, Map<PlanNodeId, TaskSource> updatedUnpartitionedSources)\n+    private synchronized void scheduleUnpartitionedSource(TaskSource source, Map<PlanNodeId, TaskSource> updatedUnpartitionedSources)\n     {\n         // create new source\n         TaskSource newSource;\n@@ -419,7 +419,7 @@\n         }\n     }\n \n-    public Set<PlanNodeId> getNoMoreSplits()\n+    public synchronized Set<PlanNodeId> getNoMoreSplits()\n     {\n         ImmutableSet.Builder<PlanNodeId> noMoreSplits = ImmutableSet.builder();\n         for (Entry<PlanNodeId, DriverSplitRunnerFactory> entry : partitionedDriverFactories.entrySet()) {\n", "projectName": "facebook.presto", "bugLineNum": 422, "bugNodeStartChar": 17829, "bugNodeLength": 605, "fixLineNum": 422, "fixNodeStartChar": 17829, "fixNodeLength": 618, "sourceBeforeFix": "1", "sourceAfterFix": "33"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "d37d345f6b168a610f2dfc2879dc00bce089f72b", "fixCommitParentSHA1": "00553b349552e3c802f8f51d60ee773a81f4e4a6", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/spiller/TestBinaryFileSpiller.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/spiller/TestBinaryFileSpiller.java b/presto-main/src/test/java/com/facebook/presto/spiller/TestBinaryFileSpiller.java\nindex 4968ae3..f2b25e8 100644\n--- a/presto-main/src/test/java/com/facebook/presto/spiller/TestBinaryFileSpiller.java\n+++ b/presto-main/src/test/java/com/facebook/presto/spiller/TestBinaryFileSpiller.java\n@@ -62,7 +62,7 @@\n \n         BlockBuilder col1 = BIGINT.createBlockBuilder(new BlockBuilderStatus(), 1);\n         BlockBuilder col2 = DOUBLE.createBlockBuilder(new BlockBuilderStatus(), 1);\n-        BlockBuilder col3 = VARCHAR.createBlockBuilder(new BlockBuilderStatus(), 1);\n+        BlockBuilder col3 = VARBINARY.createBlockBuilder(new BlockBuilderStatus(), 1);\n \n         col1.writeLong(42).closeEntry();\n         col2.writeLong(doubleToLongBits(43.0)).closeEntry();\n", "projectName": "facebook.presto", "bugLineNum": 65, "bugNodeStartChar": 2678, "bugNodeLength": 55, "fixLineNum": 65, "fixNodeStartChar": 2678, "fixNodeLength": 57, "sourceBeforeFix": "VARCHAR.createBlockBuilder(new BlockBuilderStatus(),1)", "sourceAfterFix": "VARBINARY.createBlockBuilder(new BlockBuilderStatus(),1)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d37d345f6b168a610f2dfc2879dc00bce089f72b", "fixCommitParentSHA1": "00553b349552e3c802f8f51d60ee773a81f4e4a6", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/spiller/TestBinaryFileSpiller.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/spiller/TestBinaryFileSpiller.java b/presto-main/src/test/java/com/facebook/presto/spiller/TestBinaryFileSpiller.java\nindex 4968ae3..f2b25e8 100644\n--- a/presto-main/src/test/java/com/facebook/presto/spiller/TestBinaryFileSpiller.java\n+++ b/presto-main/src/test/java/com/facebook/presto/spiller/TestBinaryFileSpiller.java\n@@ -62,7 +62,7 @@\n \n         BlockBuilder col1 = BIGINT.createBlockBuilder(new BlockBuilderStatus(), 1);\n         BlockBuilder col2 = DOUBLE.createBlockBuilder(new BlockBuilderStatus(), 1);\n-        BlockBuilder col3 = VARCHAR.createBlockBuilder(new BlockBuilderStatus(), 1);\n+        BlockBuilder col3 = VARBINARY.createBlockBuilder(new BlockBuilderStatus(), 1);\n \n         col1.writeLong(42).closeEntry();\n         col2.writeLong(doubleToLongBits(43.0)).closeEntry();\n", "projectName": "facebook.presto", "bugLineNum": 65, "bugNodeStartChar": 2678, "bugNodeLength": 55, "fixLineNum": 65, "fixNodeStartChar": 2678, "fixNodeLength": 57, "sourceBeforeFix": "VARCHAR.createBlockBuilder(new BlockBuilderStatus(),1)", "sourceAfterFix": "VARBINARY.createBlockBuilder(new BlockBuilderStatus(),1)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "3863ad4a1e168bda4cf0d2dd77a06a1d192d5f16", "fixCommitParentSHA1": "8276731ca30f609690fc069691d6ec09831eedd2", "bugFilePath": "presto-parser/src/main/java/com/facebook/presto/sql/tree/DereferenceExpression.java", "fixPatch": "diff --git a/presto-parser/src/main/java/com/facebook/presto/sql/tree/DereferenceExpression.java b/presto-parser/src/main/java/com/facebook/presto/sql/tree/DereferenceExpression.java\nindex 351759b..d0624f7 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/tree/DereferenceExpression.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/tree/DereferenceExpression.java\n@@ -56,7 +56,7 @@\n     @Override\n     public List<Node> getChildren()\n     {\n-        return ImmutableList.of();\n+        return ImmutableList.of(base);\n     }\n \n     public Expression getBase()\n", "projectName": "facebook.presto", "bugLineNum": 59, "bugNodeStartChar": 1806, "bugNodeLength": 18, "fixLineNum": 59, "fixNodeStartChar": 1806, "fixNodeLength": 22, "sourceBeforeFix": "ImmutableList.of()", "sourceAfterFix": "ImmutableList.of(base)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "ed8a124eb3289a3a37e6f0eae7e8bcdb7c4771e8", "fixCommitParentSHA1": "7c18ac98dcf3948456bd1691459083122495bdc7", "bugFilePath": "presto-atop/src/main/java/com/facebook/presto/atop/AtopSplitManager.java", "fixPatch": "diff --git a/presto-atop/src/main/java/com/facebook/presto/atop/AtopSplitManager.java b/presto-atop/src/main/java/com/facebook/presto/atop/AtopSplitManager.java\nindex 035bf39..c03a85f 100644\n--- a/presto-atop/src/main/java/com/facebook/presto/atop/AtopSplitManager.java\n+++ b/presto-atop/src/main/java/com/facebook/presto/atop/AtopSplitManager.java\n@@ -62,7 +62,7 @@\n \n         List<ConnectorSplit> splits = new ArrayList<>();\n         ZonedDateTime end = ZonedDateTime.now(timeZone);\n-        for (Node node : nodeManager.getAllNodes()) {\n+        for (Node node : nodeManager.getWorkerNodes()) {\n             ZonedDateTime start = end.minusDays(maxHistoryDays - 1).withHour(0).withMinute(0).withSecond(0).withNano(0);\n             while (start.isBefore(end)) {\n                 ZonedDateTime splitEnd = start.withHour(23).withMinute(59).withSecond(59).withNano(0);\n", "projectName": "facebook.presto", "bugLineNum": 65, "bugNodeStartChar": 2558, "bugNodeLength": 25, "fixLineNum": 65, "fixNodeStartChar": 2558, "fixNodeLength": 28, "sourceBeforeFix": "nodeManager.getAllNodes()", "sourceAfterFix": "nodeManager.getWorkerNodes()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "ed8a124eb3289a3a37e6f0eae7e8bcdb7c4771e8", "fixCommitParentSHA1": "7c18ac98dcf3948456bd1691459083122495bdc7", "bugFilePath": "presto-atop/src/main/java/com/facebook/presto/atop/AtopSplitManager.java", "fixPatch": "diff --git a/presto-atop/src/main/java/com/facebook/presto/atop/AtopSplitManager.java b/presto-atop/src/main/java/com/facebook/presto/atop/AtopSplitManager.java\nindex 035bf39..c03a85f 100644\n--- a/presto-atop/src/main/java/com/facebook/presto/atop/AtopSplitManager.java\n+++ b/presto-atop/src/main/java/com/facebook/presto/atop/AtopSplitManager.java\n@@ -62,7 +62,7 @@\n \n         List<ConnectorSplit> splits = new ArrayList<>();\n         ZonedDateTime end = ZonedDateTime.now(timeZone);\n-        for (Node node : nodeManager.getAllNodes()) {\n+        for (Node node : nodeManager.getWorkerNodes()) {\n             ZonedDateTime start = end.minusDays(maxHistoryDays - 1).withHour(0).withMinute(0).withSecond(0).withNano(0);\n             while (start.isBefore(end)) {\n                 ZonedDateTime splitEnd = start.withHour(23).withMinute(59).withSecond(59).withNano(0);\n", "projectName": "facebook.presto", "bugLineNum": 65, "bugNodeStartChar": 2558, "bugNodeLength": 25, "fixLineNum": 65, "fixNodeStartChar": 2558, "fixNodeLength": 28, "sourceBeforeFix": "nodeManager.getAllNodes()", "sourceAfterFix": "nodeManager.getWorkerNodes()"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "4b24d638acb9815062c1f001bfd2655d5d79e4fd", "fixCommitParentSHA1": "e021095a9d95587c99172531ae082806cab48c48", "bugFilePath": "presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveClientS3.java", "fixPatch": "diff --git a/presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveClientS3.java b/presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveClientS3.java\nindex 7f0e6fb..a67c4e2 100644\n--- a/presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveClientS3.java\n+++ b/presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveClientS3.java\n@@ -451,7 +451,7 @@\n         public Optional<Database> getDatabase(String databaseName)\n         {\n             return super.getDatabase(databaseName)\n-                    .map(database -> Database.builder()\n+                    .map(database -> Database.builder(database)\n                             .setLocation(Optional.of(\"s3://\" + writableBucket + \"/\"))\n                             .build());\n         }\n", "projectName": "facebook.presto", "bugLineNum": 454, "bugNodeStartChar": 20534, "bugNodeLength": 18, "fixLineNum": 454, "fixNodeStartChar": 20534, "fixNodeLength": 26, "sourceBeforeFix": "Database.builder()", "sourceAfterFix": "Database.builder(database)"}, {"bugType": "SWAP_ARGUMENTS", "fixCommitSHA1": "df0b1fd128601b25ac352a8e83a4bc35ea992890", "fixCommitParentSHA1": "1127e1dcad20d20287fa399e13f5c942fb56c113", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java b/presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java\nindex 2e0f289..2464b59 100644\n--- a/presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java\n+++ b/presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java\n@@ -258,8 +258,8 @@\n                 booleanSessionProperty(\n                         LEGACY_ORDER_BY,\n                         \"Use legacy rules for column resolution in ORDER BY clause\",\n-                        false,\n-                        featuresConfig.isLegacyOrderBy()));\n+                        featuresConfig.isLegacyOrderBy(),\n+                        false));\n     }\n \n     public List<PropertyMetadata<?>> getSessionProperties()\n", "projectName": "facebook.presto", "bugLineNum": 258, "bugNodeStartChar": 13441, "bugNodeLength": 238, "fixLineNum": 258, "fixNodeStartChar": 13441, "fixNodeLength": 238, "sourceBeforeFix": "booleanSessionProperty(LEGACY_ORDER_BY,\"Use legacy rules for column resolution in ORDER BY clause\",false,featuresConfig.isLegacyOrderBy())", "sourceAfterFix": "booleanSessionProperty(LEGACY_ORDER_BY,\"Use legacy rules for column resolution in ORDER BY clause\",featuresConfig.isLegacyOrderBy(),false)"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "2ba203f659a7690bedf91a48e8d33e77a829a63f", "fixCommitParentSHA1": "b0731df6f0598d704ac8cd06a8bc8af41399bdf2", "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java\nindex bd57e95..01dc1a1 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java\n@@ -269,7 +269,7 @@\n     public Optional<Object> getInfo(ConnectorTableLayoutHandle layoutHandle)\n     {\n         HiveTableLayoutHandle tableLayoutHandle = checkType(layoutHandle, HiveTableLayoutHandle.class, \"layoutHandle\");\n-        if (!tableLayoutHandle.getPartitions().isPresent()) {\n+        if (tableLayoutHandle.getPartitions().isPresent()) {\n             return Optional.of(new HiveInputInfo(tableLayoutHandle.getPartitions().get().stream()\n                     .map(HivePartition::getPartitionId)\n                     .collect(Collectors.toList())));\n", "projectName": "facebook.presto", "bugLineNum": 272, "bugNodeStartChar": 14075, "bugNodeLength": 46, "fixLineNum": 272, "fixNodeStartChar": 14075, "fixNodeLength": 45, "sourceBeforeFix": "!tableLayoutHandle.getPartitions().isPresent()", "sourceAfterFix": "tableLayoutHandle.getPartitions().isPresent()"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "8642e3d582552d28c68715644f92af66d16038c9", "fixCommitParentSHA1": "27e0191c930194810dd578568c83de756da5a04c", "bugFilePath": "presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java", "fixPatch": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java b/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\nindex 486c413..2c8c9b0 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\n@@ -90,67 +90,67 @@\n     @Override\n     public boolean getBoolean(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeBoolean(BlockBuilder blockBuilder, boolean value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public long getLong(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeLong(BlockBuilder blockBuilder, long value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public double getDouble(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeDouble(BlockBuilder blockBuilder, double value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public Slice getSlice(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeSlice(BlockBuilder blockBuilder, Slice value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeSlice(BlockBuilder blockBuilder, Slice value, int offset, int length)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public Object getObject(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeObject(BlockBuilder blockBuilder, Object value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n", "projectName": "facebook.presto", "bugLineNum": 93, "bugNodeStartChar": 2404, "bugNodeLength": 35, "fixLineNum": 93, "fixNodeStartChar": 2404, "fixNodeLength": 55, "sourceBeforeFix": "new UnsupportedOperationException()", "sourceAfterFix": "new UnsupportedOperationException(getClass().getName())"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "8642e3d582552d28c68715644f92af66d16038c9", "fixCommitParentSHA1": "27e0191c930194810dd578568c83de756da5a04c", "bugFilePath": "presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java", "fixPatch": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java b/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\nindex 486c413..2c8c9b0 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\n@@ -90,67 +90,67 @@\n     @Override\n     public boolean getBoolean(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeBoolean(BlockBuilder blockBuilder, boolean value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public long getLong(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeLong(BlockBuilder blockBuilder, long value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public double getDouble(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeDouble(BlockBuilder blockBuilder, double value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public Slice getSlice(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeSlice(BlockBuilder blockBuilder, Slice value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeSlice(BlockBuilder blockBuilder, Slice value, int offset, int length)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public Object getObject(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeObject(BlockBuilder blockBuilder, Object value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n", "projectName": "facebook.presto", "bugLineNum": 99, "bugNodeStartChar": 2553, "bugNodeLength": 35, "fixLineNum": 99, "fixNodeStartChar": 2553, "fixNodeLength": 55, "sourceBeforeFix": "new UnsupportedOperationException()", "sourceAfterFix": "new UnsupportedOperationException(getClass().getName())"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "8642e3d582552d28c68715644f92af66d16038c9", "fixCommitParentSHA1": "27e0191c930194810dd578568c83de756da5a04c", "bugFilePath": "presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java", "fixPatch": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java b/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\nindex 486c413..2c8c9b0 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\n@@ -90,67 +90,67 @@\n     @Override\n     public boolean getBoolean(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeBoolean(BlockBuilder blockBuilder, boolean value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public long getLong(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeLong(BlockBuilder blockBuilder, long value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public double getDouble(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeDouble(BlockBuilder blockBuilder, double value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public Slice getSlice(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeSlice(BlockBuilder blockBuilder, Slice value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeSlice(BlockBuilder blockBuilder, Slice value, int offset, int length)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public Object getObject(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeObject(BlockBuilder blockBuilder, Object value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n", "projectName": "facebook.presto", "bugLineNum": 105, "bugNodeStartChar": 2682, "bugNodeLength": 35, "fixLineNum": 105, "fixNodeStartChar": 2682, "fixNodeLength": 55, "sourceBeforeFix": "new UnsupportedOperationException()", "sourceAfterFix": "new UnsupportedOperationException(getClass().getName())"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "8642e3d582552d28c68715644f92af66d16038c9", "fixCommitParentSHA1": "27e0191c930194810dd578568c83de756da5a04c", "bugFilePath": "presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java", "fixPatch": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java b/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\nindex 486c413..2c8c9b0 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\n@@ -90,67 +90,67 @@\n     @Override\n     public boolean getBoolean(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeBoolean(BlockBuilder blockBuilder, boolean value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public long getLong(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeLong(BlockBuilder blockBuilder, long value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public double getDouble(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeDouble(BlockBuilder blockBuilder, double value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public Slice getSlice(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeSlice(BlockBuilder blockBuilder, Slice value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeSlice(BlockBuilder blockBuilder, Slice value, int offset, int length)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public Object getObject(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeObject(BlockBuilder blockBuilder, Object value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n", "projectName": "facebook.presto", "bugLineNum": 111, "bugNodeStartChar": 2825, "bugNodeLength": 35, "fixLineNum": 111, "fixNodeStartChar": 2825, "fixNodeLength": 55, "sourceBeforeFix": "new UnsupportedOperationException()", "sourceAfterFix": "new UnsupportedOperationException(getClass().getName())"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "8642e3d582552d28c68715644f92af66d16038c9", "fixCommitParentSHA1": "27e0191c930194810dd578568c83de756da5a04c", "bugFilePath": "presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java", "fixPatch": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java b/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\nindex 486c413..2c8c9b0 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\n@@ -90,67 +90,67 @@\n     @Override\n     public boolean getBoolean(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeBoolean(BlockBuilder blockBuilder, boolean value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public long getLong(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeLong(BlockBuilder blockBuilder, long value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public double getDouble(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeDouble(BlockBuilder blockBuilder, double value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public Slice getSlice(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeSlice(BlockBuilder blockBuilder, Slice value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeSlice(BlockBuilder blockBuilder, Slice value, int offset, int length)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public Object getObject(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeObject(BlockBuilder blockBuilder, Object value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n", "projectName": "facebook.presto", "bugLineNum": 117, "bugNodeStartChar": 2958, "bugNodeLength": 35, "fixLineNum": 117, "fixNodeStartChar": 2958, "fixNodeLength": 55, "sourceBeforeFix": "new UnsupportedOperationException()", "sourceAfterFix": "new UnsupportedOperationException(getClass().getName())"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "8642e3d582552d28c68715644f92af66d16038c9", "fixCommitParentSHA1": "27e0191c930194810dd578568c83de756da5a04c", "bugFilePath": "presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java", "fixPatch": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java b/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\nindex 486c413..2c8c9b0 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\n@@ -90,67 +90,67 @@\n     @Override\n     public boolean getBoolean(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeBoolean(BlockBuilder blockBuilder, boolean value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public long getLong(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeLong(BlockBuilder blockBuilder, long value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public double getDouble(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeDouble(BlockBuilder blockBuilder, double value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public Slice getSlice(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeSlice(BlockBuilder blockBuilder, Slice value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeSlice(BlockBuilder blockBuilder, Slice value, int offset, int length)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public Object getObject(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeObject(BlockBuilder blockBuilder, Object value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n", "projectName": "facebook.presto", "bugLineNum": 123, "bugNodeStartChar": 3105, "bugNodeLength": 35, "fixLineNum": 123, "fixNodeStartChar": 3105, "fixNodeLength": 55, "sourceBeforeFix": "new UnsupportedOperationException()", "sourceAfterFix": "new UnsupportedOperationException(getClass().getName())"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "8642e3d582552d28c68715644f92af66d16038c9", "fixCommitParentSHA1": "27e0191c930194810dd578568c83de756da5a04c", "bugFilePath": "presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java", "fixPatch": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java b/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\nindex 486c413..2c8c9b0 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\n@@ -90,67 +90,67 @@\n     @Override\n     public boolean getBoolean(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeBoolean(BlockBuilder blockBuilder, boolean value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public long getLong(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeLong(BlockBuilder blockBuilder, long value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public double getDouble(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeDouble(BlockBuilder blockBuilder, double value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public Slice getSlice(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeSlice(BlockBuilder blockBuilder, Slice value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeSlice(BlockBuilder blockBuilder, Slice value, int offset, int length)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public Object getObject(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeObject(BlockBuilder blockBuilder, Object value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n", "projectName": "facebook.presto", "bugLineNum": 129, "bugNodeStartChar": 3236, "bugNodeLength": 35, "fixLineNum": 129, "fixNodeStartChar": 3236, "fixNodeLength": 55, "sourceBeforeFix": "new UnsupportedOperationException()", "sourceAfterFix": "new UnsupportedOperationException(getClass().getName())"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "8642e3d582552d28c68715644f92af66d16038c9", "fixCommitParentSHA1": "27e0191c930194810dd578568c83de756da5a04c", "bugFilePath": "presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java", "fixPatch": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java b/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\nindex 486c413..2c8c9b0 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\n@@ -90,67 +90,67 @@\n     @Override\n     public boolean getBoolean(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeBoolean(BlockBuilder blockBuilder, boolean value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public long getLong(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeLong(BlockBuilder blockBuilder, long value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public double getDouble(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeDouble(BlockBuilder blockBuilder, double value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public Slice getSlice(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeSlice(BlockBuilder blockBuilder, Slice value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeSlice(BlockBuilder blockBuilder, Slice value, int offset, int length)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public Object getObject(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeObject(BlockBuilder blockBuilder, Object value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n", "projectName": "facebook.presto", "bugLineNum": 135, "bugNodeStartChar": 3381, "bugNodeLength": 35, "fixLineNum": 135, "fixNodeStartChar": 3381, "fixNodeLength": 55, "sourceBeforeFix": "new UnsupportedOperationException()", "sourceAfterFix": "new UnsupportedOperationException(getClass().getName())"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "8642e3d582552d28c68715644f92af66d16038c9", "fixCommitParentSHA1": "27e0191c930194810dd578568c83de756da5a04c", "bugFilePath": "presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java", "fixPatch": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java b/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\nindex 486c413..2c8c9b0 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\n@@ -90,67 +90,67 @@\n     @Override\n     public boolean getBoolean(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeBoolean(BlockBuilder blockBuilder, boolean value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public long getLong(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeLong(BlockBuilder blockBuilder, long value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public double getDouble(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeDouble(BlockBuilder blockBuilder, double value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public Slice getSlice(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeSlice(BlockBuilder blockBuilder, Slice value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeSlice(BlockBuilder blockBuilder, Slice value, int offset, int length)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public Object getObject(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeObject(BlockBuilder blockBuilder, Object value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n", "projectName": "facebook.presto", "bugLineNum": 141, "bugNodeStartChar": 3550, "bugNodeLength": 35, "fixLineNum": 141, "fixNodeStartChar": 3550, "fixNodeLength": 55, "sourceBeforeFix": "new UnsupportedOperationException()", "sourceAfterFix": "new UnsupportedOperationException(getClass().getName())"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "8642e3d582552d28c68715644f92af66d16038c9", "fixCommitParentSHA1": "27e0191c930194810dd578568c83de756da5a04c", "bugFilePath": "presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java", "fixPatch": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java b/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\nindex 486c413..2c8c9b0 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\n@@ -90,67 +90,67 @@\n     @Override\n     public boolean getBoolean(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeBoolean(BlockBuilder blockBuilder, boolean value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public long getLong(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeLong(BlockBuilder blockBuilder, long value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public double getDouble(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeDouble(BlockBuilder blockBuilder, double value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public Slice getSlice(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeSlice(BlockBuilder blockBuilder, Slice value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeSlice(BlockBuilder blockBuilder, Slice value, int offset, int length)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public Object getObject(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeObject(BlockBuilder blockBuilder, Object value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n", "projectName": "facebook.presto", "bugLineNum": 147, "bugNodeStartChar": 3683, "bugNodeLength": 35, "fixLineNum": 147, "fixNodeStartChar": 3683, "fixNodeLength": 55, "sourceBeforeFix": "new UnsupportedOperationException()", "sourceAfterFix": "new UnsupportedOperationException(getClass().getName())"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "8642e3d582552d28c68715644f92af66d16038c9", "fixCommitParentSHA1": "27e0191c930194810dd578568c83de756da5a04c", "bugFilePath": "presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java", "fixPatch": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java b/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\nindex 486c413..2c8c9b0 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\n@@ -90,67 +90,67 @@\n     @Override\n     public boolean getBoolean(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeBoolean(BlockBuilder blockBuilder, boolean value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public long getLong(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeLong(BlockBuilder blockBuilder, long value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public double getDouble(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeDouble(BlockBuilder blockBuilder, double value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public Slice getSlice(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeSlice(BlockBuilder blockBuilder, Slice value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeSlice(BlockBuilder blockBuilder, Slice value, int offset, int length)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public Object getObject(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeObject(BlockBuilder blockBuilder, Object value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n", "projectName": "facebook.presto", "bugLineNum": 153, "bugNodeStartChar": 3830, "bugNodeLength": 35, "fixLineNum": 153, "fixNodeStartChar": 3830, "fixNodeLength": 55, "sourceBeforeFix": "new UnsupportedOperationException()", "sourceAfterFix": "new UnsupportedOperationException(getClass().getName())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "4e51ec2ef2692466be178bc8f49c4bf2692cb984", "fixCommitParentSHA1": "e9d55c4aa32ff93ee7b8b21299ca8bb47454e081", "bugFilePath": "presto-parser/src/main/java/com/facebook/presto/sql/tree/Cast.java", "fixPatch": "diff --git a/presto-parser/src/main/java/com/facebook/presto/sql/tree/Cast.java b/presto-parser/src/main/java/com/facebook/presto/sql/tree/Cast.java\nindex 4a2a21e..b3fcac2 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/tree/Cast.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/tree/Cast.java\n@@ -64,7 +64,7 @@\n         requireNonNull(type, \"type is null\");\n \n         this.expression = expression;\n-        this.type = type.toUpperCase(ENGLISH);\n+        this.type = type.toLowerCase(ENGLISH);\n         this.safe = safe;\n         this.typeOnly = typeOnly;\n     }\n", "projectName": "facebook.presto", "bugLineNum": 67, "bugNodeStartChar": 2202, "bugNodeLength": 25, "fixLineNum": 67, "fixNodeStartChar": 2202, "fixNodeLength": 25, "sourceBeforeFix": "type.toUpperCase(ENGLISH)", "sourceAfterFix": "type.toLowerCase(ENGLISH)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4e51ec2ef2692466be178bc8f49c4bf2692cb984", "fixCommitParentSHA1": "e9d55c4aa32ff93ee7b8b21299ca8bb47454e081", "bugFilePath": "presto-parser/src/main/java/com/facebook/presto/sql/tree/Cast.java", "fixPatch": "diff --git a/presto-parser/src/main/java/com/facebook/presto/sql/tree/Cast.java b/presto-parser/src/main/java/com/facebook/presto/sql/tree/Cast.java\nindex 4a2a21e..b3fcac2 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/tree/Cast.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/tree/Cast.java\n@@ -64,7 +64,7 @@\n         requireNonNull(type, \"type is null\");\n \n         this.expression = expression;\n-        this.type = type.toUpperCase(ENGLISH);\n+        this.type = type.toLowerCase(ENGLISH);\n         this.safe = safe;\n         this.typeOnly = typeOnly;\n     }\n", "projectName": "facebook.presto", "bugLineNum": 67, "bugNodeStartChar": 2202, "bugNodeLength": 25, "fixLineNum": 67, "fixNodeStartChar": 2202, "fixNodeLength": 25, "sourceBeforeFix": "type.toUpperCase(ENGLISH)", "sourceAfterFix": "type.toLowerCase(ENGLISH)"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "890fa79f6486f5dbffd3c4270a42b7deceeaa765", "fixCommitParentSHA1": "fd0f4cc8d4fed7ff9c0c46181c9f2cd6a5f83e71", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/execution/MockRemoteTaskFactory.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/execution/MockRemoteTaskFactory.java b/presto-main/src/test/java/com/facebook/presto/execution/MockRemoteTaskFactory.java\nindex 2a475e6..0e1dd8d 100644\n--- a/presto-main/src/test/java/com/facebook/presto/execution/MockRemoteTaskFactory.java\n+++ b/presto-main/src/test/java/com/facebook/presto/execution/MockRemoteTaskFactory.java\n@@ -351,7 +351,7 @@\n         }\n \n         @Override\n-        public int getQueuedPartitionedSplitCount()\n+        public synchronized int getQueuedPartitionedSplitCount()\n         {\n             if (taskStateMachine.getState().isDone()) {\n                 return 0;\n", "projectName": "facebook.presto", "bugLineNum": 353, "bugNodeStartChar": 13937, "bugNodeLength": 241, "fixLineNum": 353, "fixNodeStartChar": 13937, "fixNodeLength": 254, "sourceBeforeFix": "1", "sourceAfterFix": "33"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "4a1fe28154e697fe94e5d611cf0586032bc95d63", "fixCommitParentSHA1": "c152f16535ef851c14751285080c3125d5827b2f", "bugFilePath": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileReader.java", "fixPatch": "diff --git a/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileReader.java b/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileReader.java\nindex 0cbaf67..26be5c8 100644\n--- a/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileReader.java\n+++ b/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileReader.java\n@@ -130,7 +130,7 @@\n         else if (SEQUENCE_FILE_MAGIC.equals(magic)) {\n             // first version of RCFile used magic SEQ with version 6\n             byte sequenceFileVersion = input.readByte();\n-            if (sequenceFileVersion == SEQUENCE_FILE_VERSION) {\n+            if (sequenceFileVersion != SEQUENCE_FILE_VERSION) {\n                 throw corrupt(\"File %s is a SequenceFile not an RCFile\", dataSource);\n             }\n \n", "projectName": "facebook.presto", "bugLineNum": 133, "bugNodeStartChar": 5223, "bugNodeLength": 44, "fixLineNum": 133, "fixNodeStartChar": 5223, "fixNodeLength": 44, "sourceBeforeFix": "sequenceFileVersion == SEQUENCE_FILE_VERSION", "sourceAfterFix": "sequenceFileVersion != SEQUENCE_FILE_VERSION"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "72d65cdc4485c788e13647cf2fbca9ff867fd731", "fixCommitParentSHA1": "e5dbe7ca1cb519f50a7b13fc1a775e5ba966ab89", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/server/remotetask/ContinuousTaskStatusFetcher.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/server/remotetask/ContinuousTaskStatusFetcher.java b/presto-main/src/main/java/com/facebook/presto/server/remotetask/ContinuousTaskStatusFetcher.java\nindex 77d8dac..12bedf0 100644\n--- a/presto-main/src/main/java/com/facebook/presto/server/remotetask/ContinuousTaskStatusFetcher.java\n+++ b/presto-main/src/main/java/com/facebook/presto/server/remotetask/ContinuousTaskStatusFetcher.java\n@@ -208,7 +208,7 @@\n         }\n     }\n \n-    synchronized void updateTaskStatus(TaskStatus newValue)\n+    void updateTaskStatus(TaskStatus newValue)\n     {\n         // change to new value if old value is not changed and new value has a newer version\n         AtomicBoolean taskMismatch = new AtomicBoolean();\n", "projectName": "facebook.presto", "bugLineNum": 211, "bugNodeStartChar": 7783, "bugNodeLength": 1060, "fixLineNum": 211, "fixNodeStartChar": 7783, "fixNodeLength": 1047, "sourceBeforeFix": "32", "sourceAfterFix": "0"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "3a2d464b16b475983e5f13e28380d22d90a80ec0", "fixCommitParentSHA1": "e669bd53334b69771364299ebad8f6bc6d05a829", "bugFilePath": "presto-orc/src/test/java/com/facebook/presto/orc/TestOrcBloomFilters.java", "fixPatch": "diff --git a/presto-orc/src/test/java/com/facebook/presto/orc/TestOrcBloomFilters.java b/presto-orc/src/test/java/com/facebook/presto/orc/TestOrcBloomFilters.java\nindex de42d22..e6665f4 100644\n--- a/presto-orc/src/test/java/com/facebook/presto/orc/TestOrcBloomFilters.java\n+++ b/presto-orc/src/test/java/com/facebook/presto/orc/TestOrcBloomFilters.java\n@@ -270,7 +270,7 @@\n \n         // predicate consist of the bigint_0 = 1234\n         TupleDomain<String> effectivePredicate = TupleDomain.fromColumnDomains(Optional.of(ImmutableList.of(column0)));\n-        TupleDomain<String> emptyEffectivePredicate = TupleDomain.none();\n+        TupleDomain<String> emptyEffectivePredicate = TupleDomain.all();\n \n         // predicate column references\n         List<ColumnReference<String>> columnReferences = ImmutableList.<ColumnReference<String>>builder()\n", "projectName": "facebook.presto", "bugLineNum": 273, "bugNodeStartChar": 11637, "bugNodeLength": 18, "fixLineNum": 273, "fixNodeStartChar": 11637, "fixNodeLength": 17, "sourceBeforeFix": "TupleDomain.none()", "sourceAfterFix": "TupleDomain.all()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "3a2d464b16b475983e5f13e28380d22d90a80ec0", "fixCommitParentSHA1": "e669bd53334b69771364299ebad8f6bc6d05a829", "bugFilePath": "presto-orc/src/test/java/com/facebook/presto/orc/TestOrcBloomFilters.java", "fixPatch": "diff --git a/presto-orc/src/test/java/com/facebook/presto/orc/TestOrcBloomFilters.java b/presto-orc/src/test/java/com/facebook/presto/orc/TestOrcBloomFilters.java\nindex de42d22..e6665f4 100644\n--- a/presto-orc/src/test/java/com/facebook/presto/orc/TestOrcBloomFilters.java\n+++ b/presto-orc/src/test/java/com/facebook/presto/orc/TestOrcBloomFilters.java\n@@ -270,7 +270,7 @@\n \n         // predicate consist of the bigint_0 = 1234\n         TupleDomain<String> effectivePredicate = TupleDomain.fromColumnDomains(Optional.of(ImmutableList.of(column0)));\n-        TupleDomain<String> emptyEffectivePredicate = TupleDomain.none();\n+        TupleDomain<String> emptyEffectivePredicate = TupleDomain.all();\n \n         // predicate column references\n         List<ColumnReference<String>> columnReferences = ImmutableList.<ColumnReference<String>>builder()\n", "projectName": "facebook.presto", "bugLineNum": 273, "bugNodeStartChar": 11637, "bugNodeLength": 18, "fixLineNum": 273, "fixNodeStartChar": 11637, "fixNodeLength": 17, "sourceBeforeFix": "TupleDomain.none()", "sourceAfterFix": "TupleDomain.all()"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "bb65a918bef30c50a093e57cdd6ca8c332615ea4", "fixCommitParentSHA1": "2160a9ba79a31cc3a8843a84f1864631b4d93f87", "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/util/HiveFileIterator.java", "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/util/HiveFileIterator.java b/presto-hive/src/main/java/com/facebook/presto/hive/util/HiveFileIterator.java\nindex 5d34229..7dd7926 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/util/HiveFileIterator.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/util/HiveFileIterator.java\n@@ -97,7 +97,7 @@\n             throw new PrestoException(HIVE_FILE_NOT_FOUND, \"Partition location does not exist: \" + path);\n         }\n         catch (IOException e) {\n-            throw new PrestoException(HIVE_FILESYSTEM_ERROR, e);\n+            throw new PrestoException(HIVE_FILESYSTEM_ERROR, \"Failed to list directory: \" + path, e);\n         }\n     }\n \n", "projectName": "facebook.presto", "bugLineNum": 100, "bugNodeStartChar": 4121, "bugNodeLength": 45, "fixLineNum": 100, "fixNodeStartChar": 4121, "fixNodeLength": 82, "sourceBeforeFix": "new PrestoException(HIVE_FILESYSTEM_ERROR,e)", "sourceAfterFix": "new PrestoException(HIVE_FILESYSTEM_ERROR,\"Failed to list directory: \" + path,e)"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "c9f41fa744d6520f5f44be1a8a16e6a32a8fa83d", "fixCommitParentSHA1": "2633a77dc9dce687919caf28be968ae5358f492f", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/server/remotetask/HttpRemoteTask.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/server/remotetask/HttpRemoteTask.java b/presto-main/src/main/java/com/facebook/presto/server/remotetask/HttpRemoteTask.java\nindex 44e9c78..ea56a78 100644\n--- a/presto-main/src/main/java/com/facebook/presto/server/remotetask/HttpRemoteTask.java\n+++ b/presto-main/src/main/java/com/facebook/presto/server/remotetask/HttpRemoteTask.java\n@@ -592,7 +592,7 @@\n     /**\n      * Move the task directly to the failed state if there was a failure in this task\n      */\n-    void failTask(Throwable cause)\n+    private void failTask(Throwable cause)\n     {\n         TaskStatus taskStatus = getTaskStatus();\n         if (!taskStatus.getState().isDone()) {\n", "projectName": "facebook.presto", "bugLineNum": 592, "bugNodeStartChar": 23035, "bugNodeLength": 429, "fixLineNum": 592, "fixNodeStartChar": 23035, "fixNodeLength": 437, "sourceBeforeFix": "0", "sourceAfterFix": "2"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "1dd94a41119b58bb9a341b6897b0916add1fd344", "fixCommitParentSHA1": "5082f4509bcb1cb42583bdaf7a8c62673f7aba77", "bugFilePath": "presto-raptor/src/test/java/com/facebook/presto/raptor/metadata/TestDatabaseShardManager.java", "fixPatch": "diff --git a/presto-raptor/src/test/java/com/facebook/presto/raptor/metadata/TestDatabaseShardManager.java b/presto-raptor/src/test/java/com/facebook/presto/raptor/metadata/TestDatabaseShardManager.java\nindex 28df321..8d9b0be 100644\n--- a/presto-raptor/src/test/java/com/facebook/presto/raptor/metadata/TestDatabaseShardManager.java\n+++ b/presto-raptor/src/test/java/com/facebook/presto/raptor/metadata/TestDatabaseShardManager.java\n@@ -271,7 +271,7 @@\n         shardManager.createTable(tableId, columns, false);\n \n         long transactionId = shardManager.beginTransaction();\n-        shardManager.commitShards(transactionId, tableId, columns, shardNodes, Optional.empty());\n+        shardManager.commitShards(transactionId, tableId, columns, shardNodes, Optional.empty(), 0);\n         Set<UUID> actual = shardManager.getExistingShardUuids(tableId, ImmutableSet.of(shard1, shard2, UUID.randomUUID()));\n         Set<UUID> expected = ImmutableSet.of(shard1, shard2);\n         assertEquals(actual, expected);\n", "projectName": "facebook.presto", "bugLineNum": 274, "bugNodeStartChar": 10941, "bugNodeLength": 88, "fixLineNum": 274, "fixNodeStartChar": 10941, "fixNodeLength": 91, "sourceBeforeFix": "shardManager.commitShards(transactionId,tableId,columns,shardNodes,Optional.empty())", "sourceAfterFix": "shardManager.commitShards(transactionId,tableId,columns,shardNodes,Optional.empty(),0)"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "6c44dfbaf789d4ebc47f3e5615399a8849347e68", "fixCommitParentSHA1": "edf7bad146079ed1f330bff880227a1f841d32f0", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/AddLocalExchanges.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/AddLocalExchanges.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/AddLocalExchanges.java\nindex 489178b..be4fdb4 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/AddLocalExchanges.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/AddLocalExchanges.java\n@@ -424,7 +424,8 @@\n         {\n             StreamPreferredProperties requiredProperties;\n             StreamPreferredProperties preferredProperties;\n-            if (getTaskWriterCount(session) > 1) {\n+            // Force single writer when partition function exists\n+            if (getTaskWriterCount(session) > 1 && !node.getPartitioningScheme().isPresent()) {\n                 requiredProperties = fixedParallelism(getTaskWriterCount(session));\n                 preferredProperties = fixedParallelism(getTaskWriterCount(session));\n             }\n", "projectName": "facebook.presto", "bugLineNum": 427, "bugNodeStartChar": 21036, "bugNodeLength": 31, "fixLineNum": 428, "fixNodeStartChar": 21102, "fixNodeLength": 76, "sourceBeforeFix": "getTaskWriterCount(session) > 1", "sourceAfterFix": "getTaskWriterCount(session) > 1 && !node.getPartitioningScheme().isPresent()"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "2a8f12e49c15a3a369ce9fa67f5b1953c9f23578", "fixCommitParentSHA1": "35cbc93c6d27b31b8430181e35f4b0ca665e2cd0", "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/HiveClientConfig.java", "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveClientConfig.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveClientConfig.java\nindex c74a321..ec2824f 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveClientConfig.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveClientConfig.java\n@@ -75,7 +75,7 @@\n     private Duration metastoreTimeout = new Duration(10, TimeUnit.SECONDS);\n \n     private Duration ipcPingInterval = new Duration(10, TimeUnit.SECONDS);\n-    private Duration dfsTimeout = new Duration(10, TimeUnit.SECONDS);\n+    private Duration dfsTimeout = new Duration(60, TimeUnit.SECONDS);\n     private Duration dfsConnectTimeout = new Duration(500, TimeUnit.MILLISECONDS);\n     private int dfsConnectMaxRetries = 5;\n     private boolean verifyChecksum = true;\n", "projectName": "facebook.presto", "bugLineNum": 78, "bugNodeStartChar": 2891, "bugNodeLength": 34, "fixLineNum": 78, "fixNodeStartChar": 2891, "fixNodeLength": 34, "sourceBeforeFix": "new Duration(10,TimeUnit.SECONDS)", "sourceAfterFix": "new Duration(60,TimeUnit.SECONDS)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "2a8f12e49c15a3a369ce9fa67f5b1953c9f23578", "fixCommitParentSHA1": "35cbc93c6d27b31b8430181e35f4b0ca665e2cd0", "bugFilePath": "presto-hive/src/test/java/com/facebook/presto/hive/TestHiveClientConfig.java", "fixPatch": "diff --git a/presto-hive/src/test/java/com/facebook/presto/hive/TestHiveClientConfig.java b/presto-hive/src/test/java/com/facebook/presto/hive/TestHiveClientConfig.java\nindex 0e7b4d7..c4e7291 100644\n--- a/presto-hive/src/test/java/com/facebook/presto/hive/TestHiveClientConfig.java\n+++ b/presto-hive/src/test/java/com/facebook/presto/hive/TestHiveClientConfig.java\n@@ -58,7 +58,7 @@\n                 .setForceLocalScheduling(false)\n                 .setMaxConcurrentFileRenames(20)\n                 .setRecursiveDirWalkerEnabled(false)\n-                .setDfsTimeout(new Duration(10, TimeUnit.SECONDS))\n+                .setDfsTimeout(new Duration(60, TimeUnit.SECONDS))\n                 .setIpcPingInterval(new Duration(10, TimeUnit.SECONDS))\n                 .setDfsConnectTimeout(new Duration(500, TimeUnit.MILLISECONDS))\n                 .setDfsConnectMaxRetries(5)\n", "projectName": "facebook.presto", "bugLineNum": 61, "bugNodeStartChar": 2575, "bugNodeLength": 34, "fixLineNum": 61, "fixNodeStartChar": 2575, "fixNodeLength": 34, "sourceBeforeFix": "new Duration(10,TimeUnit.SECONDS)", "sourceAfterFix": "new Duration(60,TimeUnit.SECONDS)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4e43e3b74a2ce09a26e9795a9739d388b1fb787b", "fixCommitParentSHA1": "a2eea25602b7e73dd496a70ca0c30fb44e07c098", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/operator/RowNumberOperator.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/RowNumberOperator.java b/presto-main/src/main/java/com/facebook/presto/operator/RowNumberOperator.java\nindex e6a3436..771ffd8 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/RowNumberOperator.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/RowNumberOperator.java\n@@ -275,7 +275,7 @@\n             pageBuilder.declarePosition();\n             for (int i = 0; i < outputChannels.length; i++) {\n                 int channel = outputChannels[i];\n-                Type type = types.get(channel);\n+                Type type = types.get(i);\n                 type.appendTo(inputPage.getBlock(channel), currentPosition, pageBuilder.getBlockBuilder(i));\n             }\n             BIGINT.writeLong(pageBuilder.getBlockBuilder(rowNumberChannel), rowCount + 1);\n", "projectName": "facebook.presto", "bugLineNum": 278, "bugNodeStartChar": 9998, "bugNodeLength": 18, "fixLineNum": 278, "fixNodeStartChar": 9998, "fixNodeLength": 12, "sourceBeforeFix": "types.get(channel)", "sourceAfterFix": "types.get(i)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4e43e3b74a2ce09a26e9795a9739d388b1fb787b", "fixCommitParentSHA1": "a2eea25602b7e73dd496a70ca0c30fb44e07c098", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/operator/TopNRowNumberOperator.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/TopNRowNumberOperator.java b/presto-main/src/main/java/com/facebook/presto/operator/TopNRowNumberOperator.java\nindex 03e746e..a91aed7 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/TopNRowNumberOperator.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/TopNRowNumberOperator.java\n@@ -315,7 +315,7 @@\n                 pageBuilder.declarePosition();\n                 for (int i = 0; i < outputChannels.length; i++) {\n                     int channel = outputChannels[i];\n-                    Type type = types.get(channel);\n+                    Type type = types.get(i);\n                     type.appendTo(next[channel], 0, pageBuilder.getBlockBuilder(i));\n                 }\n                 if (generateRowNumber) {\n", "projectName": "facebook.presto", "bugLineNum": 318, "bugNodeStartChar": 12286, "bugNodeLength": 18, "fixLineNum": 318, "fixNodeStartChar": 12286, "fixNodeLength": 12, "sourceBeforeFix": "types.get(channel)", "sourceAfterFix": "types.get(i)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "41ab70ec4939adaf9fcbd090b680d1e22871bef7", "fixCommitParentSHA1": "4ad0a7f781a83682278e96b9c9ee91259e475bbd", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/util/GraphvizPrinter.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/util/GraphvizPrinter.java b/presto-main/src/main/java/com/facebook/presto/util/GraphvizPrinter.java\nindex b9e7fdd..d188713 100644\n--- a/presto-main/src/main/java/com/facebook/presto/util/GraphvizPrinter.java\n+++ b/presto-main/src/main/java/com/facebook/presto/util/GraphvizPrinter.java\n@@ -91,7 +91,7 @@\n         SAMPLE,\n         MARK_DISTINCT,\n         TABLE_WRITER,\n-        TABLE_COMMIT,\n+        TABLE_FINISH,\n         INDEX_SOURCE,\n         UNNEST\n     }\n@@ -113,7 +113,7 @@\n             .put(NodeType.UNION, \"turquoise4\")\n             .put(NodeType.MARK_DISTINCT, \"violet\")\n             .put(NodeType.TABLE_WRITER, \"cyan\")\n-            .put(NodeType.TABLE_COMMIT, \"hotpink\")\n+            .put(NodeType.TABLE_FINISH, \"hotpink\")\n             .put(NodeType.INDEX_SOURCE, \"dodgerblue3\")\n             .put(NodeType.UNNEST, \"crimson\")\n             .put(NodeType.SAMPLE, \"goldenrod4\")\n@@ -224,7 +224,7 @@\n         @Override\n         public Void visitTableFinish(TableFinishNode node, Void context)\n         {\n-            printNode(node, format(\"TableCommit[%s]\", Joiner.on(\", \").join(node.getOutputSymbols())), NODE_COLORS.get(NodeType.TABLE_COMMIT));\n+            printNode(node, format(\"TableFinish[%s]\", Joiner.on(\", \").join(node.getOutputSymbols())), NODE_COLORS.get(NodeType.TABLE_FINISH));\n             return node.getSource().accept(this, context);\n         }\n \n", "projectName": "facebook.presto", "bugLineNum": 94, "bugNodeStartChar": 3830, "bugNodeLength": 12, "fixLineNum": 94, "fixNodeStartChar": 3830, "fixNodeLength": 12, "sourceBeforeFix": "TABLE_COMMIT", "sourceAfterFix": "TABLE_FINISH"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "f0c192a7d7be220c020af4c940ddb367b6b0c5ae", "fixCommitParentSHA1": "932b0c769c1666ed42846276f040df414b155958", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/AddExchanges.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/AddExchanges.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/AddExchanges.java\nindex f6cf197..b5a71ec 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/AddExchanges.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/AddExchanges.java\n@@ -303,7 +303,7 @@\n                 }\n             }\n             else {\n-                if (child.getProperties().isNodePartitionedOn(partitioningRequirement)) {\n+                if (child.getProperties().isStreamPartitionedOn(partitioningRequirement)) {\n                     return rebaseAndDeriveProperties(node, child);\n                 }\n                 else {\n", "projectName": "facebook.presto", "bugLineNum": 306, "bugNodeStartChar": 15105, "bugNodeLength": 66, "fixLineNum": 306, "fixNodeStartChar": 15105, "fixNodeLength": 68, "sourceBeforeFix": "child.getProperties().isNodePartitionedOn(partitioningRequirement)", "sourceAfterFix": "child.getProperties().isStreamPartitionedOn(partitioningRequirement)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "f0c192a7d7be220c020af4c940ddb367b6b0c5ae", "fixCommitParentSHA1": "932b0c769c1666ed42846276f040df414b155958", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/AddExchanges.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/AddExchanges.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/AddExchanges.java\nindex f6cf197..b5a71ec 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/AddExchanges.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/AddExchanges.java\n@@ -303,7 +303,7 @@\n                 }\n             }\n             else {\n-                if (child.getProperties().isNodePartitionedOn(partitioningRequirement)) {\n+                if (child.getProperties().isStreamPartitionedOn(partitioningRequirement)) {\n                     return rebaseAndDeriveProperties(node, child);\n                 }\n                 else {\n", "projectName": "facebook.presto", "bugLineNum": 306, "bugNodeStartChar": 15105, "bugNodeLength": 66, "fixLineNum": 306, "fixNodeStartChar": 15105, "fixNodeLength": 68, "sourceBeforeFix": "child.getProperties().isNodePartitionedOn(partitioningRequirement)", "sourceAfterFix": "child.getProperties().isStreamPartitionedOn(partitioningRequirement)"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "b4cef872f8429ea78bc13f1ac2b3fa5eb3723d3a", "fixCommitParentSHA1": "032216497c565f881bd24a2b31d0cf04d3b9fa0a", "bugFilePath": "presto-hive/src/test/java/com/facebook/presto/hive/metastore/InMemoryHiveMetastore.java", "fixPatch": "diff --git a/presto-hive/src/test/java/com/facebook/presto/hive/metastore/InMemoryHiveMetastore.java b/presto-hive/src/test/java/com/facebook/presto/hive/metastore/InMemoryHiveMetastore.java\nindex 1236792..1881cee 100644\n--- a/presto-hive/src/test/java/com/facebook/presto/hive/metastore/InMemoryHiveMetastore.java\n+++ b/presto-hive/src/test/java/com/facebook/presto/hive/metastore/InMemoryHiveMetastore.java\n@@ -170,7 +170,7 @@\n \n         // if the name did not change, this is a simple schema change\n         if (oldName.equals(newName)) {\n-            if (relations.replace(oldName, newTable) != null) {\n+            if (relations.replace(oldName, newTable) == null) {\n                 throw new TableNotFoundException(oldName);\n             }\n             return;\n", "projectName": "facebook.presto", "bugLineNum": 173, "bugNodeStartChar": 7891, "bugNodeLength": 44, "fixLineNum": 173, "fixNodeStartChar": 7891, "fixNodeLength": 44, "sourceBeforeFix": "relations.replace(oldName,newTable) != null", "sourceAfterFix": "relations.replace(oldName,newTable) == null"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "43c0a9b32431052285f0a511982fc00d99af3e03", "fixCommitParentSHA1": "2f0293966be736c7bdf9177b7b49058ef040a6c1", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/operator/aggregation/ArrayAggregationFunction.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/aggregation/ArrayAggregationFunction.java b/presto-main/src/main/java/com/facebook/presto/operator/aggregation/ArrayAggregationFunction.java\nindex 3a23b4a..918ce40 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/aggregation/ArrayAggregationFunction.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/aggregation/ArrayAggregationFunction.java\n@@ -113,7 +113,7 @@\n     {\n         BlockBuilder blockBuilder = state.getBlockBuilder();\n         if (blockBuilder == null) {\n-            blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), 100);\n+            blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), 4);\n             state.setBlockBuilder(blockBuilder);\n         }\n         long startSize = blockBuilder.getRetainedSizeInBytes();\n", "projectName": "facebook.presto", "bugLineNum": 116, "bugNodeStartChar": 5842, "bugNodeLength": 54, "fixLineNum": 116, "fixNodeStartChar": 5842, "fixNodeLength": 52, "sourceBeforeFix": "type.createBlockBuilder(new BlockBuilderStatus(),100)", "sourceAfterFix": "type.createBlockBuilder(new BlockBuilderStatus(),4)"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "a7ce2738959a8efc7ace2e5e467ea09a1e4b7755", "fixCommitParentSHA1": "674150787e0af5ff83797782ea97736a73d2cc86", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/memory/ClusterMemoryManager.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/memory/ClusterMemoryManager.java b/presto-main/src/main/java/com/facebook/presto/memory/ClusterMemoryManager.java\nindex f0db01a..4cca809 100644\n--- a/presto-main/src/main/java/com/facebook/presto/memory/ClusterMemoryManager.java\n+++ b/presto-main/src/main/java/com/facebook/presto/memory/ClusterMemoryManager.java\n@@ -215,14 +215,14 @@\n         return ImmutableMap.copyOf(pools);\n     }\n \n-    private boolean isClusterOutOfMemory()\n+    private synchronized boolean isClusterOutOfMemory()\n     {\n         ClusterMemoryPool reservedPool = pools.get(RESERVED_POOL);\n         ClusterMemoryPool generalPool = pools.get(GENERAL_POOL);\n         return reservedPool != null && generalPool != null && reservedPool.getAssignedQueries() > 0 && generalPool.getBlockedNodes() > 0;\n     }\n \n-    private MemoryPoolAssignmentsRequest updateAssignments(Iterable<QueryExecution> queries)\n+    private synchronized MemoryPoolAssignmentsRequest updateAssignments(Iterable<QueryExecution> queries)\n     {\n         ClusterMemoryPool reservedPool = pools.get(RESERVED_POOL);\n         ClusterMemoryPool generalPool = pools.get(GENERAL_POOL);\n@@ -280,7 +280,7 @@\n \n     private void updateNodes(MemoryPoolAssignmentsRequest assignments)\n     {\n-        ImmutableSet.Builder builder = new ImmutableSet.Builder();\n+        ImmutableSet.Builder<Node> builder = ImmutableSet.builder();\n         Set<Node> aliveNodes = builder\n                 .addAll(nodeManager.getNodes(ACTIVE))\n                 .addAll(nodeManager.getNodes(SHUTTING_DOWN))\n", "projectName": "facebook.presto", "bugLineNum": 218, "bugNodeStartChar": 9948, "bugNodeLength": 320, "fixLineNum": 218, "fixNodeStartChar": 9948, "fixNodeLength": 333, "sourceBeforeFix": "2", "sourceAfterFix": "34"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "a7ce2738959a8efc7ace2e5e467ea09a1e4b7755", "fixCommitParentSHA1": "674150787e0af5ff83797782ea97736a73d2cc86", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/memory/ClusterMemoryManager.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/memory/ClusterMemoryManager.java b/presto-main/src/main/java/com/facebook/presto/memory/ClusterMemoryManager.java\nindex f0db01a..4cca809 100644\n--- a/presto-main/src/main/java/com/facebook/presto/memory/ClusterMemoryManager.java\n+++ b/presto-main/src/main/java/com/facebook/presto/memory/ClusterMemoryManager.java\n@@ -215,14 +215,14 @@\n         return ImmutableMap.copyOf(pools);\n     }\n \n-    private boolean isClusterOutOfMemory()\n+    private synchronized boolean isClusterOutOfMemory()\n     {\n         ClusterMemoryPool reservedPool = pools.get(RESERVED_POOL);\n         ClusterMemoryPool generalPool = pools.get(GENERAL_POOL);\n         return reservedPool != null && generalPool != null && reservedPool.getAssignedQueries() > 0 && generalPool.getBlockedNodes() > 0;\n     }\n \n-    private MemoryPoolAssignmentsRequest updateAssignments(Iterable<QueryExecution> queries)\n+    private synchronized MemoryPoolAssignmentsRequest updateAssignments(Iterable<QueryExecution> queries)\n     {\n         ClusterMemoryPool reservedPool = pools.get(RESERVED_POOL);\n         ClusterMemoryPool generalPool = pools.get(GENERAL_POOL);\n@@ -280,7 +280,7 @@\n \n     private void updateNodes(MemoryPoolAssignmentsRequest assignments)\n     {\n-        ImmutableSet.Builder builder = new ImmutableSet.Builder();\n+        ImmutableSet.Builder<Node> builder = ImmutableSet.builder();\n         Set<Node> aliveNodes = builder\n                 .addAll(nodeManager.getNodes(ACTIVE))\n                 .addAll(nodeManager.getNodes(SHUTTING_DOWN))\n", "projectName": "facebook.presto", "bugLineNum": 225, "bugNodeStartChar": 10274, "bugNodeLength": 1981, "fixLineNum": 225, "fixNodeStartChar": 10274, "fixNodeLength": 1994, "sourceBeforeFix": "2", "sourceAfterFix": "34"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "3847d03a4ac7e7f4e52bca451ddb5089a7402072", "fixCommitParentSHA1": "45484b163f343d8cf4b191efe35851e92ffe41ab", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\nindex d054b5c..4b203e4 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\n@@ -388,7 +388,7 @@\n         boolean needPostProjectionCoercion = false;\n         for (FunctionCall aggregate : analysis.getAggregates(node)) {\n             Expression rewritten = subPlan.rewrite(aggregate);\n-            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getTypeWithCoercions(aggregate));\n+            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getType(aggregate));\n \n             // TODO: this is a hack, because we apply coercions to the output of expressions, rather than the arguments to expressions.\n             // Therefore we can end up with this implicit cast, and have to move it into a post-projection\n@@ -567,7 +567,7 @@\n \n             // Rewrite function call in terms of pre-projected inputs\n             Expression rewritten = subPlan.rewrite(windowFunction);\n-            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getTypeWithCoercions(windowFunction));\n+            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getType(windowFunction));\n \n             boolean needCoercion = rewritten instanceof Cast;\n             // Strip out the cast and add it back as a post-projection\n", "projectName": "facebook.presto", "bugLineNum": 391, "bugNodeStartChar": 18132, "bugNodeLength": 40, "fixLineNum": 391, "fixNodeStartChar": 18132, "fixNodeLength": 27, "sourceBeforeFix": "analysis.getTypeWithCoercions(aggregate)", "sourceAfterFix": "analysis.getType(aggregate)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "3847d03a4ac7e7f4e52bca451ddb5089a7402072", "fixCommitParentSHA1": "45484b163f343d8cf4b191efe35851e92ffe41ab", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\nindex d054b5c..4b203e4 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\n@@ -388,7 +388,7 @@\n         boolean needPostProjectionCoercion = false;\n         for (FunctionCall aggregate : analysis.getAggregates(node)) {\n             Expression rewritten = subPlan.rewrite(aggregate);\n-            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getTypeWithCoercions(aggregate));\n+            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getType(aggregate));\n \n             // TODO: this is a hack, because we apply coercions to the output of expressions, rather than the arguments to expressions.\n             // Therefore we can end up with this implicit cast, and have to move it into a post-projection\n@@ -567,7 +567,7 @@\n \n             // Rewrite function call in terms of pre-projected inputs\n             Expression rewritten = subPlan.rewrite(windowFunction);\n-            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getTypeWithCoercions(windowFunction));\n+            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getType(windowFunction));\n \n             boolean needCoercion = rewritten instanceof Cast;\n             // Strip out the cast and add it back as a post-projection\n", "projectName": "facebook.presto", "bugLineNum": 391, "bugNodeStartChar": 18132, "bugNodeLength": 40, "fixLineNum": 391, "fixNodeStartChar": 18132, "fixNodeLength": 27, "sourceBeforeFix": "analysis.getTypeWithCoercions(aggregate)", "sourceAfterFix": "analysis.getType(aggregate)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "3847d03a4ac7e7f4e52bca451ddb5089a7402072", "fixCommitParentSHA1": "45484b163f343d8cf4b191efe35851e92ffe41ab", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\nindex d054b5c..4b203e4 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\n@@ -388,7 +388,7 @@\n         boolean needPostProjectionCoercion = false;\n         for (FunctionCall aggregate : analysis.getAggregates(node)) {\n             Expression rewritten = subPlan.rewrite(aggregate);\n-            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getTypeWithCoercions(aggregate));\n+            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getType(aggregate));\n \n             // TODO: this is a hack, because we apply coercions to the output of expressions, rather than the arguments to expressions.\n             // Therefore we can end up with this implicit cast, and have to move it into a post-projection\n@@ -567,7 +567,7 @@\n \n             // Rewrite function call in terms of pre-projected inputs\n             Expression rewritten = subPlan.rewrite(windowFunction);\n-            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getTypeWithCoercions(windowFunction));\n+            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getType(windowFunction));\n \n             boolean needCoercion = rewritten instanceof Cast;\n             // Strip out the cast and add it back as a post-projection\n", "projectName": "facebook.presto", "bugLineNum": 570, "bugNodeStartChar": 26835, "bugNodeLength": 45, "fixLineNum": 570, "fixNodeStartChar": 26835, "fixNodeLength": 32, "sourceBeforeFix": "analysis.getTypeWithCoercions(windowFunction)", "sourceAfterFix": "analysis.getType(windowFunction)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "3847d03a4ac7e7f4e52bca451ddb5089a7402072", "fixCommitParentSHA1": "45484b163f343d8cf4b191efe35851e92ffe41ab", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\nindex d054b5c..4b203e4 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\n@@ -388,7 +388,7 @@\n         boolean needPostProjectionCoercion = false;\n         for (FunctionCall aggregate : analysis.getAggregates(node)) {\n             Expression rewritten = subPlan.rewrite(aggregate);\n-            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getTypeWithCoercions(aggregate));\n+            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getType(aggregate));\n \n             // TODO: this is a hack, because we apply coercions to the output of expressions, rather than the arguments to expressions.\n             // Therefore we can end up with this implicit cast, and have to move it into a post-projection\n@@ -567,7 +567,7 @@\n \n             // Rewrite function call in terms of pre-projected inputs\n             Expression rewritten = subPlan.rewrite(windowFunction);\n-            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getTypeWithCoercions(windowFunction));\n+            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getType(windowFunction));\n \n             boolean needCoercion = rewritten instanceof Cast;\n             // Strip out the cast and add it back as a post-projection\n", "projectName": "facebook.presto", "bugLineNum": 570, "bugNodeStartChar": 26835, "bugNodeLength": 45, "fixLineNum": 570, "fixNodeStartChar": 26835, "fixNodeLength": 32, "sourceBeforeFix": "analysis.getTypeWithCoercions(windowFunction)", "sourceAfterFix": "analysis.getType(windowFunction)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "d725e4c654270636bc7de92cc6d74683b1de29fe", "fixCommitParentSHA1": "2289bf56b2278c6145badc6cf53e4a919a79c661", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\nindex bc58b3e..d054b5c 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\n@@ -388,7 +388,7 @@\n         boolean needPostProjectionCoercion = false;\n         for (FunctionCall aggregate : analysis.getAggregates(node)) {\n             Expression rewritten = subPlan.rewrite(aggregate);\n-            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getType(aggregate));\n+            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getTypeWithCoercions(aggregate));\n \n             // TODO: this is a hack, because we apply coercions to the output of expressions, rather than the arguments to expressions.\n             // Therefore we can end up with this implicit cast, and have to move it into a post-projection\n@@ -567,7 +567,7 @@\n \n             // Rewrite function call in terms of pre-projected inputs\n             Expression rewritten = subPlan.rewrite(windowFunction);\n-            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getType(windowFunction));\n+            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getTypeWithCoercions(windowFunction));\n \n             boolean needCoercion = rewritten instanceof Cast;\n             // Strip out the cast and add it back as a post-projection\n@@ -621,7 +621,7 @@\n \n         ImmutableMap.Builder<Symbol, Expression> newTranslations = ImmutableMap.builder();\n         for (Expression expression : expressions) {\n-            Symbol symbol = symbolAllocator.newSymbol(expression, analysis.getType(expression));\n+            Symbol symbol = symbolAllocator.newSymbol(expression, analysis.getTypeWithCoercions(expression));\n \n             projections.put(symbol, translations.rewrite(expression));\n             newTranslations.put(symbol, expression);\n", "projectName": "facebook.presto", "bugLineNum": 391, "bugNodeStartChar": 18132, "bugNodeLength": 27, "fixLineNum": 391, "fixNodeStartChar": 18132, "fixNodeLength": 40, "sourceBeforeFix": "analysis.getType(aggregate)", "sourceAfterFix": "analysis.getTypeWithCoercions(aggregate)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d725e4c654270636bc7de92cc6d74683b1de29fe", "fixCommitParentSHA1": "2289bf56b2278c6145badc6cf53e4a919a79c661", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\nindex bc58b3e..d054b5c 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\n@@ -388,7 +388,7 @@\n         boolean needPostProjectionCoercion = false;\n         for (FunctionCall aggregate : analysis.getAggregates(node)) {\n             Expression rewritten = subPlan.rewrite(aggregate);\n-            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getType(aggregate));\n+            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getTypeWithCoercions(aggregate));\n \n             // TODO: this is a hack, because we apply coercions to the output of expressions, rather than the arguments to expressions.\n             // Therefore we can end up with this implicit cast, and have to move it into a post-projection\n@@ -567,7 +567,7 @@\n \n             // Rewrite function call in terms of pre-projected inputs\n             Expression rewritten = subPlan.rewrite(windowFunction);\n-            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getType(windowFunction));\n+            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getTypeWithCoercions(windowFunction));\n \n             boolean needCoercion = rewritten instanceof Cast;\n             // Strip out the cast and add it back as a post-projection\n@@ -621,7 +621,7 @@\n \n         ImmutableMap.Builder<Symbol, Expression> newTranslations = ImmutableMap.builder();\n         for (Expression expression : expressions) {\n-            Symbol symbol = symbolAllocator.newSymbol(expression, analysis.getType(expression));\n+            Symbol symbol = symbolAllocator.newSymbol(expression, analysis.getTypeWithCoercions(expression));\n \n             projections.put(symbol, translations.rewrite(expression));\n             newTranslations.put(symbol, expression);\n", "projectName": "facebook.presto", "bugLineNum": 391, "bugNodeStartChar": 18132, "bugNodeLength": 27, "fixLineNum": 391, "fixNodeStartChar": 18132, "fixNodeLength": 40, "sourceBeforeFix": "analysis.getType(aggregate)", "sourceAfterFix": "analysis.getTypeWithCoercions(aggregate)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "d725e4c654270636bc7de92cc6d74683b1de29fe", "fixCommitParentSHA1": "2289bf56b2278c6145badc6cf53e4a919a79c661", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\nindex bc58b3e..d054b5c 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\n@@ -388,7 +388,7 @@\n         boolean needPostProjectionCoercion = false;\n         for (FunctionCall aggregate : analysis.getAggregates(node)) {\n             Expression rewritten = subPlan.rewrite(aggregate);\n-            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getType(aggregate));\n+            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getTypeWithCoercions(aggregate));\n \n             // TODO: this is a hack, because we apply coercions to the output of expressions, rather than the arguments to expressions.\n             // Therefore we can end up with this implicit cast, and have to move it into a post-projection\n@@ -567,7 +567,7 @@\n \n             // Rewrite function call in terms of pre-projected inputs\n             Expression rewritten = subPlan.rewrite(windowFunction);\n-            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getType(windowFunction));\n+            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getTypeWithCoercions(windowFunction));\n \n             boolean needCoercion = rewritten instanceof Cast;\n             // Strip out the cast and add it back as a post-projection\n@@ -621,7 +621,7 @@\n \n         ImmutableMap.Builder<Symbol, Expression> newTranslations = ImmutableMap.builder();\n         for (Expression expression : expressions) {\n-            Symbol symbol = symbolAllocator.newSymbol(expression, analysis.getType(expression));\n+            Symbol symbol = symbolAllocator.newSymbol(expression, analysis.getTypeWithCoercions(expression));\n \n             projections.put(symbol, translations.rewrite(expression));\n             newTranslations.put(symbol, expression);\n", "projectName": "facebook.presto", "bugLineNum": 570, "bugNodeStartChar": 26822, "bugNodeLength": 32, "fixLineNum": 570, "fixNodeStartChar": 26822, "fixNodeLength": 45, "sourceBeforeFix": "analysis.getType(windowFunction)", "sourceAfterFix": "analysis.getTypeWithCoercions(windowFunction)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d725e4c654270636bc7de92cc6d74683b1de29fe", "fixCommitParentSHA1": "2289bf56b2278c6145badc6cf53e4a919a79c661", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\nindex bc58b3e..d054b5c 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\n@@ -388,7 +388,7 @@\n         boolean needPostProjectionCoercion = false;\n         for (FunctionCall aggregate : analysis.getAggregates(node)) {\n             Expression rewritten = subPlan.rewrite(aggregate);\n-            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getType(aggregate));\n+            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getTypeWithCoercions(aggregate));\n \n             // TODO: this is a hack, because we apply coercions to the output of expressions, rather than the arguments to expressions.\n             // Therefore we can end up with this implicit cast, and have to move it into a post-projection\n@@ -567,7 +567,7 @@\n \n             // Rewrite function call in terms of pre-projected inputs\n             Expression rewritten = subPlan.rewrite(windowFunction);\n-            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getType(windowFunction));\n+            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getTypeWithCoercions(windowFunction));\n \n             boolean needCoercion = rewritten instanceof Cast;\n             // Strip out the cast and add it back as a post-projection\n@@ -621,7 +621,7 @@\n \n         ImmutableMap.Builder<Symbol, Expression> newTranslations = ImmutableMap.builder();\n         for (Expression expression : expressions) {\n-            Symbol symbol = symbolAllocator.newSymbol(expression, analysis.getType(expression));\n+            Symbol symbol = symbolAllocator.newSymbol(expression, analysis.getTypeWithCoercions(expression));\n \n             projections.put(symbol, translations.rewrite(expression));\n             newTranslations.put(symbol, expression);\n", "projectName": "facebook.presto", "bugLineNum": 570, "bugNodeStartChar": 26822, "bugNodeLength": 32, "fixLineNum": 570, "fixNodeStartChar": 26822, "fixNodeLength": 45, "sourceBeforeFix": "analysis.getType(windowFunction)", "sourceAfterFix": "analysis.getTypeWithCoercions(windowFunction)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "d725e4c654270636bc7de92cc6d74683b1de29fe", "fixCommitParentSHA1": "2289bf56b2278c6145badc6cf53e4a919a79c661", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\nindex bc58b3e..d054b5c 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\n@@ -388,7 +388,7 @@\n         boolean needPostProjectionCoercion = false;\n         for (FunctionCall aggregate : analysis.getAggregates(node)) {\n             Expression rewritten = subPlan.rewrite(aggregate);\n-            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getType(aggregate));\n+            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getTypeWithCoercions(aggregate));\n \n             // TODO: this is a hack, because we apply coercions to the output of expressions, rather than the arguments to expressions.\n             // Therefore we can end up with this implicit cast, and have to move it into a post-projection\n@@ -567,7 +567,7 @@\n \n             // Rewrite function call in terms of pre-projected inputs\n             Expression rewritten = subPlan.rewrite(windowFunction);\n-            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getType(windowFunction));\n+            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getTypeWithCoercions(windowFunction));\n \n             boolean needCoercion = rewritten instanceof Cast;\n             // Strip out the cast and add it back as a post-projection\n@@ -621,7 +621,7 @@\n \n         ImmutableMap.Builder<Symbol, Expression> newTranslations = ImmutableMap.builder();\n         for (Expression expression : expressions) {\n-            Symbol symbol = symbolAllocator.newSymbol(expression, analysis.getType(expression));\n+            Symbol symbol = symbolAllocator.newSymbol(expression, analysis.getTypeWithCoercions(expression));\n \n             projections.put(symbol, translations.rewrite(expression));\n             newTranslations.put(symbol, expression);\n", "projectName": "facebook.presto", "bugLineNum": 624, "bugNodeStartChar": 29163, "bugNodeLength": 28, "fixLineNum": 624, "fixNodeStartChar": 29163, "fixNodeLength": 41, "sourceBeforeFix": "analysis.getType(expression)", "sourceAfterFix": "analysis.getTypeWithCoercions(expression)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d725e4c654270636bc7de92cc6d74683b1de29fe", "fixCommitParentSHA1": "2289bf56b2278c6145badc6cf53e4a919a79c661", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\nindex bc58b3e..d054b5c 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\n@@ -388,7 +388,7 @@\n         boolean needPostProjectionCoercion = false;\n         for (FunctionCall aggregate : analysis.getAggregates(node)) {\n             Expression rewritten = subPlan.rewrite(aggregate);\n-            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getType(aggregate));\n+            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getTypeWithCoercions(aggregate));\n \n             // TODO: this is a hack, because we apply coercions to the output of expressions, rather than the arguments to expressions.\n             // Therefore we can end up with this implicit cast, and have to move it into a post-projection\n@@ -567,7 +567,7 @@\n \n             // Rewrite function call in terms of pre-projected inputs\n             Expression rewritten = subPlan.rewrite(windowFunction);\n-            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getType(windowFunction));\n+            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getTypeWithCoercions(windowFunction));\n \n             boolean needCoercion = rewritten instanceof Cast;\n             // Strip out the cast and add it back as a post-projection\n@@ -621,7 +621,7 @@\n \n         ImmutableMap.Builder<Symbol, Expression> newTranslations = ImmutableMap.builder();\n         for (Expression expression : expressions) {\n-            Symbol symbol = symbolAllocator.newSymbol(expression, analysis.getType(expression));\n+            Symbol symbol = symbolAllocator.newSymbol(expression, analysis.getTypeWithCoercions(expression));\n \n             projections.put(symbol, translations.rewrite(expression));\n             newTranslations.put(symbol, expression);\n", "projectName": "facebook.presto", "bugLineNum": 624, "bugNodeStartChar": 29163, "bugNodeLength": 28, "fixLineNum": 624, "fixNodeStartChar": 29163, "fixNodeLength": 41, "sourceBeforeFix": "analysis.getType(expression)", "sourceAfterFix": "analysis.getTypeWithCoercions(expression)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "2550e5ecb1c46c686be452f0e541628f8b4102b2", "fixCommitParentSHA1": "3b997675e7d29feb02bedb40d9c4b248a170ad9e", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/execution/TaskManagerConfig.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/TaskManagerConfig.java b/presto-main/src/main/java/com/facebook/presto/execution/TaskManagerConfig.java\nindex e86d2f5..8a0e21c 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/TaskManagerConfig.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/TaskManagerConfig.java\n@@ -222,7 +222,7 @@\n     @NotNull\n     public DataSize getMaxPagePartitioningBufferSize()\n     {\n-        return sinkMaxBufferSize;\n+        return maxPagePartitioningBufferSize;\n     }\n \n     @Config(\"driver.max-page-partitioning-buffer-size\")\n", "projectName": "facebook.presto", "bugLineNum": 225, "bugNodeStartChar": 6715, "bugNodeLength": 25, "fixLineNum": 225, "fixNodeStartChar": 6715, "fixNodeLength": 37, "sourceBeforeFix": "return sinkMaxBufferSize; ", "sourceAfterFix": "return maxPagePartitioningBufferSize; "}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "2550e5ecb1c46c686be452f0e541628f8b4102b2", "fixCommitParentSHA1": "3b997675e7d29feb02bedb40d9c4b248a170ad9e", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/execution/TestTaskManagerConfig.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/execution/TestTaskManagerConfig.java b/presto-main/src/test/java/com/facebook/presto/execution/TestTaskManagerConfig.java\nindex 7819961..2afa00f 100644\n--- a/presto-main/src/test/java/com/facebook/presto/execution/TestTaskManagerConfig.java\n+++ b/presto-main/src/test/java/com/facebook/presto/execution/TestTaskManagerConfig.java\n@@ -97,7 +97,7 @@\n                 .setInfoMaxAge(new Duration(22, TimeUnit.MINUTES))\n                 .setClientTimeout(new Duration(10, TimeUnit.SECONDS))\n                 .setSinkMaxBufferSize(new DataSize(42, Unit.MEGABYTE))\n-                .setMaxPagePartitioningBufferSize(new DataSize(42, Unit.MEGABYTE))\n+                .setMaxPagePartitioningBufferSize(new DataSize(40, Unit.MEGABYTE))\n                 .setWriterCount(3)\n                 .setTaskDefaultConcurrency(7)\n                 .setTaskJoinConcurrency(8)\n", "projectName": "facebook.presto", "bugLineNum": 100, "bugNodeStartChar": 4965, "bugNodeLength": 31, "fixLineNum": 100, "fixNodeStartChar": 4965, "fixNodeLength": 31, "sourceBeforeFix": "new DataSize(42,Unit.MEGABYTE)", "sourceAfterFix": "new DataSize(40,Unit.MEGABYTE)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "fd2bf7d972c703a603f7ec043b96649347f7e184", "fixCommitParentSHA1": "a20abd12dbb360d5269e63185b1056ae3b5909a7", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/server/CoordinatorModule.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/server/CoordinatorModule.java b/presto-main/src/main/java/com/facebook/presto/server/CoordinatorModule.java\nindex 72d86e5..b53bad2 100644\n--- a/presto-main/src/main/java/com/facebook/presto/server/CoordinatorModule.java\n+++ b/presto-main/src/main/java/com/facebook/presto/server/CoordinatorModule.java\n@@ -162,7 +162,7 @@\n         httpClientBinder(binder).bindHttpClient(\"node-manager\", ForGracefulShutdown.class)\n                 .withTracing()\n                 .withConfigDefaults(config -> {\n-                    config.setIdleTimeout(new Duration(2, SECONDS));\n+                    config.setIdleTimeout(new Duration(30, SECONDS));\n                     config.setRequestTimeout(new Duration(10, SECONDS));\n                 });\n \n", "projectName": "facebook.presto", "bugLineNum": 165, "bugNodeStartChar": 8056, "bugNodeLength": 24, "fixLineNum": 165, "fixNodeStartChar": 8056, "fixNodeLength": 25, "sourceBeforeFix": "new Duration(2,SECONDS)", "sourceAfterFix": "new Duration(30,SECONDS)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "fd2bf7d972c703a603f7ec043b96649347f7e184", "fixCommitParentSHA1": "a20abd12dbb360d5269e63185b1056ae3b5909a7", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/server/ServerMainModule.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/server/ServerMainModule.java b/presto-main/src/main/java/com/facebook/presto/server/ServerMainModule.java\nindex 30d74dc..013f482 100644\n--- a/presto-main/src/main/java/com/facebook/presto/server/ServerMainModule.java\n+++ b/presto-main/src/main/java/com/facebook/presto/server/ServerMainModule.java\n@@ -199,7 +199,7 @@\n         httpClientBinder(binder).bindHttpClient(\"exchange\", ForExchange.class)\n                 .withTracing()\n                 .withConfigDefaults(config -> {\n-                    config.setIdleTimeout(new Duration(2, SECONDS));\n+                    config.setIdleTimeout(new Duration(30, SECONDS));\n                     config.setRequestTimeout(new Duration(10, SECONDS));\n                     config.setMaxConnectionsPerServer(250);\n                 });\n@@ -219,7 +219,7 @@\n         httpClientBinder(binder).bindHttpClient(\"scheduler\", ForScheduler.class)\n                 .withTracing()\n                 .withConfigDefaults(config -> {\n-                    config.setIdleTimeout(new Duration(2, SECONDS));\n+                    config.setIdleTimeout(new Duration(30, SECONDS));\n                     config.setRequestTimeout(new Duration(10, SECONDS));\n                     config.setMaxConnectionsPerServer(250);\n                 });\n@@ -229,7 +229,7 @@\n         httpClientBinder(binder).bindHttpClient(\"memoryManager\", ForMemoryManager.class)\n                 .withTracing()\n                 .withConfigDefaults(config -> {\n-                    config.setIdleTimeout(new Duration(2, SECONDS));\n+                    config.setIdleTimeout(new Duration(30, SECONDS));\n                     config.setRequestTimeout(new Duration(10, SECONDS));\n                 });\n \n@@ -316,7 +316,7 @@\n         httpClientBinder(binder).bindHttpClient(\"execute\", ForExecute.class)\n                 .withTracing()\n                 .withConfigDefaults(config -> {\n-                    config.setIdleTimeout(new Duration(2, SECONDS));\n+                    config.setIdleTimeout(new Duration(30, SECONDS));\n                     config.setRequestTimeout(new Duration(10, SECONDS));\n                 });\n \n", "projectName": "facebook.presto", "bugLineNum": 202, "bugNodeStartChar": 10146, "bugNodeLength": 24, "fixLineNum": 202, "fixNodeStartChar": 10146, "fixNodeLength": 25, "sourceBeforeFix": "new Duration(2,SECONDS)", "sourceAfterFix": "new Duration(30,SECONDS)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "fd2bf7d972c703a603f7ec043b96649347f7e184", "fixCommitParentSHA1": "a20abd12dbb360d5269e63185b1056ae3b5909a7", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/server/ServerMainModule.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/server/ServerMainModule.java b/presto-main/src/main/java/com/facebook/presto/server/ServerMainModule.java\nindex 30d74dc..013f482 100644\n--- a/presto-main/src/main/java/com/facebook/presto/server/ServerMainModule.java\n+++ b/presto-main/src/main/java/com/facebook/presto/server/ServerMainModule.java\n@@ -199,7 +199,7 @@\n         httpClientBinder(binder).bindHttpClient(\"exchange\", ForExchange.class)\n                 .withTracing()\n                 .withConfigDefaults(config -> {\n-                    config.setIdleTimeout(new Duration(2, SECONDS));\n+                    config.setIdleTimeout(new Duration(30, SECONDS));\n                     config.setRequestTimeout(new Duration(10, SECONDS));\n                     config.setMaxConnectionsPerServer(250);\n                 });\n@@ -219,7 +219,7 @@\n         httpClientBinder(binder).bindHttpClient(\"scheduler\", ForScheduler.class)\n                 .withTracing()\n                 .withConfigDefaults(config -> {\n-                    config.setIdleTimeout(new Duration(2, SECONDS));\n+                    config.setIdleTimeout(new Duration(30, SECONDS));\n                     config.setRequestTimeout(new Duration(10, SECONDS));\n                     config.setMaxConnectionsPerServer(250);\n                 });\n@@ -229,7 +229,7 @@\n         httpClientBinder(binder).bindHttpClient(\"memoryManager\", ForMemoryManager.class)\n                 .withTracing()\n                 .withConfigDefaults(config -> {\n-                    config.setIdleTimeout(new Duration(2, SECONDS));\n+                    config.setIdleTimeout(new Duration(30, SECONDS));\n                     config.setRequestTimeout(new Duration(10, SECONDS));\n                 });\n \n@@ -316,7 +316,7 @@\n         httpClientBinder(binder).bindHttpClient(\"execute\", ForExecute.class)\n                 .withTracing()\n                 .withConfigDefaults(config -> {\n-                    config.setIdleTimeout(new Duration(2, SECONDS));\n+                    config.setIdleTimeout(new Duration(30, SECONDS));\n                     config.setRequestTimeout(new Duration(10, SECONDS));\n                 });\n \n", "projectName": "facebook.presto", "bugLineNum": 222, "bugNodeStartChar": 11199, "bugNodeLength": 24, "fixLineNum": 222, "fixNodeStartChar": 11199, "fixNodeLength": 25, "sourceBeforeFix": "new Duration(2,SECONDS)", "sourceAfterFix": "new Duration(30,SECONDS)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "fd2bf7d972c703a603f7ec043b96649347f7e184", "fixCommitParentSHA1": "a20abd12dbb360d5269e63185b1056ae3b5909a7", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/server/ServerMainModule.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/server/ServerMainModule.java b/presto-main/src/main/java/com/facebook/presto/server/ServerMainModule.java\nindex 30d74dc..013f482 100644\n--- a/presto-main/src/main/java/com/facebook/presto/server/ServerMainModule.java\n+++ b/presto-main/src/main/java/com/facebook/presto/server/ServerMainModule.java\n@@ -199,7 +199,7 @@\n         httpClientBinder(binder).bindHttpClient(\"exchange\", ForExchange.class)\n                 .withTracing()\n                 .withConfigDefaults(config -> {\n-                    config.setIdleTimeout(new Duration(2, SECONDS));\n+                    config.setIdleTimeout(new Duration(30, SECONDS));\n                     config.setRequestTimeout(new Duration(10, SECONDS));\n                     config.setMaxConnectionsPerServer(250);\n                 });\n@@ -219,7 +219,7 @@\n         httpClientBinder(binder).bindHttpClient(\"scheduler\", ForScheduler.class)\n                 .withTracing()\n                 .withConfigDefaults(config -> {\n-                    config.setIdleTimeout(new Duration(2, SECONDS));\n+                    config.setIdleTimeout(new Duration(30, SECONDS));\n                     config.setRequestTimeout(new Duration(10, SECONDS));\n                     config.setMaxConnectionsPerServer(250);\n                 });\n@@ -229,7 +229,7 @@\n         httpClientBinder(binder).bindHttpClient(\"memoryManager\", ForMemoryManager.class)\n                 .withTracing()\n                 .withConfigDefaults(config -> {\n-                    config.setIdleTimeout(new Duration(2, SECONDS));\n+                    config.setIdleTimeout(new Duration(30, SECONDS));\n                     config.setRequestTimeout(new Duration(10, SECONDS));\n                 });\n \n@@ -316,7 +316,7 @@\n         httpClientBinder(binder).bindHttpClient(\"execute\", ForExecute.class)\n                 .withTracing()\n                 .withConfigDefaults(config -> {\n-                    config.setIdleTimeout(new Duration(2, SECONDS));\n+                    config.setIdleTimeout(new Duration(30, SECONDS));\n                     config.setRequestTimeout(new Duration(10, SECONDS));\n                 });\n \n", "projectName": "facebook.presto", "bugLineNum": 232, "bugNodeStartChar": 11672, "bugNodeLength": 24, "fixLineNum": 232, "fixNodeStartChar": 11672, "fixNodeLength": 25, "sourceBeforeFix": "new Duration(2,SECONDS)", "sourceAfterFix": "new Duration(30,SECONDS)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "fd2bf7d972c703a603f7ec043b96649347f7e184", "fixCommitParentSHA1": "a20abd12dbb360d5269e63185b1056ae3b5909a7", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/server/ServerMainModule.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/server/ServerMainModule.java b/presto-main/src/main/java/com/facebook/presto/server/ServerMainModule.java\nindex 30d74dc..013f482 100644\n--- a/presto-main/src/main/java/com/facebook/presto/server/ServerMainModule.java\n+++ b/presto-main/src/main/java/com/facebook/presto/server/ServerMainModule.java\n@@ -199,7 +199,7 @@\n         httpClientBinder(binder).bindHttpClient(\"exchange\", ForExchange.class)\n                 .withTracing()\n                 .withConfigDefaults(config -> {\n-                    config.setIdleTimeout(new Duration(2, SECONDS));\n+                    config.setIdleTimeout(new Duration(30, SECONDS));\n                     config.setRequestTimeout(new Duration(10, SECONDS));\n                     config.setMaxConnectionsPerServer(250);\n                 });\n@@ -219,7 +219,7 @@\n         httpClientBinder(binder).bindHttpClient(\"scheduler\", ForScheduler.class)\n                 .withTracing()\n                 .withConfigDefaults(config -> {\n-                    config.setIdleTimeout(new Duration(2, SECONDS));\n+                    config.setIdleTimeout(new Duration(30, SECONDS));\n                     config.setRequestTimeout(new Duration(10, SECONDS));\n                     config.setMaxConnectionsPerServer(250);\n                 });\n@@ -229,7 +229,7 @@\n         httpClientBinder(binder).bindHttpClient(\"memoryManager\", ForMemoryManager.class)\n                 .withTracing()\n                 .withConfigDefaults(config -> {\n-                    config.setIdleTimeout(new Duration(2, SECONDS));\n+                    config.setIdleTimeout(new Duration(30, SECONDS));\n                     config.setRequestTimeout(new Duration(10, SECONDS));\n                 });\n \n@@ -316,7 +316,7 @@\n         httpClientBinder(binder).bindHttpClient(\"execute\", ForExecute.class)\n                 .withTracing()\n                 .withConfigDefaults(config -> {\n-                    config.setIdleTimeout(new Duration(2, SECONDS));\n+                    config.setIdleTimeout(new Duration(30, SECONDS));\n                     config.setRequestTimeout(new Duration(10, SECONDS));\n                 });\n \n", "projectName": "facebook.presto", "bugLineNum": 319, "bugNodeStartChar": 15899, "bugNodeLength": 24, "fixLineNum": 319, "fixNodeStartChar": 15899, "fixNodeLength": 25, "sourceBeforeFix": "new Duration(2,SECONDS)", "sourceAfterFix": "new Duration(30,SECONDS)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "80ca2800f5bb9e41e5aefa7766d91e6695a89020", "fixCommitParentSHA1": "700ca10f6a4ae86fd3886db6312130901598f202", "bugFilePath": "presto-raptor/src/test/java/com/facebook/presto/raptor/metadata/TestRaptorMetadata.java", "fixPatch": "diff --git a/presto-raptor/src/test/java/com/facebook/presto/raptor/metadata/TestRaptorMetadata.java b/presto-raptor/src/test/java/com/facebook/presto/raptor/metadata/TestRaptorMetadata.java\nindex 0e700db..613bc44 100644\n--- a/presto-raptor/src/test/java/com/facebook/presto/raptor/metadata/TestRaptorMetadata.java\n+++ b/presto-raptor/src/test/java/com/facebook/presto/raptor/metadata/TestRaptorMetadata.java\n@@ -687,7 +687,7 @@\n         return buildTable(properties, tableMetadataBuilder(DEFAULT_TEST_LINEITEMS)\n                 .column(\"orderkey\", BIGINT)\n                 .column(\"partkey\", BIGINT)\n-                .column(\"quantity\", BIGINT)\n+                .column(\"quantity\", DOUBLE)\n                 .column(\"price\", DOUBLE));\n     }\n \n", "projectName": "facebook.presto", "bugLineNum": 687, "bugNodeStartChar": 29471, "bugNodeLength": 175, "fixLineNum": 687, "fixNodeStartChar": 29471, "fixNodeLength": 175, "sourceBeforeFix": "tableMetadataBuilder(DEFAULT_TEST_LINEITEMS).column(\"orderkey\",BIGINT).column(\"partkey\",BIGINT).column(\"quantity\",BIGINT)", "sourceAfterFix": "tableMetadataBuilder(DEFAULT_TEST_LINEITEMS).column(\"orderkey\",BIGINT).column(\"partkey\",BIGINT).column(\"quantity\",DOUBLE)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "1b93a2f8d9a40a28615c3acc0c6415d678e26466", "fixCommitParentSHA1": "040461ab16448b320d9193e7f88389e636c68caa", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/execution/QueryStateMachine.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/QueryStateMachine.java b/presto-main/src/main/java/com/facebook/presto/execution/QueryStateMachine.java\nindex e3a28ac..6a78a0f 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/QueryStateMachine.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/QueryStateMachine.java\n@@ -507,7 +507,7 @@\n         failureCause.compareAndSet(null, toFailure(throwable));\n         boolean failed = queryState.setIf(FAILED, currentState -> !currentState.isDone());\n         if (failed) {\n-            log.error(throwable, \"Query %s failed\", queryId);\n+            log.debug(throwable, \"Query %s failed\", queryId);\n         }\n         else {\n             log.debug(throwable, \"Failure after query %s finished\", queryId);\n", "projectName": "facebook.presto", "bugLineNum": 510, "bugNodeStartChar": 20518, "bugNodeLength": 48, "fixLineNum": 510, "fixNodeStartChar": 20518, "fixNodeLength": 48, "sourceBeforeFix": "log.error(throwable,\"Query %s failed\",queryId)", "sourceAfterFix": "log.debug(throwable,\"Query %s failed\",queryId)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "1b93a2f8d9a40a28615c3acc0c6415d678e26466", "fixCommitParentSHA1": "040461ab16448b320d9193e7f88389e636c68caa", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/execution/QueryStateMachine.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/QueryStateMachine.java b/presto-main/src/main/java/com/facebook/presto/execution/QueryStateMachine.java\nindex e3a28ac..6a78a0f 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/QueryStateMachine.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/QueryStateMachine.java\n@@ -507,7 +507,7 @@\n         failureCause.compareAndSet(null, toFailure(throwable));\n         boolean failed = queryState.setIf(FAILED, currentState -> !currentState.isDone());\n         if (failed) {\n-            log.error(throwable, \"Query %s failed\", queryId);\n+            log.debug(throwable, \"Query %s failed\", queryId);\n         }\n         else {\n             log.debug(throwable, \"Failure after query %s finished\", queryId);\n", "projectName": "facebook.presto", "bugLineNum": 510, "bugNodeStartChar": 20518, "bugNodeLength": 48, "fixLineNum": 510, "fixNodeStartChar": 20518, "fixNodeLength": 48, "sourceBeforeFix": "log.error(throwable,\"Query %s failed\",queryId)", "sourceAfterFix": "log.debug(throwable,\"Query %s failed\",queryId)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "adfcb4891e9193c5e0c92f60a7de75d4ca3f6a9d", "fixCommitParentSHA1": "293bad52c98d0a39df17ffce01837ca0bd3f7eda", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/HashGenerationOptimizer.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/HashGenerationOptimizer.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/HashGenerationOptimizer.java\nindex 7e7d25f..01cb07d 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/HashGenerationOptimizer.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/HashGenerationOptimizer.java\n@@ -617,7 +617,7 @@\n \n             // return only hash symbols that are passed through the new node\n             Map<HashComputation, Symbol> hashSymbols = new HashMap<>(source.getHashSymbols());\n-            hashSymbols.keySet().retainAll(result.getOutputSymbols());\n+            hashSymbols.values().retainAll(result.getOutputSymbols());\n \n             return new PlanWithProperties(result, hashSymbols);\n         }\n", "projectName": "facebook.presto", "bugLineNum": 620, "bugNodeStartChar": 32173, "bugNodeLength": 20, "fixLineNum": 620, "fixNodeStartChar": 32173, "fixNodeLength": 20, "sourceBeforeFix": "hashSymbols.keySet()", "sourceAfterFix": "hashSymbols.values()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "adfcb4891e9193c5e0c92f60a7de75d4ca3f6a9d", "fixCommitParentSHA1": "293bad52c98d0a39df17ffce01837ca0bd3f7eda", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/HashGenerationOptimizer.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/HashGenerationOptimizer.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/HashGenerationOptimizer.java\nindex 7e7d25f..01cb07d 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/HashGenerationOptimizer.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/HashGenerationOptimizer.java\n@@ -617,7 +617,7 @@\n \n             // return only hash symbols that are passed through the new node\n             Map<HashComputation, Symbol> hashSymbols = new HashMap<>(source.getHashSymbols());\n-            hashSymbols.keySet().retainAll(result.getOutputSymbols());\n+            hashSymbols.values().retainAll(result.getOutputSymbols());\n \n             return new PlanWithProperties(result, hashSymbols);\n         }\n", "projectName": "facebook.presto", "bugLineNum": 620, "bugNodeStartChar": 32173, "bugNodeLength": 20, "fixLineNum": 620, "fixNodeStartChar": 32173, "fixNodeLength": 20, "sourceBeforeFix": "hashSymbols.keySet()", "sourceAfterFix": "hashSymbols.values()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "bfffe6afb376df07702965da9106062f5fa47e22", "fixCommitParentSHA1": "be13ae3f79efb90e3d1832b21984edf45a73f3df", "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSessionProperties.java", "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveSessionProperties.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveSessionProperties.java\nindex 833afdd..b780e41 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveSessionProperties.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveSessionProperties.java\n@@ -59,7 +59,7 @@\n                 dataSizeSessionProperty(\n                         ORC_STREAM_BUFFER_SIZE,\n                         \"ORC: Size of buffer for streaming reads\",\n-                        config.getOrcMaxBufferSize(),\n+                        config.getOrcStreamBufferSize(),\n                         false),\n                 booleanSessionProperty(\n                         PARQUET_OPTIMIZED_READER_ENABLED,\n", "projectName": "facebook.presto", "bugLineNum": 62, "bugNodeStartChar": 2795, "bugNodeLength": 28, "fixLineNum": 62, "fixNodeStartChar": 2795, "fixNodeLength": 31, "sourceBeforeFix": "config.getOrcMaxBufferSize()", "sourceAfterFix": "config.getOrcStreamBufferSize()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "bfffe6afb376df07702965da9106062f5fa47e22", "fixCommitParentSHA1": "be13ae3f79efb90e3d1832b21984edf45a73f3df", "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSessionProperties.java", "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveSessionProperties.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveSessionProperties.java\nindex 833afdd..b780e41 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveSessionProperties.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveSessionProperties.java\n@@ -59,7 +59,7 @@\n                 dataSizeSessionProperty(\n                         ORC_STREAM_BUFFER_SIZE,\n                         \"ORC: Size of buffer for streaming reads\",\n-                        config.getOrcMaxBufferSize(),\n+                        config.getOrcStreamBufferSize(),\n                         false),\n                 booleanSessionProperty(\n                         PARQUET_OPTIMIZED_READER_ENABLED,\n", "projectName": "facebook.presto", "bugLineNum": 62, "bugNodeStartChar": 2795, "bugNodeLength": 28, "fixLineNum": 62, "fixNodeStartChar": 2795, "fixNodeLength": 31, "sourceBeforeFix": "config.getOrcMaxBufferSize()", "sourceAfterFix": "config.getOrcStreamBufferSize()"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "cadd7cc57026a1f9991d2d90270a7aacbd0a7aa2", "fixCommitParentSHA1": "7ae9267c59ce022c0b19effb4a941d91bcf79444", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java b/presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java\nindex 3805c10..8b290e5 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java\n@@ -275,9 +275,9 @@\n         lastUpdate = DateTime.now();\n     }\n \n-    private void sendGetResults()\n+    private synchronized void sendGetResults()\n     {\n-        final URI uri = HttpUriBuilder.uriBuilderFrom(location).appendPath(String.valueOf(token)).build();\n+        URI uri = HttpUriBuilder.uriBuilderFrom(location).appendPath(String.valueOf(token)).build();\n         HttpResponseFuture<PagesResponse> resultFuture = httpClient.executeAsync(\n                 prepareGet()\n                         .setHeader(PRESTO_MAX_SIZE, maxResponseSize.toString())\n@@ -359,7 +359,7 @@\n         }, executor);\n     }\n \n-    private void sendDelete()\n+    private synchronized void sendDelete()\n     {\n         HttpResponseFuture<StatusResponse> resultFuture = httpClient.executeAsync(prepareDelete().setUri(location).build(), createStatusResponseHandler());\n         future = resultFuture;\n", "projectName": "facebook.presto", "bugLineNum": 278, "bugNodeStartChar": 9876, "bugNodeLength": 3353, "fixLineNum": 278, "fixNodeStartChar": 9876, "fixNodeLength": 3366, "sourceBeforeFix": "2", "sourceAfterFix": "34"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "cadd7cc57026a1f9991d2d90270a7aacbd0a7aa2", "fixCommitParentSHA1": "7ae9267c59ce022c0b19effb4a941d91bcf79444", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java b/presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java\nindex 3805c10..8b290e5 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java\n@@ -275,9 +275,9 @@\n         lastUpdate = DateTime.now();\n     }\n \n-    private void sendGetResults()\n+    private synchronized void sendGetResults()\n     {\n-        final URI uri = HttpUriBuilder.uriBuilderFrom(location).appendPath(String.valueOf(token)).build();\n+        URI uri = HttpUriBuilder.uriBuilderFrom(location).appendPath(String.valueOf(token)).build();\n         HttpResponseFuture<PagesResponse> resultFuture = httpClient.executeAsync(\n                 prepareGet()\n                         .setHeader(PRESTO_MAX_SIZE, maxResponseSize.toString())\n@@ -359,7 +359,7 @@\n         }, executor);\n     }\n \n-    private void sendDelete()\n+    private synchronized void sendDelete()\n     {\n         HttpResponseFuture<StatusResponse> resultFuture = httpClient.executeAsync(prepareDelete().setUri(location).build(), createStatusResponseHandler());\n         future = resultFuture;\n", "projectName": "facebook.presto", "bugLineNum": 280, "bugNodeStartChar": 9920, "bugNodeLength": 98, "fixLineNum": 280, "fixNodeStartChar": 9920, "fixNodeLength": 92, "sourceBeforeFix": "16", "sourceAfterFix": "0"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "cadd7cc57026a1f9991d2d90270a7aacbd0a7aa2", "fixCommitParentSHA1": "7ae9267c59ce022c0b19effb4a941d91bcf79444", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java b/presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java\nindex 3805c10..8b290e5 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java\n@@ -275,9 +275,9 @@\n         lastUpdate = DateTime.now();\n     }\n \n-    private void sendGetResults()\n+    private synchronized void sendGetResults()\n     {\n-        final URI uri = HttpUriBuilder.uriBuilderFrom(location).appendPath(String.valueOf(token)).build();\n+        URI uri = HttpUriBuilder.uriBuilderFrom(location).appendPath(String.valueOf(token)).build();\n         HttpResponseFuture<PagesResponse> resultFuture = httpClient.executeAsync(\n                 prepareGet()\n                         .setHeader(PRESTO_MAX_SIZE, maxResponseSize.toString())\n@@ -359,7 +359,7 @@\n         }, executor);\n     }\n \n-    private void sendDelete()\n+    private synchronized void sendDelete()\n     {\n         HttpResponseFuture<StatusResponse> resultFuture = httpClient.executeAsync(prepareDelete().setUri(location).build(), createStatusResponseHandler());\n         future = resultFuture;\n", "projectName": "facebook.presto", "bugLineNum": 362, "bugNodeStartChar": 13235, "bugNodeLength": 1595, "fixLineNum": 362, "fixNodeStartChar": 13235, "fixNodeLength": 1608, "sourceBeforeFix": "2", "sourceAfterFix": "34"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "90aa627ec53873e359cba24a9af6d2163e2b7272", "fixCommitParentSHA1": "17b903e83bb04c2e12e5af4a7cd85fc79c82e89b", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/type/DateOperators.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/type/DateOperators.java b/presto-main/src/main/java/com/facebook/presto/type/DateOperators.java\nindex 67309dc..f8ca299 100644\n--- a/presto-main/src/main/java/com/facebook/presto/type/DateOperators.java\n+++ b/presto-main/src/main/java/com/facebook/presto/type/DateOperators.java\n@@ -136,7 +136,7 @@\n             return parseDate(trim(value).toStringUtf8());\n         }\n         catch (IllegalArgumentException e) {\n-            throw new PrestoException(INVALID_CAST_ARGUMENT, e);\n+            throw new PrestoException(INVALID_CAST_ARGUMENT, \"Value cannot be cast to date: \" + value.toStringUtf8(), e);\n         }\n     }\n \n", "projectName": "facebook.presto", "bugLineNum": 139, "bugNodeStartChar": 5427, "bugNodeLength": 45, "fixLineNum": 139, "fixNodeStartChar": 5427, "fixNodeLength": 102, "sourceBeforeFix": "new PrestoException(INVALID_CAST_ARGUMENT,e)", "sourceAfterFix": "new PrestoException(INVALID_CAST_ARGUMENT,\"Value cannot be cast to date: \" + value.toStringUtf8(),e)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "90aa627ec53873e359cba24a9af6d2163e2b7272", "fixCommitParentSHA1": "17b903e83bb04c2e12e5af4a7cd85fc79c82e89b", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/type/TimeOperators.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/type/TimeOperators.java b/presto-main/src/main/java/com/facebook/presto/type/TimeOperators.java\nindex 1fc47b9..9a001e3 100644\n--- a/presto-main/src/main/java/com/facebook/presto/type/TimeOperators.java\n+++ b/presto-main/src/main/java/com/facebook/presto/type/TimeOperators.java\n@@ -125,7 +125,7 @@\n             return parseTimeWithoutTimeZone(session.getTimeZoneKey(), value.toStringUtf8());\n         }\n         catch (IllegalArgumentException e) {\n-            throw new PrestoException(INVALID_CAST_ARGUMENT, e);\n+            throw new PrestoException(INVALID_CAST_ARGUMENT, \"Value cannot be cast to time: \" + value.toStringUtf8(), e);\n         }\n     }\n \n", "projectName": "facebook.presto", "bugLineNum": 128, "bugNodeStartChar": 4909, "bugNodeLength": 45, "fixLineNum": 128, "fixNodeStartChar": 4909, "fixNodeLength": 102, "sourceBeforeFix": "new PrestoException(INVALID_CAST_ARGUMENT,e)", "sourceAfterFix": "new PrestoException(INVALID_CAST_ARGUMENT,\"Value cannot be cast to time: \" + value.toStringUtf8(),e)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "90aa627ec53873e359cba24a9af6d2163e2b7272", "fixCommitParentSHA1": "17b903e83bb04c2e12e5af4a7cd85fc79c82e89b", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/type/TimestampOperators.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/type/TimestampOperators.java b/presto-main/src/main/java/com/facebook/presto/type/TimestampOperators.java\nindex 2d4e462..dad06c4 100644\n--- a/presto-main/src/main/java/com/facebook/presto/type/TimestampOperators.java\n+++ b/presto-main/src/main/java/com/facebook/presto/type/TimestampOperators.java\n@@ -147,7 +147,7 @@\n             return parseTimestampWithoutTimeZone(session.getTimeZoneKey(), trim(value).toStringUtf8());\n         }\n         catch (IllegalArgumentException e) {\n-            throw new PrestoException(INVALID_CAST_ARGUMENT, e);\n+            throw new PrestoException(INVALID_CAST_ARGUMENT, \"Value cannot be cast to timestamp: \" + value.toStringUtf8(), e);\n         }\n     }\n \n", "projectName": "facebook.presto", "bugLineNum": 150, "bugNodeStartChar": 6146, "bugNodeLength": 45, "fixLineNum": 150, "fixNodeStartChar": 6146, "fixNodeLength": 107, "sourceBeforeFix": "new PrestoException(INVALID_CAST_ARGUMENT,e)", "sourceAfterFix": "new PrestoException(INVALID_CAST_ARGUMENT,\"Value cannot be cast to timestamp: \" + value.toStringUtf8(),e)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "90aa627ec53873e359cba24a9af6d2163e2b7272", "fixCommitParentSHA1": "17b903e83bb04c2e12e5af4a7cd85fc79c82e89b", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/type/TimestampWithTimeZoneOperators.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/type/TimestampWithTimeZoneOperators.java b/presto-main/src/main/java/com/facebook/presto/type/TimestampWithTimeZoneOperators.java\nindex 4cacfd8..f60a51c 100644\n--- a/presto-main/src/main/java/com/facebook/presto/type/TimestampWithTimeZoneOperators.java\n+++ b/presto-main/src/main/java/com/facebook/presto/type/TimestampWithTimeZoneOperators.java\n@@ -152,7 +152,7 @@\n             return parseTimestampWithTimeZone(session.getTimeZoneKey(), trim(value).toStringUtf8());\n         }\n         catch (IllegalArgumentException e) {\n-            throw new PrestoException(INVALID_CAST_ARGUMENT, e);\n+            throw new PrestoException(INVALID_CAST_ARGUMENT, \"Value cannot be cast to timestamp with time zone: \" + value.toStringUtf8(), e);\n         }\n     }\n \n", "projectName": "facebook.presto", "bugLineNum": 155, "bugNodeStartChar": 6721, "bugNodeLength": 45, "fixLineNum": 155, "fixNodeStartChar": 6721, "fixNodeLength": 122, "sourceBeforeFix": "new PrestoException(INVALID_CAST_ARGUMENT,e)", "sourceAfterFix": "new PrestoException(INVALID_CAST_ARGUMENT,\"Value cannot be cast to timestamp with time zone: \" + value.toStringUtf8(),e)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "a81fe777b33677a4b674603c7de3da3eeaa87958", "fixCommitParentSHA1": "4cb330e7589f2eaa71a9f48eaadb25bed346ac6f", "bugFilePath": "presto-cli/src/main/java/com/facebook/presto/cli/Query.java", "fixPatch": "diff --git a/presto-cli/src/main/java/com/facebook/presto/cli/Query.java b/presto-cli/src/main/java/com/facebook/presto/cli/Query.java\nindex f4b0221..aed3d69 100644\n--- a/presto-cli/src/main/java/com/facebook/presto/cli/Query.java\n+++ b/presto-cli/src/main/java/com/facebook/presto/cli/Query.java\n@@ -119,7 +119,7 @@\n         if ((!client.isFailed()) && (!client.isGone()) && (!client.isClosed())) {\n             QueryResults results = client.isValid() ? client.current() : client.finalResults();\n             if (results.getUpdateType() != null) {\n-                renderUpdate(out, results);\n+                renderUpdate(errorChannel, results);\n             }\n             else if (results.getColumns() == null) {\n                 errorChannel.printf(\"Query %s has no columns\\n\", results.getId());\n", "projectName": "facebook.presto", "bugLineNum": 122, "bugNodeStartChar": 4085, "bugNodeLength": 26, "fixLineNum": 122, "fixNodeStartChar": 4085, "fixNodeLength": 35, "sourceBeforeFix": "renderUpdate(out,results)", "sourceAfterFix": "renderUpdate(errorChannel,results)"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "b3f9135548ce836c0480bbf1dfe3b358904c1b86", "fixCommitParentSHA1": "88d3aa6ed02f6775e88e1e2376517f6c6aa49289", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/type/TestArrayOperators.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/type/TestArrayOperators.java b/presto-main/src/test/java/com/facebook/presto/type/TestArrayOperators.java\nindex 2028fdb..5d82fad 100644\n--- a/presto-main/src/test/java/com/facebook/presto/type/TestArrayOperators.java\n+++ b/presto-main/src/test/java/com/facebook/presto/type/TestArrayOperators.java\n@@ -458,7 +458,8 @@\n         assertInvalidFunction(\"ARRAY_SORT(ARRAY[color('red'), color('blue')])\", FUNCTION_NOT_FOUND);\n     }\n \n-    @Test void testDistinct()\n+    @Test\n+    public void testDistinct()\n             throws Exception\n     {\n         assertFunction(\"ARRAY_DISTINCT(ARRAY [])\", new ArrayType(UNKNOWN), ImmutableList.of());\n", "projectName": "facebook.presto", "bugLineNum": 461, "bugNodeStartChar": 29701, "bugNodeLength": 2250, "fixLineNum": 461, "fixNodeStartChar": 29701, "fixNodeLength": 2261, "sourceBeforeFix": "0", "sourceAfterFix": "1"}, {"bugType": "OVERLOAD_METHOD_DELETED_ARGS", "fixCommitSHA1": "d62f19025d2fff976734685e5a7e9dd73ce126f3", "fixCommitParentSHA1": "edbd265d0ea94de27fd9c78cde30c12fa348ec4d", "bugFilePath": "presto-example-http/src/test/java/com/facebook/presto/example/MetadataUtil.java", "fixPatch": "diff --git a/presto-example-http/src/test/java/com/facebook/presto/example/MetadataUtil.java b/presto-example-http/src/test/java/com/facebook/presto/example/MetadataUtil.java\nindex 3ffa957..5922b0f 100644\n--- a/presto-example-http/src/test/java/com/facebook/presto/example/MetadataUtil.java\n+++ b/presto-example-http/src/test/java/com/facebook/presto/example/MetadataUtil.java\n@@ -59,8 +59,7 @@\n                 StandardTypes.BOOLEAN, BOOLEAN,\n                 StandardTypes.BIGINT, BIGINT,\n                 StandardTypes.DOUBLE, DOUBLE,\n-                StandardTypes.VARCHAR, VARCHAR,\n-                VARCHAR.getTypeSignature().toString(), VARCHAR); // varchar(MAX_INT)\n+                StandardTypes.VARCHAR, VARCHAR);\n \n         public TestingTypeDeserializer()\n         {\n", "projectName": "facebook.presto", "bugLineNum": 58, "bugNodeStartChar": 2455, "bugNodeLength": 282, "fixLineNum": 58, "fixNodeStartChar": 2455, "fixNodeLength": 218, "sourceBeforeFix": "ImmutableMap.<String,Type>of(StandardTypes.BOOLEAN,BOOLEAN,StandardTypes.BIGINT,BIGINT,StandardTypes.DOUBLE,DOUBLE,StandardTypes.VARCHAR,VARCHAR,VARCHAR.getTypeSignature().toString(),VARCHAR)", "sourceAfterFix": "ImmutableMap.<String,Type>of(StandardTypes.BOOLEAN,BOOLEAN,StandardTypes.BIGINT,BIGINT,StandardTypes.DOUBLE,DOUBLE,StandardTypes.VARCHAR,VARCHAR)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "8f31fbec3ce6e811d9547b27c4b603e4e7f87e12", "fixCommitParentSHA1": "8516a378c6cd2385e8218a627413146f6b5cd723", "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/parquet/ParquetHiveRecordCursor.java", "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/parquet/ParquetHiveRecordCursor.java b/presto-hive/src/main/java/com/facebook/presto/hive/parquet/ParquetHiveRecordCursor.java\nindex f4b5fc4..446caee 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/parquet/ParquetHiveRecordCursor.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/parquet/ParquetHiveRecordCursor.java\n@@ -717,7 +717,11 @@\n             checkArgument(ROW.equals(prestoType.getTypeSignature().getBase()));\n             List<Type> prestoTypeParameters = prestoType.getTypeParameters();\n             List<parquet.schema.Type> fieldTypes = entryType.getFields();\n-            checkArgument(prestoTypeParameters.size() == fieldTypes.size());\n+            checkArgument(prestoTypeParameters.size() == fieldTypes.size(),\n+                            \"Schema mismatch, metastore schema for row column %s has %s fields but parquet schema has %s fields\",\n+                            columnName,\n+                            prestoTypeParameters.size(),\n+                            fieldTypes.size());\n \n             this.rowType = prestoType;\n             this.fieldIndex = fieldIndex;\n", "projectName": "facebook.presto", "bugLineNum": 720, "bugNodeStartChar": 24816, "bugNodeLength": 63, "fixLineNum": 720, "fixNodeStartChar": 24816, "fixNodeLength": 337, "sourceBeforeFix": "checkArgument(prestoTypeParameters.size() == fieldTypes.size())", "sourceAfterFix": "checkArgument(prestoTypeParameters.size() == fieldTypes.size(),\"Schema mismatch, metastore schema for row column %s has %s fields but parquet schema has %s fields\",columnName,prestoTypeParameters.size(),fieldTypes.size())"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "6ee0105ac80d34691c4a073e87397ed0fc6b68c4", "fixCommitParentSHA1": "e91b8db8a93ddccf5ddaeba557aed1a5869e5ce5", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java b/presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java\nindex 6370303..4ec778a 100644\n--- a/presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java\n+++ b/presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java\n@@ -144,7 +144,7 @@\n         }\n         int[] ids = new int[length];\n         for (int i = 0; i < length; i++) {\n-            ids[i] = length % dictionarySize;\n+            ids[i] = i % dictionarySize;\n         }\n         return new DictionaryBlock(length, builder.build(), wrappedIntArray(ids));\n     }\n@@ -254,7 +254,7 @@\n         }\n         int[] ids = new int[length];\n         for (int i = 0; i < length; i++) {\n-            ids[i] = length % dictionarySize;\n+            ids[i] = i % dictionarySize;\n         }\n         return new DictionaryBlock(length, builder.build(), wrappedIntArray(ids));\n     }\n", "projectName": "facebook.presto", "bugLineNum": 147, "bugNodeStartChar": 5202, "bugNodeLength": 23, "fixLineNum": 147, "fixNodeStartChar": 5202, "fixNodeLength": 18, "sourceBeforeFix": "length % dictionarySize", "sourceAfterFix": "i % dictionarySize"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "6ee0105ac80d34691c4a073e87397ed0fc6b68c4", "fixCommitParentSHA1": "e91b8db8a93ddccf5ddaeba557aed1a5869e5ce5", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java b/presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java\nindex 6370303..4ec778a 100644\n--- a/presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java\n+++ b/presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java\n@@ -144,7 +144,7 @@\n         }\n         int[] ids = new int[length];\n         for (int i = 0; i < length; i++) {\n-            ids[i] = length % dictionarySize;\n+            ids[i] = i % dictionarySize;\n         }\n         return new DictionaryBlock(length, builder.build(), wrappedIntArray(ids));\n     }\n@@ -254,7 +254,7 @@\n         }\n         int[] ids = new int[length];\n         for (int i = 0; i < length; i++) {\n-            ids[i] = length % dictionarySize;\n+            ids[i] = i % dictionarySize;\n         }\n         return new DictionaryBlock(length, builder.build(), wrappedIntArray(ids));\n     }\n", "projectName": "facebook.presto", "bugLineNum": 147, "bugNodeStartChar": 5202, "bugNodeLength": 23, "fixLineNum": 147, "fixNodeStartChar": 5202, "fixNodeLength": 18, "sourceBeforeFix": "length % dictionarySize", "sourceAfterFix": "i % dictionarySize"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "6ee0105ac80d34691c4a073e87397ed0fc6b68c4", "fixCommitParentSHA1": "e91b8db8a93ddccf5ddaeba557aed1a5869e5ce5", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java b/presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java\nindex 6370303..4ec778a 100644\n--- a/presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java\n+++ b/presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java\n@@ -144,7 +144,7 @@\n         }\n         int[] ids = new int[length];\n         for (int i = 0; i < length; i++) {\n-            ids[i] = length % dictionarySize;\n+            ids[i] = i % dictionarySize;\n         }\n         return new DictionaryBlock(length, builder.build(), wrappedIntArray(ids));\n     }\n@@ -254,7 +254,7 @@\n         }\n         int[] ids = new int[length];\n         for (int i = 0; i < length; i++) {\n-            ids[i] = length % dictionarySize;\n+            ids[i] = i % dictionarySize;\n         }\n         return new DictionaryBlock(length, builder.build(), wrappedIntArray(ids));\n     }\n", "projectName": "facebook.presto", "bugLineNum": 257, "bugNodeStartChar": 8467, "bugNodeLength": 23, "fixLineNum": 257, "fixNodeStartChar": 8467, "fixNodeLength": 18, "sourceBeforeFix": "length % dictionarySize", "sourceAfterFix": "i % dictionarySize"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "6ee0105ac80d34691c4a073e87397ed0fc6b68c4", "fixCommitParentSHA1": "e91b8db8a93ddccf5ddaeba557aed1a5869e5ce5", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java b/presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java\nindex 6370303..4ec778a 100644\n--- a/presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java\n+++ b/presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java\n@@ -144,7 +144,7 @@\n         }\n         int[] ids = new int[length];\n         for (int i = 0; i < length; i++) {\n-            ids[i] = length % dictionarySize;\n+            ids[i] = i % dictionarySize;\n         }\n         return new DictionaryBlock(length, builder.build(), wrappedIntArray(ids));\n     }\n@@ -254,7 +254,7 @@\n         }\n         int[] ids = new int[length];\n         for (int i = 0; i < length; i++) {\n-            ids[i] = length % dictionarySize;\n+            ids[i] = i % dictionarySize;\n         }\n         return new DictionaryBlock(length, builder.build(), wrappedIntArray(ids));\n     }\n", "projectName": "facebook.presto", "bugLineNum": 257, "bugNodeStartChar": 8467, "bugNodeLength": 23, "fixLineNum": 257, "fixNodeStartChar": 8467, "fixNodeLength": 18, "sourceBeforeFix": "length % dictionarySize", "sourceAfterFix": "i % dictionarySize"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "2f892430d9908b1676a2f7138f38c62547744f18", "fixCommitParentSHA1": "4878e35fe056ca42b3a52f08273c7d1878440518", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/analyzer/ExpressionAnalyzer.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/analyzer/ExpressionAnalyzer.java b/presto-main/src/main/java/com/facebook/presto/sql/analyzer/ExpressionAnalyzer.java\nindex 72bc913..d2e24c0 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/analyzer/ExpressionAnalyzer.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/analyzer/ExpressionAnalyzer.java\n@@ -869,7 +869,7 @@\n                 operatorSignature = functionRegistry.resolveOperator(operatorType, argumentTypes.build());\n             }\n             catch (OperatorNotFoundException e) {\n-                throw new SemanticException(TYPE_MISMATCH, node, e.getMessage());\n+                throw new SemanticException(TYPE_MISMATCH, node, \"%s\", e.getMessage());\n             }\n \n             for (int i = 0; i < arguments.length; i++) {\n", "projectName": "facebook.presto", "bugLineNum": 872, "bugNodeStartChar": 37905, "bugNodeLength": 58, "fixLineNum": 872, "fixNodeStartChar": 37905, "fixNodeLength": 64, "sourceBeforeFix": "new SemanticException(TYPE_MISMATCH,node,e.getMessage())", "sourceAfterFix": "new SemanticException(TYPE_MISMATCH,node,\"%s\",e.getMessage())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "2c63407961c497147a4e4481a4c372c1e1323c95", "fixCommitParentSHA1": "84f14af3e0673b0cb78fe4a12741f94f9c851726", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/execution/StartTransactionTask.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/StartTransactionTask.java b/presto-main/src/main/java/com/facebook/presto/execution/StartTransactionTask.java\nindex 08aa38e..f78f430 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/StartTransactionTask.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/StartTransactionTask.java\n@@ -110,7 +110,7 @@\n                 return IsolationLevel.REPEATABLE_READ;\n             case READ_COMMITTED:\n                 return IsolationLevel.READ_COMMITTED;\n-            case READ_UNCOMMITED:\n+            case READ_UNCOMMITTED:\n                 return IsolationLevel.READ_UNCOMMITTED;\n             default:\n                 throw new AssertionError(\"Unhandled isolation level: \" + level);\n", "projectName": "facebook.presto", "bugLineNum": 113, "bugNodeStartChar": 4576, "bugNodeLength": 21, "fixLineNum": 113, "fixNodeStartChar": 4576, "fixNodeLength": 22, "sourceBeforeFix": "case READ_UNCOMMITED: ", "sourceAfterFix": "case READ_UNCOMMITTED: "}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "6b754d327bdb7a778c37543e6ddeb830df851402", "fixCommitParentSHA1": "d7a44052b65132cc00368cdd7c231588adab714c", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java b/presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java\nindex 58c4727..f494016 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java\n@@ -1631,8 +1631,10 @@\n                 .distinct()\n                 .collect(toImmutableList());\n \n-        // is this an aggregation query?\n-        if (!aggregates.isEmpty() || !allGroupingColumns.isEmpty()) {\n+        // check if:\n+        // - aggregation is present: SELECT SUM(x) FROM table; or\n+        // - group by is present: SELECT ... FROM table GROUP BY category\n+        if (!aggregates.isEmpty() || !groupingSets.isEmpty()) {\n             // ensure SELECT, ORDER BY and HAVING are constant with respect to group\n             // e.g, these are all valid expressions:\n             //     SELECT f(a) GROUP BY a\n", "projectName": "facebook.presto", "bugLineNum": 1635, "bugNodeStartChar": 81106, "bugNodeLength": 28, "fixLineNum": 1637, "fixNodeStartChar": 81226, "fixNodeLength": 22, "sourceBeforeFix": "allGroupingColumns.isEmpty()", "sourceAfterFix": "groupingSets.isEmpty()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "6b754d327bdb7a778c37543e6ddeb830df851402", "fixCommitParentSHA1": "d7a44052b65132cc00368cdd7c231588adab714c", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java b/presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java\nindex 58c4727..f494016 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java\n@@ -1631,8 +1631,10 @@\n                 .distinct()\n                 .collect(toImmutableList());\n \n-        // is this an aggregation query?\n-        if (!aggregates.isEmpty() || !allGroupingColumns.isEmpty()) {\n+        // check if:\n+        // - aggregation is present: SELECT SUM(x) FROM table; or\n+        // - group by is present: SELECT ... FROM table GROUP BY category\n+        if (!aggregates.isEmpty() || !groupingSets.isEmpty()) {\n             // ensure SELECT, ORDER BY and HAVING are constant with respect to group\n             // e.g, these are all valid expressions:\n             //     SELECT f(a) GROUP BY a\n", "projectName": "facebook.presto", "bugLineNum": 1635, "bugNodeStartChar": 81106, "bugNodeLength": 28, "fixLineNum": 1637, "fixNodeStartChar": 81226, "fixNodeLength": 22, "sourceBeforeFix": "allGroupingColumns.isEmpty()", "sourceAfterFix": "groupingSets.isEmpty()"}, {"bugType": "SWAP_BOOLEAN_LITERAL", "fixCommitSHA1": "bdc0df3522e75295355c176ffb0462906d7aea79", "fixCommitParentSHA1": "91bea81ae5bbc6697422a953646ad6220d7a679b", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/sql/analyzer/TestFeaturesConfig.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/sql/analyzer/TestFeaturesConfig.java b/presto-main/src/test/java/com/facebook/presto/sql/analyzer/TestFeaturesConfig.java\nindex 5bb6fae..0195d70 100644\n--- a/presto-main/src/test/java/com/facebook/presto/sql/analyzer/TestFeaturesConfig.java\n+++ b/presto-main/src/test/java/com/facebook/presto/sql/analyzer/TestFeaturesConfig.java\n@@ -36,7 +36,7 @@\n                 .setOptimizeMetadataQueries(false)\n                 .setOptimizeHashGeneration(true)\n                 .setOptimizeSingleDistinct(true)\n-                .setPushTableWriteThroughUnion(false)\n+                .setPushTableWriteThroughUnion(true)\n                 .setIntermediateAggregationsEnabled(false)\n                 .setColumnarProcessing(false)\n                 .setColumnarProcessingDictionary(false));\n@@ -53,7 +53,7 @@\n                 .put(\"optimizer.optimize-metadata-queries\", \"true\")\n                 .put(\"optimizer.optimize-hash-generation\", \"false\")\n                 .put(\"optimizer.optimize-single-distinct\", \"false\")\n-                .put(\"optimizer.push-table-write-through-union\", \"true\")\n+                .put(\"optimizer.push-table-write-through-union\", \"false\")\n                 .put(\"optimizer.use-intermediate-aggregations\", \"true\")\n                 .put(\"optimizer.columnar-processing\", \"true\")\n                 .put(\"optimizer.columnar-processing-dictionary\", \"true\")\n@@ -66,7 +66,7 @@\n                 .put(\"optimizer.optimize-metadata-queries\", \"true\")\n                 .put(\"optimizer.optimize-hash-generation\", \"false\")\n                 .put(\"optimizer.optimize-single-distinct\", \"false\")\n-                .put(\"optimizer.push-table-write-through-union\", \"true\")\n+                .put(\"optimizer.push-table-write-through-union\", \"false\")\n                 .put(\"optimizer.use-intermediate-aggregations\", \"true\")\n                 .put(\"optimizer.columnar-processing\", \"true\")\n                 .put(\"optimizer.columnar-processing-dictionary\", \"true\")\n@@ -80,7 +80,7 @@\n                 .setOptimizeMetadataQueries(true)\n                 .setOptimizeHashGeneration(false)\n                 .setOptimizeSingleDistinct(false)\n-                .setPushTableWriteThroughUnion(true)\n+                .setPushTableWriteThroughUnion(false)\n                 .setIntermediateAggregationsEnabled(true)\n                 .setColumnarProcessing(true)\n                 .setColumnarProcessingDictionary(true);\n", "projectName": "facebook.presto", "bugLineNum": 31, "bugNodeStartChar": 1147, "bugNodeLength": 460, "fixLineNum": 31, "fixNodeStartChar": 1147, "fixNodeLength": 459, "sourceBeforeFix": "ConfigAssertions.recordDefaults(FeaturesConfig.class).setExperimentalSyntaxEnabled(false).setDistributedIndexJoinsEnabled(false).setDistributedJoinsEnabled(true).setRedistributeWrites(true).setOptimizeMetadataQueries(false).setOptimizeHashGeneration(true).setOptimizeSingleDistinct(true).setPushTableWriteThroughUnion(false)", "sourceAfterFix": "ConfigAssertions.recordDefaults(FeaturesConfig.class).setExperimentalSyntaxEnabled(false).setDistributedIndexJoinsEnabled(false).setDistributedJoinsEnabled(true).setRedistributeWrites(true).setOptimizeMetadataQueries(false).setOptimizeHashGeneration(true).setOptimizeSingleDistinct(true).setPushTableWriteThroughUnion(true)"}, {"bugType": "SWAP_BOOLEAN_LITERAL", "fixCommitSHA1": "bdc0df3522e75295355c176ffb0462906d7aea79", "fixCommitParentSHA1": "91bea81ae5bbc6697422a953646ad6220d7a679b", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/sql/analyzer/TestFeaturesConfig.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/sql/analyzer/TestFeaturesConfig.java b/presto-main/src/test/java/com/facebook/presto/sql/analyzer/TestFeaturesConfig.java\nindex 5bb6fae..0195d70 100644\n--- a/presto-main/src/test/java/com/facebook/presto/sql/analyzer/TestFeaturesConfig.java\n+++ b/presto-main/src/test/java/com/facebook/presto/sql/analyzer/TestFeaturesConfig.java\n@@ -36,7 +36,7 @@\n                 .setOptimizeMetadataQueries(false)\n                 .setOptimizeHashGeneration(true)\n                 .setOptimizeSingleDistinct(true)\n-                .setPushTableWriteThroughUnion(false)\n+                .setPushTableWriteThroughUnion(true)\n                 .setIntermediateAggregationsEnabled(false)\n                 .setColumnarProcessing(false)\n                 .setColumnarProcessingDictionary(false));\n@@ -53,7 +53,7 @@\n                 .put(\"optimizer.optimize-metadata-queries\", \"true\")\n                 .put(\"optimizer.optimize-hash-generation\", \"false\")\n                 .put(\"optimizer.optimize-single-distinct\", \"false\")\n-                .put(\"optimizer.push-table-write-through-union\", \"true\")\n+                .put(\"optimizer.push-table-write-through-union\", \"false\")\n                 .put(\"optimizer.use-intermediate-aggregations\", \"true\")\n                 .put(\"optimizer.columnar-processing\", \"true\")\n                 .put(\"optimizer.columnar-processing-dictionary\", \"true\")\n@@ -66,7 +66,7 @@\n                 .put(\"optimizer.optimize-metadata-queries\", \"true\")\n                 .put(\"optimizer.optimize-hash-generation\", \"false\")\n                 .put(\"optimizer.optimize-single-distinct\", \"false\")\n-                .put(\"optimizer.push-table-write-through-union\", \"true\")\n+                .put(\"optimizer.push-table-write-through-union\", \"false\")\n                 .put(\"optimizer.use-intermediate-aggregations\", \"true\")\n                 .put(\"optimizer.columnar-processing\", \"true\")\n                 .put(\"optimizer.columnar-processing-dictionary\", \"true\")\n@@ -80,7 +80,7 @@\n                 .setOptimizeMetadataQueries(true)\n                 .setOptimizeHashGeneration(false)\n                 .setOptimizeSingleDistinct(false)\n-                .setPushTableWriteThroughUnion(true)\n+                .setPushTableWriteThroughUnion(false)\n                 .setIntermediateAggregationsEnabled(true)\n                 .setColumnarProcessing(true)\n                 .setColumnarProcessingDictionary(true);\n", "projectName": "facebook.presto", "bugLineNum": 75, "bugNodeStartChar": 3551, "bugNodeLength": 427, "fixLineNum": 75, "fixNodeStartChar": 3551, "fixNodeLength": 428, "sourceBeforeFix": "new FeaturesConfig().setExperimentalSyntaxEnabled(true).setDistributedIndexJoinsEnabled(true).setDistributedJoinsEnabled(false).setRedistributeWrites(false).setOptimizeMetadataQueries(true).setOptimizeHashGeneration(false).setOptimizeSingleDistinct(false).setPushTableWriteThroughUnion(true)", "sourceAfterFix": "new FeaturesConfig().setExperimentalSyntaxEnabled(true).setDistributedIndexJoinsEnabled(true).setDistributedJoinsEnabled(false).setRedistributeWrites(false).setOptimizeMetadataQueries(true).setOptimizeHashGeneration(false).setOptimizeSingleDistinct(false).setPushTableWriteThroughUnion(false)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "79b853834efa62f7b9e3ea25da97c9035b4583b4", "fixCommitParentSHA1": "ed147630dc3a34352e6b2b1819c9077d856be2ad", "bugFilePath": "presto-blackhole/src/main/java/com/facebook/presto/plugin/blackhole/BlackHoleMetadata.java", "fixPatch": "diff --git a/presto-blackhole/src/main/java/com/facebook/presto/plugin/blackhole/BlackHoleMetadata.java b/presto-blackhole/src/main/java/com/facebook/presto/plugin/blackhole/BlackHoleMetadata.java\nindex dab50ba..2fe597f 100644\n--- a/presto-blackhole/src/main/java/com/facebook/presto/plugin/blackhole/BlackHoleMetadata.java\n+++ b/presto-blackhole/src/main/java/com/facebook/presto/plugin/blackhole/BlackHoleMetadata.java\n@@ -217,6 +217,12 @@\n     @Override\n     public ConnectorTableLayout getTableLayout(ConnectorSession session, ConnectorTableLayoutHandle handle)\n     {\n-        return new ConnectorTableLayout(handle);\n+        return new ConnectorTableLayout(\n+                handle,\n+                Optional.empty(),\n+                TupleDomain.none(),\n+                Optional.empty(),\n+                Optional.empty(),\n+                ImmutableList.of());\n     }\n }\n", "projectName": "facebook.presto", "bugLineNum": 220, "bugNodeStartChar": 9720, "bugNodeLength": 32, "fixLineNum": 220, "fixNodeStartChar": 9720, "fixNodeLength": 223, "sourceBeforeFix": "new ConnectorTableLayout(handle)", "sourceAfterFix": "new ConnectorTableLayout(handle,Optional.empty(),TupleDomain.none(),Optional.empty(),Optional.empty(),ImmutableList.of())"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "08c13211146864ab9cbc8a79fef118eb3aa3e0e4", "fixCommitParentSHA1": "16332b5820ed504164ec2095190839e3e95fce2d", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/execution/TestNodeScheduler.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/execution/TestNodeScheduler.java b/presto-main/src/test/java/com/facebook/presto/execution/TestNodeScheduler.java\nindex f8f23ea..dba72c6 100644\n--- a/presto-main/src/test/java/com/facebook/presto/execution/TestNodeScheduler.java\n+++ b/presto-main/src/test/java/com/facebook/presto/execution/TestNodeScheduler.java\n@@ -293,7 +293,7 @@\n         assertEquals(nodeTaskMap.getPartitionedSplitsOnNode(chosenNode), 0);\n     }\n \n-    private class TestSplitLocal\n+    private static class TestSplitLocal\n             implements ConnectorSplit\n     {\n         @Override\n@@ -315,7 +315,7 @@\n         }\n     }\n \n-    private class TestSplitRemote\n+    private static class TestSplitRemote\n             implements ConnectorSplit\n     {\n         @Override\n", "projectName": "facebook.presto", "bugLineNum": 296, "bugNodeStartChar": 12946, "bugNodeLength": 448, "fixLineNum": 296, "fixNodeStartChar": 12946, "fixNodeLength": 455, "sourceBeforeFix": "2", "sourceAfterFix": "10"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "08c13211146864ab9cbc8a79fef118eb3aa3e0e4", "fixCommitParentSHA1": "16332b5820ed504164ec2095190839e3e95fce2d", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/execution/TestNodeScheduler.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/execution/TestNodeScheduler.java b/presto-main/src/test/java/com/facebook/presto/execution/TestNodeScheduler.java\nindex f8f23ea..dba72c6 100644\n--- a/presto-main/src/test/java/com/facebook/presto/execution/TestNodeScheduler.java\n+++ b/presto-main/src/test/java/com/facebook/presto/execution/TestNodeScheduler.java\n@@ -293,7 +293,7 @@\n         assertEquals(nodeTaskMap.getPartitionedSplitsOnNode(chosenNode), 0);\n     }\n \n-    private class TestSplitLocal\n+    private static class TestSplitLocal\n             implements ConnectorSplit\n     {\n         @Override\n@@ -315,7 +315,7 @@\n         }\n     }\n \n-    private class TestSplitRemote\n+    private static class TestSplitRemote\n             implements ConnectorSplit\n     {\n         @Override\n", "projectName": "facebook.presto", "bugLineNum": 318, "bugNodeStartChar": 13400, "bugNodeLength": 531, "fixLineNum": 318, "fixNodeStartChar": 13400, "fixNodeLength": 538, "sourceBeforeFix": "2", "sourceAfterFix": "10"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "e97382e401f58108ad645dee2076ddd110a3e7e9", "fixCommitParentSHA1": "b9a6bdc84fd9fdc843aa859216eee052f24f21ff", "bugFilePath": "presto-raptor/src/main/java/com/facebook/presto/raptor/storage/FileStorageService.java", "fixPatch": "diff --git a/presto-raptor/src/main/java/com/facebook/presto/raptor/storage/FileStorageService.java b/presto-raptor/src/main/java/com/facebook/presto/raptor/storage/FileStorageService.java\nindex 71efe1b..bb963b5 100644\n--- a/presto-raptor/src/main/java/com/facebook/presto/raptor/storage/FileStorageService.java\n+++ b/presto-raptor/src/main/java/com/facebook/presto/raptor/storage/FileStorageService.java\n@@ -119,8 +119,8 @@\n             throw new IOException(\"Failed to list directory: \" + dir);\n         }\n         for (File file : files) {\n-            Files.delete(file.toPath());\n+            Files.deleteIfExists(file.toPath());\n         }\n-        Files.delete(dir.toPath());\n+        Files.deleteIfExists(dir.toPath());\n     }\n }\n", "projectName": "facebook.presto", "bugLineNum": 122, "bugNodeStartChar": 3739, "bugNodeLength": 27, "fixLineNum": 122, "fixNodeStartChar": 3739, "fixNodeLength": 35, "sourceBeforeFix": "Files.delete(file.toPath())", "sourceAfterFix": "Files.deleteIfExists(file.toPath())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "e97382e401f58108ad645dee2076ddd110a3e7e9", "fixCommitParentSHA1": "b9a6bdc84fd9fdc843aa859216eee052f24f21ff", "bugFilePath": "presto-raptor/src/main/java/com/facebook/presto/raptor/storage/FileStorageService.java", "fixPatch": "diff --git a/presto-raptor/src/main/java/com/facebook/presto/raptor/storage/FileStorageService.java b/presto-raptor/src/main/java/com/facebook/presto/raptor/storage/FileStorageService.java\nindex 71efe1b..bb963b5 100644\n--- a/presto-raptor/src/main/java/com/facebook/presto/raptor/storage/FileStorageService.java\n+++ b/presto-raptor/src/main/java/com/facebook/presto/raptor/storage/FileStorageService.java\n@@ -119,8 +119,8 @@\n             throw new IOException(\"Failed to list directory: \" + dir);\n         }\n         for (File file : files) {\n-            Files.delete(file.toPath());\n+            Files.deleteIfExists(file.toPath());\n         }\n-        Files.delete(dir.toPath());\n+        Files.deleteIfExists(dir.toPath());\n     }\n }\n", "projectName": "facebook.presto", "bugLineNum": 122, "bugNodeStartChar": 3739, "bugNodeLength": 27, "fixLineNum": 122, "fixNodeStartChar": 3739, "fixNodeLength": 35, "sourceBeforeFix": "Files.delete(file.toPath())", "sourceAfterFix": "Files.deleteIfExists(file.toPath())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "e97382e401f58108ad645dee2076ddd110a3e7e9", "fixCommitParentSHA1": "b9a6bdc84fd9fdc843aa859216eee052f24f21ff", "bugFilePath": "presto-raptor/src/main/java/com/facebook/presto/raptor/storage/FileStorageService.java", "fixPatch": "diff --git a/presto-raptor/src/main/java/com/facebook/presto/raptor/storage/FileStorageService.java b/presto-raptor/src/main/java/com/facebook/presto/raptor/storage/FileStorageService.java\nindex 71efe1b..bb963b5 100644\n--- a/presto-raptor/src/main/java/com/facebook/presto/raptor/storage/FileStorageService.java\n+++ b/presto-raptor/src/main/java/com/facebook/presto/raptor/storage/FileStorageService.java\n@@ -119,8 +119,8 @@\n             throw new IOException(\"Failed to list directory: \" + dir);\n         }\n         for (File file : files) {\n-            Files.delete(file.toPath());\n+            Files.deleteIfExists(file.toPath());\n         }\n-        Files.delete(dir.toPath());\n+        Files.deleteIfExists(dir.toPath());\n     }\n }\n", "projectName": "facebook.presto", "bugLineNum": 124, "bugNodeStartChar": 3786, "bugNodeLength": 26, "fixLineNum": 124, "fixNodeStartChar": 3786, "fixNodeLength": 34, "sourceBeforeFix": "Files.delete(dir.toPath())", "sourceAfterFix": "Files.deleteIfExists(dir.toPath())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "e97382e401f58108ad645dee2076ddd110a3e7e9", "fixCommitParentSHA1": "b9a6bdc84fd9fdc843aa859216eee052f24f21ff", "bugFilePath": "presto-raptor/src/main/java/com/facebook/presto/raptor/storage/FileStorageService.java", "fixPatch": "diff --git a/presto-raptor/src/main/java/com/facebook/presto/raptor/storage/FileStorageService.java b/presto-raptor/src/main/java/com/facebook/presto/raptor/storage/FileStorageService.java\nindex 71efe1b..bb963b5 100644\n--- a/presto-raptor/src/main/java/com/facebook/presto/raptor/storage/FileStorageService.java\n+++ b/presto-raptor/src/main/java/com/facebook/presto/raptor/storage/FileStorageService.java\n@@ -119,8 +119,8 @@\n             throw new IOException(\"Failed to list directory: \" + dir);\n         }\n         for (File file : files) {\n-            Files.delete(file.toPath());\n+            Files.deleteIfExists(file.toPath());\n         }\n-        Files.delete(dir.toPath());\n+        Files.deleteIfExists(dir.toPath());\n     }\n }\n", "projectName": "facebook.presto", "bugLineNum": 124, "bugNodeStartChar": 3786, "bugNodeLength": 26, "fixLineNum": 124, "fixNodeStartChar": 3786, "fixNodeLength": 34, "sourceBeforeFix": "Files.delete(dir.toPath())", "sourceAfterFix": "Files.deleteIfExists(dir.toPath())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "27301617876b102c50f758608843f9ccf9456a1b", "fixCommitParentSHA1": "76468809428da1af433cc14871b874482c5be9bd", "bugFilePath": "presto-example-http/src/main/java/com/facebook/presto/example/ExampleSplit.java", "fixPatch": "diff --git a/presto-example-http/src/main/java/com/facebook/presto/example/ExampleSplit.java b/presto-example-http/src/main/java/com/facebook/presto/example/ExampleSplit.java\nindex 74b18c1..5ffb638 100644\n--- a/presto-example-http/src/main/java/com/facebook/presto/example/ExampleSplit.java\n+++ b/presto-example-http/src/main/java/com/facebook/presto/example/ExampleSplit.java\n@@ -32,7 +32,7 @@\n     private final String tableName;\n     private final URI uri;\n     private final boolean remotelyAccessible;\n-    private final ImmutableList<HostAddress> addresses;\n+    private final List<HostAddress> addresses;\n \n     @JsonCreator\n     public ExampleSplit(\n", "projectName": "facebook.presto", "bugLineNum": 35, "bugNodeStartChar": 1205, "bugNodeLength": 26, "fixLineNum": 35, "fixNodeStartChar": 1205, "fixNodeLength": 17, "sourceBeforeFix": "ImmutableList<HostAddress>", "sourceAfterFix": "List<HostAddress>"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "34885ed03b47910ebad992504c0f1f6bc699b52f", "fixCommitParentSHA1": "1e88bfe8e77e38ceb3e91aa4e1d6dccd12cac226", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java b/presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java\nindex 781a5f4..e66d938 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java\n@@ -358,7 +358,7 @@\n         }\n         else {\n             // stage finished while we were scheduling this task\n-            task.cancel();\n+            task.abort();\n         }\n \n         return task;\n", "projectName": "facebook.presto", "bugLineNum": 361, "bugNodeStartChar": 14021, "bugNodeLength": 13, "fixLineNum": 361, "fixNodeStartChar": 14021, "fixNodeLength": 12, "sourceBeforeFix": "task.cancel()", "sourceAfterFix": "task.abort()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "34885ed03b47910ebad992504c0f1f6bc699b52f", "fixCommitParentSHA1": "1e88bfe8e77e38ceb3e91aa4e1d6dccd12cac226", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java b/presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java\nindex 781a5f4..e66d938 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java\n@@ -358,7 +358,7 @@\n         }\n         else {\n             // stage finished while we were scheduling this task\n-            task.cancel();\n+            task.abort();\n         }\n \n         return task;\n", "projectName": "facebook.presto", "bugLineNum": 361, "bugNodeStartChar": 14021, "bugNodeLength": 13, "fixLineNum": 361, "fixNodeStartChar": 14021, "fixNodeLength": 12, "sourceBeforeFix": "task.cancel()", "sourceAfterFix": "task.abort()"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "06f15a11212c6c77482e92b901a006212231d808", "fixCommitParentSHA1": "46a6a185d370b3c90f07375b2f6cad74e424e878", "bugFilePath": "presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveClient.java", "fixPatch": "diff --git a/presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveClient.java b/presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveClient.java\nindex 84c40e6..f5df5e6 100644\n--- a/presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveClient.java\n+++ b/presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveClient.java\n@@ -403,12 +403,12 @@\n         timeZone = DateTimeZone.forTimeZone(TimeZone.getTimeZone(timeZoneId));\n     }\n \n-    protected void setup(String host, int port, String databaseName, String timeZone)\n+    protected final void setup(String host, int port, String databaseName, String timeZone)\n     {\n         setup(host, port, databaseName, timeZone, \"hive-test\", 100, 50);\n     }\n \n-    protected void setup(String host, int port, String databaseName, String timeZoneId, String connectorName, int maxOutstandingSplits, int maxThreads)\n+    protected final void setup(String host, int port, String databaseName, String timeZoneId, String connectorName, int maxOutstandingSplits, int maxThreads)\n     {\n         setupHive(connectorName, databaseName, timeZoneId);\n \n", "projectName": "facebook.presto", "bugLineNum": 406, "bugNodeStartChar": 23881, "bugNodeLength": 166, "fixLineNum": 406, "fixNodeStartChar": 23881, "fixNodeLength": 172, "sourceBeforeFix": "4", "sourceAfterFix": "20"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "06f15a11212c6c77482e92b901a006212231d808", "fixCommitParentSHA1": "46a6a185d370b3c90f07375b2f6cad74e424e878", "bugFilePath": "presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveClient.java", "fixPatch": "diff --git a/presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveClient.java b/presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveClient.java\nindex 84c40e6..f5df5e6 100644\n--- a/presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveClient.java\n+++ b/presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveClient.java\n@@ -403,12 +403,12 @@\n         timeZone = DateTimeZone.forTimeZone(TimeZone.getTimeZone(timeZoneId));\n     }\n \n-    protected void setup(String host, int port, String databaseName, String timeZone)\n+    protected final void setup(String host, int port, String databaseName, String timeZone)\n     {\n         setup(host, port, databaseName, timeZone, \"hive-test\", 100, 50);\n     }\n \n-    protected void setup(String host, int port, String databaseName, String timeZoneId, String connectorName, int maxOutstandingSplits, int maxThreads)\n+    protected final void setup(String host, int port, String databaseName, String timeZoneId, String connectorName, int maxOutstandingSplits, int maxThreads)\n     {\n         setupHive(connectorName, databaseName, timeZoneId);\n \n", "projectName": "facebook.presto", "bugLineNum": 411, "bugNodeStartChar": 24053, "bugNodeLength": 2602, "fixLineNum": 411, "fixNodeStartChar": 24053, "fixNodeLength": 2608, "sourceBeforeFix": "4", "sourceAfterFix": "20"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "7872d25f6c018cb6ce44c4a144b1bbe090f05b57", "fixCommitParentSHA1": "a38d2bacea3d028baff91c919c530b2be3743a6b", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/testing/TestingConnectorSession.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/testing/TestingConnectorSession.java b/presto-main/src/main/java/com/facebook/presto/testing/TestingConnectorSession.java\nindex 2e6f0c8..f1d07a7 100644\n--- a/presto-main/src/main/java/com/facebook/presto/testing/TestingConnectorSession.java\n+++ b/presto-main/src/main/java/com/facebook/presto/testing/TestingConnectorSession.java\n@@ -117,7 +117,7 @@\n                 .add(\"timeZoneKey\", timeZoneKey)\n                 .add(\"locale\", locale)\n                 .add(\"startTime\", startTime)\n-                .add(\"properties\", properties)\n+                .add(\"properties\", propertyValues)\n                 .toString();\n     }\n }\n", "projectName": "facebook.presto", "bugLineNum": 115, "bugNodeStartChar": 3706, "bugNodeLength": 252, "fixLineNum": 115, "fixNodeStartChar": 3706, "fixNodeLength": 256, "sourceBeforeFix": "MoreObjects.toStringHelper(this).add(\"user\",getUser()).add(\"timeZoneKey\",timeZoneKey).add(\"locale\",locale).add(\"startTime\",startTime).add(\"properties\",properties)", "sourceAfterFix": "MoreObjects.toStringHelper(this).add(\"user\",getUser()).add(\"timeZoneKey\",timeZoneKey).add(\"locale\",locale).add(\"startTime\",startTime).add(\"properties\",propertyValues)"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "e2a687bb3f483f747cf21fb167f357021feb2143", "fixCommitParentSHA1": "ea91047b6f0ab7b3cd21cacaf1480fa348cffcad", "bugFilePath": "presto-raptor/src/main/java/com/facebook/presto/raptor/storage/ShardCompactionManager.java", "fixPatch": "diff --git a/presto-raptor/src/main/java/com/facebook/presto/raptor/storage/ShardCompactionManager.java b/presto-raptor/src/main/java/com/facebook/presto/raptor/storage/ShardCompactionManager.java\nindex 2ba7a08..0e01e2f 100644\n--- a/presto-raptor/src/main/java/com/facebook/presto/raptor/storage/ShardCompactionManager.java\n+++ b/presto-raptor/src/main/java/com/facebook/presto/raptor/storage/ShardCompactionManager.java\n@@ -170,7 +170,7 @@\n             startDiscovery();\n         }\n \n-        if (compactionStarted.getAndSet(true)) {\n+        if (!compactionStarted.getAndSet(true)) {\n             compactionDriverService.submit(new ShardCompactionDriver());\n         }\n     }\n", "projectName": "facebook.presto", "bugLineNum": 173, "bugNodeStartChar": 7386, "bugNodeLength": 33, "fixLineNum": 173, "fixNodeStartChar": 7386, "fixNodeLength": 34, "sourceBeforeFix": "compactionStarted.getAndSet(true)", "sourceAfterFix": "!compactionStarted.getAndSet(true)"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "ea98386dfd18da047c877a2320cfdcf15df2ea06", "fixCommitParentSHA1": "c3c3be4bfe9378b710ab2880ff62cc4e601b4096", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java b/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java\nindex 35944b4..25ef990 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java\n@@ -163,7 +163,7 @@\n         return defineClass(classDefinition, PagesHashStrategy.class, callSiteBinder.getBindings(), getClass().getClassLoader());\n     }\n \n-    private void generateConstructor(ClassDefinition classDefinition,\n+    private static void generateConstructor(ClassDefinition classDefinition,\n             List<Integer> joinChannels,\n             FieldDefinition sizeField,\n             List<FieldDefinition> channelFields,\n@@ -238,7 +238,7 @@\n         constructor.ret();\n     }\n \n-    private void generateGetChannelCountMethod(ClassDefinition classDefinition, List<FieldDefinition> channelFields)\n+    private static void generateGetChannelCountMethod(ClassDefinition classDefinition, List<FieldDefinition> channelFields)\n     {\n         classDefinition.declareMethod(\n                 a(PUBLIC),\n@@ -249,7 +249,7 @@\n                 .retInt();\n     }\n \n-    private void generateGetSizeInBytesMethod(ClassDefinition classDefinition, FieldDefinition sizeField)\n+    private static void generateGetSizeInBytesMethod(ClassDefinition classDefinition, FieldDefinition sizeField)\n     {\n         MethodDefinition method = classDefinition.declareMethod(a(PUBLIC), \"getSizeInBytes\", type(long.class));\n \n@@ -259,7 +259,7 @@\n                 .retLong();\n     }\n \n-    private void generateAppendToMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> types, List<FieldDefinition> channelFields)\n+    private static void generateAppendToMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> types, List<FieldDefinition> channelFields)\n     {\n         Parameter blockIndex = arg(\"blockIndex\", int.class);\n         Parameter blockPosition = arg(\"blockPosition\", int.class);\n@@ -294,7 +294,7 @@\n         appendToBody.ret();\n     }\n \n-    private void generateHashPositionMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes, List<FieldDefinition> joinChannelFields, FieldDefinition hashChannelField)\n+    private static void generateHashPositionMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes, List<FieldDefinition> joinChannelFields, FieldDefinition hashChannelField)\n     {\n         Parameter blockIndex = arg(\"blockIndex\", int.class);\n         Parameter blockPosition = arg(\"blockPosition\", int.class);\n@@ -353,7 +353,7 @@\n                 .retInt();\n     }\n \n-    private void generateHashRowMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes)\n+    private static void generateHashRowMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes)\n     {\n         Parameter position = arg(\"position\", int.class);\n         Parameter blocks = arg(\"blocks\", Block[].class);\n@@ -392,7 +392,7 @@\n             .ifFalse(type.invoke(\"hash\", int.class, blockRef, blockPosition));\n     }\n \n-    private void generateRowEqualsRowMethod(\n+    private static void generateRowEqualsRowMethod(\n             ClassDefinition classDefinition,\n             CallSiteBinder callSiteBinder,\n             List<Type> joinChannelTypes)\n@@ -439,7 +439,7 @@\n                 .retInt();\n     }\n \n-    private void generatePositionEqualsRowMethod(\n+    private static void generatePositionEqualsRowMethod(\n             ClassDefinition classDefinition,\n             CallSiteBinder callSiteBinder,\n             List<Type> joinChannelTypes,\n@@ -486,7 +486,7 @@\n                 .retInt();\n     }\n \n-    private void generatePositionEqualsPositionMethod(\n+    private static void generatePositionEqualsPositionMethod(\n             ClassDefinition classDefinition,\n             CallSiteBinder callSiteBinder,\n             List<Type> joinChannelTypes,\n", "projectName": "facebook.presto", "bugLineNum": 166, "bugNodeStartChar": 8335, "bugNodeLength": 3760, "fixLineNum": 166, "fixNodeStartChar": 8335, "fixNodeLength": 3767, "sourceBeforeFix": "2", "sourceAfterFix": "10"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "ea98386dfd18da047c877a2320cfdcf15df2ea06", "fixCommitParentSHA1": "c3c3be4bfe9378b710ab2880ff62cc4e601b4096", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java b/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java\nindex 35944b4..25ef990 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java\n@@ -163,7 +163,7 @@\n         return defineClass(classDefinition, PagesHashStrategy.class, callSiteBinder.getBindings(), getClass().getClassLoader());\n     }\n \n-    private void generateConstructor(ClassDefinition classDefinition,\n+    private static void generateConstructor(ClassDefinition classDefinition,\n             List<Integer> joinChannels,\n             FieldDefinition sizeField,\n             List<FieldDefinition> channelFields,\n@@ -238,7 +238,7 @@\n         constructor.ret();\n     }\n \n-    private void generateGetChannelCountMethod(ClassDefinition classDefinition, List<FieldDefinition> channelFields)\n+    private static void generateGetChannelCountMethod(ClassDefinition classDefinition, List<FieldDefinition> channelFields)\n     {\n         classDefinition.declareMethod(\n                 a(PUBLIC),\n@@ -249,7 +249,7 @@\n                 .retInt();\n     }\n \n-    private void generateGetSizeInBytesMethod(ClassDefinition classDefinition, FieldDefinition sizeField)\n+    private static void generateGetSizeInBytesMethod(ClassDefinition classDefinition, FieldDefinition sizeField)\n     {\n         MethodDefinition method = classDefinition.declareMethod(a(PUBLIC), \"getSizeInBytes\", type(long.class));\n \n@@ -259,7 +259,7 @@\n                 .retLong();\n     }\n \n-    private void generateAppendToMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> types, List<FieldDefinition> channelFields)\n+    private static void generateAppendToMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> types, List<FieldDefinition> channelFields)\n     {\n         Parameter blockIndex = arg(\"blockIndex\", int.class);\n         Parameter blockPosition = arg(\"blockPosition\", int.class);\n@@ -294,7 +294,7 @@\n         appendToBody.ret();\n     }\n \n-    private void generateHashPositionMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes, List<FieldDefinition> joinChannelFields, FieldDefinition hashChannelField)\n+    private static void generateHashPositionMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes, List<FieldDefinition> joinChannelFields, FieldDefinition hashChannelField)\n     {\n         Parameter blockIndex = arg(\"blockIndex\", int.class);\n         Parameter blockPosition = arg(\"blockPosition\", int.class);\n@@ -353,7 +353,7 @@\n                 .retInt();\n     }\n \n-    private void generateHashRowMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes)\n+    private static void generateHashRowMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes)\n     {\n         Parameter position = arg(\"position\", int.class);\n         Parameter blocks = arg(\"blocks\", Block[].class);\n@@ -392,7 +392,7 @@\n             .ifFalse(type.invoke(\"hash\", int.class, blockRef, blockPosition));\n     }\n \n-    private void generateRowEqualsRowMethod(\n+    private static void generateRowEqualsRowMethod(\n             ClassDefinition classDefinition,\n             CallSiteBinder callSiteBinder,\n             List<Type> joinChannelTypes)\n@@ -439,7 +439,7 @@\n                 .retInt();\n     }\n \n-    private void generatePositionEqualsRowMethod(\n+    private static void generatePositionEqualsRowMethod(\n             ClassDefinition classDefinition,\n             CallSiteBinder callSiteBinder,\n             List<Type> joinChannelTypes,\n@@ -486,7 +486,7 @@\n                 .retInt();\n     }\n \n-    private void generatePositionEqualsPositionMethod(\n+    private static void generatePositionEqualsPositionMethod(\n             ClassDefinition classDefinition,\n             CallSiteBinder callSiteBinder,\n             List<Type> joinChannelTypes,\n", "projectName": "facebook.presto", "bugLineNum": 241, "bugNodeStartChar": 12101, "bugNodeLength": 356, "fixLineNum": 241, "fixNodeStartChar": 12101, "fixNodeLength": 363, "sourceBeforeFix": "2", "sourceAfterFix": "10"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "ea98386dfd18da047c877a2320cfdcf15df2ea06", "fixCommitParentSHA1": "c3c3be4bfe9378b710ab2880ff62cc4e601b4096", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java b/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java\nindex 35944b4..25ef990 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java\n@@ -163,7 +163,7 @@\n         return defineClass(classDefinition, PagesHashStrategy.class, callSiteBinder.getBindings(), getClass().getClassLoader());\n     }\n \n-    private void generateConstructor(ClassDefinition classDefinition,\n+    private static void generateConstructor(ClassDefinition classDefinition,\n             List<Integer> joinChannels,\n             FieldDefinition sizeField,\n             List<FieldDefinition> channelFields,\n@@ -238,7 +238,7 @@\n         constructor.ret();\n     }\n \n-    private void generateGetChannelCountMethod(ClassDefinition classDefinition, List<FieldDefinition> channelFields)\n+    private static void generateGetChannelCountMethod(ClassDefinition classDefinition, List<FieldDefinition> channelFields)\n     {\n         classDefinition.declareMethod(\n                 a(PUBLIC),\n@@ -249,7 +249,7 @@\n                 .retInt();\n     }\n \n-    private void generateGetSizeInBytesMethod(ClassDefinition classDefinition, FieldDefinition sizeField)\n+    private static void generateGetSizeInBytesMethod(ClassDefinition classDefinition, FieldDefinition sizeField)\n     {\n         MethodDefinition method = classDefinition.declareMethod(a(PUBLIC), \"getSizeInBytes\", type(long.class));\n \n@@ -259,7 +259,7 @@\n                 .retLong();\n     }\n \n-    private void generateAppendToMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> types, List<FieldDefinition> channelFields)\n+    private static void generateAppendToMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> types, List<FieldDefinition> channelFields)\n     {\n         Parameter blockIndex = arg(\"blockIndex\", int.class);\n         Parameter blockPosition = arg(\"blockPosition\", int.class);\n@@ -294,7 +294,7 @@\n         appendToBody.ret();\n     }\n \n-    private void generateHashPositionMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes, List<FieldDefinition> joinChannelFields, FieldDefinition hashChannelField)\n+    private static void generateHashPositionMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes, List<FieldDefinition> joinChannelFields, FieldDefinition hashChannelField)\n     {\n         Parameter blockIndex = arg(\"blockIndex\", int.class);\n         Parameter blockPosition = arg(\"blockPosition\", int.class);\n@@ -353,7 +353,7 @@\n                 .retInt();\n     }\n \n-    private void generateHashRowMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes)\n+    private static void generateHashRowMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes)\n     {\n         Parameter position = arg(\"position\", int.class);\n         Parameter blocks = arg(\"blocks\", Block[].class);\n@@ -392,7 +392,7 @@\n             .ifFalse(type.invoke(\"hash\", int.class, blockRef, blockPosition));\n     }\n \n-    private void generateRowEqualsRowMethod(\n+    private static void generateRowEqualsRowMethod(\n             ClassDefinition classDefinition,\n             CallSiteBinder callSiteBinder,\n             List<Type> joinChannelTypes)\n@@ -439,7 +439,7 @@\n                 .retInt();\n     }\n \n-    private void generatePositionEqualsRowMethod(\n+    private static void generatePositionEqualsRowMethod(\n             ClassDefinition classDefinition,\n             CallSiteBinder callSiteBinder,\n             List<Type> joinChannelTypes,\n@@ -486,7 +486,7 @@\n                 .retInt();\n     }\n \n-    private void generatePositionEqualsPositionMethod(\n+    private static void generatePositionEqualsPositionMethod(\n             ClassDefinition classDefinition,\n             CallSiteBinder callSiteBinder,\n             List<Type> joinChannelTypes,\n", "projectName": "facebook.presto", "bugLineNum": 252, "bugNodeStartChar": 12463, "bugNodeLength": 387, "fixLineNum": 252, "fixNodeStartChar": 12463, "fixNodeLength": 394, "sourceBeforeFix": "2", "sourceAfterFix": "10"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "ea98386dfd18da047c877a2320cfdcf15df2ea06", "fixCommitParentSHA1": "c3c3be4bfe9378b710ab2880ff62cc4e601b4096", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java b/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java\nindex 35944b4..25ef990 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java\n@@ -163,7 +163,7 @@\n         return defineClass(classDefinition, PagesHashStrategy.class, callSiteBinder.getBindings(), getClass().getClassLoader());\n     }\n \n-    private void generateConstructor(ClassDefinition classDefinition,\n+    private static void generateConstructor(ClassDefinition classDefinition,\n             List<Integer> joinChannels,\n             FieldDefinition sizeField,\n             List<FieldDefinition> channelFields,\n@@ -238,7 +238,7 @@\n         constructor.ret();\n     }\n \n-    private void generateGetChannelCountMethod(ClassDefinition classDefinition, List<FieldDefinition> channelFields)\n+    private static void generateGetChannelCountMethod(ClassDefinition classDefinition, List<FieldDefinition> channelFields)\n     {\n         classDefinition.declareMethod(\n                 a(PUBLIC),\n@@ -249,7 +249,7 @@\n                 .retInt();\n     }\n \n-    private void generateGetSizeInBytesMethod(ClassDefinition classDefinition, FieldDefinition sizeField)\n+    private static void generateGetSizeInBytesMethod(ClassDefinition classDefinition, FieldDefinition sizeField)\n     {\n         MethodDefinition method = classDefinition.declareMethod(a(PUBLIC), \"getSizeInBytes\", type(long.class));\n \n@@ -259,7 +259,7 @@\n                 .retLong();\n     }\n \n-    private void generateAppendToMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> types, List<FieldDefinition> channelFields)\n+    private static void generateAppendToMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> types, List<FieldDefinition> channelFields)\n     {\n         Parameter blockIndex = arg(\"blockIndex\", int.class);\n         Parameter blockPosition = arg(\"blockPosition\", int.class);\n@@ -294,7 +294,7 @@\n         appendToBody.ret();\n     }\n \n-    private void generateHashPositionMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes, List<FieldDefinition> joinChannelFields, FieldDefinition hashChannelField)\n+    private static void generateHashPositionMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes, List<FieldDefinition> joinChannelFields, FieldDefinition hashChannelField)\n     {\n         Parameter blockIndex = arg(\"blockIndex\", int.class);\n         Parameter blockPosition = arg(\"blockPosition\", int.class);\n@@ -353,7 +353,7 @@\n                 .retInt();\n     }\n \n-    private void generateHashRowMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes)\n+    private static void generateHashRowMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes)\n     {\n         Parameter position = arg(\"position\", int.class);\n         Parameter blocks = arg(\"blocks\", Block[].class);\n@@ -392,7 +392,7 @@\n             .ifFalse(type.invoke(\"hash\", int.class, blockRef, blockPosition));\n     }\n \n-    private void generateRowEqualsRowMethod(\n+    private static void generateRowEqualsRowMethod(\n             ClassDefinition classDefinition,\n             CallSiteBinder callSiteBinder,\n             List<Type> joinChannelTypes)\n@@ -439,7 +439,7 @@\n                 .retInt();\n     }\n \n-    private void generatePositionEqualsRowMethod(\n+    private static void generatePositionEqualsRowMethod(\n             ClassDefinition classDefinition,\n             CallSiteBinder callSiteBinder,\n             List<Type> joinChannelTypes,\n@@ -486,7 +486,7 @@\n                 .retInt();\n     }\n \n-    private void generatePositionEqualsPositionMethod(\n+    private static void generatePositionEqualsPositionMethod(\n             ClassDefinition classDefinition,\n             CallSiteBinder callSiteBinder,\n             List<Type> joinChannelTypes,\n", "projectName": "facebook.presto", "bugLineNum": 262, "bugNodeStartChar": 12856, "bugNodeLength": 1869, "fixLineNum": 262, "fixNodeStartChar": 12856, "fixNodeLength": 1876, "sourceBeforeFix": "2", "sourceAfterFix": "10"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "ea98386dfd18da047c877a2320cfdcf15df2ea06", "fixCommitParentSHA1": "c3c3be4bfe9378b710ab2880ff62cc4e601b4096", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java b/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java\nindex 35944b4..25ef990 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java\n@@ -163,7 +163,7 @@\n         return defineClass(classDefinition, PagesHashStrategy.class, callSiteBinder.getBindings(), getClass().getClassLoader());\n     }\n \n-    private void generateConstructor(ClassDefinition classDefinition,\n+    private static void generateConstructor(ClassDefinition classDefinition,\n             List<Integer> joinChannels,\n             FieldDefinition sizeField,\n             List<FieldDefinition> channelFields,\n@@ -238,7 +238,7 @@\n         constructor.ret();\n     }\n \n-    private void generateGetChannelCountMethod(ClassDefinition classDefinition, List<FieldDefinition> channelFields)\n+    private static void generateGetChannelCountMethod(ClassDefinition classDefinition, List<FieldDefinition> channelFields)\n     {\n         classDefinition.declareMethod(\n                 a(PUBLIC),\n@@ -249,7 +249,7 @@\n                 .retInt();\n     }\n \n-    private void generateGetSizeInBytesMethod(ClassDefinition classDefinition, FieldDefinition sizeField)\n+    private static void generateGetSizeInBytesMethod(ClassDefinition classDefinition, FieldDefinition sizeField)\n     {\n         MethodDefinition method = classDefinition.declareMethod(a(PUBLIC), \"getSizeInBytes\", type(long.class));\n \n@@ -259,7 +259,7 @@\n                 .retLong();\n     }\n \n-    private void generateAppendToMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> types, List<FieldDefinition> channelFields)\n+    private static void generateAppendToMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> types, List<FieldDefinition> channelFields)\n     {\n         Parameter blockIndex = arg(\"blockIndex\", int.class);\n         Parameter blockPosition = arg(\"blockPosition\", int.class);\n@@ -294,7 +294,7 @@\n         appendToBody.ret();\n     }\n \n-    private void generateHashPositionMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes, List<FieldDefinition> joinChannelFields, FieldDefinition hashChannelField)\n+    private static void generateHashPositionMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes, List<FieldDefinition> joinChannelFields, FieldDefinition hashChannelField)\n     {\n         Parameter blockIndex = arg(\"blockIndex\", int.class);\n         Parameter blockPosition = arg(\"blockPosition\", int.class);\n@@ -353,7 +353,7 @@\n                 .retInt();\n     }\n \n-    private void generateHashRowMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes)\n+    private static void generateHashRowMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes)\n     {\n         Parameter position = arg(\"position\", int.class);\n         Parameter blocks = arg(\"blocks\", Block[].class);\n@@ -392,7 +392,7 @@\n             .ifFalse(type.invoke(\"hash\", int.class, blockRef, blockPosition));\n     }\n \n-    private void generateRowEqualsRowMethod(\n+    private static void generateRowEqualsRowMethod(\n             ClassDefinition classDefinition,\n             CallSiteBinder callSiteBinder,\n             List<Type> joinChannelTypes)\n@@ -439,7 +439,7 @@\n                 .retInt();\n     }\n \n-    private void generatePositionEqualsRowMethod(\n+    private static void generatePositionEqualsRowMethod(\n             ClassDefinition classDefinition,\n             CallSiteBinder callSiteBinder,\n             List<Type> joinChannelTypes,\n@@ -486,7 +486,7 @@\n                 .retInt();\n     }\n \n-    private void generatePositionEqualsPositionMethod(\n+    private static void generatePositionEqualsPositionMethod(\n             ClassDefinition classDefinition,\n             CallSiteBinder callSiteBinder,\n             List<Type> joinChannelTypes,\n", "projectName": "facebook.presto", "bugLineNum": 297, "bugNodeStartChar": 14731, "bugNodeLength": 2483, "fixLineNum": 297, "fixNodeStartChar": 14731, "fixNodeLength": 2490, "sourceBeforeFix": "2", "sourceAfterFix": "10"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "ea98386dfd18da047c877a2320cfdcf15df2ea06", "fixCommitParentSHA1": "c3c3be4bfe9378b710ab2880ff62cc4e601b4096", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java b/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java\nindex 35944b4..25ef990 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java\n@@ -163,7 +163,7 @@\n         return defineClass(classDefinition, PagesHashStrategy.class, callSiteBinder.getBindings(), getClass().getClassLoader());\n     }\n \n-    private void generateConstructor(ClassDefinition classDefinition,\n+    private static void generateConstructor(ClassDefinition classDefinition,\n             List<Integer> joinChannels,\n             FieldDefinition sizeField,\n             List<FieldDefinition> channelFields,\n@@ -238,7 +238,7 @@\n         constructor.ret();\n     }\n \n-    private void generateGetChannelCountMethod(ClassDefinition classDefinition, List<FieldDefinition> channelFields)\n+    private static void generateGetChannelCountMethod(ClassDefinition classDefinition, List<FieldDefinition> channelFields)\n     {\n         classDefinition.declareMethod(\n                 a(PUBLIC),\n@@ -249,7 +249,7 @@\n                 .retInt();\n     }\n \n-    private void generateGetSizeInBytesMethod(ClassDefinition classDefinition, FieldDefinition sizeField)\n+    private static void generateGetSizeInBytesMethod(ClassDefinition classDefinition, FieldDefinition sizeField)\n     {\n         MethodDefinition method = classDefinition.declareMethod(a(PUBLIC), \"getSizeInBytes\", type(long.class));\n \n@@ -259,7 +259,7 @@\n                 .retLong();\n     }\n \n-    private void generateAppendToMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> types, List<FieldDefinition> channelFields)\n+    private static void generateAppendToMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> types, List<FieldDefinition> channelFields)\n     {\n         Parameter blockIndex = arg(\"blockIndex\", int.class);\n         Parameter blockPosition = arg(\"blockPosition\", int.class);\n@@ -294,7 +294,7 @@\n         appendToBody.ret();\n     }\n \n-    private void generateHashPositionMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes, List<FieldDefinition> joinChannelFields, FieldDefinition hashChannelField)\n+    private static void generateHashPositionMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes, List<FieldDefinition> joinChannelFields, FieldDefinition hashChannelField)\n     {\n         Parameter blockIndex = arg(\"blockIndex\", int.class);\n         Parameter blockPosition = arg(\"blockPosition\", int.class);\n@@ -353,7 +353,7 @@\n                 .retInt();\n     }\n \n-    private void generateHashRowMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes)\n+    private static void generateHashRowMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes)\n     {\n         Parameter position = arg(\"position\", int.class);\n         Parameter blocks = arg(\"blocks\", Block[].class);\n@@ -392,7 +392,7 @@\n             .ifFalse(type.invoke(\"hash\", int.class, blockRef, blockPosition));\n     }\n \n-    private void generateRowEqualsRowMethod(\n+    private static void generateRowEqualsRowMethod(\n             ClassDefinition classDefinition,\n             CallSiteBinder callSiteBinder,\n             List<Type> joinChannelTypes)\n@@ -439,7 +439,7 @@\n                 .retInt();\n     }\n \n-    private void generatePositionEqualsRowMethod(\n+    private static void generatePositionEqualsRowMethod(\n             ClassDefinition classDefinition,\n             CallSiteBinder callSiteBinder,\n             List<Type> joinChannelTypes,\n@@ -486,7 +486,7 @@\n                 .retInt();\n     }\n \n-    private void generatePositionEqualsPositionMethod(\n+    private static void generatePositionEqualsPositionMethod(\n             ClassDefinition classDefinition,\n             CallSiteBinder callSiteBinder,\n             List<Type> joinChannelTypes,\n", "projectName": "facebook.presto", "bugLineNum": 356, "bugNodeStartChar": 17220, "bugNodeLength": 1333, "fixLineNum": 356, "fixNodeStartChar": 17220, "fixNodeLength": 1340, "sourceBeforeFix": "2", "sourceAfterFix": "10"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "ea98386dfd18da047c877a2320cfdcf15df2ea06", "fixCommitParentSHA1": "c3c3be4bfe9378b710ab2880ff62cc4e601b4096", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java b/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java\nindex 35944b4..25ef990 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java\n@@ -163,7 +163,7 @@\n         return defineClass(classDefinition, PagesHashStrategy.class, callSiteBinder.getBindings(), getClass().getClassLoader());\n     }\n \n-    private void generateConstructor(ClassDefinition classDefinition,\n+    private static void generateConstructor(ClassDefinition classDefinition,\n             List<Integer> joinChannels,\n             FieldDefinition sizeField,\n             List<FieldDefinition> channelFields,\n@@ -238,7 +238,7 @@\n         constructor.ret();\n     }\n \n-    private void generateGetChannelCountMethod(ClassDefinition classDefinition, List<FieldDefinition> channelFields)\n+    private static void generateGetChannelCountMethod(ClassDefinition classDefinition, List<FieldDefinition> channelFields)\n     {\n         classDefinition.declareMethod(\n                 a(PUBLIC),\n@@ -249,7 +249,7 @@\n                 .retInt();\n     }\n \n-    private void generateGetSizeInBytesMethod(ClassDefinition classDefinition, FieldDefinition sizeField)\n+    private static void generateGetSizeInBytesMethod(ClassDefinition classDefinition, FieldDefinition sizeField)\n     {\n         MethodDefinition method = classDefinition.declareMethod(a(PUBLIC), \"getSizeInBytes\", type(long.class));\n \n@@ -259,7 +259,7 @@\n                 .retLong();\n     }\n \n-    private void generateAppendToMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> types, List<FieldDefinition> channelFields)\n+    private static void generateAppendToMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> types, List<FieldDefinition> channelFields)\n     {\n         Parameter blockIndex = arg(\"blockIndex\", int.class);\n         Parameter blockPosition = arg(\"blockPosition\", int.class);\n@@ -294,7 +294,7 @@\n         appendToBody.ret();\n     }\n \n-    private void generateHashPositionMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes, List<FieldDefinition> joinChannelFields, FieldDefinition hashChannelField)\n+    private static void generateHashPositionMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes, List<FieldDefinition> joinChannelFields, FieldDefinition hashChannelField)\n     {\n         Parameter blockIndex = arg(\"blockIndex\", int.class);\n         Parameter blockPosition = arg(\"blockPosition\", int.class);\n@@ -353,7 +353,7 @@\n                 .retInt();\n     }\n \n-    private void generateHashRowMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes)\n+    private static void generateHashRowMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes)\n     {\n         Parameter position = arg(\"position\", int.class);\n         Parameter blocks = arg(\"blocks\", Block[].class);\n@@ -392,7 +392,7 @@\n             .ifFalse(type.invoke(\"hash\", int.class, blockRef, blockPosition));\n     }\n \n-    private void generateRowEqualsRowMethod(\n+    private static void generateRowEqualsRowMethod(\n             ClassDefinition classDefinition,\n             CallSiteBinder callSiteBinder,\n             List<Type> joinChannelTypes)\n@@ -439,7 +439,7 @@\n                 .retInt();\n     }\n \n-    private void generatePositionEqualsRowMethod(\n+    private static void generatePositionEqualsRowMethod(\n             ClassDefinition classDefinition,\n             CallSiteBinder callSiteBinder,\n             List<Type> joinChannelTypes,\n@@ -486,7 +486,7 @@\n                 .retInt();\n     }\n \n-    private void generatePositionEqualsPositionMethod(\n+    private static void generatePositionEqualsPositionMethod(\n             ClassDefinition classDefinition,\n             CallSiteBinder callSiteBinder,\n             List<Type> joinChannelTypes,\n", "projectName": "facebook.presto", "bugLineNum": 395, "bugNodeStartChar": 18933, "bugNodeLength": 1802, "fixLineNum": 395, "fixNodeStartChar": 18933, "fixNodeLength": 1809, "sourceBeforeFix": "2", "sourceAfterFix": "10"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "ea98386dfd18da047c877a2320cfdcf15df2ea06", "fixCommitParentSHA1": "c3c3be4bfe9378b710ab2880ff62cc4e601b4096", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java b/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java\nindex 35944b4..25ef990 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java\n@@ -163,7 +163,7 @@\n         return defineClass(classDefinition, PagesHashStrategy.class, callSiteBinder.getBindings(), getClass().getClassLoader());\n     }\n \n-    private void generateConstructor(ClassDefinition classDefinition,\n+    private static void generateConstructor(ClassDefinition classDefinition,\n             List<Integer> joinChannels,\n             FieldDefinition sizeField,\n             List<FieldDefinition> channelFields,\n@@ -238,7 +238,7 @@\n         constructor.ret();\n     }\n \n-    private void generateGetChannelCountMethod(ClassDefinition classDefinition, List<FieldDefinition> channelFields)\n+    private static void generateGetChannelCountMethod(ClassDefinition classDefinition, List<FieldDefinition> channelFields)\n     {\n         classDefinition.declareMethod(\n                 a(PUBLIC),\n@@ -249,7 +249,7 @@\n                 .retInt();\n     }\n \n-    private void generateGetSizeInBytesMethod(ClassDefinition classDefinition, FieldDefinition sizeField)\n+    private static void generateGetSizeInBytesMethod(ClassDefinition classDefinition, FieldDefinition sizeField)\n     {\n         MethodDefinition method = classDefinition.declareMethod(a(PUBLIC), \"getSizeInBytes\", type(long.class));\n \n@@ -259,7 +259,7 @@\n                 .retLong();\n     }\n \n-    private void generateAppendToMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> types, List<FieldDefinition> channelFields)\n+    private static void generateAppendToMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> types, List<FieldDefinition> channelFields)\n     {\n         Parameter blockIndex = arg(\"blockIndex\", int.class);\n         Parameter blockPosition = arg(\"blockPosition\", int.class);\n@@ -294,7 +294,7 @@\n         appendToBody.ret();\n     }\n \n-    private void generateHashPositionMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes, List<FieldDefinition> joinChannelFields, FieldDefinition hashChannelField)\n+    private static void generateHashPositionMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes, List<FieldDefinition> joinChannelFields, FieldDefinition hashChannelField)\n     {\n         Parameter blockIndex = arg(\"blockIndex\", int.class);\n         Parameter blockPosition = arg(\"blockPosition\", int.class);\n@@ -353,7 +353,7 @@\n                 .retInt();\n     }\n \n-    private void generateHashRowMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes)\n+    private static void generateHashRowMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes)\n     {\n         Parameter position = arg(\"position\", int.class);\n         Parameter blocks = arg(\"blocks\", Block[].class);\n@@ -392,7 +392,7 @@\n             .ifFalse(type.invoke(\"hash\", int.class, blockRef, blockPosition));\n     }\n \n-    private void generateRowEqualsRowMethod(\n+    private static void generateRowEqualsRowMethod(\n             ClassDefinition classDefinition,\n             CallSiteBinder callSiteBinder,\n             List<Type> joinChannelTypes)\n@@ -439,7 +439,7 @@\n                 .retInt();\n     }\n \n-    private void generatePositionEqualsRowMethod(\n+    private static void generatePositionEqualsRowMethod(\n             ClassDefinition classDefinition,\n             CallSiteBinder callSiteBinder,\n             List<Type> joinChannelTypes,\n@@ -486,7 +486,7 @@\n                 .retInt();\n     }\n \n-    private void generatePositionEqualsPositionMethod(\n+    private static void generatePositionEqualsPositionMethod(\n             ClassDefinition classDefinition,\n             CallSiteBinder callSiteBinder,\n             List<Type> joinChannelTypes,\n", "projectName": "facebook.presto", "bugLineNum": 442, "bugNodeStartChar": 20741, "bugNodeLength": 1876, "fixLineNum": 442, "fixNodeStartChar": 20741, "fixNodeLength": 1883, "sourceBeforeFix": "2", "sourceAfterFix": "10"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "ea98386dfd18da047c877a2320cfdcf15df2ea06", "fixCommitParentSHA1": "c3c3be4bfe9378b710ab2880ff62cc4e601b4096", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java b/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java\nindex 35944b4..25ef990 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinCompiler.java\n@@ -163,7 +163,7 @@\n         return defineClass(classDefinition, PagesHashStrategy.class, callSiteBinder.getBindings(), getClass().getClassLoader());\n     }\n \n-    private void generateConstructor(ClassDefinition classDefinition,\n+    private static void generateConstructor(ClassDefinition classDefinition,\n             List<Integer> joinChannels,\n             FieldDefinition sizeField,\n             List<FieldDefinition> channelFields,\n@@ -238,7 +238,7 @@\n         constructor.ret();\n     }\n \n-    private void generateGetChannelCountMethod(ClassDefinition classDefinition, List<FieldDefinition> channelFields)\n+    private static void generateGetChannelCountMethod(ClassDefinition classDefinition, List<FieldDefinition> channelFields)\n     {\n         classDefinition.declareMethod(\n                 a(PUBLIC),\n@@ -249,7 +249,7 @@\n                 .retInt();\n     }\n \n-    private void generateGetSizeInBytesMethod(ClassDefinition classDefinition, FieldDefinition sizeField)\n+    private static void generateGetSizeInBytesMethod(ClassDefinition classDefinition, FieldDefinition sizeField)\n     {\n         MethodDefinition method = classDefinition.declareMethod(a(PUBLIC), \"getSizeInBytes\", type(long.class));\n \n@@ -259,7 +259,7 @@\n                 .retLong();\n     }\n \n-    private void generateAppendToMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> types, List<FieldDefinition> channelFields)\n+    private static void generateAppendToMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> types, List<FieldDefinition> channelFields)\n     {\n         Parameter blockIndex = arg(\"blockIndex\", int.class);\n         Parameter blockPosition = arg(\"blockPosition\", int.class);\n@@ -294,7 +294,7 @@\n         appendToBody.ret();\n     }\n \n-    private void generateHashPositionMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes, List<FieldDefinition> joinChannelFields, FieldDefinition hashChannelField)\n+    private static void generateHashPositionMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes, List<FieldDefinition> joinChannelFields, FieldDefinition hashChannelField)\n     {\n         Parameter blockIndex = arg(\"blockIndex\", int.class);\n         Parameter blockPosition = arg(\"blockPosition\", int.class);\n@@ -353,7 +353,7 @@\n                 .retInt();\n     }\n \n-    private void generateHashRowMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes)\n+    private static void generateHashRowMethod(ClassDefinition classDefinition, CallSiteBinder callSiteBinder, List<Type> joinChannelTypes)\n     {\n         Parameter position = arg(\"position\", int.class);\n         Parameter blocks = arg(\"blocks\", Block[].class);\n@@ -392,7 +392,7 @@\n             .ifFalse(type.invoke(\"hash\", int.class, blockRef, blockPosition));\n     }\n \n-    private void generateRowEqualsRowMethod(\n+    private static void generateRowEqualsRowMethod(\n             ClassDefinition classDefinition,\n             CallSiteBinder callSiteBinder,\n             List<Type> joinChannelTypes)\n@@ -439,7 +439,7 @@\n                 .retInt();\n     }\n \n-    private void generatePositionEqualsRowMethod(\n+    private static void generatePositionEqualsRowMethod(\n             ClassDefinition classDefinition,\n             CallSiteBinder callSiteBinder,\n             List<Type> joinChannelTypes,\n@@ -486,7 +486,7 @@\n                 .retInt();\n     }\n \n-    private void generatePositionEqualsPositionMethod(\n+    private static void generatePositionEqualsPositionMethod(\n             ClassDefinition classDefinition,\n             CallSiteBinder callSiteBinder,\n             List<Type> joinChannelTypes,\n", "projectName": "facebook.presto", "bugLineNum": 489, "bugNodeStartChar": 22623, "bugNodeLength": 2061, "fixLineNum": 489, "fixNodeStartChar": 22623, "fixNodeLength": 2068, "sourceBeforeFix": "2", "sourceAfterFix": "10"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "c4c48e72c78065000c55e71bf3df9190ddb8bc09", "fixCommitParentSHA1": "b84e08357a30a4097b8920d1b1a608612bad36f2", "bugFilePath": "presto-spi/src/main/java/com/facebook/presto/spi/SerializableNativeValue.java", "fixPatch": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/SerializableNativeValue.java b/presto-spi/src/main/java/com/facebook/presto/spi/SerializableNativeValue.java\nindex 3d3d63f..e37b1da 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/SerializableNativeValue.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/SerializableNativeValue.java\n@@ -84,7 +84,7 @@\n                 throws IOException\n         {\n             generator.writeStartObject();\n-            generator.writeStringField(\"type\", value.getType().getCanonicalName());\n+            generator.writeStringField(\"type\", value.getType().getName());\n             generator.writeFieldName(\"value\");\n             if (value.getValue() == null) {\n                 generator.writeNull();\n", "projectName": "facebook.presto", "bugLineNum": 87, "bugNodeStartChar": 2938, "bugNodeLength": 34, "fixLineNum": 87, "fixNodeStartChar": 2938, "fixNodeLength": 25, "sourceBeforeFix": "value.getType().getCanonicalName()", "sourceAfterFix": "value.getType().getName()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "c4c48e72c78065000c55e71bf3df9190ddb8bc09", "fixCommitParentSHA1": "b84e08357a30a4097b8920d1b1a608612bad36f2", "bugFilePath": "presto-spi/src/main/java/com/facebook/presto/spi/SerializableNativeValue.java", "fixPatch": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/SerializableNativeValue.java b/presto-spi/src/main/java/com/facebook/presto/spi/SerializableNativeValue.java\nindex 3d3d63f..e37b1da 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/SerializableNativeValue.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/SerializableNativeValue.java\n@@ -84,7 +84,7 @@\n                 throws IOException\n         {\n             generator.writeStartObject();\n-            generator.writeStringField(\"type\", value.getType().getCanonicalName());\n+            generator.writeStringField(\"type\", value.getType().getName());\n             generator.writeFieldName(\"value\");\n             if (value.getValue() == null) {\n                 generator.writeNull();\n", "projectName": "facebook.presto", "bugLineNum": 87, "bugNodeStartChar": 2938, "bugNodeLength": 34, "fixLineNum": 87, "fixNodeStartChar": 2938, "fixNodeLength": 25, "sourceBeforeFix": "value.getType().getCanonicalName()", "sourceAfterFix": "value.getType().getName()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "5f973272def613827e164c06e948ca8e7ae2bc34", "fixCommitParentSHA1": "4b2b644646506124ae14cdea21e6a5b01bfe4726", "bugFilePath": "presto-cassandra/src/main/java/com/facebook/presto/cassandra/CassandraRecordSetProvider.java", "fixPatch": "diff --git a/presto-cassandra/src/main/java/com/facebook/presto/cassandra/CassandraRecordSetProvider.java b/presto-cassandra/src/main/java/com/facebook/presto/cassandra/CassandraRecordSetProvider.java\nindex 9627da1..39f449e 100644\n--- a/presto-cassandra/src/main/java/com/facebook/presto/cassandra/CassandraRecordSetProvider.java\n+++ b/presto-cassandra/src/main/java/com/facebook/presto/cassandra/CassandraRecordSetProvider.java\n@@ -34,7 +34,7 @@\n public class CassandraRecordSetProvider\n         implements ConnectorRecordSetProvider\n {\n-    private static final Logger log = Logger.get(ConnectorRecordSetProvider.class);\n+    private static final Logger log = Logger.get(CassandraRecordSetProvider.class);\n \n     private final String connectorId;\n     private final CassandraSession cassandraSession;\n", "projectName": "facebook.presto", "bugLineNum": 37, "bugNodeStartChar": 1432, "bugNodeLength": 32, "fixLineNum": 37, "fixNodeStartChar": 1432, "fixNodeLength": 32, "sourceBeforeFix": "ConnectorRecordSetProvider.class", "sourceAfterFix": "CassandraRecordSetProvider.class"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "c38ee7371ffee08671b886ff9eb74a4cb35b92e7", "fixCommitParentSHA1": "99c60a7cc17231a19dea3ec0e593c8516f62812f", "bugFilePath": "presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestIntegrationSmokeTest.java", "fixPatch": "diff --git a/presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestIntegrationSmokeTest.java b/presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestIntegrationSmokeTest.java\nindex 3501719..e51af6a 100644\n--- a/presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestIntegrationSmokeTest.java\n+++ b/presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestIntegrationSmokeTest.java\n@@ -166,7 +166,7 @@\n         MaterializedResult expectedTables = MaterializedResult.resultBuilder(queryRunner.getDefaultSession(), VARCHAR)\n                 .row(\"orders\")\n                 .build();\n-        assertEquals(actualTables, expectedTables);\n+        assertContains(actualTables, expectedTables);\n     }\n \n     @Test\n", "projectName": "facebook.presto", "bugLineNum": 169, "bugNodeStartChar": 5285, "bugNodeLength": 42, "fixLineNum": 169, "fixNodeStartChar": 5285, "fixNodeLength": 44, "sourceBeforeFix": "assertEquals(actualTables,expectedTables)", "sourceAfterFix": "assertContains(actualTables,expectedTables)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "c38ee7371ffee08671b886ff9eb74a4cb35b92e7", "fixCommitParentSHA1": "99c60a7cc17231a19dea3ec0e593c8516f62812f", "bugFilePath": "presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestIntegrationSmokeTest.java", "fixPatch": "diff --git a/presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestIntegrationSmokeTest.java b/presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestIntegrationSmokeTest.java\nindex 3501719..e51af6a 100644\n--- a/presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestIntegrationSmokeTest.java\n+++ b/presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestIntegrationSmokeTest.java\n@@ -166,7 +166,7 @@\n         MaterializedResult expectedTables = MaterializedResult.resultBuilder(queryRunner.getDefaultSession(), VARCHAR)\n                 .row(\"orders\")\n                 .build();\n-        assertEquals(actualTables, expectedTables);\n+        assertContains(actualTables, expectedTables);\n     }\n \n     @Test\n", "projectName": "facebook.presto", "bugLineNum": 169, "bugNodeStartChar": 5285, "bugNodeLength": 42, "fixLineNum": 169, "fixNodeStartChar": 5285, "fixNodeLength": 44, "sourceBeforeFix": "assertEquals(actualTables,expectedTables)", "sourceAfterFix": "assertContains(actualTables,expectedTables)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "ed13d3007bbe9cb7df8641d2e287bf94c314fb86", "fixCommitParentSHA1": "1615e28de0e30094aca5d4263b378cc7d55451de", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/operator/OperatorContext.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/OperatorContext.java b/presto-main/src/main/java/com/facebook/presto/operator/OperatorContext.java\nindex 472b3ce..129964d 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/OperatorContext.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/OperatorContext.java\n@@ -250,7 +250,7 @@\n                 }\n             });\n         }\n-        long newReservation = memoryReservation.getAndAdd(bytes);\n+        long newReservation = memoryReservation.addAndGet(bytes);\n         if (newReservation > maxMemoryReservation) {\n             memoryReservation.getAndAdd(-bytes);\n             throw new ExceededMemoryLimitException(getMaxMemorySize());\n@@ -263,7 +263,7 @@\n             return false;\n         }\n \n-        long newReservation = memoryReservation.getAndAdd(bytes);\n+        long newReservation = memoryReservation.addAndGet(bytes);\n         if (newReservation > maxMemoryReservation) {\n             memoryReservation.getAndAdd(-bytes);\n             return false;\n", "projectName": "facebook.presto", "bugLineNum": 253, "bugNodeStartChar": 9456, "bugNodeLength": 34, "fixLineNum": 253, "fixNodeStartChar": 9456, "fixNodeLength": 34, "sourceBeforeFix": "memoryReservation.getAndAdd(bytes)", "sourceAfterFix": "memoryReservation.addAndGet(bytes)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "ed13d3007bbe9cb7df8641d2e287bf94c314fb86", "fixCommitParentSHA1": "1615e28de0e30094aca5d4263b378cc7d55451de", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/operator/OperatorContext.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/OperatorContext.java b/presto-main/src/main/java/com/facebook/presto/operator/OperatorContext.java\nindex 472b3ce..129964d 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/OperatorContext.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/OperatorContext.java\n@@ -250,7 +250,7 @@\n                 }\n             });\n         }\n-        long newReservation = memoryReservation.getAndAdd(bytes);\n+        long newReservation = memoryReservation.addAndGet(bytes);\n         if (newReservation > maxMemoryReservation) {\n             memoryReservation.getAndAdd(-bytes);\n             throw new ExceededMemoryLimitException(getMaxMemorySize());\n@@ -263,7 +263,7 @@\n             return false;\n         }\n \n-        long newReservation = memoryReservation.getAndAdd(bytes);\n+        long newReservation = memoryReservation.addAndGet(bytes);\n         if (newReservation > maxMemoryReservation) {\n             memoryReservation.getAndAdd(-bytes);\n             return false;\n", "projectName": "facebook.presto", "bugLineNum": 253, "bugNodeStartChar": 9456, "bugNodeLength": 34, "fixLineNum": 253, "fixNodeStartChar": 9456, "fixNodeLength": 34, "sourceBeforeFix": "memoryReservation.getAndAdd(bytes)", "sourceAfterFix": "memoryReservation.addAndGet(bytes)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "ed13d3007bbe9cb7df8641d2e287bf94c314fb86", "fixCommitParentSHA1": "1615e28de0e30094aca5d4263b378cc7d55451de", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/operator/OperatorContext.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/OperatorContext.java b/presto-main/src/main/java/com/facebook/presto/operator/OperatorContext.java\nindex 472b3ce..129964d 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/OperatorContext.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/OperatorContext.java\n@@ -250,7 +250,7 @@\n                 }\n             });\n         }\n-        long newReservation = memoryReservation.getAndAdd(bytes);\n+        long newReservation = memoryReservation.addAndGet(bytes);\n         if (newReservation > maxMemoryReservation) {\n             memoryReservation.getAndAdd(-bytes);\n             throw new ExceededMemoryLimitException(getMaxMemorySize());\n@@ -263,7 +263,7 @@\n             return false;\n         }\n \n-        long newReservation = memoryReservation.getAndAdd(bytes);\n+        long newReservation = memoryReservation.addAndGet(bytes);\n         if (newReservation > maxMemoryReservation) {\n             memoryReservation.getAndAdd(-bytes);\n             return false;\n", "projectName": "facebook.presto", "bugLineNum": 266, "bugNodeStartChar": 9858, "bugNodeLength": 34, "fixLineNum": 266, "fixNodeStartChar": 9858, "fixNodeLength": 34, "sourceBeforeFix": "memoryReservation.getAndAdd(bytes)", "sourceAfterFix": "memoryReservation.addAndGet(bytes)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "ed13d3007bbe9cb7df8641d2e287bf94c314fb86", "fixCommitParentSHA1": "1615e28de0e30094aca5d4263b378cc7d55451de", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/operator/OperatorContext.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/OperatorContext.java b/presto-main/src/main/java/com/facebook/presto/operator/OperatorContext.java\nindex 472b3ce..129964d 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/OperatorContext.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/OperatorContext.java\n@@ -250,7 +250,7 @@\n                 }\n             });\n         }\n-        long newReservation = memoryReservation.getAndAdd(bytes);\n+        long newReservation = memoryReservation.addAndGet(bytes);\n         if (newReservation > maxMemoryReservation) {\n             memoryReservation.getAndAdd(-bytes);\n             throw new ExceededMemoryLimitException(getMaxMemorySize());\n@@ -263,7 +263,7 @@\n             return false;\n         }\n \n-        long newReservation = memoryReservation.getAndAdd(bytes);\n+        long newReservation = memoryReservation.addAndGet(bytes);\n         if (newReservation > maxMemoryReservation) {\n             memoryReservation.getAndAdd(-bytes);\n             return false;\n", "projectName": "facebook.presto", "bugLineNum": 266, "bugNodeStartChar": 9858, "bugNodeLength": 34, "fixLineNum": 266, "fixNodeStartChar": 9858, "fixNodeLength": 34, "sourceBeforeFix": "memoryReservation.getAndAdd(bytes)", "sourceAfterFix": "memoryReservation.addAndGet(bytes)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "0673ae2adcc189937b5d30a361202d2e80ad9e0e", "fixCommitParentSHA1": "45aec56daca2c57598c8cbb0c348798ab2353f95", "bugFilePath": "presto-spi/src/main/java/com/facebook/presto/spi/block/SliceArrayBlock.java", "fixPatch": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/block/SliceArrayBlock.java b/presto-spi/src/main/java/com/facebook/presto/spi/block/SliceArrayBlock.java\nindex 3d2d6de..d2981eb 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/block/SliceArrayBlock.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/block/SliceArrayBlock.java\n@@ -131,7 +131,7 @@\n             Slice distinct = distinctValues.get(slice);\n             if (distinct == null) {\n                 distinct = Slices.copyOf(slice);\n-                distinctValues.put(distinct, distinct);\n+                distinctValues.put(slice, distinct);\n             }\n             newValues[i] = distinct;\n         }\n", "projectName": "facebook.presto", "bugLineNum": 134, "bugNodeStartChar": 3987, "bugNodeLength": 38, "fixLineNum": 134, "fixNodeStartChar": 3987, "fixNodeLength": 35, "sourceBeforeFix": "distinctValues.put(distinct,distinct)", "sourceAfterFix": "distinctValues.put(slice,distinct)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d5f8dbfc487cc66a50f7bfbbf03b4a0a8f9cdec3", "fixCommitParentSHA1": "f8a872de4699646bdd4629671637314b35c45fab", "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/RetryDriver.java", "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/RetryDriver.java b/presto-hive/src/main/java/com/facebook/presto/hive/RetryDriver.java\nindex a44b945..ff70f99 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/RetryDriver.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/RetryDriver.java\n@@ -32,7 +32,7 @@\n     private static final Duration DEFAULT_MAX_RETRY_TIME = Duration.valueOf(\"30s\");\n     private static final double DEFAULT_SCALE_FACTOR = 2.0;\n \n-    private final int maxRetryAttempts;\n+    private final int maxAttempts;\n     private final Duration minSleepTime;\n     private final Duration maxSleepTime;\n     private final double scaleFactor;\n@@ -40,14 +40,14 @@\n     private final List<Class<? extends Exception>> exceptionWhiteList;\n \n     private RetryDriver(\n-            int maxRetryAttempts,\n+            int maxAttempts,\n             Duration minSleepTime,\n             Duration maxSleepTime,\n             double scaleFactor,\n             Duration maxRetryTime,\n             List<Class<? extends Exception>> exceptionWhiteList)\n     {\n-        this.maxRetryAttempts = maxRetryAttempts;\n+        this.maxAttempts = maxAttempts;\n         this.minSleepTime = minSleepTime;\n         this.maxSleepTime = maxSleepTime;\n         this.scaleFactor = scaleFactor;\n@@ -77,7 +77,7 @@\n \n     public final RetryDriver exponentialBackoff(Duration minSleepTime, Duration maxSleepTime, Duration maxRetryTime, double scaleFactor)\n     {\n-        return new RetryDriver(maxRetryAttempts, minSleepTime, maxSleepTime, scaleFactor, maxRetryTime, exceptionWhiteList);\n+        return new RetryDriver(maxAttempts, minSleepTime, maxSleepTime, scaleFactor, maxRetryTime, exceptionWhiteList);\n     }\n \n     @SafeVarargs\n@@ -89,7 +89,7 @@\n                 .addAll(Arrays.asList(classes))\n                 .build();\n \n-        return new RetryDriver(maxRetryAttempts, minSleepTime, maxSleepTime, scaleFactor, maxRetryTime, exceptions);\n+        return new RetryDriver(maxAttempts, minSleepTime, maxSleepTime, scaleFactor, maxRetryTime, exceptions);\n     }\n \n     public RetryDriver stopOnIllegalExceptions()\n@@ -116,7 +116,7 @@\n                         throw e;\n                     }\n                 }\n-                if (attempt >= maxRetryAttempts || Duration.nanosSince(startTime).compareTo(maxRetryTime) >= 0) {\n+                if (attempt >= maxAttempts || Duration.nanosSince(startTime).compareTo(maxRetryTime) >= 0) {\n                     throw e;\n                 }\n                 log.debug(\"Failed on executing %s with attempt %d, will retry. Exception: %s\", callableName, attempt, e.getMessage());\n", "projectName": "facebook.presto", "bugLineNum": 80, "bugNodeStartChar": 2821, "bugNodeLength": 108, "fixLineNum": 80, "fixNodeStartChar": 2821, "fixNodeLength": 103, "sourceBeforeFix": "new RetryDriver(maxRetryAttempts,minSleepTime,maxSleepTime,scaleFactor,maxRetryTime,exceptionWhiteList)", "sourceAfterFix": "new RetryDriver(maxAttempts,minSleepTime,maxSleepTime,scaleFactor,maxRetryTime,exceptionWhiteList)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d5f8dbfc487cc66a50f7bfbbf03b4a0a8f9cdec3", "fixCommitParentSHA1": "f8a872de4699646bdd4629671637314b35c45fab", "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/RetryDriver.java", "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/RetryDriver.java b/presto-hive/src/main/java/com/facebook/presto/hive/RetryDriver.java\nindex a44b945..ff70f99 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/RetryDriver.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/RetryDriver.java\n@@ -32,7 +32,7 @@\n     private static final Duration DEFAULT_MAX_RETRY_TIME = Duration.valueOf(\"30s\");\n     private static final double DEFAULT_SCALE_FACTOR = 2.0;\n \n-    private final int maxRetryAttempts;\n+    private final int maxAttempts;\n     private final Duration minSleepTime;\n     private final Duration maxSleepTime;\n     private final double scaleFactor;\n@@ -40,14 +40,14 @@\n     private final List<Class<? extends Exception>> exceptionWhiteList;\n \n     private RetryDriver(\n-            int maxRetryAttempts,\n+            int maxAttempts,\n             Duration minSleepTime,\n             Duration maxSleepTime,\n             double scaleFactor,\n             Duration maxRetryTime,\n             List<Class<? extends Exception>> exceptionWhiteList)\n     {\n-        this.maxRetryAttempts = maxRetryAttempts;\n+        this.maxAttempts = maxAttempts;\n         this.minSleepTime = minSleepTime;\n         this.maxSleepTime = maxSleepTime;\n         this.scaleFactor = scaleFactor;\n@@ -77,7 +77,7 @@\n \n     public final RetryDriver exponentialBackoff(Duration minSleepTime, Duration maxSleepTime, Duration maxRetryTime, double scaleFactor)\n     {\n-        return new RetryDriver(maxRetryAttempts, minSleepTime, maxSleepTime, scaleFactor, maxRetryTime, exceptionWhiteList);\n+        return new RetryDriver(maxAttempts, minSleepTime, maxSleepTime, scaleFactor, maxRetryTime, exceptionWhiteList);\n     }\n \n     @SafeVarargs\n@@ -89,7 +89,7 @@\n                 .addAll(Arrays.asList(classes))\n                 .build();\n \n-        return new RetryDriver(maxRetryAttempts, minSleepTime, maxSleepTime, scaleFactor, maxRetryTime, exceptions);\n+        return new RetryDriver(maxAttempts, minSleepTime, maxSleepTime, scaleFactor, maxRetryTime, exceptions);\n     }\n \n     public RetryDriver stopOnIllegalExceptions()\n@@ -116,7 +116,7 @@\n                         throw e;\n                     }\n                 }\n-                if (attempt >= maxRetryAttempts || Duration.nanosSince(startTime).compareTo(maxRetryTime) >= 0) {\n+                if (attempt >= maxAttempts || Duration.nanosSince(startTime).compareTo(maxRetryTime) >= 0) {\n                     throw e;\n                 }\n                 log.debug(\"Failed on executing %s with attempt %d, will retry. Exception: %s\", callableName, attempt, e.getMessage());\n", "projectName": "facebook.presto", "bugLineNum": 92, "bugNodeStartChar": 3326, "bugNodeLength": 100, "fixLineNum": 92, "fixNodeStartChar": 3326, "fixNodeLength": 95, "sourceBeforeFix": "new RetryDriver(maxRetryAttempts,minSleepTime,maxSleepTime,scaleFactor,maxRetryTime,exceptions)", "sourceAfterFix": "new RetryDriver(maxAttempts,minSleepTime,maxSleepTime,scaleFactor,maxRetryTime,exceptions)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "1d558cc635e458d5a50e3548a1e810f3d6944864", "fixCommitParentSHA1": "50da26094577b2535dbbfdc245fe568e3ad9574c", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/testing/LocalQueryRunner.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/testing/LocalQueryRunner.java b/presto-main/src/main/java/com/facebook/presto/testing/LocalQueryRunner.java\nindex 72b449c..7ed8202 100644\n--- a/presto-main/src/main/java/com/facebook/presto/testing/LocalQueryRunner.java\n+++ b/presto-main/src/main/java/com/facebook/presto/testing/LocalQueryRunner.java\n@@ -264,9 +264,9 @@\n         }\n \n         @Override\n-        public OperatorFactory createOutputOperator(int operatorId, List<Type> sourceType)\n+        public OperatorFactory createOutputOperator(int operatorId, List<Type> sourceTypes)\n         {\n-            checkNotNull(sourceType, \"sourceType is null\");\n+            checkNotNull(sourceTypes, \"sourceType is null\");\n \n             return new OperatorFactory()\n             {\n@@ -280,7 +280,7 @@\n                 public Operator createOperator(DriverContext driverContext)\n                 {\n                     OperatorContext operatorContext = driverContext.addOperatorContext(operatorId, MaterializingOperator.class.getSimpleName());\n-                    MaterializingOperator operator = new MaterializingOperator(operatorContext, sourceType);\n+                    MaterializingOperator operator = new MaterializingOperator(operatorContext, sourceTypes);\n \n                     if (!materializingOperator.compareAndSet(null, operator)) {\n                         throw new IllegalArgumentException(\"Output already created\");\n", "projectName": "facebook.presto", "bugLineNum": 283, "bugNodeStartChar": 11017, "bugNodeLength": 54, "fixLineNum": 283, "fixNodeStartChar": 11017, "fixNodeLength": 55, "sourceBeforeFix": "new MaterializingOperator(operatorContext,sourceType)", "sourceAfterFix": "new MaterializingOperator(operatorContext,sourceTypes)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "1d558cc635e458d5a50e3548a1e810f3d6944864", "fixCommitParentSHA1": "50da26094577b2535dbbfdc245fe568e3ad9574c", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/testing/NullOutputOperator.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/testing/NullOutputOperator.java b/presto-main/src/main/java/com/facebook/presto/testing/NullOutputOperator.java\nindex 7eb7497..947d38b 100644\n--- a/presto-main/src/main/java/com/facebook/presto/testing/NullOutputOperator.java\n+++ b/presto-main/src/main/java/com/facebook/presto/testing/NullOutputOperator.java\n@@ -33,9 +33,9 @@\n             implements OutputFactory\n     {\n         @Override\n-        public OperatorFactory createOutputOperator(int operatorId, List<Type> sourceType)\n+        public OperatorFactory createOutputOperator(int operatorId, List<Type> sourceTypes)\n         {\n-            return new NullOutputOperatorFactory(operatorId, sourceType);\n+            return new NullOutputOperatorFactory(operatorId, sourceTypes);\n         }\n     }\n \n", "projectName": "facebook.presto", "bugLineNum": 38, "bugNodeStartChar": 1357, "bugNodeLength": 53, "fixLineNum": 38, "fixNodeStartChar": 1357, "fixNodeLength": 54, "sourceBeforeFix": "new NullOutputOperatorFactory(operatorId,sourceType)", "sourceAfterFix": "new NullOutputOperatorFactory(operatorId,sourceTypes)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "618a5b9c8d211763f94a6be08b589b28fef48f49", "fixCommitParentSHA1": "2c94cce46d15693daf5eb6ed88d4dc39660f0901", "bugFilePath": "presto-tests/src/test/java/com/facebook/presto/tests/TestClusterMemoryManager.java", "fixPatch": "diff --git a/presto-tests/src/test/java/com/facebook/presto/tests/TestClusterMemoryManager.java b/presto-tests/src/test/java/com/facebook/presto/tests/TestClusterMemoryManager.java\nindex ab32236..9c6e2ce 100644\n--- a/presto-tests/src/test/java/com/facebook/presto/tests/TestClusterMemoryManager.java\n+++ b/presto-tests/src/test/java/com/facebook/presto/tests/TestClusterMemoryManager.java\n@@ -26,7 +26,7 @@\n \n public class TestClusterMemoryManager\n {\n-    @Test(timeOut = 30_000, expectedExceptions = RuntimeException.class, expectedExceptionsMessageRegExp = \".*Query exceeded max memory size of 1kB.*\")\n+    @Test(timeOut = 240_000, expectedExceptions = RuntimeException.class, expectedExceptionsMessageRegExp = \".*Query exceeded max memory size of 1kB.*\")\n     public void testQueryMemoryLimit()\n             throws Exception\n     {\n", "projectName": "facebook.presto", "bugLineNum": 29, "bugNodeStartChar": 988, "bugNodeLength": 16, "fixLineNum": 29, "fixNodeStartChar": 988, "fixNodeLength": 17, "sourceBeforeFix": "timeOut=30_000", "sourceAfterFix": "timeOut=240_000"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "d128304bceaef2df9d8c527979010d56e6425bb4", "fixCommitParentSHA1": "d5429f646850e971650210f549373bdf91d60ede", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/byteCode/control/DoWhileLoop.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/byteCode/control/DoWhileLoop.java b/presto-main/src/main/java/com/facebook/presto/byteCode/control/DoWhileLoop.java\nindex 2a0c444..88d9544 100644\n--- a/presto-main/src/main/java/com/facebook/presto/byteCode/control/DoWhileLoop.java\n+++ b/presto-main/src/main/java/com/facebook/presto/byteCode/control/DoWhileLoop.java\n@@ -89,7 +89,7 @@\n     @Override\n     public void accept(MethodVisitor visitor, MethodGenerationContext generationContext)\n     {\n-        checkState(condition.isEmpty(), \"DoWhileLoop does not have a condition set\");\n+        checkState(!condition.isEmpty(), \"DoWhileLoop does not have a condition set\");\n \n         Block block = new Block()\n                 .visitLabel(beginLabel)\n", "projectName": "facebook.presto", "bugLineNum": 92, "bugNodeStartChar": 2462, "bugNodeLength": 19, "fixLineNum": 92, "fixNodeStartChar": 2462, "fixNodeLength": 20, "sourceBeforeFix": "condition.isEmpty()", "sourceAfterFix": "!condition.isEmpty()"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "d128304bceaef2df9d8c527979010d56e6425bb4", "fixCommitParentSHA1": "d5429f646850e971650210f549373bdf91d60ede", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/byteCode/control/WhileLoop.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/byteCode/control/WhileLoop.java b/presto-main/src/main/java/com/facebook/presto/byteCode/control/WhileLoop.java\nindex 3fa7043..4d24b5e 100644\n--- a/presto-main/src/main/java/com/facebook/presto/byteCode/control/WhileLoop.java\n+++ b/presto-main/src/main/java/com/facebook/presto/byteCode/control/WhileLoop.java\n@@ -88,7 +88,7 @@\n     @Override\n     public void accept(MethodVisitor visitor, MethodGenerationContext generationContext)\n     {\n-        checkState(condition.isEmpty(), \"WhileLoop does not have a condition set\");\n+        checkState(!condition.isEmpty(), \"WhileLoop does not have a condition set\");\n \n         Block block = new Block()\n                 .visitLabel(continueLabel)\n", "projectName": "facebook.presto", "bugLineNum": 91, "bugNodeStartChar": 2387, "bugNodeLength": 19, "fixLineNum": 91, "fixNodeStartChar": 2387, "fixNodeLength": 20, "sourceBeforeFix": "condition.isEmpty()", "sourceAfterFix": "!condition.isEmpty()"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "a204cc6e5f02a11438c0fc399f4c9a12f7888ea5", "fixCommitParentSHA1": "1f1151c0853fb6bc70972c0f04a8a27d120638cf", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/execution/TestSqlStageExecution.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/execution/TestSqlStageExecution.java b/presto-main/src/test/java/com/facebook/presto/execution/TestSqlStageExecution.java\nindex 2afc620..4325b17 100644\n--- a/presto-main/src/test/java/com/facebook/presto/execution/TestSqlStageExecution.java\n+++ b/presto-main/src/test/java/com/facebook/presto/execution/TestSqlStageExecution.java\n@@ -173,7 +173,7 @@\n \n         // The stage scheduler will block and this will cause a timeout exception\n         try {\n-            future1.get(1, TimeUnit.SECONDS);\n+            future1.get(2, TimeUnit.SECONDS);\n         }\n         catch (TimeoutException e) {\n             // expected\n@@ -512,7 +512,7 @@\n             @Override\n             public int getQueuedPartitionedSplitCount()\n             {\n-                return 0;\n+                return getPartitionedSplitCount();\n             }\n         }\n     }\n", "projectName": "facebook.presto", "bugLineNum": 176, "bugNodeStartChar": 8325, "bugNodeLength": 32, "fixLineNum": 176, "fixNodeStartChar": 8325, "fixNodeLength": 32, "sourceBeforeFix": "future1.get(1,TimeUnit.SECONDS)", "sourceAfterFix": "future1.get(2,TimeUnit.SECONDS)"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "9a3977843e9f24104a184fc8a3d2fd4c82c2f1e3", "fixCommitParentSHA1": "845c66a1ba8cd04446c82c121af3af72253ecfaf", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/execution/SqlQueryQueueManager.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/SqlQueryQueueManager.java b/presto-main/src/main/java/com/facebook/presto/execution/SqlQueryQueueManager.java\nindex e90d8b7..eec85e5 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/SqlQueryQueueManager.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/SqlQueryQueueManager.java\n@@ -97,9 +97,9 @@\n         checkIsDAG(this.rules);\n     }\n \n-    private void checkIsDAG(List<QueryQueueRule> rules)\n+    private static void checkIsDAG(List<QueryQueueRule> rules)\n     {\n-        DirectedPseudograph<String, DefaultEdge> graph = new DirectedPseudograph<String, DefaultEdge>(DefaultEdge.class);\n+        DirectedPseudograph<String, DefaultEdge> graph = new DirectedPseudograph<>(DefaultEdge.class);\n         for (QueryQueueRule rule : rules) {\n             String lastQueueName = null;\n             for (QueryQueueDefinition queue : rule.getQueues()) {\n", "projectName": "facebook.presto", "bugLineNum": 100, "bugNodeStartChar": 4393, "bugNodeLength": 951, "fixLineNum": 100, "fixNodeStartChar": 4393, "fixNodeLength": 958, "sourceBeforeFix": "2", "sourceAfterFix": "10"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "e79b916f2f2953dac777c12e6d0cefeb006ebb04", "fixCommitParentSHA1": "136f32f5685b1df4d41a315fabe4f4466c6da764", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/operator/aggregation/AbstractTestApproximateCountDistinct.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/operator/aggregation/AbstractTestApproximateCountDistinct.java b/presto-main/src/test/java/com/facebook/presto/operator/aggregation/AbstractTestApproximateCountDistinct.java\nindex 97c0e23..fb5fd47 100644\n--- a/presto-main/src/test/java/com/facebook/presto/operator/aggregation/AbstractTestApproximateCountDistinct.java\n+++ b/presto-main/src/test/java/com/facebook/presto/operator/aggregation/AbstractTestApproximateCountDistinct.java\n@@ -167,7 +167,7 @@\n     /**\n      * Produce a block with the given values in the last field.\n      */\n-    private Block createBlock(Type type, List<Object> values)\n+    private static Block createBlock(Type type, List<Object> values)\n     {\n         BlockBuilder blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), values.size());\n \n", "projectName": "facebook.presto", "bugLineNum": 167, "bugNodeStartChar": 6171, "bugNodeLength": 1164, "fixLineNum": 167, "fixNodeStartChar": 6171, "fixNodeLength": 1171, "sourceBeforeFix": "2", "sourceAfterFix": "10"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "486d1df6b22e089bfe2f62b7f487ad09fb4d5fc3", "fixCommitParentSHA1": "8c24d882e69b50b29742953c424596716ef82fb5", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java b/presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java\nindex 77fc5a6..1ef7eb9 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java\n@@ -894,7 +894,7 @@\n                     else if (any(taskStates, equalTo(TaskState.ABORTED))) {\n                         // A task should only be in the aborted state if the STAGE is done (ABORTED or FAILED)\n                         stageState.set(StageState.FAILED);\n-                        failureCauses.add(new PrestoException(StandardErrorCode.INTERNAL_ERROR, \"A task is in the ABORTED state but stage is \" + stageState));\n+                        failureCauses.add(new PrestoException(StandardErrorCode.INTERNAL_ERROR, \"A task is in the ABORTED state but stage is \" + currentState));\n                     }\n                     else if (currentState != StageState.PLANNED && currentState != StageState.SCHEDULING) {\n                         // all tasks are now scheduled, so we can check the finished state\n", "projectName": "facebook.presto", "bugLineNum": 897, "bugNodeStartChar": 36742, "bugNodeLength": 59, "fixLineNum": 897, "fixNodeStartChar": 36742, "fixNodeLength": 61, "sourceBeforeFix": "\"A task is in the ABORTED state but stage is \" + stageState", "sourceAfterFix": "\"A task is in the ABORTED state but stage is \" + currentState"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "486d1df6b22e089bfe2f62b7f487ad09fb4d5fc3", "fixCommitParentSHA1": "8c24d882e69b50b29742953c424596716ef82fb5", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java b/presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java\nindex 77fc5a6..1ef7eb9 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java\n@@ -894,7 +894,7 @@\n                     else if (any(taskStates, equalTo(TaskState.ABORTED))) {\n                         // A task should only be in the aborted state if the STAGE is done (ABORTED or FAILED)\n                         stageState.set(StageState.FAILED);\n-                        failureCauses.add(new PrestoException(StandardErrorCode.INTERNAL_ERROR, \"A task is in the ABORTED state but stage is \" + stageState));\n+                        failureCauses.add(new PrestoException(StandardErrorCode.INTERNAL_ERROR, \"A task is in the ABORTED state but stage is \" + currentState));\n                     }\n                     else if (currentState != StageState.PLANNED && currentState != StageState.SCHEDULING) {\n                         // all tasks are now scheduled, so we can check the finished state\n", "projectName": "facebook.presto", "bugLineNum": 897, "bugNodeStartChar": 36742, "bugNodeLength": 59, "fixLineNum": 897, "fixNodeStartChar": 36742, "fixNodeLength": 61, "sourceBeforeFix": "\"A task is in the ABORTED state but stage is \" + stageState", "sourceAfterFix": "\"A task is in the ABORTED state but stage is \" + currentState"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "8c24d882e69b50b29742953c424596716ef82fb5", "fixCommitParentSHA1": "ff1bada4e554dd66a5d3929212779773cbbc9879", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/operator/ScanFilterAndProjectOperator.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/ScanFilterAndProjectOperator.java b/presto-main/src/main/java/com/facebook/presto/operator/ScanFilterAndProjectOperator.java\nindex a966459..daf5e81 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/ScanFilterAndProjectOperator.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/ScanFilterAndProjectOperator.java\n@@ -273,7 +273,7 @@\n         public SourceOperator createOperator(DriverContext driverContext)\n         {\n             checkState(!closed, \"Factory is already closed\");\n-            OperatorContext operatorContext = driverContext.addOperatorContext(operatorId, FilterAndProjectOperator.class.getSimpleName());\n+            OperatorContext operatorContext = driverContext.addOperatorContext(operatorId, ScanFilterAndProjectOperator.class.getSimpleName());\n             return new ScanFilterAndProjectOperator(\n                     operatorContext,\n                     sourceId,\n", "projectName": "facebook.presto", "bugLineNum": 276, "bugNodeStartChar": 9364, "bugNodeLength": 30, "fixLineNum": 276, "fixNodeStartChar": 9364, "fixNodeLength": 34, "sourceBeforeFix": "FilterAndProjectOperator.class", "sourceAfterFix": "ScanFilterAndProjectOperator.class"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "195a49951bf09f5456115b958ce2e3997daaca4e", "fixCommitParentSHA1": "0a20886133c0a4fb9189b48a9e1c6f0616b8891a", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/metadata/FunctionRegistry.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/metadata/FunctionRegistry.java b/presto-main/src/main/java/com/facebook/presto/metadata/FunctionRegistry.java\nindex 5d27047..826451f 100644\n--- a/presto-main/src/main/java/com/facebook/presto/metadata/FunctionRegistry.java\n+++ b/presto-main/src/main/java/com/facebook/presto/metadata/FunctionRegistry.java\n@@ -331,7 +331,7 @@\n         return Iterables.any(functions.get(name), ParametricFunction::isAggregate);\n     }\n \n-    public FunctionInfo resolveFunction(QualifiedName name, List<TypeSignature> parameterTypes, final boolean approximate)\n+    public FunctionInfo resolveFunction(QualifiedName name, List<TypeSignature> parameterTypes, boolean approximate)\n     {\n         List<ParametricFunction> candidates = functions.get(name).stream()\n                 .filter(function -> function.isScalar() || function.isApproximate() == approximate)\n@@ -444,7 +444,7 @@\n     @VisibleForTesting\n     public List<ParametricFunction> listOperators()\n     {\n-        final Set<String> operatorNames = Arrays.asList(OperatorType.values()).stream()\n+        Set<String> operatorNames = Arrays.asList(OperatorType.values()).stream()\n                 .map(FunctionRegistry::mangleOperatorName)\n                 .collect(toImmutableSet());\n \n", "projectName": "facebook.presto", "bugLineNum": 447, "bugNodeStartChar": 27121, "bugNodeLength": 182, "fixLineNum": 447, "fixNodeStartChar": 27121, "fixNodeLength": 176, "sourceBeforeFix": "16", "sourceAfterFix": "0"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "44c1de70de3054dee1be6232b2718d6fea8856c7", "fixCommitParentSHA1": "8f6210b91e6b63bc30b00458e6b829e2d4675556", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/util/ImmutableCollectors.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/util/ImmutableCollectors.java b/presto-main/src/main/java/com/facebook/presto/util/ImmutableCollectors.java\nindex df3f432..f7906b6 100644\n--- a/presto-main/src/main/java/com/facebook/presto/util/ImmutableCollectors.java\n+++ b/presto-main/src/main/java/com/facebook/presto/util/ImmutableCollectors.java\n@@ -22,27 +22,28 @@\n {\n     private ImmutableCollectors() {}\n \n-    public static <T> Collector<T, ImmutableList.Builder<T>, ImmutableList<T>> immutableListCollector()\n+    public static <T> Collector<T, ?, ImmutableList<T>> toImmutableList()\n     {\n         return Collector.<T, ImmutableList.Builder<T>, ImmutableList<T>>of(\n                 ImmutableList.Builder::new,\n                 ImmutableList.Builder::add,\n-                (ImmutableList.Builder<T> left, ImmutableList.Builder<T> right) -> {\n+                (left, right) -> {\n                     left.addAll(right.build());\n                     return left;\n                 },\n                 ImmutableList.Builder::build);\n     }\n \n-    public static <T> Collector<T, ImmutableSet.Builder<T>, ImmutableSet<T>> immutableSetCollector()\n+    public static <T> Collector<T, ?, ImmutableSet<T>> toImmutableSet()\n     {\n         return Collector.<T, ImmutableSet.Builder<T>, ImmutableSet<T>>of(\n                 ImmutableSet.Builder::new,\n                 ImmutableSet.Builder::add,\n-                (ImmutableSet.Builder<T> left, ImmutableSet.Builder<T> right) -> {\n+                (left, right) -> {\n                     left.addAll(right.build());\n                     return left;\n                 },\n-                ImmutableSet.Builder::build);\n+                ImmutableSet.Builder::build,\n+                Collector.Characteristics.UNORDERED);\n     }\n }\n", "projectName": "facebook.presto", "bugLineNum": 39, "bugNodeStartChar": 1443, "bugNodeLength": 372, "fixLineNum": 39, "fixNodeStartChar": 1443, "fixNodeLength": 425, "sourceBeforeFix": "Collector.<T,ImmutableSet.Builder<T>,ImmutableSet<T>>of(ImmutableSet.Builder::new,ImmutableSet.Builder::add,(ImmutableSet.Builder<T> left,ImmutableSet.Builder<T> right) -> {   left.addAll(right.build());   return left; } ,ImmutableSet.Builder::build)", "sourceAfterFix": "Collector.<T,ImmutableSet.Builder<T>,ImmutableSet<T>>of(ImmutableSet.Builder::new,ImmutableSet.Builder::add,(ImmutableSet.Builder<T> left,ImmutableSet.Builder<T> right) -> {   left.addAll(right.build());   return left; } ,ImmutableSet.Builder::build,Collector.Characteristics.UNORDERED)"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "d698605b1d34403744aa6156e2963e6b5be58de0", "fixCommitParentSHA1": "a4d2027cd638b809583c249041ab564673e387df", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/execution/TaskId.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/TaskId.java b/presto-main/src/main/java/com/facebook/presto/execution/TaskId.java\nindex fe176a6..2c3f01c 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/TaskId.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/TaskId.java\n@@ -86,7 +86,7 @@\n         if (obj == null || getClass() != obj.getClass()) {\n             return false;\n         }\n-        final TaskId other = (TaskId) obj;\n+        TaskId other = (TaskId) obj;\n         return Objects.equal(this.fullId, other.fullId);\n     }\n }\n", "projectName": "facebook.presto", "bugLineNum": 89, "bugNodeStartChar": 2227, "bugNodeLength": 34, "fixLineNum": 89, "fixNodeStartChar": 2227, "fixNodeLength": 28, "sourceBeforeFix": "16", "sourceAfterFix": "0"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "6666af6ab02f1200875ed2ef7364ef8b131eec15", "fixCommitParentSHA1": "cff50bf14a7667e7055211d15b6cc8c870b1e96e", "bugFilePath": "presto-orc/src/main/java/com/facebook/presto/orc/json/JsonReaders.java", "fixPatch": "diff --git a/presto-orc/src/main/java/com/facebook/presto/orc/json/JsonReaders.java b/presto-orc/src/main/java/com/facebook/presto/orc/json/JsonReaders.java\nindex 466d5fd..aa77c9a 100644\n--- a/presto-orc/src/main/java/com/facebook/presto/orc/json/JsonReaders.java\n+++ b/presto-orc/src/main/java/com/facebook/presto/orc/json/JsonReaders.java\n@@ -90,7 +90,7 @@\n             case LIST:\n                 return new ListJsonReader(streamDescriptor, writeStackType, checkForNulls, hiveStorageTimeZone, sessionTimeZone);\n             case MAP:\n-                return new MapJsonReader(streamDescriptor, writeStackType, checkForNulls, sessionTimeZone, sessionTimeZone);\n+                return new MapJsonReader(streamDescriptor, writeStackType, checkForNulls, hiveStorageTimeZone, sessionTimeZone);\n             case UNION:\n             case DECIMAL:\n             case VARCHAR:\n", "projectName": "facebook.presto", "bugLineNum": 93, "bugNodeStartChar": 3813, "bugNodeLength": 100, "fixLineNum": 93, "fixNodeStartChar": 3813, "fixNodeLength": 104, "sourceBeforeFix": "new MapJsonReader(streamDescriptor,writeStackType,checkForNulls,sessionTimeZone,sessionTimeZone)", "sourceAfterFix": "new MapJsonReader(streamDescriptor,writeStackType,checkForNulls,hiveStorageTimeZone,sessionTimeZone)"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "3cc42e2082ef0103890fca974d5f736a4e665074", "fixCommitParentSHA1": "429b5f383caf21206171334f76ce53dc9cfca829", "bugFilePath": "presto-client/src/main/java/com/facebook/presto/client/ClientSession.java", "fixPatch": "diff --git a/presto-client/src/main/java/com/facebook/presto/client/ClientSession.java b/presto-client/src/main/java/com/facebook/presto/client/ClientSession.java\nindex 9b78e98..8aece03 100644\n--- a/presto-client/src/main/java/com/facebook/presto/client/ClientSession.java\n+++ b/presto-client/src/main/java/com/facebook/presto/client/ClientSession.java\n@@ -81,7 +81,7 @@\n         // verify the properties are valid\n         CharsetEncoder charsetEncoder = US_ASCII.newEncoder();\n         for (Entry<String, String> entry : properties.entrySet()) {\n-            checkArgument(entry.getKey().isEmpty(), \"Session property name is empty\");\n+            checkArgument(!entry.getKey().isEmpty(), \"Session property name is empty\");\n             checkArgument(entry.getKey().indexOf('=') < 0, \"Session property name must not contain '=': %s\", entry.getKey());\n             checkArgument(charsetEncoder.canEncode(entry.getKey()), \"Session property name is not US_ASCII: %s\", entry.getKey());\n             checkArgument(charsetEncoder.canEncode(entry.getValue()), \"Session property value is not US_ASCII: %s\", entry.getValue());\n", "projectName": "facebook.presto", "bugLineNum": 84, "bugNodeStartChar": 3055, "bugNodeLength": 24, "fixLineNum": 84, "fixNodeStartChar": 3055, "fixNodeLength": 25, "sourceBeforeFix": "entry.getKey().isEmpty()", "sourceAfterFix": "!entry.getKey().isEmpty()"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "c66b1f954e189f33a35f0d956d27c6b755daf722", "fixCommitParentSHA1": "9bf5ee5950f5cc7ef755d88f1dcc804c2dd39cbd", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/type/HyperLogLogOperators.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/type/HyperLogLogOperators.java b/presto-main/src/main/java/com/facebook/presto/type/HyperLogLogOperators.java\nindex a0ba385..746e667 100644\n--- a/presto-main/src/main/java/com/facebook/presto/type/HyperLogLogOperators.java\n+++ b/presto-main/src/main/java/com/facebook/presto/type/HyperLogLogOperators.java\n@@ -19,7 +19,7 @@\n \n import static com.facebook.presto.metadata.OperatorType.CAST;\n \n-public class HyperLogLogOperators\n+public final class HyperLogLogOperators\n {\n     private HyperLogLogOperators()\n     {\n", "projectName": "facebook.presto", "bugLineNum": 22, "bugNodeStartChar": 802, "bugNodeLength": 463, "fixLineNum": 22, "fixNodeStartChar": 802, "fixNodeLength": 469, "sourceBeforeFix": "1", "sourceAfterFix": "17"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "1b086ac0176dd15144c76c1d521de992a5db7e63", "fixCommitParentSHA1": "5719960a6f9087b8ff65e9e589db0aa53f0a632f", "bugFilePath": "presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveClientS3.java", "fixPatch": "diff --git a/presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveClientS3.java b/presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveClientS3.java\nindex dbbff72..831173e 100644\n--- a/presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveClientS3.java\n+++ b/presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveClientS3.java\n@@ -250,10 +250,10 @@\n             assertEquals(row.getField(0), 1L);\n \n             row = result.getMaterializedRows().get(1);\n-            assertEquals(row.getField(0), 2L);\n+            assertEquals(row.getField(0), 3L);\n \n             row = result.getMaterializedRows().get(2);\n-            assertEquals(row.getField(0), 3L);\n+            assertEquals(row.getField(0), 2L);\n         }\n     }\n \n", "projectName": "facebook.presto", "bugLineNum": 253, "bugNodeStartChar": 10607, "bugNodeLength": 33, "fixLineNum": 253, "fixNodeStartChar": 10607, "fixNodeLength": 33, "sourceBeforeFix": "assertEquals(row.getField(0),2L)", "sourceAfterFix": "assertEquals(row.getField(0),3L)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "1b086ac0176dd15144c76c1d521de992a5db7e63", "fixCommitParentSHA1": "5719960a6f9087b8ff65e9e589db0aa53f0a632f", "bugFilePath": "presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveClientS3.java", "fixPatch": "diff --git a/presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveClientS3.java b/presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveClientS3.java\nindex dbbff72..831173e 100644\n--- a/presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveClientS3.java\n+++ b/presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveClientS3.java\n@@ -250,10 +250,10 @@\n             assertEquals(row.getField(0), 1L);\n \n             row = result.getMaterializedRows().get(1);\n-            assertEquals(row.getField(0), 2L);\n+            assertEquals(row.getField(0), 3L);\n \n             row = result.getMaterializedRows().get(2);\n-            assertEquals(row.getField(0), 3L);\n+            assertEquals(row.getField(0), 2L);\n         }\n     }\n \n", "projectName": "facebook.presto", "bugLineNum": 256, "bugNodeStartChar": 10710, "bugNodeLength": 33, "fixLineNum": 256, "fixNodeStartChar": 10710, "fixNodeLength": 33, "sourceBeforeFix": "assertEquals(row.getField(0),3L)", "sourceAfterFix": "assertEquals(row.getField(0),2L)"}, {"bugType": "SWAP_BOOLEAN_LITERAL", "fixCommitSHA1": "d848003e42080f7f40fcc7cd5559df53155d3389", "fixCommitParentSHA1": "2ec8d001e3a9515e978508b9452db5bfd84dea1e", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/operator/aggregation/CountColumn.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/aggregation/CountColumn.java b/presto-main/src/main/java/com/facebook/presto/operator/aggregation/CountColumn.java\nindex df30b5b..557a8f4 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/aggregation/CountColumn.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/aggregation/CountColumn.java\n@@ -104,7 +104,7 @@\n                 false);\n \n         GenericAccumulatorFactoryBinder factory = new AccumulatorCompiler().generateAccumulatorFactoryBinder(metadata, classLoader);\n-        return new GenericAggregationFunction(NAME, inputTypes, intermediateType, BIGINT, false, false, factory);\n+        return new GenericAggregationFunction(NAME, inputTypes, intermediateType, BIGINT, true, false, factory);\n     }\n \n     private static List<ParameterMetadata> createInputParameterMetadata(Type type)\n", "projectName": "facebook.presto", "bugLineNum": 107, "bugNodeStartChar": 4717, "bugNodeLength": 97, "fixLineNum": 107, "fixNodeStartChar": 4717, "fixNodeLength": 96, "sourceBeforeFix": "new GenericAggregationFunction(NAME,inputTypes,intermediateType,BIGINT,false,false,factory)", "sourceAfterFix": "new GenericAggregationFunction(NAME,inputTypes,intermediateType,BIGINT,true,false,factory)"}, {"bugType": "SWAP_BOOLEAN_LITERAL", "fixCommitSHA1": "d848003e42080f7f40fcc7cd5559df53155d3389", "fixCommitParentSHA1": "2ec8d001e3a9515e978508b9452db5bfd84dea1e", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/operator/aggregation/MaxBy.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/aggregation/MaxBy.java b/presto-main/src/main/java/com/facebook/presto/operator/aggregation/MaxBy.java\nindex 63acfab..a4f5666 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/aggregation/MaxBy.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/aggregation/MaxBy.java\n@@ -106,7 +106,7 @@\n                 false);\n \n         GenericAccumulatorFactoryBinder factory = new AccumulatorCompiler().generateAccumulatorFactoryBinder(metadata, classLoader);\n-        return new GenericAggregationFunction(NAME, inputTypes, intermediateType, valueType, false, false, factory);\n+        return new GenericAggregationFunction(NAME, inputTypes, intermediateType, valueType, true, false, factory);\n     }\n \n     private static List<ParameterMetadata> createInputParameterMetadata(Type value, Type key)\n", "projectName": "facebook.presto", "bugLineNum": 109, "bugNodeStartChar": 4910, "bugNodeLength": 100, "fixLineNum": 109, "fixNodeStartChar": 4910, "fixNodeLength": 99, "sourceBeforeFix": "new GenericAggregationFunction(NAME,inputTypes,intermediateType,valueType,false,false,factory)", "sourceAfterFix": "new GenericAggregationFunction(NAME,inputTypes,intermediateType,valueType,true,false,factory)"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "1f71382322dbdca408184f5ec1d65bfc32e7b8f2", "fixCommitParentSHA1": "ff64c724e6d08f308d467a5e1849530d5ca074f0", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/byteCode/ParameterizedType.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/byteCode/ParameterizedType.java b/presto-main/src/main/java/com/facebook/presto/byteCode/ParameterizedType.java\nindex 40fab0e..11819f8 100644\n--- a/presto-main/src/main/java/com/facebook/presto/byteCode/ParameterizedType.java\n+++ b/presto-main/src/main/java/com/facebook/presto/byteCode/ParameterizedType.java\n@@ -175,7 +175,7 @@\n     public String getGenericSignature()\n     {\n         StringBuilder sb = new StringBuilder();\n-        if (primitiveType != null) {\n+        if (primitiveType != null || arrayComponentType != null) {\n             return type;\n         }\n         sb.append('L').append(className);\n", "projectName": "facebook.presto", "bugLineNum": 178, "bugNodeStartChar": 5734, "bugNodeLength": 21, "fixLineNum": 178, "fixNodeStartChar": 5734, "fixNodeLength": 51, "sourceBeforeFix": "primitiveType != null", "sourceAfterFix": "primitiveType != null || arrayComponentType != null"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "1f71382322dbdca408184f5ec1d65bfc32e7b8f2", "fixCommitParentSHA1": "ff64c724e6d08f308d467a5e1849530d5ca074f0", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/byteCode/ParameterizedType.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/byteCode/ParameterizedType.java b/presto-main/src/main/java/com/facebook/presto/byteCode/ParameterizedType.java\nindex 40fab0e..11819f8 100644\n--- a/presto-main/src/main/java/com/facebook/presto/byteCode/ParameterizedType.java\n+++ b/presto-main/src/main/java/com/facebook/presto/byteCode/ParameterizedType.java\n@@ -175,7 +175,7 @@\n     public String getGenericSignature()\n     {\n         StringBuilder sb = new StringBuilder();\n-        if (primitiveType != null) {\n+        if (primitiveType != null || arrayComponentType != null) {\n             return type;\n         }\n         sb.append('L').append(className);\n", "projectName": "facebook.presto", "bugLineNum": 178, "bugNodeStartChar": 5734, "bugNodeLength": 21, "fixLineNum": 178, "fixNodeStartChar": 5734, "fixNodeLength": 51, "sourceBeforeFix": "primitiveType != null", "sourceAfterFix": "primitiveType != null || arrayComponentType != null"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "02f1f95e522fd142dc0805c37e91d12880ab5996", "fixCommitParentSHA1": "aa89f69519cbc34e0203faf377f557559174aceb", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/gen/ByteCodeUtils.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/gen/ByteCodeUtils.java b/presto-main/src/main/java/com/facebook/presto/sql/gen/ByteCodeUtils.java\nindex ef3d186..f8f1023 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/gen/ByteCodeUtils.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/gen/ByteCodeUtils.java\n@@ -44,7 +44,7 @@\n import static com.facebook.presto.sql.gen.Bootstrap.CALL_SITES_FIELD_NAME;\n import static java.lang.String.format;\n \n-public class ByteCodeUtils\n+public final class ByteCodeUtils\n {\n     private ByteCodeUtils()\n     {\n@@ -68,7 +68,7 @@\n     public static ByteCodeNode handleNullValue(CompilerContext context,\n             LabelNode label,\n             Class<?> returnType,\n-            List<? extends Class<?>> stackArgsToPop,\n+            List<Class<?>> stackArgsToPop,\n             boolean clearNullFlag)\n     {\n         Block nullCheck = new Block(context)\n@@ -165,7 +165,7 @@\n         Block block = new Block(context)\n                 .setDescription(\"invoke \" + signature);\n \n-        ArrayList<Class<?>> stackTypes = new ArrayList<>();\n+        List<Class<?>> stackTypes = new ArrayList<>();\n \n         int index = 0;\n         for (Class<?> type : methodType.parameterArray()) {\n@@ -176,7 +176,7 @@\n             else {\n                 block.append(arguments.get(index));\n                 index++;\n-                block.append(ByteCodeUtils.ifWasNullPopAndGoto(context, end, unboxedReturnType, Lists.reverse(stackTypes)));\n+                block.append(ifWasNullPopAndGoto(context, end, unboxedReturnType, Lists.reverse(stackTypes)));\n             }\n         }\n         block.append(invoke(context, binding));\n@@ -192,7 +192,7 @@\n                         .pushJavaDefault(unboxedReturnType)\n                         .gotoLabel(end)\n                         .visitLabel(notNull)\n-                        .append(ByteCodeUtils.unboxPrimitive(context, unboxedReturnType));\n+                        .append(unboxPrimitive(context, unboxedReturnType));\n             }\n             else {\n                 block.dup(methodType.returnType())\n", "projectName": "facebook.presto", "bugLineNum": 47, "bugNodeStartChar": 1909, "bugNodeLength": 8517, "fixLineNum": 47, "fixNodeStartChar": 1909, "fixNodeLength": 8523, "sourceBeforeFix": "1", "sourceAfterFix": "17"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "02f1f95e522fd142dc0805c37e91d12880ab5996", "fixCommitParentSHA1": "aa89f69519cbc34e0203faf377f557559174aceb", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/gen/ByteCodeUtils.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/gen/ByteCodeUtils.java b/presto-main/src/main/java/com/facebook/presto/sql/gen/ByteCodeUtils.java\nindex ef3d186..f8f1023 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/gen/ByteCodeUtils.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/gen/ByteCodeUtils.java\n@@ -44,7 +44,7 @@\n import static com.facebook.presto.sql.gen.Bootstrap.CALL_SITES_FIELD_NAME;\n import static java.lang.String.format;\n \n-public class ByteCodeUtils\n+public final class ByteCodeUtils\n {\n     private ByteCodeUtils()\n     {\n@@ -68,7 +68,7 @@\n     public static ByteCodeNode handleNullValue(CompilerContext context,\n             LabelNode label,\n             Class<?> returnType,\n-            List<? extends Class<?>> stackArgsToPop,\n+            List<Class<?>> stackArgsToPop,\n             boolean clearNullFlag)\n     {\n         Block nullCheck = new Block(context)\n@@ -165,7 +165,7 @@\n         Block block = new Block(context)\n                 .setDescription(\"invoke \" + signature);\n \n-        ArrayList<Class<?>> stackTypes = new ArrayList<>();\n+        List<Class<?>> stackTypes = new ArrayList<>();\n \n         int index = 0;\n         for (Class<?> type : methodType.parameterArray()) {\n@@ -176,7 +176,7 @@\n             else {\n                 block.append(arguments.get(index));\n                 index++;\n-                block.append(ByteCodeUtils.ifWasNullPopAndGoto(context, end, unboxedReturnType, Lists.reverse(stackTypes)));\n+                block.append(ifWasNullPopAndGoto(context, end, unboxedReturnType, Lists.reverse(stackTypes)));\n             }\n         }\n         block.append(invoke(context, binding));\n@@ -192,7 +192,7 @@\n                         .pushJavaDefault(unboxedReturnType)\n                         .gotoLabel(end)\n                         .visitLabel(notNull)\n-                        .append(ByteCodeUtils.unboxPrimitive(context, unboxedReturnType));\n+                        .append(unboxPrimitive(context, unboxedReturnType));\n             }\n             else {\n                 block.dup(methodType.returnType())\n", "projectName": "facebook.presto", "bugLineNum": 168, "bugNodeStartChar": 6895, "bugNodeLength": 19, "fixLineNum": 168, "fixNodeStartChar": 6895, "fixNodeLength": 14, "sourceBeforeFix": "ArrayList<Class<?>>", "sourceAfterFix": "List<Class<?>>"}, {"bugType": "SWAP_BOOLEAN_LITERAL", "fixCommitSHA1": "ea4d30ed70c3d5a395a3bf2f1206b2c2d82276d4", "fixCommitParentSHA1": "dc399d63600cbfce4122ea4b1d7522cfe377ce12", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/operator/aggregation/AggregationCompiler.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/aggregation/AggregationCompiler.java b/presto-main/src/main/java/com/facebook/presto/operator/aggregation/AggregationCompiler.java\nindex 736ec1a..00edd15 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/aggregation/AggregationCompiler.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/aggregation/AggregationCompiler.java\n@@ -117,7 +117,7 @@\n \n                         AccumulatorFactory factory = new AccumulatorCompiler().generateAccumulatorFactory(metadata, classLoader);\n                         // TODO: support un-decomposable aggregations\n-                        builder.add(new GenericAggregationFunction(name, inputTypes, intermediateType, outputType, false, aggregationAnnotation.approximate(), factory));\n+                        builder.add(new GenericAggregationFunction(name, inputTypes, intermediateType, outputType, true, aggregationAnnotation.approximate(), factory));\n                     }\n                 }\n             }\n", "projectName": "facebook.presto", "bugLineNum": 120, "bugNodeStartChar": 6466, "bugNodeLength": 131, "fixLineNum": 120, "fixNodeStartChar": 6466, "fixNodeLength": 130, "sourceBeforeFix": "new GenericAggregationFunction(name,inputTypes,intermediateType,outputType,false,aggregationAnnotation.approximate(),factory)", "sourceAfterFix": "new GenericAggregationFunction(name,inputTypes,intermediateType,outputType,true,aggregationAnnotation.approximate(),factory)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "9bea2e68b8283ea0421a8ec28f95600e0cab9ee9", "fixCommitParentSHA1": "007db6aecaccef3b8d823c2d6b72625a39361b6e", "bugFilePath": "presto-raptor/src/main/java/com/facebook/presto/raptor/metadata/DatabaseShardManager.java", "fixPatch": "diff --git a/presto-raptor/src/main/java/com/facebook/presto/raptor/metadata/DatabaseShardManager.java b/presto-raptor/src/main/java/com/facebook/presto/raptor/metadata/DatabaseShardManager.java\nindex 3b6d743..3f6a816 100644\n--- a/presto-raptor/src/main/java/com/facebook/presto/raptor/metadata/DatabaseShardManager.java\n+++ b/presto-raptor/src/main/java/com/facebook/presto/raptor/metadata/DatabaseShardManager.java\n@@ -77,7 +77,7 @@\n                 long partitionId = dao.insertPartition(tableId, partition);\n \n                 for (PartitionKey partitionKey : partitionKeys) {\n-                    dao.insertPartitionKey(tableId, partition, partitionKey.getName(), partitionKey.getType().toString(), partitionKey.getValue());\n+                    dao.insertPartitionKey(tableId, partition, partitionKey.getName(), partitionKey.getType().getName(), partitionKey.getValue());\n                 }\n \n                 for (Map.Entry<UUID, String> entry : shards.entrySet()) {\n", "projectName": "facebook.presto", "bugLineNum": 80, "bugNodeStartChar": 3181, "bugNodeLength": 33, "fixLineNum": 80, "fixNodeStartChar": 3181, "fixNodeLength": 32, "sourceBeforeFix": "partitionKey.getType().toString()", "sourceAfterFix": "partitionKey.getType().getName()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "9bea2e68b8283ea0421a8ec28f95600e0cab9ee9", "fixCommitParentSHA1": "007db6aecaccef3b8d823c2d6b72625a39361b6e", "bugFilePath": "presto-raptor/src/main/java/com/facebook/presto/raptor/metadata/DatabaseShardManager.java", "fixPatch": "diff --git a/presto-raptor/src/main/java/com/facebook/presto/raptor/metadata/DatabaseShardManager.java b/presto-raptor/src/main/java/com/facebook/presto/raptor/metadata/DatabaseShardManager.java\nindex 3b6d743..3f6a816 100644\n--- a/presto-raptor/src/main/java/com/facebook/presto/raptor/metadata/DatabaseShardManager.java\n+++ b/presto-raptor/src/main/java/com/facebook/presto/raptor/metadata/DatabaseShardManager.java\n@@ -77,7 +77,7 @@\n                 long partitionId = dao.insertPartition(tableId, partition);\n \n                 for (PartitionKey partitionKey : partitionKeys) {\n-                    dao.insertPartitionKey(tableId, partition, partitionKey.getName(), partitionKey.getType().toString(), partitionKey.getValue());\n+                    dao.insertPartitionKey(tableId, partition, partitionKey.getName(), partitionKey.getType().getName(), partitionKey.getValue());\n                 }\n \n                 for (Map.Entry<UUID, String> entry : shards.entrySet()) {\n", "projectName": "facebook.presto", "bugLineNum": 80, "bugNodeStartChar": 3181, "bugNodeLength": 33, "fixLineNum": 80, "fixNodeStartChar": 3181, "fixNodeLength": 32, "sourceBeforeFix": "partitionKey.getType().toString()", "sourceAfterFix": "partitionKey.getType().getName()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "3dee919ac908141e8e7b1ef509bbe1103e489853", "fixCommitParentSHA1": "9b391be022ba675ae9b6bf0ece6d587aa1c18930", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/testing/LocalQueryRunner.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/testing/LocalQueryRunner.java b/presto-main/src/main/java/com/facebook/presto/testing/LocalQueryRunner.java\nindex 3ce2afa..65f2208 100644\n--- a/presto-main/src/main/java/com/facebook/presto/testing/LocalQueryRunner.java\n+++ b/presto-main/src/main/java/com/facebook/presto/testing/LocalQueryRunner.java\n@@ -207,7 +207,7 @@\n         connectorManager.createConnection(catalogName, connectorFactory, properties);\n     }\n \n-    public QueryRunner printPlan()\n+    public LocalQueryRunner printPlan()\n     {\n         printPlan = true;\n         return this;\n", "projectName": "facebook.presto", "bugLineNum": 210, "bugNodeStartChar": 8518, "bugNodeLength": 89, "fixLineNum": 210, "fixNodeStartChar": 8518, "fixNodeLength": 94, "sourceBeforeFix": "public QueryRunner printPlan(){   printPlan=true;   return this; } ", "sourceAfterFix": "public LocalQueryRunner printPlan(){   printPlan=true;   return this; } "}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "5d9a77585599cda001021e63c33aef08eba9d69c", "fixCommitParentSHA1": "f51b521d865ba2c78ababd57fc5f1df717751972", "bugFilePath": "presto-cassandra/src/main/java/com/facebook/presto/cassandra/CassandraSplitManager.java", "fixPatch": "diff --git a/presto-cassandra/src/main/java/com/facebook/presto/cassandra/CassandraSplitManager.java b/presto-cassandra/src/main/java/com/facebook/presto/cassandra/CassandraSplitManager.java\nindex 5088b83..a13d39c 100644\n--- a/presto-cassandra/src/main/java/com/facebook/presto/cassandra/CassandraSplitManager.java\n+++ b/presto-cassandra/src/main/java/com/facebook/presto/cassandra/CassandraSplitManager.java\n@@ -50,7 +50,7 @@\n public class CassandraSplitManager\n         implements ConnectorSplitManager\n {\n-    private static final Logger log = Logger.get(ConnectorSplitManager.class);\n+    private static final Logger log = Logger.get(CassandraSplitManager.class);\n \n     private final String connectorId;\n     private final CassandraSession cassandraSession;\n", "projectName": "facebook.presto", "bugLineNum": 53, "bugNodeStartChar": 2142, "bugNodeLength": 27, "fixLineNum": 53, "fixNodeStartChar": 2142, "fixNodeLength": 27, "sourceBeforeFix": "ConnectorSplitManager.class", "sourceAfterFix": "CassandraSplitManager.class"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "3eb03ea8da9525d9615fcef99c0f3dcc3f1218c9", "fixCommitParentSHA1": "38b20e6d9e1897e3ee869930f390d664f18c087b", "bugFilePath": "presto-parser/src/main/java/com/facebook/presto/sql/tree/AstVisitor.java", "fixPatch": "diff --git a/presto-parser/src/main/java/com/facebook/presto/sql/tree/AstVisitor.java b/presto-parser/src/main/java/com/facebook/presto/sql/tree/AstVisitor.java\nindex dfd7d87..88c596d 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/tree/AstVisitor.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/tree/AstVisitor.java\n@@ -389,11 +389,11 @@\n \n     protected R visitCreateTable(CreateTable node, C context)\n     {\n-        return visitNode(node, context);\n+        return visitStatement(node, context);\n     }\n \n     protected R visitDropTable(DropTable node, C context)\n     {\n-        return visitNode(node, context);\n+        return visitStatement(node, context);\n     }\n }\n", "projectName": "facebook.presto", "bugLineNum": 392, "bugNodeStartChar": 9739, "bugNodeLength": 24, "fixLineNum": 392, "fixNodeStartChar": 9739, "fixNodeLength": 29, "sourceBeforeFix": "visitNode(node,context)", "sourceAfterFix": "visitStatement(node,context)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "3eb03ea8da9525d9615fcef99c0f3dcc3f1218c9", "fixCommitParentSHA1": "38b20e6d9e1897e3ee869930f390d664f18c087b", "bugFilePath": "presto-parser/src/main/java/com/facebook/presto/sql/tree/AstVisitor.java", "fixPatch": "diff --git a/presto-parser/src/main/java/com/facebook/presto/sql/tree/AstVisitor.java b/presto-parser/src/main/java/com/facebook/presto/sql/tree/AstVisitor.java\nindex dfd7d87..88c596d 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/tree/AstVisitor.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/tree/AstVisitor.java\n@@ -389,11 +389,11 @@\n \n     protected R visitCreateTable(CreateTable node, C context)\n     {\n-        return visitNode(node, context);\n+        return visitStatement(node, context);\n     }\n \n     protected R visitDropTable(DropTable node, C context)\n     {\n-        return visitNode(node, context);\n+        return visitStatement(node, context);\n     }\n }\n", "projectName": "facebook.presto", "bugLineNum": 392, "bugNodeStartChar": 9739, "bugNodeLength": 24, "fixLineNum": 392, "fixNodeStartChar": 9739, "fixNodeLength": 29, "sourceBeforeFix": "visitNode(node,context)", "sourceAfterFix": "visitStatement(node,context)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "3eb03ea8da9525d9615fcef99c0f3dcc3f1218c9", "fixCommitParentSHA1": "38b20e6d9e1897e3ee869930f390d664f18c087b", "bugFilePath": "presto-parser/src/main/java/com/facebook/presto/sql/tree/AstVisitor.java", "fixPatch": "diff --git a/presto-parser/src/main/java/com/facebook/presto/sql/tree/AstVisitor.java b/presto-parser/src/main/java/com/facebook/presto/sql/tree/AstVisitor.java\nindex dfd7d87..88c596d 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/tree/AstVisitor.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/tree/AstVisitor.java\n@@ -389,11 +389,11 @@\n \n     protected R visitCreateTable(CreateTable node, C context)\n     {\n-        return visitNode(node, context);\n+        return visitStatement(node, context);\n     }\n \n     protected R visitDropTable(DropTable node, C context)\n     {\n-        return visitNode(node, context);\n+        return visitStatement(node, context);\n     }\n }\n", "projectName": "facebook.presto", "bugLineNum": 397, "bugNodeStartChar": 9851, "bugNodeLength": 24, "fixLineNum": 397, "fixNodeStartChar": 9851, "fixNodeLength": 29, "sourceBeforeFix": "visitNode(node,context)", "sourceAfterFix": "visitStatement(node,context)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "3eb03ea8da9525d9615fcef99c0f3dcc3f1218c9", "fixCommitParentSHA1": "38b20e6d9e1897e3ee869930f390d664f18c087b", "bugFilePath": "presto-parser/src/main/java/com/facebook/presto/sql/tree/AstVisitor.java", "fixPatch": "diff --git a/presto-parser/src/main/java/com/facebook/presto/sql/tree/AstVisitor.java b/presto-parser/src/main/java/com/facebook/presto/sql/tree/AstVisitor.java\nindex dfd7d87..88c596d 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/tree/AstVisitor.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/tree/AstVisitor.java\n@@ -389,11 +389,11 @@\n \n     protected R visitCreateTable(CreateTable node, C context)\n     {\n-        return visitNode(node, context);\n+        return visitStatement(node, context);\n     }\n \n     protected R visitDropTable(DropTable node, C context)\n     {\n-        return visitNode(node, context);\n+        return visitStatement(node, context);\n     }\n }\n", "projectName": "facebook.presto", "bugLineNum": 397, "bugNodeStartChar": 9851, "bugNodeLength": 24, "fixLineNum": 397, "fixNodeStartChar": 9851, "fixNodeLength": 29, "sourceBeforeFix": "visitNode(node,context)", "sourceAfterFix": "visitStatement(node,context)"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "c24ce79fd0921743b7d4ca5ca6594f23640fdd37", "fixCommitParentSHA1": "8711a2983f3cb122815af74885180cbd289e4efc", "bugFilePath": "presto-benchmark/src/main/java/com/facebook/presto/benchmark/BenchmarkSuite.java", "fixPatch": "diff --git a/presto-benchmark/src/main/java/com/facebook/presto/benchmark/BenchmarkSuite.java b/presto-benchmark/src/main/java/com/facebook/presto/benchmark/BenchmarkSuite.java\nindex 91f048f..f719a48 100644\n--- a/presto-benchmark/src/main/java/com/facebook/presto/benchmark/BenchmarkSuite.java\n+++ b/presto-benchmark/src/main/java/com/facebook/presto/benchmark/BenchmarkSuite.java\n@@ -95,7 +95,7 @@\n         this.outputDirectory = checkNotNull(outputDirectory, \"outputDirectory is null\");\n     }\n \n-    private File createOutputFile(String fileName)\n+    private static File createOutputFile(String fileName)\n             throws IOException\n     {\n         File outputFile = new File(fileName);\n", "projectName": "facebook.presto", "bugLineNum": 98, "bugNodeStartChar": 4657, "bugNodeLength": 206, "fixLineNum": 98, "fixNodeStartChar": 4657, "fixNodeLength": 213, "sourceBeforeFix": "2", "sourceAfterFix": "10"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "fc613b66c484347d753bf7ccdf108c6ebf036983", "fixCommitParentSHA1": "562e96beac669f2c93100c480fbedb0c8414f8e8", "bugFilePath": "presto-spi/src/main/java/com/facebook/presto/spi/type/TimeZoneKey.java", "fixPatch": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/type/TimeZoneKey.java b/presto-spi/src/main/java/com/facebook/presto/spi/type/TimeZoneKey.java\nindex 1ca9b59..8b908b9 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/type/TimeZoneKey.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/type/TimeZoneKey.java\n@@ -231,7 +231,7 @@\n \n         }\n \n-        if (zoneId.equals(\"+00:00\") | zoneId.equals(\"-00:00\")) {\n+        if (zoneId.equals(\"+00:00\") || zoneId.equals(\"-00:00\")) {\n             return \"UTC\";\n         }\n         return zoneId;\n", "projectName": "facebook.presto", "bugLineNum": 234, "bugNodeStartChar": 7703, "bugNodeLength": 49, "fixLineNum": 234, "fixNodeStartChar": 7703, "fixNodeLength": 50, "sourceBeforeFix": "zoneId.equals(\"+00:00\") | zoneId.equals(\"-00:00\")", "sourceAfterFix": "zoneId.equals(\"+00:00\") || zoneId.equals(\"-00:00\")"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "68ae53e4e14e5e7c69af1aafa9864e8c71df55d3", "fixCommitParentSHA1": "13b0f2bfb53bb1b3407ee0161c89d80504ddfae4", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/AbstractTestQueries.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/AbstractTestQueries.java b/presto-main/src/test/java/com/facebook/presto/AbstractTestQueries.java\nindex 70eafa2..6a75b89 100644\n--- a/presto-main/src/test/java/com/facebook/presto/AbstractTestQueries.java\n+++ b/presto-main/src/test/java/com/facebook/presto/AbstractTestQueries.java\n@@ -1813,7 +1813,7 @@\n         assertQuery(\"SELECT \\\"TOTALPRICE\\\" \\\"my price\\\" FROM \\\"ORDERS\\\"\");\n     }\n \n-    @Test(expectedExceptions = Exception.class, expectedExceptionsMessageRegExp = \".*orderkey_1.*\")\n+    @Test(expectedExceptions = RuntimeException.class, expectedExceptionsMessageRegExp = \".*orderkey_1.*\")\n     public void testInvalidColumn()\n             throws Exception\n     {\n@@ -2961,7 +2961,7 @@\n                         MILLISECONDS.toSeconds(new DateTime(1970, 1, 1, 3, 4, 0, 0, DateTimeZone.UTC).getMillis()) + \",  \" +\n                         MILLISECONDS.toSeconds(new DateTime(1960, 1, 22, 3, 4, 0, 0, DateTimeZone.UTC).getMillis()) + \",  \" +\n                         MILLISECONDS.toSeconds(new DateTime(2013, 3, 22, 0, 0, 0, 0, DateTimeZone.UTC).getMillis()) + \",  \" +\n-                        String.valueOf(TimeUnit.DAYS.toSeconds(123)));\n+                        TimeUnit.DAYS.toSeconds(123));\n     }\n \n     @Test\n", "projectName": "facebook.presto", "bugLineNum": 1816, "bugNodeStartChar": 66778, "bugNodeLength": 15, "fixLineNum": 1816, "fixNodeStartChar": 66778, "fixNodeLength": 22, "sourceBeforeFix": "Exception.class", "sourceAfterFix": "RuntimeException.class"}, {"bugType": "SWAP_ARGUMENTS", "fixCommitSHA1": "9c2f4b9e862de01169f62143fc8ffbecd88ea0e3", "fixCommitParentSHA1": "78ee4696417986d2fe9ce211cd8e9a6efc28f16a", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/PlanOptimizersFactory.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/PlanOptimizersFactory.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/PlanOptimizersFactory.java\nindex c74cb77..6d1467a 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/PlanOptimizersFactory.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/PlanOptimizersFactory.java\n@@ -63,8 +63,8 @@\n                 new MergeProjections(),\n                 new SimplifyExpressions(metadata), // Re-run the SimplifyExpressions to simplify any recomposed expressions from other optimizations\n                 new UnaliasSymbolReferences(), // Run again because predicate pushdown might add more projections\n-                new PruneRedundantProjections(), // Run again because predicate pushdown might add more projections\n-                new PruneUnreferencedOutputs()); // Make sure to run this last to help clean the plan for logging/execution and not remove info that other optimizers might need at an earlier point\n+                new PruneUnreferencedOutputs(), // Make sure to run this at the end to help clean the plan for logging/execution and not remove info that other optimizers might need at an earlier point\n+                new PruneRedundantProjections()); // This MUST run after PruneUnreferencedOutputs as it may introduce new redundant projections\n         // TODO: consider adding a formal final plan sanitization optimizer that prepares the plan for transmission/execution/logging\n         // TODO: figure out how to improve the set flattening optimizer so that it can run at any point\n \n", "projectName": "facebook.presto", "bugLineNum": 55, "bugNodeStartChar": 2287, "bugNodeLength": 1071, "fixLineNum": 55, "fixNodeStartChar": 2287, "fixNodeLength": 1158, "sourceBeforeFix": "builder.add(new ImplementSampleAsFilter(),new SimplifyExpressions(metadata),new UnaliasSymbolReferences(),new PruneRedundantProjections(),new SetFlatteningOptimizer(),new LimitPushDown(),new PredicatePushDown(metadata,splitManager),new PredicatePushDown(metadata,splitManager),new MergeProjections(),new SimplifyExpressions(metadata),new UnaliasSymbolReferences(),new PruneRedundantProjections(),new PruneUnreferencedOutputs())", "sourceAfterFix": "builder.add(new ImplementSampleAsFilter(),new SimplifyExpressions(metadata),new UnaliasSymbolReferences(),new PruneRedundantProjections(),new SetFlatteningOptimizer(),new LimitPushDown(),new PredicatePushDown(metadata,splitManager),new PredicatePushDown(metadata,splitManager),new MergeProjections(),new SimplifyExpressions(metadata),new UnaliasSymbolReferences(),new PruneUnreferencedOutputs(),new PruneRedundantProjections())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "678913db7377dc67b3cbe92f6c9c9e401b777d97", "fixCommitParentSHA1": "f7b6f9051a068a4714391b6d11686709ed6cce12", "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/util/AsyncRecursiveWalker.java", "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/util/AsyncRecursiveWalker.java b/presto-hive/src/main/java/com/facebook/presto/hive/util/AsyncRecursiveWalker.java\nindex 7632e5e..1e5788f 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/util/AsyncRecursiveWalker.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/util/AsyncRecursiveWalker.java\n@@ -71,7 +71,7 @@\n                 else {\n                     callback.process(entry.getFileStatus(), entry.getBlockLocations());\n                 }\n-                if (future.isCancelled()) {\n+                if (future.isDone()) {\n                     return;\n                 }\n             }\n", "projectName": "facebook.presto", "bugLineNum": 74, "bugNodeStartChar": 2696, "bugNodeLength": 20, "fixLineNum": 74, "fixNodeStartChar": 2696, "fixNodeLength": 15, "sourceBeforeFix": "future.isCancelled()", "sourceAfterFix": "future.isDone()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "678913db7377dc67b3cbe92f6c9c9e401b777d97", "fixCommitParentSHA1": "f7b6f9051a068a4714391b6d11686709ed6cce12", "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/util/AsyncRecursiveWalker.java", "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/util/AsyncRecursiveWalker.java b/presto-hive/src/main/java/com/facebook/presto/hive/util/AsyncRecursiveWalker.java\nindex 7632e5e..1e5788f 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/util/AsyncRecursiveWalker.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/util/AsyncRecursiveWalker.java\n@@ -71,7 +71,7 @@\n                 else {\n                     callback.process(entry.getFileStatus(), entry.getBlockLocations());\n                 }\n-                if (future.isCancelled()) {\n+                if (future.isDone()) {\n                     return;\n                 }\n             }\n", "projectName": "facebook.presto", "bugLineNum": 74, "bugNodeStartChar": 2696, "bugNodeLength": 20, "fixLineNum": 74, "fixNodeStartChar": 2696, "fixNodeLength": 15, "sourceBeforeFix": "future.isCancelled()", "sourceAfterFix": "future.isDone()"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "70f799c4c5c4aead8e9c2a5986870413c7c8cf7e", "fixCommitParentSHA1": "8740e95cdcbf47b3b85b31a73ee82758aa23159c", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/execution/TaskExecutor.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/TaskExecutor.java b/presto-main/src/main/java/com/facebook/presto/execution/TaskExecutor.java\nindex 715082c..1dbb2d2 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/TaskExecutor.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/TaskExecutor.java\n@@ -96,7 +96,7 @@\n     private final DistributionStat queuedTime = new DistributionStat();\n     private final DistributionStat wallTime = new DistributionStat();\n \n-    private boolean closed;\n+    private volatile boolean closed;\n \n     @Inject\n     public TaskExecutor(TaskManagerConfig config)\n", "projectName": "facebook.presto", "bugLineNum": 99, "bugNodeStartChar": 3978, "bugNodeLength": 23, "fixLineNum": 99, "fixNodeStartChar": 3978, "fixNodeLength": 32, "sourceBeforeFix": "2", "sourceAfterFix": "66"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "c3298a9ee990eeeeabadb36b035433338e878ecf", "fixCommitParentSHA1": "da790091a3253ef46dc266d35d444a257a0070e9", "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/HiveClient.java", "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveClient.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveClient.java\nindex 57c3201..5278d05 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveClient.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveClient.java\n@@ -585,7 +585,7 @@\n                                 break;\n                             case DOUBLE:\n                                 if (value.isEmpty()) {\n-                                    builder.put(columnHandle, 0L);\n+                                    builder.put(columnHandle, 0.0);\n                                 }\n                                 else {\n                                     builder.put(columnHandle, parseDouble(value));\n", "projectName": "facebook.presto", "bugLineNum": 588, "bugNodeStartChar": 24614, "bugNodeLength": 29, "fixLineNum": 588, "fixNodeStartChar": 24614, "fixNodeLength": 30, "sourceBeforeFix": "builder.put(columnHandle,0L)", "sourceAfterFix": "builder.put(columnHandle,0.0)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "e23740aecdf20d18fcdce46153c087a99bf5b2c3", "fixCommitParentSHA1": "60c7b5c132bcfcddb2fb4977ca8139b9b0583779", "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/HiveClient.java", "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveClient.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveClient.java\nindex c0785e3..2785cd1 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveClient.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveClient.java\n@@ -335,7 +335,8 @@\n             try {\n                 columns.put(tableName, getTableMetadata(tableName).getColumns());\n             }\n-            catch (RuntimeException e) {\n+            catch (TableNotFoundException e) {\n+                // table disappeared during listing operation\n             }\n         }\n         return columns.build();\n", "projectName": "facebook.presto", "bugLineNum": 338, "bugNodeStartChar": 14071, "bugNodeLength": 18, "fixLineNum": 338, "fixNodeStartChar": 14071, "fixNodeLength": 24, "sourceBeforeFix": "RuntimeException e", "sourceAfterFix": "TableNotFoundException e"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "e3b94b6ab4c29b8dddb99ce9fd2efa36e097d455", "fixCommitParentSHA1": "d033d51116738b9bd5cedabec5b1f8236ab5b201", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/execution/SharedBuffer.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/SharedBuffer.java b/presto-main/src/main/java/com/facebook/presto/execution/SharedBuffer.java\nindex 414ef09..446e929 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/SharedBuffer.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/SharedBuffer.java\n@@ -343,7 +343,7 @@\n             }\n \n             // refill buffer from queued pages\n-            while (!queuedPages.isEmpty() && bufferedBytes >= maxBufferedBytes) {\n+            while (!queuedPages.isEmpty() && bufferedBytes < maxBufferedBytes) {\n                 QueuedPage queuedPage = queuedPages.removeFirst();\n                 addInternal(queuedPage.getPage());\n                 queuedPage.getFuture().set(null);\n", "projectName": "facebook.presto", "bugLineNum": 346, "bugNodeStartChar": 11504, "bugNodeLength": 33, "fixLineNum": 346, "fixNodeStartChar": 11504, "fixNodeLength": 32, "sourceBeforeFix": "bufferedBytes >= maxBufferedBytes", "sourceAfterFix": "bufferedBytes < maxBufferedBytes"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "868cffb44fac6d02e9bfe6a0bbaf615fe64017d1", "fixCommitParentSHA1": "0db8297af78a58f0aefa5895e607b1b0bdcaed8e", "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetastoreClient.java", "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetastoreClient.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetastoreClient.java\nindex c85424d..8c27e99 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetastoreClient.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetastoreClient.java\n@@ -19,13 +19,13 @@\n \n import java.io.Closeable;\n \n-class HiveMetastoreClient\n+public class HiveMetastoreClient\n         extends ThriftHiveMetastore.Client\n         implements Closeable\n {\n     private final TTransport transport;\n \n-    HiveMetastoreClient(TTransport transport)\n+    public HiveMetastoreClient(TTransport transport)\n     {\n         super(new TBinaryProtocol(transport));\n         this.transport = transport;\n", "projectName": "facebook.presto", "bugLineNum": 22, "bugNodeStartChar": 852, "bugNodeLength": 361, "fixLineNum": 22, "fixNodeStartChar": 852, "fixNodeLength": 368, "sourceBeforeFix": "0", "sourceAfterFix": "1"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "868cffb44fac6d02e9bfe6a0bbaf615fe64017d1", "fixCommitParentSHA1": "0db8297af78a58f0aefa5895e607b1b0bdcaed8e", "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetastoreClient.java", "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetastoreClient.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetastoreClient.java\nindex c85424d..8c27e99 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetastoreClient.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetastoreClient.java\n@@ -19,13 +19,13 @@\n \n import java.io.Closeable;\n \n-class HiveMetastoreClient\n+public class HiveMetastoreClient\n         extends ThriftHiveMetastore.Client\n         implements Closeable\n {\n     private final TTransport transport;\n \n-    HiveMetastoreClient(TTransport transport)\n+    public HiveMetastoreClient(TTransport transport)\n     {\n         super(new TBinaryProtocol(transport));\n         this.transport = transport;\n", "projectName": "facebook.presto", "bugLineNum": 28, "bugNodeStartChar": 997, "bugNodeLength": 136, "fixLineNum": 28, "fixNodeStartChar": 997, "fixNodeLength": 143, "sourceBeforeFix": "0", "sourceAfterFix": "1"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "882a8d7085e9c4e2b698c61de5d92e3f4643cbf4", "fixCommitParentSHA1": "a07b521ee61556139b093b414268c1e80a701e73", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/tpch/TpchMetadata.java b/presto-main/src/main/java/com/facebook/presto/tpch/TpchMetadata.java\nindex cd57a72..d83c199 100644\n--- a/presto-main/src/main/java/com/facebook/presto/tpch/TpchMetadata.java\n+++ b/presto-main/src/main/java/com/facebook/presto/tpch/TpchMetadata.java\n@@ -40,7 +40,7 @@\n             .column(\"orderdate\", STRING) // 2400 unique\n             .column(\"orderpriority\", STRING) // 5 unique\n             .column(\"clerk\", STRING) // High cardinality\n-            .column(\"shippriority\", STRING) // 1 unique\n+            .column(\"shippriority\", LONG) // 1 unique\n             .column(\"comment\", STRING)\n             .build(); // Arbitrary strings\n \n", "projectName": "facebook.presto", "bugLineNum": 35, "bugNodeStartChar": 1376, "bugNodeLength": 495, "fixLineNum": 35, "fixNodeStartChar": 1376, "fixNodeLength": 493, "sourceBeforeFix": "tableMetadataBuilder(TPCH_SCHEMA_NAME,TPCH_ORDERS_NAME).column(\"orderkey\",LONG).column(\"custkey\",LONG).column(\"orderstatus\",STRING).column(\"totalprice\",DOUBLE).column(\"orderdate\",STRING).column(\"orderpriority\",STRING).column(\"clerk\",STRING).column(\"shippriority\",STRING)", "sourceAfterFix": "tableMetadataBuilder(TPCH_SCHEMA_NAME,TPCH_ORDERS_NAME).column(\"orderkey\",LONG).column(\"custkey\",LONG).column(\"orderstatus\",STRING).column(\"totalprice\",DOUBLE).column(\"orderdate\",STRING).column(\"orderpriority\",STRING).column(\"clerk\",STRING).column(\"shippriority\",LONG)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "1728599958637971fd8406246d4d99c8df3fea6d", "fixCommitParentSHA1": "0ac6bd22548004873d2db6fd23946211f51aaaea", "bugFilePath": "presto-main/src/test/java/com/facebook/presto/sql/gen/TestExpressionCompiler.java", "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/sql/gen/TestExpressionCompiler.java b/presto-main/src/test/java/com/facebook/presto/sql/gen/TestExpressionCompiler.java\nindex 9c4e451..03cc31d 100644\n--- a/presto-main/src/test/java/com/facebook/presto/sql/gen/TestExpressionCompiler.java\n+++ b/presto-main/src/test/java/com/facebook/presto/sql/gen/TestExpressionCompiler.java\n@@ -993,7 +993,7 @@\n         ImmutableList.Builder<String> expressions = ImmutableList.builder();\n         Set<List<String>> valueLists = Sets.cartesianProduct(unrolledValues);\n         for (List<String> valueList : valueLists) {\n-            expressions.add(String.format(expressionPattern, valueList.toArray(new String[valueList.size()])));\n+            expressions.add(String.format(expressionPattern, valueList.toArray(new Object[valueList.size()])));\n         }\n         return expressions.build();\n     }\n", "projectName": "facebook.presto", "bugLineNum": 996, "bugNodeStartChar": 49437, "bugNodeLength": 24, "fixLineNum": 996, "fixNodeStartChar": 49437, "fixNodeLength": 24, "sourceBeforeFix": "String[]", "sourceAfterFix": "Object[]"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "28db1cc9efa95eb3db21a27872101e24f849ed34", "fixCommitParentSHA1": "e2cf60be61c40f9d2c532fdd928b6c3d26c086cf", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/connector/ConnectorManager.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/connector/ConnectorManager.java b/presto-main/src/main/java/com/facebook/presto/connector/ConnectorManager.java\nindex cf329d4..dda1963 100644\n--- a/presto-main/src/main/java/com/facebook/presto/connector/ConnectorManager.java\n+++ b/presto-main/src/main/java/com/facebook/presto/connector/ConnectorManager.java\n@@ -76,7 +76,7 @@\n         Preconditions.checkArgument(connectorFactory != null, \"No factory for connector %s\", connectorName);\n \n         Connector connector = connectorFactory.create(connectorId, properties);\n-        connectors.put(connectorName, connector);\n+        connectors.put(connectorId, connector);\n \n         addConnector(catalogName, connectorId, connector);\n     }\n", "projectName": "facebook.presto", "bugLineNum": 79, "bugNodeStartChar": 3444, "bugNodeLength": 40, "fixLineNum": 79, "fixNodeStartChar": 3444, "fixNodeLength": 38, "sourceBeforeFix": "connectors.put(connectorName,connector)", "sourceAfterFix": "connectors.put(connectorId,connector)"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "dcc24b58f7a426eed6d81d0c9f85367e12810efa", "fixCommitParentSHA1": "398bb129e7e00fd72adc40f7af50729942a2fceb", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/execution/CreateAliasExecution.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/CreateAliasExecution.java b/presto-main/src/main/java/com/facebook/presto/execution/CreateAliasExecution.java\nindex db40bdb..0c527b9 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/CreateAliasExecution.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/CreateAliasExecution.java\n@@ -124,7 +124,7 @@\n         QualifiedTableName remoteTableName = createQualifiedTableName(stateMachine.getSession(), statement.getRemote());\n \n         Optional<TableHandle> remoteTableHandle = metadataManager.getTableHandle(remoteTableName);\n-        checkState(!remoteTableHandle.isPresent(), \"Table %s does not exist\", remoteTableName);\n+        checkState(remoteTableHandle.isPresent(), \"Table %s does not exist\", remoteTableName);\n         Optional<String> remoteConnectorId = metadataManager.getConnectorId(remoteTableHandle.get());\n         Preconditions.checkArgument(remoteConnectorId.isPresent(), \"Table %s can not be aliased\", remoteTableName);\n \n", "projectName": "facebook.presto", "bugLineNum": 127, "bugNodeStartChar": 4181, "bugNodeLength": 30, "fixLineNum": 127, "fixNodeStartChar": 4181, "fixNodeLength": 29, "sourceBeforeFix": "!remoteTableHandle.isPresent()", "sourceAfterFix": "remoteTableHandle.isPresent()"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "0ccf7393cbbb04a42ae4cce19588110fe11c2b7d", "fixCommitParentSHA1": "21d3fbe0006f5606643482ad41b52b83c68c70b1", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java b/presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java\nindex 4a66231..ed0182a 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java\n@@ -355,7 +355,7 @@\n \n             // if sequenceId is after the end of this response, return and empty list\n             int startOffset = Ints.saturatedCast(sequenceId - startingSequenceId);\n-            if (startOffset > pages.size()) {\n+            if (startOffset >= pages.size()) {\n                 // most likely a duplicate of an old request\n                 return ImmutableList.of();\n             }\n", "projectName": "facebook.presto", "bugLineNum": 358, "bugNodeStartChar": 13182, "bugNodeLength": 26, "fixLineNum": 358, "fixNodeStartChar": 13182, "fixNodeLength": 27, "sourceBeforeFix": "startOffset > pages.size()", "sourceAfterFix": "startOffset >= pages.size()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "bb4b8b95e12f23f6951fdfdd903120902f0553c9", "fixCommitParentSHA1": "9eb5b9c8a1da521a82ce291e82a4037de6faab2a", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/split/SplitManager.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/split/SplitManager.java b/presto-main/src/main/java/com/facebook/presto/split/SplitManager.java\nindex 134bf01..988b213 100644\n--- a/presto-main/src/main/java/com/facebook/presto/split/SplitManager.java\n+++ b/presto-main/src/main/java/com/facebook/presto/split/SplitManager.java\n@@ -96,7 +96,7 @@\n     public List<Partition> getPartitions(TableHandle table, Optional<Map<ColumnHandle, Object>> bindings)\n     {\n         checkNotNull(table, \"table is null\");\n-        return getConnectorSplitManager(table).getPartitions(table, bindings.get());\n+        return getConnectorSplitManager(table).getPartitions(table, bindings.or(ImmutableMap.<ColumnHandle, Object>of()));\n     }\n \n     private List<Partition> prunePartitions(Session session, List<Partition> partitions, Expression predicate, Map<ColumnHandle, Symbol> columnToSymbol)\n", "projectName": "facebook.presto", "bugLineNum": 99, "bugNodeStartChar": 4225, "bugNodeLength": 14, "fixLineNum": 99, "fixNodeStartChar": 4225, "fixNodeLength": 52, "sourceBeforeFix": "bindings.get()", "sourceAfterFix": "bindings.or(ImmutableMap.<ColumnHandle,Object>of())"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "bbe1b9a42da423745adb29c29c687e2545bb4202", "fixCommitParentSHA1": "cd4e8c6894f5fb1f8ed7415591d53502c1c12f19", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/execution/SqlTaskExecution.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/SqlTaskExecution.java b/presto-main/src/main/java/com/facebook/presto/execution/SqlTaskExecution.java\nindex 542474a..f4d2341 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/SqlTaskExecution.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/SqlTaskExecution.java\n@@ -420,7 +420,7 @@\n             while (!taskOutput.getState().isDone()) {\n                 FutureTask<?> futureTask = scheduledWorkers.pollFirst(1, TimeUnit.SECONDS);\n                 // if we got a task and the state is not done, run the task\n-                if (futureTask != null && taskOutput.getState().isDone()) {\n+                if (futureTask != null && !taskOutput.getState().isDone()) {\n                     futureTask.run();\n                 }\n             }\n", "projectName": "facebook.presto", "bugLineNum": 423, "bugNodeStartChar": 15621, "bugNodeLength": 30, "fixLineNum": 423, "fixNodeStartChar": 15621, "fixNodeLength": 31, "sourceBeforeFix": "taskOutput.getState().isDone()", "sourceAfterFix": "!taskOutput.getState().isDone()"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "46c5f900bcc46e5340101decda81c214a467ffe4", "fixCommitParentSHA1": "69d112f280316dd3f82a5c092550e5141fbe3a1c", "bugFilePath": "presto-server/src/test/java/com/facebook/presto/server/TestDistributedQueries.java", "fixPatch": "diff --git a/presto-server/src/test/java/com/facebook/presto/server/TestDistributedQueries.java b/presto-server/src/test/java/com/facebook/presto/server/TestDistributedQueries.java\nindex c1961d1..bced5ab 100644\n--- a/presto-server/src/test/java/com/facebook/presto/server/TestDistributedQueries.java\n+++ b/presto-server/src/test/java/com/facebook/presto/server/TestDistributedQueries.java\n@@ -152,7 +152,7 @@\n             @Override\n             public String apply(MaterializedTuple input)\n             {\n-                assertEquals(input.getFieldCount(), 3);\n+                assertEquals(input.getFieldCount(), 4);\n                 return (String) input.getField(0);\n             }\n         }));\n", "projectName": "facebook.presto", "bugLineNum": 155, "bugNodeStartChar": 6301, "bugNodeLength": 38, "fixLineNum": 155, "fixNodeStartChar": 6301, "fixNodeLength": 38, "sourceBeforeFix": "assertEquals(input.getFieldCount(),3)", "sourceAfterFix": "assertEquals(input.getFieldCount(),4)"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "1e1ec95117cf4701f3df2530aaf7a7c4627599f3", "fixCommitParentSHA1": "09db64d9ff0d0dd046365f94b519e1a5d4a8fd9b", "bugFilePath": "presto-cli/src/main/java/com/facebook/presto/cli/Query.java", "fixPatch": "diff --git a/presto-cli/src/main/java/com/facebook/presto/cli/Query.java b/presto-cli/src/main/java/com/facebook/presto/cli/Query.java\nindex 56e1014..0b9ec37 100644\n--- a/presto-cli/src/main/java/com/facebook/presto/cli/Query.java\n+++ b/presto-cli/src/main/java/com/facebook/presto/cli/Query.java\n@@ -90,7 +90,7 @@\n             waitForData();\n         }\n \n-        if ((!client.isFailed()) && (!client.isGone())) {\n+        if ((!client.isFailed()) && (!client.isGone()) && (!client.isClosed())) {\n             QueryResults results = client.isValid() ? client.current() : client.finalResults();\n             if (results.getColumns() == null) {\n                 errorChannel.printf(\"Query %s has no columns\\n\", results.getId());\n", "projectName": "facebook.presto", "bugLineNum": 93, "bugNodeStartChar": 3085, "bugNodeLength": 42, "fixLineNum": 93, "fixNodeStartChar": 3085, "fixNodeLength": 66, "sourceBeforeFix": "(!client.isFailed()) && (!client.isGone())", "sourceAfterFix": "(!client.isFailed()) && (!client.isGone()) && (!client.isClosed())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "16767e5187b0d75a180aa8a3678d7afe6bc6f0da", "fixCommitParentSHA1": "2d90802070fc1762fc3154b002b388771f072e88", "bugFilePath": "presto-server/src/main/java/com/facebook/presto/server/StatementResource.java", "fixPatch": "diff --git a/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java b/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java\nindex b5f691a..8da0f0f 100644\n--- a/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java\n+++ b/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java\n@@ -106,7 +106,7 @@\n         this.queryManager = checkNotNull(queryManager, \"queryManager is null\");\n         this.httpClient = checkNotNull(httpClient, \"httpClient is null\");\n \n-        queryPurger.scheduleAtFixedRate(new PurgeQueriesRunnable(queries.keySet(), queryManager), 200, 200, TimeUnit.MILLISECONDS);\n+        queryPurger.scheduleWithFixedDelay(new PurgeQueriesRunnable(queries.keySet(), queryManager), 200, 200, TimeUnit.MILLISECONDS);\n     }\n \n     @PreDestroy\n@@ -600,9 +600,9 @@\n                 // do not call queryManager.getQueryInfo() since it updates the heartbeat time\n                 Set<QueryId> liveQueries = ImmutableSet.copyOf(transform(queryManager.getAllQueryInfo(), queryIdGetter()));\n \n-                Set<QueryId> deadQueries = Sets.difference(liveQueries, queryIdsSnapshot);\n+                Set<QueryId> deadQueries = Sets.difference(queryIdsSnapshot, liveQueries);\n                 for (QueryId deadQuery : deadQueries) {\n-                    queryIdsSnapshot.remove(deadQuery);\n+                    queryIds.remove(deadQuery);\n                     log.debug(\"Removed expired query %s\", deadQuery);\n                 }\n             }\n", "projectName": "facebook.presto", "bugLineNum": 109, "bugNodeStartChar": 4708, "bugNodeLength": 122, "fixLineNum": 109, "fixNodeStartChar": 4708, "fixNodeLength": 125, "sourceBeforeFix": "queryPurger.scheduleAtFixedRate(new PurgeQueriesRunnable(queries.keySet(),queryManager),200,200,TimeUnit.MILLISECONDS)", "sourceAfterFix": "queryPurger.scheduleWithFixedDelay(new PurgeQueriesRunnable(queries.keySet(),queryManager),200,200,TimeUnit.MILLISECONDS)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "16767e5187b0d75a180aa8a3678d7afe6bc6f0da", "fixCommitParentSHA1": "2d90802070fc1762fc3154b002b388771f072e88", "bugFilePath": "presto-server/src/main/java/com/facebook/presto/server/StatementResource.java", "fixPatch": "diff --git a/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java b/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java\nindex b5f691a..8da0f0f 100644\n--- a/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java\n+++ b/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java\n@@ -106,7 +106,7 @@\n         this.queryManager = checkNotNull(queryManager, \"queryManager is null\");\n         this.httpClient = checkNotNull(httpClient, \"httpClient is null\");\n \n-        queryPurger.scheduleAtFixedRate(new PurgeQueriesRunnable(queries.keySet(), queryManager), 200, 200, TimeUnit.MILLISECONDS);\n+        queryPurger.scheduleWithFixedDelay(new PurgeQueriesRunnable(queries.keySet(), queryManager), 200, 200, TimeUnit.MILLISECONDS);\n     }\n \n     @PreDestroy\n@@ -600,9 +600,9 @@\n                 // do not call queryManager.getQueryInfo() since it updates the heartbeat time\n                 Set<QueryId> liveQueries = ImmutableSet.copyOf(transform(queryManager.getAllQueryInfo(), queryIdGetter()));\n \n-                Set<QueryId> deadQueries = Sets.difference(liveQueries, queryIdsSnapshot);\n+                Set<QueryId> deadQueries = Sets.difference(queryIdsSnapshot, liveQueries);\n                 for (QueryId deadQuery : deadQueries) {\n-                    queryIdsSnapshot.remove(deadQuery);\n+                    queryIds.remove(deadQuery);\n                     log.debug(\"Removed expired query %s\", deadQuery);\n                 }\n             }\n", "projectName": "facebook.presto", "bugLineNum": 109, "bugNodeStartChar": 4708, "bugNodeLength": 122, "fixLineNum": 109, "fixNodeStartChar": 4708, "fixNodeLength": 125, "sourceBeforeFix": "queryPurger.scheduleAtFixedRate(new PurgeQueriesRunnable(queries.keySet(),queryManager),200,200,TimeUnit.MILLISECONDS)", "sourceAfterFix": "queryPurger.scheduleWithFixedDelay(new PurgeQueriesRunnable(queries.keySet(),queryManager),200,200,TimeUnit.MILLISECONDS)"}, {"bugType": "SWAP_ARGUMENTS", "fixCommitSHA1": "16767e5187b0d75a180aa8a3678d7afe6bc6f0da", "fixCommitParentSHA1": "2d90802070fc1762fc3154b002b388771f072e88", "bugFilePath": "presto-server/src/main/java/com/facebook/presto/server/StatementResource.java", "fixPatch": "diff --git a/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java b/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java\nindex b5f691a..8da0f0f 100644\n--- a/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java\n+++ b/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java\n@@ -106,7 +106,7 @@\n         this.queryManager = checkNotNull(queryManager, \"queryManager is null\");\n         this.httpClient = checkNotNull(httpClient, \"httpClient is null\");\n \n-        queryPurger.scheduleAtFixedRate(new PurgeQueriesRunnable(queries.keySet(), queryManager), 200, 200, TimeUnit.MILLISECONDS);\n+        queryPurger.scheduleWithFixedDelay(new PurgeQueriesRunnable(queries.keySet(), queryManager), 200, 200, TimeUnit.MILLISECONDS);\n     }\n \n     @PreDestroy\n@@ -600,9 +600,9 @@\n                 // do not call queryManager.getQueryInfo() since it updates the heartbeat time\n                 Set<QueryId> liveQueries = ImmutableSet.copyOf(transform(queryManager.getAllQueryInfo(), queryIdGetter()));\n \n-                Set<QueryId> deadQueries = Sets.difference(liveQueries, queryIdsSnapshot);\n+                Set<QueryId> deadQueries = Sets.difference(queryIdsSnapshot, liveQueries);\n                 for (QueryId deadQuery : deadQueries) {\n-                    queryIdsSnapshot.remove(deadQuery);\n+                    queryIds.remove(deadQuery);\n                     log.debug(\"Removed expired query %s\", deadQuery);\n                 }\n             }\n", "projectName": "facebook.presto", "bugLineNum": 603, "bugNodeStartChar": 24319, "bugNodeLength": 46, "fixLineNum": 603, "fixNodeStartChar": 24319, "fixNodeLength": 46, "sourceBeforeFix": "Sets.difference(liveQueries,queryIdsSnapshot)", "sourceAfterFix": "Sets.difference(queryIdsSnapshot,liveQueries)"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "16767e5187b0d75a180aa8a3678d7afe6bc6f0da", "fixCommitParentSHA1": "2d90802070fc1762fc3154b002b388771f072e88", "bugFilePath": "presto-server/src/main/java/com/facebook/presto/server/StatementResource.java", "fixPatch": "diff --git a/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java b/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java\nindex b5f691a..8da0f0f 100644\n--- a/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java\n+++ b/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java\n@@ -106,7 +106,7 @@\n         this.queryManager = checkNotNull(queryManager, \"queryManager is null\");\n         this.httpClient = checkNotNull(httpClient, \"httpClient is null\");\n \n-        queryPurger.scheduleAtFixedRate(new PurgeQueriesRunnable(queries.keySet(), queryManager), 200, 200, TimeUnit.MILLISECONDS);\n+        queryPurger.scheduleWithFixedDelay(new PurgeQueriesRunnable(queries.keySet(), queryManager), 200, 200, TimeUnit.MILLISECONDS);\n     }\n \n     @PreDestroy\n@@ -600,9 +600,9 @@\n                 // do not call queryManager.getQueryInfo() since it updates the heartbeat time\n                 Set<QueryId> liveQueries = ImmutableSet.copyOf(transform(queryManager.getAllQueryInfo(), queryIdGetter()));\n \n-                Set<QueryId> deadQueries = Sets.difference(liveQueries, queryIdsSnapshot);\n+                Set<QueryId> deadQueries = Sets.difference(queryIdsSnapshot, liveQueries);\n                 for (QueryId deadQuery : deadQueries) {\n-                    queryIdsSnapshot.remove(deadQuery);\n+                    queryIds.remove(deadQuery);\n                     log.debug(\"Removed expired query %s\", deadQuery);\n                 }\n             }\n", "projectName": "facebook.presto", "bugLineNum": 605, "bugNodeStartChar": 24443, "bugNodeLength": 34, "fixLineNum": 605, "fixNodeStartChar": 24443, "fixNodeLength": 26, "sourceBeforeFix": "queryIdsSnapshot.remove(deadQuery)", "sourceAfterFix": "queryIds.remove(deadQuery)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "16767e5187b0d75a180aa8a3678d7afe6bc6f0da", "fixCommitParentSHA1": "2d90802070fc1762fc3154b002b388771f072e88", "bugFilePath": "presto-server/src/main/java/com/facebook/presto/server/StatementResource.java", "fixPatch": "diff --git a/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java b/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java\nindex b5f691a..8da0f0f 100644\n--- a/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java\n+++ b/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java\n@@ -106,7 +106,7 @@\n         this.queryManager = checkNotNull(queryManager, \"queryManager is null\");\n         this.httpClient = checkNotNull(httpClient, \"httpClient is null\");\n \n-        queryPurger.scheduleAtFixedRate(new PurgeQueriesRunnable(queries.keySet(), queryManager), 200, 200, TimeUnit.MILLISECONDS);\n+        queryPurger.scheduleWithFixedDelay(new PurgeQueriesRunnable(queries.keySet(), queryManager), 200, 200, TimeUnit.MILLISECONDS);\n     }\n \n     @PreDestroy\n@@ -600,9 +600,9 @@\n                 // do not call queryManager.getQueryInfo() since it updates the heartbeat time\n                 Set<QueryId> liveQueries = ImmutableSet.copyOf(transform(queryManager.getAllQueryInfo(), queryIdGetter()));\n \n-                Set<QueryId> deadQueries = Sets.difference(liveQueries, queryIdsSnapshot);\n+                Set<QueryId> deadQueries = Sets.difference(queryIdsSnapshot, liveQueries);\n                 for (QueryId deadQuery : deadQueries) {\n-                    queryIdsSnapshot.remove(deadQuery);\n+                    queryIds.remove(deadQuery);\n                     log.debug(\"Removed expired query %s\", deadQuery);\n                 }\n             }\n", "projectName": "facebook.presto", "bugLineNum": 605, "bugNodeStartChar": 24443, "bugNodeLength": 34, "fixLineNum": 605, "fixNodeStartChar": 24443, "fixNodeLength": 26, "sourceBeforeFix": "queryIdsSnapshot.remove(deadQuery)", "sourceAfterFix": "queryIds.remove(deadQuery)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "15ca69b22b2bcdde426fa8e806c7748f2dfe22fe", "fixCommitParentSHA1": "743138e410228c29862624b548e02d019579a4f0", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/operator/ExchangeOperator.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/ExchangeOperator.java b/presto-main/src/main/java/com/facebook/presto/operator/ExchangeOperator.java\nindex 0cbbb78..9ea9c8d 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/ExchangeOperator.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/ExchangeOperator.java\n@@ -185,7 +185,7 @@\n \n             int neededPages = maxBufferedPages - bufferedPages;\n             int clientCount = (int) ((1.0 * neededPages / expectedPagesPerRequest) * concurrentRequestMultiplier);\n-            clientCount = Math.min(clientCount, 1);\n+            clientCount = Math.max(clientCount, 1);\n \n             int pendingClients = allClients.size() - queuedClients.size() - completedClients.size();\n             clientCount -= pendingClients;\n", "projectName": "facebook.presto", "bugLineNum": 188, "bugNodeStartChar": 7163, "bugNodeLength": 24, "fixLineNum": 188, "fixNodeStartChar": 7163, "fixNodeLength": 24, "sourceBeforeFix": "Math.min(clientCount,1)", "sourceAfterFix": "Math.max(clientCount,1)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "15ca69b22b2bcdde426fa8e806c7748f2dfe22fe", "fixCommitParentSHA1": "743138e410228c29862624b548e02d019579a4f0", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/operator/ExchangeOperator.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/ExchangeOperator.java b/presto-main/src/main/java/com/facebook/presto/operator/ExchangeOperator.java\nindex 0cbbb78..9ea9c8d 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/ExchangeOperator.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/ExchangeOperator.java\n@@ -185,7 +185,7 @@\n \n             int neededPages = maxBufferedPages - bufferedPages;\n             int clientCount = (int) ((1.0 * neededPages / expectedPagesPerRequest) * concurrentRequestMultiplier);\n-            clientCount = Math.min(clientCount, 1);\n+            clientCount = Math.max(clientCount, 1);\n \n             int pendingClients = allClients.size() - queuedClients.size() - completedClients.size();\n             clientCount -= pendingClients;\n", "projectName": "facebook.presto", "bugLineNum": 188, "bugNodeStartChar": 7163, "bugNodeLength": 24, "fixLineNum": 188, "fixNodeStartChar": 7163, "fixNodeLength": 24, "sourceBeforeFix": "Math.min(clientCount,1)", "sourceAfterFix": "Math.max(clientCount,1)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "01958335b94eb8813a090a53768e751e4f8f7366", "fixCommitParentSHA1": "9ac7b16e70df9028f2cad04d9137c7fdb631fd95", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/split/SplitManager.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/split/SplitManager.java b/presto-main/src/main/java/com/facebook/presto/split/SplitManager.java\nindex bf2a2e7..fd94c27 100644\n--- a/presto-main/src/main/java/com/facebook/presto/split/SplitManager.java\n+++ b/presto-main/src/main/java/com/facebook/presto/split/SplitManager.java\n@@ -213,7 +213,7 @@\n                     expectedType = SchemaField.Type.LONG;\n                 }\n                 else if (literal instanceof StringLiteral) {\n-                    value = ((StringLiteral) literal).getSlice();\n+                    value = ((StringLiteral) literal).getValue();\n                     expectedType = SchemaField.Type.STRING;\n                 }\n                 else {\n", "projectName": "facebook.presto", "bugLineNum": 216, "bugNodeStartChar": 11251, "bugNodeLength": 36, "fixLineNum": 216, "fixNodeStartChar": 11251, "fixNodeLength": 36, "sourceBeforeFix": "((StringLiteral)literal).getSlice()", "sourceAfterFix": "((StringLiteral)literal).getValue()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "01958335b94eb8813a090a53768e751e4f8f7366", "fixCommitParentSHA1": "9ac7b16e70df9028f2cad04d9137c7fdb631fd95", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/split/SplitManager.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/split/SplitManager.java b/presto-main/src/main/java/com/facebook/presto/split/SplitManager.java\nindex bf2a2e7..fd94c27 100644\n--- a/presto-main/src/main/java/com/facebook/presto/split/SplitManager.java\n+++ b/presto-main/src/main/java/com/facebook/presto/split/SplitManager.java\n@@ -213,7 +213,7 @@\n                     expectedType = SchemaField.Type.LONG;\n                 }\n                 else if (literal instanceof StringLiteral) {\n-                    value = ((StringLiteral) literal).getSlice();\n+                    value = ((StringLiteral) literal).getValue();\n                     expectedType = SchemaField.Type.STRING;\n                 }\n                 else {\n", "projectName": "facebook.presto", "bugLineNum": 216, "bugNodeStartChar": 11251, "bugNodeLength": 36, "fixLineNum": 216, "fixNodeStartChar": 11251, "fixNodeLength": 36, "sourceBeforeFix": "((StringLiteral)literal).getSlice()", "sourceAfterFix": "((StringLiteral)literal).getValue()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "2017a6ab6bfa3b454ada907d36faed810b8e69b6", "fixCommitParentSHA1": "d9c14802ae7a978b284e4b701c498da3c582c984", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/Main.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/Main.java b/presto-main/src/main/java/com/facebook/presto/Main.java\nindex 21c63f0..3cf8ec6 100644\n--- a/presto-main/src/main/java/com/facebook/presto/Main.java\n+++ b/presto-main/src/main/java/com/facebook/presto/Main.java\n@@ -24,12 +24,12 @@\n     public static void main(String[] args)\n             throws Exception\n     {\n-        CliBuilder<Runnable> builder = Cli.buildCli(\"presto\", Runnable.class)\n+        CliBuilder<Runnable> builder = Cli.<Runnable>builder(\"presto\")\n                 .withDefaultCommand(Server.class)\n                 .withCommand(Server.class)\n                 .withCommand(Execute.class)\n                 .withCommand(Console.class)\n-                .withCommands(Help.class);\n+                .withCommand(Help.class);\n \n         builder.withGroup(\"convert\")\n                 .withDescription(\"convert file formats\")\n", "projectName": "facebook.presto", "bugLineNum": 27, "bugNodeStartChar": 767, "bugNodeLength": 38, "fixLineNum": 27, "fixNodeStartChar": 767, "fixNodeLength": 31, "sourceBeforeFix": "Cli.buildCli(\"presto\",Runnable.class)", "sourceAfterFix": "Cli.<Runnable>builder(\"presto\")"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "2017a6ab6bfa3b454ada907d36faed810b8e69b6", "fixCommitParentSHA1": "d9c14802ae7a978b284e4b701c498da3c582c984", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/Main.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/Main.java b/presto-main/src/main/java/com/facebook/presto/Main.java\nindex 21c63f0..3cf8ec6 100644\n--- a/presto-main/src/main/java/com/facebook/presto/Main.java\n+++ b/presto-main/src/main/java/com/facebook/presto/Main.java\n@@ -24,12 +24,12 @@\n     public static void main(String[] args)\n             throws Exception\n     {\n-        CliBuilder<Runnable> builder = Cli.buildCli(\"presto\", Runnable.class)\n+        CliBuilder<Runnable> builder = Cli.<Runnable>builder(\"presto\")\n                 .withDefaultCommand(Server.class)\n                 .withCommand(Server.class)\n                 .withCommand(Execute.class)\n                 .withCommand(Console.class)\n-                .withCommands(Help.class);\n+                .withCommand(Help.class);\n \n         builder.withGroup(\"convert\")\n                 .withDescription(\"convert file formats\")\n", "projectName": "facebook.presto", "bugLineNum": 27, "bugNodeStartChar": 767, "bugNodeLength": 261, "fixLineNum": 27, "fixNodeStartChar": 767, "fixNodeLength": 260, "sourceBeforeFix": "Cli.buildCli(\"presto\",Runnable.class).withDefaultCommand(Server.class).withCommand(Server.class).withCommand(Execute.class).withCommand(Console.class).withCommands(Help.class)", "sourceAfterFix": "Cli.buildCli(\"presto\",Runnable.class).withDefaultCommand(Server.class).withCommand(Server.class).withCommand(Execute.class).withCommand(Console.class).withCommand(Help.class)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "2017a6ab6bfa3b454ada907d36faed810b8e69b6", "fixCommitParentSHA1": "d9c14802ae7a978b284e4b701c498da3c582c984", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/Main.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/Main.java b/presto-main/src/main/java/com/facebook/presto/Main.java\nindex 21c63f0..3cf8ec6 100644\n--- a/presto-main/src/main/java/com/facebook/presto/Main.java\n+++ b/presto-main/src/main/java/com/facebook/presto/Main.java\n@@ -24,12 +24,12 @@\n     public static void main(String[] args)\n             throws Exception\n     {\n-        CliBuilder<Runnable> builder = Cli.buildCli(\"presto\", Runnable.class)\n+        CliBuilder<Runnable> builder = Cli.<Runnable>builder(\"presto\")\n                 .withDefaultCommand(Server.class)\n                 .withCommand(Server.class)\n                 .withCommand(Execute.class)\n                 .withCommand(Console.class)\n-                .withCommands(Help.class);\n+                .withCommand(Help.class);\n \n         builder.withGroup(\"convert\")\n                 .withDescription(\"convert file formats\")\n", "projectName": "facebook.presto", "bugLineNum": 27, "bugNodeStartChar": 767, "bugNodeLength": 261, "fixLineNum": 27, "fixNodeStartChar": 767, "fixNodeLength": 260, "sourceBeforeFix": "Cli.buildCli(\"presto\",Runnable.class).withDefaultCommand(Server.class).withCommand(Server.class).withCommand(Execute.class).withCommand(Console.class).withCommands(Help.class)", "sourceAfterFix": "Cli.buildCli(\"presto\",Runnable.class).withDefaultCommand(Server.class).withCommand(Server.class).withCommand(Execute.class).withCommand(Console.class).withCommand(Help.class)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "3b0e5ccc430c5ae4187e6139535c32cc17bb2a2b", "fixCommitParentSHA1": "4bcf757f94474ea232667b7f36c38142f3b9273c", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java b/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java\nindex bbc113e..a58e9fa 100644\n--- a/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java\n+++ b/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java\n@@ -185,7 +185,7 @@\n             String splitsSummary = String.format(\"Splits: %,4d total, %,4d pending, %,4d running, %,4d done\",\n                     globalExecutionStats.getSplits(),\n                     max(0, globalExecutionStats.getSplits() - globalExecutionStats.getStartedSplits()),\n-                    max(0, globalExecutionStats.getSplits() - globalExecutionStats.getCompletedSplits()),\n+                    max(0, globalExecutionStats.getStartedSplits() - globalExecutionStats.getCompletedSplits()),\n                     globalExecutionStats.getCompletedSplits());\n             reprintLine(splitsSummary);\n \n@@ -243,7 +243,7 @@\n                     formatDataRate(globalExecutionStats.getOutputDataSize(), elapsedTime, false),\n \n                     max(0, globalExecutionStats.getSplits() - globalExecutionStats.getStartedSplits()),\n-                    max(0, globalExecutionStats.getSplits() - globalExecutionStats.getCompletedSplits()),\n+                    max(0, globalExecutionStats.getStartedSplits() - globalExecutionStats.getCompletedSplits()),\n                     globalExecutionStats.getCompletedSplits());\n             reprintLine(querySummary);\n         }\n@@ -282,7 +282,7 @@\n                 formatDataRate(executionStats.getCompletedDataSize(), elapsedTime, false),\n \n                 max(0, executionStats.getSplits() - executionStats.getStartedSplits()),\n-                max(0, executionStats.getSplits() - executionStats.getCompletedSplits()),\n+                max(0, executionStats.getStartedSplits() - executionStats.getCompletedSplits()),\n                 executionStats.getCompletedSplits());\n         reprintLine(stageSummary);\n \n", "projectName": "facebook.presto", "bugLineNum": 188, "bugNodeStartChar": 7548, "bugNodeLength": 32, "fixLineNum": 188, "fixNodeStartChar": 7548, "fixNodeLength": 39, "sourceBeforeFix": "globalExecutionStats.getSplits()", "sourceAfterFix": "globalExecutionStats.getStartedSplits()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "3b0e5ccc430c5ae4187e6139535c32cc17bb2a2b", "fixCommitParentSHA1": "4bcf757f94474ea232667b7f36c38142f3b9273c", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java b/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java\nindex bbc113e..a58e9fa 100644\n--- a/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java\n+++ b/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java\n@@ -185,7 +185,7 @@\n             String splitsSummary = String.format(\"Splits: %,4d total, %,4d pending, %,4d running, %,4d done\",\n                     globalExecutionStats.getSplits(),\n                     max(0, globalExecutionStats.getSplits() - globalExecutionStats.getStartedSplits()),\n-                    max(0, globalExecutionStats.getSplits() - globalExecutionStats.getCompletedSplits()),\n+                    max(0, globalExecutionStats.getStartedSplits() - globalExecutionStats.getCompletedSplits()),\n                     globalExecutionStats.getCompletedSplits());\n             reprintLine(splitsSummary);\n \n@@ -243,7 +243,7 @@\n                     formatDataRate(globalExecutionStats.getOutputDataSize(), elapsedTime, false),\n \n                     max(0, globalExecutionStats.getSplits() - globalExecutionStats.getStartedSplits()),\n-                    max(0, globalExecutionStats.getSplits() - globalExecutionStats.getCompletedSplits()),\n+                    max(0, globalExecutionStats.getStartedSplits() - globalExecutionStats.getCompletedSplits()),\n                     globalExecutionStats.getCompletedSplits());\n             reprintLine(querySummary);\n         }\n@@ -282,7 +282,7 @@\n                 formatDataRate(executionStats.getCompletedDataSize(), elapsedTime, false),\n \n                 max(0, executionStats.getSplits() - executionStats.getStartedSplits()),\n-                max(0, executionStats.getSplits() - executionStats.getCompletedSplits()),\n+                max(0, executionStats.getStartedSplits() - executionStats.getCompletedSplits()),\n                 executionStats.getCompletedSplits());\n         reprintLine(stageSummary);\n \n", "projectName": "facebook.presto", "bugLineNum": 188, "bugNodeStartChar": 7548, "bugNodeLength": 32, "fixLineNum": 188, "fixNodeStartChar": 7548, "fixNodeLength": 39, "sourceBeforeFix": "globalExecutionStats.getSplits()", "sourceAfterFix": "globalExecutionStats.getStartedSplits()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "3b0e5ccc430c5ae4187e6139535c32cc17bb2a2b", "fixCommitParentSHA1": "4bcf757f94474ea232667b7f36c38142f3b9273c", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java b/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java\nindex bbc113e..a58e9fa 100644\n--- a/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java\n+++ b/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java\n@@ -185,7 +185,7 @@\n             String splitsSummary = String.format(\"Splits: %,4d total, %,4d pending, %,4d running, %,4d done\",\n                     globalExecutionStats.getSplits(),\n                     max(0, globalExecutionStats.getSplits() - globalExecutionStats.getStartedSplits()),\n-                    max(0, globalExecutionStats.getSplits() - globalExecutionStats.getCompletedSplits()),\n+                    max(0, globalExecutionStats.getStartedSplits() - globalExecutionStats.getCompletedSplits()),\n                     globalExecutionStats.getCompletedSplits());\n             reprintLine(splitsSummary);\n \n@@ -243,7 +243,7 @@\n                     formatDataRate(globalExecutionStats.getOutputDataSize(), elapsedTime, false),\n \n                     max(0, globalExecutionStats.getSplits() - globalExecutionStats.getStartedSplits()),\n-                    max(0, globalExecutionStats.getSplits() - globalExecutionStats.getCompletedSplits()),\n+                    max(0, globalExecutionStats.getStartedSplits() - globalExecutionStats.getCompletedSplits()),\n                     globalExecutionStats.getCompletedSplits());\n             reprintLine(querySummary);\n         }\n@@ -282,7 +282,7 @@\n                 formatDataRate(executionStats.getCompletedDataSize(), elapsedTime, false),\n \n                 max(0, executionStats.getSplits() - executionStats.getStartedSplits()),\n-                max(0, executionStats.getSplits() - executionStats.getCompletedSplits()),\n+                max(0, executionStats.getStartedSplits() - executionStats.getCompletedSplits()),\n                 executionStats.getCompletedSplits());\n         reprintLine(stageSummary);\n \n", "projectName": "facebook.presto", "bugLineNum": 246, "bugNodeStartChar": 10601, "bugNodeLength": 32, "fixLineNum": 246, "fixNodeStartChar": 10601, "fixNodeLength": 39, "sourceBeforeFix": "globalExecutionStats.getSplits()", "sourceAfterFix": "globalExecutionStats.getStartedSplits()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "3b0e5ccc430c5ae4187e6139535c32cc17bb2a2b", "fixCommitParentSHA1": "4bcf757f94474ea232667b7f36c38142f3b9273c", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java b/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java\nindex bbc113e..a58e9fa 100644\n--- a/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java\n+++ b/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java\n@@ -185,7 +185,7 @@\n             String splitsSummary = String.format(\"Splits: %,4d total, %,4d pending, %,4d running, %,4d done\",\n                     globalExecutionStats.getSplits(),\n                     max(0, globalExecutionStats.getSplits() - globalExecutionStats.getStartedSplits()),\n-                    max(0, globalExecutionStats.getSplits() - globalExecutionStats.getCompletedSplits()),\n+                    max(0, globalExecutionStats.getStartedSplits() - globalExecutionStats.getCompletedSplits()),\n                     globalExecutionStats.getCompletedSplits());\n             reprintLine(splitsSummary);\n \n@@ -243,7 +243,7 @@\n                     formatDataRate(globalExecutionStats.getOutputDataSize(), elapsedTime, false),\n \n                     max(0, globalExecutionStats.getSplits() - globalExecutionStats.getStartedSplits()),\n-                    max(0, globalExecutionStats.getSplits() - globalExecutionStats.getCompletedSplits()),\n+                    max(0, globalExecutionStats.getStartedSplits() - globalExecutionStats.getCompletedSplits()),\n                     globalExecutionStats.getCompletedSplits());\n             reprintLine(querySummary);\n         }\n@@ -282,7 +282,7 @@\n                 formatDataRate(executionStats.getCompletedDataSize(), elapsedTime, false),\n \n                 max(0, executionStats.getSplits() - executionStats.getStartedSplits()),\n-                max(0, executionStats.getSplits() - executionStats.getCompletedSplits()),\n+                max(0, executionStats.getStartedSplits() - executionStats.getCompletedSplits()),\n                 executionStats.getCompletedSplits());\n         reprintLine(stageSummary);\n \n", "projectName": "facebook.presto", "bugLineNum": 246, "bugNodeStartChar": 10601, "bugNodeLength": 32, "fixLineNum": 246, "fixNodeStartChar": 10601, "fixNodeLength": 39, "sourceBeforeFix": "globalExecutionStats.getSplits()", "sourceAfterFix": "globalExecutionStats.getStartedSplits()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "3b0e5ccc430c5ae4187e6139535c32cc17bb2a2b", "fixCommitParentSHA1": "4bcf757f94474ea232667b7f36c38142f3b9273c", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java b/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java\nindex bbc113e..a58e9fa 100644\n--- a/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java\n+++ b/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java\n@@ -185,7 +185,7 @@\n             String splitsSummary = String.format(\"Splits: %,4d total, %,4d pending, %,4d running, %,4d done\",\n                     globalExecutionStats.getSplits(),\n                     max(0, globalExecutionStats.getSplits() - globalExecutionStats.getStartedSplits()),\n-                    max(0, globalExecutionStats.getSplits() - globalExecutionStats.getCompletedSplits()),\n+                    max(0, globalExecutionStats.getStartedSplits() - globalExecutionStats.getCompletedSplits()),\n                     globalExecutionStats.getCompletedSplits());\n             reprintLine(splitsSummary);\n \n@@ -243,7 +243,7 @@\n                     formatDataRate(globalExecutionStats.getOutputDataSize(), elapsedTime, false),\n \n                     max(0, globalExecutionStats.getSplits() - globalExecutionStats.getStartedSplits()),\n-                    max(0, globalExecutionStats.getSplits() - globalExecutionStats.getCompletedSplits()),\n+                    max(0, globalExecutionStats.getStartedSplits() - globalExecutionStats.getCompletedSplits()),\n                     globalExecutionStats.getCompletedSplits());\n             reprintLine(querySummary);\n         }\n@@ -282,7 +282,7 @@\n                 formatDataRate(executionStats.getCompletedDataSize(), elapsedTime, false),\n \n                 max(0, executionStats.getSplits() - executionStats.getStartedSplits()),\n-                max(0, executionStats.getSplits() - executionStats.getCompletedSplits()),\n+                max(0, executionStats.getStartedSplits() - executionStats.getCompletedSplits()),\n                 executionStats.getCompletedSplits());\n         reprintLine(stageSummary);\n \n", "projectName": "facebook.presto", "bugLineNum": 285, "bugNodeStartChar": 12393, "bugNodeLength": 26, "fixLineNum": 285, "fixNodeStartChar": 12393, "fixNodeLength": 33, "sourceBeforeFix": "executionStats.getSplits()", "sourceAfterFix": "executionStats.getStartedSplits()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "3b0e5ccc430c5ae4187e6139535c32cc17bb2a2b", "fixCommitParentSHA1": "4bcf757f94474ea232667b7f36c38142f3b9273c", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java b/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java\nindex bbc113e..a58e9fa 100644\n--- a/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java\n+++ b/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java\n@@ -185,7 +185,7 @@\n             String splitsSummary = String.format(\"Splits: %,4d total, %,4d pending, %,4d running, %,4d done\",\n                     globalExecutionStats.getSplits(),\n                     max(0, globalExecutionStats.getSplits() - globalExecutionStats.getStartedSplits()),\n-                    max(0, globalExecutionStats.getSplits() - globalExecutionStats.getCompletedSplits()),\n+                    max(0, globalExecutionStats.getStartedSplits() - globalExecutionStats.getCompletedSplits()),\n                     globalExecutionStats.getCompletedSplits());\n             reprintLine(splitsSummary);\n \n@@ -243,7 +243,7 @@\n                     formatDataRate(globalExecutionStats.getOutputDataSize(), elapsedTime, false),\n \n                     max(0, globalExecutionStats.getSplits() - globalExecutionStats.getStartedSplits()),\n-                    max(0, globalExecutionStats.getSplits() - globalExecutionStats.getCompletedSplits()),\n+                    max(0, globalExecutionStats.getStartedSplits() - globalExecutionStats.getCompletedSplits()),\n                     globalExecutionStats.getCompletedSplits());\n             reprintLine(querySummary);\n         }\n@@ -282,7 +282,7 @@\n                 formatDataRate(executionStats.getCompletedDataSize(), elapsedTime, false),\n \n                 max(0, executionStats.getSplits() - executionStats.getStartedSplits()),\n-                max(0, executionStats.getSplits() - executionStats.getCompletedSplits()),\n+                max(0, executionStats.getStartedSplits() - executionStats.getCompletedSplits()),\n                 executionStats.getCompletedSplits());\n         reprintLine(stageSummary);\n \n", "projectName": "facebook.presto", "bugLineNum": 285, "bugNodeStartChar": 12393, "bugNodeLength": 26, "fixLineNum": 285, "fixNodeStartChar": 12393, "fixNodeLength": 33, "sourceBeforeFix": "executionStats.getSplits()", "sourceAfterFix": "executionStats.getStartedSplits()"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "80496087c650e01892096294ee33b6342ad6f1ef", "fixCommitParentSHA1": "7e1298162af789de93a5dede52e4be5ad5e73af5", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/operator/SourceHashProviderFactory.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/SourceHashProviderFactory.java b/presto-main/src/main/java/com/facebook/presto/operator/SourceHashProviderFactory.java\nindex b9d438c..621b4e0 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/SourceHashProviderFactory.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/SourceHashProviderFactory.java\n@@ -12,7 +12,7 @@\n {\n     private final IdentityHashMap<JoinNode, SourceHashProvider> joinHashes = new IdentityHashMap<>();\n \n-    public SourceHashProvider getSourceHashProvider(JoinNode node, ExecutionPlanner executionPlanner)\n+    public synchronized SourceHashProvider getSourceHashProvider(JoinNode node, ExecutionPlanner executionPlanner)\n     {\n         SourceHashProvider hashProvider = joinHashes.get(node);\n         if (hashProvider == null) {\n", "projectName": "facebook.presto", "bugLineNum": 15, "bugNodeStartChar": 393, "bugNodeLength": 453, "fixLineNum": 15, "fixNodeStartChar": 393, "fixNodeLength": 466, "sourceBeforeFix": "1", "sourceAfterFix": "33"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "194a3d4413de06e4f57f2c2bdb001fcd1fd4385b", "fixCommitParentSHA1": "496032b131566d37ae3d28c7de77cf69cb73276d", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/cli/Execute.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/cli/Execute.java b/presto-main/src/main/java/com/facebook/presto/cli/Execute.java\nindex fdda436..d4bb62a 100644\n--- a/presto-main/src/main/java/com/facebook/presto/cli/Execute.java\n+++ b/presto-main/src/main/java/com/facebook/presto/cli/Execute.java\n@@ -245,7 +245,7 @@\n     private String formatDataRate(long inputDataSize, Duration duration)\n     {\n         double rate = inputDataSize / duration.convertTo(TimeUnit.SECONDS);\n-        if (Double.isNaN(rate)) {\n+        if (Double.isNaN(rate) || Double.isInfinite(rate)) {\n             return \"0Bps\";\n         }\n         DataSize dataSize = new DataSize(rate, Unit.BYTE).convertToMostSuccinctDataSize();\n", "projectName": "facebook.presto", "bugLineNum": 248, "bugNodeStartChar": 9522, "bugNodeLength": 18, "fixLineNum": 248, "fixNodeStartChar": 9522, "fixNodeLength": 45, "sourceBeforeFix": "Double.isNaN(rate)", "sourceAfterFix": "Double.isNaN(rate) || Double.isInfinite(rate)"}, {"bugType": "OVERLOAD_METHOD_DELETED_ARGS", "fixCommitSHA1": "ece9610959ca56ac6472c4eb8dd1d053c7304b80", "fixCommitParentSHA1": "a5301ef51c9e9d19d8f52ca37a73fbdeabd996fb", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/server/QueryState.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/server/QueryState.java b/presto-main/src/main/java/com/facebook/presto/server/QueryState.java\nindex 89de18c..40d4e8e 100644\n--- a/presto-main/src/main/java/com/facebook/presto/server/QueryState.java\n+++ b/presto-main/src/main/java/com/facebook/presto/server/QueryState.java\n@@ -127,12 +127,12 @@\n \n     public int getStartedSplits()\n     {\n-        return Ints.min(startedSplits.get(), completedSplits.get(), splits);\n+        return Ints.min(startedSplits.get(), splits);\n     }\n \n     public int getCompletedSplits()\n     {\n-        return Ints.min(completedSplits.get(), splits);\n+        return Ints.min(completedSplits.get(), startedSplits.get(), splits);\n     }\n \n     public int getBufferedPageCount()\n", "projectName": "facebook.presto", "bugLineNum": 130, "bugNodeStartChar": 3562, "bugNodeLength": 60, "fixLineNum": 130, "fixNodeStartChar": 3562, "fixNodeLength": 37, "sourceBeforeFix": "Ints.min(startedSplits.get(),completedSplits.get(),splits)", "sourceAfterFix": "Ints.min(startedSplits.get(),splits)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "ece9610959ca56ac6472c4eb8dd1d053c7304b80", "fixCommitParentSHA1": "a5301ef51c9e9d19d8f52ca37a73fbdeabd996fb", "bugFilePath": "presto-main/src/main/java/com/facebook/presto/server/QueryState.java", "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/server/QueryState.java b/presto-main/src/main/java/com/facebook/presto/server/QueryState.java\nindex 89de18c..40d4e8e 100644\n--- a/presto-main/src/main/java/com/facebook/presto/server/QueryState.java\n+++ b/presto-main/src/main/java/com/facebook/presto/server/QueryState.java\n@@ -127,12 +127,12 @@\n \n     public int getStartedSplits()\n     {\n-        return Ints.min(startedSplits.get(), completedSplits.get(), splits);\n+        return Ints.min(startedSplits.get(), splits);\n     }\n \n     public int getCompletedSplits()\n     {\n-        return Ints.min(completedSplits.get(), splits);\n+        return Ints.min(completedSplits.get(), startedSplits.get(), splits);\n     }\n \n     public int getBufferedPageCount()\n", "projectName": "facebook.presto", "bugLineNum": 135, "bugNodeStartChar": 3688, "bugNodeLength": 39, "fixLineNum": 135, "fixNodeStartChar": 3688, "fixNodeLength": 60, "sourceBeforeFix": "Ints.min(completedSplits.get(),splits)", "sourceAfterFix": "Ints.min(completedSplits.get(),startedSplits.get(),splits)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "ccd35ff388a3e7c5001779f44d74f57d8b1261c5", "fixCommitParentSHA1": "63e702a83fad67102e0107bd74fd1fd7c5e0b0ea", "bugFilePath": "src/test/java/com/facebook/presto/TestQueries.java", "fixPatch": "diff --git a/src/test/java/com/facebook/presto/TestQueries.java b/src/test/java/com/facebook/presto/TestQueries.java\nindex f353f01..40b448d 100644\n--- a/src/test/java/com/facebook/presto/TestQueries.java\n+++ b/src/test/java/com/facebook/presto/TestQueries.java\n@@ -241,7 +241,7 @@\n     @Test\n     public void testCountWithAndPredicate()\n     {\n-        List<Tuple> expected = computeExpected(\"SELECT COUNT(*) FROM lineitem WHERE tax < discount AND tax > 0.01 AND discount < 10.0\", FIXED_INT_64);\n+        List<Tuple> expected = computeExpected(\"SELECT COUNT(*) FROM lineitem WHERE tax < discount AND tax > 0.01 AND discount < 0.05\", FIXED_INT_64);\n \n         TupleStream discount = createTupleStream(lineitemData, Column.LINEITEM_DISCOUNT, DOUBLE);\n         TupleStream filteredDiscount = new ApplyPredicateOperator(discount, new Predicate<Cursor>()\n@@ -249,7 +249,7 @@\n             @Override\n             public boolean apply(Cursor input)\n             {\n-                return input.getDouble(0) < 10.0;\n+                return input.getDouble(0) < 0.05;\n             }\n         });\n \n", "projectName": "facebook.presto", "bugLineNum": 252, "bugNodeStartChar": 9838, "bugNodeLength": 25, "fixLineNum": 252, "fixNodeStartChar": 9838, "fixNodeLength": 25, "sourceBeforeFix": "input.getDouble(0) < 10.0", "sourceAfterFix": "input.getDouble(0) < 0.05"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "7b2e1e1a5d17428d853aa964971695bc63ccd5b8", "fixCommitParentSHA1": "2c33b666290d937c64f820e9a46b20d2f15f4053", "bugFilePath": "src/main/java/com/facebook/presto/operators/GroupByBlockStream.java", "fixPatch": "diff --git a/src/main/java/com/facebook/presto/operators/GroupByBlockStream.java b/src/main/java/com/facebook/presto/operators/GroupByBlockStream.java\nindex aa216aa..ff344d4 100644\n--- a/src/main/java/com/facebook/presto/operators/GroupByBlockStream.java\n+++ b/src/main/java/com/facebook/presto/operators/GroupByBlockStream.java\n@@ -67,7 +67,7 @@\n                 }\n \n                 // range does not include the current element\n-                Range range = Range.create(startPosition, cursor.getPosition()); // todo: martin, change me to getCurrentValueEndPosition() when you add it\n+                Range range = Range.create(startPosition, cursor.getCurrentValueEndPosition());\n                 return new RunLengthEncodedBlock(key, range);\n             }\n         };\n", "projectName": "facebook.presto", "bugLineNum": 70, "bugNodeStartChar": 2091, "bugNodeLength": 20, "fixLineNum": 70, "fixNodeStartChar": 2091, "fixNodeLength": 35, "sourceBeforeFix": "cursor.getPosition()", "sourceAfterFix": "cursor.getCurrentValueEndPosition()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "7b2e1e1a5d17428d853aa964971695bc63ccd5b8", "fixCommitParentSHA1": "2c33b666290d937c64f820e9a46b20d2f15f4053", "bugFilePath": "src/main/java/com/facebook/presto/operators/GroupByBlockStream.java", "fixPatch": "diff --git a/src/main/java/com/facebook/presto/operators/GroupByBlockStream.java b/src/main/java/com/facebook/presto/operators/GroupByBlockStream.java\nindex aa216aa..ff344d4 100644\n--- a/src/main/java/com/facebook/presto/operators/GroupByBlockStream.java\n+++ b/src/main/java/com/facebook/presto/operators/GroupByBlockStream.java\n@@ -67,7 +67,7 @@\n                 }\n \n                 // range does not include the current element\n-                Range range = Range.create(startPosition, cursor.getPosition()); // todo: martin, change me to getCurrentValueEndPosition() when you add it\n+                Range range = Range.create(startPosition, cursor.getCurrentValueEndPosition());\n                 return new RunLengthEncodedBlock(key, range);\n             }\n         };\n", "projectName": "facebook.presto", "bugLineNum": 70, "bugNodeStartChar": 2091, "bugNodeLength": 20, "fixLineNum": 70, "fixNodeStartChar": 2091, "fixNodeLength": 35, "sourceBeforeFix": "cursor.getPosition()", "sourceAfterFix": "cursor.getCurrentValueEndPosition()"}]