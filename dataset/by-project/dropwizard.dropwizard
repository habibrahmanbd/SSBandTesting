[
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "caf244292502931e38eb0c0be40f4a5f61e8aa0e",
    "fixCommitParentSHA1": "ed5c92ee06d60cba319841f43573872ec6583b52",
    "bugFilePath": "dropwizard-jdbi/src/test/java/io/dropwizard/jdbi/timestamps/DatabaseInTimeZone.java",
    "fixPatch": "diff --git a/dropwizard-jdbi/src/test/java/io/dropwizard/jdbi/timestamps/DatabaseInTimeZone.java b/dropwizard-jdbi/src/test/java/io/dropwizard/jdbi/timestamps/DatabaseInTimeZone.java\nindex 9dfef98..9d1a214 100644\n--- a/dropwizard-jdbi/src/test/java/io/dropwizard/jdbi/timestamps/DatabaseInTimeZone.java\n+++ b/dropwizard-jdbi/src/test/java/io/dropwizard/jdbi/timestamps/DatabaseInTimeZone.java\n@@ -29,7 +29,7 @@\n         String vmArguments = \"-Duser.timezone=\" + timeZone.getID();\n \n         ProcessBuilder pb = new ProcessBuilder(java, vmArguments, \"-cp\", h2jar.getAbsolutePath(), Server.class.getName(),\n-                                               \"-tcp\", \"-baseDir\", tempDir.resolve(\"database-in-time-zone\").toString());\n+                                               \"-tcp\", \"-ifNotExists\", \"-baseDir\", tempDir.resolve(\"database-in-time-zone\").toString());\n         process = pb.start();\n     }\n \n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 31,
    "bugNodeStartChar": 907,
    "bugNodeLength": 213,
    "fixLineNum": 31,
    "fixNodeStartChar": 907,
    "fixNodeLength": 229,
    "sourceBeforeFix": "new ProcessBuilder(java,vmArguments,\"-cp\",h2jar.getAbsolutePath(),Server.class.getName(),\"-tcp\",\"-baseDir\",tempDir.resolve(\"database-in-time-zone\").toString())",
    "sourceAfterFix": "new ProcessBuilder(java,vmArguments,\"-cp\",h2jar.getAbsolutePath(),Server.class.getName(),\"-tcp\",\"-ifNotExists\",\"-baseDir\",tempDir.resolve(\"database-in-time-zone\").toString())"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "005636f798fcee1b3fed9775c77f7b07f9819e0f",
    "fixCommitParentSHA1": "ad238bf60519177d0a3c02c653214c8bae57237f",
    "bugFilePath": "dropwizard-logging/src/test/java/io/dropwizard/logging/ThrottlingAppenderTest.java",
    "fixPatch": "diff --git a/dropwizard-logging/src/test/java/io/dropwizard/logging/ThrottlingAppenderTest.java b/dropwizard-logging/src/test/java/io/dropwizard/logging/ThrottlingAppenderTest.java\nindex 83b5fa3..bd5be4e 100644\n--- a/dropwizard-logging/src/test/java/io/dropwizard/logging/ThrottlingAppenderTest.java\n+++ b/dropwizard-logging/src/test/java/io/dropwizard/logging/ThrottlingAppenderTest.java\n@@ -115,7 +115,7 @@\n         assertThat(throttledLines(Duration.milliseconds(100)))\n             .doesNotHaveDuplicates()\n             .haveAtLeast(9, containsApplicationLog)\n-            .haveAtMost(12, containsApplicationLog);\n+            .haveAtMost(13, containsApplicationLog);\n     }\n \n     @Test\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 115,
    "bugNodeStartChar": 4724,
    "bugNodeLength": 195,
    "fixLineNum": 115,
    "fixNodeStartChar": 4724,
    "fixNodeLength": 195,
    "sourceBeforeFix": "assertThat(throttledLines(Duration.milliseconds(100))).doesNotHaveDuplicates().haveAtLeast(9,containsApplicationLog).haveAtMost(12,containsApplicationLog)",
    "sourceAfterFix": "assertThat(throttledLines(Duration.milliseconds(100))).doesNotHaveDuplicates().haveAtLeast(9,containsApplicationLog).haveAtMost(13,containsApplicationLog)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "f80cd0840159840d35b445ea247e3fbf356eae88",
    "fixCommitParentSHA1": "eb373e137bde2438ca3aca6ee5ce45ca39649795",
    "bugFilePath": "dropwizard-jetty/src/main/java/io/dropwizard/jetty/HttpConnectorFactory.java",
    "fixPatch": "diff --git a/dropwizard-jetty/src/main/java/io/dropwizard/jetty/HttpConnectorFactory.java b/dropwizard-jetty/src/main/java/io/dropwizard/jetty/HttpConnectorFactory.java\nindex db9fb39..5389265 100644\n--- a/dropwizard-jetty/src/main/java/io/dropwizard/jetty/HttpConnectorFactory.java\n+++ b/dropwizard-jetty/src/main/java/io/dropwizard/jetty/HttpConnectorFactory.java\n@@ -555,7 +555,7 @@\n \n         connector.setReuseAddress(reuseAddress);\n         if (soLingerTime != null) {\n-            connector.setSoLingerTime((int) soLingerTime.toSeconds());\n+            connector.setSoLingerTime((int) soLingerTime.toMilliseconds());\n         }\n         connector.setIdleTimeout(idleTimeout.toMilliseconds());\n         connector.setName(name);\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 558,
    "bugNodeStartChar": 18081,
    "bugNodeLength": 24,
    "fixLineNum": 558,
    "fixNodeStartChar": 18081,
    "fixNodeLength": 29,
    "sourceBeforeFix": "soLingerTime.toSeconds()",
    "sourceAfterFix": "soLingerTime.toMilliseconds()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "f80cd0840159840d35b445ea247e3fbf356eae88",
    "fixCommitParentSHA1": "eb373e137bde2438ca3aca6ee5ce45ca39649795",
    "bugFilePath": "dropwizard-jetty/src/main/java/io/dropwizard/jetty/HttpConnectorFactory.java",
    "fixPatch": "diff --git a/dropwizard-jetty/src/main/java/io/dropwizard/jetty/HttpConnectorFactory.java b/dropwizard-jetty/src/main/java/io/dropwizard/jetty/HttpConnectorFactory.java\nindex db9fb39..5389265 100644\n--- a/dropwizard-jetty/src/main/java/io/dropwizard/jetty/HttpConnectorFactory.java\n+++ b/dropwizard-jetty/src/main/java/io/dropwizard/jetty/HttpConnectorFactory.java\n@@ -555,7 +555,7 @@\n \n         connector.setReuseAddress(reuseAddress);\n         if (soLingerTime != null) {\n-            connector.setSoLingerTime((int) soLingerTime.toSeconds());\n+            connector.setSoLingerTime((int) soLingerTime.toMilliseconds());\n         }\n         connector.setIdleTimeout(idleTimeout.toMilliseconds());\n         connector.setName(name);\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 558,
    "bugNodeStartChar": 18081,
    "bugNodeLength": 24,
    "fixLineNum": 558,
    "fixNodeStartChar": 18081,
    "fixNodeLength": 29,
    "sourceBeforeFix": "soLingerTime.toSeconds()",
    "sourceAfterFix": "soLingerTime.toMilliseconds()"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "f80cd0840159840d35b445ea247e3fbf356eae88",
    "fixCommitParentSHA1": "eb373e137bde2438ca3aca6ee5ce45ca39649795",
    "bugFilePath": "dropwizard-jetty/src/test/java/io/dropwizard/jetty/HttpConnectorFactoryTest.java",
    "fixPatch": "diff --git a/dropwizard-jetty/src/test/java/io/dropwizard/jetty/HttpConnectorFactoryTest.java b/dropwizard-jetty/src/test/java/io/dropwizard/jetty/HttpConnectorFactoryTest.java\nindex 2097d40..1f1ee78 100644\n--- a/dropwizard-jetty/src/test/java/io/dropwizard/jetty/HttpConnectorFactoryTest.java\n+++ b/dropwizard-jetty/src/test/java/io/dropwizard/jetty/HttpConnectorFactoryTest.java\n@@ -130,7 +130,7 @@\n         assertThat(connector.getHost()).isEqualTo(\"127.0.0.1\");\n         assertThat(connector.getAcceptQueueSize()).isEqualTo(1024);\n         assertThat(connector.getReuseAddress()).isTrue();\n-        assertThat(connector.getSoLingerTime()).isEqualTo(30);\n+        assertThat(connector.getSoLingerTime()).isEqualTo(30000);\n         assertThat(connector.getIdleTimeout()).isEqualTo(30000);\n         assertThat(connector.getName()).isEqualTo(\"test-http-connector\");\n \n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 133,
    "bugNodeStartChar": 6589,
    "bugNodeLength": 53,
    "fixLineNum": 133,
    "fixNodeStartChar": 6589,
    "fixNodeLength": 56,
    "sourceBeforeFix": "assertThat(connector.getSoLingerTime()).isEqualTo(30)",
    "sourceAfterFix": "assertThat(connector.getSoLingerTime()).isEqualTo(30000)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "68cd97ff6b0a506c2a2688c966c2a55870d6f466",
    "fixCommitParentSHA1": "d2fbc9d9255a0b83492db887d8c94261ed308c8c",
    "bugFilePath": "dropwizard-http2/src/main/java/io/dropwizard/http2/Http2CConnectorFactory.java",
    "fixPatch": "diff --git a/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2CConnectorFactory.java b/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2CConnectorFactory.java\nindex d6b30c2..5c32758 100644\n--- a/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2CConnectorFactory.java\n+++ b/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2CConnectorFactory.java\n@@ -88,7 +88,7 @@\n         final HttpConnectionFactory http11 = buildHttpConnectionFactory(httpConfig);\n         final HTTP2ServerConnectionFactory http2c = new HTTP2CServerConnectionFactory(httpConfig);\n         http2c.setMaxConcurrentStreams(maxConcurrentStreams);\n-        http2c.setInitialStreamSendWindow(initialStreamSendWindow);\n+        http2c.setInitialStreamRecvWindow(initialStreamSendWindow);\n \n         // The server connector should use HTTP/1.1 by default. It affords to the server to stay compatible\n         // with old clients. New clients which want to use HTTP/2, however, will make an HTTP/1.1 OPTIONS\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 91,
    "bugNodeStartChar": 3158,
    "bugNodeLength": 58,
    "fixLineNum": 91,
    "fixNodeStartChar": 3158,
    "fixNodeLength": 58,
    "sourceBeforeFix": "http2c.setInitialStreamSendWindow(initialStreamSendWindow)",
    "sourceAfterFix": "http2c.setInitialStreamRecvWindow(initialStreamSendWindow)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "68cd97ff6b0a506c2a2688c966c2a55870d6f466",
    "fixCommitParentSHA1": "d2fbc9d9255a0b83492db887d8c94261ed308c8c",
    "bugFilePath": "dropwizard-http2/src/main/java/io/dropwizard/http2/Http2CConnectorFactory.java",
    "fixPatch": "diff --git a/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2CConnectorFactory.java b/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2CConnectorFactory.java\nindex d6b30c2..5c32758 100644\n--- a/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2CConnectorFactory.java\n+++ b/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2CConnectorFactory.java\n@@ -88,7 +88,7 @@\n         final HttpConnectionFactory http11 = buildHttpConnectionFactory(httpConfig);\n         final HTTP2ServerConnectionFactory http2c = new HTTP2CServerConnectionFactory(httpConfig);\n         http2c.setMaxConcurrentStreams(maxConcurrentStreams);\n-        http2c.setInitialStreamSendWindow(initialStreamSendWindow);\n+        http2c.setInitialStreamRecvWindow(initialStreamSendWindow);\n \n         // The server connector should use HTTP/1.1 by default. It affords to the server to stay compatible\n         // with old clients. New clients which want to use HTTP/2, however, will make an HTTP/1.1 OPTIONS\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 91,
    "bugNodeStartChar": 3158,
    "bugNodeLength": 58,
    "fixLineNum": 91,
    "fixNodeStartChar": 3158,
    "fixNodeLength": 58,
    "sourceBeforeFix": "http2c.setInitialStreamSendWindow(initialStreamSendWindow)",
    "sourceAfterFix": "http2c.setInitialStreamRecvWindow(initialStreamSendWindow)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "68cd97ff6b0a506c2a2688c966c2a55870d6f466",
    "fixCommitParentSHA1": "d2fbc9d9255a0b83492db887d8c94261ed308c8c",
    "bugFilePath": "dropwizard-http2/src/main/java/io/dropwizard/http2/Http2ConnectorFactory.java",
    "fixPatch": "diff --git a/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2ConnectorFactory.java b/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2ConnectorFactory.java\nindex cd0d495..4f70119 100644\n--- a/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2ConnectorFactory.java\n+++ b/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2ConnectorFactory.java\n@@ -100,7 +100,7 @@\n         final HttpConnectionFactory http1 = buildHttpConnectionFactory(httpConfig);\n         final HTTP2ServerConnectionFactory http2 = new HTTP2ServerConnectionFactory(httpConfig);\n         http2.setMaxConcurrentStreams(maxConcurrentStreams);\n-        http2.setInitialStreamSendWindow(initialStreamSendWindow);\n+        http2.setInitialStreamRecvWindow(initialStreamSendWindow);\n \n         final NegotiatingServerConnectionFactory alpn = new ALPNServerConnectionFactory(H2, H2_17);\n         alpn.setDefaultProtocol(HTTP_1_1); // Speak HTTP 1.1 over TLS if negotiation fails\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 103,
    "bugNodeStartChar": 3603,
    "bugNodeLength": 57,
    "fixLineNum": 103,
    "fixNodeStartChar": 3603,
    "fixNodeLength": 57,
    "sourceBeforeFix": "http2.setInitialStreamSendWindow(initialStreamSendWindow)",
    "sourceAfterFix": "http2.setInitialStreamRecvWindow(initialStreamSendWindow)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "68cd97ff6b0a506c2a2688c966c2a55870d6f466",
    "fixCommitParentSHA1": "d2fbc9d9255a0b83492db887d8c94261ed308c8c",
    "bugFilePath": "dropwizard-http2/src/main/java/io/dropwizard/http2/Http2ConnectorFactory.java",
    "fixPatch": "diff --git a/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2ConnectorFactory.java b/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2ConnectorFactory.java\nindex cd0d495..4f70119 100644\n--- a/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2ConnectorFactory.java\n+++ b/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2ConnectorFactory.java\n@@ -100,7 +100,7 @@\n         final HttpConnectionFactory http1 = buildHttpConnectionFactory(httpConfig);\n         final HTTP2ServerConnectionFactory http2 = new HTTP2ServerConnectionFactory(httpConfig);\n         http2.setMaxConcurrentStreams(maxConcurrentStreams);\n-        http2.setInitialStreamSendWindow(initialStreamSendWindow);\n+        http2.setInitialStreamRecvWindow(initialStreamSendWindow);\n \n         final NegotiatingServerConnectionFactory alpn = new ALPNServerConnectionFactory(H2, H2_17);\n         alpn.setDefaultProtocol(HTTP_1_1); // Speak HTTP 1.1 over TLS if negotiation fails\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 103,
    "bugNodeStartChar": 3603,
    "bugNodeLength": 57,
    "fixLineNum": 103,
    "fixNodeStartChar": 3603,
    "fixNodeLength": 57,
    "sourceBeforeFix": "http2.setInitialStreamSendWindow(initialStreamSendWindow)",
    "sourceAfterFix": "http2.setInitialStreamRecvWindow(initialStreamSendWindow)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "bbdd2fa3a4265b88096ab6f85bcfb1df7fc037a3",
    "fixCommitParentSHA1": "d2fbc9d9255a0b83492db887d8c94261ed308c8c",
    "bugFilePath": "dropwizard-http2/src/main/java/io/dropwizard/http2/Http2CConnectorFactory.java",
    "fixPatch": "diff --git a/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2CConnectorFactory.java b/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2CConnectorFactory.java\nindex d6b30c2..5c32758 100644\n--- a/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2CConnectorFactory.java\n+++ b/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2CConnectorFactory.java\n@@ -88,7 +88,7 @@\n         final HttpConnectionFactory http11 = buildHttpConnectionFactory(httpConfig);\n         final HTTP2ServerConnectionFactory http2c = new HTTP2CServerConnectionFactory(httpConfig);\n         http2c.setMaxConcurrentStreams(maxConcurrentStreams);\n-        http2c.setInitialStreamSendWindow(initialStreamSendWindow);\n+        http2c.setInitialStreamRecvWindow(initialStreamSendWindow);\n \n         // The server connector should use HTTP/1.1 by default. It affords to the server to stay compatible\n         // with old clients. New clients which want to use HTTP/2, however, will make an HTTP/1.1 OPTIONS\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 91,
    "bugNodeStartChar": 3158,
    "bugNodeLength": 58,
    "fixLineNum": 91,
    "fixNodeStartChar": 3158,
    "fixNodeLength": 58,
    "sourceBeforeFix": "http2c.setInitialStreamSendWindow(initialStreamSendWindow)",
    "sourceAfterFix": "http2c.setInitialStreamRecvWindow(initialStreamSendWindow)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "bbdd2fa3a4265b88096ab6f85bcfb1df7fc037a3",
    "fixCommitParentSHA1": "d2fbc9d9255a0b83492db887d8c94261ed308c8c",
    "bugFilePath": "dropwizard-http2/src/main/java/io/dropwizard/http2/Http2CConnectorFactory.java",
    "fixPatch": "diff --git a/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2CConnectorFactory.java b/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2CConnectorFactory.java\nindex d6b30c2..5c32758 100644\n--- a/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2CConnectorFactory.java\n+++ b/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2CConnectorFactory.java\n@@ -88,7 +88,7 @@\n         final HttpConnectionFactory http11 = buildHttpConnectionFactory(httpConfig);\n         final HTTP2ServerConnectionFactory http2c = new HTTP2CServerConnectionFactory(httpConfig);\n         http2c.setMaxConcurrentStreams(maxConcurrentStreams);\n-        http2c.setInitialStreamSendWindow(initialStreamSendWindow);\n+        http2c.setInitialStreamRecvWindow(initialStreamSendWindow);\n \n         // The server connector should use HTTP/1.1 by default. It affords to the server to stay compatible\n         // with old clients. New clients which want to use HTTP/2, however, will make an HTTP/1.1 OPTIONS\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 91,
    "bugNodeStartChar": 3158,
    "bugNodeLength": 58,
    "fixLineNum": 91,
    "fixNodeStartChar": 3158,
    "fixNodeLength": 58,
    "sourceBeforeFix": "http2c.setInitialStreamSendWindow(initialStreamSendWindow)",
    "sourceAfterFix": "http2c.setInitialStreamRecvWindow(initialStreamSendWindow)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "bbdd2fa3a4265b88096ab6f85bcfb1df7fc037a3",
    "fixCommitParentSHA1": "d2fbc9d9255a0b83492db887d8c94261ed308c8c",
    "bugFilePath": "dropwizard-http2/src/main/java/io/dropwizard/http2/Http2ConnectorFactory.java",
    "fixPatch": "diff --git a/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2ConnectorFactory.java b/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2ConnectorFactory.java\nindex cd0d495..4f70119 100644\n--- a/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2ConnectorFactory.java\n+++ b/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2ConnectorFactory.java\n@@ -100,7 +100,7 @@\n         final HttpConnectionFactory http1 = buildHttpConnectionFactory(httpConfig);\n         final HTTP2ServerConnectionFactory http2 = new HTTP2ServerConnectionFactory(httpConfig);\n         http2.setMaxConcurrentStreams(maxConcurrentStreams);\n-        http2.setInitialStreamSendWindow(initialStreamSendWindow);\n+        http2.setInitialStreamRecvWindow(initialStreamSendWindow);\n \n         final NegotiatingServerConnectionFactory alpn = new ALPNServerConnectionFactory(H2, H2_17);\n         alpn.setDefaultProtocol(HTTP_1_1); // Speak HTTP 1.1 over TLS if negotiation fails\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 103,
    "bugNodeStartChar": 3603,
    "bugNodeLength": 57,
    "fixLineNum": 103,
    "fixNodeStartChar": 3603,
    "fixNodeLength": 57,
    "sourceBeforeFix": "http2.setInitialStreamSendWindow(initialStreamSendWindow)",
    "sourceAfterFix": "http2.setInitialStreamRecvWindow(initialStreamSendWindow)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "bbdd2fa3a4265b88096ab6f85bcfb1df7fc037a3",
    "fixCommitParentSHA1": "d2fbc9d9255a0b83492db887d8c94261ed308c8c",
    "bugFilePath": "dropwizard-http2/src/main/java/io/dropwizard/http2/Http2ConnectorFactory.java",
    "fixPatch": "diff --git a/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2ConnectorFactory.java b/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2ConnectorFactory.java\nindex cd0d495..4f70119 100644\n--- a/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2ConnectorFactory.java\n+++ b/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2ConnectorFactory.java\n@@ -100,7 +100,7 @@\n         final HttpConnectionFactory http1 = buildHttpConnectionFactory(httpConfig);\n         final HTTP2ServerConnectionFactory http2 = new HTTP2ServerConnectionFactory(httpConfig);\n         http2.setMaxConcurrentStreams(maxConcurrentStreams);\n-        http2.setInitialStreamSendWindow(initialStreamSendWindow);\n+        http2.setInitialStreamRecvWindow(initialStreamSendWindow);\n \n         final NegotiatingServerConnectionFactory alpn = new ALPNServerConnectionFactory(H2, H2_17);\n         alpn.setDefaultProtocol(HTTP_1_1); // Speak HTTP 1.1 over TLS if negotiation fails\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 103,
    "bugNodeStartChar": 3603,
    "bugNodeLength": 57,
    "fixLineNum": 103,
    "fixNodeStartChar": 3603,
    "fixNodeLength": 57,
    "sourceBeforeFix": "http2.setInitialStreamSendWindow(initialStreamSendWindow)",
    "sourceAfterFix": "http2.setInitialStreamRecvWindow(initialStreamSendWindow)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "908d85817facf0cd5406a7dc8b65712e6446fd78",
    "fixCommitParentSHA1": "d0864f43676a137a3b0fc706becc36f10a064450",
    "bugFilePath": "dropwizard-metrics-graphite/src/test/java/io/dropwizard/metrics/graphite/GraphiteReporterFactoryTest.java",
    "fixPatch": "diff --git a/dropwizard-metrics-graphite/src/test/java/io/dropwizard/metrics/graphite/GraphiteReporterFactoryTest.java b/dropwizard-metrics-graphite/src/test/java/io/dropwizard/metrics/graphite/GraphiteReporterFactoryTest.java\nindex 878b90f..74a8655 100644\n--- a/dropwizard-metrics-graphite/src/test/java/io/dropwizard/metrics/graphite/GraphiteReporterFactoryTest.java\n+++ b/dropwizard-metrics-graphite/src/test/java/io/dropwizard/metrics/graphite/GraphiteReporterFactoryTest.java\n@@ -53,7 +53,7 @@\n \n         final Graphite graphite = argument.getValue();\n         assertThat(getField(graphite, \"hostname\")).isEqualTo(\"localhost\");\n-        assertThat(getField(graphite, \"port\")).isEqualTo(8080);\n+        assertThat(getField(graphite, \"port\")).isEqualTo(2003);\n         assertThat(getField(graphite, \"address\")).isNull();\n     }\n \n@@ -67,7 +67,7 @@\n \n         final GraphiteUDP graphite = argument.getValue();\n         assertThat(getField(graphite, \"hostname\")).isEqualTo(\"localhost\");\n-        assertThat(getField(graphite, \"port\")).isEqualTo(8080);\n+        assertThat(getField(graphite, \"port\")).isEqualTo(2003);\n         assertThat(getField(graphite, \"address\")).isNull();\n     }\n \n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 56,
    "bugNodeStartChar": 2084,
    "bugNodeLength": 54,
    "fixLineNum": 56,
    "fixNodeStartChar": 2084,
    "fixNodeLength": 54,
    "sourceBeforeFix": "assertThat(getField(graphite,\"port\")).isEqualTo(8080)",
    "sourceAfterFix": "assertThat(getField(graphite,\"port\")).isEqualTo(2003)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "908d85817facf0cd5406a7dc8b65712e6446fd78",
    "fixCommitParentSHA1": "d0864f43676a137a3b0fc706becc36f10a064450",
    "bugFilePath": "dropwizard-metrics-graphite/src/test/java/io/dropwizard/metrics/graphite/GraphiteReporterFactoryTest.java",
    "fixPatch": "diff --git a/dropwizard-metrics-graphite/src/test/java/io/dropwizard/metrics/graphite/GraphiteReporterFactoryTest.java b/dropwizard-metrics-graphite/src/test/java/io/dropwizard/metrics/graphite/GraphiteReporterFactoryTest.java\nindex 878b90f..74a8655 100644\n--- a/dropwizard-metrics-graphite/src/test/java/io/dropwizard/metrics/graphite/GraphiteReporterFactoryTest.java\n+++ b/dropwizard-metrics-graphite/src/test/java/io/dropwizard/metrics/graphite/GraphiteReporterFactoryTest.java\n@@ -53,7 +53,7 @@\n \n         final Graphite graphite = argument.getValue();\n         assertThat(getField(graphite, \"hostname\")).isEqualTo(\"localhost\");\n-        assertThat(getField(graphite, \"port\")).isEqualTo(8080);\n+        assertThat(getField(graphite, \"port\")).isEqualTo(2003);\n         assertThat(getField(graphite, \"address\")).isNull();\n     }\n \n@@ -67,7 +67,7 @@\n \n         final GraphiteUDP graphite = argument.getValue();\n         assertThat(getField(graphite, \"hostname\")).isEqualTo(\"localhost\");\n-        assertThat(getField(graphite, \"port\")).isEqualTo(8080);\n+        assertThat(getField(graphite, \"port\")).isEqualTo(2003);\n         assertThat(getField(graphite, \"address\")).isNull();\n     }\n \n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 70,
    "bugNodeStartChar": 2697,
    "bugNodeLength": 54,
    "fixLineNum": 70,
    "fixNodeStartChar": 2697,
    "fixNodeLength": 54,
    "sourceBeforeFix": "assertThat(getField(graphite,\"port\")).isEqualTo(8080)",
    "sourceAfterFix": "assertThat(getField(graphite,\"port\")).isEqualTo(2003)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "9f06476cc59a99b9de7aed0f46b2d81da4f7d2b8",
    "fixCommitParentSHA1": "b8a592b6be4e5c75e60c80a8027f8e19e9e18a6b",
    "bugFilePath": "dropwizard-core/src/test/java/io/dropwizard/server/DefaultServerFactoryTest.java",
    "fixPatch": "diff --git a/dropwizard-core/src/test/java/io/dropwizard/server/DefaultServerFactoryTest.java b/dropwizard-core/src/test/java/io/dropwizard/server/DefaultServerFactoryTest.java\nindex 7e8a15f..965a3bc 100644\n--- a/dropwizard-core/src/test/java/io/dropwizard/server/DefaultServerFactoryTest.java\n+++ b/dropwizard-core/src/test/java/io/dropwizard/server/DefaultServerFactoryTest.java\n@@ -171,7 +171,7 @@\n             return CharStreams.toString(new InputStreamReader(connection.getInputStream()));\n         });\n \n-        requestReceived.await();\n+        requestReceived.await(10, TimeUnit.SECONDS);\n \n         Future<Void> serverStopped = executor.submit((Callable<Void>) () -> {\n             server.stop();\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 174,
    "bugNodeStartChar": 7115,
    "bugNodeLength": 23,
    "fixLineNum": 174,
    "fixNodeStartChar": 7115,
    "fixNodeLength": 43,
    "sourceBeforeFix": "requestReceived.await()",
    "sourceAfterFix": "requestReceived.await(10,TimeUnit.SECONDS)"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "bd1e046a1936703ac62a693a0e44fbb88398a927",
    "fixCommitParentSHA1": "9044d44857fc1c90424303732502536c84963968",
    "bugFilePath": "dropwizard-jdbi/src/main/java/io/dropwizard/jdbi/jersey/LoggingDBIExceptionMapper.java",
    "fixPatch": "diff --git a/dropwizard-jdbi/src/main/java/io/dropwizard/jdbi/jersey/LoggingDBIExceptionMapper.java b/dropwizard-jdbi/src/main/java/io/dropwizard/jdbi/jersey/LoggingDBIExceptionMapper.java\nindex eb35d13..3e06ebb 100644\n--- a/dropwizard-jdbi/src/main/java/io/dropwizard/jdbi/jersey/LoggingDBIExceptionMapper.java\n+++ b/dropwizard-jdbi/src/main/java/io/dropwizard/jdbi/jersey/LoggingDBIExceptionMapper.java\n@@ -29,7 +29,7 @@\n     }\n \n     @VisibleForTesting\n-    static void setLogger(Logger newLogger) {\n+    static synchronized void setLogger(Logger newLogger) {\n         logger = newLogger;\n     }\n }\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 31,
    "bugNodeStartChar": 1051,
    "bugNodeLength": 98,
    "fixLineNum": 31,
    "fixNodeStartChar": 1051,
    "fixNodeLength": 111,
    "sourceBeforeFix": "8",
    "sourceAfterFix": "40"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "bd1e046a1936703ac62a693a0e44fbb88398a927",
    "fixCommitParentSHA1": "9044d44857fc1c90424303732502536c84963968",
    "bugFilePath": "dropwizard-jdbi/src/main/java/io/dropwizard/jdbi/jersey/LoggingSQLExceptionMapper.java",
    "fixPatch": "diff --git a/dropwizard-jdbi/src/main/java/io/dropwizard/jdbi/jersey/LoggingSQLExceptionMapper.java b/dropwizard-jdbi/src/main/java/io/dropwizard/jdbi/jersey/LoggingSQLExceptionMapper.java\nindex 99b5a6e..504c190 100644\n--- a/dropwizard-jdbi/src/main/java/io/dropwizard/jdbi/jersey/LoggingSQLExceptionMapper.java\n+++ b/dropwizard-jdbi/src/main/java/io/dropwizard/jdbi/jersey/LoggingSQLExceptionMapper.java\n@@ -24,7 +24,7 @@\n     }\n \n     @VisibleForTesting\n-    static void setLogger(Logger newLogger) {\n+    static synchronized void setLogger(Logger newLogger) {\n         logger = newLogger;\n     }\n }\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 26,
    "bugNodeStartChar": 783,
    "bugNodeLength": 98,
    "fixLineNum": 26,
    "fixNodeStartChar": 783,
    "fixNodeLength": 111,
    "sourceBeforeFix": "8",
    "sourceAfterFix": "40"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "bd1e046a1936703ac62a693a0e44fbb88398a927",
    "fixCommitParentSHA1": "9044d44857fc1c90424303732502536c84963968",
    "bugFilePath": "dropwizard-lifecycle/src/main/java/io/dropwizard/lifecycle/setup/ExecutorServiceBuilder.java",
    "fixPatch": "diff --git a/dropwizard-lifecycle/src/main/java/io/dropwizard/lifecycle/setup/ExecutorServiceBuilder.java b/dropwizard-lifecycle/src/main/java/io/dropwizard/lifecycle/setup/ExecutorServiceBuilder.java\nindex 4827c2a..3329d85 100644\n--- a/dropwizard-lifecycle/src/main/java/io/dropwizard/lifecycle/setup/ExecutorServiceBuilder.java\n+++ b/dropwizard-lifecycle/src/main/java/io/dropwizard/lifecycle/setup/ExecutorServiceBuilder.java\n@@ -94,7 +94,7 @@\n     }\n \n     @VisibleForTesting\n-    static void setLog(Logger newLog) {\n+    static synchronized void setLog(Logger newLog) {\n        log = newLog;\n     }\n }\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 96,
    "bugNodeStartChar": 3640,
    "bugNodeLength": 85,
    "fixLineNum": 96,
    "fixNodeStartChar": 3640,
    "fixNodeLength": 98,
    "sourceBeforeFix": "8",
    "sourceAfterFix": "40"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "013bd22eb4848763ee8281e51109b6e98e071cdf",
    "fixCommitParentSHA1": "b602447935dce2b30a78cf5fbed900902affb943",
    "bugFilePath": "dropwizard-client/src/main/java/io/dropwizard/client/DropwizardSSLConnectionSocketFactory.java",
    "fixPatch": "diff --git a/dropwizard-client/src/main/java/io/dropwizard/client/DropwizardSSLConnectionSocketFactory.java b/dropwizard-client/src/main/java/io/dropwizard/client/DropwizardSSLConnectionSocketFactory.java\nindex 431cf0d..f87210e 100644\n--- a/dropwizard-client/src/main/java/io/dropwizard/client/DropwizardSSLConnectionSocketFactory.java\n+++ b/dropwizard-client/src/main/java/io/dropwizard/client/DropwizardSSLConnectionSocketFactory.java\n@@ -90,7 +90,7 @@\n         sslContextBuilder.loadTrustMaterial(trustStore, trustStrategy);\n     }\n \n-    private KeyStore loadKeyStore(String type, File path, String password) throws Exception {\n+    private static KeyStore loadKeyStore(String type, File path, String password) throws Exception {\n         final KeyStore keyStore = KeyStore.getInstance(type);\n         try (InputStream inputStream = new FileInputStream(path)) {\n             keyStore.load(inputStream, password.toCharArray());\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 93,
    "bugNodeStartChar": 3690,
    "bugNodeLength": 324,
    "fixLineNum": 93,
    "fixNodeStartChar": 3690,
    "fixNodeLength": 331,
    "sourceBeforeFix": "2",
    "sourceAfterFix": "10"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "013bd22eb4848763ee8281e51109b6e98e071cdf",
    "fixCommitParentSHA1": "b602447935dce2b30a78cf5fbed900902affb943",
    "bugFilePath": "dropwizard-core/src/main/java/io/dropwizard/cli/Cli.java",
    "fixPatch": "diff --git a/dropwizard-core/src/main/java/io/dropwizard/cli/Cli.java b/dropwizard-core/src/main/java/io/dropwizard/cli/Cli.java\nindex 3ad2965..8d6570e 100644\n--- a/dropwizard-core/src/main/java/io/dropwizard/cli/Cli.java\n+++ b/dropwizard-core/src/main/java/io/dropwizard/cli/Cli.java\n@@ -89,7 +89,7 @@\n         }\n     }\n \n-    private boolean isFlag(String[][] flags, String[] arguments) {\n+    private static boolean isFlag(String[][] flags, String[] arguments) {\n         for (String[] cmd : flags) {\n             if (Arrays.equals(arguments, cmd)) {\n                 return true;\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 92,
    "bugNodeStartChar": 3582,
    "bugNodeLength": 229,
    "fixLineNum": 92,
    "fixNodeStartChar": 3582,
    "fixNodeLength": 236,
    "sourceBeforeFix": "2",
    "sourceAfterFix": "10"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "013bd22eb4848763ee8281e51109b6e98e071cdf",
    "fixCommitParentSHA1": "b602447935dce2b30a78cf5fbed900902affb943",
    "bugFilePath": "dropwizard-hibernate/src/test/java/io/dropwizard/hibernate/UnitOfWorkApplicationListenerTest.java",
    "fixPatch": "diff --git a/dropwizard-hibernate/src/test/java/io/dropwizard/hibernate/UnitOfWorkApplicationListenerTest.java b/dropwizard-hibernate/src/test/java/io/dropwizard/hibernate/UnitOfWorkApplicationListenerTest.java\nindex e5b7cfd..1bffdf7 100644\n--- a/dropwizard-hibernate/src/test/java/io/dropwizard/hibernate/UnitOfWorkApplicationListenerTest.java\n+++ b/dropwizard-hibernate/src/test/java/io/dropwizard/hibernate/UnitOfWorkApplicationListenerTest.java\n@@ -271,7 +271,7 @@\n         when(uriInfo.getMatchedResourceMethod()).thenReturn(resourceMethod);\n     }\n \n-    private boolean methodDefinedOnInterface(String methodName, Method[] methods) {\n+    private static boolean methodDefinedOnInterface(String methodName, Method[] methods) {\n         for (Method method : methods) {\n             if (method.getName().equals(methodName)) {\n                 return true;\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 274,
    "bugNodeStartChar": 10216,
    "bugNodeLength": 255,
    "fixLineNum": 274,
    "fixNodeStartChar": 10216,
    "fixNodeLength": 262,
    "sourceBeforeFix": "2",
    "sourceAfterFix": "10"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "013bd22eb4848763ee8281e51109b6e98e071cdf",
    "fixCommitParentSHA1": "b602447935dce2b30a78cf5fbed900902affb943",
    "bugFilePath": "dropwizard-jersey/src/main/java/io/dropwizard/jersey/DropwizardResourceConfig.java",
    "fixPatch": "diff --git a/dropwizard-jersey/src/main/java/io/dropwizard/jersey/DropwizardResourceConfig.java b/dropwizard-jersey/src/main/java/io/dropwizard/jersey/DropwizardResourceConfig.java\nindex a01c9ef..a943189 100644\n--- a/dropwizard-jersey/src/main/java/io/dropwizard/jersey/DropwizardResourceConfig.java\n+++ b/dropwizard-jersey/src/main/java/io/dropwizard/jersey/DropwizardResourceConfig.java\n@@ -189,7 +189,7 @@\n             }\n         }\n \n-        private String normalizePath(String basePath, String path) {\n+        private static String normalizePath(String basePath, String path) {\n             if (path == null) {\n                 return basePath;\n             }\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 192,
    "bugNodeStartChar": 7722,
    "bugNodeLength": 382,
    "fixLineNum": 192,
    "fixNodeStartChar": 7722,
    "fixNodeLength": 389,
    "sourceBeforeFix": "2",
    "sourceAfterFix": "10"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "013bd22eb4848763ee8281e51109b6e98e071cdf",
    "fixCommitParentSHA1": "b602447935dce2b30a78cf5fbed900902affb943",
    "bugFilePath": "dropwizard-logging/src/test/java/io/dropwizard/logging/PrefixedRootCauseFirstThrowableProxyConverterTest.java",
    "fixPatch": "diff --git a/dropwizard-logging/src/test/java/io/dropwizard/logging/PrefixedRootCauseFirstThrowableProxyConverterTest.java b/dropwizard-logging/src/test/java/io/dropwizard/logging/PrefixedRootCauseFirstThrowableProxyConverterTest.java\nindex 82fea76..d7ebf3d 100644\n--- a/dropwizard-logging/src/test/java/io/dropwizard/logging/PrefixedRootCauseFirstThrowableProxyConverterTest.java\n+++ b/dropwizard-logging/src/test/java/io/dropwizard/logging/PrefixedRootCauseFirstThrowableProxyConverterTest.java\n@@ -33,7 +33,7 @@\n         return null; // unpossible, tell the type-system\n     }\n \n-    private void throwRoot() throws SocketTimeoutException {\n+    private static void throwRoot() throws SocketTimeoutException {\n         throw new SocketTimeoutException(\"Timed-out reading from socket\");\n     }\n \n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 36,
    "bugNodeStartChar": 961,
    "bugNodeLength": 137,
    "fixLineNum": 36,
    "fixNodeStartChar": 961,
    "fixNodeLength": 144,
    "sourceBeforeFix": "2",
    "sourceAfterFix": "10"
  },
  {
    "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
    "fixCommitSHA1": "04e4c98070ab2da88d82eab7aa7600940278bcce",
    "fixCommitParentSHA1": "be53bfaddbeb2ff67a293212e659b0d152a820c2",
    "bugFilePath": "dropwizard-jersey/src/main/java/io/dropwizard/jersey/errors/LoggingExceptionMapper.java",
    "fixPatch": "diff --git a/dropwizard-jersey/src/main/java/io/dropwizard/jersey/errors/LoggingExceptionMapper.java b/dropwizard-jersey/src/main/java/io/dropwizard/jersey/errors/LoggingExceptionMapper.java\nindex 73117f2..da06482 100644\n--- a/dropwizard-jersey/src/main/java/io/dropwizard/jersey/errors/LoggingExceptionMapper.java\n+++ b/dropwizard-jersey/src/main/java/io/dropwizard/jersey/errors/LoggingExceptionMapper.java\n@@ -27,7 +27,7 @@\n             status = response.getStatus();\n             errorMessage = new ErrorMessage(status, exception.getLocalizedMessage());\n         } else {\n-            final long id = logException(id, exception);\n+            final long id = logException(exception);\n             status = Response.Status.INTERNAL_SERVER_ERROR.getStatusCode();\n             errorMessage = new ErrorMessage(formatErrorMessage(id, exception));\n         }\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 30,
    "bugNodeStartChar": 1143,
    "bugNodeLength": 27,
    "fixLineNum": 30,
    "fixNodeStartChar": 1143,
    "fixNodeLength": 23,
    "sourceBeforeFix": "logException(id,exception)",
    "sourceAfterFix": "logException(exception)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "04e4c98070ab2da88d82eab7aa7600940278bcce",
    "fixCommitParentSHA1": "be53bfaddbeb2ff67a293212e659b0d152a820c2",
    "bugFilePath": "dropwizard-jersey/src/main/java/io/dropwizard/jersey/errors/LoggingExceptionMapper.java",
    "fixPatch": "diff --git a/dropwizard-jersey/src/main/java/io/dropwizard/jersey/errors/LoggingExceptionMapper.java b/dropwizard-jersey/src/main/java/io/dropwizard/jersey/errors/LoggingExceptionMapper.java\nindex 73117f2..da06482 100644\n--- a/dropwizard-jersey/src/main/java/io/dropwizard/jersey/errors/LoggingExceptionMapper.java\n+++ b/dropwizard-jersey/src/main/java/io/dropwizard/jersey/errors/LoggingExceptionMapper.java\n@@ -27,7 +27,7 @@\n             status = response.getStatus();\n             errorMessage = new ErrorMessage(status, exception.getLocalizedMessage());\n         } else {\n-            final long id = logException(id, exception);\n+            final long id = logException(exception);\n             status = Response.Status.INTERNAL_SERVER_ERROR.getStatusCode();\n             errorMessage = new ErrorMessage(formatErrorMessage(id, exception));\n         }\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 30,
    "bugNodeStartChar": 1143,
    "bugNodeLength": 27,
    "fixLineNum": 30,
    "fixNodeStartChar": 1143,
    "fixNodeLength": 23,
    "sourceBeforeFix": "logException(id,exception)",
    "sourceAfterFix": "logException(exception)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "ebdfcb47a030730233cf0984aadae155ec138ff3",
    "fixCommitParentSHA1": "b2611e7376fa0047a88b9925329bf375cf5afbaa",
    "bugFilePath": "dropwizard-jersey/src/main/java/io/dropwizard/jersey/jackson/JsonProcessingExceptionMapper.java",
    "fixPatch": "diff --git a/dropwizard-jersey/src/main/java/io/dropwizard/jersey/jackson/JsonProcessingExceptionMapper.java b/dropwizard-jersey/src/main/java/io/dropwizard/jersey/jackson/JsonProcessingExceptionMapper.java\nindex b52baad..8eac209 100644\n--- a/dropwizard-jersey/src/main/java/io/dropwizard/jersey/jackson/JsonProcessingExceptionMapper.java\n+++ b/dropwizard-jersey/src/main/java/io/dropwizard/jersey/jackson/JsonProcessingExceptionMapper.java\n@@ -48,7 +48,7 @@\n         /*\n          * Otherwise, it's those pesky users.\n          */\n-        LOGGER.debug(\"Unable to process JSON\", exception);\n+        LOGGER.warn(\"Unable to process JSON\", exception);\n         final ErrorMessage errorMessage = new ErrorMessage(Response.Status.BAD_REQUEST.getStatusCode(),\n                 \"Unable to process JSON\", showDetails ? message : null);\n         return Response.status(Response.Status.BAD_REQUEST)\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 51,
    "bugNodeStartChar": 1730,
    "bugNodeLength": 49,
    "fixLineNum": 51,
    "fixNodeStartChar": 1730,
    "fixNodeLength": 48,
    "sourceBeforeFix": "LOGGER.debug(\"Unable to process JSON\",exception)",
    "sourceAfterFix": "LOGGER.warn(\"Unable to process JSON\",exception)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "ebdfcb47a030730233cf0984aadae155ec138ff3",
    "fixCommitParentSHA1": "b2611e7376fa0047a88b9925329bf375cf5afbaa",
    "bugFilePath": "dropwizard-jersey/src/main/java/io/dropwizard/jersey/jackson/JsonProcessingExceptionMapper.java",
    "fixPatch": "diff --git a/dropwizard-jersey/src/main/java/io/dropwizard/jersey/jackson/JsonProcessingExceptionMapper.java b/dropwizard-jersey/src/main/java/io/dropwizard/jersey/jackson/JsonProcessingExceptionMapper.java\nindex b52baad..8eac209 100644\n--- a/dropwizard-jersey/src/main/java/io/dropwizard/jersey/jackson/JsonProcessingExceptionMapper.java\n+++ b/dropwizard-jersey/src/main/java/io/dropwizard/jersey/jackson/JsonProcessingExceptionMapper.java\n@@ -48,7 +48,7 @@\n         /*\n          * Otherwise, it's those pesky users.\n          */\n-        LOGGER.debug(\"Unable to process JSON\", exception);\n+        LOGGER.warn(\"Unable to process JSON\", exception);\n         final ErrorMessage errorMessage = new ErrorMessage(Response.Status.BAD_REQUEST.getStatusCode(),\n                 \"Unable to process JSON\", showDetails ? message : null);\n         return Response.status(Response.Status.BAD_REQUEST)\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 51,
    "bugNodeStartChar": 1730,
    "bugNodeLength": 49,
    "fixLineNum": 51,
    "fixNodeStartChar": 1730,
    "fixNodeLength": 48,
    "sourceBeforeFix": "LOGGER.debug(\"Unable to process JSON\",exception)",
    "sourceAfterFix": "LOGGER.warn(\"Unable to process JSON\",exception)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "b8f2c536ba0255ac3456b4a8a0180a0cfc60fde2",
    "fixCommitParentSHA1": "d19563f6f2d3cfefecc725d9783ad625f8db9725",
    "bugFilePath": "dropwizard-jersey/src/main/java/io/dropwizard/jersey/jackson/JacksonMessageBodyProvider.java",
    "fixPatch": "diff --git a/dropwizard-jersey/src/main/java/io/dropwizard/jersey/jackson/JacksonMessageBodyProvider.java b/dropwizard-jersey/src/main/java/io/dropwizard/jersey/jackson/JacksonMessageBodyProvider.java\nold mode 100755\nnew mode 100644\nindex 1919ccd..3535609\n--- a/dropwizard-jersey/src/main/java/io/dropwizard/jersey/jackson/JacksonMessageBodyProvider.java\n+++ b/dropwizard-jersey/src/main/java/io/dropwizard/jersey/jackson/JacksonMessageBodyProvider.java\n@@ -31,7 +31,7 @@\n  * {@link JsonIgnoreType}.)\n  */\n public class JacksonMessageBodyProvider extends JacksonJaxbJsonProvider {\n-    private static final Logger LOGGER = LoggerFactory.getLogger(JsonProcessingExceptionMapper.class);\n+    private static final Logger LOGGER = LoggerFactory.getLogger(JacksonMessageBodyProvider.class);\n     /**\n      * The default group array used in case any of the validate methods is called without a group.\n      */\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 34,
    "bugNodeStartChar": 1386,
    "bugNodeLength": 35,
    "fixLineNum": 34,
    "fixNodeStartChar": 1386,
    "fixNodeLength": 32,
    "sourceBeforeFix": "JsonProcessingExceptionMapper.class",
    "sourceAfterFix": "JacksonMessageBodyProvider.class"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "bd229bdbd2ea75bef4d5c5927fafd92a44e018a7",
    "fixCommitParentSHA1": "e5abb6616758f2b76adb358cebc76228f4699b53",
    "bugFilePath": "dropwizard-client/src/main/java/io/dropwizard/client/HttpClientBuilder.java",
    "fixPatch": "diff --git a/dropwizard-client/src/main/java/io/dropwizard/client/HttpClientBuilder.java b/dropwizard-client/src/main/java/io/dropwizard/client/HttpClientBuilder.java\nindex a1a81e6..d6b2704 100644\n--- a/dropwizard-client/src/main/java/io/dropwizard/client/HttpClientBuilder.java\n+++ b/dropwizard-client/src/main/java/io/dropwizard/client/HttpClientBuilder.java\n@@ -88,7 +88,7 @@\n                 .setSoTimeout(timeout)\n                 .build();\n \n-        builder.setRequestExecutor(new InstrumentedHttpRequestExecutor(metricRegistry, metricNameStrategy))\n+        builder.setRequestExecutor(new InstrumentedHttpRequestExecutor(metricRegistry, metricNameStrategy, name))\n                 .setConnectionManager(manager)\n                 .setDefaultRequestConfig(requestConfig)\n                 .setDefaultSocketConfig(socketConfig)\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 91,
    "bugNodeStartChar": 3686,
    "bugNodeLength": 71,
    "fixLineNum": 91,
    "fixNodeStartChar": 3686,
    "fixNodeLength": 77,
    "sourceBeforeFix": "new InstrumentedHttpRequestExecutor(metricRegistry,metricNameStrategy)",
    "sourceAfterFix": "new InstrumentedHttpRequestExecutor(metricRegistry,metricNameStrategy,name)"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "9240180625531440e66130aa925c5ec2d9058e45",
    "fixCommitParentSHA1": "558eae926cbf8ce29dd943ba1db2a9ea701f17d1",
    "bugFilePath": "dropwizard-jdbi/src/main/java/io/dropwizard/jdbi/NamePrependingStatementRewriter.java",
    "fixPatch": "diff --git a/dropwizard-jdbi/src/main/java/io/dropwizard/jdbi/NamePrependingStatementRewriter.java b/dropwizard-jdbi/src/main/java/io/dropwizard/jdbi/NamePrependingStatementRewriter.java\nindex 8d70a10..de670d9 100644\n--- a/dropwizard-jdbi/src/main/java/io/dropwizard/jdbi/NamePrependingStatementRewriter.java\n+++ b/dropwizard-jdbi/src/main/java/io/dropwizard/jdbi/NamePrependingStatementRewriter.java\n@@ -8,7 +8,7 @@\n public class NamePrependingStatementRewriter implements StatementRewriter {\n     private final StatementRewriter rewriter;\n \n-    NamePrependingStatementRewriter(StatementRewriter rewriter) {\n+    public NamePrependingStatementRewriter(StatementRewriter rewriter) {\n         this.rewriter = rewriter;\n     }\n \n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 11,
    "bugNodeStartChar": 335,
    "bugNodeLength": 101,
    "fixLineNum": 11,
    "fixNodeStartChar": 335,
    "fixNodeLength": 108,
    "sourceBeforeFix": "0",
    "sourceAfterFix": "1"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "d9b4d060ac419c29b77793203b6b0fefe9d443d6",
    "fixCommitParentSHA1": "db74516b467aa587d1fdc9e7d9bcf0c8818ea5c7",
    "bugFilePath": "dropwizard-core/src/main/java/io/dropwizard/Application.java",
    "fixPatch": "diff --git a/dropwizard-core/src/main/java/io/dropwizard/Application.java b/dropwizard-core/src/main/java/io/dropwizard/Application.java\nindex 98b7390..2c74668 100644\n--- a/dropwizard-core/src/main/java/io/dropwizard/Application.java\n+++ b/dropwizard-core/src/main/java/io/dropwizard/Application.java\n@@ -64,7 +64,7 @@\n      * @param arguments the command-line arguments\n      * @throws Exception if something goes wrong\n      */\n-    public final void run(String... arguments) throws Exception {\n+    public void run(String... arguments) throws Exception {\n         final Bootstrap<T> bootstrap = new Bootstrap<>(this);\n         bootstrap.addCommand(new ServerCommand<>(this));\n         bootstrap.addCommand(new CheckCommand<>(this));\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 60,
    "bugNodeStartChar": 1793,
    "bugNodeLength": 790,
    "fixLineNum": 60,
    "fixNodeStartChar": 1793,
    "fixNodeLength": 784,
    "sourceBeforeFix": "17",
    "sourceAfterFix": "1"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "a1f7739ce78345b312c8d2b6298214586e237090",
    "fixCommitParentSHA1": "3befd504e18f0b42635185aedb05f523b8c2456a",
    "bugFilePath": "dropwizard-metrics/src/main/java/io/dropwizard/metrics/BaseReporterFactory.java",
    "fixPatch": "diff --git a/dropwizard-metrics/src/main/java/io/dropwizard/metrics/BaseReporterFactory.java b/dropwizard-metrics/src/main/java/io/dropwizard/metrics/BaseReporterFactory.java\nindex 2a3b6e2..941521b 100644\n--- a/dropwizard-metrics/src/main/java/io/dropwizard/metrics/BaseReporterFactory.java\n+++ b/dropwizard-metrics/src/main/java/io/dropwizard/metrics/BaseReporterFactory.java\n@@ -69,7 +69,7 @@\n \n     @NotNull\n     @Valid\n-    private Optional<Duration> frequency = Optional.of(Duration.seconds(1));\n+    private Optional<Duration> frequency = Optional.absent();\n \n     public TimeUnit getDurationUnit() {\n         return durationUnit;\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 72,
    "bugNodeStartChar": 2249,
    "bugNodeLength": 32,
    "fixLineNum": 72,
    "fixNodeStartChar": 2249,
    "fixNodeLength": 17,
    "sourceBeforeFix": "Optional.of(Duration.seconds(1))",
    "sourceAfterFix": "Optional.absent()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "223311f4239069b578d3e7c0cf7f586289af4edb",
    "fixCommitParentSHA1": "a06f53b073e261f2307975f207c3e4268de67c2f",
    "bugFilePath": "dropwizard-metrics/src/main/java/io/dropwizard/metrics/CsvReporterFactory.java",
    "fixPatch": "diff --git a/dropwizard-metrics/src/main/java/io/dropwizard/metrics/CsvReporterFactory.java b/dropwizard-metrics/src/main/java/io/dropwizard/metrics/CsvReporterFactory.java\nindex 9eb0135..d20254a 100644\n--- a/dropwizard-metrics/src/main/java/io/dropwizard/metrics/CsvReporterFactory.java\n+++ b/dropwizard-metrics/src/main/java/io/dropwizard/metrics/CsvReporterFactory.java\n@@ -51,7 +51,7 @@\n     public ScheduledReporter build(MetricRegistry registry) {\n         return CsvReporter.forRegistry(registry)\n                           .convertDurationsTo(getDurationUnit())\n-                          .convertDurationsTo(getRateUnit())\n+                          .convertRatesTo(getRateUnit())\n                           .filter(getFilter())\n                           .formatFor(getLocale())\n                           .build(getFile());\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 52,
    "bugNodeStartChar": 1363,
    "bugNodeLength": 159,
    "fixLineNum": 52,
    "fixNodeStartChar": 1363,
    "fixNodeLength": 155,
    "sourceBeforeFix": "CsvReporter.forRegistry(registry).convertDurationsTo(getDurationUnit()).convertDurationsTo(getRateUnit())",
    "sourceAfterFix": "CsvReporter.forRegistry(registry).convertDurationsTo(getDurationUnit()).convertRatesTo(getRateUnit())"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "223311f4239069b578d3e7c0cf7f586289af4edb",
    "fixCommitParentSHA1": "a06f53b073e261f2307975f207c3e4268de67c2f",
    "bugFilePath": "dropwizard-metrics/src/main/java/io/dropwizard/metrics/CsvReporterFactory.java",
    "fixPatch": "diff --git a/dropwizard-metrics/src/main/java/io/dropwizard/metrics/CsvReporterFactory.java b/dropwizard-metrics/src/main/java/io/dropwizard/metrics/CsvReporterFactory.java\nindex 9eb0135..d20254a 100644\n--- a/dropwizard-metrics/src/main/java/io/dropwizard/metrics/CsvReporterFactory.java\n+++ b/dropwizard-metrics/src/main/java/io/dropwizard/metrics/CsvReporterFactory.java\n@@ -51,7 +51,7 @@\n     public ScheduledReporter build(MetricRegistry registry) {\n         return CsvReporter.forRegistry(registry)\n                           .convertDurationsTo(getDurationUnit())\n-                          .convertDurationsTo(getRateUnit())\n+                          .convertRatesTo(getRateUnit())\n                           .filter(getFilter())\n                           .formatFor(getLocale())\n                           .build(getFile());\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 52,
    "bugNodeStartChar": 1363,
    "bugNodeLength": 159,
    "fixLineNum": 52,
    "fixNodeStartChar": 1363,
    "fixNodeLength": 155,
    "sourceBeforeFix": "CsvReporter.forRegistry(registry).convertDurationsTo(getDurationUnit()).convertDurationsTo(getRateUnit())",
    "sourceAfterFix": "CsvReporter.forRegistry(registry).convertDurationsTo(getDurationUnit()).convertRatesTo(getRateUnit())"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "d94f2ff5b5ab60f334639325e825f1c61eb36517",
    "fixCommitParentSHA1": "a06f53b073e261f2307975f207c3e4268de67c2f",
    "bugFilePath": "dropwizard-metrics/src/main/java/io/dropwizard/metrics/CsvReporterFactory.java",
    "fixPatch": "diff --git a/dropwizard-metrics/src/main/java/io/dropwizard/metrics/CsvReporterFactory.java b/dropwizard-metrics/src/main/java/io/dropwizard/metrics/CsvReporterFactory.java\nindex 9eb0135..d20254a 100644\n--- a/dropwizard-metrics/src/main/java/io/dropwizard/metrics/CsvReporterFactory.java\n+++ b/dropwizard-metrics/src/main/java/io/dropwizard/metrics/CsvReporterFactory.java\n@@ -51,7 +51,7 @@\n     public ScheduledReporter build(MetricRegistry registry) {\n         return CsvReporter.forRegistry(registry)\n                           .convertDurationsTo(getDurationUnit())\n-                          .convertDurationsTo(getRateUnit())\n+                          .convertRatesTo(getRateUnit())\n                           .filter(getFilter())\n                           .formatFor(getLocale())\n                           .build(getFile());\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 52,
    "bugNodeStartChar": 1363,
    "bugNodeLength": 159,
    "fixLineNum": 52,
    "fixNodeStartChar": 1363,
    "fixNodeLength": 155,
    "sourceBeforeFix": "CsvReporter.forRegistry(registry).convertDurationsTo(getDurationUnit()).convertDurationsTo(getRateUnit())",
    "sourceAfterFix": "CsvReporter.forRegistry(registry).convertDurationsTo(getDurationUnit()).convertRatesTo(getRateUnit())"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "d94f2ff5b5ab60f334639325e825f1c61eb36517",
    "fixCommitParentSHA1": "a06f53b073e261f2307975f207c3e4268de67c2f",
    "bugFilePath": "dropwizard-metrics/src/main/java/io/dropwizard/metrics/CsvReporterFactory.java",
    "fixPatch": "diff --git a/dropwizard-metrics/src/main/java/io/dropwizard/metrics/CsvReporterFactory.java b/dropwizard-metrics/src/main/java/io/dropwizard/metrics/CsvReporterFactory.java\nindex 9eb0135..d20254a 100644\n--- a/dropwizard-metrics/src/main/java/io/dropwizard/metrics/CsvReporterFactory.java\n+++ b/dropwizard-metrics/src/main/java/io/dropwizard/metrics/CsvReporterFactory.java\n@@ -51,7 +51,7 @@\n     public ScheduledReporter build(MetricRegistry registry) {\n         return CsvReporter.forRegistry(registry)\n                           .convertDurationsTo(getDurationUnit())\n-                          .convertDurationsTo(getRateUnit())\n+                          .convertRatesTo(getRateUnit())\n                           .filter(getFilter())\n                           .formatFor(getLocale())\n                           .build(getFile());\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 52,
    "bugNodeStartChar": 1363,
    "bugNodeLength": 159,
    "fixLineNum": 52,
    "fixNodeStartChar": 1363,
    "fixNodeLength": 155,
    "sourceBeforeFix": "CsvReporter.forRegistry(registry).convertDurationsTo(getDurationUnit()).convertDurationsTo(getRateUnit())",
    "sourceAfterFix": "CsvReporter.forRegistry(registry).convertDurationsTo(getDurationUnit()).convertRatesTo(getRateUnit())"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "556d92bd27f2cea8d7ce42080d6619122c38ac19",
    "fixCommitParentSHA1": "e823f8dd411defb77ab58fc4c9cd46744b735763",
    "bugFilePath": "dropwizard-configuration/src/main/java/com/codahale/dropwizard/configuration/ConfigurationFactory.java",
    "fixPatch": "diff --git a/dropwizard-configuration/src/main/java/com/codahale/dropwizard/configuration/ConfigurationFactory.java b/dropwizard-configuration/src/main/java/com/codahale/dropwizard/configuration/ConfigurationFactory.java\nindex d0ef340..2c3bd4a 100644\n--- a/dropwizard-configuration/src/main/java/com/codahale/dropwizard/configuration/ConfigurationFactory.java\n+++ b/dropwizard-configuration/src/main/java/com/codahale/dropwizard/configuration/ConfigurationFactory.java\n@@ -65,7 +65,7 @@\n      */\n     public T build(ConfigurationSourceProvider provider, String path) throws IOException, ConfigurationException {\n         try (InputStream input = provider.open(checkNotNull(path))) {\n-            final JsonNode node = mapper.readTree(yamlFactory.createJsonParser(input));\n+            final JsonNode node = mapper.readTree(yamlFactory.createParser(input));\n             return build(node, path);\n         }\n     }\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 68,
    "bugNodeStartChar": 2858,
    "bugNodeLength": 35,
    "fixLineNum": 68,
    "fixNodeStartChar": 2858,
    "fixNodeLength": 31,
    "sourceBeforeFix": "yamlFactory.createJsonParser(input)",
    "sourceAfterFix": "yamlFactory.createParser(input)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "556d92bd27f2cea8d7ce42080d6619122c38ac19",
    "fixCommitParentSHA1": "e823f8dd411defb77ab58fc4c9cd46744b735763",
    "bugFilePath": "dropwizard-configuration/src/main/java/com/codahale/dropwizard/configuration/ConfigurationFactory.java",
    "fixPatch": "diff --git a/dropwizard-configuration/src/main/java/com/codahale/dropwizard/configuration/ConfigurationFactory.java b/dropwizard-configuration/src/main/java/com/codahale/dropwizard/configuration/ConfigurationFactory.java\nindex d0ef340..2c3bd4a 100644\n--- a/dropwizard-configuration/src/main/java/com/codahale/dropwizard/configuration/ConfigurationFactory.java\n+++ b/dropwizard-configuration/src/main/java/com/codahale/dropwizard/configuration/ConfigurationFactory.java\n@@ -65,7 +65,7 @@\n      */\n     public T build(ConfigurationSourceProvider provider, String path) throws IOException, ConfigurationException {\n         try (InputStream input = provider.open(checkNotNull(path))) {\n-            final JsonNode node = mapper.readTree(yamlFactory.createJsonParser(input));\n+            final JsonNode node = mapper.readTree(yamlFactory.createParser(input));\n             return build(node, path);\n         }\n     }\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 68,
    "bugNodeStartChar": 2858,
    "bugNodeLength": 35,
    "fixLineNum": 68,
    "fixNodeStartChar": 2858,
    "fixNodeLength": 31,
    "sourceBeforeFix": "yamlFactory.createJsonParser(input)",
    "sourceAfterFix": "yamlFactory.createParser(input)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "c6b2f2648f8fcdee334d5c753f727d5a35440fab",
    "fixCommitParentSHA1": "f91d2c6f671c0bc8785026ff62c6bfcfee07cf3b",
    "bugFilePath": "dropwizard-views-mustache/src/test/java/com/codahale/dropwizard/views/mustache/MustacheViewRendererTest.java",
    "fixPatch": "diff --git a/dropwizard-views-mustache/src/test/java/com/codahale/dropwizard/views/mustache/MustacheViewRendererTest.java b/dropwizard-views-mustache/src/test/java/com/codahale/dropwizard/views/mustache/MustacheViewRendererTest.java\nindex dfbbbdb..998af45 100644\n--- a/dropwizard-views-mustache/src/test/java/com/codahale/dropwizard/views/mustache/MustacheViewRendererTest.java\n+++ b/dropwizard-views-mustache/src/test/java/com/codahale/dropwizard/views/mustache/MustacheViewRendererTest.java\n@@ -56,14 +56,14 @@\n     public void rendersViewsWithAbsoluteTemplatePaths() throws Exception {\n         final String response = client().resource(getBaseURI() + \"test/absolute\").get(String.class);\n         assertThat(response)\n-                .isEqualToIgnoringCase(\"Woop woop. yay\\n\");\n+                .isEqualTo(\"Woop woop. yay\\n\");\n     }\n \n     @Test\n     public void rendersViewsWithRelativeTemplatePaths() throws Exception {\n         final String response = client().resource(getBaseURI() + \"test/relative\").get(String.class);\n         assertThat(response)\n-                .isEqualToIgnoringCase(\"Ok.\\n\");\n+                .isEqualTo(\"Ok.\\n\");\n     }\n \n     @Test\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 58,
    "bugNodeStartChar": 1832,
    "bugNodeLength": 79,
    "fixLineNum": 58,
    "fixNodeStartChar": 1832,
    "fixNodeLength": 67,
    "sourceBeforeFix": "assertThat(response).isEqualToIgnoringCase(\"Woop woop. yay\\n\")",
    "sourceAfterFix": "assertThat(response).isEqualTo(\"Woop woop. yay\\n\")"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "c6b2f2648f8fcdee334d5c753f727d5a35440fab",
    "fixCommitParentSHA1": "f91d2c6f671c0bc8785026ff62c6bfcfee07cf3b",
    "bugFilePath": "dropwizard-views-mustache/src/test/java/com/codahale/dropwizard/views/mustache/MustacheViewRendererTest.java",
    "fixPatch": "diff --git a/dropwizard-views-mustache/src/test/java/com/codahale/dropwizard/views/mustache/MustacheViewRendererTest.java b/dropwizard-views-mustache/src/test/java/com/codahale/dropwizard/views/mustache/MustacheViewRendererTest.java\nindex dfbbbdb..998af45 100644\n--- a/dropwizard-views-mustache/src/test/java/com/codahale/dropwizard/views/mustache/MustacheViewRendererTest.java\n+++ b/dropwizard-views-mustache/src/test/java/com/codahale/dropwizard/views/mustache/MustacheViewRendererTest.java\n@@ -56,14 +56,14 @@\n     public void rendersViewsWithAbsoluteTemplatePaths() throws Exception {\n         final String response = client().resource(getBaseURI() + \"test/absolute\").get(String.class);\n         assertThat(response)\n-                .isEqualToIgnoringCase(\"Woop woop. yay\\n\");\n+                .isEqualTo(\"Woop woop. yay\\n\");\n     }\n \n     @Test\n     public void rendersViewsWithRelativeTemplatePaths() throws Exception {\n         final String response = client().resource(getBaseURI() + \"test/relative\").get(String.class);\n         assertThat(response)\n-                .isEqualToIgnoringCase(\"Ok.\\n\");\n+                .isEqualTo(\"Ok.\\n\");\n     }\n \n     @Test\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 58,
    "bugNodeStartChar": 1832,
    "bugNodeLength": 79,
    "fixLineNum": 58,
    "fixNodeStartChar": 1832,
    "fixNodeLength": 67,
    "sourceBeforeFix": "assertThat(response).isEqualToIgnoringCase(\"Woop woop. yay\\n\")",
    "sourceAfterFix": "assertThat(response).isEqualTo(\"Woop woop. yay\\n\")"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "c6b2f2648f8fcdee334d5c753f727d5a35440fab",
    "fixCommitParentSHA1": "f91d2c6f671c0bc8785026ff62c6bfcfee07cf3b",
    "bugFilePath": "dropwizard-views-mustache/src/test/java/com/codahale/dropwizard/views/mustache/MustacheViewRendererTest.java",
    "fixPatch": "diff --git a/dropwizard-views-mustache/src/test/java/com/codahale/dropwizard/views/mustache/MustacheViewRendererTest.java b/dropwizard-views-mustache/src/test/java/com/codahale/dropwizard/views/mustache/MustacheViewRendererTest.java\nindex dfbbbdb..998af45 100644\n--- a/dropwizard-views-mustache/src/test/java/com/codahale/dropwizard/views/mustache/MustacheViewRendererTest.java\n+++ b/dropwizard-views-mustache/src/test/java/com/codahale/dropwizard/views/mustache/MustacheViewRendererTest.java\n@@ -56,14 +56,14 @@\n     public void rendersViewsWithAbsoluteTemplatePaths() throws Exception {\n         final String response = client().resource(getBaseURI() + \"test/absolute\").get(String.class);\n         assertThat(response)\n-                .isEqualToIgnoringCase(\"Woop woop. yay\\n\");\n+                .isEqualTo(\"Woop woop. yay\\n\");\n     }\n \n     @Test\n     public void rendersViewsWithRelativeTemplatePaths() throws Exception {\n         final String response = client().resource(getBaseURI() + \"test/relative\").get(String.class);\n         assertThat(response)\n-                .isEqualToIgnoringCase(\"Ok.\\n\");\n+                .isEqualTo(\"Ok.\\n\");\n     }\n \n     @Test\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 65,
    "bugNodeStartChar": 2114,
    "bugNodeLength": 68,
    "fixLineNum": 65,
    "fixNodeStartChar": 2114,
    "fixNodeLength": 56,
    "sourceBeforeFix": "assertThat(response).isEqualToIgnoringCase(\"Ok.\\n\")",
    "sourceAfterFix": "assertThat(response).isEqualTo(\"Ok.\\n\")"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "c6b2f2648f8fcdee334d5c753f727d5a35440fab",
    "fixCommitParentSHA1": "f91d2c6f671c0bc8785026ff62c6bfcfee07cf3b",
    "bugFilePath": "dropwizard-views-mustache/src/test/java/com/codahale/dropwizard/views/mustache/MustacheViewRendererTest.java",
    "fixPatch": "diff --git a/dropwizard-views-mustache/src/test/java/com/codahale/dropwizard/views/mustache/MustacheViewRendererTest.java b/dropwizard-views-mustache/src/test/java/com/codahale/dropwizard/views/mustache/MustacheViewRendererTest.java\nindex dfbbbdb..998af45 100644\n--- a/dropwizard-views-mustache/src/test/java/com/codahale/dropwizard/views/mustache/MustacheViewRendererTest.java\n+++ b/dropwizard-views-mustache/src/test/java/com/codahale/dropwizard/views/mustache/MustacheViewRendererTest.java\n@@ -56,14 +56,14 @@\n     public void rendersViewsWithAbsoluteTemplatePaths() throws Exception {\n         final String response = client().resource(getBaseURI() + \"test/absolute\").get(String.class);\n         assertThat(response)\n-                .isEqualToIgnoringCase(\"Woop woop. yay\\n\");\n+                .isEqualTo(\"Woop woop. yay\\n\");\n     }\n \n     @Test\n     public void rendersViewsWithRelativeTemplatePaths() throws Exception {\n         final String response = client().resource(getBaseURI() + \"test/relative\").get(String.class);\n         assertThat(response)\n-                .isEqualToIgnoringCase(\"Ok.\\n\");\n+                .isEqualTo(\"Ok.\\n\");\n     }\n \n     @Test\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 65,
    "bugNodeStartChar": 2114,
    "bugNodeLength": 68,
    "fixLineNum": 65,
    "fixNodeStartChar": 2114,
    "fixNodeLength": 56,
    "sourceBeforeFix": "assertThat(response).isEqualToIgnoringCase(\"Ok.\\n\")",
    "sourceAfterFix": "assertThat(response).isEqualTo(\"Ok.\\n\")"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "007ea4a7f2ba64fad78f78c1b798ca45455719e4",
    "fixCommitParentSHA1": "3688bb8b2bc1509380cbb160eb07861d1873f706",
    "bugFilePath": "dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java",
    "fixPatch": "diff --git a/dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java b/dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java\nindex c0ac835..e00d1a1 100644\n--- a/dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java\n+++ b/dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java\n@@ -506,15 +506,15 @@\n         }\n \n         for (Map.Entry<JsonGenerator.Feature, Boolean> entry : generatorFeatures.entrySet()) {\n-            mapper.getJsonFactory().configure(entry.getKey(), entry.getValue());\n+            mapper.getFactory().configure(entry.getKey(), entry.getValue());\n         }\n \n         for (Map.Entry<JsonParser.Feature, Boolean> entry : parserFeatures.entrySet()) {\n-            mapper.getJsonFactory().configure(entry.getKey(), entry.getValue());\n+            mapper.getFactory().configure(entry.getKey(), entry.getValue());\n         }\n \n         for (Map.Entry<JsonFactory.Feature, Boolean> entry : factoryFeatures.entrySet()) {\n-            mapper.getJsonFactory().configure(entry.getKey(), entry.getValue());\n+            mapper.getFactory().configure(entry.getKey(), entry.getValue());\n         }\n \n         if (annotationIntrospector != null) {\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 509,
    "bugNodeStartChar": 16719,
    "bugNodeLength": 23,
    "fixLineNum": 509,
    "fixNodeStartChar": 16719,
    "fixNodeLength": 19,
    "sourceBeforeFix": "mapper.getJsonFactory()",
    "sourceAfterFix": "mapper.getFactory()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "007ea4a7f2ba64fad78f78c1b798ca45455719e4",
    "fixCommitParentSHA1": "3688bb8b2bc1509380cbb160eb07861d1873f706",
    "bugFilePath": "dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java",
    "fixPatch": "diff --git a/dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java b/dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java\nindex c0ac835..e00d1a1 100644\n--- a/dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java\n+++ b/dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java\n@@ -506,15 +506,15 @@\n         }\n \n         for (Map.Entry<JsonGenerator.Feature, Boolean> entry : generatorFeatures.entrySet()) {\n-            mapper.getJsonFactory().configure(entry.getKey(), entry.getValue());\n+            mapper.getFactory().configure(entry.getKey(), entry.getValue());\n         }\n \n         for (Map.Entry<JsonParser.Feature, Boolean> entry : parserFeatures.entrySet()) {\n-            mapper.getJsonFactory().configure(entry.getKey(), entry.getValue());\n+            mapper.getFactory().configure(entry.getKey(), entry.getValue());\n         }\n \n         for (Map.Entry<JsonFactory.Feature, Boolean> entry : factoryFeatures.entrySet()) {\n-            mapper.getJsonFactory().configure(entry.getKey(), entry.getValue());\n+            mapper.getFactory().configure(entry.getKey(), entry.getValue());\n         }\n \n         if (annotationIntrospector != null) {\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 509,
    "bugNodeStartChar": 16719,
    "bugNodeLength": 23,
    "fixLineNum": 509,
    "fixNodeStartChar": 16719,
    "fixNodeLength": 19,
    "sourceBeforeFix": "mapper.getJsonFactory()",
    "sourceAfterFix": "mapper.getFactory()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "007ea4a7f2ba64fad78f78c1b798ca45455719e4",
    "fixCommitParentSHA1": "3688bb8b2bc1509380cbb160eb07861d1873f706",
    "bugFilePath": "dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java",
    "fixPatch": "diff --git a/dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java b/dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java\nindex c0ac835..e00d1a1 100644\n--- a/dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java\n+++ b/dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java\n@@ -506,15 +506,15 @@\n         }\n \n         for (Map.Entry<JsonGenerator.Feature, Boolean> entry : generatorFeatures.entrySet()) {\n-            mapper.getJsonFactory().configure(entry.getKey(), entry.getValue());\n+            mapper.getFactory().configure(entry.getKey(), entry.getValue());\n         }\n \n         for (Map.Entry<JsonParser.Feature, Boolean> entry : parserFeatures.entrySet()) {\n-            mapper.getJsonFactory().configure(entry.getKey(), entry.getValue());\n+            mapper.getFactory().configure(entry.getKey(), entry.getValue());\n         }\n \n         for (Map.Entry<JsonFactory.Feature, Boolean> entry : factoryFeatures.entrySet()) {\n-            mapper.getJsonFactory().configure(entry.getKey(), entry.getValue());\n+            mapper.getFactory().configure(entry.getKey(), entry.getValue());\n         }\n \n         if (annotationIntrospector != null) {\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 513,
    "bugNodeStartChar": 16900,
    "bugNodeLength": 23,
    "fixLineNum": 513,
    "fixNodeStartChar": 16900,
    "fixNodeLength": 19,
    "sourceBeforeFix": "mapper.getJsonFactory()",
    "sourceAfterFix": "mapper.getFactory()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "007ea4a7f2ba64fad78f78c1b798ca45455719e4",
    "fixCommitParentSHA1": "3688bb8b2bc1509380cbb160eb07861d1873f706",
    "bugFilePath": "dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java",
    "fixPatch": "diff --git a/dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java b/dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java\nindex c0ac835..e00d1a1 100644\n--- a/dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java\n+++ b/dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java\n@@ -506,15 +506,15 @@\n         }\n \n         for (Map.Entry<JsonGenerator.Feature, Boolean> entry : generatorFeatures.entrySet()) {\n-            mapper.getJsonFactory().configure(entry.getKey(), entry.getValue());\n+            mapper.getFactory().configure(entry.getKey(), entry.getValue());\n         }\n \n         for (Map.Entry<JsonParser.Feature, Boolean> entry : parserFeatures.entrySet()) {\n-            mapper.getJsonFactory().configure(entry.getKey(), entry.getValue());\n+            mapper.getFactory().configure(entry.getKey(), entry.getValue());\n         }\n \n         for (Map.Entry<JsonFactory.Feature, Boolean> entry : factoryFeatures.entrySet()) {\n-            mapper.getJsonFactory().configure(entry.getKey(), entry.getValue());\n+            mapper.getFactory().configure(entry.getKey(), entry.getValue());\n         }\n \n         if (annotationIntrospector != null) {\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 513,
    "bugNodeStartChar": 16900,
    "bugNodeLength": 23,
    "fixLineNum": 513,
    "fixNodeStartChar": 16900,
    "fixNodeLength": 19,
    "sourceBeforeFix": "mapper.getJsonFactory()",
    "sourceAfterFix": "mapper.getFactory()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "007ea4a7f2ba64fad78f78c1b798ca45455719e4",
    "fixCommitParentSHA1": "3688bb8b2bc1509380cbb160eb07861d1873f706",
    "bugFilePath": "dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java",
    "fixPatch": "diff --git a/dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java b/dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java\nindex c0ac835..e00d1a1 100644\n--- a/dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java\n+++ b/dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java\n@@ -506,15 +506,15 @@\n         }\n \n         for (Map.Entry<JsonGenerator.Feature, Boolean> entry : generatorFeatures.entrySet()) {\n-            mapper.getJsonFactory().configure(entry.getKey(), entry.getValue());\n+            mapper.getFactory().configure(entry.getKey(), entry.getValue());\n         }\n \n         for (Map.Entry<JsonParser.Feature, Boolean> entry : parserFeatures.entrySet()) {\n-            mapper.getJsonFactory().configure(entry.getKey(), entry.getValue());\n+            mapper.getFactory().configure(entry.getKey(), entry.getValue());\n         }\n \n         for (Map.Entry<JsonFactory.Feature, Boolean> entry : factoryFeatures.entrySet()) {\n-            mapper.getJsonFactory().configure(entry.getKey(), entry.getValue());\n+            mapper.getFactory().configure(entry.getKey(), entry.getValue());\n         }\n \n         if (annotationIntrospector != null) {\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 517,
    "bugNodeStartChar": 17083,
    "bugNodeLength": 23,
    "fixLineNum": 517,
    "fixNodeStartChar": 17083,
    "fixNodeLength": 19,
    "sourceBeforeFix": "mapper.getJsonFactory()",
    "sourceAfterFix": "mapper.getFactory()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "007ea4a7f2ba64fad78f78c1b798ca45455719e4",
    "fixCommitParentSHA1": "3688bb8b2bc1509380cbb160eb07861d1873f706",
    "bugFilePath": "dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java",
    "fixPatch": "diff --git a/dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java b/dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java\nindex c0ac835..e00d1a1 100644\n--- a/dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java\n+++ b/dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java\n@@ -506,15 +506,15 @@\n         }\n \n         for (Map.Entry<JsonGenerator.Feature, Boolean> entry : generatorFeatures.entrySet()) {\n-            mapper.getJsonFactory().configure(entry.getKey(), entry.getValue());\n+            mapper.getFactory().configure(entry.getKey(), entry.getValue());\n         }\n \n         for (Map.Entry<JsonParser.Feature, Boolean> entry : parserFeatures.entrySet()) {\n-            mapper.getJsonFactory().configure(entry.getKey(), entry.getValue());\n+            mapper.getFactory().configure(entry.getKey(), entry.getValue());\n         }\n \n         for (Map.Entry<JsonFactory.Feature, Boolean> entry : factoryFeatures.entrySet()) {\n-            mapper.getJsonFactory().configure(entry.getKey(), entry.getValue());\n+            mapper.getFactory().configure(entry.getKey(), entry.getValue());\n         }\n \n         if (annotationIntrospector != null) {\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 517,
    "bugNodeStartChar": 17083,
    "bugNodeLength": 23,
    "fixLineNum": 517,
    "fixNodeStartChar": 17083,
    "fixNodeLength": 19,
    "sourceBeforeFix": "mapper.getJsonFactory()",
    "sourceAfterFix": "mapper.getFactory()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "007ea4a7f2ba64fad78f78c1b798ca45455719e4",
    "fixCommitParentSHA1": "3688bb8b2bc1509380cbb160eb07861d1873f706",
    "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/json/tests/ObjectMapperFactoryTest.java",
    "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/json/tests/ObjectMapperFactoryTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/json/tests/ObjectMapperFactoryTest.java\nindex 7d76493..7a04dff 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/json/tests/ObjectMapperFactoryTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/json/tests/ObjectMapperFactoryTest.java\n@@ -31,7 +31,7 @@\n         final JsonFactory jsonFactory = new YAMLFactory();\n         final ObjectMapper mapper = factory.build(jsonFactory);\n \n-        assertThat(mapper.getJsonFactory())\n+        assertThat(mapper.getFactory())\n                 .isSameAs(jsonFactory);\n     }\n \n@@ -50,7 +50,7 @@\n     public void defaultsToAllowingComments() throws Exception {\n         final ObjectMapper mapper = factory.build();\n \n-        assertThat(mapper.getJsonFactory().isEnabled(JsonParser.Feature.ALLOW_COMMENTS))\n+        assertThat(mapper.getFactory().isEnabled(JsonParser.Feature.ALLOW_COMMENTS))\n                 .isTrue();\n     }\n \n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 34,
    "bugNodeStartChar": 1277,
    "bugNodeLength": 23,
    "fixLineNum": 34,
    "fixNodeStartChar": 1277,
    "fixNodeLength": 19,
    "sourceBeforeFix": "mapper.getJsonFactory()",
    "sourceAfterFix": "mapper.getFactory()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "007ea4a7f2ba64fad78f78c1b798ca45455719e4",
    "fixCommitParentSHA1": "3688bb8b2bc1509380cbb160eb07861d1873f706",
    "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/json/tests/ObjectMapperFactoryTest.java",
    "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/json/tests/ObjectMapperFactoryTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/json/tests/ObjectMapperFactoryTest.java\nindex 7d76493..7a04dff 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/json/tests/ObjectMapperFactoryTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/json/tests/ObjectMapperFactoryTest.java\n@@ -31,7 +31,7 @@\n         final JsonFactory jsonFactory = new YAMLFactory();\n         final ObjectMapper mapper = factory.build(jsonFactory);\n \n-        assertThat(mapper.getJsonFactory())\n+        assertThat(mapper.getFactory())\n                 .isSameAs(jsonFactory);\n     }\n \n@@ -50,7 +50,7 @@\n     public void defaultsToAllowingComments() throws Exception {\n         final ObjectMapper mapper = factory.build();\n \n-        assertThat(mapper.getJsonFactory().isEnabled(JsonParser.Feature.ALLOW_COMMENTS))\n+        assertThat(mapper.getFactory().isEnabled(JsonParser.Feature.ALLOW_COMMENTS))\n                 .isTrue();\n     }\n \n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 34,
    "bugNodeStartChar": 1277,
    "bugNodeLength": 23,
    "fixLineNum": 34,
    "fixNodeStartChar": 1277,
    "fixNodeLength": 19,
    "sourceBeforeFix": "mapper.getJsonFactory()",
    "sourceAfterFix": "mapper.getFactory()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "007ea4a7f2ba64fad78f78c1b798ca45455719e4",
    "fixCommitParentSHA1": "3688bb8b2bc1509380cbb160eb07861d1873f706",
    "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/json/tests/ObjectMapperFactoryTest.java",
    "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/json/tests/ObjectMapperFactoryTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/json/tests/ObjectMapperFactoryTest.java\nindex 7d76493..7a04dff 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/json/tests/ObjectMapperFactoryTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/json/tests/ObjectMapperFactoryTest.java\n@@ -31,7 +31,7 @@\n         final JsonFactory jsonFactory = new YAMLFactory();\n         final ObjectMapper mapper = factory.build(jsonFactory);\n \n-        assertThat(mapper.getJsonFactory())\n+        assertThat(mapper.getFactory())\n                 .isSameAs(jsonFactory);\n     }\n \n@@ -50,7 +50,7 @@\n     public void defaultsToAllowingComments() throws Exception {\n         final ObjectMapper mapper = factory.build();\n \n-        assertThat(mapper.getJsonFactory().isEnabled(JsonParser.Feature.ALLOW_COMMENTS))\n+        assertThat(mapper.getFactory().isEnabled(JsonParser.Feature.ALLOW_COMMENTS))\n                 .isTrue();\n     }\n \n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 53,
    "bugNodeStartChar": 1945,
    "bugNodeLength": 23,
    "fixLineNum": 53,
    "fixNodeStartChar": 1945,
    "fixNodeLength": 19,
    "sourceBeforeFix": "mapper.getJsonFactory()",
    "sourceAfterFix": "mapper.getFactory()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "007ea4a7f2ba64fad78f78c1b798ca45455719e4",
    "fixCommitParentSHA1": "3688bb8b2bc1509380cbb160eb07861d1873f706",
    "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/json/tests/ObjectMapperFactoryTest.java",
    "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/json/tests/ObjectMapperFactoryTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/json/tests/ObjectMapperFactoryTest.java\nindex 7d76493..7a04dff 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/json/tests/ObjectMapperFactoryTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/json/tests/ObjectMapperFactoryTest.java\n@@ -31,7 +31,7 @@\n         final JsonFactory jsonFactory = new YAMLFactory();\n         final ObjectMapper mapper = factory.build(jsonFactory);\n \n-        assertThat(mapper.getJsonFactory())\n+        assertThat(mapper.getFactory())\n                 .isSameAs(jsonFactory);\n     }\n \n@@ -50,7 +50,7 @@\n     public void defaultsToAllowingComments() throws Exception {\n         final ObjectMapper mapper = factory.build();\n \n-        assertThat(mapper.getJsonFactory().isEnabled(JsonParser.Feature.ALLOW_COMMENTS))\n+        assertThat(mapper.getFactory().isEnabled(JsonParser.Feature.ALLOW_COMMENTS))\n                 .isTrue();\n     }\n \n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 53,
    "bugNodeStartChar": 1945,
    "bugNodeLength": 23,
    "fixLineNum": 53,
    "fixNodeStartChar": 1945,
    "fixNodeLength": 19,
    "sourceBeforeFix": "mapper.getJsonFactory()",
    "sourceAfterFix": "mapper.getFactory()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "4dd18ed5c3188be2cfb14efce62e71ae6f19243a",
    "fixCommitParentSHA1": "7b3981c24c0fa959a4015be7abf313dd66ca056a",
    "bugFilePath": "dropwizard-core/src/main/java/com/yammer/dropwizard/tasks/TaskServlet.java",
    "fixPatch": "diff --git a/dropwizard-core/src/main/java/com/yammer/dropwizard/tasks/TaskServlet.java b/dropwizard-core/src/main/java/com/yammer/dropwizard/tasks/TaskServlet.java\nindex d8650ba..4ac5449 100644\n--- a/dropwizard-core/src/main/java/com/yammer/dropwizard/tasks/TaskServlet.java\n+++ b/dropwizard-core/src/main/java/com/yammer/dropwizard/tasks/TaskServlet.java\n@@ -33,7 +33,7 @@\n     public TaskServlet(Iterable<Task> tasks) {\n         final ImmutableMap.Builder<String, Task> builder = ImmutableMap.builder();\n         for (Task task : tasks) {\n-            builder.put(\"/tasks/\" + task.getName(), task);\n+            builder.put(\"/\" + task.getName(), task);\n         }\n         this.tasks = builder.build();\n     }\n@@ -41,7 +41,7 @@\n     @Override\n     protected void doPost(HttpServletRequest req,\n                           HttpServletResponse resp) throws ServletException, IOException {\n-        final Task task = tasks.get(req.getServletPath());\n+        final Task task = tasks.get(req.getPathInfo());\n         if (task != null) {\n             try {\n                 resp.setContentType(MediaType.TEXT_PLAIN);\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 44,
    "bugNodeStartChar": 1652,
    "bugNodeLength": 20,
    "fixLineNum": 44,
    "fixNodeStartChar": 1652,
    "fixNodeLength": 17,
    "sourceBeforeFix": "req.getServletPath()",
    "sourceAfterFix": "req.getPathInfo()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "4dd18ed5c3188be2cfb14efce62e71ae6f19243a",
    "fixCommitParentSHA1": "7b3981c24c0fa959a4015be7abf313dd66ca056a",
    "bugFilePath": "dropwizard-core/src/main/java/com/yammer/dropwizard/tasks/TaskServlet.java",
    "fixPatch": "diff --git a/dropwizard-core/src/main/java/com/yammer/dropwizard/tasks/TaskServlet.java b/dropwizard-core/src/main/java/com/yammer/dropwizard/tasks/TaskServlet.java\nindex d8650ba..4ac5449 100644\n--- a/dropwizard-core/src/main/java/com/yammer/dropwizard/tasks/TaskServlet.java\n+++ b/dropwizard-core/src/main/java/com/yammer/dropwizard/tasks/TaskServlet.java\n@@ -33,7 +33,7 @@\n     public TaskServlet(Iterable<Task> tasks) {\n         final ImmutableMap.Builder<String, Task> builder = ImmutableMap.builder();\n         for (Task task : tasks) {\n-            builder.put(\"/tasks/\" + task.getName(), task);\n+            builder.put(\"/\" + task.getName(), task);\n         }\n         this.tasks = builder.build();\n     }\n@@ -41,7 +41,7 @@\n     @Override\n     protected void doPost(HttpServletRequest req,\n                           HttpServletResponse resp) throws ServletException, IOException {\n-        final Task task = tasks.get(req.getServletPath());\n+        final Task task = tasks.get(req.getPathInfo());\n         if (task != null) {\n             try {\n                 resp.setContentType(MediaType.TEXT_PLAIN);\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 44,
    "bugNodeStartChar": 1652,
    "bugNodeLength": 20,
    "fixLineNum": 44,
    "fixNodeStartChar": 1652,
    "fixNodeLength": 17,
    "sourceBeforeFix": "req.getServletPath()",
    "sourceAfterFix": "req.getPathInfo()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "4dd18ed5c3188be2cfb14efce62e71ae6f19243a",
    "fixCommitParentSHA1": "7b3981c24c0fa959a4015be7abf313dd66ca056a",
    "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java",
    "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\nindex 3c6ad40..9a6d8c1 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n@@ -35,7 +35,7 @@\n     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/test\");\n+        when(request.getPathInfo()).thenReturn(\"/test\");\n \n         servlet.service(request, response);\n \n@@ -47,7 +47,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);\n \n@@ -61,7 +61,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.of(\"runs\")));\n         when(request.getParameterValues(\"runs\")).thenReturn(new String[]{\"1\"});\n         when(response.getWriter()).thenReturn(output);\n@@ -75,7 +75,7 @@\n     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n \n         final RuntimeException ex = new RuntimeException(\"whoops\");\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 38,
    "bugNodeStartChar": 1231,
    "bugNodeLength": 24,
    "fixLineNum": 38,
    "fixNodeStartChar": 1231,
    "fixNodeLength": 21,
    "sourceBeforeFix": "request.getServletPath()",
    "sourceAfterFix": "request.getPathInfo()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "4dd18ed5c3188be2cfb14efce62e71ae6f19243a",
    "fixCommitParentSHA1": "7b3981c24c0fa959a4015be7abf313dd66ca056a",
    "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java",
    "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\nindex 3c6ad40..9a6d8c1 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n@@ -35,7 +35,7 @@\n     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/test\");\n+        when(request.getPathInfo()).thenReturn(\"/test\");\n \n         servlet.service(request, response);\n \n@@ -47,7 +47,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);\n \n@@ -61,7 +61,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.of(\"runs\")));\n         when(request.getParameterValues(\"runs\")).thenReturn(new String[]{\"1\"});\n         when(response.getWriter()).thenReturn(output);\n@@ -75,7 +75,7 @@\n     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n \n         final RuntimeException ex = new RuntimeException(\"whoops\");\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 38,
    "bugNodeStartChar": 1231,
    "bugNodeLength": 24,
    "fixLineNum": 38,
    "fixNodeStartChar": 1231,
    "fixNodeLength": 21,
    "sourceBeforeFix": "request.getServletPath()",
    "sourceAfterFix": "request.getPathInfo()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "4dd18ed5c3188be2cfb14efce62e71ae6f19243a",
    "fixCommitParentSHA1": "7b3981c24c0fa959a4015be7abf313dd66ca056a",
    "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java",
    "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\nindex 3c6ad40..9a6d8c1 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n@@ -35,7 +35,7 @@\n     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/test\");\n+        when(request.getPathInfo()).thenReturn(\"/test\");\n \n         servlet.service(request, response);\n \n@@ -47,7 +47,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);\n \n@@ -61,7 +61,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.of(\"runs\")));\n         when(request.getParameterValues(\"runs\")).thenReturn(new String[]{\"1\"});\n         when(response.getWriter()).thenReturn(output);\n@@ -75,7 +75,7 @@\n     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n \n         final RuntimeException ex = new RuntimeException(\"whoops\");\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 50,
    "bugNodeStartChar": 1572,
    "bugNodeLength": 24,
    "fixLineNum": 50,
    "fixNodeStartChar": 1572,
    "fixNodeLength": 21,
    "sourceBeforeFix": "request.getServletPath()",
    "sourceAfterFix": "request.getPathInfo()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "4dd18ed5c3188be2cfb14efce62e71ae6f19243a",
    "fixCommitParentSHA1": "7b3981c24c0fa959a4015be7abf313dd66ca056a",
    "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java",
    "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\nindex 3c6ad40..9a6d8c1 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n@@ -35,7 +35,7 @@\n     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/test\");\n+        when(request.getPathInfo()).thenReturn(\"/test\");\n \n         servlet.service(request, response);\n \n@@ -47,7 +47,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);\n \n@@ -61,7 +61,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.of(\"runs\")));\n         when(request.getParameterValues(\"runs\")).thenReturn(new String[]{\"1\"});\n         when(response.getWriter()).thenReturn(output);\n@@ -75,7 +75,7 @@\n     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n \n         final RuntimeException ex = new RuntimeException(\"whoops\");\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 50,
    "bugNodeStartChar": 1572,
    "bugNodeLength": 24,
    "fixLineNum": 50,
    "fixNodeStartChar": 1572,
    "fixNodeLength": 21,
    "sourceBeforeFix": "request.getServletPath()",
    "sourceAfterFix": "request.getPathInfo()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "4dd18ed5c3188be2cfb14efce62e71ae6f19243a",
    "fixCommitParentSHA1": "7b3981c24c0fa959a4015be7abf313dd66ca056a",
    "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java",
    "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\nindex 3c6ad40..9a6d8c1 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n@@ -35,7 +35,7 @@\n     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/test\");\n+        when(request.getPathInfo()).thenReturn(\"/test\");\n \n         servlet.service(request, response);\n \n@@ -47,7 +47,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);\n \n@@ -61,7 +61,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.of(\"runs\")));\n         when(request.getParameterValues(\"runs\")).thenReturn(new String[]{\"1\"});\n         when(response.getWriter()).thenReturn(output);\n@@ -75,7 +75,7 @@\n     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n \n         final RuntimeException ex = new RuntimeException(\"whoops\");\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 64,
    "bugNodeStartChar": 2118,
    "bugNodeLength": 24,
    "fixLineNum": 64,
    "fixNodeStartChar": 2118,
    "fixNodeLength": 21,
    "sourceBeforeFix": "request.getServletPath()",
    "sourceAfterFix": "request.getPathInfo()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "4dd18ed5c3188be2cfb14efce62e71ae6f19243a",
    "fixCommitParentSHA1": "7b3981c24c0fa959a4015be7abf313dd66ca056a",
    "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java",
    "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\nindex 3c6ad40..9a6d8c1 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n@@ -35,7 +35,7 @@\n     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/test\");\n+        when(request.getPathInfo()).thenReturn(\"/test\");\n \n         servlet.service(request, response);\n \n@@ -47,7 +47,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);\n \n@@ -61,7 +61,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.of(\"runs\")));\n         when(request.getParameterValues(\"runs\")).thenReturn(new String[]{\"1\"});\n         when(response.getWriter()).thenReturn(output);\n@@ -75,7 +75,7 @@\n     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n \n         final RuntimeException ex = new RuntimeException(\"whoops\");\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 64,
    "bugNodeStartChar": 2118,
    "bugNodeLength": 24,
    "fixLineNum": 64,
    "fixNodeStartChar": 2118,
    "fixNodeLength": 21,
    "sourceBeforeFix": "request.getServletPath()",
    "sourceAfterFix": "request.getPathInfo()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "4dd18ed5c3188be2cfb14efce62e71ae6f19243a",
    "fixCommitParentSHA1": "7b3981c24c0fa959a4015be7abf313dd66ca056a",
    "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java",
    "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\nindex 3c6ad40..9a6d8c1 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n@@ -35,7 +35,7 @@\n     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/test\");\n+        when(request.getPathInfo()).thenReturn(\"/test\");\n \n         servlet.service(request, response);\n \n@@ -47,7 +47,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);\n \n@@ -61,7 +61,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.of(\"runs\")));\n         when(request.getParameterValues(\"runs\")).thenReturn(new String[]{\"1\"});\n         when(response.getWriter()).thenReturn(output);\n@@ -75,7 +75,7 @@\n     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n \n         final RuntimeException ex = new RuntimeException(\"whoops\");\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 78,
    "bugNodeStartChar": 2706,
    "bugNodeLength": 24,
    "fixLineNum": 78,
    "fixNodeStartChar": 2706,
    "fixNodeLength": 21,
    "sourceBeforeFix": "request.getServletPath()",
    "sourceAfterFix": "request.getPathInfo()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "4dd18ed5c3188be2cfb14efce62e71ae6f19243a",
    "fixCommitParentSHA1": "7b3981c24c0fa959a4015be7abf313dd66ca056a",
    "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java",
    "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\nindex 3c6ad40..9a6d8c1 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n@@ -35,7 +35,7 @@\n     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/test\");\n+        when(request.getPathInfo()).thenReturn(\"/test\");\n \n         servlet.service(request, response);\n \n@@ -47,7 +47,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);\n \n@@ -61,7 +61,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.of(\"runs\")));\n         when(request.getParameterValues(\"runs\")).thenReturn(new String[]{\"1\"});\n         when(response.getWriter()).thenReturn(output);\n@@ -75,7 +75,7 @@\n     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n \n         final RuntimeException ex = new RuntimeException(\"whoops\");\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 78,
    "bugNodeStartChar": 2706,
    "bugNodeLength": 24,
    "fixLineNum": 78,
    "fixNodeStartChar": 2706,
    "fixNodeLength": 21,
    "sourceBeforeFix": "request.getServletPath()",
    "sourceAfterFix": "request.getPathInfo()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "af233c9c353322adf1fa91d5e6ca706b9d9d98b7",
    "fixCommitParentSHA1": "7b3981c24c0fa959a4015be7abf313dd66ca056a",
    "bugFilePath": "dropwizard-core/src/main/java/com/yammer/dropwizard/tasks/TaskServlet.java",
    "fixPatch": "diff --git a/dropwizard-core/src/main/java/com/yammer/dropwizard/tasks/TaskServlet.java b/dropwizard-core/src/main/java/com/yammer/dropwizard/tasks/TaskServlet.java\nindex d8650ba..4ac5449 100644\n--- a/dropwizard-core/src/main/java/com/yammer/dropwizard/tasks/TaskServlet.java\n+++ b/dropwizard-core/src/main/java/com/yammer/dropwizard/tasks/TaskServlet.java\n@@ -33,7 +33,7 @@\n     public TaskServlet(Iterable<Task> tasks) {\n         final ImmutableMap.Builder<String, Task> builder = ImmutableMap.builder();\n         for (Task task : tasks) {\n-            builder.put(\"/tasks/\" + task.getName(), task);\n+            builder.put(\"/\" + task.getName(), task);\n         }\n         this.tasks = builder.build();\n     }\n@@ -41,7 +41,7 @@\n     @Override\n     protected void doPost(HttpServletRequest req,\n                           HttpServletResponse resp) throws ServletException, IOException {\n-        final Task task = tasks.get(req.getServletPath());\n+        final Task task = tasks.get(req.getPathInfo());\n         if (task != null) {\n             try {\n                 resp.setContentType(MediaType.TEXT_PLAIN);\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 44,
    "bugNodeStartChar": 1652,
    "bugNodeLength": 20,
    "fixLineNum": 44,
    "fixNodeStartChar": 1652,
    "fixNodeLength": 17,
    "sourceBeforeFix": "req.getServletPath()",
    "sourceAfterFix": "req.getPathInfo()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "af233c9c353322adf1fa91d5e6ca706b9d9d98b7",
    "fixCommitParentSHA1": "7b3981c24c0fa959a4015be7abf313dd66ca056a",
    "bugFilePath": "dropwizard-core/src/main/java/com/yammer/dropwizard/tasks/TaskServlet.java",
    "fixPatch": "diff --git a/dropwizard-core/src/main/java/com/yammer/dropwizard/tasks/TaskServlet.java b/dropwizard-core/src/main/java/com/yammer/dropwizard/tasks/TaskServlet.java\nindex d8650ba..4ac5449 100644\n--- a/dropwizard-core/src/main/java/com/yammer/dropwizard/tasks/TaskServlet.java\n+++ b/dropwizard-core/src/main/java/com/yammer/dropwizard/tasks/TaskServlet.java\n@@ -33,7 +33,7 @@\n     public TaskServlet(Iterable<Task> tasks) {\n         final ImmutableMap.Builder<String, Task> builder = ImmutableMap.builder();\n         for (Task task : tasks) {\n-            builder.put(\"/tasks/\" + task.getName(), task);\n+            builder.put(\"/\" + task.getName(), task);\n         }\n         this.tasks = builder.build();\n     }\n@@ -41,7 +41,7 @@\n     @Override\n     protected void doPost(HttpServletRequest req,\n                           HttpServletResponse resp) throws ServletException, IOException {\n-        final Task task = tasks.get(req.getServletPath());\n+        final Task task = tasks.get(req.getPathInfo());\n         if (task != null) {\n             try {\n                 resp.setContentType(MediaType.TEXT_PLAIN);\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 44,
    "bugNodeStartChar": 1652,
    "bugNodeLength": 20,
    "fixLineNum": 44,
    "fixNodeStartChar": 1652,
    "fixNodeLength": 17,
    "sourceBeforeFix": "req.getServletPath()",
    "sourceAfterFix": "req.getPathInfo()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "af233c9c353322adf1fa91d5e6ca706b9d9d98b7",
    "fixCommitParentSHA1": "7b3981c24c0fa959a4015be7abf313dd66ca056a",
    "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java",
    "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\nindex 3c6ad40..9a6d8c1 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n@@ -35,7 +35,7 @@\n     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/test\");\n+        when(request.getPathInfo()).thenReturn(\"/test\");\n \n         servlet.service(request, response);\n \n@@ -47,7 +47,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);\n \n@@ -61,7 +61,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.of(\"runs\")));\n         when(request.getParameterValues(\"runs\")).thenReturn(new String[]{\"1\"});\n         when(response.getWriter()).thenReturn(output);\n@@ -75,7 +75,7 @@\n     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n \n         final RuntimeException ex = new RuntimeException(\"whoops\");\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 38,
    "bugNodeStartChar": 1231,
    "bugNodeLength": 24,
    "fixLineNum": 38,
    "fixNodeStartChar": 1231,
    "fixNodeLength": 21,
    "sourceBeforeFix": "request.getServletPath()",
    "sourceAfterFix": "request.getPathInfo()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "af233c9c353322adf1fa91d5e6ca706b9d9d98b7",
    "fixCommitParentSHA1": "7b3981c24c0fa959a4015be7abf313dd66ca056a",
    "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java",
    "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\nindex 3c6ad40..9a6d8c1 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n@@ -35,7 +35,7 @@\n     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/test\");\n+        when(request.getPathInfo()).thenReturn(\"/test\");\n \n         servlet.service(request, response);\n \n@@ -47,7 +47,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);\n \n@@ -61,7 +61,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.of(\"runs\")));\n         when(request.getParameterValues(\"runs\")).thenReturn(new String[]{\"1\"});\n         when(response.getWriter()).thenReturn(output);\n@@ -75,7 +75,7 @@\n     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n \n         final RuntimeException ex = new RuntimeException(\"whoops\");\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 38,
    "bugNodeStartChar": 1231,
    "bugNodeLength": 24,
    "fixLineNum": 38,
    "fixNodeStartChar": 1231,
    "fixNodeLength": 21,
    "sourceBeforeFix": "request.getServletPath()",
    "sourceAfterFix": "request.getPathInfo()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "af233c9c353322adf1fa91d5e6ca706b9d9d98b7",
    "fixCommitParentSHA1": "7b3981c24c0fa959a4015be7abf313dd66ca056a",
    "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java",
    "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\nindex 3c6ad40..9a6d8c1 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n@@ -35,7 +35,7 @@\n     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/test\");\n+        when(request.getPathInfo()).thenReturn(\"/test\");\n \n         servlet.service(request, response);\n \n@@ -47,7 +47,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);\n \n@@ -61,7 +61,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.of(\"runs\")));\n         when(request.getParameterValues(\"runs\")).thenReturn(new String[]{\"1\"});\n         when(response.getWriter()).thenReturn(output);\n@@ -75,7 +75,7 @@\n     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n \n         final RuntimeException ex = new RuntimeException(\"whoops\");\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 50,
    "bugNodeStartChar": 1572,
    "bugNodeLength": 24,
    "fixLineNum": 50,
    "fixNodeStartChar": 1572,
    "fixNodeLength": 21,
    "sourceBeforeFix": "request.getServletPath()",
    "sourceAfterFix": "request.getPathInfo()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "af233c9c353322adf1fa91d5e6ca706b9d9d98b7",
    "fixCommitParentSHA1": "7b3981c24c0fa959a4015be7abf313dd66ca056a",
    "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java",
    "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\nindex 3c6ad40..9a6d8c1 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n@@ -35,7 +35,7 @@\n     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/test\");\n+        when(request.getPathInfo()).thenReturn(\"/test\");\n \n         servlet.service(request, response);\n \n@@ -47,7 +47,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);\n \n@@ -61,7 +61,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.of(\"runs\")));\n         when(request.getParameterValues(\"runs\")).thenReturn(new String[]{\"1\"});\n         when(response.getWriter()).thenReturn(output);\n@@ -75,7 +75,7 @@\n     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n \n         final RuntimeException ex = new RuntimeException(\"whoops\");\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 50,
    "bugNodeStartChar": 1572,
    "bugNodeLength": 24,
    "fixLineNum": 50,
    "fixNodeStartChar": 1572,
    "fixNodeLength": 21,
    "sourceBeforeFix": "request.getServletPath()",
    "sourceAfterFix": "request.getPathInfo()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "af233c9c353322adf1fa91d5e6ca706b9d9d98b7",
    "fixCommitParentSHA1": "7b3981c24c0fa959a4015be7abf313dd66ca056a",
    "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java",
    "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\nindex 3c6ad40..9a6d8c1 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n@@ -35,7 +35,7 @@\n     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/test\");\n+        when(request.getPathInfo()).thenReturn(\"/test\");\n \n         servlet.service(request, response);\n \n@@ -47,7 +47,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);\n \n@@ -61,7 +61,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.of(\"runs\")));\n         when(request.getParameterValues(\"runs\")).thenReturn(new String[]{\"1\"});\n         when(response.getWriter()).thenReturn(output);\n@@ -75,7 +75,7 @@\n     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n \n         final RuntimeException ex = new RuntimeException(\"whoops\");\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 64,
    "bugNodeStartChar": 2118,
    "bugNodeLength": 24,
    "fixLineNum": 64,
    "fixNodeStartChar": 2118,
    "fixNodeLength": 21,
    "sourceBeforeFix": "request.getServletPath()",
    "sourceAfterFix": "request.getPathInfo()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "af233c9c353322adf1fa91d5e6ca706b9d9d98b7",
    "fixCommitParentSHA1": "7b3981c24c0fa959a4015be7abf313dd66ca056a",
    "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java",
    "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\nindex 3c6ad40..9a6d8c1 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n@@ -35,7 +35,7 @@\n     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/test\");\n+        when(request.getPathInfo()).thenReturn(\"/test\");\n \n         servlet.service(request, response);\n \n@@ -47,7 +47,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);\n \n@@ -61,7 +61,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.of(\"runs\")));\n         when(request.getParameterValues(\"runs\")).thenReturn(new String[]{\"1\"});\n         when(response.getWriter()).thenReturn(output);\n@@ -75,7 +75,7 @@\n     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n \n         final RuntimeException ex = new RuntimeException(\"whoops\");\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 64,
    "bugNodeStartChar": 2118,
    "bugNodeLength": 24,
    "fixLineNum": 64,
    "fixNodeStartChar": 2118,
    "fixNodeLength": 21,
    "sourceBeforeFix": "request.getServletPath()",
    "sourceAfterFix": "request.getPathInfo()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "af233c9c353322adf1fa91d5e6ca706b9d9d98b7",
    "fixCommitParentSHA1": "7b3981c24c0fa959a4015be7abf313dd66ca056a",
    "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java",
    "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\nindex 3c6ad40..9a6d8c1 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n@@ -35,7 +35,7 @@\n     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/test\");\n+        when(request.getPathInfo()).thenReturn(\"/test\");\n \n         servlet.service(request, response);\n \n@@ -47,7 +47,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);\n \n@@ -61,7 +61,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.of(\"runs\")));\n         when(request.getParameterValues(\"runs\")).thenReturn(new String[]{\"1\"});\n         when(response.getWriter()).thenReturn(output);\n@@ -75,7 +75,7 @@\n     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n \n         final RuntimeException ex = new RuntimeException(\"whoops\");\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 78,
    "bugNodeStartChar": 2706,
    "bugNodeLength": 24,
    "fixLineNum": 78,
    "fixNodeStartChar": 2706,
    "fixNodeLength": 21,
    "sourceBeforeFix": "request.getServletPath()",
    "sourceAfterFix": "request.getPathInfo()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "af233c9c353322adf1fa91d5e6ca706b9d9d98b7",
    "fixCommitParentSHA1": "7b3981c24c0fa959a4015be7abf313dd66ca056a",
    "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java",
    "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\nindex 3c6ad40..9a6d8c1 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n@@ -35,7 +35,7 @@\n     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/test\");\n+        when(request.getPathInfo()).thenReturn(\"/test\");\n \n         servlet.service(request, response);\n \n@@ -47,7 +47,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);\n \n@@ -61,7 +61,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.of(\"runs\")));\n         when(request.getParameterValues(\"runs\")).thenReturn(new String[]{\"1\"});\n         when(response.getWriter()).thenReturn(output);\n@@ -75,7 +75,7 @@\n     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n \n         final RuntimeException ex = new RuntimeException(\"whoops\");\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 78,
    "bugNodeStartChar": 2706,
    "bugNodeLength": 24,
    "fixLineNum": 78,
    "fixNodeStartChar": 2706,
    "fixNodeLength": 21,
    "sourceBeforeFix": "request.getServletPath()",
    "sourceAfterFix": "request.getPathInfo()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "c30e67b81a0d9ac45c4151d20a960e542ad97b4f",
    "fixCommitParentSHA1": "ede3211220bcce5b4a26a492f702a2b0d5524caf",
    "bugFilePath": "dropwizard-core/src/main/java/com/yammer/dropwizard/tasks/TaskServlet.java",
    "fixPatch": "diff --git a/dropwizard-core/src/main/java/com/yammer/dropwizard/tasks/TaskServlet.java b/dropwizard-core/src/main/java/com/yammer/dropwizard/tasks/TaskServlet.java\nindex da3b8f8..d8650ba 100644\n--- a/dropwizard-core/src/main/java/com/yammer/dropwizard/tasks/TaskServlet.java\n+++ b/dropwizard-core/src/main/java/com/yammer/dropwizard/tasks/TaskServlet.java\n@@ -41,7 +41,7 @@\n     @Override\n     protected void doPost(HttpServletRequest req,\n                           HttpServletResponse resp) throws ServletException, IOException {\n-        final Task task = tasks.get(req.getRequestURI());\n+        final Task task = tasks.get(req.getServletPath());\n         if (task != null) {\n             try {\n                 resp.setContentType(MediaType.TEXT_PLAIN);\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 44,
    "bugNodeStartChar": 1652,
    "bugNodeLength": 19,
    "fixLineNum": 44,
    "fixNodeStartChar": 1652,
    "fixNodeLength": 20,
    "sourceBeforeFix": "req.getRequestURI()",
    "sourceAfterFix": "req.getServletPath()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "c30e67b81a0d9ac45c4151d20a960e542ad97b4f",
    "fixCommitParentSHA1": "ede3211220bcce5b4a26a492f702a2b0d5524caf",
    "bugFilePath": "dropwizard-core/src/main/java/com/yammer/dropwizard/tasks/TaskServlet.java",
    "fixPatch": "diff --git a/dropwizard-core/src/main/java/com/yammer/dropwizard/tasks/TaskServlet.java b/dropwizard-core/src/main/java/com/yammer/dropwizard/tasks/TaskServlet.java\nindex da3b8f8..d8650ba 100644\n--- a/dropwizard-core/src/main/java/com/yammer/dropwizard/tasks/TaskServlet.java\n+++ b/dropwizard-core/src/main/java/com/yammer/dropwizard/tasks/TaskServlet.java\n@@ -41,7 +41,7 @@\n     @Override\n     protected void doPost(HttpServletRequest req,\n                           HttpServletResponse resp) throws ServletException, IOException {\n-        final Task task = tasks.get(req.getRequestURI());\n+        final Task task = tasks.get(req.getServletPath());\n         if (task != null) {\n             try {\n                 resp.setContentType(MediaType.TEXT_PLAIN);\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 44,
    "bugNodeStartChar": 1652,
    "bugNodeLength": 19,
    "fixLineNum": 44,
    "fixNodeStartChar": 1652,
    "fixNodeLength": 20,
    "sourceBeforeFix": "req.getRequestURI()",
    "sourceAfterFix": "req.getServletPath()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "c30e67b81a0d9ac45c4151d20a960e542ad97b4f",
    "fixCommitParentSHA1": "ede3211220bcce5b4a26a492f702a2b0d5524caf",
    "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java",
    "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\nindex 411786b..3c6ad40 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n@@ -35,7 +35,7 @@\n     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/test\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/test\");\n \n         servlet.service(request, response);\n \n@@ -47,7 +47,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/gc\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);\n \n@@ -61,7 +61,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/gc\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.of(\"runs\")));\n         when(request.getParameterValues(\"runs\")).thenReturn(new String[]{\"1\"});\n         when(response.getWriter()).thenReturn(output);\n@@ -75,7 +75,7 @@\n     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/gc\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n \n         final RuntimeException ex = new RuntimeException(\"whoops\");\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 38,
    "bugNodeStartChar": 1231,
    "bugNodeLength": 23,
    "fixLineNum": 38,
    "fixNodeStartChar": 1231,
    "fixNodeLength": 24,
    "sourceBeforeFix": "request.getRequestURI()",
    "sourceAfterFix": "request.getServletPath()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "c30e67b81a0d9ac45c4151d20a960e542ad97b4f",
    "fixCommitParentSHA1": "ede3211220bcce5b4a26a492f702a2b0d5524caf",
    "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java",
    "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\nindex 411786b..3c6ad40 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n@@ -35,7 +35,7 @@\n     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/test\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/test\");\n \n         servlet.service(request, response);\n \n@@ -47,7 +47,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/gc\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);\n \n@@ -61,7 +61,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/gc\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.of(\"runs\")));\n         when(request.getParameterValues(\"runs\")).thenReturn(new String[]{\"1\"});\n         when(response.getWriter()).thenReturn(output);\n@@ -75,7 +75,7 @@\n     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/gc\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n \n         final RuntimeException ex = new RuntimeException(\"whoops\");\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 38,
    "bugNodeStartChar": 1231,
    "bugNodeLength": 23,
    "fixLineNum": 38,
    "fixNodeStartChar": 1231,
    "fixNodeLength": 24,
    "sourceBeforeFix": "request.getRequestURI()",
    "sourceAfterFix": "request.getServletPath()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "c30e67b81a0d9ac45c4151d20a960e542ad97b4f",
    "fixCommitParentSHA1": "ede3211220bcce5b4a26a492f702a2b0d5524caf",
    "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java",
    "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\nindex 411786b..3c6ad40 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n@@ -35,7 +35,7 @@\n     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/test\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/test\");\n \n         servlet.service(request, response);\n \n@@ -47,7 +47,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/gc\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);\n \n@@ -61,7 +61,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/gc\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.of(\"runs\")));\n         when(request.getParameterValues(\"runs\")).thenReturn(new String[]{\"1\"});\n         when(response.getWriter()).thenReturn(output);\n@@ -75,7 +75,7 @@\n     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/gc\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n \n         final RuntimeException ex = new RuntimeException(\"whoops\");\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 50,
    "bugNodeStartChar": 1571,
    "bugNodeLength": 23,
    "fixLineNum": 50,
    "fixNodeStartChar": 1571,
    "fixNodeLength": 24,
    "sourceBeforeFix": "request.getRequestURI()",
    "sourceAfterFix": "request.getServletPath()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "c30e67b81a0d9ac45c4151d20a960e542ad97b4f",
    "fixCommitParentSHA1": "ede3211220bcce5b4a26a492f702a2b0d5524caf",
    "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java",
    "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\nindex 411786b..3c6ad40 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n@@ -35,7 +35,7 @@\n     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/test\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/test\");\n \n         servlet.service(request, response);\n \n@@ -47,7 +47,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/gc\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);\n \n@@ -61,7 +61,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/gc\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.of(\"runs\")));\n         when(request.getParameterValues(\"runs\")).thenReturn(new String[]{\"1\"});\n         when(response.getWriter()).thenReturn(output);\n@@ -75,7 +75,7 @@\n     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/gc\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n \n         final RuntimeException ex = new RuntimeException(\"whoops\");\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 50,
    "bugNodeStartChar": 1571,
    "bugNodeLength": 23,
    "fixLineNum": 50,
    "fixNodeStartChar": 1571,
    "fixNodeLength": 24,
    "sourceBeforeFix": "request.getRequestURI()",
    "sourceAfterFix": "request.getServletPath()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "c30e67b81a0d9ac45c4151d20a960e542ad97b4f",
    "fixCommitParentSHA1": "ede3211220bcce5b4a26a492f702a2b0d5524caf",
    "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java",
    "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\nindex 411786b..3c6ad40 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n@@ -35,7 +35,7 @@\n     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/test\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/test\");\n \n         servlet.service(request, response);\n \n@@ -47,7 +47,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/gc\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);\n \n@@ -61,7 +61,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/gc\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.of(\"runs\")));\n         when(request.getParameterValues(\"runs\")).thenReturn(new String[]{\"1\"});\n         when(response.getWriter()).thenReturn(output);\n@@ -75,7 +75,7 @@\n     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/gc\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n \n         final RuntimeException ex = new RuntimeException(\"whoops\");\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 64,
    "bugNodeStartChar": 2116,
    "bugNodeLength": 23,
    "fixLineNum": 64,
    "fixNodeStartChar": 2116,
    "fixNodeLength": 24,
    "sourceBeforeFix": "request.getRequestURI()",
    "sourceAfterFix": "request.getServletPath()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "c30e67b81a0d9ac45c4151d20a960e542ad97b4f",
    "fixCommitParentSHA1": "ede3211220bcce5b4a26a492f702a2b0d5524caf",
    "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java",
    "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\nindex 411786b..3c6ad40 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n@@ -35,7 +35,7 @@\n     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/test\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/test\");\n \n         servlet.service(request, response);\n \n@@ -47,7 +47,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/gc\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);\n \n@@ -61,7 +61,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/gc\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.of(\"runs\")));\n         when(request.getParameterValues(\"runs\")).thenReturn(new String[]{\"1\"});\n         when(response.getWriter()).thenReturn(output);\n@@ -75,7 +75,7 @@\n     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/gc\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n \n         final RuntimeException ex = new RuntimeException(\"whoops\");\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 64,
    "bugNodeStartChar": 2116,
    "bugNodeLength": 23,
    "fixLineNum": 64,
    "fixNodeStartChar": 2116,
    "fixNodeLength": 24,
    "sourceBeforeFix": "request.getRequestURI()",
    "sourceAfterFix": "request.getServletPath()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "c30e67b81a0d9ac45c4151d20a960e542ad97b4f",
    "fixCommitParentSHA1": "ede3211220bcce5b4a26a492f702a2b0d5524caf",
    "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java",
    "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\nindex 411786b..3c6ad40 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n@@ -35,7 +35,7 @@\n     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/test\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/test\");\n \n         servlet.service(request, response);\n \n@@ -47,7 +47,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/gc\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);\n \n@@ -61,7 +61,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/gc\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.of(\"runs\")));\n         when(request.getParameterValues(\"runs\")).thenReturn(new String[]{\"1\"});\n         when(response.getWriter()).thenReturn(output);\n@@ -75,7 +75,7 @@\n     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/gc\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n \n         final RuntimeException ex = new RuntimeException(\"whoops\");\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 78,
    "bugNodeStartChar": 2703,
    "bugNodeLength": 23,
    "fixLineNum": 78,
    "fixNodeStartChar": 2703,
    "fixNodeLength": 24,
    "sourceBeforeFix": "request.getRequestURI()",
    "sourceAfterFix": "request.getServletPath()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "c30e67b81a0d9ac45c4151d20a960e542ad97b4f",
    "fixCommitParentSHA1": "ede3211220bcce5b4a26a492f702a2b0d5524caf",
    "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java",
    "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\nindex 411786b..3c6ad40 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n@@ -35,7 +35,7 @@\n     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/test\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/test\");\n \n         servlet.service(request, response);\n \n@@ -47,7 +47,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/gc\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);\n \n@@ -61,7 +61,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/gc\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.of(\"runs\")));\n         when(request.getParameterValues(\"runs\")).thenReturn(new String[]{\"1\"});\n         when(response.getWriter()).thenReturn(output);\n@@ -75,7 +75,7 @@\n     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getRequestURI()).thenReturn(\"/tasks/gc\");\n+        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n \n         final RuntimeException ex = new RuntimeException(\"whoops\");\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 78,
    "bugNodeStartChar": 2703,
    "bugNodeLength": 23,
    "fixLineNum": 78,
    "fixNodeStartChar": 2703,
    "fixNodeLength": 24,
    "sourceBeforeFix": "request.getRequestURI()",
    "sourceAfterFix": "request.getServletPath()"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "fba9a30f54fc576f1c2e45e2aa8f8a247648090a",
    "fixCommitParentSHA1": "75a0d993c38122429eff2656a9fead84efe10002",
    "bugFilePath": "dropwizard-core/src/main/java/com/yammer/dropwizard/bundles/AssetsBundle.java",
    "fixPatch": "diff --git a/dropwizard-core/src/main/java/com/yammer/dropwizard/bundles/AssetsBundle.java b/dropwizard-core/src/main/java/com/yammer/dropwizard/bundles/AssetsBundle.java\nindex 4423c3e..fd5f88e 100644\n--- a/dropwizard-core/src/main/java/com/yammer/dropwizard/bundles/AssetsBundle.java\n+++ b/dropwizard-core/src/main/java/com/yammer/dropwizard/bundles/AssetsBundle.java\n@@ -80,7 +80,7 @@\n      */\n     public AssetsBundle(String resourcePath, CacheBuilderSpec cacheBuilderSpec, String uriPath) {\n         checkArgument(resourcePath.startsWith(\"/\"), \"%s is not an absolute path\", resourcePath);\n-        checkArgument(!\"/\".equals(resourcePath), \"%s is the classpath root\");\n+        checkArgument(!\"/\".equals(resourcePath), \"%s is the classpath root\", resourcePath);\n         this.resourcePath = resourcePath.endsWith(\"/\") ? resourcePath : (resourcePath + '/');\n         this.uriPath = uriPath.endsWith(\"/\") ? uriPath : (uriPath + '/');\n         this.cacheBuilderSpec = cacheBuilderSpec;\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 83,
    "bugNodeStartChar": 3900,
    "bugNodeLength": 68,
    "fixLineNum": 83,
    "fixNodeStartChar": 3900,
    "fixNodeLength": 82,
    "sourceBeforeFix": "checkArgument(!\"/\".equals(resourcePath),\"%s is the classpath root\")",
    "sourceAfterFix": "checkArgument(!\"/\".equals(resourcePath),\"%s is the classpath root\",resourcePath)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "4d02d8420b321434b0995577a14e291bb1c5984d",
    "fixCommitParentSHA1": "75a0d993c38122429eff2656a9fead84efe10002",
    "bugFilePath": "dropwizard-core/src/main/java/com/yammer/dropwizard/bundles/AssetsBundle.java",
    "fixPatch": "diff --git a/dropwizard-core/src/main/java/com/yammer/dropwizard/bundles/AssetsBundle.java b/dropwizard-core/src/main/java/com/yammer/dropwizard/bundles/AssetsBundle.java\nindex 4423c3e..fd5f88e 100644\n--- a/dropwizard-core/src/main/java/com/yammer/dropwizard/bundles/AssetsBundle.java\n+++ b/dropwizard-core/src/main/java/com/yammer/dropwizard/bundles/AssetsBundle.java\n@@ -80,7 +80,7 @@\n      */\n     public AssetsBundle(String resourcePath, CacheBuilderSpec cacheBuilderSpec, String uriPath) {\n         checkArgument(resourcePath.startsWith(\"/\"), \"%s is not an absolute path\", resourcePath);\n-        checkArgument(!\"/\".equals(resourcePath), \"%s is the classpath root\");\n+        checkArgument(!\"/\".equals(resourcePath), \"%s is the classpath root\", resourcePath);\n         this.resourcePath = resourcePath.endsWith(\"/\") ? resourcePath : (resourcePath + '/');\n         this.uriPath = uriPath.endsWith(\"/\") ? uriPath : (uriPath + '/');\n         this.cacheBuilderSpec = cacheBuilderSpec;\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 83,
    "bugNodeStartChar": 3900,
    "bugNodeLength": 68,
    "fixLineNum": 83,
    "fixNodeStartChar": 3900,
    "fixNodeLength": 82,
    "sourceBeforeFix": "checkArgument(!\"/\".equals(resourcePath),\"%s is the classpath root\")",
    "sourceAfterFix": "checkArgument(!\"/\".equals(resourcePath),\"%s is the classpath root\",resourcePath)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "aa06e70805134fbc1b08d1e4b0c81ea6160cb815",
    "fixCommitParentSHA1": "16effe4dd25e37ac7208c9068a9285d9d3f13017",
    "bugFilePath": "dropwizard-core/src/main/java/com/yammer/dropwizard/logging/LoggingBean.java",
    "fixPatch": "diff --git a/dropwizard-core/src/main/java/com/yammer/dropwizard/logging/LoggingBean.java b/dropwizard-core/src/main/java/com/yammer/dropwizard/logging/LoggingBean.java\nindex 44ca89e..eec0383 100644\n--- a/dropwizard-core/src/main/java/com/yammer/dropwizard/logging/LoggingBean.java\n+++ b/dropwizard-core/src/main/java/com/yammer/dropwizard/logging/LoggingBean.java\n@@ -17,7 +17,7 @@\n public class LoggingBean implements LoggingMXBean {\n     @Override\n     public String getLoggerLevel(String loggerName) {\n-        return Logger.getLogger(loggerName).getLevel().toString();\n+        return Logger.getLogger(loggerName).getEffectiveLevel().toString();\n     }\n \n     @Override\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 20,
    "bugNodeStartChar": 569,
    "bugNodeLength": 39,
    "fixLineNum": 20,
    "fixNodeStartChar": 569,
    "fixNodeLength": 48,
    "sourceBeforeFix": "Logger.getLogger(loggerName).getLevel()",
    "sourceAfterFix": "Logger.getLogger(loggerName).getEffectiveLevel()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "aa06e70805134fbc1b08d1e4b0c81ea6160cb815",
    "fixCommitParentSHA1": "16effe4dd25e37ac7208c9068a9285d9d3f13017",
    "bugFilePath": "dropwizard-core/src/main/java/com/yammer/dropwizard/logging/LoggingBean.java",
    "fixPatch": "diff --git a/dropwizard-core/src/main/java/com/yammer/dropwizard/logging/LoggingBean.java b/dropwizard-core/src/main/java/com/yammer/dropwizard/logging/LoggingBean.java\nindex 44ca89e..eec0383 100644\n--- a/dropwizard-core/src/main/java/com/yammer/dropwizard/logging/LoggingBean.java\n+++ b/dropwizard-core/src/main/java/com/yammer/dropwizard/logging/LoggingBean.java\n@@ -17,7 +17,7 @@\n public class LoggingBean implements LoggingMXBean {\n     @Override\n     public String getLoggerLevel(String loggerName) {\n-        return Logger.getLogger(loggerName).getLevel().toString();\n+        return Logger.getLogger(loggerName).getEffectiveLevel().toString();\n     }\n \n     @Override\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 20,
    "bugNodeStartChar": 569,
    "bugNodeLength": 39,
    "fixLineNum": 20,
    "fixNodeStartChar": 569,
    "fixNodeLength": 48,
    "sourceBeforeFix": "Logger.getLogger(loggerName).getLevel()",
    "sourceAfterFix": "Logger.getLogger(loggerName).getEffectiveLevel()"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "1dd50dfae2c7d4853f7d04351d8cbfc77cfc922f",
    "fixCommitParentSHA1": "130958dde711e8870c5b72dc4f8b9b2d9d8f9c77",
    "bugFilePath": "dropwizard-core/src/main/java/com/yammer/dropwizard/config/HttpConfiguration.java",
    "fixPatch": "diff --git a/dropwizard-core/src/main/java/com/yammer/dropwizard/config/HttpConfiguration.java b/dropwizard-core/src/main/java/com/yammer/dropwizard/config/HttpConfiguration.java\nindex 6062485..1a91dc1 100644\n--- a/dropwizard-core/src/main/java/com/yammer/dropwizard/config/HttpConfiguration.java\n+++ b/dropwizard-core/src/main/java/com/yammer/dropwizard/config/HttpConfiguration.java\n@@ -86,11 +86,11 @@\n \n     @NotNull\n     @JsonProperty\n-    private Size requestBufferSize = Size.kilobytes(32);\n+    private Size requestBufferSize = Size.kilobytes(16);\n \n     @NotNull\n     @JsonProperty\n-    private Size requestHeaderBufferSize = Size.kilobytes(3);\n+    private Size requestHeaderBufferSize = Size.kilobytes(6);\n \n     @NotNull\n     @JsonProperty\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 89,
    "bugNodeStartChar": 2072,
    "bugNodeLength": 18,
    "fixLineNum": 89,
    "fixNodeStartChar": 2072,
    "fixNodeLength": 18,
    "sourceBeforeFix": "Size.kilobytes(32)",
    "sourceAfterFix": "Size.kilobytes(16)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "1dd50dfae2c7d4853f7d04351d8cbfc77cfc922f",
    "fixCommitParentSHA1": "130958dde711e8870c5b72dc4f8b9b2d9d8f9c77",
    "bugFilePath": "dropwizard-core/src/main/java/com/yammer/dropwizard/config/HttpConfiguration.java",
    "fixPatch": "diff --git a/dropwizard-core/src/main/java/com/yammer/dropwizard/config/HttpConfiguration.java b/dropwizard-core/src/main/java/com/yammer/dropwizard/config/HttpConfiguration.java\nindex 6062485..1a91dc1 100644\n--- a/dropwizard-core/src/main/java/com/yammer/dropwizard/config/HttpConfiguration.java\n+++ b/dropwizard-core/src/main/java/com/yammer/dropwizard/config/HttpConfiguration.java\n@@ -86,11 +86,11 @@\n \n     @NotNull\n     @JsonProperty\n-    private Size requestBufferSize = Size.kilobytes(32);\n+    private Size requestBufferSize = Size.kilobytes(16);\n \n     @NotNull\n     @JsonProperty\n-    private Size requestHeaderBufferSize = Size.kilobytes(3);\n+    private Size requestHeaderBufferSize = Size.kilobytes(6);\n \n     @NotNull\n     @JsonProperty\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 93,
    "bugNodeStartChar": 2167,
    "bugNodeLength": 17,
    "fixLineNum": 93,
    "fixNodeStartChar": 2167,
    "fixNodeLength": 17,
    "sourceBeforeFix": "Size.kilobytes(3)",
    "sourceAfterFix": "Size.kilobytes(6)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "d3e163dbea08a905f9b0ee0bbc89da7e89d03d20",
    "fixCommitParentSHA1": "a66fcb1328eecd41eebdf6be8e93cb4810971ace",
    "bugFilePath": "dropwizard-core/src/main/java/com/yammer/dropwizard/config/HttpConfiguration.java",
    "fixPatch": "diff --git a/dropwizard-core/src/main/java/com/yammer/dropwizard/config/HttpConfiguration.java b/dropwizard-core/src/main/java/com/yammer/dropwizard/config/HttpConfiguration.java\nindex 29a8835..91707e6 100644\n--- a/dropwizard-core/src/main/java/com/yammer/dropwizard/config/HttpConfiguration.java\n+++ b/dropwizard-core/src/main/java/com/yammer/dropwizard/config/HttpConfiguration.java\n@@ -64,7 +64,7 @@\n \n     @NotNull\n     @JsonProperty\n-    private Duration maxIdleTime = Duration.seconds(1);\n+    private Duration maxIdleTime = Duration.seconds(200);\n \n     @Min(1)\n     @Max(128)\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 67,
    "bugNodeStartChar": 1622,
    "bugNodeLength": 19,
    "fixLineNum": 67,
    "fixNodeStartChar": 1622,
    "fixNodeLength": 21,
    "sourceBeforeFix": "Duration.seconds(1)",
    "sourceAfterFix": "Duration.seconds(200)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "a6e3cf98a60a9dcf8de13232df29a6b059d46442",
    "fixCommitParentSHA1": "5b158f1d0cde438929d420a2984bdf09a88b2ab5",
    "bugFilePath": "dropwizard-testing/src/main/java/com/yammer/dropwizard/testing/JsonHelpers.java",
    "fixPatch": "diff --git a/dropwizard-testing/src/main/java/com/yammer/dropwizard/testing/JsonHelpers.java b/dropwizard-testing/src/main/java/com/yammer/dropwizard/testing/JsonHelpers.java\nindex 0ba2be2..1a87955 100644\n--- a/dropwizard-testing/src/main/java/com/yammer/dropwizard/testing/JsonHelpers.java\n+++ b/dropwizard-testing/src/main/java/com/yammer/dropwizard/testing/JsonHelpers.java\n@@ -32,9 +32,9 @@\n      *\n      * @param object    an object\n      * @return {@code object} as a JSON string\n-     * @throws IOException if there is an error writing {@code object} as JSON\n+     * @throws IllegalArgumentException if there is an error encoding {@code object}\n      */\n-    public static String asJson(Object object) throws IOException {\n+    public static String asJson(Object object) throws IllegalArgumentException {\n         return JSON.writeValueAsString(object);\n     }\n \n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 30,
    "bugNodeStartChar": 981,
    "bugNodeLength": 363,
    "fixLineNum": 30,
    "fixNodeStartChar": 981,
    "fixNodeLength": 376,
    "sourceBeforeFix": "/**   * Converts the given object into a canonical JSON string.  * @param object    an object  * @return {@code object} as a JSON string  * @throws IOException if there is an error writing {@code object} as JSON  */ public static String asJson(Object object) throws IOException {   return JSON.writeValueAsString(object); } ",
    "sourceAfterFix": "/**   * Converts the given object into a canonical JSON string.  * @param object    an object  * @return {@code object} as a JSON string  * @throws IOException if there is an error writing {@code object} as JSON  */ public static String asJson(Object object) throws IllegalArgumentException {   return JSON.writeValueAsString(object); } "
  },
  {
    "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
    "fixCommitSHA1": "a60da8f05a3a6a5389207f43b2d9c6b013936d4f",
    "fixCommitParentSHA1": "df7a23724b8c8c641682fc383aaa119507b7a0b9",
    "bugFilePath": "dropwizard-db/src/main/java/com/yammer/dropwizard/db/Database.java",
    "fixPatch": "diff --git a/dropwizard-db/src/main/java/com/yammer/dropwizard/db/Database.java b/dropwizard-db/src/main/java/com/yammer/dropwizard/db/Database.java\nindex b6ad686..b9f4a3b 100644\n--- a/dropwizard-db/src/main/java/com/yammer/dropwizard/db/Database.java\n+++ b/dropwizard-db/src/main/java/com/yammer/dropwizard/db/Database.java\n@@ -30,7 +30,7 @@\n         this.pool = pool;\n         this.ping = onDemand(Ping.class);\n         setSQLLog(new Log4JLog(LOGGER, Level.TRACE));\n-        setTimingCollector(new InstrumentedTimingCollector(Metrics.defaultRegistry(), Database.class));\n+        setTimingCollector(new InstrumentedTimingCollector(Metrics.defaultRegistry()));\n         setStatementRewriter(new NamePrependingStatementRewriter());\n         setStatementLocator(new ScopedStatementLocator());\n         registerArgumentFactory(new OptionalArgumentFactory());\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 33,
    "bugNodeStartChar": 1059,
    "bugNodeLength": 74,
    "fixLineNum": 33,
    "fixNodeStartChar": 1059,
    "fixNodeLength": 58,
    "sourceBeforeFix": "new InstrumentedTimingCollector(Metrics.defaultRegistry(),Database.class)",
    "sourceAfterFix": "new InstrumentedTimingCollector(Metrics.defaultRegistry())"
  },
  {
    "bugType": "CHANGE_UNARY_OPERATOR",
    "fixCommitSHA1": "0b2dc86ef74091a830e059c8a1aa6084549b525a",
    "fixCommitParentSHA1": "3de8164a72e14cc11f2d8cec9d6ca10473e1f1c6",
    "bugFilePath": "dropwizard/src/main/java/com/yammer/dropwizard/jersey/OptionalQueryParamInjectableProvider.java",
    "fixPatch": "diff --git a/dropwizard/src/main/java/com/yammer/dropwizard/jersey/OptionalQueryParamInjectableProvider.java b/dropwizard/src/main/java/com/yammer/dropwizard/jersey/OptionalQueryParamInjectableProvider.java\nindex 220be7b..aed7312 100644\n--- a/dropwizard/src/main/java/com/yammer/dropwizard/jersey/OptionalQueryParamInjectableProvider.java\n+++ b/dropwizard/src/main/java/com/yammer/dropwizard/jersey/OptionalQueryParamInjectableProvider.java\n@@ -29,7 +29,7 @@\n                 c.getParameterClass().isAssignableFrom(Optional.class)) {\n             return new MultivaluedParameterExtractorQueryParamInjectable(\n                     new OptionalExtractor(parameterName, c.getDefaultValue()),\n-                    c.isEncoded()\n+                    !c.isEncoded()\n             );\n         }\n         return null;\n",
    "projectName": "dropwizard.dropwizard",
    "bugLineNum": 32,
    "bugNodeStartChar": 1315,
    "bugNodeLength": 13,
    "fixLineNum": 32,
    "fixNodeStartChar": 1315,
    "fixNodeLength": 14,
    "sourceBeforeFix": "c.isEncoded()",
    "sourceAfterFix": "!c.isEncoded()"
  }
]