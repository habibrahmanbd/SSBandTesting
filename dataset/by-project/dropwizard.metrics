[
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "64bc69ef4c547771f44f6b6b103cda7be2f0922b",
    "fixCommitParentSHA1": "c40d697e8a86445f535ddc284354b297d9deaed0",
    "bugFilePath": "metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java",
    "fixPatch": "diff --git a/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java b/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java\nindex 1e0427e..0619b7a 100644\n--- a/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java\n+++ b/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java\n@@ -138,7 +138,7 @@\n \t}\n \n \tpublic SortedMap<String, Histogram> getHistograms(MetricFilter filter) {\n-\t\treturn adaptMetrics(Histogram.class, reg.getCounters(transformFilter(filter)));\n+\t\treturn adaptMetrics(Histogram.class, reg.getHistograms(transformFilter(filter)));\n \t}\n \n \tpublic SortedMap<String, Meter> getMeters() {\n@@ -146,7 +146,7 @@\n \t}\n \n \tpublic SortedMap<String, Meter> getMeters(MetricFilter filter) {\n-\t\treturn adaptMetrics(Meter.class, reg.getCounters(transformFilter(filter)));\n+\t\treturn adaptMetrics(Meter.class, reg.getMeters(transformFilter(filter)));\n \t}\n \n \tpublic SortedMap<String, Timer> getTimers() {\n@@ -154,7 +154,7 @@\n \t}\n \n \tpublic SortedMap<String, Timer> getTimers(MetricFilter filter) {\n-\t\treturn adaptMetrics(Timer.class, reg.getCounters(transformFilter(filter)));\n+\t\treturn adaptMetrics(Timer.class, reg.getTimers(transformFilter(filter)));\n \t}\n \n \tprivate io.dropwizard.metrics.MetricFilter transformFilter(final MetricFilter filter) {\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 141,
    "bugNodeStartChar": 3812,
    "bugNodeLength": 40,
    "fixLineNum": 141,
    "fixNodeStartChar": 3812,
    "fixNodeLength": 42,
    "sourceBeforeFix": "reg.getCounters(transformFilter(filter))",
    "sourceAfterFix": "reg.getHistograms(transformFilter(filter))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "64bc69ef4c547771f44f6b6b103cda7be2f0922b",
    "fixCommitParentSHA1": "c40d697e8a86445f535ddc284354b297d9deaed0",
    "bugFilePath": "metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java",
    "fixPatch": "diff --git a/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java b/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java\nindex 1e0427e..0619b7a 100644\n--- a/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java\n+++ b/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java\n@@ -138,7 +138,7 @@\n \t}\n \n \tpublic SortedMap<String, Histogram> getHistograms(MetricFilter filter) {\n-\t\treturn adaptMetrics(Histogram.class, reg.getCounters(transformFilter(filter)));\n+\t\treturn adaptMetrics(Histogram.class, reg.getHistograms(transformFilter(filter)));\n \t}\n \n \tpublic SortedMap<String, Meter> getMeters() {\n@@ -146,7 +146,7 @@\n \t}\n \n \tpublic SortedMap<String, Meter> getMeters(MetricFilter filter) {\n-\t\treturn adaptMetrics(Meter.class, reg.getCounters(transformFilter(filter)));\n+\t\treturn adaptMetrics(Meter.class, reg.getMeters(transformFilter(filter)));\n \t}\n \n \tpublic SortedMap<String, Timer> getTimers() {\n@@ -154,7 +154,7 @@\n \t}\n \n \tpublic SortedMap<String, Timer> getTimers(MetricFilter filter) {\n-\t\treturn adaptMetrics(Timer.class, reg.getCounters(transformFilter(filter)));\n+\t\treturn adaptMetrics(Timer.class, reg.getTimers(transformFilter(filter)));\n \t}\n \n \tprivate io.dropwizard.metrics.MetricFilter transformFilter(final MetricFilter filter) {\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 141,
    "bugNodeStartChar": 3812,
    "bugNodeLength": 40,
    "fixLineNum": 141,
    "fixNodeStartChar": 3812,
    "fixNodeLength": 42,
    "sourceBeforeFix": "reg.getCounters(transformFilter(filter))",
    "sourceAfterFix": "reg.getHistograms(transformFilter(filter))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "64bc69ef4c547771f44f6b6b103cda7be2f0922b",
    "fixCommitParentSHA1": "c40d697e8a86445f535ddc284354b297d9deaed0",
    "bugFilePath": "metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java",
    "fixPatch": "diff --git a/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java b/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java\nindex 1e0427e..0619b7a 100644\n--- a/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java\n+++ b/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java\n@@ -138,7 +138,7 @@\n \t}\n \n \tpublic SortedMap<String, Histogram> getHistograms(MetricFilter filter) {\n-\t\treturn adaptMetrics(Histogram.class, reg.getCounters(transformFilter(filter)));\n+\t\treturn adaptMetrics(Histogram.class, reg.getHistograms(transformFilter(filter)));\n \t}\n \n \tpublic SortedMap<String, Meter> getMeters() {\n@@ -146,7 +146,7 @@\n \t}\n \n \tpublic SortedMap<String, Meter> getMeters(MetricFilter filter) {\n-\t\treturn adaptMetrics(Meter.class, reg.getCounters(transformFilter(filter)));\n+\t\treturn adaptMetrics(Meter.class, reg.getMeters(transformFilter(filter)));\n \t}\n \n \tpublic SortedMap<String, Timer> getTimers() {\n@@ -154,7 +154,7 @@\n \t}\n \n \tpublic SortedMap<String, Timer> getTimers(MetricFilter filter) {\n-\t\treturn adaptMetrics(Timer.class, reg.getCounters(transformFilter(filter)));\n+\t\treturn adaptMetrics(Timer.class, reg.getTimers(transformFilter(filter)));\n \t}\n \n \tprivate io.dropwizard.metrics.MetricFilter transformFilter(final MetricFilter filter) {\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 149,
    "bugNodeStartChar": 4049,
    "bugNodeLength": 40,
    "fixLineNum": 149,
    "fixNodeStartChar": 4049,
    "fixNodeLength": 38,
    "sourceBeforeFix": "reg.getCounters(transformFilter(filter))",
    "sourceAfterFix": "reg.getMeters(transformFilter(filter))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "64bc69ef4c547771f44f6b6b103cda7be2f0922b",
    "fixCommitParentSHA1": "c40d697e8a86445f535ddc284354b297d9deaed0",
    "bugFilePath": "metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java",
    "fixPatch": "diff --git a/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java b/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java\nindex 1e0427e..0619b7a 100644\n--- a/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java\n+++ b/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java\n@@ -138,7 +138,7 @@\n \t}\n \n \tpublic SortedMap<String, Histogram> getHistograms(MetricFilter filter) {\n-\t\treturn adaptMetrics(Histogram.class, reg.getCounters(transformFilter(filter)));\n+\t\treturn adaptMetrics(Histogram.class, reg.getHistograms(transformFilter(filter)));\n \t}\n \n \tpublic SortedMap<String, Meter> getMeters() {\n@@ -146,7 +146,7 @@\n \t}\n \n \tpublic SortedMap<String, Meter> getMeters(MetricFilter filter) {\n-\t\treturn adaptMetrics(Meter.class, reg.getCounters(transformFilter(filter)));\n+\t\treturn adaptMetrics(Meter.class, reg.getMeters(transformFilter(filter)));\n \t}\n \n \tpublic SortedMap<String, Timer> getTimers() {\n@@ -154,7 +154,7 @@\n \t}\n \n \tpublic SortedMap<String, Timer> getTimers(MetricFilter filter) {\n-\t\treturn adaptMetrics(Timer.class, reg.getCounters(transformFilter(filter)));\n+\t\treturn adaptMetrics(Timer.class, reg.getTimers(transformFilter(filter)));\n \t}\n \n \tprivate io.dropwizard.metrics.MetricFilter transformFilter(final MetricFilter filter) {\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 149,
    "bugNodeStartChar": 4049,
    "bugNodeLength": 40,
    "fixLineNum": 149,
    "fixNodeStartChar": 4049,
    "fixNodeLength": 38,
    "sourceBeforeFix": "reg.getCounters(transformFilter(filter))",
    "sourceAfterFix": "reg.getMeters(transformFilter(filter))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "64bc69ef4c547771f44f6b6b103cda7be2f0922b",
    "fixCommitParentSHA1": "c40d697e8a86445f535ddc284354b297d9deaed0",
    "bugFilePath": "metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java",
    "fixPatch": "diff --git a/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java b/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java\nindex 1e0427e..0619b7a 100644\n--- a/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java\n+++ b/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java\n@@ -138,7 +138,7 @@\n \t}\n \n \tpublic SortedMap<String, Histogram> getHistograms(MetricFilter filter) {\n-\t\treturn adaptMetrics(Histogram.class, reg.getCounters(transformFilter(filter)));\n+\t\treturn adaptMetrics(Histogram.class, reg.getHistograms(transformFilter(filter)));\n \t}\n \n \tpublic SortedMap<String, Meter> getMeters() {\n@@ -146,7 +146,7 @@\n \t}\n \n \tpublic SortedMap<String, Meter> getMeters(MetricFilter filter) {\n-\t\treturn adaptMetrics(Meter.class, reg.getCounters(transformFilter(filter)));\n+\t\treturn adaptMetrics(Meter.class, reg.getMeters(transformFilter(filter)));\n \t}\n \n \tpublic SortedMap<String, Timer> getTimers() {\n@@ -154,7 +154,7 @@\n \t}\n \n \tpublic SortedMap<String, Timer> getTimers(MetricFilter filter) {\n-\t\treturn adaptMetrics(Timer.class, reg.getCounters(transformFilter(filter)));\n+\t\treturn adaptMetrics(Timer.class, reg.getTimers(transformFilter(filter)));\n \t}\n \n \tprivate io.dropwizard.metrics.MetricFilter transformFilter(final MetricFilter filter) {\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 157,
    "bugNodeStartChar": 4286,
    "bugNodeLength": 40,
    "fixLineNum": 157,
    "fixNodeStartChar": 4286,
    "fixNodeLength": 38,
    "sourceBeforeFix": "reg.getCounters(transformFilter(filter))",
    "sourceAfterFix": "reg.getTimers(transformFilter(filter))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "64bc69ef4c547771f44f6b6b103cda7be2f0922b",
    "fixCommitParentSHA1": "c40d697e8a86445f535ddc284354b297d9deaed0",
    "bugFilePath": "metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java",
    "fixPatch": "diff --git a/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java b/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java\nindex 1e0427e..0619b7a 100644\n--- a/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java\n+++ b/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java\n@@ -138,7 +138,7 @@\n \t}\n \n \tpublic SortedMap<String, Histogram> getHistograms(MetricFilter filter) {\n-\t\treturn adaptMetrics(Histogram.class, reg.getCounters(transformFilter(filter)));\n+\t\treturn adaptMetrics(Histogram.class, reg.getHistograms(transformFilter(filter)));\n \t}\n \n \tpublic SortedMap<String, Meter> getMeters() {\n@@ -146,7 +146,7 @@\n \t}\n \n \tpublic SortedMap<String, Meter> getMeters(MetricFilter filter) {\n-\t\treturn adaptMetrics(Meter.class, reg.getCounters(transformFilter(filter)));\n+\t\treturn adaptMetrics(Meter.class, reg.getMeters(transformFilter(filter)));\n \t}\n \n \tpublic SortedMap<String, Timer> getTimers() {\n@@ -154,7 +154,7 @@\n \t}\n \n \tpublic SortedMap<String, Timer> getTimers(MetricFilter filter) {\n-\t\treturn adaptMetrics(Timer.class, reg.getCounters(transformFilter(filter)));\n+\t\treturn adaptMetrics(Timer.class, reg.getTimers(transformFilter(filter)));\n \t}\n \n \tprivate io.dropwizard.metrics.MetricFilter transformFilter(final MetricFilter filter) {\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 157,
    "bugNodeStartChar": 4286,
    "bugNodeLength": 40,
    "fixLineNum": 157,
    "fixNodeStartChar": 4286,
    "fixNodeLength": 38,
    "sourceBeforeFix": "reg.getCounters(transformFilter(filter))",
    "sourceAfterFix": "reg.getTimers(transformFilter(filter))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "b36e9ea007d7c4c464d81a2db0ceeef4d95095b1",
    "fixCommitParentSHA1": "4984fb69803d92486fc74ade2b702064b49dd927",
    "bugFilePath": "metrics-jvm/src/main/java/com/codahale/metrics/jvm/ThreadStatesGaugeSet.java",
    "fixPatch": "diff --git a/metrics-jvm/src/main/java/com/codahale/metrics/jvm/ThreadStatesGaugeSet.java b/metrics-jvm/src/main/java/com/codahale/metrics/jvm/ThreadStatesGaugeSet.java\nindex a79d6bc..a28515a 100644\n--- a/metrics-jvm/src/main/java/com/codahale/metrics/jvm/ThreadStatesGaugeSet.java\n+++ b/metrics-jvm/src/main/java/com/codahale/metrics/jvm/ThreadStatesGaugeSet.java\n@@ -50,9 +50,9 @@\n \n         for (final Thread.State state : Thread.State.values()) {\n             gauges.put(name(state.toString().toLowerCase(), \"count\"),\n-                       new Gauge<Object>() {\n+                       new Gauge<Integer>() {\n                            @Override\n-                           public Object getValue() {\n+                           public Integer getValue() {\n                                return getThreadCount(state);\n                            }\n                        });\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 53,
    "bugNodeStartChar": 1691,
    "bugNodeLength": 13,
    "fixLineNum": 53,
    "fixNodeStartChar": 1691,
    "fixNodeLength": 14,
    "sourceBeforeFix": "Gauge<Object>",
    "sourceAfterFix": "Gauge<Integer>"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "b36e9ea007d7c4c464d81a2db0ceeef4d95095b1",
    "fixCommitParentSHA1": "4984fb69803d92486fc74ade2b702064b49dd927",
    "bugFilePath": "metrics-jvm/src/main/java/com/codahale/metrics/jvm/ThreadStatesGaugeSet.java",
    "fixPatch": "diff --git a/metrics-jvm/src/main/java/com/codahale/metrics/jvm/ThreadStatesGaugeSet.java b/metrics-jvm/src/main/java/com/codahale/metrics/jvm/ThreadStatesGaugeSet.java\nindex a79d6bc..a28515a 100644\n--- a/metrics-jvm/src/main/java/com/codahale/metrics/jvm/ThreadStatesGaugeSet.java\n+++ b/metrics-jvm/src/main/java/com/codahale/metrics/jvm/ThreadStatesGaugeSet.java\n@@ -50,9 +50,9 @@\n \n         for (final Thread.State state : Thread.State.values()) {\n             gauges.put(name(state.toString().toLowerCase(), \"count\"),\n-                       new Gauge<Object>() {\n+                       new Gauge<Integer>() {\n                            @Override\n-                           public Object getValue() {\n+                           public Integer getValue() {\n                                return getThreadCount(state);\n                            }\n                        });\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 54,
    "bugNodeStartChar": 1736,
    "bugNodeLength": 153,
    "fixLineNum": 54,
    "fixNodeStartChar": 1736,
    "fixNodeLength": 154,
    "sourceBeforeFix": "@Override public Object getValue(){   return getThreadCount(state); } ",
    "sourceAfterFix": "@Override public Integer getValue(){   return getThreadCount(state); } "
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "2a754d9dd04b032290767958b78482707b88d76f",
    "fixCommitParentSHA1": "4984fb69803d92486fc74ade2b702064b49dd927",
    "bugFilePath": "metrics-jvm/src/main/java/com/codahale/metrics/jvm/ThreadStatesGaugeSet.java",
    "fixPatch": "diff --git a/metrics-jvm/src/main/java/com/codahale/metrics/jvm/ThreadStatesGaugeSet.java b/metrics-jvm/src/main/java/com/codahale/metrics/jvm/ThreadStatesGaugeSet.java\nindex a79d6bc..a28515a 100644\n--- a/metrics-jvm/src/main/java/com/codahale/metrics/jvm/ThreadStatesGaugeSet.java\n+++ b/metrics-jvm/src/main/java/com/codahale/metrics/jvm/ThreadStatesGaugeSet.java\n@@ -50,9 +50,9 @@\n \n         for (final Thread.State state : Thread.State.values()) {\n             gauges.put(name(state.toString().toLowerCase(), \"count\"),\n-                       new Gauge<Object>() {\n+                       new Gauge<Integer>() {\n                            @Override\n-                           public Object getValue() {\n+                           public Integer getValue() {\n                                return getThreadCount(state);\n                            }\n                        });\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 53,
    "bugNodeStartChar": 1691,
    "bugNodeLength": 13,
    "fixLineNum": 53,
    "fixNodeStartChar": 1691,
    "fixNodeLength": 14,
    "sourceBeforeFix": "Gauge<Object>",
    "sourceAfterFix": "Gauge<Integer>"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "2a754d9dd04b032290767958b78482707b88d76f",
    "fixCommitParentSHA1": "4984fb69803d92486fc74ade2b702064b49dd927",
    "bugFilePath": "metrics-jvm/src/main/java/com/codahale/metrics/jvm/ThreadStatesGaugeSet.java",
    "fixPatch": "diff --git a/metrics-jvm/src/main/java/com/codahale/metrics/jvm/ThreadStatesGaugeSet.java b/metrics-jvm/src/main/java/com/codahale/metrics/jvm/ThreadStatesGaugeSet.java\nindex a79d6bc..a28515a 100644\n--- a/metrics-jvm/src/main/java/com/codahale/metrics/jvm/ThreadStatesGaugeSet.java\n+++ b/metrics-jvm/src/main/java/com/codahale/metrics/jvm/ThreadStatesGaugeSet.java\n@@ -50,9 +50,9 @@\n \n         for (final Thread.State state : Thread.State.values()) {\n             gauges.put(name(state.toString().toLowerCase(), \"count\"),\n-                       new Gauge<Object>() {\n+                       new Gauge<Integer>() {\n                            @Override\n-                           public Object getValue() {\n+                           public Integer getValue() {\n                                return getThreadCount(state);\n                            }\n                        });\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 54,
    "bugNodeStartChar": 1736,
    "bugNodeLength": 153,
    "fixLineNum": 54,
    "fixNodeStartChar": 1736,
    "fixNodeLength": 154,
    "sourceBeforeFix": "@Override public Object getValue(){   return getThreadCount(state); } ",
    "sourceAfterFix": "@Override public Integer getValue(){   return getThreadCount(state); } "
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "09a0f1a83a6a40cf5b3977f3f9c76e9bf8423841",
    "fixCommitParentSHA1": "e8fc420a6c542410c2f2000e22bf7788cb2544f0",
    "bugFilePath": "metrics-core/src/main/java/com/codahale/metrics/DefaultObjectNameFactory.java",
    "fixPatch": "diff --git a/metrics-core/src/main/java/com/codahale/metrics/DefaultObjectNameFactory.java b/metrics-core/src/main/java/com/codahale/metrics/DefaultObjectNameFactory.java\nindex 17a028c..58929e3 100644\n--- a/metrics-core/src/main/java/com/codahale/metrics/DefaultObjectNameFactory.java\n+++ b/metrics-core/src/main/java/com/codahale/metrics/DefaultObjectNameFactory.java\n@@ -8,7 +8,7 @@\n \n public class DefaultObjectNameFactory implements ObjectNameFactory {\n \n-\tprivate static final Logger LOGGER = LoggerFactory.getLogger(JmxReporter.class);\n+\tprivate static final Logger LOGGER = LoggerFactory.getLogger(DefaultObjectNameFactory.class);\n \n \t@Override\n \tpublic ObjectName createName(String type, String domain, String name) {\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 11,
    "bugNodeStartChar": 312,
    "bugNodeLength": 17,
    "fixLineNum": 11,
    "fixNodeStartChar": 312,
    "fixNodeLength": 30,
    "sourceBeforeFix": "JmxReporter.class",
    "sourceAfterFix": "DefaultObjectNameFactory.class"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "427eaad53e8d6d42324d43993906238af4884659",
    "fixCommitParentSHA1": "2b01605f206311f8f3f61b11974aa3141b8ac752",
    "bugFilePath": "metrics-core/src/main/java/com/codahale/metrics/JmxReporter.java",
    "fixPatch": "diff --git a/metrics-core/src/main/java/com/codahale/metrics/JmxReporter.java b/metrics-core/src/main/java/com/codahale/metrics/JmxReporter.java\nindex 7149219..e387a19 100644\n--- a/metrics-core/src/main/java/com/codahale/metrics/JmxReporter.java\n+++ b/metrics-core/src/main/java/com/codahale/metrics/JmxReporter.java\n@@ -618,7 +618,7 @@\n             try {\n                 final ObjectName objectName = createName(\"timers\", name);\n                 mBeanServer.unregisterMBean(objectName);\n-                registered.add(objectName);\n+                registered.remove(objectName);\n             } catch (InstanceNotFoundException e) {\n                 LOGGER.debug(\"Unable to unregister timer\", e);\n             } catch (MBeanRegistrationException e) {\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 621,
    "bugNodeStartChar": 19354,
    "bugNodeLength": 26,
    "fixLineNum": 621,
    "fixNodeStartChar": 19354,
    "fixNodeLength": 29,
    "sourceBeforeFix": "registered.add(objectName)",
    "sourceAfterFix": "registered.remove(objectName)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "427eaad53e8d6d42324d43993906238af4884659",
    "fixCommitParentSHA1": "2b01605f206311f8f3f61b11974aa3141b8ac752",
    "bugFilePath": "metrics-core/src/main/java/com/codahale/metrics/JmxReporter.java",
    "fixPatch": "diff --git a/metrics-core/src/main/java/com/codahale/metrics/JmxReporter.java b/metrics-core/src/main/java/com/codahale/metrics/JmxReporter.java\nindex 7149219..e387a19 100644\n--- a/metrics-core/src/main/java/com/codahale/metrics/JmxReporter.java\n+++ b/metrics-core/src/main/java/com/codahale/metrics/JmxReporter.java\n@@ -618,7 +618,7 @@\n             try {\n                 final ObjectName objectName = createName(\"timers\", name);\n                 mBeanServer.unregisterMBean(objectName);\n-                registered.add(objectName);\n+                registered.remove(objectName);\n             } catch (InstanceNotFoundException e) {\n                 LOGGER.debug(\"Unable to unregister timer\", e);\n             } catch (MBeanRegistrationException e) {\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 621,
    "bugNodeStartChar": 19354,
    "bugNodeLength": 26,
    "fixLineNum": 621,
    "fixNodeStartChar": 19354,
    "fixNodeLength": 29,
    "sourceBeforeFix": "registered.add(objectName)",
    "sourceAfterFix": "registered.remove(objectName)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "f4ab483493a6b24e9a991c03cfd5b0b5cdcbff69",
    "fixCommitParentSHA1": "c0c8be71934de526270e4f3fbb5cb1adc9abf77b",
    "bugFilePath": "metrics-core/src/main/java/com/yammer/metrics/reporting/AbstractPollingReporter.java",
    "fixPatch": "diff --git a/metrics-core/src/main/java/com/yammer/metrics/reporting/AbstractPollingReporter.java b/metrics-core/src/main/java/com/yammer/metrics/reporting/AbstractPollingReporter.java\nindex 88fd28a..dc87c3f 100644\n--- a/metrics-core/src/main/java/com/yammer/metrics/reporting/AbstractPollingReporter.java\n+++ b/metrics-core/src/main/java/com/yammer/metrics/reporting/AbstractPollingReporter.java\n@@ -60,7 +60,7 @@\n      * @param unit      the unit for {@code period}\n      */\n     public void start(long period, TimeUnit unit) {\n-        executor.scheduleWithFixedDelay(this, period, period, unit);\n+        executor.scheduleAtFixedRate(this, period, period, unit);\n     }\n \n     @Override\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 63,
    "bugNodeStartChar": 2330,
    "bugNodeLength": 59,
    "fixLineNum": 63,
    "fixNodeStartChar": 2330,
    "fixNodeLength": 56,
    "sourceBeforeFix": "executor.scheduleWithFixedDelay(this,period,period,unit)",
    "sourceAfterFix": "executor.scheduleAtFixedRate(this,period,period,unit)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "f4ab483493a6b24e9a991c03cfd5b0b5cdcbff69",
    "fixCommitParentSHA1": "c0c8be71934de526270e4f3fbb5cb1adc9abf77b",
    "bugFilePath": "metrics-core/src/main/java/com/yammer/metrics/reporting/AbstractPollingReporter.java",
    "fixPatch": "diff --git a/metrics-core/src/main/java/com/yammer/metrics/reporting/AbstractPollingReporter.java b/metrics-core/src/main/java/com/yammer/metrics/reporting/AbstractPollingReporter.java\nindex 88fd28a..dc87c3f 100644\n--- a/metrics-core/src/main/java/com/yammer/metrics/reporting/AbstractPollingReporter.java\n+++ b/metrics-core/src/main/java/com/yammer/metrics/reporting/AbstractPollingReporter.java\n@@ -60,7 +60,7 @@\n      * @param unit      the unit for {@code period}\n      */\n     public void start(long period, TimeUnit unit) {\n-        executor.scheduleWithFixedDelay(this, period, period, unit);\n+        executor.scheduleAtFixedRate(this, period, period, unit);\n     }\n \n     @Override\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 63,
    "bugNodeStartChar": 2330,
    "bugNodeLength": 59,
    "fixLineNum": 63,
    "fixNodeStartChar": 2330,
    "fixNodeLength": 56,
    "sourceBeforeFix": "executor.scheduleWithFixedDelay(this,period,period,unit)",
    "sourceAfterFix": "executor.scheduleAtFixedRate(this,period,period,unit)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "b899af7d7c2b9d461ee1741e98ee861e2ed55785",
    "fixCommitParentSHA1": "b5c4c6a675a420930223c9e7a7071d5752582395",
    "bugFilePath": "metrics-core/src/main/java/com/yammer/metrics/reporting/AbstractPollingReporter.java",
    "fixPatch": "diff --git a/metrics-core/src/main/java/com/yammer/metrics/reporting/AbstractPollingReporter.java b/metrics-core/src/main/java/com/yammer/metrics/reporting/AbstractPollingReporter.java\nindex 1020585..d04f5f3 100644\n--- a/metrics-core/src/main/java/com/yammer/metrics/reporting/AbstractPollingReporter.java\n+++ b/metrics-core/src/main/java/com/yammer/metrics/reporting/AbstractPollingReporter.java\n@@ -32,7 +32,7 @@\n      * @param unit      the unit for {@code period}\n      */\n     public void start(long period, TimeUnit unit) {\n-        executor.scheduleWithFixedDelay(this, period, period, unit);\n+        executor.scheduleAtFixedRate(this, period, period, unit);\n     }\n \n     /**\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 35,
    "bugNodeStartChar": 1235,
    "bugNodeLength": 59,
    "fixLineNum": 35,
    "fixNodeStartChar": 1235,
    "fixNodeLength": 56,
    "sourceBeforeFix": "executor.scheduleWithFixedDelay(this,period,period,unit)",
    "sourceAfterFix": "executor.scheduleAtFixedRate(this,period,period,unit)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "b899af7d7c2b9d461ee1741e98ee861e2ed55785",
    "fixCommitParentSHA1": "b5c4c6a675a420930223c9e7a7071d5752582395",
    "bugFilePath": "metrics-core/src/main/java/com/yammer/metrics/reporting/AbstractPollingReporter.java",
    "fixPatch": "diff --git a/metrics-core/src/main/java/com/yammer/metrics/reporting/AbstractPollingReporter.java b/metrics-core/src/main/java/com/yammer/metrics/reporting/AbstractPollingReporter.java\nindex 1020585..d04f5f3 100644\n--- a/metrics-core/src/main/java/com/yammer/metrics/reporting/AbstractPollingReporter.java\n+++ b/metrics-core/src/main/java/com/yammer/metrics/reporting/AbstractPollingReporter.java\n@@ -32,7 +32,7 @@\n      * @param unit      the unit for {@code period}\n      */\n     public void start(long period, TimeUnit unit) {\n-        executor.scheduleWithFixedDelay(this, period, period, unit);\n+        executor.scheduleAtFixedRate(this, period, period, unit);\n     }\n \n     /**\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 35,
    "bugNodeStartChar": 1235,
    "bugNodeLength": 59,
    "fixLineNum": 35,
    "fixNodeStartChar": 1235,
    "fixNodeLength": 56,
    "sourceBeforeFix": "executor.scheduleWithFixedDelay(this,period,period,unit)",
    "sourceAfterFix": "executor.scheduleAtFixedRate(this,period,period,unit)"
  },
  {
    "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
    "fixCommitSHA1": "8186c8c6023d33958c162f4dcd459688ff52d151",
    "fixCommitParentSHA1": "f2a0296193ff6d52f2b405b6dfa39978908e1ee6",
    "bugFilePath": "metrics-servlet/src/test/java/com/yammer/metrics/reporting/tests/AdminServletTest.java",
    "fixPatch": "diff --git a/metrics-servlet/src/test/java/com/yammer/metrics/reporting/tests/AdminServletTest.java b/metrics-servlet/src/test/java/com/yammer/metrics/reporting/tests/AdminServletTest.java\nold mode 100644\nnew mode 100755\nindex e9d1b4e..4f8601e\n--- a/metrics-servlet/src/test/java/com/yammer/metrics/reporting/tests/AdminServletTest.java\n+++ b/metrics-servlet/src/test/java/com/yammer/metrics/reporting/tests/AdminServletTest.java\n@@ -42,7 +42,7 @@\n \n     @Before\n     public void setUp() throws Exception {\n-        when(context.getContextPath()).thenReturn(\"/context\");\n+        when(request.getContextPath()).thenReturn(\"/context\");\n \n         when(config.getServletContext()).thenReturn(context);\n \n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 45,
    "bugNodeStartChar": 1871,
    "bugNodeLength": 24,
    "fixLineNum": 45,
    "fixNodeStartChar": 1871,
    "fixNodeLength": 24,
    "sourceBeforeFix": "context.getContextPath()",
    "sourceAfterFix": "request.getContextPath()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8186c8c6023d33958c162f4dcd459688ff52d151",
    "fixCommitParentSHA1": "f2a0296193ff6d52f2b405b6dfa39978908e1ee6",
    "bugFilePath": "metrics-servlet/src/test/java/com/yammer/metrics/reporting/tests/AdminServletTest.java",
    "fixPatch": "diff --git a/metrics-servlet/src/test/java/com/yammer/metrics/reporting/tests/AdminServletTest.java b/metrics-servlet/src/test/java/com/yammer/metrics/reporting/tests/AdminServletTest.java\nold mode 100644\nnew mode 100755\nindex e9d1b4e..4f8601e\n--- a/metrics-servlet/src/test/java/com/yammer/metrics/reporting/tests/AdminServletTest.java\n+++ b/metrics-servlet/src/test/java/com/yammer/metrics/reporting/tests/AdminServletTest.java\n@@ -42,7 +42,7 @@\n \n     @Before\n     public void setUp() throws Exception {\n-        when(context.getContextPath()).thenReturn(\"/context\");\n+        when(request.getContextPath()).thenReturn(\"/context\");\n \n         when(config.getServletContext()).thenReturn(context);\n \n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 45,
    "bugNodeStartChar": 1871,
    "bugNodeLength": 24,
    "fixLineNum": 45,
    "fixNodeStartChar": 1871,
    "fixNodeLength": 24,
    "sourceBeforeFix": "context.getContextPath()",
    "sourceAfterFix": "request.getContextPath()"
  },
  {
    "bugType": "CHANGE_OPERATOR",
    "fixCommitSHA1": "7eb33f6ead2bdf1a1e8bcf1c1c708781955561c5",
    "fixCommitParentSHA1": "5d12dec5b8867a15e196a049bc378865440bbbca",
    "bugFilePath": "metrics-sigar/src/main/java/com/yammer/metrics/sigar/CpuMetrics.java",
    "fixPatch": "diff --git a/metrics-sigar/src/main/java/com/yammer/metrics/sigar/CpuMetrics.java b/metrics-sigar/src/main/java/com/yammer/metrics/sigar/CpuMetrics.java\nindex c8d946c..d66931b 100644\n--- a/metrics-sigar/src/main/java/com/yammer/metrics/sigar/CpuMetrics.java\n+++ b/metrics-sigar/src/main/java/com/yammer/metrics/sigar/CpuMetrics.java\n@@ -148,7 +148,7 @@\n     private CpuInfo cpuInfo() {\n         try {\n             CpuInfo[] infos = sigar.getCpuInfoList();\n-            if (infos == null | infos.length == 0) {\n+            if (infos == null || infos.length == 0) {\n                 return null;\n             }\n             return infos[0];\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 151,
    "bugNodeStartChar": 4637,
    "bugNodeLength": 33,
    "fixLineNum": 151,
    "fixNodeStartChar": 4637,
    "fixNodeLength": 34,
    "sourceBeforeFix": "infos == null | infos.length == 0",
    "sourceAfterFix": "infos == null || infos.length == 0"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "ba7c6a38ba78dd2db7c8062509df342e22c25b3c",
    "fixCommitParentSHA1": "ab38273f0fe91b5777914686b2d1b6260d1b741a",
    "bugFilePath": "metrics-core/src/main/java/com/yammer/metrics/reporting/CsvReporter.java",
    "fixPatch": "diff --git a/metrics-core/src/main/java/com/yammer/metrics/reporting/CsvReporter.java b/metrics-core/src/main/java/com/yammer/metrics/reporting/CsvReporter.java\nindex 4c84009..a82b138 100644\n--- a/metrics-core/src/main/java/com/yammer/metrics/reporting/CsvReporter.java\n+++ b/metrics-core/src/main/java/com/yammer/metrics/reporting/CsvReporter.java\n@@ -134,7 +134,7 @@\n      * @throws IOException if there is an error opening the stream\n      */\n     protected PrintStream createStreamForMetric(MetricName metricName) throws IOException {\n-        final File newFile = new File(outputDir, metricName.getName() + \".csv\");\n+        final File newFile = new File(outputDir, metricName.toString() + \".csv\");\n         if (newFile.createNewFile()) {\n             return new PrintStream(new FileOutputStream(newFile));\n         }\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 137,
    "bugNodeStartChar": 5822,
    "bugNodeLength": 20,
    "fixLineNum": 137,
    "fixNodeStartChar": 5822,
    "fixNodeLength": 21,
    "sourceBeforeFix": "metricName.getName()",
    "sourceAfterFix": "metricName.toString()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "ba7c6a38ba78dd2db7c8062509df342e22c25b3c",
    "fixCommitParentSHA1": "ab38273f0fe91b5777914686b2d1b6260d1b741a",
    "bugFilePath": "metrics-core/src/main/java/com/yammer/metrics/reporting/CsvReporter.java",
    "fixPatch": "diff --git a/metrics-core/src/main/java/com/yammer/metrics/reporting/CsvReporter.java b/metrics-core/src/main/java/com/yammer/metrics/reporting/CsvReporter.java\nindex 4c84009..a82b138 100644\n--- a/metrics-core/src/main/java/com/yammer/metrics/reporting/CsvReporter.java\n+++ b/metrics-core/src/main/java/com/yammer/metrics/reporting/CsvReporter.java\n@@ -134,7 +134,7 @@\n      * @throws IOException if there is an error opening the stream\n      */\n     protected PrintStream createStreamForMetric(MetricName metricName) throws IOException {\n-        final File newFile = new File(outputDir, metricName.getName() + \".csv\");\n+        final File newFile = new File(outputDir, metricName.toString() + \".csv\");\n         if (newFile.createNewFile()) {\n             return new PrintStream(new FileOutputStream(newFile));\n         }\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 137,
    "bugNodeStartChar": 5822,
    "bugNodeLength": 20,
    "fixLineNum": 137,
    "fixNodeStartChar": 5822,
    "fixNodeLength": 21,
    "sourceBeforeFix": "metricName.getName()",
    "sourceAfterFix": "metricName.toString()"
  },
  {
    "bugType": "CHANGE_OPERATOR",
    "fixCommitSHA1": "0c99c74d2d9d0da2fd25f64fdd207dd1ce9ddfdf",
    "fixCommitParentSHA1": "79baef70ff2c9094a41609a457122897c68bd6e6",
    "bugFilePath": "metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java",
    "fixPatch": "diff --git a/metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java b/metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java\nindex 1991182..ebe269e 100644\n--- a/metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java\n+++ b/metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java\n@@ -345,7 +345,7 @@\n         final ThreadInfo[] threads = this.threads.dumpAllThreads(true, true);\n         final PrintWriter writer = new PrintWriter(out, true);\n \n-        for (int ti = threads.length - 1; ti > 0; ti--) {\n+        for (int ti = threads.length - 1; ti >= 0; ti--) {\n             final ThreadInfo t = threads[ti];\n             writer.printf(\"%s id=%d state=%s\",\n                           t.getThreadName(),\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 348,
    "bugNodeStartChar": 12351,
    "bugNodeLength": 6,
    "fixLineNum": 348,
    "fixNodeStartChar": 12351,
    "fixNodeLength": 7,
    "sourceBeforeFix": "ti > 0",
    "sourceAfterFix": "ti >= 0"
  },
  {
    "bugType": "CHANGE_OPERATOR",
    "fixCommitSHA1": "ac9d639779e5c0c1482f1abc50c71551c9ca09c1",
    "fixCommitParentSHA1": "79baef70ff2c9094a41609a457122897c68bd6e6",
    "bugFilePath": "metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java",
    "fixPatch": "diff --git a/metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java b/metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java\nindex 1991182..ebe269e 100644\n--- a/metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java\n+++ b/metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java\n@@ -345,7 +345,7 @@\n         final ThreadInfo[] threads = this.threads.dumpAllThreads(true, true);\n         final PrintWriter writer = new PrintWriter(out, true);\n \n-        for (int ti = threads.length - 1; ti > 0; ti--) {\n+        for (int ti = threads.length - 1; ti >= 0; ti--) {\n             final ThreadInfo t = threads[ti];\n             writer.printf(\"%s id=%d state=%s\",\n                           t.getThreadName(),\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 348,
    "bugNodeStartChar": 12351,
    "bugNodeLength": 6,
    "fixLineNum": 348,
    "fixNodeStartChar": 12351,
    "fixNodeLength": 7,
    "sourceBeforeFix": "ti > 0",
    "sourceAfterFix": "ti >= 0"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "ea37dda207cc8a24e3afb1cb8b0a59dd00ee0378",
    "fixCommitParentSHA1": "8ca7d101114a79dd25b509de813e413e7593bf33",
    "bugFilePath": "metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java",
    "fixPatch": "diff --git a/metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java b/metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java\nindex 6a82c5d..52ebd12 100644\n--- a/metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java\n+++ b/metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java\n@@ -31,7 +31,7 @@\n         }\n     }\n \n-    public static VirtualMachineMetrics INSTANCE = new VirtualMachineMetrics();\n+    public static final VirtualMachineMetrics INSTANCE = new VirtualMachineMetrics();\n \n     private VirtualMachineMetrics() { /* unused */ }\n \n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 34,
    "bugNodeStartChar": 812,
    "bugNodeLength": 75,
    "fixLineNum": 34,
    "fixNodeStartChar": 812,
    "fixNodeLength": 81,
    "sourceBeforeFix": "9",
    "sourceAfterFix": "25"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "8fe9347ccf26084928d9bb4367c03a44953a3934",
    "fixCommitParentSHA1": "b4cccc6c907c6797defc8e08539eb076c149cffa",
    "bugFilePath": "metrics-core/src/main/java/com/yammer/metrics/core/Histogram.java",
    "fixPatch": "diff --git a/metrics-core/src/main/java/com/yammer/metrics/core/Histogram.java b/metrics-core/src/main/java/com/yammer/metrics/core/Histogram.java\nindex a0734dc..e776e25 100644\n--- a/metrics-core/src/main/java/com/yammer/metrics/core/Histogram.java\n+++ b/metrics-core/src/main/java/com/yammer/metrics/core/Histogram.java\n@@ -244,7 +244,7 @@\n     private void setMax(long potentialMax) {\n         boolean done = false;\n         while (!done) {\n-            long currentMax = _max.get();\n+            final long currentMax = _max.get();\n             done = currentMax >= potentialMax || _max.compareAndSet(currentMax, potentialMax);\n         }\n     }\n@@ -252,7 +252,7 @@\n     private void setMin(long potentialMin) {\n         boolean done = false;\n         while (!done) {\n-            long currentMin = _min.get();\n+            final long currentMin = _min.get();\n             done = currentMin <= potentialMin || _min.compareAndSet(currentMin, potentialMin);\n         }\n     }\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 247,
    "bugNodeStartChar": 6757,
    "bugNodeLength": 29,
    "fixLineNum": 247,
    "fixNodeStartChar": 6757,
    "fixNodeLength": 35,
    "sourceBeforeFix": "0",
    "sourceAfterFix": "16"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "8fe9347ccf26084928d9bb4367c03a44953a3934",
    "fixCommitParentSHA1": "b4cccc6c907c6797defc8e08539eb076c149cffa",
    "bugFilePath": "metrics-core/src/main/java/com/yammer/metrics/core/Histogram.java",
    "fixPatch": "diff --git a/metrics-core/src/main/java/com/yammer/metrics/core/Histogram.java b/metrics-core/src/main/java/com/yammer/metrics/core/Histogram.java\nindex a0734dc..e776e25 100644\n--- a/metrics-core/src/main/java/com/yammer/metrics/core/Histogram.java\n+++ b/metrics-core/src/main/java/com/yammer/metrics/core/Histogram.java\n@@ -244,7 +244,7 @@\n     private void setMax(long potentialMax) {\n         boolean done = false;\n         while (!done) {\n-            long currentMax = _max.get();\n+            final long currentMax = _max.get();\n             done = currentMax >= potentialMax || _max.compareAndSet(currentMax, potentialMax);\n         }\n     }\n@@ -252,7 +252,7 @@\n     private void setMin(long potentialMin) {\n         boolean done = false;\n         while (!done) {\n-            long currentMin = _min.get();\n+            final long currentMin = _min.get();\n             done = currentMin <= potentialMin || _min.compareAndSet(currentMin, potentialMin);\n         }\n     }\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 255,
    "bugNodeStartChar": 7010,
    "bugNodeLength": 29,
    "fixLineNum": 255,
    "fixNodeStartChar": 7010,
    "fixNodeLength": 35,
    "sourceBeforeFix": "0",
    "sourceAfterFix": "16"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "da4a93dcd09cce1cf6fe88eab5a1867d28571d55",
    "fixCommitParentSHA1": "31e4da9fcbc612c07713b0c62b94059a8a7be1cb",
    "bugFilePath": "metrics-core/src/main/java/com/yammer/metrics/util/NamedThreadFactory.java",
    "fixPatch": "diff --git a/metrics-core/src/main/java/com/yammer/metrics/util/NamedThreadFactory.java b/metrics-core/src/main/java/com/yammer/metrics/util/NamedThreadFactory.java\nindex f269e3b..ca3866e 100644\n--- a/metrics-core/src/main/java/com/yammer/metrics/util/NamedThreadFactory.java\n+++ b/metrics-core/src/main/java/com/yammer/metrics/util/NamedThreadFactory.java\n@@ -19,7 +19,7 @@\n \n     @Override\n     public Thread newThread(Runnable r) {\n-        Thread t = new Thread(group, r, namePrefix + threadNumber.getAndIncrement(), 0);\n+        final Thread t = new Thread(group, r, namePrefix + threadNumber.getAndIncrement(), 0);\n         t.setDaemon(true);\n         if (t.getPriority() != Thread.NORM_PRIORITY) {\n             t.setPriority(Thread.NORM_PRIORITY);\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 22,
    "bugNodeStartChar": 707,
    "bugNodeLength": 80,
    "fixLineNum": 22,
    "fixNodeStartChar": 707,
    "fixNodeLength": 86,
    "sourceBeforeFix": "0",
    "sourceAfterFix": "16"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "ba753282c681f55ff64cce2bbb9e545f5992b1ac",
    "fixCommitParentSHA1": "1bfa069d3781ed858f54055ef2cc8f2d1bf5c18c",
    "bugFilePath": "metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java",
    "fixPatch": "diff --git a/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java b/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java\nindex 8d38ad4..98ffe2f 100644\n--- a/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java\n+++ b/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java\n@@ -55,7 +55,7 @@\n             this.startTime = tick();\n             nextScaleTime.set(System.nanoTime() + RESCALE_THRESHOLD);\n         } finally {\n-            lockForRescale();\n+            unlockForRescale();\n         }\n     }\n \n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 58,
    "bugNodeStartChar": 2314,
    "bugNodeLength": 16,
    "fixLineNum": 58,
    "fixNodeStartChar": 2314,
    "fixNodeLength": 18,
    "sourceBeforeFix": "lockForRescale()",
    "sourceAfterFix": "unlockForRescale()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "ba753282c681f55ff64cce2bbb9e545f5992b1ac",
    "fixCommitParentSHA1": "1bfa069d3781ed858f54055ef2cc8f2d1bf5c18c",
    "bugFilePath": "metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java",
    "fixPatch": "diff --git a/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java b/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java\nindex 8d38ad4..98ffe2f 100644\n--- a/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java\n+++ b/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java\n@@ -55,7 +55,7 @@\n             this.startTime = tick();\n             nextScaleTime.set(System.nanoTime() + RESCALE_THRESHOLD);\n         } finally {\n-            lockForRescale();\n+            unlockForRescale();\n         }\n     }\n \n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 58,
    "bugNodeStartChar": 2314,
    "bugNodeLength": 16,
    "fixLineNum": 58,
    "fixNodeStartChar": 2314,
    "fixNodeLength": 18,
    "sourceBeforeFix": "lockForRescale()",
    "sourceAfterFix": "unlockForRescale()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "814e3d21c793d9980826583a6356488f5fdc8017",
    "fixCommitParentSHA1": "2656e7fa86b314d4cc49bd0f2c5626a0104fe12c",
    "bugFilePath": "metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java",
    "fixPatch": "diff --git a/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java b/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java\nindex 2b36224..337aa43 100644\n--- a/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java\n+++ b/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java\n@@ -51,14 +51,14 @@\n \n     @Override\n     public void clear() {\n-\tlockForRegularUsage();\n+        lockForRescale();\n         try {\n            values.clear();\n            count.set(0);\n            this.startTime = tick();\n            nextScaleTime.set(System.nanoTime() + RESCALE_THRESHOLD);\n         } finally {\n-            unlockForRegularUsage();\n+            lockForRescale();\n \t}\n     }\n \n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 54,
    "bugNodeStartChar": 2090,
    "bugNodeLength": 21,
    "fixLineNum": 54,
    "fixNodeStartChar": 2097,
    "fixNodeLength": 16,
    "sourceBeforeFix": "lockForRegularUsage()",
    "sourceAfterFix": "lockForRescale()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "814e3d21c793d9980826583a6356488f5fdc8017",
    "fixCommitParentSHA1": "2656e7fa86b314d4cc49bd0f2c5626a0104fe12c",
    "bugFilePath": "metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java",
    "fixPatch": "diff --git a/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java b/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java\nindex 2b36224..337aa43 100644\n--- a/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java\n+++ b/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java\n@@ -51,14 +51,14 @@\n \n     @Override\n     public void clear() {\n-\tlockForRegularUsage();\n+        lockForRescale();\n         try {\n            values.clear();\n            count.set(0);\n            this.startTime = tick();\n            nextScaleTime.set(System.nanoTime() + RESCALE_THRESHOLD);\n         } finally {\n-            unlockForRegularUsage();\n+            lockForRescale();\n \t}\n     }\n \n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 54,
    "bugNodeStartChar": 2090,
    "bugNodeLength": 21,
    "fixLineNum": 54,
    "fixNodeStartChar": 2097,
    "fixNodeLength": 16,
    "sourceBeforeFix": "lockForRegularUsage()",
    "sourceAfterFix": "lockForRescale()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "814e3d21c793d9980826583a6356488f5fdc8017",
    "fixCommitParentSHA1": "2656e7fa86b314d4cc49bd0f2c5626a0104fe12c",
    "bugFilePath": "metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java",
    "fixPatch": "diff --git a/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java b/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java\nindex 2b36224..337aa43 100644\n--- a/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java\n+++ b/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java\n@@ -51,14 +51,14 @@\n \n     @Override\n     public void clear() {\n-\tlockForRegularUsage();\n+        lockForRescale();\n         try {\n            values.clear();\n            count.set(0);\n            this.startTime = tick();\n            nextScaleTime.set(System.nanoTime() + RESCALE_THRESHOLD);\n         } finally {\n-            unlockForRegularUsage();\n+            lockForRescale();\n \t}\n     }\n \n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 61,
    "bugNodeStartChar": 2316,
    "bugNodeLength": 23,
    "fixLineNum": 61,
    "fixNodeStartChar": 2316,
    "fixNodeLength": 16,
    "sourceBeforeFix": "unlockForRegularUsage()",
    "sourceAfterFix": "lockForRescale()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "814e3d21c793d9980826583a6356488f5fdc8017",
    "fixCommitParentSHA1": "2656e7fa86b314d4cc49bd0f2c5626a0104fe12c",
    "bugFilePath": "metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java",
    "fixPatch": "diff --git a/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java b/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java\nindex 2b36224..337aa43 100644\n--- a/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java\n+++ b/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java\n@@ -51,14 +51,14 @@\n \n     @Override\n     public void clear() {\n-\tlockForRegularUsage();\n+        lockForRescale();\n         try {\n            values.clear();\n            count.set(0);\n            this.startTime = tick();\n            nextScaleTime.set(System.nanoTime() + RESCALE_THRESHOLD);\n         } finally {\n-            unlockForRegularUsage();\n+            lockForRescale();\n \t}\n     }\n \n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 61,
    "bugNodeStartChar": 2316,
    "bugNodeLength": 23,
    "fixLineNum": 61,
    "fixNodeStartChar": 2316,
    "fixNodeLength": 16,
    "sourceBeforeFix": "unlockForRegularUsage()",
    "sourceAfterFix": "lockForRescale()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8ab6632d7aacd4bb08204db98792616a53b40cca",
    "fixCommitParentSHA1": "a3fc3775fbd0ce94ac892eb039f4bc231d0ec68e",
    "bugFilePath": "metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java",
    "fixPatch": "diff --git a/metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java b/metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java\nindex 2c32c26..536980b 100644\n--- a/metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java\n+++ b/metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java\n@@ -151,7 +151,7 @@\n     public static Map<String, GarbageCollector> garbageCollectors() {\n         final Map<String, GarbageCollector> gcs = new HashMap<String, GarbageCollector>();\n         for (GarbageCollectorMXBean bean : getGarbageCollectorMXBeans()) {\n-            gcs.put(bean.getName(), new GarbageCollector(bean.getCollectionCount(), bean.getCollectionCount()));\n+            gcs.put(bean.getName(), new GarbageCollector(bean.getCollectionCount(), bean.getCollectionTime()));\n         }\n         return gcs;\n     }\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 154,
    "bugNodeStartChar": 5433,
    "bugNodeLength": 25,
    "fixLineNum": 154,
    "fixNodeStartChar": 5433,
    "fixNodeLength": 24,
    "sourceBeforeFix": "bean.getCollectionCount()",
    "sourceAfterFix": "bean.getCollectionTime()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8ab6632d7aacd4bb08204db98792616a53b40cca",
    "fixCommitParentSHA1": "a3fc3775fbd0ce94ac892eb039f4bc231d0ec68e",
    "bugFilePath": "metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java",
    "fixPatch": "diff --git a/metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java b/metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java\nindex 2c32c26..536980b 100644\n--- a/metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java\n+++ b/metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java\n@@ -151,7 +151,7 @@\n     public static Map<String, GarbageCollector> garbageCollectors() {\n         final Map<String, GarbageCollector> gcs = new HashMap<String, GarbageCollector>();\n         for (GarbageCollectorMXBean bean : getGarbageCollectorMXBeans()) {\n-            gcs.put(bean.getName(), new GarbageCollector(bean.getCollectionCount(), bean.getCollectionCount()));\n+            gcs.put(bean.getName(), new GarbageCollector(bean.getCollectionCount(), bean.getCollectionTime()));\n         }\n         return gcs;\n     }\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 154,
    "bugNodeStartChar": 5433,
    "bugNodeLength": 25,
    "fixLineNum": 154,
    "fixNodeStartChar": 5433,
    "fixNodeLength": 24,
    "sourceBeforeFix": "bean.getCollectionCount()",
    "sourceAfterFix": "bean.getCollectionTime()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "844c29016bc25ac7114b290f2728d20ca6f81910",
    "fixCommitParentSHA1": "a3fc3775fbd0ce94ac892eb039f4bc231d0ec68e",
    "bugFilePath": "metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java",
    "fixPatch": "diff --git a/metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java b/metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java\nindex 2c32c26..536980b 100644\n--- a/metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java\n+++ b/metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java\n@@ -151,7 +151,7 @@\n     public static Map<String, GarbageCollector> garbageCollectors() {\n         final Map<String, GarbageCollector> gcs = new HashMap<String, GarbageCollector>();\n         for (GarbageCollectorMXBean bean : getGarbageCollectorMXBeans()) {\n-            gcs.put(bean.getName(), new GarbageCollector(bean.getCollectionCount(), bean.getCollectionCount()));\n+            gcs.put(bean.getName(), new GarbageCollector(bean.getCollectionCount(), bean.getCollectionTime()));\n         }\n         return gcs;\n     }\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 154,
    "bugNodeStartChar": 5433,
    "bugNodeLength": 25,
    "fixLineNum": 154,
    "fixNodeStartChar": 5433,
    "fixNodeLength": 24,
    "sourceBeforeFix": "bean.getCollectionCount()",
    "sourceAfterFix": "bean.getCollectionTime()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "844c29016bc25ac7114b290f2728d20ca6f81910",
    "fixCommitParentSHA1": "a3fc3775fbd0ce94ac892eb039f4bc231d0ec68e",
    "bugFilePath": "metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java",
    "fixPatch": "diff --git a/metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java b/metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java\nindex 2c32c26..536980b 100644\n--- a/metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java\n+++ b/metrics-core/src/main/java/com/yammer/metrics/core/VirtualMachineMetrics.java\n@@ -151,7 +151,7 @@\n     public static Map<String, GarbageCollector> garbageCollectors() {\n         final Map<String, GarbageCollector> gcs = new HashMap<String, GarbageCollector>();\n         for (GarbageCollectorMXBean bean : getGarbageCollectorMXBeans()) {\n-            gcs.put(bean.getName(), new GarbageCollector(bean.getCollectionCount(), bean.getCollectionCount()));\n+            gcs.put(bean.getName(), new GarbageCollector(bean.getCollectionCount(), bean.getCollectionTime()));\n         }\n         return gcs;\n     }\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 154,
    "bugNodeStartChar": 5433,
    "bugNodeLength": 25,
    "fixLineNum": 154,
    "fixNodeStartChar": 5433,
    "fixNodeLength": 24,
    "sourceBeforeFix": "bean.getCollectionCount()",
    "sourceAfterFix": "bean.getCollectionTime()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "9968eea08bf15cf42c41da717923967d606b3c1c",
    "fixCommitParentSHA1": "d7776fc534565cbd10bbe222b99b1a8f971a9852",
    "bugFilePath": "metrics-graphite/src/main/java/com/yammer/metrics/reporting/GraphiteReporter.java",
    "fixPatch": "diff --git a/metrics-graphite/src/main/java/com/yammer/metrics/reporting/GraphiteReporter.java b/metrics-graphite/src/main/java/com/yammer/metrics/reporting/GraphiteReporter.java\nindex 1f39cbb..304c503 100644\n--- a/metrics-graphite/src/main/java/com/yammer/metrics/reporting/GraphiteReporter.java\n+++ b/metrics-graphite/src/main/java/com/yammer/metrics/reporting/GraphiteReporter.java\n@@ -298,11 +298,11 @@\n     }\n \n     private void printDoubleField(String name, double value, long epoch) {\n-        sendToGraphite(String.format(\"%s%s %2.2f %d\\n\", prefix, sanitizedName(name), value, epoch));\n+        sendToGraphite(String.format(\"%s%s %2.2f %d\\n\", prefix, sanitizeName(name), value, epoch));\n     }\n \n     private void printLongField(String name, long value, long epoch) {\n-        sendToGraphite(String.format(\"%s%s %d %d\\n\", prefix, sanitizedName(name), value, epoch));\n+        sendToGraphite(String.format(\"%s%s %d %d\\n\", prefix, sanitizeName(name), value, epoch));\n     }\n \n     private void printVmMetrics(long epoch) throws IOException {\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 301,
    "bugNodeStartChar": 14778,
    "bugNodeLength": 19,
    "fixLineNum": 301,
    "fixNodeStartChar": 14778,
    "fixNodeLength": 18,
    "sourceBeforeFix": "sanitizedName(name)",
    "sourceAfterFix": "sanitizeName(name)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "9968eea08bf15cf42c41da717923967d606b3c1c",
    "fixCommitParentSHA1": "d7776fc534565cbd10bbe222b99b1a8f971a9852",
    "bugFilePath": "metrics-graphite/src/main/java/com/yammer/metrics/reporting/GraphiteReporter.java",
    "fixPatch": "diff --git a/metrics-graphite/src/main/java/com/yammer/metrics/reporting/GraphiteReporter.java b/metrics-graphite/src/main/java/com/yammer/metrics/reporting/GraphiteReporter.java\nindex 1f39cbb..304c503 100644\n--- a/metrics-graphite/src/main/java/com/yammer/metrics/reporting/GraphiteReporter.java\n+++ b/metrics-graphite/src/main/java/com/yammer/metrics/reporting/GraphiteReporter.java\n@@ -298,11 +298,11 @@\n     }\n \n     private void printDoubleField(String name, double value, long epoch) {\n-        sendToGraphite(String.format(\"%s%s %2.2f %d\\n\", prefix, sanitizedName(name), value, epoch));\n+        sendToGraphite(String.format(\"%s%s %2.2f %d\\n\", prefix, sanitizeName(name), value, epoch));\n     }\n \n     private void printLongField(String name, long value, long epoch) {\n-        sendToGraphite(String.format(\"%s%s %d %d\\n\", prefix, sanitizedName(name), value, epoch));\n+        sendToGraphite(String.format(\"%s%s %d %d\\n\", prefix, sanitizeName(name), value, epoch));\n     }\n \n     private void printVmMetrics(long epoch) throws IOException {\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 301,
    "bugNodeStartChar": 14778,
    "bugNodeLength": 19,
    "fixLineNum": 301,
    "fixNodeStartChar": 14778,
    "fixNodeLength": 18,
    "sourceBeforeFix": "sanitizedName(name)",
    "sourceAfterFix": "sanitizeName(name)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "9968eea08bf15cf42c41da717923967d606b3c1c",
    "fixCommitParentSHA1": "d7776fc534565cbd10bbe222b99b1a8f971a9852",
    "bugFilePath": "metrics-graphite/src/main/java/com/yammer/metrics/reporting/GraphiteReporter.java",
    "fixPatch": "diff --git a/metrics-graphite/src/main/java/com/yammer/metrics/reporting/GraphiteReporter.java b/metrics-graphite/src/main/java/com/yammer/metrics/reporting/GraphiteReporter.java\nindex 1f39cbb..304c503 100644\n--- a/metrics-graphite/src/main/java/com/yammer/metrics/reporting/GraphiteReporter.java\n+++ b/metrics-graphite/src/main/java/com/yammer/metrics/reporting/GraphiteReporter.java\n@@ -298,11 +298,11 @@\n     }\n \n     private void printDoubleField(String name, double value, long epoch) {\n-        sendToGraphite(String.format(\"%s%s %2.2f %d\\n\", prefix, sanitizedName(name), value, epoch));\n+        sendToGraphite(String.format(\"%s%s %2.2f %d\\n\", prefix, sanitizeName(name), value, epoch));\n     }\n \n     private void printLongField(String name, long value, long epoch) {\n-        sendToGraphite(String.format(\"%s%s %d %d\\n\", prefix, sanitizedName(name), value, epoch));\n+        sendToGraphite(String.format(\"%s%s %d %d\\n\", prefix, sanitizeName(name), value, epoch));\n     }\n \n     private void printVmMetrics(long epoch) throws IOException {\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 305,
    "bugNodeStartChar": 14954,
    "bugNodeLength": 19,
    "fixLineNum": 305,
    "fixNodeStartChar": 14954,
    "fixNodeLength": 18,
    "sourceBeforeFix": "sanitizedName(name)",
    "sourceAfterFix": "sanitizeName(name)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "9968eea08bf15cf42c41da717923967d606b3c1c",
    "fixCommitParentSHA1": "d7776fc534565cbd10bbe222b99b1a8f971a9852",
    "bugFilePath": "metrics-graphite/src/main/java/com/yammer/metrics/reporting/GraphiteReporter.java",
    "fixPatch": "diff --git a/metrics-graphite/src/main/java/com/yammer/metrics/reporting/GraphiteReporter.java b/metrics-graphite/src/main/java/com/yammer/metrics/reporting/GraphiteReporter.java\nindex 1f39cbb..304c503 100644\n--- a/metrics-graphite/src/main/java/com/yammer/metrics/reporting/GraphiteReporter.java\n+++ b/metrics-graphite/src/main/java/com/yammer/metrics/reporting/GraphiteReporter.java\n@@ -298,11 +298,11 @@\n     }\n \n     private void printDoubleField(String name, double value, long epoch) {\n-        sendToGraphite(String.format(\"%s%s %2.2f %d\\n\", prefix, sanitizedName(name), value, epoch));\n+        sendToGraphite(String.format(\"%s%s %2.2f %d\\n\", prefix, sanitizeName(name), value, epoch));\n     }\n \n     private void printLongField(String name, long value, long epoch) {\n-        sendToGraphite(String.format(\"%s%s %d %d\\n\", prefix, sanitizedName(name), value, epoch));\n+        sendToGraphite(String.format(\"%s%s %d %d\\n\", prefix, sanitizeName(name), value, epoch));\n     }\n \n     private void printVmMetrics(long epoch) throws IOException {\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 305,
    "bugNodeStartChar": 14954,
    "bugNodeLength": 19,
    "fixLineNum": 305,
    "fixNodeStartChar": 14954,
    "fixNodeLength": 18,
    "sourceBeforeFix": "sanitizedName(name)",
    "sourceAfterFix": "sanitizeName(name)"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "34aa92dca9aee7ee6e0ba551e69639f853df15d3",
    "fixCommitParentSHA1": "fbc4c4b2adfb1460e6398d61bc4371c91ef3a0e0",
    "bugFilePath": "src/main/java/com/yammer/metrics/core/MetricsServlet.java",
    "fixPatch": "diff --git a/src/main/java/com/yammer/metrics/core/MetricsServlet.java b/src/main/java/com/yammer/metrics/core/MetricsServlet.java\nindex dba4ecb..0d4fb4b 100644\n--- a/src/main/java/com/yammer/metrics/core/MetricsServlet.java\n+++ b/src/main/java/com/yammer/metrics/core/MetricsServlet.java\n@@ -96,7 +96,7 @@\n \t@Override\n \tprotected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n \t\tfinal String uri = req.getPathInfo();\n-\t\tif (uri.equals(\"/\")) {\n+\t\tif (uri == null || uri.equals(\"/\")) {\n \t\t\thandleHome(resp);\n \t\t} else if (uri.startsWith(metricsUri)) {\n \t\t\thandleMetrics(req.getParameter(\"class\"), Boolean.parseBoolean(req.getParameter(\"full-samples\")), resp);\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 99,
    "bugNodeStartChar": 3390,
    "bugNodeLength": 15,
    "fixLineNum": 99,
    "fixNodeStartChar": 3390,
    "fixNodeLength": 30,
    "sourceBeforeFix": "uri.equals(\"/\")",
    "sourceAfterFix": "uri == null || uri.equals(\"/\")"
  },
  {
    "bugType": "CHANGE_OPERATOR",
    "fixCommitSHA1": "c87eb7a0cf6692600405dc01ed1479cb21ce7dea",
    "fixCommitParentSHA1": "82039a274328f3338f0cf5350111da858c8e6947",
    "bugFilePath": "src/main/java/com/yammer/metrics/core/ExponentiallyDecayingSample.java",
    "fixPatch": "diff --git a/src/main/java/com/yammer/metrics/core/ExponentiallyDecayingSample.java b/src/main/java/com/yammer/metrics/core/ExponentiallyDecayingSample.java\nindex 69c6395..f41eacc 100644\n--- a/src/main/java/com/yammer/metrics/core/ExponentiallyDecayingSample.java\n+++ b/src/main/java/com/yammer/metrics/core/ExponentiallyDecayingSample.java\n@@ -113,7 +113,7 @@\n \t\tfinal double priority = weight(timestamp - startTime) / random;\n \t\tfinal long newCount = count.incrementAndGet();\n \n-\t\tif (newCount < reservoirSize) {\n+\t\tif (newCount <= reservoirSize) {\n \t\t\tvalues.put(new Value(newCount, value, priority));\n \t\t} else {\n \t\t\tif (values.peek().priority < priority) {\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 116,
    "bugNodeStartChar": 3287,
    "bugNodeLength": 24,
    "fixLineNum": 116,
    "fixNodeStartChar": 3287,
    "fixNodeLength": 25,
    "sourceBeforeFix": "newCount < reservoirSize",
    "sourceAfterFix": "newCount <= reservoirSize"
  },
  {
    "bugType": "CHANGE_OPERATOR",
    "fixCommitSHA1": "82039a274328f3338f0cf5350111da858c8e6947",
    "fixCommitParentSHA1": "de368f26395829a4430870f35db05334c10587da",
    "bugFilePath": "src/main/java/com/yammer/metrics/core/UniformSample.java",
    "fixPatch": "diff --git a/src/main/java/com/yammer/metrics/core/UniformSample.java b/src/main/java/com/yammer/metrics/core/UniformSample.java\nindex 9d30d2d..1303b41 100644\n--- a/src/main/java/com/yammer/metrics/core/UniformSample.java\n+++ b/src/main/java/com/yammer/metrics/core/UniformSample.java\n@@ -50,7 +50,7 @@\n \t@Override\n \tpublic void update(long value) {\n \t\tfinal long c = count.incrementAndGet();\n-\t\tif (c < values.length()) {\n+\t\tif (c <= values.length()) {\n \t\t\tvalues.set((int) c - 1, value);\n \t\t} else {\n \t\t\tfinal int r = (int) (Math.abs(RANDOM.nextLong()) % c);\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 53,
    "bugNodeStartChar": 1296,
    "bugNodeLength": 19,
    "fixLineNum": 53,
    "fixNodeStartChar": 1296,
    "fixNodeLength": 20,
    "sourceBeforeFix": "c < values.length()",
    "sourceAfterFix": "c <= values.length()"
  },
  {
    "bugType": "CHANGE_UNARY_OPERATOR",
    "fixCommitSHA1": "0786ef300c31c2ba9ebaa4470635e22cee9397a3",
    "fixCommitParentSHA1": "7d5a8a662f28245ab37196c28063f729b80d3ff9",
    "bugFilePath": "src/main/java/com/yammer/metrics/core/DeadlockHealthCheck.java",
    "fixPatch": "diff --git a/src/main/java/com/yammer/metrics/core/DeadlockHealthCheck.java b/src/main/java/com/yammer/metrics/core/DeadlockHealthCheck.java\nindex bdb053b..4e97f8e 100644\n--- a/src/main/java/com/yammer/metrics/core/DeadlockHealthCheck.java\n+++ b/src/main/java/com/yammer/metrics/core/DeadlockHealthCheck.java\n@@ -10,7 +10,7 @@\n \t@Override\n \tpublic Result check() throws Exception {\n \t\tfinal Set<String> threads = VirtualMachineMetrics.deadlockedThreads();\n-\t\tif (threads.isEmpty()) {\n+\t\tif (!threads.isEmpty()) {\n \t\t\tfinal StringBuilder builder = new StringBuilder(\"Deadlocked threads detected:\\n\");\n \t\t\tfor (String thread : threads) {\n \t\t\t\tbuilder.append(thread).append('\\n');\n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 13,
    "bugNodeStartChar": 347,
    "bugNodeLength": 17,
    "fixLineNum": 13,
    "fixNodeStartChar": 347,
    "fixNodeLength": 18,
    "sourceBeforeFix": "threads.isEmpty()",
    "sourceAfterFix": "!threads.isEmpty()"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "4743cfc38b17ee3f8aa7faf658cd758c0ad3e12e",
    "fixCommitParentSHA1": "37422c2a16aceae32b2a91910405c96b78d65960",
    "bugFilePath": "servlet/src/main/java/com/yammer/metrics/reporting/MetricsServlet.java",
    "fixPatch": "diff --git a/servlet/src/main/java/com/yammer/metrics/reporting/MetricsServlet.java b/servlet/src/main/java/com/yammer/metrics/reporting/MetricsServlet.java\nindex 5df156a..78f0165 100644\n--- a/servlet/src/main/java/com/yammer/metrics/reporting/MetricsServlet.java\n+++ b/servlet/src/main/java/com/yammer/metrics/reporting/MetricsServlet.java\n@@ -36,10 +36,10 @@\n \t\t\t\t\t\t\t\t\t\t   \"<body>\\n\" +\n \t\t\t\t\t\t\t\t\t\t   \"  <h1>Operational Menu</h1>\\n\" +\n \t\t\t\t\t\t\t\t\t\t   \"  <ul>\\n\" +\n-\t\t\t\t\t\t\t\t\t\t   \"    <li><a href=\\\"{0}\\\">Metrics</a></li>\\n\" +\n-\t\t\t\t\t\t\t\t\t\t   \"    <li><a href=\\\"{1}\\\">Ping</a></li>\\n\" +\n-\t\t\t\t\t\t\t\t\t\t   \"    <li><a href=\\\"{2}\\\">Threads</a></li>\\n\" +\n-\t\t\t\t\t\t\t\t\t\t   \"    <li><a href=\\\"{3}\\\">Healthcheck</a></li>\\n\" +\n+\t\t\t\t\t\t\t\t\t\t   \"    <li><a href=\\\"{0}{1}\\\">Metrics</a></li>\\n\" +\n+\t\t\t\t\t\t\t\t\t\t   \"    <li><a href=\\\"{2}{3}\\\">Ping</a></li>\\n\" +\n+\t\t\t\t\t\t\t\t\t\t   \"    <li><a href=\\\"{4}{5}\\\">Threads</a></li>\\n\" +\n+\t\t\t\t\t\t\t\t\t\t   \"    <li><a href=\\\"{6}{7}\\\">Healthcheck</a></li>\\n\" +\n \t\t\t\t\t\t\t\t\t\t   \"  </ul>\\n\" +\n \t\t\t\t\t\t\t\t\t\t   \"</body>\\n\" +\n \t\t\t\t\t\t\t\t\t\t   \"</html>\";\n@@ -94,7 +94,7 @@\n \tprotected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n \t\tfinal String uri = req.getPathInfo();\n \t\tif (uri == null || uri.equals(\"/\")) {\n-\t\t\thandleHome(resp);\n+\t\t\thandleHome(req.getServletPath(), resp);\n \t\t} else if (uri.startsWith(metricsUri)) {\n \t\t\thandleMetrics(req.getParameter(\"class\"), Boolean.parseBoolean(req.getParameter(\"full-samples\")), resp);\n \t\t} else if (uri.equals(pingUri)) {\n@@ -108,12 +108,12 @@\n \t\t}\n \t}\n \n-\tprivate void handleHome(HttpServletResponse resp) throws IOException {\n+\tprivate void handleHome(String path, HttpServletResponse resp) throws IOException {\n \t\tresp.setStatus(HttpServletResponse.SC_OK);\n \t\tresp.setContentType(\"text/html\");\n \n \t\tfinal PrintWriter writer = resp.getWriter();\n-\t\twriter.println(MessageFormat.format(TEMPLATE, metricsUri, pingUri, threadsUri, healthcheckUri));\n+\t\twriter.println(MessageFormat.format(TEMPLATE, path, metricsUri, path, pingUri, path, threadsUri, path, healthcheckUri));\n \t\twriter.close();\n \t}\n \n",
    "projectName": "dropwizard.metrics",
    "bugLineNum": 116,
    "bugNodeStartChar": 4593,
    "bugNodeLength": 79,
    "fixLineNum": 116,
    "fixNodeStartChar": 4593,
    "fixNodeLength": 103,
    "sourceBeforeFix": "MessageFormat.format(TEMPLATE,metricsUri,pingUri,threadsUri,healthcheckUri)",
    "sourceAfterFix": "MessageFormat.format(TEMPLATE,path,metricsUri,path,pingUri,path,threadsUri,path,healthcheckUri)"
  }
]