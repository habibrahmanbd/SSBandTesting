[
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "93732941ac3e2f40c6a807c4b11577646b5668d4",
    "fixCommitParentSHA1": "8d5b4c1e9acc499377da0d807e7ca2245d5c3bdf",
    "bugFilePath": "src/main/java/org/bukkit/command/defaults/DeopCommand.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/command/defaults/DeopCommand.java b/src/main/java/org/bukkit/command/defaults/DeopCommand.java\nindex 1b71d49..c46750a 100644\n--- a/src/main/java/org/bukkit/command/defaults/DeopCommand.java\n+++ b/src/main/java/org/bukkit/command/defaults/DeopCommand.java\n@@ -49,9 +49,9 @@\n \n         if (args.length == 1) {\n             List<String> completions = new ArrayList<String>();\n-            for (OfflinePlayer player : Bukkit.getOfflinePlayers()) {\n+            for (OfflinePlayer player : Bukkit.getOperators()) {\n                 String playerName = player.getName();\n-                if (player.isOp() && StringUtil.startsWithIgnoreCase(playerName, args[0])) {\n+                if (StringUtil.startsWithIgnoreCase(playerName, args[0])) {\n                     completions.add(playerName);\n                 }\n             }\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 52,
    "bugNodeStartChar": 1795,
    "bugNodeLength": 26,
    "fixLineNum": 52,
    "fixNodeStartChar": 1795,
    "fixNodeLength": 21,
    "sourceBeforeFix": "Bukkit.getOfflinePlayers()",
    "sourceAfterFix": "Bukkit.getOperators()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "93732941ac3e2f40c6a807c4b11577646b5668d4",
    "fixCommitParentSHA1": "8d5b4c1e9acc499377da0d807e7ca2245d5c3bdf",
    "bugFilePath": "src/main/java/org/bukkit/command/defaults/DeopCommand.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/command/defaults/DeopCommand.java b/src/main/java/org/bukkit/command/defaults/DeopCommand.java\nindex 1b71d49..c46750a 100644\n--- a/src/main/java/org/bukkit/command/defaults/DeopCommand.java\n+++ b/src/main/java/org/bukkit/command/defaults/DeopCommand.java\n@@ -49,9 +49,9 @@\n \n         if (args.length == 1) {\n             List<String> completions = new ArrayList<String>();\n-            for (OfflinePlayer player : Bukkit.getOfflinePlayers()) {\n+            for (OfflinePlayer player : Bukkit.getOperators()) {\n                 String playerName = player.getName();\n-                if (player.isOp() && StringUtil.startsWithIgnoreCase(playerName, args[0])) {\n+                if (StringUtil.startsWithIgnoreCase(playerName, args[0])) {\n                     completions.add(playerName);\n                 }\n             }\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 52,
    "bugNodeStartChar": 1795,
    "bugNodeLength": 26,
    "fixLineNum": 52,
    "fixNodeStartChar": 1795,
    "fixNodeLength": 21,
    "sourceBeforeFix": "Bukkit.getOfflinePlayers()",
    "sourceAfterFix": "Bukkit.getOperators()"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "8f42f10cb9c29872b83f2a3595248c8c9f28326d",
    "fixCommitParentSHA1": "8652e1ff2838e16b7a4e141a37c8bf45299b6edd",
    "bugFilePath": "src/main/java/org/bukkit/command/defaults/TeleportCommand.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/command/defaults/TeleportCommand.java b/src/main/java/org/bukkit/command/defaults/TeleportCommand.java\nindex 2147d3e..fd1b9bd 100644\n--- a/src/main/java/org/bukkit/command/defaults/TeleportCommand.java\n+++ b/src/main/java/org/bukkit/command/defaults/TeleportCommand.java\n@@ -71,7 +71,7 @@\n             playerLocation.setY(y);\n             playerLocation.setZ(z);\n \n-            player.teleport(playerLocation);\n+            player.teleport(playerLocation, TeleportCause.COMMAND);\n             Command.broadcastCommandMessage(sender, String.format(\"Teleported %s to %.2f, %.2f, %.2f\", player.getDisplayName(), x, y, z));\n         }\n         return true;\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 74,
    "bugNodeStartChar": 2763,
    "bugNodeLength": 31,
    "fixLineNum": 74,
    "fixNodeStartChar": 2763,
    "fixNodeLength": 54,
    "sourceBeforeFix": "player.teleport(playerLocation)",
    "sourceAfterFix": "player.teleport(playerLocation,TeleportCause.COMMAND)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "c00ac08514c93edc88e556d40ac75a54eb40e271",
    "fixCommitParentSHA1": "f01d64b538b197e92d3bbaa4564ff3dc02c3e727",
    "bugFilePath": "src/main/java/org/bukkit/map/MapPalette.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/map/MapPalette.java b/src/main/java/org/bukkit/map/MapPalette.java\nindex 5305481..b4ed684 100644\n--- a/src/main/java/org/bukkit/map/MapPalette.java\n+++ b/src/main/java/org/bukkit/map/MapPalette.java\n@@ -34,19 +34,41 @@\n     private static final Color[] colors = {\n         new Color(0, 0, 0, 0), new Color(0, 0, 0, 0),\n         new Color(0, 0, 0, 0), new Color(0, 0, 0, 0),\n-        c(89,125,39), c(109,153,48), c(27,178,56), c(109,153,48),\n-        c(174,164,115), c(213,201,140), c(247,233,163), c(213,201,140),\n-        c(117,117,117), c(144,144,144), c(167,167,167), c(144,144,144),\n-        c(180,0,0), c(220,0,0), c(255,0,0), c(220,0,0),\n-        c(112,112,180), c(138,138,220), c(160,160,255), c(138,138,220),\n-        c(117,117,117), c(144,144,144), c(167,167,167), c(144,144,144),\n-        c(0,87,0), c(0,106,0), c(0,124,0), c(0,106,0),\n-        c(180,180,180), c(220,220,220), c(255,255,255), c(220,220,220),\n-        c(115,118,129), c(141,144,158), c(164,168,184), c(141,144,158),\n-        c(129,74,33), c(157,91,40), c(183,106,47), c(157,91,40),\n-        c(79,79,79), c(96,96,96), c(112,112,112), c(96,96,96),\n-        c(45,45,180), c(55,55,220), c(64,64,255), c(55,55,220),\n-        c(73,58,35), c(89,71,43), c(104,83,50), c(89,71,43)\n+        c(89,125,39), c(109,153,48), c(127,178,56), c(67,94,29),\n+        c(174,164,115), c(213,201,140), c(247,233,163), c(130,123,86),\n+        c(117,117,117), c(144,144,144), c(167,167,167), c(88,88,88),\n+        c(180,0,0), c(220,0,0), c(255,0,0), c(135,0,0),\n+        c(112,112,180), c(138,138,220), c(160,160,255), c(84,84,135),\n+        c(117,117,117), c(144,144,144), c(167,167,167), c(88,88,88),\n+        c(0,87,0), c(0,106,0), c(0,124,0), c(0,65,0),\n+        c(180,180,180), c(220,220,220), c(255,255,255), c(135,135,135),\n+        c(115,118,129), c(141,144,158), c(164,168,184), c(86,88,97),\n+        c(129,74,33), c(157,91,40), c(183,106,47), c(96,56,24),\n+        c(79,79,79), c(96,96,96), c(112,112,112), c(59,59,59),\n+        c(45,45,180), c(55,55,220), c(64,64,255), c(33,33,135),\n+        c(73,58,35), c(89,71,43), c(104,83,50), c(55,43,26),\n+        c(180,177,172), c(220,217,211), c(255,252,245), c(135,133,129),\n+        c(152,89,36), c(186,109,44), c(216,127,51), c(114,67,27),\n+        c(125,53,152), c(153,65,186), c(178,76,216), c(94,40,114),\n+        c(72,108,152), c(88,132,186), c(102,153,216), c(54,81,114),\n+        c(161,161,36), c(197,197,44), c(229,229,51), c(121,121,27),\n+        c(89,144,17), c(109,176,21), c(127,204,25), c(67,108,13),\n+        c(170,89,116), c(208,109,142), c(242,127,165), c(128,67,87),\n+        c(53,53,53), c(65,65,65), c(76,76,76), c(40,40,40),\n+        c(108,108,108), c(132,132,132), c(153,153,153), c(81,81,81),\n+        c(53,89,108), c(65,109,132), c(76,127,153), c(40,67,81),\n+        c(89,44,125), c(109,54,153), c(127,63,178), c(67,33,94),\n+        c(36,53,125), c(44,65,153), c(51,76,178), c(27,40,94),\n+        c(72,53,36), c(88,65,44), c(102,76,51), c(54,40,27),\n+        c(72,89,36), c(88,109,44), c(102,127,51), c(54,67,27),\n+        c(108,36,36), c(132,44,44), c(153,51,51), c(81,27,27),\n+        c(17,17,17), c(21,21,21), c(25,25,25), c(13,13,13),\n+        c(176,168,54), c(215,205,66), c(250,238,77), c(132,126,40),\n+        c(64,154,150), c(79,188,183), c(92,219,213), c(48,115,112),\n+        c(52,90,180), c(63,110,220), c(74,128,255), c(39,67,135),\n+        c(0,153,40), c(0,187,50), c(0,217,58), c(0,114,30),\n+        c(14,14,21), c(18,17,26), c(21,20,31), c(11,10,16),\n+        c(79,1,0), c(96,1,0), c(112,2,0), c(59,1,0)\n     };\n \n     // Interface\n@@ -187,7 +209,7 @@\n         int index = 0;\n         double best = -1;\n \n-        for (int i = 4; i < colors.length; i++) {\n+        for (int i = 0; i < colors.length; i++) {\n             double distance = getDistance(color, colors[i]);\n             if (distance < best || best == -1) {\n                 best = distance;\n@@ -195,7 +217,8 @@\n             }\n         }\n \n-        return (byte) index;\n+        // Minecraft has 143 colors, some of which have negative byte representations\n+        return (byte) (index < 128 ? index : -129 + (index - 127));\n     }\n \n     /**\n@@ -207,10 +230,11 @@\n      */\n     @Deprecated\n     public static Color getColor(byte index) {\n-        if (index < 0 || index >= colors.length) {\n+        if ((index > -113 && index < 0) || index > 127) {\n             throw new IndexOutOfBoundsException();\n         } else {\n-            return colors[index];\n+            // Minecraft has 143 colors, some of which have negative byte representations\n+            return colors[index >= 0 ? index : index + 256];\n         }\n     }\n \n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 190,
    "bugNodeStartChar": 5725,
    "bugNodeLength": 5,
    "fixLineNum": 190,
    "fixNodeStartChar": 5725,
    "fixNodeLength": 5,
    "sourceBeforeFix": "i=4",
    "sourceAfterFix": "i=0"
  },
  {
    "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
    "fixCommitSHA1": "2ccd6714a1039f58ba171438af36ffada86343e1",
    "fixCommitParentSHA1": "bf832ee9d60b348f0b003631c411c5f3fe23226c",
    "bugFilePath": "src/main/java/org/bukkit/command/defaults/PlaySoundCommand.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/command/defaults/PlaySoundCommand.java b/src/main/java/org/bukkit/command/defaults/PlaySoundCommand.java\nindex 3dfb048..0cb5ca2 100644\n--- a/src/main/java/org/bukkit/command/defaults/PlaySoundCommand.java\n+++ b/src/main/java/org/bukkit/command/defaults/PlaySoundCommand.java\n@@ -74,10 +74,10 @@\n             final double delta = Math.sqrt(deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ) / 2.0D;\n \n             if (delta > 0.0D) {\n-                soundLocation.add(deltaX / delta, deltaY / delta, deltaZ / delta);\n+                location.add(deltaX / delta, deltaY / delta, deltaZ / delta);\n             }\n \n-            player.playSound(soundLocation, soundArg, (float) minimumVolume, (float) pitch);\n+            player.playSound(location, soundArg, (float) minimumVolume, (float) pitch);\n         } else {\n             player.playSound(soundLocation, soundArg, (float) volume, (float) pitch);\n         }\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 77,
    "bugNodeStartChar": 2760,
    "bugNodeLength": 65,
    "fixLineNum": 77,
    "fixNodeStartChar": 2760,
    "fixNodeLength": 60,
    "sourceBeforeFix": "soundLocation.add(deltaX / delta,deltaY / delta,deltaZ / delta)",
    "sourceAfterFix": "location.add(deltaX / delta,deltaY / delta,deltaZ / delta)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "2ccd6714a1039f58ba171438af36ffada86343e1",
    "fixCommitParentSHA1": "bf832ee9d60b348f0b003631c411c5f3fe23226c",
    "bugFilePath": "src/main/java/org/bukkit/command/defaults/PlaySoundCommand.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/command/defaults/PlaySoundCommand.java b/src/main/java/org/bukkit/command/defaults/PlaySoundCommand.java\nindex 3dfb048..0cb5ca2 100644\n--- a/src/main/java/org/bukkit/command/defaults/PlaySoundCommand.java\n+++ b/src/main/java/org/bukkit/command/defaults/PlaySoundCommand.java\n@@ -74,10 +74,10 @@\n             final double delta = Math.sqrt(deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ) / 2.0D;\n \n             if (delta > 0.0D) {\n-                soundLocation.add(deltaX / delta, deltaY / delta, deltaZ / delta);\n+                location.add(deltaX / delta, deltaY / delta, deltaZ / delta);\n             }\n \n-            player.playSound(soundLocation, soundArg, (float) minimumVolume, (float) pitch);\n+            player.playSound(location, soundArg, (float) minimumVolume, (float) pitch);\n         } else {\n             player.playSound(soundLocation, soundArg, (float) volume, (float) pitch);\n         }\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 77,
    "bugNodeStartChar": 2760,
    "bugNodeLength": 65,
    "fixLineNum": 77,
    "fixNodeStartChar": 2760,
    "fixNodeLength": 60,
    "sourceBeforeFix": "soundLocation.add(deltaX / delta,deltaY / delta,deltaZ / delta)",
    "sourceAfterFix": "location.add(deltaX / delta,deltaY / delta,deltaZ / delta)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "2ccd6714a1039f58ba171438af36ffada86343e1",
    "fixCommitParentSHA1": "bf832ee9d60b348f0b003631c411c5f3fe23226c",
    "bugFilePath": "src/main/java/org/bukkit/command/defaults/PlaySoundCommand.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/command/defaults/PlaySoundCommand.java b/src/main/java/org/bukkit/command/defaults/PlaySoundCommand.java\nindex 3dfb048..0cb5ca2 100644\n--- a/src/main/java/org/bukkit/command/defaults/PlaySoundCommand.java\n+++ b/src/main/java/org/bukkit/command/defaults/PlaySoundCommand.java\n@@ -74,10 +74,10 @@\n             final double delta = Math.sqrt(deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ) / 2.0D;\n \n             if (delta > 0.0D) {\n-                soundLocation.add(deltaX / delta, deltaY / delta, deltaZ / delta);\n+                location.add(deltaX / delta, deltaY / delta, deltaZ / delta);\n             }\n \n-            player.playSound(soundLocation, soundArg, (float) minimumVolume, (float) pitch);\n+            player.playSound(location, soundArg, (float) minimumVolume, (float) pitch);\n         } else {\n             player.playSound(soundLocation, soundArg, (float) volume, (float) pitch);\n         }\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 80,
    "bugNodeStartChar": 2854,
    "bugNodeLength": 79,
    "fixLineNum": 80,
    "fixNodeStartChar": 2854,
    "fixNodeLength": 74,
    "sourceBeforeFix": "player.playSound(soundLocation,soundArg,(float)minimumVolume,(float)pitch)",
    "sourceAfterFix": "player.playSound(location,soundArg,(float)minimumVolume,(float)pitch)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "cbd5e3bfe5f09d83892807487aea507df223d5fb",
    "fixCommitParentSHA1": "cd0205e53eda66f6bcc6545c739d80f9089466d2",
    "bugFilePath": "src/main/java/org/bukkit/command/defaults/ScoreboardCommand.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/command/defaults/ScoreboardCommand.java b/src/main/java/org/bukkit/command/defaults/ScoreboardCommand.java\nindex 687af3d..a805f7c 100644\n--- a/src/main/java/org/bukkit/command/defaults/ScoreboardCommand.java\n+++ b/src/main/java/org/bukkit/command/defaults/ScoreboardCommand.java\n@@ -309,7 +309,7 @@\n                 } else {\n                     String displayName = null;\n                     if (args.length > 3) {\n-                        displayName = StringUtils.join(ArrayUtils.subarray(args, 4, args.length), ' ');\n+                        displayName = StringUtils.join(ArrayUtils.subarray(args, 3, args.length), ' ');\n                         if (displayName.length() > 32) {\n                             sender.sendMessage(ChatColor.RED + \"The display name '\" + displayName + \"' is too long for a team, it can be at most 32 characters long\");\n                             return false;\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 312,
    "bugNodeStartChar": 17133,
    "bugNodeLength": 41,
    "fixLineNum": 312,
    "fixNodeStartChar": 17133,
    "fixNodeLength": 41,
    "sourceBeforeFix": "ArrayUtils.subarray(args,4,args.length)",
    "sourceAfterFix": "ArrayUtils.subarray(args,3,args.length)"
  },
  {
    "bugType": "CHANGE_OPERATOR",
    "fixCommitSHA1": "2de99a4f38d67e7e2744a2d815ddb1910ef63b1a",
    "fixCommitParentSHA1": "30a975890e84f95b10140fbdeb3dbf51ae6409bf",
    "bugFilePath": "src/main/java/org/bukkit/DyeColor.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/DyeColor.java b/src/main/java/org/bukkit/DyeColor.java\nindex b8e59a4..58f517b 100644\n--- a/src/main/java/org/bukkit/DyeColor.java\n+++ b/src/main/java/org/bukkit/DyeColor.java\n@@ -164,7 +164,7 @@\n      */\n     public static DyeColor getByWoolData(final byte data) {\n         int i = 0xff & data;\n-        if (i > BY_WOOL_DATA.length) {\n+        if (i >= BY_WOOL_DATA.length) {\n             return null;\n         }\n         return BY_WOOL_DATA[i];\n@@ -179,7 +179,7 @@\n      */\n     public static DyeColor getByDyeData(final byte data) {\n         int i = 0xff & data;\n-        if (i > BY_DYE_DATA.length) {\n+        if (i >= BY_DYE_DATA.length) {\n             return null;\n         }\n         return BY_DYE_DATA[i];\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 167,
    "bugNodeStartChar": 4761,
    "bugNodeLength": 23,
    "fixLineNum": 167,
    "fixNodeStartChar": 4761,
    "fixNodeLength": 24,
    "sourceBeforeFix": "i > BY_WOOL_DATA.length",
    "sourceAfterFix": "i >= BY_WOOL_DATA.length"
  },
  {
    "bugType": "CHANGE_OPERATOR",
    "fixCommitSHA1": "2de99a4f38d67e7e2744a2d815ddb1910ef63b1a",
    "fixCommitParentSHA1": "30a975890e84f95b10140fbdeb3dbf51ae6409bf",
    "bugFilePath": "src/main/java/org/bukkit/DyeColor.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/DyeColor.java b/src/main/java/org/bukkit/DyeColor.java\nindex b8e59a4..58f517b 100644\n--- a/src/main/java/org/bukkit/DyeColor.java\n+++ b/src/main/java/org/bukkit/DyeColor.java\n@@ -164,7 +164,7 @@\n      */\n     public static DyeColor getByWoolData(final byte data) {\n         int i = 0xff & data;\n-        if (i > BY_WOOL_DATA.length) {\n+        if (i >= BY_WOOL_DATA.length) {\n             return null;\n         }\n         return BY_WOOL_DATA[i];\n@@ -179,7 +179,7 @@\n      */\n     public static DyeColor getByDyeData(final byte data) {\n         int i = 0xff & data;\n-        if (i > BY_DYE_DATA.length) {\n+        if (i >= BY_DYE_DATA.length) {\n             return null;\n         }\n         return BY_DYE_DATA[i];\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 182,
    "bugNodeStartChar": 5211,
    "bugNodeLength": 22,
    "fixLineNum": 182,
    "fixNodeStartChar": 5211,
    "fixNodeLength": 23,
    "sourceBeforeFix": "i > BY_DYE_DATA.length",
    "sourceAfterFix": "i >= BY_DYE_DATA.length"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "18c46487add2b1c32060bb9c1fc8e6e36a3d44b0",
    "fixCommitParentSHA1": "be1429665d3a46e7ccd877f6319f12b2e21c6c50",
    "bugFilePath": "src/main/java/org/bukkit/command/defaults/ScoreboardCommand.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/command/defaults/ScoreboardCommand.java b/src/main/java/org/bukkit/command/defaults/ScoreboardCommand.java\nindex 0b2755a..687af3d 100644\n--- a/src/main/java/org/bukkit/command/defaults/ScoreboardCommand.java\n+++ b/src/main/java/org/bukkit/command/defaults/ScoreboardCommand.java\n@@ -400,7 +400,7 @@\n                         noTeam.add(sender.getName());\n                     }\n                 } else {\n-                    for (int i = 3; i < args.length; i++) {\n+                    for (int i = 2; i < args.length; i++) {\n                         String playerName = args[i];\n                         OfflinePlayer offlinePlayer;\n                         Player player = Bukkit.getPlayerExact(playerName);\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 403,
    "bugNodeStartChar": 22144,
    "bugNodeLength": 5,
    "fixLineNum": 403,
    "fixNodeStartChar": 22144,
    "fixNodeLength": 5,
    "sourceBeforeFix": "i=3",
    "sourceAfterFix": "i=2"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "be1429665d3a46e7ccd877f6319f12b2e21c6c50",
    "fixCommitParentSHA1": "5ca534dc9bb67503a5047de56f032e3f02cea3bd",
    "bugFilePath": "src/main/java/org/bukkit/command/defaults/ScoreboardCommand.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/command/defaults/ScoreboardCommand.java b/src/main/java/org/bukkit/command/defaults/ScoreboardCommand.java\nindex 64816b6..0b2755a 100644\n--- a/src/main/java/org/bukkit/command/defaults/ScoreboardCommand.java\n+++ b/src/main/java/org/bukkit/command/defaults/ScoreboardCommand.java\n@@ -385,13 +385,13 @@\n                     sender.sendMessage(\"Added \" + addedPlayers.size() + \" player(s) to team \" + team.getName() + \": \" + stringCollectionToString(addedPlayers));\n                 }\n             } else if (args[1].equalsIgnoreCase(\"leave\")) {\n-                if ((sender instanceof Player) ? args.length < 2 : args.length < 3) {\n+                if (!(sender instanceof Player) && args.length < 3) {\n                     sender.sendMessage(ChatColor.RED + \"/scoreboard teams leave [player...]\");\n                     return false;\n                 }\n                 Set<String> left = new HashSet<String>();\n                 Set<String> noTeam = new HashSet<String>();\n-                if ((sender instanceof Player) && args.length == 3) {\n+                if ((sender instanceof Player) && args.length == 2) {\n                     Team team = mainScoreboard.getPlayerTeam((Player) sender);\n                     if (team != null) {\n                         team.removePlayer((Player) sender);\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 394,
    "bugNodeStartChar": 21750,
    "bugNodeLength": 16,
    "fixLineNum": 394,
    "fixNodeStartChar": 21750,
    "fixNodeLength": 16,
    "sourceBeforeFix": "args.length == 3",
    "sourceAfterFix": "args.length == 2"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "2877472d921d414b9c296c8997f30e838f08d351",
    "fixCommitParentSHA1": "f0dcb974763a4607d1660d90dc3d29c7f5f0a543",
    "bugFilePath": "src/main/java/org/bukkit/DyeColor.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/DyeColor.java b/src/main/java/org/bukkit/DyeColor.java\nindex c176dfd..b8e59a4 100644\n--- a/src/main/java/org/bukkit/DyeColor.java\n+++ b/src/main/java/org/bukkit/DyeColor.java\n@@ -12,67 +12,67 @@\n     /**\n      * Represents white dye\n      */\n-    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0x1E1B1B)),\n+    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0xF0F0F0)),\n     /**\n      * Represents orange dye\n      */\n-    ORANGE(0x1, 0xE, Color.fromRGB(0xD87f33), Color.fromRGB(0xB3312C)),\n+    ORANGE(0x1, 0xE, Color.fromRGB(0xD87F33), Color.fromRGB(0xEB8844)),\n     /**\n      * Represents magenta dye\n      */\n-    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0x3B511A)),\n+    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0xC354CD)),\n     /**\n      * Represents light blue dye\n      */\n-    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x51301A)),\n+    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x6689D3)),\n     /**\n      * Represents yellow dye\n      */\n-    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0x253192)),\n+    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0xDECF2A)),\n     /**\n      * Represents lime dye\n      */\n-    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x7B2FBE)),\n+    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x41CD34)),\n     /**\n      * Represents pink dye\n      */\n-    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0x287697)),\n+    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0xD88198)),\n     /**\n      * Represents gray dye\n      */\n-    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0xABABAB)),\n+    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0x434343)),\n     /**\n      * Represents silver dye\n      */\n-    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0x434343)),\n+    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0xABABAB)),\n     /**\n      * Represents cyan dye\n      */\n-    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0xD88198)),\n+    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0x287697)),\n     /**\n      * Represents purple dye\n      */\n-    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x41CD34)),\n+    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x7B2FBE)),\n     /**\n      * Represents blue dye\n      */\n-    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0xDECF2A)),\n+    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0x253192)),\n     /**\n      * Represents brown dye\n      */\n-    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x6689D3)),\n+    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x51301A)),\n     /**\n      * Represents green dye\n      */\n-    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0xC354CD)),\n+    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0x3B511A)),\n     /**\n      * Represents red dye\n      */\n-    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xEB8844)),\n+    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xB3312C)),\n     /**\n      * Represents black dye\n      */\n-    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0xF0F0F0));\n+    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0x1E1B1B));\n \n     private final byte woolData;\n     private final byte dyeData;\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 15,
    "bugNodeStartChar": 250,
    "bugNodeLength": 23,
    "fixLineNum": 15,
    "fixNodeStartChar": 250,
    "fixNodeLength": 23,
    "sourceBeforeFix": "Color.fromRGB(0x1E1B1B)",
    "sourceAfterFix": "Color.fromRGB(0xF0F0F0)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "2877472d921d414b9c296c8997f30e838f08d351",
    "fixCommitParentSHA1": "f0dcb974763a4607d1660d90dc3d29c7f5f0a543",
    "bugFilePath": "src/main/java/org/bukkit/DyeColor.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/DyeColor.java b/src/main/java/org/bukkit/DyeColor.java\nindex c176dfd..b8e59a4 100644\n--- a/src/main/java/org/bukkit/DyeColor.java\n+++ b/src/main/java/org/bukkit/DyeColor.java\n@@ -12,67 +12,67 @@\n     /**\n      * Represents white dye\n      */\n-    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0x1E1B1B)),\n+    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0xF0F0F0)),\n     /**\n      * Represents orange dye\n      */\n-    ORANGE(0x1, 0xE, Color.fromRGB(0xD87f33), Color.fromRGB(0xB3312C)),\n+    ORANGE(0x1, 0xE, Color.fromRGB(0xD87F33), Color.fromRGB(0xEB8844)),\n     /**\n      * Represents magenta dye\n      */\n-    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0x3B511A)),\n+    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0xC354CD)),\n     /**\n      * Represents light blue dye\n      */\n-    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x51301A)),\n+    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x6689D3)),\n     /**\n      * Represents yellow dye\n      */\n-    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0x253192)),\n+    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0xDECF2A)),\n     /**\n      * Represents lime dye\n      */\n-    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x7B2FBE)),\n+    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x41CD34)),\n     /**\n      * Represents pink dye\n      */\n-    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0x287697)),\n+    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0xD88198)),\n     /**\n      * Represents gray dye\n      */\n-    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0xABABAB)),\n+    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0x434343)),\n     /**\n      * Represents silver dye\n      */\n-    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0x434343)),\n+    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0xABABAB)),\n     /**\n      * Represents cyan dye\n      */\n-    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0xD88198)),\n+    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0x287697)),\n     /**\n      * Represents purple dye\n      */\n-    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x41CD34)),\n+    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x7B2FBE)),\n     /**\n      * Represents blue dye\n      */\n-    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0xDECF2A)),\n+    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0x253192)),\n     /**\n      * Represents brown dye\n      */\n-    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x6689D3)),\n+    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x51301A)),\n     /**\n      * Represents green dye\n      */\n-    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0xC354CD)),\n+    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0x3B511A)),\n     /**\n      * Represents red dye\n      */\n-    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xEB8844)),\n+    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xB3312C)),\n     /**\n      * Represents black dye\n      */\n-    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0xF0F0F0));\n+    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0x1E1B1B));\n \n     private final byte woolData;\n     private final byte dyeData;\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 23,
    "bugNodeStartChar": 486,
    "bugNodeLength": 23,
    "fixLineNum": 23,
    "fixNodeStartChar": 486,
    "fixNodeLength": 23,
    "sourceBeforeFix": "Color.fromRGB(0x3B511A)",
    "sourceAfterFix": "Color.fromRGB(0xC354CD)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "2877472d921d414b9c296c8997f30e838f08d351",
    "fixCommitParentSHA1": "f0dcb974763a4607d1660d90dc3d29c7f5f0a543",
    "bugFilePath": "src/main/java/org/bukkit/DyeColor.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/DyeColor.java b/src/main/java/org/bukkit/DyeColor.java\nindex c176dfd..b8e59a4 100644\n--- a/src/main/java/org/bukkit/DyeColor.java\n+++ b/src/main/java/org/bukkit/DyeColor.java\n@@ -12,67 +12,67 @@\n     /**\n      * Represents white dye\n      */\n-    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0x1E1B1B)),\n+    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0xF0F0F0)),\n     /**\n      * Represents orange dye\n      */\n-    ORANGE(0x1, 0xE, Color.fromRGB(0xD87f33), Color.fromRGB(0xB3312C)),\n+    ORANGE(0x1, 0xE, Color.fromRGB(0xD87F33), Color.fromRGB(0xEB8844)),\n     /**\n      * Represents magenta dye\n      */\n-    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0x3B511A)),\n+    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0xC354CD)),\n     /**\n      * Represents light blue dye\n      */\n-    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x51301A)),\n+    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x6689D3)),\n     /**\n      * Represents yellow dye\n      */\n-    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0x253192)),\n+    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0xDECF2A)),\n     /**\n      * Represents lime dye\n      */\n-    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x7B2FBE)),\n+    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x41CD34)),\n     /**\n      * Represents pink dye\n      */\n-    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0x287697)),\n+    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0xD88198)),\n     /**\n      * Represents gray dye\n      */\n-    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0xABABAB)),\n+    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0x434343)),\n     /**\n      * Represents silver dye\n      */\n-    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0x434343)),\n+    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0xABABAB)),\n     /**\n      * Represents cyan dye\n      */\n-    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0xD88198)),\n+    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0x287697)),\n     /**\n      * Represents purple dye\n      */\n-    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x41CD34)),\n+    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x7B2FBE)),\n     /**\n      * Represents blue dye\n      */\n-    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0xDECF2A)),\n+    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0x253192)),\n     /**\n      * Represents brown dye\n      */\n-    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x6689D3)),\n+    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x51301A)),\n     /**\n      * Represents green dye\n      */\n-    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0xC354CD)),\n+    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0x3B511A)),\n     /**\n      * Represents red dye\n      */\n-    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xEB8844)),\n+    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xB3312C)),\n     /**\n      * Represents black dye\n      */\n-    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0xF0F0F0));\n+    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0x1E1B1B));\n \n     private final byte woolData;\n     private final byte dyeData;\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 27,
    "bugNodeStartChar": 611,
    "bugNodeLength": 23,
    "fixLineNum": 27,
    "fixNodeStartChar": 611,
    "fixNodeLength": 23,
    "sourceBeforeFix": "Color.fromRGB(0x51301A)",
    "sourceAfterFix": "Color.fromRGB(0x6689D3)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "2877472d921d414b9c296c8997f30e838f08d351",
    "fixCommitParentSHA1": "f0dcb974763a4607d1660d90dc3d29c7f5f0a543",
    "bugFilePath": "src/main/java/org/bukkit/DyeColor.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/DyeColor.java b/src/main/java/org/bukkit/DyeColor.java\nindex c176dfd..b8e59a4 100644\n--- a/src/main/java/org/bukkit/DyeColor.java\n+++ b/src/main/java/org/bukkit/DyeColor.java\n@@ -12,67 +12,67 @@\n     /**\n      * Represents white dye\n      */\n-    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0x1E1B1B)),\n+    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0xF0F0F0)),\n     /**\n      * Represents orange dye\n      */\n-    ORANGE(0x1, 0xE, Color.fromRGB(0xD87f33), Color.fromRGB(0xB3312C)),\n+    ORANGE(0x1, 0xE, Color.fromRGB(0xD87F33), Color.fromRGB(0xEB8844)),\n     /**\n      * Represents magenta dye\n      */\n-    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0x3B511A)),\n+    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0xC354CD)),\n     /**\n      * Represents light blue dye\n      */\n-    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x51301A)),\n+    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x6689D3)),\n     /**\n      * Represents yellow dye\n      */\n-    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0x253192)),\n+    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0xDECF2A)),\n     /**\n      * Represents lime dye\n      */\n-    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x7B2FBE)),\n+    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x41CD34)),\n     /**\n      * Represents pink dye\n      */\n-    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0x287697)),\n+    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0xD88198)),\n     /**\n      * Represents gray dye\n      */\n-    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0xABABAB)),\n+    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0x434343)),\n     /**\n      * Represents silver dye\n      */\n-    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0x434343)),\n+    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0xABABAB)),\n     /**\n      * Represents cyan dye\n      */\n-    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0xD88198)),\n+    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0x287697)),\n     /**\n      * Represents purple dye\n      */\n-    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x41CD34)),\n+    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x7B2FBE)),\n     /**\n      * Represents blue dye\n      */\n-    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0xDECF2A)),\n+    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0x253192)),\n     /**\n      * Represents brown dye\n      */\n-    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x6689D3)),\n+    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x51301A)),\n     /**\n      * Represents green dye\n      */\n-    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0xC354CD)),\n+    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0x3B511A)),\n     /**\n      * Represents red dye\n      */\n-    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xEB8844)),\n+    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xB3312C)),\n     /**\n      * Represents black dye\n      */\n-    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0xF0F0F0));\n+    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0x1E1B1B));\n \n     private final byte woolData;\n     private final byte dyeData;\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 31,
    "bugNodeStartChar": 728,
    "bugNodeLength": 23,
    "fixLineNum": 31,
    "fixNodeStartChar": 728,
    "fixNodeLength": 23,
    "sourceBeforeFix": "Color.fromRGB(0x253192)",
    "sourceAfterFix": "Color.fromRGB(0xDECF2A)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "2877472d921d414b9c296c8997f30e838f08d351",
    "fixCommitParentSHA1": "f0dcb974763a4607d1660d90dc3d29c7f5f0a543",
    "bugFilePath": "src/main/java/org/bukkit/DyeColor.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/DyeColor.java b/src/main/java/org/bukkit/DyeColor.java\nindex c176dfd..b8e59a4 100644\n--- a/src/main/java/org/bukkit/DyeColor.java\n+++ b/src/main/java/org/bukkit/DyeColor.java\n@@ -12,67 +12,67 @@\n     /**\n      * Represents white dye\n      */\n-    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0x1E1B1B)),\n+    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0xF0F0F0)),\n     /**\n      * Represents orange dye\n      */\n-    ORANGE(0x1, 0xE, Color.fromRGB(0xD87f33), Color.fromRGB(0xB3312C)),\n+    ORANGE(0x1, 0xE, Color.fromRGB(0xD87F33), Color.fromRGB(0xEB8844)),\n     /**\n      * Represents magenta dye\n      */\n-    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0x3B511A)),\n+    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0xC354CD)),\n     /**\n      * Represents light blue dye\n      */\n-    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x51301A)),\n+    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x6689D3)),\n     /**\n      * Represents yellow dye\n      */\n-    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0x253192)),\n+    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0xDECF2A)),\n     /**\n      * Represents lime dye\n      */\n-    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x7B2FBE)),\n+    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x41CD34)),\n     /**\n      * Represents pink dye\n      */\n-    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0x287697)),\n+    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0xD88198)),\n     /**\n      * Represents gray dye\n      */\n-    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0xABABAB)),\n+    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0x434343)),\n     /**\n      * Represents silver dye\n      */\n-    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0x434343)),\n+    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0xABABAB)),\n     /**\n      * Represents cyan dye\n      */\n-    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0xD88198)),\n+    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0x287697)),\n     /**\n      * Represents purple dye\n      */\n-    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x41CD34)),\n+    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x7B2FBE)),\n     /**\n      * Represents blue dye\n      */\n-    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0xDECF2A)),\n+    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0x253192)),\n     /**\n      * Represents brown dye\n      */\n-    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x6689D3)),\n+    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x51301A)),\n     /**\n      * Represents green dye\n      */\n-    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0xC354CD)),\n+    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0x3B511A)),\n     /**\n      * Represents red dye\n      */\n-    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xEB8844)),\n+    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xB3312C)),\n     /**\n      * Represents black dye\n      */\n-    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0xF0F0F0));\n+    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0x1E1B1B));\n \n     private final byte woolData;\n     private final byte dyeData;\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 35,
    "bugNodeStartChar": 841,
    "bugNodeLength": 23,
    "fixLineNum": 35,
    "fixNodeStartChar": 841,
    "fixNodeLength": 23,
    "sourceBeforeFix": "Color.fromRGB(0x7B2FBE)",
    "sourceAfterFix": "Color.fromRGB(0x41CD34)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "2877472d921d414b9c296c8997f30e838f08d351",
    "fixCommitParentSHA1": "f0dcb974763a4607d1660d90dc3d29c7f5f0a543",
    "bugFilePath": "src/main/java/org/bukkit/DyeColor.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/DyeColor.java b/src/main/java/org/bukkit/DyeColor.java\nindex c176dfd..b8e59a4 100644\n--- a/src/main/java/org/bukkit/DyeColor.java\n+++ b/src/main/java/org/bukkit/DyeColor.java\n@@ -12,67 +12,67 @@\n     /**\n      * Represents white dye\n      */\n-    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0x1E1B1B)),\n+    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0xF0F0F0)),\n     /**\n      * Represents orange dye\n      */\n-    ORANGE(0x1, 0xE, Color.fromRGB(0xD87f33), Color.fromRGB(0xB3312C)),\n+    ORANGE(0x1, 0xE, Color.fromRGB(0xD87F33), Color.fromRGB(0xEB8844)),\n     /**\n      * Represents magenta dye\n      */\n-    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0x3B511A)),\n+    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0xC354CD)),\n     /**\n      * Represents light blue dye\n      */\n-    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x51301A)),\n+    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x6689D3)),\n     /**\n      * Represents yellow dye\n      */\n-    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0x253192)),\n+    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0xDECF2A)),\n     /**\n      * Represents lime dye\n      */\n-    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x7B2FBE)),\n+    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x41CD34)),\n     /**\n      * Represents pink dye\n      */\n-    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0x287697)),\n+    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0xD88198)),\n     /**\n      * Represents gray dye\n      */\n-    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0xABABAB)),\n+    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0x434343)),\n     /**\n      * Represents silver dye\n      */\n-    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0x434343)),\n+    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0xABABAB)),\n     /**\n      * Represents cyan dye\n      */\n-    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0xD88198)),\n+    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0x287697)),\n     /**\n      * Represents purple dye\n      */\n-    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x41CD34)),\n+    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x7B2FBE)),\n     /**\n      * Represents blue dye\n      */\n-    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0xDECF2A)),\n+    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0x253192)),\n     /**\n      * Represents brown dye\n      */\n-    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x6689D3)),\n+    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x51301A)),\n     /**\n      * Represents green dye\n      */\n-    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0xC354CD)),\n+    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0x3B511A)),\n     /**\n      * Represents red dye\n      */\n-    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xEB8844)),\n+    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xB3312C)),\n     /**\n      * Represents black dye\n      */\n-    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0xF0F0F0));\n+    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0x1E1B1B));\n \n     private final byte woolData;\n     private final byte dyeData;\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 39,
    "bugNodeStartChar": 954,
    "bugNodeLength": 23,
    "fixLineNum": 39,
    "fixNodeStartChar": 954,
    "fixNodeLength": 23,
    "sourceBeforeFix": "Color.fromRGB(0x287697)",
    "sourceAfterFix": "Color.fromRGB(0xD88198)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "2877472d921d414b9c296c8997f30e838f08d351",
    "fixCommitParentSHA1": "f0dcb974763a4607d1660d90dc3d29c7f5f0a543",
    "bugFilePath": "src/main/java/org/bukkit/DyeColor.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/DyeColor.java b/src/main/java/org/bukkit/DyeColor.java\nindex c176dfd..b8e59a4 100644\n--- a/src/main/java/org/bukkit/DyeColor.java\n+++ b/src/main/java/org/bukkit/DyeColor.java\n@@ -12,67 +12,67 @@\n     /**\n      * Represents white dye\n      */\n-    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0x1E1B1B)),\n+    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0xF0F0F0)),\n     /**\n      * Represents orange dye\n      */\n-    ORANGE(0x1, 0xE, Color.fromRGB(0xD87f33), Color.fromRGB(0xB3312C)),\n+    ORANGE(0x1, 0xE, Color.fromRGB(0xD87F33), Color.fromRGB(0xEB8844)),\n     /**\n      * Represents magenta dye\n      */\n-    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0x3B511A)),\n+    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0xC354CD)),\n     /**\n      * Represents light blue dye\n      */\n-    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x51301A)),\n+    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x6689D3)),\n     /**\n      * Represents yellow dye\n      */\n-    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0x253192)),\n+    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0xDECF2A)),\n     /**\n      * Represents lime dye\n      */\n-    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x7B2FBE)),\n+    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x41CD34)),\n     /**\n      * Represents pink dye\n      */\n-    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0x287697)),\n+    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0xD88198)),\n     /**\n      * Represents gray dye\n      */\n-    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0xABABAB)),\n+    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0x434343)),\n     /**\n      * Represents silver dye\n      */\n-    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0x434343)),\n+    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0xABABAB)),\n     /**\n      * Represents cyan dye\n      */\n-    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0xD88198)),\n+    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0x287697)),\n     /**\n      * Represents purple dye\n      */\n-    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x41CD34)),\n+    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x7B2FBE)),\n     /**\n      * Represents blue dye\n      */\n-    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0xDECF2A)),\n+    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0x253192)),\n     /**\n      * Represents brown dye\n      */\n-    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x6689D3)),\n+    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x51301A)),\n     /**\n      * Represents green dye\n      */\n-    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0xC354CD)),\n+    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0x3B511A)),\n     /**\n      * Represents red dye\n      */\n-    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xEB8844)),\n+    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xB3312C)),\n     /**\n      * Represents black dye\n      */\n-    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0xF0F0F0));\n+    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0x1E1B1B));\n \n     private final byte woolData;\n     private final byte dyeData;\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 43,
    "bugNodeStartChar": 1067,
    "bugNodeLength": 23,
    "fixLineNum": 43,
    "fixNodeStartChar": 1067,
    "fixNodeLength": 23,
    "sourceBeforeFix": "Color.fromRGB(0xABABAB)",
    "sourceAfterFix": "Color.fromRGB(0x434343)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "2877472d921d414b9c296c8997f30e838f08d351",
    "fixCommitParentSHA1": "f0dcb974763a4607d1660d90dc3d29c7f5f0a543",
    "bugFilePath": "src/main/java/org/bukkit/DyeColor.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/DyeColor.java b/src/main/java/org/bukkit/DyeColor.java\nindex c176dfd..b8e59a4 100644\n--- a/src/main/java/org/bukkit/DyeColor.java\n+++ b/src/main/java/org/bukkit/DyeColor.java\n@@ -12,67 +12,67 @@\n     /**\n      * Represents white dye\n      */\n-    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0x1E1B1B)),\n+    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0xF0F0F0)),\n     /**\n      * Represents orange dye\n      */\n-    ORANGE(0x1, 0xE, Color.fromRGB(0xD87f33), Color.fromRGB(0xB3312C)),\n+    ORANGE(0x1, 0xE, Color.fromRGB(0xD87F33), Color.fromRGB(0xEB8844)),\n     /**\n      * Represents magenta dye\n      */\n-    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0x3B511A)),\n+    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0xC354CD)),\n     /**\n      * Represents light blue dye\n      */\n-    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x51301A)),\n+    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x6689D3)),\n     /**\n      * Represents yellow dye\n      */\n-    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0x253192)),\n+    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0xDECF2A)),\n     /**\n      * Represents lime dye\n      */\n-    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x7B2FBE)),\n+    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x41CD34)),\n     /**\n      * Represents pink dye\n      */\n-    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0x287697)),\n+    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0xD88198)),\n     /**\n      * Represents gray dye\n      */\n-    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0xABABAB)),\n+    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0x434343)),\n     /**\n      * Represents silver dye\n      */\n-    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0x434343)),\n+    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0xABABAB)),\n     /**\n      * Represents cyan dye\n      */\n-    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0xD88198)),\n+    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0x287697)),\n     /**\n      * Represents purple dye\n      */\n-    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x41CD34)),\n+    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x7B2FBE)),\n     /**\n      * Represents blue dye\n      */\n-    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0xDECF2A)),\n+    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0x253192)),\n     /**\n      * Represents brown dye\n      */\n-    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x6689D3)),\n+    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x51301A)),\n     /**\n      * Represents green dye\n      */\n-    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0xC354CD)),\n+    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0x3B511A)),\n     /**\n      * Represents red dye\n      */\n-    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xEB8844)),\n+    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xB3312C)),\n     /**\n      * Represents black dye\n      */\n-    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0xF0F0F0));\n+    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0x1E1B1B));\n \n     private final byte woolData;\n     private final byte dyeData;\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 47,
    "bugNodeStartChar": 1184,
    "bugNodeLength": 23,
    "fixLineNum": 47,
    "fixNodeStartChar": 1184,
    "fixNodeLength": 23,
    "sourceBeforeFix": "Color.fromRGB(0x434343)",
    "sourceAfterFix": "Color.fromRGB(0xABABAB)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "2877472d921d414b9c296c8997f30e838f08d351",
    "fixCommitParentSHA1": "f0dcb974763a4607d1660d90dc3d29c7f5f0a543",
    "bugFilePath": "src/main/java/org/bukkit/DyeColor.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/DyeColor.java b/src/main/java/org/bukkit/DyeColor.java\nindex c176dfd..b8e59a4 100644\n--- a/src/main/java/org/bukkit/DyeColor.java\n+++ b/src/main/java/org/bukkit/DyeColor.java\n@@ -12,67 +12,67 @@\n     /**\n      * Represents white dye\n      */\n-    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0x1E1B1B)),\n+    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0xF0F0F0)),\n     /**\n      * Represents orange dye\n      */\n-    ORANGE(0x1, 0xE, Color.fromRGB(0xD87f33), Color.fromRGB(0xB3312C)),\n+    ORANGE(0x1, 0xE, Color.fromRGB(0xD87F33), Color.fromRGB(0xEB8844)),\n     /**\n      * Represents magenta dye\n      */\n-    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0x3B511A)),\n+    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0xC354CD)),\n     /**\n      * Represents light blue dye\n      */\n-    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x51301A)),\n+    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x6689D3)),\n     /**\n      * Represents yellow dye\n      */\n-    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0x253192)),\n+    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0xDECF2A)),\n     /**\n      * Represents lime dye\n      */\n-    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x7B2FBE)),\n+    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x41CD34)),\n     /**\n      * Represents pink dye\n      */\n-    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0x287697)),\n+    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0xD88198)),\n     /**\n      * Represents gray dye\n      */\n-    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0xABABAB)),\n+    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0x434343)),\n     /**\n      * Represents silver dye\n      */\n-    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0x434343)),\n+    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0xABABAB)),\n     /**\n      * Represents cyan dye\n      */\n-    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0xD88198)),\n+    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0x287697)),\n     /**\n      * Represents purple dye\n      */\n-    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x41CD34)),\n+    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x7B2FBE)),\n     /**\n      * Represents blue dye\n      */\n-    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0xDECF2A)),\n+    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0x253192)),\n     /**\n      * Represents brown dye\n      */\n-    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x6689D3)),\n+    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x51301A)),\n     /**\n      * Represents green dye\n      */\n-    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0xC354CD)),\n+    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0x3B511A)),\n     /**\n      * Represents red dye\n      */\n-    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xEB8844)),\n+    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xB3312C)),\n     /**\n      * Represents black dye\n      */\n-    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0xF0F0F0));\n+    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0x1E1B1B));\n \n     private final byte woolData;\n     private final byte dyeData;\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 51,
    "bugNodeStartChar": 1297,
    "bugNodeLength": 23,
    "fixLineNum": 51,
    "fixNodeStartChar": 1297,
    "fixNodeLength": 23,
    "sourceBeforeFix": "Color.fromRGB(0xD88198)",
    "sourceAfterFix": "Color.fromRGB(0x287697)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "2877472d921d414b9c296c8997f30e838f08d351",
    "fixCommitParentSHA1": "f0dcb974763a4607d1660d90dc3d29c7f5f0a543",
    "bugFilePath": "src/main/java/org/bukkit/DyeColor.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/DyeColor.java b/src/main/java/org/bukkit/DyeColor.java\nindex c176dfd..b8e59a4 100644\n--- a/src/main/java/org/bukkit/DyeColor.java\n+++ b/src/main/java/org/bukkit/DyeColor.java\n@@ -12,67 +12,67 @@\n     /**\n      * Represents white dye\n      */\n-    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0x1E1B1B)),\n+    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0xF0F0F0)),\n     /**\n      * Represents orange dye\n      */\n-    ORANGE(0x1, 0xE, Color.fromRGB(0xD87f33), Color.fromRGB(0xB3312C)),\n+    ORANGE(0x1, 0xE, Color.fromRGB(0xD87F33), Color.fromRGB(0xEB8844)),\n     /**\n      * Represents magenta dye\n      */\n-    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0x3B511A)),\n+    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0xC354CD)),\n     /**\n      * Represents light blue dye\n      */\n-    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x51301A)),\n+    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x6689D3)),\n     /**\n      * Represents yellow dye\n      */\n-    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0x253192)),\n+    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0xDECF2A)),\n     /**\n      * Represents lime dye\n      */\n-    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x7B2FBE)),\n+    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x41CD34)),\n     /**\n      * Represents pink dye\n      */\n-    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0x287697)),\n+    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0xD88198)),\n     /**\n      * Represents gray dye\n      */\n-    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0xABABAB)),\n+    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0x434343)),\n     /**\n      * Represents silver dye\n      */\n-    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0x434343)),\n+    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0xABABAB)),\n     /**\n      * Represents cyan dye\n      */\n-    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0xD88198)),\n+    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0x287697)),\n     /**\n      * Represents purple dye\n      */\n-    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x41CD34)),\n+    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x7B2FBE)),\n     /**\n      * Represents blue dye\n      */\n-    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0xDECF2A)),\n+    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0x253192)),\n     /**\n      * Represents brown dye\n      */\n-    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x6689D3)),\n+    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x51301A)),\n     /**\n      * Represents green dye\n      */\n-    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0xC354CD)),\n+    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0x3B511A)),\n     /**\n      * Represents red dye\n      */\n-    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xEB8844)),\n+    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xB3312C)),\n     /**\n      * Represents black dye\n      */\n-    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0xF0F0F0));\n+    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0x1E1B1B));\n \n     private final byte woolData;\n     private final byte dyeData;\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 55,
    "bugNodeStartChar": 1414,
    "bugNodeLength": 23,
    "fixLineNum": 55,
    "fixNodeStartChar": 1414,
    "fixNodeLength": 23,
    "sourceBeforeFix": "Color.fromRGB(0x41CD34)",
    "sourceAfterFix": "Color.fromRGB(0x7B2FBE)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "2877472d921d414b9c296c8997f30e838f08d351",
    "fixCommitParentSHA1": "f0dcb974763a4607d1660d90dc3d29c7f5f0a543",
    "bugFilePath": "src/main/java/org/bukkit/DyeColor.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/DyeColor.java b/src/main/java/org/bukkit/DyeColor.java\nindex c176dfd..b8e59a4 100644\n--- a/src/main/java/org/bukkit/DyeColor.java\n+++ b/src/main/java/org/bukkit/DyeColor.java\n@@ -12,67 +12,67 @@\n     /**\n      * Represents white dye\n      */\n-    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0x1E1B1B)),\n+    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0xF0F0F0)),\n     /**\n      * Represents orange dye\n      */\n-    ORANGE(0x1, 0xE, Color.fromRGB(0xD87f33), Color.fromRGB(0xB3312C)),\n+    ORANGE(0x1, 0xE, Color.fromRGB(0xD87F33), Color.fromRGB(0xEB8844)),\n     /**\n      * Represents magenta dye\n      */\n-    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0x3B511A)),\n+    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0xC354CD)),\n     /**\n      * Represents light blue dye\n      */\n-    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x51301A)),\n+    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x6689D3)),\n     /**\n      * Represents yellow dye\n      */\n-    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0x253192)),\n+    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0xDECF2A)),\n     /**\n      * Represents lime dye\n      */\n-    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x7B2FBE)),\n+    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x41CD34)),\n     /**\n      * Represents pink dye\n      */\n-    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0x287697)),\n+    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0xD88198)),\n     /**\n      * Represents gray dye\n      */\n-    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0xABABAB)),\n+    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0x434343)),\n     /**\n      * Represents silver dye\n      */\n-    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0x434343)),\n+    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0xABABAB)),\n     /**\n      * Represents cyan dye\n      */\n-    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0xD88198)),\n+    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0x287697)),\n     /**\n      * Represents purple dye\n      */\n-    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x41CD34)),\n+    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x7B2FBE)),\n     /**\n      * Represents blue dye\n      */\n-    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0xDECF2A)),\n+    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0x253192)),\n     /**\n      * Represents brown dye\n      */\n-    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x6689D3)),\n+    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x51301A)),\n     /**\n      * Represents green dye\n      */\n-    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0xC354CD)),\n+    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0x3B511A)),\n     /**\n      * Represents red dye\n      */\n-    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xEB8844)),\n+    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xB3312C)),\n     /**\n      * Represents black dye\n      */\n-    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0xF0F0F0));\n+    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0x1E1B1B));\n \n     private final byte woolData;\n     private final byte dyeData;\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 59,
    "bugNodeStartChar": 1527,
    "bugNodeLength": 23,
    "fixLineNum": 59,
    "fixNodeStartChar": 1527,
    "fixNodeLength": 23,
    "sourceBeforeFix": "Color.fromRGB(0xDECF2A)",
    "sourceAfterFix": "Color.fromRGB(0x253192)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "2877472d921d414b9c296c8997f30e838f08d351",
    "fixCommitParentSHA1": "f0dcb974763a4607d1660d90dc3d29c7f5f0a543",
    "bugFilePath": "src/main/java/org/bukkit/DyeColor.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/DyeColor.java b/src/main/java/org/bukkit/DyeColor.java\nindex c176dfd..b8e59a4 100644\n--- a/src/main/java/org/bukkit/DyeColor.java\n+++ b/src/main/java/org/bukkit/DyeColor.java\n@@ -12,67 +12,67 @@\n     /**\n      * Represents white dye\n      */\n-    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0x1E1B1B)),\n+    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0xF0F0F0)),\n     /**\n      * Represents orange dye\n      */\n-    ORANGE(0x1, 0xE, Color.fromRGB(0xD87f33), Color.fromRGB(0xB3312C)),\n+    ORANGE(0x1, 0xE, Color.fromRGB(0xD87F33), Color.fromRGB(0xEB8844)),\n     /**\n      * Represents magenta dye\n      */\n-    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0x3B511A)),\n+    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0xC354CD)),\n     /**\n      * Represents light blue dye\n      */\n-    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x51301A)),\n+    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x6689D3)),\n     /**\n      * Represents yellow dye\n      */\n-    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0x253192)),\n+    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0xDECF2A)),\n     /**\n      * Represents lime dye\n      */\n-    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x7B2FBE)),\n+    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x41CD34)),\n     /**\n      * Represents pink dye\n      */\n-    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0x287697)),\n+    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0xD88198)),\n     /**\n      * Represents gray dye\n      */\n-    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0xABABAB)),\n+    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0x434343)),\n     /**\n      * Represents silver dye\n      */\n-    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0x434343)),\n+    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0xABABAB)),\n     /**\n      * Represents cyan dye\n      */\n-    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0xD88198)),\n+    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0x287697)),\n     /**\n      * Represents purple dye\n      */\n-    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x41CD34)),\n+    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x7B2FBE)),\n     /**\n      * Represents blue dye\n      */\n-    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0xDECF2A)),\n+    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0x253192)),\n     /**\n      * Represents brown dye\n      */\n-    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x6689D3)),\n+    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x51301A)),\n     /**\n      * Represents green dye\n      */\n-    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0xC354CD)),\n+    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0x3B511A)),\n     /**\n      * Represents red dye\n      */\n-    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xEB8844)),\n+    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xB3312C)),\n     /**\n      * Represents black dye\n      */\n-    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0xF0F0F0));\n+    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0x1E1B1B));\n \n     private final byte woolData;\n     private final byte dyeData;\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 63,
    "bugNodeStartChar": 1642,
    "bugNodeLength": 23,
    "fixLineNum": 63,
    "fixNodeStartChar": 1642,
    "fixNodeLength": 23,
    "sourceBeforeFix": "Color.fromRGB(0x6689D3)",
    "sourceAfterFix": "Color.fromRGB(0x51301A)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "2877472d921d414b9c296c8997f30e838f08d351",
    "fixCommitParentSHA1": "f0dcb974763a4607d1660d90dc3d29c7f5f0a543",
    "bugFilePath": "src/main/java/org/bukkit/DyeColor.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/DyeColor.java b/src/main/java/org/bukkit/DyeColor.java\nindex c176dfd..b8e59a4 100644\n--- a/src/main/java/org/bukkit/DyeColor.java\n+++ b/src/main/java/org/bukkit/DyeColor.java\n@@ -12,67 +12,67 @@\n     /**\n      * Represents white dye\n      */\n-    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0x1E1B1B)),\n+    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0xF0F0F0)),\n     /**\n      * Represents orange dye\n      */\n-    ORANGE(0x1, 0xE, Color.fromRGB(0xD87f33), Color.fromRGB(0xB3312C)),\n+    ORANGE(0x1, 0xE, Color.fromRGB(0xD87F33), Color.fromRGB(0xEB8844)),\n     /**\n      * Represents magenta dye\n      */\n-    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0x3B511A)),\n+    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0xC354CD)),\n     /**\n      * Represents light blue dye\n      */\n-    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x51301A)),\n+    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x6689D3)),\n     /**\n      * Represents yellow dye\n      */\n-    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0x253192)),\n+    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0xDECF2A)),\n     /**\n      * Represents lime dye\n      */\n-    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x7B2FBE)),\n+    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x41CD34)),\n     /**\n      * Represents pink dye\n      */\n-    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0x287697)),\n+    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0xD88198)),\n     /**\n      * Represents gray dye\n      */\n-    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0xABABAB)),\n+    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0x434343)),\n     /**\n      * Represents silver dye\n      */\n-    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0x434343)),\n+    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0xABABAB)),\n     /**\n      * Represents cyan dye\n      */\n-    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0xD88198)),\n+    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0x287697)),\n     /**\n      * Represents purple dye\n      */\n-    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x41CD34)),\n+    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x7B2FBE)),\n     /**\n      * Represents blue dye\n      */\n-    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0xDECF2A)),\n+    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0x253192)),\n     /**\n      * Represents brown dye\n      */\n-    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x6689D3)),\n+    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x51301A)),\n     /**\n      * Represents green dye\n      */\n-    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0xC354CD)),\n+    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0x3B511A)),\n     /**\n      * Represents red dye\n      */\n-    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xEB8844)),\n+    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xB3312C)),\n     /**\n      * Represents black dye\n      */\n-    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0xF0F0F0));\n+    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0x1E1B1B));\n \n     private final byte woolData;\n     private final byte dyeData;\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 67,
    "bugNodeStartChar": 1757,
    "bugNodeLength": 23,
    "fixLineNum": 67,
    "fixNodeStartChar": 1757,
    "fixNodeLength": 23,
    "sourceBeforeFix": "Color.fromRGB(0xC354CD)",
    "sourceAfterFix": "Color.fromRGB(0x3B511A)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "2877472d921d414b9c296c8997f30e838f08d351",
    "fixCommitParentSHA1": "f0dcb974763a4607d1660d90dc3d29c7f5f0a543",
    "bugFilePath": "src/main/java/org/bukkit/DyeColor.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/DyeColor.java b/src/main/java/org/bukkit/DyeColor.java\nindex c176dfd..b8e59a4 100644\n--- a/src/main/java/org/bukkit/DyeColor.java\n+++ b/src/main/java/org/bukkit/DyeColor.java\n@@ -12,67 +12,67 @@\n     /**\n      * Represents white dye\n      */\n-    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0x1E1B1B)),\n+    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0xF0F0F0)),\n     /**\n      * Represents orange dye\n      */\n-    ORANGE(0x1, 0xE, Color.fromRGB(0xD87f33), Color.fromRGB(0xB3312C)),\n+    ORANGE(0x1, 0xE, Color.fromRGB(0xD87F33), Color.fromRGB(0xEB8844)),\n     /**\n      * Represents magenta dye\n      */\n-    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0x3B511A)),\n+    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0xC354CD)),\n     /**\n      * Represents light blue dye\n      */\n-    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x51301A)),\n+    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x6689D3)),\n     /**\n      * Represents yellow dye\n      */\n-    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0x253192)),\n+    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0xDECF2A)),\n     /**\n      * Represents lime dye\n      */\n-    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x7B2FBE)),\n+    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x41CD34)),\n     /**\n      * Represents pink dye\n      */\n-    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0x287697)),\n+    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0xD88198)),\n     /**\n      * Represents gray dye\n      */\n-    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0xABABAB)),\n+    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0x434343)),\n     /**\n      * Represents silver dye\n      */\n-    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0x434343)),\n+    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0xABABAB)),\n     /**\n      * Represents cyan dye\n      */\n-    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0xD88198)),\n+    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0x287697)),\n     /**\n      * Represents purple dye\n      */\n-    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x41CD34)),\n+    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x7B2FBE)),\n     /**\n      * Represents blue dye\n      */\n-    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0xDECF2A)),\n+    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0x253192)),\n     /**\n      * Represents brown dye\n      */\n-    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x6689D3)),\n+    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x51301A)),\n     /**\n      * Represents green dye\n      */\n-    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0xC354CD)),\n+    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0x3B511A)),\n     /**\n      * Represents red dye\n      */\n-    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xEB8844)),\n+    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xB3312C)),\n     /**\n      * Represents black dye\n      */\n-    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0xF0F0F0));\n+    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0x1E1B1B));\n \n     private final byte woolData;\n     private final byte dyeData;\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 71,
    "bugNodeStartChar": 1868,
    "bugNodeLength": 23,
    "fixLineNum": 71,
    "fixNodeStartChar": 1868,
    "fixNodeLength": 23,
    "sourceBeforeFix": "Color.fromRGB(0xEB8844)",
    "sourceAfterFix": "Color.fromRGB(0xB3312C)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "2877472d921d414b9c296c8997f30e838f08d351",
    "fixCommitParentSHA1": "f0dcb974763a4607d1660d90dc3d29c7f5f0a543",
    "bugFilePath": "src/main/java/org/bukkit/DyeColor.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/DyeColor.java b/src/main/java/org/bukkit/DyeColor.java\nindex c176dfd..b8e59a4 100644\n--- a/src/main/java/org/bukkit/DyeColor.java\n+++ b/src/main/java/org/bukkit/DyeColor.java\n@@ -12,67 +12,67 @@\n     /**\n      * Represents white dye\n      */\n-    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0x1E1B1B)),\n+    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0xF0F0F0)),\n     /**\n      * Represents orange dye\n      */\n-    ORANGE(0x1, 0xE, Color.fromRGB(0xD87f33), Color.fromRGB(0xB3312C)),\n+    ORANGE(0x1, 0xE, Color.fromRGB(0xD87F33), Color.fromRGB(0xEB8844)),\n     /**\n      * Represents magenta dye\n      */\n-    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0x3B511A)),\n+    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0xC354CD)),\n     /**\n      * Represents light blue dye\n      */\n-    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x51301A)),\n+    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x6689D3)),\n     /**\n      * Represents yellow dye\n      */\n-    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0x253192)),\n+    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0xDECF2A)),\n     /**\n      * Represents lime dye\n      */\n-    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x7B2FBE)),\n+    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x41CD34)),\n     /**\n      * Represents pink dye\n      */\n-    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0x287697)),\n+    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0xD88198)),\n     /**\n      * Represents gray dye\n      */\n-    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0xABABAB)),\n+    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0x434343)),\n     /**\n      * Represents silver dye\n      */\n-    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0x434343)),\n+    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0xABABAB)),\n     /**\n      * Represents cyan dye\n      */\n-    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0xD88198)),\n+    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0x287697)),\n     /**\n      * Represents purple dye\n      */\n-    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x41CD34)),\n+    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x7B2FBE)),\n     /**\n      * Represents blue dye\n      */\n-    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0xDECF2A)),\n+    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0x253192)),\n     /**\n      * Represents brown dye\n      */\n-    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x6689D3)),\n+    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x51301A)),\n     /**\n      * Represents green dye\n      */\n-    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0xC354CD)),\n+    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0x3B511A)),\n     /**\n      * Represents red dye\n      */\n-    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xEB8844)),\n+    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xB3312C)),\n     /**\n      * Represents black dye\n      */\n-    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0xF0F0F0));\n+    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0x1E1B1B));\n \n     private final byte woolData;\n     private final byte dyeData;\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 75,
    "bugNodeStartChar": 1983,
    "bugNodeLength": 23,
    "fixLineNum": 75,
    "fixNodeStartChar": 1983,
    "fixNodeLength": 23,
    "sourceBeforeFix": "Color.fromRGB(0xF0F0F0)",
    "sourceAfterFix": "Color.fromRGB(0x1E1B1B)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "d6d81089a153c28b8a0041fd86ea80d111fc9850",
    "fixCommitParentSHA1": "bacc2e3596c220d0a8daae40d9b3a04342964725",
    "bugFilePath": "src/main/java/org/bukkit/potion/PotionType.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/potion/PotionType.java b/src/main/java/org/bukkit/potion/PotionType.java\nindex f9a19cf..46921c2 100644\n--- a/src/main/java/org/bukkit/potion/PotionType.java\n+++ b/src/main/java/org/bukkit/potion/PotionType.java\n@@ -12,7 +12,7 @@\n     STRENGTH(9, PotionEffectType.INCREASE_DAMAGE, 2),\n     SLOWNESS(10, PotionEffectType.SLOW, 1),\n     INSTANT_DAMAGE(12, PotionEffectType.HARM, 2),\n-    INVISIBILTY(14, PotionEffectType.INVISIBILITY, 1),\n+    INVISIBILITY(14, PotionEffectType.INVISIBILITY, 1),\n     ;\n \n     private final int damageValue, maxLevel;\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 15,
    "bugNodeStartChar": 570,
    "bugNodeLength": 49,
    "fixLineNum": 15,
    "fixNodeStartChar": 570,
    "fixNodeLength": 50,
    "sourceBeforeFix": "INVISIBILTY(14,PotionEffectType.INVISIBILITY,1)",
    "sourceAfterFix": "INVISIBILITY(14,PotionEffectType.INVISIBILITY,1)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "adbf20a2896553db1f91fdf35f71668ece201599",
    "fixCommitParentSHA1": "09b1017156977115021d692587f0bbf4a131231c",
    "bugFilePath": "src/main/java/org/bukkit/plugin/PluginDescriptionFile.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/plugin/PluginDescriptionFile.java b/src/main/java/org/bukkit/plugin/PluginDescriptionFile.java\nindex 09e22cc..3975f38 100644\n--- a/src/main/java/org/bukkit/plugin/PluginDescriptionFile.java\n+++ b/src/main/java/org/bukkit/plugin/PluginDescriptionFile.java\n@@ -127,7 +127,7 @@\n      * @return immutable list of plugins that should consider this plugin a soft-dependency\n      */\n     public List<String> getLoadBefore() {\n-        return softDepend;\n+        return loadBefore;\n     }\n \n     public PluginLoadOrder getLoad() {\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 130,
    "bugNodeStartChar": 3666,
    "bugNodeLength": 18,
    "fixLineNum": 130,
    "fixNodeStartChar": 3666,
    "fixNodeLength": 18,
    "sourceBeforeFix": "return softDepend; ",
    "sourceAfterFix": "return loadBefore; "
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "adacb4dbabce543ccb0691957d5888c4fd380887",
    "fixCommitParentSHA1": "aead3745f240b8a6c41d0059ce75bd6351034664",
    "bugFilePath": "src/main/java/org/bukkit/inventory/ItemStack.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/inventory/ItemStack.java b/src/main/java/org/bukkit/inventory/ItemStack.java\nindex 41db221..165eca6 100644\n--- a/src/main/java/org/bukkit/inventory/ItemStack.java\n+++ b/src/main/java/org/bukkit/inventory/ItemStack.java\n@@ -20,11 +20,11 @@\n     private Map<Enchantment, Integer> enchantments = new HashMap<Enchantment, Integer>();\n \n     public ItemStack(final int type) {\n-        this(type, 0);\n+        this(type, 1);\n     }\n \n     public ItemStack(final Material type) {\n-        this(type, 0);\n+        this(type, 1);\n     }\n \n     public ItemStack(final int type, final int amount) {\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 23,
    "bugNodeStartChar": 717,
    "bugNodeLength": 14,
    "fixLineNum": 23,
    "fixNodeStartChar": 717,
    "fixNodeLength": 14,
    "sourceBeforeFix": "this(type,0); ",
    "sourceAfterFix": "this(type,1); "
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "adacb4dbabce543ccb0691957d5888c4fd380887",
    "fixCommitParentSHA1": "aead3745f240b8a6c41d0059ce75bd6351034664",
    "bugFilePath": "src/main/java/org/bukkit/inventory/ItemStack.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/inventory/ItemStack.java b/src/main/java/org/bukkit/inventory/ItemStack.java\nindex 41db221..165eca6 100644\n--- a/src/main/java/org/bukkit/inventory/ItemStack.java\n+++ b/src/main/java/org/bukkit/inventory/ItemStack.java\n@@ -20,11 +20,11 @@\n     private Map<Enchantment, Integer> enchantments = new HashMap<Enchantment, Integer>();\n \n     public ItemStack(final int type) {\n-        this(type, 0);\n+        this(type, 1);\n     }\n \n     public ItemStack(final Material type) {\n-        this(type, 0);\n+        this(type, 1);\n     }\n \n     public ItemStack(final int type, final int amount) {\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 27,
    "bugNodeStartChar": 791,
    "bugNodeLength": 14,
    "fixLineNum": 27,
    "fixNodeStartChar": 791,
    "fixNodeLength": 14,
    "sourceBeforeFix": "this(type,0); ",
    "sourceAfterFix": "this(type,1); "
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "99e1a92191d36192872fd11665252a5f1cd87b79",
    "fixCommitParentSHA1": "a052ce24493898ec422ec2ef6a7d83e1e2de6dce",
    "bugFilePath": "src/main/java/org/bukkit/entity/EntityType.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/entity/EntityType.java b/src/main/java/org/bukkit/entity/EntityType.java\nindex 42f2dcc..cd3d4ec 100644\n--- a/src/main/java/org/bukkit/entity/EntityType.java\n+++ b/src/main/java/org/bukkit/entity/EntityType.java\n@@ -45,7 +45,7 @@\n     MUSHROOM_COW(\"MushroomCow\", MushroomCow.class, 96),\n     SNOWMAN(\"SnowMan\", Snowman.class, 97),\n     OCELOT(\"Ozelot\", Ocelot.class, 98),\n-    IRON_GOLEM(\"VillagerGolem\", IronGolem.class, 98),\n+    IRON_GOLEM(\"VillagerGolem\", IronGolem.class, 99),\n     VILLAGER(\"Villager\", Villager.class, 120),\n     ENDER_CRYSTAL(\"EnderCrystal\", EnderCrystal.class, 200),\n     // These don't have an entity ID in nms.EntityTypes.\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 48,
    "bugNodeStartChar": 1943,
    "bugNodeLength": 48,
    "fixLineNum": 48,
    "fixNodeStartChar": 1943,
    "fixNodeLength": 48,
    "sourceBeforeFix": "IRON_GOLEM(\"VillagerGolem\",IronGolem.class,98)",
    "sourceAfterFix": "IRON_GOLEM(\"VillagerGolem\",IronGolem.class,99)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "3d928b7d4472a4166fac10d441647c187e23a0b1",
    "fixCommitParentSHA1": "94a61cc3a5a841a5a983053c3556dd0b51e04c10",
    "bugFilePath": "src/main/java/org/bukkit/inventory/ItemStack.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/inventory/ItemStack.java b/src/main/java/org/bukkit/inventory/ItemStack.java\nindex b814fbe..41db221 100644\n--- a/src/main/java/org/bukkit/inventory/ItemStack.java\n+++ b/src/main/java/org/bukkit/inventory/ItemStack.java\n@@ -64,7 +64,7 @@\n         if (stack.data != null) {\n             this.data = stack.data.clone();\n         }\n-        enchantments.putAll(stack.enchantments);\n+        this.addUnsafeEnchantments(stack.getEnchantments());\n     }\n \n     /**\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 67,
    "bugNodeStartChar": 1985,
    "bugNodeLength": 12,
    "fixLineNum": 67,
    "fixNodeStartChar": 1985,
    "fixNodeLength": 4,
    "sourceBeforeFix": "enchantments.putAll(stack.enchantments)",
    "sourceAfterFix": "this.addUnsafeEnchantments(stack.getEnchantments())"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "86e029a92431fddb2c33ea7c1ef486503df3c649",
    "fixCommitParentSHA1": "2e12e3ec8acdd34cbcc5ce440a6f3d878ddaf8cb",
    "bugFilePath": "src/main/java/org/bukkit/map/MapPalette.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/map/MapPalette.java b/src/main/java/org/bukkit/map/MapPalette.java\nindex b9935b7..959929c 100644\n--- a/src/main/java/org/bukkit/map/MapPalette.java\n+++ b/src/main/java/org/bukkit/map/MapPalette.java\n@@ -97,7 +97,7 @@\n \n         byte[] result = new byte[temp.getWidth() * temp.getHeight()];\n         for (int i = 0; i < pixels.length; i++) {\n-            result[i] = matchColor(new Color(pixels[i]));\n+            result[i] = matchColor(new Color(pixels[i], true));\n         }\n         return result;\n     }\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 100,
    "bugNodeStartChar": 3872,
    "bugNodeLength": 20,
    "fixLineNum": 100,
    "fixNodeStartChar": 3872,
    "fixNodeLength": 26,
    "sourceBeforeFix": "new Color(pixels[i])",
    "sourceAfterFix": "new Color(pixels[i],true)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "24d0df5830912b3ad11fdbc6448eb68eeaced28b",
    "fixCommitParentSHA1": "c0e2ade3352b754b2f1de1f73fdbff77d5a34f99",
    "bugFilePath": "src/main/java/org/bukkit/inventory/ItemStack.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/inventory/ItemStack.java b/src/main/java/org/bukkit/inventory/ItemStack.java\nindex 36cb83d..9118194 100644\n--- a/src/main/java/org/bukkit/inventory/ItemStack.java\n+++ b/src/main/java/org/bukkit/inventory/ItemStack.java\n@@ -398,7 +398,7 @@\n                     Enchantment enchantment = Enchantment.getByName(entry.getKey().toString());\n \n                     if ((enchantment != null) && (entry.getValue() instanceof Integer)) {\n-                        result.addEnchantment(enchantment, (Integer) entry.getValue());\n+                        result.addUnsafeEnchantment(enchantment, (Integer) entry.getValue());\n                     }\n                 }\n             }\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 401,
    "bugNodeStartChar": 12034,
    "bugNodeLength": 62,
    "fixLineNum": 401,
    "fixNodeStartChar": 12034,
    "fixNodeLength": 68,
    "sourceBeforeFix": "result.addEnchantment(enchantment,(Integer)entry.getValue())",
    "sourceAfterFix": "result.addUnsafeEnchantment(enchantment,(Integer)entry.getValue())"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "24d0df5830912b3ad11fdbc6448eb68eeaced28b",
    "fixCommitParentSHA1": "c0e2ade3352b754b2f1de1f73fdbff77d5a34f99",
    "bugFilePath": "src/main/java/org/bukkit/inventory/ItemStack.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/inventory/ItemStack.java b/src/main/java/org/bukkit/inventory/ItemStack.java\nindex 36cb83d..9118194 100644\n--- a/src/main/java/org/bukkit/inventory/ItemStack.java\n+++ b/src/main/java/org/bukkit/inventory/ItemStack.java\n@@ -398,7 +398,7 @@\n                     Enchantment enchantment = Enchantment.getByName(entry.getKey().toString());\n \n                     if ((enchantment != null) && (entry.getValue() instanceof Integer)) {\n-                        result.addEnchantment(enchantment, (Integer) entry.getValue());\n+                        result.addUnsafeEnchantment(enchantment, (Integer) entry.getValue());\n                     }\n                 }\n             }\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 401,
    "bugNodeStartChar": 12034,
    "bugNodeLength": 62,
    "fixLineNum": 401,
    "fixNodeStartChar": 12034,
    "fixNodeLength": 68,
    "sourceBeforeFix": "result.addEnchantment(enchantment,(Integer)entry.getValue())",
    "sourceAfterFix": "result.addUnsafeEnchantment(enchantment,(Integer)entry.getValue())"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "9e669d7d3d316d5ba01157b4528d80157366305a",
    "fixCommitParentSHA1": "594400d5ed8e299d7a586b7a80fa22fe5794c72c",
    "bugFilePath": "src/main/java/org/bukkit/potion/PotionEffectType.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/potion/PotionEffectType.java b/src/main/java/org/bukkit/potion/PotionEffectType.java\nindex d43aea5..8a60055 100644\n--- a/src/main/java/org/bukkit/potion/PotionEffectType.java\n+++ b/src/main/java/org/bukkit/potion/PotionEffectType.java\n@@ -12,99 +12,100 @@\n     /**\n      * Increases movement speed.\n      */\n-    public static PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n+    public static final PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n \n     /**\n      * Decreases movement speed.\n      */\n-    public static PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n+    public static final PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n \n     /**\n      * Increases dig speed.\n      */\n-    public static PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n+    public static final PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n \n     /**\n      * Decreases dig speed.\n      */\n-    public static PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n+    public static final PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n \n     /**\n      * Increases damage dealt.\n      */\n-    public static PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n+    public static final PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n \n     /**\n      * Heals an entity.\n      */\n-    public static PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n+    public static final PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n \n     /**\n      * Hurts an entity.\n      */\n-    public static PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n+    public static final PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n \n     /**\n      * Increases jump height.\n      */\n-    public static PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n+    public static final PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n \n     /**\n      * Warps vision on the client.\n      */\n-    public static PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n+    public static final PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n \n     /**\n      * Regenerates health.\n      */\n-    public static PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n+    public static final PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n \n     /**\n      * Decreases damage dealt to an entity.\n      */\n-    public static PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n+    public static final PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n \n     /**\n      * Stops fire damage.\n      */\n-    public static PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n+    public static final PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n \n     /**\n      * Allows breathing underwater.\n      */\n-    public static PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n+    public static final PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n \n     /**\n-     * Grants invisibility.\n+     * Grants invisibility. NOTE: Unusable due to not being implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n+    public static final PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n \n     /**\n      * Blinds an entity.\n      */\n-    public static PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n+    public static final PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n \n     /**\n-     * Allows an entity to see in the dark.\n+     * Allows an entity to see in the dark. NOTE: Unusable due to not being \n+     * implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n+    public static final PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n \n     /**\n      * Increases hunger.\n      */\n-    public static PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n+    public static final PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n \n     /**\n      * Decreases damage dealt by an entity.\n      */\n-    public static PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n+    public static final PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n \n     /**\n      * Deals damage to an entity over time.\n      */\n-    public static PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n+    public static final PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n \n     private final int id;\n \n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 12,
    "bugNodeStartChar": 232,
    "bugNodeLength": 119,
    "fixLineNum": 12,
    "fixNodeStartChar": 232,
    "fixNodeLength": 125,
    "sourceBeforeFix": "9",
    "sourceAfterFix": "25"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "9e669d7d3d316d5ba01157b4528d80157366305a",
    "fixCommitParentSHA1": "594400d5ed8e299d7a586b7a80fa22fe5794c72c",
    "bugFilePath": "src/main/java/org/bukkit/potion/PotionEffectType.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/potion/PotionEffectType.java b/src/main/java/org/bukkit/potion/PotionEffectType.java\nindex d43aea5..8a60055 100644\n--- a/src/main/java/org/bukkit/potion/PotionEffectType.java\n+++ b/src/main/java/org/bukkit/potion/PotionEffectType.java\n@@ -12,99 +12,100 @@\n     /**\n      * Increases movement speed.\n      */\n-    public static PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n+    public static final PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n \n     /**\n      * Decreases movement speed.\n      */\n-    public static PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n+    public static final PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n \n     /**\n      * Increases dig speed.\n      */\n-    public static PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n+    public static final PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n \n     /**\n      * Decreases dig speed.\n      */\n-    public static PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n+    public static final PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n \n     /**\n      * Increases damage dealt.\n      */\n-    public static PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n+    public static final PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n \n     /**\n      * Heals an entity.\n      */\n-    public static PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n+    public static final PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n \n     /**\n      * Hurts an entity.\n      */\n-    public static PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n+    public static final PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n \n     /**\n      * Increases jump height.\n      */\n-    public static PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n+    public static final PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n \n     /**\n      * Warps vision on the client.\n      */\n-    public static PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n+    public static final PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n \n     /**\n      * Regenerates health.\n      */\n-    public static PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n+    public static final PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n \n     /**\n      * Decreases damage dealt to an entity.\n      */\n-    public static PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n+    public static final PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n \n     /**\n      * Stops fire damage.\n      */\n-    public static PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n+    public static final PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n \n     /**\n      * Allows breathing underwater.\n      */\n-    public static PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n+    public static final PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n \n     /**\n-     * Grants invisibility.\n+     * Grants invisibility. NOTE: Unusable due to not being implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n+    public static final PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n \n     /**\n      * Blinds an entity.\n      */\n-    public static PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n+    public static final PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n \n     /**\n-     * Allows an entity to see in the dark.\n+     * Allows an entity to see in the dark. NOTE: Unusable due to not being \n+     * implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n+    public static final PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n \n     /**\n      * Increases hunger.\n      */\n-    public static PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n+    public static final PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n \n     /**\n      * Decreases damage dealt by an entity.\n      */\n-    public static PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n+    public static final PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n \n     /**\n      * Deals damage to an entity over time.\n      */\n-    public static PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n+    public static final PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n \n     private final int id;\n \n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 17,
    "bugNodeStartChar": 357,
    "bugNodeLength": 118,
    "fixLineNum": 17,
    "fixNodeStartChar": 357,
    "fixNodeLength": 124,
    "sourceBeforeFix": "9",
    "sourceAfterFix": "25"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "9e669d7d3d316d5ba01157b4528d80157366305a",
    "fixCommitParentSHA1": "594400d5ed8e299d7a586b7a80fa22fe5794c72c",
    "bugFilePath": "src/main/java/org/bukkit/potion/PotionEffectType.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/potion/PotionEffectType.java b/src/main/java/org/bukkit/potion/PotionEffectType.java\nindex d43aea5..8a60055 100644\n--- a/src/main/java/org/bukkit/potion/PotionEffectType.java\n+++ b/src/main/java/org/bukkit/potion/PotionEffectType.java\n@@ -12,99 +12,100 @@\n     /**\n      * Increases movement speed.\n      */\n-    public static PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n+    public static final PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n \n     /**\n      * Decreases movement speed.\n      */\n-    public static PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n+    public static final PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n \n     /**\n      * Increases dig speed.\n      */\n-    public static PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n+    public static final PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n \n     /**\n      * Decreases dig speed.\n      */\n-    public static PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n+    public static final PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n \n     /**\n      * Increases damage dealt.\n      */\n-    public static PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n+    public static final PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n \n     /**\n      * Heals an entity.\n      */\n-    public static PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n+    public static final PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n \n     /**\n      * Hurts an entity.\n      */\n-    public static PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n+    public static final PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n \n     /**\n      * Increases jump height.\n      */\n-    public static PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n+    public static final PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n \n     /**\n      * Warps vision on the client.\n      */\n-    public static PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n+    public static final PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n \n     /**\n      * Regenerates health.\n      */\n-    public static PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n+    public static final PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n \n     /**\n      * Decreases damage dealt to an entity.\n      */\n-    public static PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n+    public static final PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n \n     /**\n      * Stops fire damage.\n      */\n-    public static PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n+    public static final PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n \n     /**\n      * Allows breathing underwater.\n      */\n-    public static PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n+    public static final PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n \n     /**\n-     * Grants invisibility.\n+     * Grants invisibility. NOTE: Unusable due to not being implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n+    public static final PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n \n     /**\n      * Blinds an entity.\n      */\n-    public static PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n+    public static final PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n \n     /**\n-     * Allows an entity to see in the dark.\n+     * Allows an entity to see in the dark. NOTE: Unusable due to not being \n+     * implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n+    public static final PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n \n     /**\n      * Increases hunger.\n      */\n-    public static PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n+    public static final PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n \n     /**\n      * Decreases damage dealt by an entity.\n      */\n-    public static PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n+    public static final PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n \n     /**\n      * Deals damage to an entity over time.\n      */\n-    public static PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n+    public static final PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n \n     private final int id;\n \n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 22,
    "bugNodeStartChar": 481,
    "bugNodeLength": 121,
    "fixLineNum": 22,
    "fixNodeStartChar": 481,
    "fixNodeLength": 127,
    "sourceBeforeFix": "9",
    "sourceAfterFix": "25"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "9e669d7d3d316d5ba01157b4528d80157366305a",
    "fixCommitParentSHA1": "594400d5ed8e299d7a586b7a80fa22fe5794c72c",
    "bugFilePath": "src/main/java/org/bukkit/potion/PotionEffectType.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/potion/PotionEffectType.java b/src/main/java/org/bukkit/potion/PotionEffectType.java\nindex d43aea5..8a60055 100644\n--- a/src/main/java/org/bukkit/potion/PotionEffectType.java\n+++ b/src/main/java/org/bukkit/potion/PotionEffectType.java\n@@ -12,99 +12,100 @@\n     /**\n      * Increases movement speed.\n      */\n-    public static PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n+    public static final PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n \n     /**\n      * Decreases movement speed.\n      */\n-    public static PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n+    public static final PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n \n     /**\n      * Increases dig speed.\n      */\n-    public static PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n+    public static final PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n \n     /**\n      * Decreases dig speed.\n      */\n-    public static PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n+    public static final PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n \n     /**\n      * Increases damage dealt.\n      */\n-    public static PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n+    public static final PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n \n     /**\n      * Heals an entity.\n      */\n-    public static PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n+    public static final PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n \n     /**\n      * Hurts an entity.\n      */\n-    public static PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n+    public static final PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n \n     /**\n      * Increases jump height.\n      */\n-    public static PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n+    public static final PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n \n     /**\n      * Warps vision on the client.\n      */\n-    public static PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n+    public static final PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n \n     /**\n      * Regenerates health.\n      */\n-    public static PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n+    public static final PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n \n     /**\n      * Decreases damage dealt to an entity.\n      */\n-    public static PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n+    public static final PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n \n     /**\n      * Stops fire damage.\n      */\n-    public static PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n+    public static final PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n \n     /**\n      * Allows breathing underwater.\n      */\n-    public static PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n+    public static final PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n \n     /**\n-     * Grants invisibility.\n+     * Grants invisibility. NOTE: Unusable due to not being implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n+    public static final PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n \n     /**\n      * Blinds an entity.\n      */\n-    public static PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n+    public static final PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n \n     /**\n-     * Allows an entity to see in the dark.\n+     * Allows an entity to see in the dark. NOTE: Unusable due to not being \n+     * implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n+    public static final PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n \n     /**\n      * Increases hunger.\n      */\n-    public static PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n+    public static final PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n \n     /**\n      * Decreases damage dealt by an entity.\n      */\n-    public static PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n+    public static final PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n \n     /**\n      * Deals damage to an entity over time.\n      */\n-    public static PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n+    public static final PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n \n     private final int id;\n \n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 27,
    "bugNodeStartChar": 608,
    "bugNodeLength": 121,
    "fixLineNum": 27,
    "fixNodeStartChar": 608,
    "fixNodeLength": 127,
    "sourceBeforeFix": "9",
    "sourceAfterFix": "25"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "9e669d7d3d316d5ba01157b4528d80157366305a",
    "fixCommitParentSHA1": "594400d5ed8e299d7a586b7a80fa22fe5794c72c",
    "bugFilePath": "src/main/java/org/bukkit/potion/PotionEffectType.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/potion/PotionEffectType.java b/src/main/java/org/bukkit/potion/PotionEffectType.java\nindex d43aea5..8a60055 100644\n--- a/src/main/java/org/bukkit/potion/PotionEffectType.java\n+++ b/src/main/java/org/bukkit/potion/PotionEffectType.java\n@@ -12,99 +12,100 @@\n     /**\n      * Increases movement speed.\n      */\n-    public static PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n+    public static final PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n \n     /**\n      * Decreases movement speed.\n      */\n-    public static PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n+    public static final PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n \n     /**\n      * Increases dig speed.\n      */\n-    public static PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n+    public static final PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n \n     /**\n      * Decreases dig speed.\n      */\n-    public static PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n+    public static final PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n \n     /**\n      * Increases damage dealt.\n      */\n-    public static PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n+    public static final PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n \n     /**\n      * Heals an entity.\n      */\n-    public static PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n+    public static final PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n \n     /**\n      * Hurts an entity.\n      */\n-    public static PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n+    public static final PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n \n     /**\n      * Increases jump height.\n      */\n-    public static PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n+    public static final PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n \n     /**\n      * Warps vision on the client.\n      */\n-    public static PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n+    public static final PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n \n     /**\n      * Regenerates health.\n      */\n-    public static PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n+    public static final PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n \n     /**\n      * Decreases damage dealt to an entity.\n      */\n-    public static PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n+    public static final PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n \n     /**\n      * Stops fire damage.\n      */\n-    public static PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n+    public static final PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n \n     /**\n      * Allows breathing underwater.\n      */\n-    public static PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n+    public static final PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n \n     /**\n-     * Grants invisibility.\n+     * Grants invisibility. NOTE: Unusable due to not being implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n+    public static final PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n \n     /**\n      * Blinds an entity.\n      */\n-    public static PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n+    public static final PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n \n     /**\n-     * Allows an entity to see in the dark.\n+     * Allows an entity to see in the dark. NOTE: Unusable due to not being \n+     * implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n+    public static final PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n \n     /**\n      * Increases hunger.\n      */\n-    public static PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n+    public static final PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n \n     /**\n      * Decreases damage dealt by an entity.\n      */\n-    public static PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n+    public static final PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n \n     /**\n      * Deals damage to an entity over time.\n      */\n-    public static PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n+    public static final PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n \n     private final int id;\n \n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 32,
    "bugNodeStartChar": 735,
    "bugNodeLength": 127,
    "fixLineNum": 32,
    "fixNodeStartChar": 735,
    "fixNodeLength": 133,
    "sourceBeforeFix": "9",
    "sourceAfterFix": "25"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "9e669d7d3d316d5ba01157b4528d80157366305a",
    "fixCommitParentSHA1": "594400d5ed8e299d7a586b7a80fa22fe5794c72c",
    "bugFilePath": "src/main/java/org/bukkit/potion/PotionEffectType.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/potion/PotionEffectType.java b/src/main/java/org/bukkit/potion/PotionEffectType.java\nindex d43aea5..8a60055 100644\n--- a/src/main/java/org/bukkit/potion/PotionEffectType.java\n+++ b/src/main/java/org/bukkit/potion/PotionEffectType.java\n@@ -12,99 +12,100 @@\n     /**\n      * Increases movement speed.\n      */\n-    public static PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n+    public static final PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n \n     /**\n      * Decreases movement speed.\n      */\n-    public static PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n+    public static final PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n \n     /**\n      * Increases dig speed.\n      */\n-    public static PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n+    public static final PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n \n     /**\n      * Decreases dig speed.\n      */\n-    public static PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n+    public static final PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n \n     /**\n      * Increases damage dealt.\n      */\n-    public static PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n+    public static final PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n \n     /**\n      * Heals an entity.\n      */\n-    public static PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n+    public static final PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n \n     /**\n      * Hurts an entity.\n      */\n-    public static PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n+    public static final PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n \n     /**\n      * Increases jump height.\n      */\n-    public static PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n+    public static final PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n \n     /**\n      * Warps vision on the client.\n      */\n-    public static PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n+    public static final PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n \n     /**\n      * Regenerates health.\n      */\n-    public static PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n+    public static final PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n \n     /**\n      * Decreases damage dealt to an entity.\n      */\n-    public static PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n+    public static final PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n \n     /**\n      * Stops fire damage.\n      */\n-    public static PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n+    public static final PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n \n     /**\n      * Allows breathing underwater.\n      */\n-    public static PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n+    public static final PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n \n     /**\n-     * Grants invisibility.\n+     * Grants invisibility. NOTE: Unusable due to not being implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n+    public static final PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n \n     /**\n      * Blinds an entity.\n      */\n-    public static PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n+    public static final PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n \n     /**\n-     * Allows an entity to see in the dark.\n+     * Allows an entity to see in the dark. NOTE: Unusable due to not being \n+     * implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n+    public static final PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n \n     /**\n      * Increases hunger.\n      */\n-    public static PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n+    public static final PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n \n     /**\n      * Decreases damage dealt by an entity.\n      */\n-    public static PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n+    public static final PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n \n     /**\n      * Deals damage to an entity over time.\n      */\n-    public static PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n+    public static final PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n \n     private final int id;\n \n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 37,
    "bugNodeStartChar": 868,
    "bugNodeLength": 109,
    "fixLineNum": 37,
    "fixNodeStartChar": 868,
    "fixNodeLength": 115,
    "sourceBeforeFix": "9",
    "sourceAfterFix": "25"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "9e669d7d3d316d5ba01157b4528d80157366305a",
    "fixCommitParentSHA1": "594400d5ed8e299d7a586b7a80fa22fe5794c72c",
    "bugFilePath": "src/main/java/org/bukkit/potion/PotionEffectType.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/potion/PotionEffectType.java b/src/main/java/org/bukkit/potion/PotionEffectType.java\nindex d43aea5..8a60055 100644\n--- a/src/main/java/org/bukkit/potion/PotionEffectType.java\n+++ b/src/main/java/org/bukkit/potion/PotionEffectType.java\n@@ -12,99 +12,100 @@\n     /**\n      * Increases movement speed.\n      */\n-    public static PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n+    public static final PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n \n     /**\n      * Decreases movement speed.\n      */\n-    public static PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n+    public static final PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n \n     /**\n      * Increases dig speed.\n      */\n-    public static PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n+    public static final PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n \n     /**\n      * Decreases dig speed.\n      */\n-    public static PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n+    public static final PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n \n     /**\n      * Increases damage dealt.\n      */\n-    public static PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n+    public static final PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n \n     /**\n      * Heals an entity.\n      */\n-    public static PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n+    public static final PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n \n     /**\n      * Hurts an entity.\n      */\n-    public static PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n+    public static final PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n \n     /**\n      * Increases jump height.\n      */\n-    public static PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n+    public static final PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n \n     /**\n      * Warps vision on the client.\n      */\n-    public static PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n+    public static final PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n \n     /**\n      * Regenerates health.\n      */\n-    public static PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n+    public static final PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n \n     /**\n      * Decreases damage dealt to an entity.\n      */\n-    public static PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n+    public static final PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n \n     /**\n      * Stops fire damage.\n      */\n-    public static PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n+    public static final PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n \n     /**\n      * Allows breathing underwater.\n      */\n-    public static PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n+    public static final PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n \n     /**\n-     * Grants invisibility.\n+     * Grants invisibility. NOTE: Unusable due to not being implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n+    public static final PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n \n     /**\n      * Blinds an entity.\n      */\n-    public static PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n+    public static final PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n \n     /**\n-     * Allows an entity to see in the dark.\n+     * Allows an entity to see in the dark. NOTE: Unusable due to not being \n+     * implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n+    public static final PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n \n     /**\n      * Increases hunger.\n      */\n-    public static PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n+    public static final PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n \n     /**\n      * Decreases damage dealt by an entity.\n      */\n-    public static PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n+    public static final PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n \n     /**\n      * Deals damage to an entity over time.\n      */\n-    public static PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n+    public static final PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n \n     private final int id;\n \n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 42,
    "bugNodeStartChar": 983,
    "bugNodeLength": 109,
    "fixLineNum": 42,
    "fixNodeStartChar": 983,
    "fixNodeLength": 115,
    "sourceBeforeFix": "9",
    "sourceAfterFix": "25"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "9e669d7d3d316d5ba01157b4528d80157366305a",
    "fixCommitParentSHA1": "594400d5ed8e299d7a586b7a80fa22fe5794c72c",
    "bugFilePath": "src/main/java/org/bukkit/potion/PotionEffectType.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/potion/PotionEffectType.java b/src/main/java/org/bukkit/potion/PotionEffectType.java\nindex d43aea5..8a60055 100644\n--- a/src/main/java/org/bukkit/potion/PotionEffectType.java\n+++ b/src/main/java/org/bukkit/potion/PotionEffectType.java\n@@ -12,99 +12,100 @@\n     /**\n      * Increases movement speed.\n      */\n-    public static PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n+    public static final PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n \n     /**\n      * Decreases movement speed.\n      */\n-    public static PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n+    public static final PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n \n     /**\n      * Increases dig speed.\n      */\n-    public static PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n+    public static final PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n \n     /**\n      * Decreases dig speed.\n      */\n-    public static PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n+    public static final PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n \n     /**\n      * Increases damage dealt.\n      */\n-    public static PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n+    public static final PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n \n     /**\n      * Heals an entity.\n      */\n-    public static PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n+    public static final PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n \n     /**\n      * Hurts an entity.\n      */\n-    public static PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n+    public static final PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n \n     /**\n      * Increases jump height.\n      */\n-    public static PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n+    public static final PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n \n     /**\n      * Warps vision on the client.\n      */\n-    public static PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n+    public static final PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n \n     /**\n      * Regenerates health.\n      */\n-    public static PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n+    public static final PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n \n     /**\n      * Decreases damage dealt to an entity.\n      */\n-    public static PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n+    public static final PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n \n     /**\n      * Stops fire damage.\n      */\n-    public static PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n+    public static final PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n \n     /**\n      * Allows breathing underwater.\n      */\n-    public static PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n+    public static final PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n \n     /**\n-     * Grants invisibility.\n+     * Grants invisibility. NOTE: Unusable due to not being implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n+    public static final PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n \n     /**\n      * Blinds an entity.\n      */\n-    public static PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n+    public static final PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n \n     /**\n-     * Allows an entity to see in the dark.\n+     * Allows an entity to see in the dark. NOTE: Unusable due to not being \n+     * implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n+    public static final PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n \n     /**\n      * Increases hunger.\n      */\n-    public static PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n+    public static final PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n \n     /**\n      * Decreases damage dealt by an entity.\n      */\n-    public static PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n+    public static final PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n \n     /**\n      * Deals damage to an entity over time.\n      */\n-    public static PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n+    public static final PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n \n     private final int id;\n \n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 47,
    "bugNodeStartChar": 1098,
    "bugNodeLength": 115,
    "fixLineNum": 47,
    "fixNodeStartChar": 1098,
    "fixNodeLength": 121,
    "sourceBeforeFix": "9",
    "sourceAfterFix": "25"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "9e669d7d3d316d5ba01157b4528d80157366305a",
    "fixCommitParentSHA1": "594400d5ed8e299d7a586b7a80fa22fe5794c72c",
    "bugFilePath": "src/main/java/org/bukkit/potion/PotionEffectType.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/potion/PotionEffectType.java b/src/main/java/org/bukkit/potion/PotionEffectType.java\nindex d43aea5..8a60055 100644\n--- a/src/main/java/org/bukkit/potion/PotionEffectType.java\n+++ b/src/main/java/org/bukkit/potion/PotionEffectType.java\n@@ -12,99 +12,100 @@\n     /**\n      * Increases movement speed.\n      */\n-    public static PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n+    public static final PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n \n     /**\n      * Decreases movement speed.\n      */\n-    public static PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n+    public static final PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n \n     /**\n      * Increases dig speed.\n      */\n-    public static PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n+    public static final PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n \n     /**\n      * Decreases dig speed.\n      */\n-    public static PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n+    public static final PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n \n     /**\n      * Increases damage dealt.\n      */\n-    public static PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n+    public static final PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n \n     /**\n      * Heals an entity.\n      */\n-    public static PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n+    public static final PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n \n     /**\n      * Hurts an entity.\n      */\n-    public static PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n+    public static final PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n \n     /**\n      * Increases jump height.\n      */\n-    public static PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n+    public static final PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n \n     /**\n      * Warps vision on the client.\n      */\n-    public static PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n+    public static final PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n \n     /**\n      * Regenerates health.\n      */\n-    public static PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n+    public static final PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n \n     /**\n      * Decreases damage dealt to an entity.\n      */\n-    public static PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n+    public static final PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n \n     /**\n      * Stops fire damage.\n      */\n-    public static PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n+    public static final PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n \n     /**\n      * Allows breathing underwater.\n      */\n-    public static PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n+    public static final PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n \n     /**\n-     * Grants invisibility.\n+     * Grants invisibility. NOTE: Unusable due to not being implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n+    public static final PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n \n     /**\n      * Blinds an entity.\n      */\n-    public static PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n+    public static final PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n \n     /**\n-     * Allows an entity to see in the dark.\n+     * Allows an entity to see in the dark. NOTE: Unusable due to not being \n+     * implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n+    public static final PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n \n     /**\n      * Increases hunger.\n      */\n-    public static PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n+    public static final PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n \n     /**\n      * Decreases damage dealt by an entity.\n      */\n-    public static PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n+    public static final PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n \n     /**\n      * Deals damage to an entity over time.\n      */\n-    public static PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n+    public static final PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n \n     private final int id;\n \n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 52,
    "bugNodeStartChar": 1219,
    "bugNodeLength": 125,
    "fixLineNum": 52,
    "fixNodeStartChar": 1219,
    "fixNodeLength": 131,
    "sourceBeforeFix": "9",
    "sourceAfterFix": "25"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "9e669d7d3d316d5ba01157b4528d80157366305a",
    "fixCommitParentSHA1": "594400d5ed8e299d7a586b7a80fa22fe5794c72c",
    "bugFilePath": "src/main/java/org/bukkit/potion/PotionEffectType.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/potion/PotionEffectType.java b/src/main/java/org/bukkit/potion/PotionEffectType.java\nindex d43aea5..8a60055 100644\n--- a/src/main/java/org/bukkit/potion/PotionEffectType.java\n+++ b/src/main/java/org/bukkit/potion/PotionEffectType.java\n@@ -12,99 +12,100 @@\n     /**\n      * Increases movement speed.\n      */\n-    public static PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n+    public static final PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n \n     /**\n      * Decreases movement speed.\n      */\n-    public static PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n+    public static final PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n \n     /**\n      * Increases dig speed.\n      */\n-    public static PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n+    public static final PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n \n     /**\n      * Decreases dig speed.\n      */\n-    public static PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n+    public static final PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n \n     /**\n      * Increases damage dealt.\n      */\n-    public static PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n+    public static final PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n \n     /**\n      * Heals an entity.\n      */\n-    public static PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n+    public static final PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n \n     /**\n      * Hurts an entity.\n      */\n-    public static PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n+    public static final PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n \n     /**\n      * Increases jump height.\n      */\n-    public static PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n+    public static final PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n \n     /**\n      * Warps vision on the client.\n      */\n-    public static PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n+    public static final PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n \n     /**\n      * Regenerates health.\n      */\n-    public static PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n+    public static final PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n \n     /**\n      * Decreases damage dealt to an entity.\n      */\n-    public static PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n+    public static final PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n \n     /**\n      * Stops fire damage.\n      */\n-    public static PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n+    public static final PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n \n     /**\n      * Allows breathing underwater.\n      */\n-    public static PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n+    public static final PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n \n     /**\n-     * Grants invisibility.\n+     * Grants invisibility. NOTE: Unusable due to not being implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n+    public static final PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n \n     /**\n      * Blinds an entity.\n      */\n-    public static PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n+    public static final PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n \n     /**\n-     * Allows an entity to see in the dark.\n+     * Allows an entity to see in the dark. NOTE: Unusable due to not being \n+     * implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n+    public static final PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n \n     /**\n      * Increases hunger.\n      */\n-    public static PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n+    public static final PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n \n     /**\n      * Decreases damage dealt by an entity.\n      */\n-    public static PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n+    public static final PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n \n     /**\n      * Deals damage to an entity over time.\n      */\n-    public static PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n+    public static final PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n \n     private final int id;\n \n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 57,
    "bugNodeStartChar": 1350,
    "bugNodeLength": 121,
    "fixLineNum": 57,
    "fixNodeStartChar": 1350,
    "fixNodeLength": 127,
    "sourceBeforeFix": "9",
    "sourceAfterFix": "25"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "9e669d7d3d316d5ba01157b4528d80157366305a",
    "fixCommitParentSHA1": "594400d5ed8e299d7a586b7a80fa22fe5794c72c",
    "bugFilePath": "src/main/java/org/bukkit/potion/PotionEffectType.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/potion/PotionEffectType.java b/src/main/java/org/bukkit/potion/PotionEffectType.java\nindex d43aea5..8a60055 100644\n--- a/src/main/java/org/bukkit/potion/PotionEffectType.java\n+++ b/src/main/java/org/bukkit/potion/PotionEffectType.java\n@@ -12,99 +12,100 @@\n     /**\n      * Increases movement speed.\n      */\n-    public static PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n+    public static final PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n \n     /**\n      * Decreases movement speed.\n      */\n-    public static PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n+    public static final PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n \n     /**\n      * Increases dig speed.\n      */\n-    public static PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n+    public static final PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n \n     /**\n      * Decreases dig speed.\n      */\n-    public static PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n+    public static final PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n \n     /**\n      * Increases damage dealt.\n      */\n-    public static PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n+    public static final PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n \n     /**\n      * Heals an entity.\n      */\n-    public static PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n+    public static final PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n \n     /**\n      * Hurts an entity.\n      */\n-    public static PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n+    public static final PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n \n     /**\n      * Increases jump height.\n      */\n-    public static PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n+    public static final PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n \n     /**\n      * Warps vision on the client.\n      */\n-    public static PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n+    public static final PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n \n     /**\n      * Regenerates health.\n      */\n-    public static PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n+    public static final PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n \n     /**\n      * Decreases damage dealt to an entity.\n      */\n-    public static PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n+    public static final PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n \n     /**\n      * Stops fire damage.\n      */\n-    public static PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n+    public static final PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n \n     /**\n      * Allows breathing underwater.\n      */\n-    public static PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n+    public static final PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n \n     /**\n-     * Grants invisibility.\n+     * Grants invisibility. NOTE: Unusable due to not being implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n+    public static final PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n \n     /**\n      * Blinds an entity.\n      */\n-    public static PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n+    public static final PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n \n     /**\n-     * Allows an entity to see in the dark.\n+     * Allows an entity to see in the dark. NOTE: Unusable due to not being \n+     * implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n+    public static final PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n \n     /**\n      * Increases hunger.\n      */\n-    public static PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n+    public static final PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n \n     /**\n      * Decreases damage dealt by an entity.\n      */\n-    public static PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n+    public static final PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n \n     /**\n      * Deals damage to an entity over time.\n      */\n-    public static PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n+    public static final PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n \n     private final int id;\n \n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 62,
    "bugNodeStartChar": 1477,
    "bugNodeLength": 143,
    "fixLineNum": 62,
    "fixNodeStartChar": 1477,
    "fixNodeLength": 149,
    "sourceBeforeFix": "9",
    "sourceAfterFix": "25"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "9e669d7d3d316d5ba01157b4528d80157366305a",
    "fixCommitParentSHA1": "594400d5ed8e299d7a586b7a80fa22fe5794c72c",
    "bugFilePath": "src/main/java/org/bukkit/potion/PotionEffectType.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/potion/PotionEffectType.java b/src/main/java/org/bukkit/potion/PotionEffectType.java\nindex d43aea5..8a60055 100644\n--- a/src/main/java/org/bukkit/potion/PotionEffectType.java\n+++ b/src/main/java/org/bukkit/potion/PotionEffectType.java\n@@ -12,99 +12,100 @@\n     /**\n      * Increases movement speed.\n      */\n-    public static PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n+    public static final PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n \n     /**\n      * Decreases movement speed.\n      */\n-    public static PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n+    public static final PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n \n     /**\n      * Increases dig speed.\n      */\n-    public static PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n+    public static final PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n \n     /**\n      * Decreases dig speed.\n      */\n-    public static PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n+    public static final PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n \n     /**\n      * Increases damage dealt.\n      */\n-    public static PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n+    public static final PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n \n     /**\n      * Heals an entity.\n      */\n-    public static PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n+    public static final PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n \n     /**\n      * Hurts an entity.\n      */\n-    public static PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n+    public static final PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n \n     /**\n      * Increases jump height.\n      */\n-    public static PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n+    public static final PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n \n     /**\n      * Warps vision on the client.\n      */\n-    public static PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n+    public static final PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n \n     /**\n      * Regenerates health.\n      */\n-    public static PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n+    public static final PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n \n     /**\n      * Decreases damage dealt to an entity.\n      */\n-    public static PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n+    public static final PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n \n     /**\n      * Stops fire damage.\n      */\n-    public static PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n+    public static final PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n \n     /**\n      * Allows breathing underwater.\n      */\n-    public static PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n+    public static final PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n \n     /**\n-     * Grants invisibility.\n+     * Grants invisibility. NOTE: Unusable due to not being implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n+    public static final PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n \n     /**\n      * Blinds an entity.\n      */\n-    public static PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n+    public static final PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n \n     /**\n-     * Allows an entity to see in the dark.\n+     * Allows an entity to see in the dark. NOTE: Unusable due to not being \n+     * implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n+    public static final PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n \n     /**\n      * Increases hunger.\n      */\n-    public static PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n+    public static final PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n \n     /**\n      * Decreases damage dealt by an entity.\n      */\n-    public static PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n+    public static final PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n \n     /**\n      * Deals damage to an entity over time.\n      */\n-    public static PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n+    public static final PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n \n     private final int id;\n \n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 67,
    "bugNodeStartChar": 1626,
    "bugNodeLength": 123,
    "fixLineNum": 67,
    "fixNodeStartChar": 1626,
    "fixNodeLength": 129,
    "sourceBeforeFix": "9",
    "sourceAfterFix": "25"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "9e669d7d3d316d5ba01157b4528d80157366305a",
    "fixCommitParentSHA1": "594400d5ed8e299d7a586b7a80fa22fe5794c72c",
    "bugFilePath": "src/main/java/org/bukkit/potion/PotionEffectType.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/potion/PotionEffectType.java b/src/main/java/org/bukkit/potion/PotionEffectType.java\nindex d43aea5..8a60055 100644\n--- a/src/main/java/org/bukkit/potion/PotionEffectType.java\n+++ b/src/main/java/org/bukkit/potion/PotionEffectType.java\n@@ -12,99 +12,100 @@\n     /**\n      * Increases movement speed.\n      */\n-    public static PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n+    public static final PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n \n     /**\n      * Decreases movement speed.\n      */\n-    public static PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n+    public static final PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n \n     /**\n      * Increases dig speed.\n      */\n-    public static PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n+    public static final PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n \n     /**\n      * Decreases dig speed.\n      */\n-    public static PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n+    public static final PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n \n     /**\n      * Increases damage dealt.\n      */\n-    public static PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n+    public static final PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n \n     /**\n      * Heals an entity.\n      */\n-    public static PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n+    public static final PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n \n     /**\n      * Hurts an entity.\n      */\n-    public static PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n+    public static final PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n \n     /**\n      * Increases jump height.\n      */\n-    public static PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n+    public static final PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n \n     /**\n      * Warps vision on the client.\n      */\n-    public static PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n+    public static final PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n \n     /**\n      * Regenerates health.\n      */\n-    public static PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n+    public static final PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n \n     /**\n      * Decreases damage dealt to an entity.\n      */\n-    public static PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n+    public static final PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n \n     /**\n      * Stops fire damage.\n      */\n-    public static PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n+    public static final PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n \n     /**\n      * Allows breathing underwater.\n      */\n-    public static PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n+    public static final PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n \n     /**\n-     * Grants invisibility.\n+     * Grants invisibility. NOTE: Unusable due to not being implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n+    public static final PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n \n     /**\n      * Blinds an entity.\n      */\n-    public static PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n+    public static final PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n \n     /**\n-     * Allows an entity to see in the dark.\n+     * Allows an entity to see in the dark. NOTE: Unusable due to not being \n+     * implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n+    public static final PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n \n     /**\n      * Increases hunger.\n      */\n-    public static PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n+    public static final PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n \n     /**\n      * Decreases damage dealt by an entity.\n      */\n-    public static PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n+    public static final PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n \n     /**\n      * Deals damage to an entity over time.\n      */\n-    public static PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n+    public static final PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n \n     private final int id;\n \n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 72,
    "bugNodeStartChar": 1755,
    "bugNodeLength": 133,
    "fixLineNum": 72,
    "fixNodeStartChar": 1755,
    "fixNodeLength": 139,
    "sourceBeforeFix": "9",
    "sourceAfterFix": "25"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "9e669d7d3d316d5ba01157b4528d80157366305a",
    "fixCommitParentSHA1": "594400d5ed8e299d7a586b7a80fa22fe5794c72c",
    "bugFilePath": "src/main/java/org/bukkit/potion/PotionEffectType.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/potion/PotionEffectType.java b/src/main/java/org/bukkit/potion/PotionEffectType.java\nindex d43aea5..8a60055 100644\n--- a/src/main/java/org/bukkit/potion/PotionEffectType.java\n+++ b/src/main/java/org/bukkit/potion/PotionEffectType.java\n@@ -12,99 +12,100 @@\n     /**\n      * Increases movement speed.\n      */\n-    public static PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n+    public static final PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n \n     /**\n      * Decreases movement speed.\n      */\n-    public static PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n+    public static final PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n \n     /**\n      * Increases dig speed.\n      */\n-    public static PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n+    public static final PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n \n     /**\n      * Decreases dig speed.\n      */\n-    public static PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n+    public static final PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n \n     /**\n      * Increases damage dealt.\n      */\n-    public static PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n+    public static final PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n \n     /**\n      * Heals an entity.\n      */\n-    public static PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n+    public static final PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n \n     /**\n      * Hurts an entity.\n      */\n-    public static PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n+    public static final PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n \n     /**\n      * Increases jump height.\n      */\n-    public static PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n+    public static final PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n \n     /**\n      * Warps vision on the client.\n      */\n-    public static PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n+    public static final PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n \n     /**\n      * Regenerates health.\n      */\n-    public static PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n+    public static final PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n \n     /**\n      * Decreases damage dealt to an entity.\n      */\n-    public static PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n+    public static final PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n \n     /**\n      * Stops fire damage.\n      */\n-    public static PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n+    public static final PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n \n     /**\n      * Allows breathing underwater.\n      */\n-    public static PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n+    public static final PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n \n     /**\n-     * Grants invisibility.\n+     * Grants invisibility. NOTE: Unusable due to not being implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n+    public static final PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n \n     /**\n      * Blinds an entity.\n      */\n-    public static PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n+    public static final PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n \n     /**\n-     * Allows an entity to see in the dark.\n+     * Allows an entity to see in the dark. NOTE: Unusable due to not being \n+     * implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n+    public static final PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n \n     /**\n      * Increases hunger.\n      */\n-    public static PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n+    public static final PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n \n     /**\n      * Decreases damage dealt by an entity.\n      */\n-    public static PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n+    public static final PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n \n     /**\n      * Deals damage to an entity over time.\n      */\n-    public static PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n+    public static final PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n \n     private final int id;\n \n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 77,
    "bugNodeStartChar": 1894,
    "bugNodeLength": 138,
    "fixLineNum": 77,
    "fixNodeStartChar": 1894,
    "fixNodeLength": 144,
    "sourceBeforeFix": "9",
    "sourceAfterFix": "25"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "9e669d7d3d316d5ba01157b4528d80157366305a",
    "fixCommitParentSHA1": "594400d5ed8e299d7a586b7a80fa22fe5794c72c",
    "bugFilePath": "src/main/java/org/bukkit/potion/PotionEffectType.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/potion/PotionEffectType.java b/src/main/java/org/bukkit/potion/PotionEffectType.java\nindex d43aea5..8a60055 100644\n--- a/src/main/java/org/bukkit/potion/PotionEffectType.java\n+++ b/src/main/java/org/bukkit/potion/PotionEffectType.java\n@@ -12,99 +12,100 @@\n     /**\n      * Increases movement speed.\n      */\n-    public static PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n+    public static final PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n \n     /**\n      * Decreases movement speed.\n      */\n-    public static PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n+    public static final PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n \n     /**\n      * Increases dig speed.\n      */\n-    public static PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n+    public static final PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n \n     /**\n      * Decreases dig speed.\n      */\n-    public static PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n+    public static final PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n \n     /**\n      * Increases damage dealt.\n      */\n-    public static PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n+    public static final PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n \n     /**\n      * Heals an entity.\n      */\n-    public static PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n+    public static final PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n \n     /**\n      * Hurts an entity.\n      */\n-    public static PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n+    public static final PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n \n     /**\n      * Increases jump height.\n      */\n-    public static PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n+    public static final PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n \n     /**\n      * Warps vision on the client.\n      */\n-    public static PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n+    public static final PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n \n     /**\n      * Regenerates health.\n      */\n-    public static PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n+    public static final PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n \n     /**\n      * Decreases damage dealt to an entity.\n      */\n-    public static PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n+    public static final PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n \n     /**\n      * Stops fire damage.\n      */\n-    public static PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n+    public static final PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n \n     /**\n      * Allows breathing underwater.\n      */\n-    public static PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n+    public static final PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n \n     /**\n-     * Grants invisibility.\n+     * Grants invisibility. NOTE: Unusable due to not being implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n+    public static final PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n \n     /**\n      * Blinds an entity.\n      */\n-    public static PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n+    public static final PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n \n     /**\n-     * Allows an entity to see in the dark.\n+     * Allows an entity to see in the dark. NOTE: Unusable due to not being \n+     * implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n+    public static final PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n \n     /**\n      * Increases hunger.\n      */\n-    public static PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n+    public static final PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n \n     /**\n      * Decreases damage dealt by an entity.\n      */\n-    public static PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n+    public static final PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n \n     /**\n      * Deals damage to an entity over time.\n      */\n-    public static PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n+    public static final PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n \n     private final int id;\n \n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 83,
    "bugNodeStartChar": 2055,
    "bugNodeLength": 116,
    "fixLineNum": 83,
    "fixNodeStartChar": 2055,
    "fixNodeLength": 122,
    "sourceBeforeFix": "9",
    "sourceAfterFix": "25"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "9e669d7d3d316d5ba01157b4528d80157366305a",
    "fixCommitParentSHA1": "594400d5ed8e299d7a586b7a80fa22fe5794c72c",
    "bugFilePath": "src/main/java/org/bukkit/potion/PotionEffectType.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/potion/PotionEffectType.java b/src/main/java/org/bukkit/potion/PotionEffectType.java\nindex d43aea5..8a60055 100644\n--- a/src/main/java/org/bukkit/potion/PotionEffectType.java\n+++ b/src/main/java/org/bukkit/potion/PotionEffectType.java\n@@ -12,99 +12,100 @@\n     /**\n      * Increases movement speed.\n      */\n-    public static PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n+    public static final PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n \n     /**\n      * Decreases movement speed.\n      */\n-    public static PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n+    public static final PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n \n     /**\n      * Increases dig speed.\n      */\n-    public static PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n+    public static final PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n \n     /**\n      * Decreases dig speed.\n      */\n-    public static PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n+    public static final PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n \n     /**\n      * Increases damage dealt.\n      */\n-    public static PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n+    public static final PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n \n     /**\n      * Heals an entity.\n      */\n-    public static PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n+    public static final PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n \n     /**\n      * Hurts an entity.\n      */\n-    public static PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n+    public static final PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n \n     /**\n      * Increases jump height.\n      */\n-    public static PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n+    public static final PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n \n     /**\n      * Warps vision on the client.\n      */\n-    public static PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n+    public static final PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n \n     /**\n      * Regenerates health.\n      */\n-    public static PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n+    public static final PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n \n     /**\n      * Decreases damage dealt to an entity.\n      */\n-    public static PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n+    public static final PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n \n     /**\n      * Stops fire damage.\n      */\n-    public static PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n+    public static final PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n \n     /**\n      * Allows breathing underwater.\n      */\n-    public static PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n+    public static final PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n \n     /**\n-     * Grants invisibility.\n+     * Grants invisibility. NOTE: Unusable due to not being implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n+    public static final PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n \n     /**\n      * Blinds an entity.\n      */\n-    public static PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n+    public static final PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n \n     /**\n-     * Allows an entity to see in the dark.\n+     * Allows an entity to see in the dark. NOTE: Unusable due to not being \n+     * implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n+    public static final PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n \n     /**\n      * Increases hunger.\n      */\n-    public static PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n+    public static final PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n \n     /**\n      * Decreases damage dealt by an entity.\n      */\n-    public static PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n+    public static final PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n \n     /**\n      * Deals damage to an entity over time.\n      */\n-    public static PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n+    public static final PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n \n     private final int id;\n \n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 88,
    "bugNodeStartChar": 2177,
    "bugNodeLength": 154,
    "fixLineNum": 88,
    "fixNodeStartChar": 2177,
    "fixNodeLength": 160,
    "sourceBeforeFix": "9",
    "sourceAfterFix": "25"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "9e669d7d3d316d5ba01157b4528d80157366305a",
    "fixCommitParentSHA1": "594400d5ed8e299d7a586b7a80fa22fe5794c72c",
    "bugFilePath": "src/main/java/org/bukkit/potion/PotionEffectType.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/potion/PotionEffectType.java b/src/main/java/org/bukkit/potion/PotionEffectType.java\nindex d43aea5..8a60055 100644\n--- a/src/main/java/org/bukkit/potion/PotionEffectType.java\n+++ b/src/main/java/org/bukkit/potion/PotionEffectType.java\n@@ -12,99 +12,100 @@\n     /**\n      * Increases movement speed.\n      */\n-    public static PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n+    public static final PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n \n     /**\n      * Decreases movement speed.\n      */\n-    public static PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n+    public static final PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n \n     /**\n      * Increases dig speed.\n      */\n-    public static PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n+    public static final PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n \n     /**\n      * Decreases dig speed.\n      */\n-    public static PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n+    public static final PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n \n     /**\n      * Increases damage dealt.\n      */\n-    public static PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n+    public static final PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n \n     /**\n      * Heals an entity.\n      */\n-    public static PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n+    public static final PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n \n     /**\n      * Hurts an entity.\n      */\n-    public static PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n+    public static final PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n \n     /**\n      * Increases jump height.\n      */\n-    public static PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n+    public static final PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n \n     /**\n      * Warps vision on the client.\n      */\n-    public static PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n+    public static final PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n \n     /**\n      * Regenerates health.\n      */\n-    public static PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n+    public static final PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n \n     /**\n      * Decreases damage dealt to an entity.\n      */\n-    public static PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n+    public static final PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n \n     /**\n      * Stops fire damage.\n      */\n-    public static PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n+    public static final PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n \n     /**\n      * Allows breathing underwater.\n      */\n-    public static PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n+    public static final PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n \n     /**\n-     * Grants invisibility.\n+     * Grants invisibility. NOTE: Unusable due to not being implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n+    public static final PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n \n     /**\n      * Blinds an entity.\n      */\n-    public static PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n+    public static final PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n \n     /**\n-     * Allows an entity to see in the dark.\n+     * Allows an entity to see in the dark. NOTE: Unusable due to not being \n+     * implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n+    public static final PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n \n     /**\n      * Increases hunger.\n      */\n-    public static PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n+    public static final PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n \n     /**\n      * Decreases damage dealt by an entity.\n      */\n-    public static PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n+    public static final PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n \n     /**\n      * Deals damage to an entity over time.\n      */\n-    public static PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n+    public static final PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n \n     private final int id;\n \n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 94,
    "bugNodeStartChar": 2354,
    "bugNodeLength": 113,
    "fixLineNum": 94,
    "fixNodeStartChar": 2354,
    "fixNodeLength": 119,
    "sourceBeforeFix": "9",
    "sourceAfterFix": "25"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "9e669d7d3d316d5ba01157b4528d80157366305a",
    "fixCommitParentSHA1": "594400d5ed8e299d7a586b7a80fa22fe5794c72c",
    "bugFilePath": "src/main/java/org/bukkit/potion/PotionEffectType.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/potion/PotionEffectType.java b/src/main/java/org/bukkit/potion/PotionEffectType.java\nindex d43aea5..8a60055 100644\n--- a/src/main/java/org/bukkit/potion/PotionEffectType.java\n+++ b/src/main/java/org/bukkit/potion/PotionEffectType.java\n@@ -12,99 +12,100 @@\n     /**\n      * Increases movement speed.\n      */\n-    public static PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n+    public static final PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n \n     /**\n      * Decreases movement speed.\n      */\n-    public static PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n+    public static final PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n \n     /**\n      * Increases dig speed.\n      */\n-    public static PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n+    public static final PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n \n     /**\n      * Decreases dig speed.\n      */\n-    public static PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n+    public static final PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n \n     /**\n      * Increases damage dealt.\n      */\n-    public static PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n+    public static final PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n \n     /**\n      * Heals an entity.\n      */\n-    public static PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n+    public static final PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n \n     /**\n      * Hurts an entity.\n      */\n-    public static PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n+    public static final PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n \n     /**\n      * Increases jump height.\n      */\n-    public static PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n+    public static final PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n \n     /**\n      * Warps vision on the client.\n      */\n-    public static PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n+    public static final PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n \n     /**\n      * Regenerates health.\n      */\n-    public static PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n+    public static final PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n \n     /**\n      * Decreases damage dealt to an entity.\n      */\n-    public static PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n+    public static final PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n \n     /**\n      * Stops fire damage.\n      */\n-    public static PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n+    public static final PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n \n     /**\n      * Allows breathing underwater.\n      */\n-    public static PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n+    public static final PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n \n     /**\n-     * Grants invisibility.\n+     * Grants invisibility. NOTE: Unusable due to not being implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n+    public static final PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n \n     /**\n      * Blinds an entity.\n      */\n-    public static PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n+    public static final PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n \n     /**\n-     * Allows an entity to see in the dark.\n+     * Allows an entity to see in the dark. NOTE: Unusable due to not being \n+     * implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n+    public static final PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n \n     /**\n      * Increases hunger.\n      */\n-    public static PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n+    public static final PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n \n     /**\n      * Decreases damage dealt by an entity.\n      */\n-    public static PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n+    public static final PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n \n     /**\n      * Deals damage to an entity over time.\n      */\n-    public static PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n+    public static final PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n \n     private final int id;\n \n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 99,
    "bugNodeStartChar": 2473,
    "bugNodeLength": 134,
    "fixLineNum": 99,
    "fixNodeStartChar": 2473,
    "fixNodeLength": 140,
    "sourceBeforeFix": "9",
    "sourceAfterFix": "25"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "9e669d7d3d316d5ba01157b4528d80157366305a",
    "fixCommitParentSHA1": "594400d5ed8e299d7a586b7a80fa22fe5794c72c",
    "bugFilePath": "src/main/java/org/bukkit/potion/PotionEffectType.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/potion/PotionEffectType.java b/src/main/java/org/bukkit/potion/PotionEffectType.java\nindex d43aea5..8a60055 100644\n--- a/src/main/java/org/bukkit/potion/PotionEffectType.java\n+++ b/src/main/java/org/bukkit/potion/PotionEffectType.java\n@@ -12,99 +12,100 @@\n     /**\n      * Increases movement speed.\n      */\n-    public static PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n+    public static final PotionEffectType SPEED = new PotionEffectTypeWrapper(1);\n \n     /**\n      * Decreases movement speed.\n      */\n-    public static PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n+    public static final PotionEffectType SLOW = new PotionEffectTypeWrapper(2);\n \n     /**\n      * Increases dig speed.\n      */\n-    public static PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n+    public static final PotionEffectType FAST_DIGGING = new PotionEffectTypeWrapper(3);\n \n     /**\n      * Decreases dig speed.\n      */\n-    public static PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n+    public static final PotionEffectType SLOW_DIGGING = new PotionEffectTypeWrapper(4);\n \n     /**\n      * Increases damage dealt.\n      */\n-    public static PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n+    public static final PotionEffectType INCREASE_DAMAGE = new PotionEffectTypeWrapper(5);\n \n     /**\n      * Heals an entity.\n      */\n-    public static PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n+    public static final PotionEffectType HEAL = new PotionEffectTypeWrapper(6);\n \n     /**\n      * Hurts an entity.\n      */\n-    public static PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n+    public static final PotionEffectType HARM = new PotionEffectTypeWrapper(7);\n \n     /**\n      * Increases jump height.\n      */\n-    public static PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n+    public static final PotionEffectType JUMP = new PotionEffectTypeWrapper(8);\n \n     /**\n      * Warps vision on the client.\n      */\n-    public static PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n+    public static final PotionEffectType CONFUSION = new PotionEffectTypeWrapper(9);\n \n     /**\n      * Regenerates health.\n      */\n-    public static PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n+    public static final PotionEffectType REGENERATION = new PotionEffectTypeWrapper(10);\n \n     /**\n      * Decreases damage dealt to an entity.\n      */\n-    public static PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n+    public static final PotionEffectType DAMAGE_RESISTANCE = new PotionEffectTypeWrapper(11);\n \n     /**\n      * Stops fire damage.\n      */\n-    public static PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n+    public static final PotionEffectType FIRE_RESISTANCE = new PotionEffectTypeWrapper(12);\n \n     /**\n      * Allows breathing underwater.\n      */\n-    public static PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n+    public static final PotionEffectType WATER_BREATHING = new PotionEffectTypeWrapper(13);\n \n     /**\n-     * Grants invisibility.\n+     * Grants invisibility. NOTE: Unusable due to not being implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n+    public static final PotionEffectType INVISIBILITY = new PotionEffectTypeWrapper(14); // unimplemented\n \n     /**\n      * Blinds an entity.\n      */\n-    public static PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n+    public static final PotionEffectType BLINDNESS = new PotionEffectTypeWrapper(15);\n \n     /**\n-     * Allows an entity to see in the dark.\n+     * Allows an entity to see in the dark. NOTE: Unusable due to not being \n+     * implemented by Minecraft.\n      */\n     @Deprecated\n-    public static PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n+    public static final PotionEffectType NIGHT_VISION = new PotionEffectTypeWrapper(16); // unimplemented\n \n     /**\n      * Increases hunger.\n      */\n-    public static PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n+    public static final PotionEffectType HUNGER = new PotionEffectTypeWrapper(17);\n \n     /**\n      * Decreases damage dealt by an entity.\n      */\n-    public static PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n+    public static final PotionEffectType WEAKNESS = new PotionEffectTypeWrapper(18);\n \n     /**\n      * Deals damage to an entity over time.\n      */\n-    public static PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n+    public static final PotionEffectType POISON = new PotionEffectTypeWrapper(19);\n \n     private final int id;\n \n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 104,
    "bugNodeStartChar": 2613,
    "bugNodeLength": 132,
    "fixLineNum": 104,
    "fixNodeStartChar": 2613,
    "fixNodeLength": 138,
    "sourceBeforeFix": "9",
    "sourceAfterFix": "25"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "c634d7acdb3ce922a82807d8d85f863b65d0c673",
    "fixCommitParentSHA1": "a688096fc57f10eca4088dae9b0df3102379a31c",
    "bugFilePath": "src/main/java/org/bukkit/inventory/ItemStack.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/inventory/ItemStack.java b/src/main/java/org/bukkit/inventory/ItemStack.java\nindex 95dc1f1..c730db6 100644\n--- a/src/main/java/org/bukkit/inventory/ItemStack.java\n+++ b/src/main/java/org/bukkit/inventory/ItemStack.java\n@@ -211,7 +211,7 @@\n     @Override\n     public ItemStack clone() {\n         ItemStack result = new ItemStack(type, amount, durability);\n-        result.addEnchantments(getEnchantments());\n+        result.addUnsafeEnchantments(getEnchantments());\n \n         return result;\n     }\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 214,
    "bugNodeStartChar": 5708,
    "bugNodeLength": 41,
    "fixLineNum": 214,
    "fixNodeStartChar": 5708,
    "fixNodeLength": 47,
    "sourceBeforeFix": "result.addEnchantments(getEnchantments())",
    "sourceAfterFix": "result.addUnsafeEnchantments(getEnchantments())"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "c634d7acdb3ce922a82807d8d85f863b65d0c673",
    "fixCommitParentSHA1": "a688096fc57f10eca4088dae9b0df3102379a31c",
    "bugFilePath": "src/main/java/org/bukkit/inventory/ItemStack.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/inventory/ItemStack.java b/src/main/java/org/bukkit/inventory/ItemStack.java\nindex 95dc1f1..c730db6 100644\n--- a/src/main/java/org/bukkit/inventory/ItemStack.java\n+++ b/src/main/java/org/bukkit/inventory/ItemStack.java\n@@ -211,7 +211,7 @@\n     @Override\n     public ItemStack clone() {\n         ItemStack result = new ItemStack(type, amount, durability);\n-        result.addEnchantments(getEnchantments());\n+        result.addUnsafeEnchantments(getEnchantments());\n \n         return result;\n     }\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 214,
    "bugNodeStartChar": 5708,
    "bugNodeLength": 41,
    "fixLineNum": 214,
    "fixNodeStartChar": 5708,
    "fixNodeLength": 47,
    "sourceBeforeFix": "result.addEnchantments(getEnchantments())",
    "sourceAfterFix": "result.addUnsafeEnchantments(getEnchantments())"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "46284565a7d9127c25328e5ec036068f3f24dd49",
    "fixCommitParentSHA1": "94e561ce50f708f347136026c2c8685f262bf2b2",
    "bugFilePath": "src/main/java/org/bukkit/inventory/ItemStack.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/inventory/ItemStack.java b/src/main/java/org/bukkit/inventory/ItemStack.java\nindex 7a424c7..95dc1f1 100644\n--- a/src/main/java/org/bukkit/inventory/ItemStack.java\n+++ b/src/main/java/org/bukkit/inventory/ItemStack.java\n@@ -356,18 +356,18 @@\n \n     public static ItemStack deserialize(Map<String, Object> args) {\n         Material type = Material.getMaterial((String) args.get(\"type\"));\n-        int damage = 0;\n+        short damage = 0;\n         int amount = 1;\n \n         if (args.containsKey(\"damage\")) {\n-            damage = (Integer) args.get(\"damage\");\n+            damage = (Short) args.get(\"damage\");\n         }\n \n         if (args.containsKey(\"amount\")) {\n             amount = (Integer) args.get(\"amount\");\n         }\n \n-        ItemStack result = new ItemStack(type, amount, (short) damage);\n+        ItemStack result = new ItemStack(type, amount, damage);\n \n         if (args.containsKey(\"enchantments\")) {\n             Object raw = args.get(\"enchantments\");\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 363,
    "bugNodeStartChar": 10707,
    "bugNodeLength": 28,
    "fixLineNum": 363,
    "fixNodeStartChar": 10707,
    "fixNodeLength": 26,
    "sourceBeforeFix": "(Integer)args.get(\"damage\")",
    "sourceAfterFix": "(Short)args.get(\"damage\")"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "5ace5adc6290fd840453b6044520ad328f6c9c3f",
    "fixCommitParentSHA1": "c72c570d77dc00b0b18492485518fc6af6889fa2",
    "bugFilePath": "src/main/java/org/bukkit/ChatColor.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/ChatColor.java b/src/main/java/org/bukkit/ChatColor.java\nindex 9139233..b0ece12 100644\n--- a/src/main/java/org/bukkit/ChatColor.java\n+++ b/src/main/java/org/bukkit/ChatColor.java\n@@ -11,7 +11,7 @@\n     /**\n      * Represents black\n      */\n-    BLACK('0', 0x01),\n+    BLACK('0', 0x00),\n     /**\n      * Represents dark blue\n      */\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 11,
    "bugNodeStartChar": 146,
    "bugNodeLength": 56,
    "fixLineNum": 11,
    "fixNodeStartChar": 146,
    "fixNodeLength": 56,
    "sourceBeforeFix": "/**   * Represents black  */ BLACK('0',0x01)",
    "sourceAfterFix": "/**   * Represents black  */ BLACK('0',0x00)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "cd942ae2ade297bb5f578260bcc2189c9bae7ddc",
    "fixCommitParentSHA1": "de848fe4c9f98959fad45ae9e816291df9e55185",
    "bugFilePath": "src/main/java/org/bukkit/Material.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/Material.java b/src/main/java/org/bukkit/Material.java\nindex d37b623..4873142 100644\n--- a/src/main/java/org/bukkit/Material.java\n+++ b/src/main/java/org/bukkit/Material.java\n@@ -132,7 +132,7 @@\n     BREWING_STAND(117),\n     CAULDRON(118),\n     ENDER_PORTAL(119),\n-    ENTER_PORTAL_FRAME(120),\n+    ENDER_PORTAL_FRAME(120),\n     ENDER_STONE(121),\n     DRAGON_EGG(122),\n     // ----- Item Separator -----\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 135,
    "bugNodeStartChar": 3535,
    "bugNodeLength": 23,
    "fixLineNum": 135,
    "fixNodeStartChar": 3535,
    "fixNodeLength": 23,
    "sourceBeforeFix": "ENTER_PORTAL_FRAME(120)",
    "sourceAfterFix": "ENDER_PORTAL_FRAME(120)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "c6c88b2452484093e7ee8110aa8f680ca0532f4a",
    "fixCommitParentSHA1": "bac82e018ba36cb693f8e037e921de92223734a7",
    "bugFilePath": "src/main/java/org/bukkit/Material.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/Material.java b/src/main/java/org/bukkit/Material.java\nindex 63e3ee6..2e7ef9a 100644\n--- a/src/main/java/org/bukkit/Material.java\n+++ b/src/main/java/org/bukkit/Material.java\n@@ -127,7 +127,7 @@\n     NETHER_BRICK(112),\n     NETHER_FENCE(113),\n     NETHER_BRICK_STAIRS(114),\n-    NETHER_WATER(115),\n+    NETHER_WARTS(115),\n     ENCHANTMENT_TABLE(116),\n     BREWING_STAND(117),\n     CAULDRON(118),\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 130,
    "bugNodeStartChar": 3418,
    "bugNodeLength": 17,
    "fixLineNum": 130,
    "fixNodeStartChar": 3418,
    "fixNodeLength": 17,
    "sourceBeforeFix": "NETHER_WATER(115)",
    "sourceAfterFix": "NETHER_WARTS(115)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "5a71e9e18726a4ccd1f83e8a2c7c7f5d4a57411d",
    "fixCommitParentSHA1": "c7518e70335a662ff7610006140d270068f2161d",
    "bugFilePath": "src/main/java/org/bukkit/Material.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/Material.java b/src/main/java/org/bukkit/Material.java\nindex bc089e6..f2624e1 100644\n--- a/src/main/java/org/bukkit/Material.java\n+++ b/src/main/java/org/bukkit/Material.java\n@@ -189,7 +189,7 @@\n     SNOW_BALL(332, 16),\n     BOAT(333, 1),\n     LEATHER(334),\n-    MILK_BUCKET(335),\n+    MILK_BUCKET(335, 1),\n     CLAY_BRICK(336),\n     CLAY_BALL(337),\n     SUGAR_CANE(338),\n@@ -200,20 +200,20 @@\n     POWERED_MINECART(343, 1),\n     EGG(344, 16),\n     COMPASS(345),\n-    FISHING_ROD(346, 1, 32),\n+    FISHING_ROD(346, 1, 64),\n     WATCH(347),\n     GLOWSTONE_DUST(348),\n-    RAW_FISH(349),\n-    COOKED_FISH(350),\n+    RAW_FISH(349, 1),\n+    COOKED_FISH(350, 1),\n     INK_SACK(351, Dye.class),\n     BONE(352),\n     SUGAR(353),\n     CAKE(354, 1),\n-    BED(355),\n+    BED(355, 1),\n     DIODE(356),\n-    COOKIE(357),\n-    MAP(358),\n-    SHEARS(359),\n+    COOKIE(357, 8),\n+    MAP(358, 1, MaterialData.class),\n+    SHEARS(359, 1, 238),\n     GOLD_RECORD(2256, 1),\n     GREEN_RECORD(2257, 1);\n \n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 203,
    "bugNodeStartChar": 5344,
    "bugNodeLength": 23,
    "fixLineNum": 203,
    "fixNodeStartChar": 5344,
    "fixNodeLength": 23,
    "sourceBeforeFix": "FISHING_ROD(346,1,32)",
    "sourceAfterFix": "FISHING_ROD(346,1,64)"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "dc504c01fd9f55995cf59660de88fb2f9190057d",
    "fixCommitParentSHA1": "8230758bc1da4cbd72f77625ea85476464ed906c",
    "bugFilePath": "src/main/java/org/bukkit/util/noise/PerlinNoiseGenerator.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/util/noise/PerlinNoiseGenerator.java b/src/main/java/org/bukkit/util/noise/PerlinNoiseGenerator.java\nindex 1ac7742..10b1d24 100644\n--- a/src/main/java/org/bukkit/util/noise/PerlinNoiseGenerator.java\n+++ b/src/main/java/org/bukkit/util/noise/PerlinNoiseGenerator.java\n@@ -189,7 +189,7 @@\n      * @param amplitude How much to alter the amplitude by each octave\n      * @return Resulting noise\n      */\n-    public double getNoise(double x, double y, int octaves, double frequency, double amplitude) {\n+    public static double getNoise(double x, double y, int octaves, double frequency, double amplitude) {\n         return instance.noise(x, y, octaves, frequency, amplitude);\n     }\n \n@@ -204,7 +204,7 @@\n      * @param amplitude How much to alter the amplitude by each octave\n      * @return Resulting noise\n      */\n-    public double getNoise(double x, double y, double z, int octaves, double frequency, double amplitude) {\n+    public static double getNoise(double x, double y, double z, int octaves, double frequency, double amplitude) {\n         return instance.noise(x, y, z, octaves, frequency, amplitude);\n     }\n }\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 182,
    "bugNodeStartChar": 6337,
    "bugNodeLength": 567,
    "fixLineNum": 182,
    "fixNodeStartChar": 6337,
    "fixNodeLength": 574,
    "sourceBeforeFix": "1",
    "sourceAfterFix": "9"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "dc504c01fd9f55995cf59660de88fb2f9190057d",
    "fixCommitParentSHA1": "8230758bc1da4cbd72f77625ea85476464ed906c",
    "bugFilePath": "src/main/java/org/bukkit/util/noise/PerlinNoiseGenerator.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/util/noise/PerlinNoiseGenerator.java b/src/main/java/org/bukkit/util/noise/PerlinNoiseGenerator.java\nindex 1ac7742..10b1d24 100644\n--- a/src/main/java/org/bukkit/util/noise/PerlinNoiseGenerator.java\n+++ b/src/main/java/org/bukkit/util/noise/PerlinNoiseGenerator.java\n@@ -189,7 +189,7 @@\n      * @param amplitude How much to alter the amplitude by each octave\n      * @return Resulting noise\n      */\n-    public double getNoise(double x, double y, int octaves, double frequency, double amplitude) {\n+    public static double getNoise(double x, double y, int octaves, double frequency, double amplitude) {\n         return instance.noise(x, y, octaves, frequency, amplitude);\n     }\n \n@@ -204,7 +204,7 @@\n      * @param amplitude How much to alter the amplitude by each octave\n      * @return Resulting noise\n      */\n-    public double getNoise(double x, double y, double z, int octaves, double frequency, double amplitude) {\n+    public static double getNoise(double x, double y, double z, int octaves, double frequency, double amplitude) {\n         return instance.noise(x, y, z, octaves, frequency, amplitude);\n     }\n }\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 196,
    "bugNodeStartChar": 6910,
    "bugNodeLength": 609,
    "fixLineNum": 196,
    "fixNodeStartChar": 6910,
    "fixNodeLength": 616,
    "sourceBeforeFix": "1",
    "sourceAfterFix": "9"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "888d20138863d627e56808fdcc6288133a8ad4ff",
    "fixCommitParentSHA1": "2342c0104870354b7dd6ac0de9ad9dda7e71b99c",
    "bugFilePath": "src/main/java/org/bukkit/Material.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/Material.java b/src/main/java/org/bukkit/Material.java\nindex 715c6c6..c29e29e 100644\n--- a/src/main/java/org/bukkit/Material.java\n+++ b/src/main/java/org/bukkit/Material.java\n@@ -117,7 +117,7 @@\n     DIAMOND(264),\n     IRON_INGOT(265),\n     GOLD_INGOT(266),\n-    IRON_SWORD(267, 1, 59),\n+    IRON_SWORD(267, 1, 250),\n     WOOD_SWORD(268, 1, 59),\n     WOOD_SPADE(269, 1, 59),\n     WOOD_PICKAXE(270, 1, 59),\n@@ -196,7 +196,7 @@\n     POWERED_MINECART(343, 1),\n     EGG(344, 16),\n     COMPASS(345),\n-    FISHING_ROD(346, 1, 64),\n+    FISHING_ROD(346, 1, 32),\n     WATCH(347),\n     GLOWSTONE_DUST(348),\n     RAW_FISH(349),\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 120,
    "bugNodeStartChar": 3102,
    "bugNodeLength": 22,
    "fixLineNum": 120,
    "fixNodeStartChar": 3102,
    "fixNodeLength": 23,
    "sourceBeforeFix": "IRON_SWORD(267,1,59)",
    "sourceAfterFix": "IRON_SWORD(267,1,250)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "888d20138863d627e56808fdcc6288133a8ad4ff",
    "fixCommitParentSHA1": "2342c0104870354b7dd6ac0de9ad9dda7e71b99c",
    "bugFilePath": "src/main/java/org/bukkit/Material.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/Material.java b/src/main/java/org/bukkit/Material.java\nindex 715c6c6..c29e29e 100644\n--- a/src/main/java/org/bukkit/Material.java\n+++ b/src/main/java/org/bukkit/Material.java\n@@ -117,7 +117,7 @@\n     DIAMOND(264),\n     IRON_INGOT(265),\n     GOLD_INGOT(266),\n-    IRON_SWORD(267, 1, 59),\n+    IRON_SWORD(267, 1, 250),\n     WOOD_SWORD(268, 1, 59),\n     WOOD_SPADE(269, 1, 59),\n     WOOD_PICKAXE(270, 1, 59),\n@@ -196,7 +196,7 @@\n     POWERED_MINECART(343, 1),\n     EGG(344, 16),\n     COMPASS(345),\n-    FISHING_ROD(346, 1, 64),\n+    FISHING_ROD(346, 1, 32),\n     WATCH(347),\n     GLOWSTONE_DUST(348),\n     RAW_FISH(349),\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 199,
    "bugNodeStartChar": 5156,
    "bugNodeLength": 23,
    "fixLineNum": 199,
    "fixNodeStartChar": 5156,
    "fixNodeLength": 23,
    "sourceBeforeFix": "FISHING_ROD(346,1,64)",
    "sourceAfterFix": "FISHING_ROD(346,1,32)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "e5dcfd2f736de77c11d097e4f12209706f475186",
    "fixCommitParentSHA1": "c5eb65b4588ddf86d055954f9076e1ac56dd4f7e",
    "bugFilePath": "src/main/java/org/bukkit/Material.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/Material.java b/src/main/java/org/bukkit/Material.java\nindex 70dc08e..68afd81 100644\n--- a/src/main/java/org/bukkit/Material.java\n+++ b/src/main/java/org/bukkit/Material.java\n@@ -199,7 +199,7 @@\n     SUGAR(353),\n     CAKE(354, 1),\n     BED(355),\n-    DIODE(100),\n+    DIODE(356),\n     GOLD_RECORD(2256, 1),\n     GREEN_RECORD(2257, 1);\n \n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 202,
    "bugNodeStartChar": 4709,
    "bugNodeLength": 10,
    "fixLineNum": 202,
    "fixNodeStartChar": 4709,
    "fixNodeLength": 10,
    "sourceBeforeFix": "DIODE(100)",
    "sourceAfterFix": "DIODE(356)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "c5eb65b4588ddf86d055954f9076e1ac56dd4f7e",
    "fixCommitParentSHA1": "987a5c43bc8231a820f1448555a1d4baee846062",
    "bugFilePath": "src/main/java/org/bukkit/Material.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/Material.java b/src/main/java/org/bukkit/Material.java\nindex 1f3755d..70dc08e 100644\n--- a/src/main/java/org/bukkit/Material.java\n+++ b/src/main/java/org/bukkit/Material.java\n@@ -198,7 +198,7 @@\n     BONE(352),\n     SUGAR(353),\n     CAKE(354, 1),\n-    BED(99),\n+    BED(355),\n     DIODE(100),\n     GOLD_RECORD(2256, 1),\n     GREEN_RECORD(2257, 1);\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 201,
    "bugNodeStartChar": 4695,
    "bugNodeLength": 7,
    "fixLineNum": 201,
    "fixNodeStartChar": 4695,
    "fixNodeLength": 8,
    "sourceBeforeFix": "BED(99)",
    "sourceAfterFix": "BED(355)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "810e352f3d599257e1b36b8118b5b4aabf12d988",
    "fixCommitParentSHA1": "fbc27c08421bb045bdcfc91ea0e6bde8ee781f33",
    "bugFilePath": "src/main/java/org/bukkit/material/Button.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/material/Button.java b/src/main/java/org/bukkit/material/Button.java\nindex c6d1aed..21335f2 100644\n--- a/src/main/java/org/bukkit/material/Button.java\n+++ b/src/main/java/org/bukkit/material/Button.java\n@@ -40,7 +40,7 @@\n      * @return BlockFace attached to\n      */\n     public BlockFace getAttachedFace() {\n-        byte data = (byte) (getData() ^ 0x8);\n+        byte data = (byte) (getData() ^ 0x7);\n \n         switch (data) {\n             case 0x1:\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 43,
    "bugNodeStartChar": 941,
    "bugNodeLength": 15,
    "fixLineNum": 43,
    "fixNodeStartChar": 941,
    "fixNodeLength": 15,
    "sourceBeforeFix": "getData() ^ 0x8",
    "sourceAfterFix": "getData() ^ 0x7"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "810e352f3d599257e1b36b8118b5b4aabf12d988",
    "fixCommitParentSHA1": "fbc27c08421bb045bdcfc91ea0e6bde8ee781f33",
    "bugFilePath": "src/main/java/org/bukkit/material/Lever.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/material/Lever.java b/src/main/java/org/bukkit/material/Lever.java\nindex 737d16c..5d6e7f4 100644\n--- a/src/main/java/org/bukkit/material/Lever.java\n+++ b/src/main/java/org/bukkit/material/Lever.java\n@@ -40,7 +40,7 @@\n      * @return BlockFace attached to\n      */\n     public BlockFace getAttachedFace() {\n-        byte data = (byte) (getData() ^ 0x8);\n+        byte data = (byte) (getData() ^ 0x7);\n \n         switch (data) {\n             case 0x1:\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 43,
    "bugNodeStartChar": 935,
    "bugNodeLength": 15,
    "fixLineNum": 43,
    "fixNodeStartChar": 935,
    "fixNodeLength": 15,
    "sourceBeforeFix": "getData() ^ 0x8",
    "sourceAfterFix": "getData() ^ 0x7"
  },
  {
    "bugType": "CHANGE_UNARY_OPERATOR",
    "fixCommitSHA1": "36a7be3602c37c3d766b21fa7156c09d80a27a26",
    "fixCommitParentSHA1": "ab2191c4829863410411e6bb3a093ca51b7d1c86",
    "bugFilePath": "src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java b/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java\nindex d90d6a5..667fcb3 100644\n--- a/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java\n+++ b/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java\n@@ -144,7 +144,7 @@\n             throw new IllegalArgumentException(\"Plugin is not associated with this PluginLoader\");\n         }\n \n-        if (plugin.isEnabled()) {\n+        if (!plugin.isEnabled()) {\n             JavaPlugin jPlugin = (JavaPlugin)plugin;\n \n             server.getPluginManager().callEvent(new PluginEvent(Event.Type.PLUGIN_ENABLE, plugin));\n@@ -158,7 +158,7 @@\n             throw new IllegalArgumentException(\"Plugin is not associated with this PluginLoader\");\n         }\n \n-        if (!plugin.isEnabled()) {\n+        if (plugin.isEnabled()) {\n             JavaPlugin jPlugin = (JavaPlugin)plugin;\n \n             server.getPluginManager().callEvent(new PluginEvent(Event.Type.PLUGIN_DISABLE, plugin));\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 147,
    "bugNodeStartChar": 5490,
    "bugNodeLength": 18,
    "fixLineNum": 147,
    "fixNodeStartChar": 5490,
    "fixNodeLength": 19,
    "sourceBeforeFix": "plugin.isEnabled()",
    "sourceAfterFix": "!plugin.isEnabled()"
  },
  {
    "bugType": "CHANGE_UNARY_OPERATOR",
    "fixCommitSHA1": "36a7be3602c37c3d766b21fa7156c09d80a27a26",
    "fixCommitParentSHA1": "ab2191c4829863410411e6bb3a093ca51b7d1c86",
    "bugFilePath": "src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java",
    "fixPatch": "diff --git a/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java b/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java\nindex d90d6a5..667fcb3 100644\n--- a/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java\n+++ b/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java\n@@ -144,7 +144,7 @@\n             throw new IllegalArgumentException(\"Plugin is not associated with this PluginLoader\");\n         }\n \n-        if (plugin.isEnabled()) {\n+        if (!plugin.isEnabled()) {\n             JavaPlugin jPlugin = (JavaPlugin)plugin;\n \n             server.getPluginManager().callEvent(new PluginEvent(Event.Type.PLUGIN_ENABLE, plugin));\n@@ -158,7 +158,7 @@\n             throw new IllegalArgumentException(\"Plugin is not associated with this PluginLoader\");\n         }\n \n-        if (!plugin.isEnabled()) {\n+        if (plugin.isEnabled()) {\n             JavaPlugin jPlugin = (JavaPlugin)plugin;\n \n             server.getPluginManager().callEvent(new PluginEvent(Event.Type.PLUGIN_DISABLE, plugin));\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 161,
    "bugNodeStartChar": 5950,
    "bugNodeLength": 19,
    "fixLineNum": 161,
    "fixNodeStartChar": 5950,
    "fixNodeLength": 18,
    "sourceBeforeFix": "!plugin.isEnabled()",
    "sourceAfterFix": "plugin.isEnabled()"
  },
  {
    "bugType": "CHANGE_OPERAND",
    "fixCommitSHA1": "3f78497752cf1a23f56bb0a018b50f3db9d66638",
    "fixCommitParentSHA1": "0a9d59291f5f098177c6cbaa2e507c3ee8e31bf8",
    "bugFilePath": "src/org/bukkit/plugin/SimplePluginManager.java",
    "fixPatch": "diff --git a/src/org/bukkit/plugin/SimplePluginManager.java b/src/org/bukkit/plugin/SimplePluginManager.java\nindex cc696f6..eef3f8e 100644\n--- a/src/org/bukkit/plugin/SimplePluginManager.java\n+++ b/src/org/bukkit/plugin/SimplePluginManager.java\n@@ -194,7 +194,7 @@\n         List<RegisteredListener> eventListeners = listeners.get(type);\n         int position = 0;\n \n-        if (listeners != null) {\n+        if (eventListeners != null) {\n             for (RegisteredListener registration : eventListeners) {\n                 if (registration.getPriority().compareTo(priority) < 0) {\n                     break;\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 197,
    "bugNodeStartChar": 6667,
    "bugNodeLength": 17,
    "fixLineNum": 197,
    "fixNodeStartChar": 6667,
    "fixNodeLength": 22,
    "sourceBeforeFix": "listeners != null",
    "sourceAfterFix": "eventListeners != null"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "3f78497752cf1a23f56bb0a018b50f3db9d66638",
    "fixCommitParentSHA1": "0a9d59291f5f098177c6cbaa2e507c3ee8e31bf8",
    "bugFilePath": "src/org/bukkit/plugin/SimplePluginManager.java",
    "fixPatch": "diff --git a/src/org/bukkit/plugin/SimplePluginManager.java b/src/org/bukkit/plugin/SimplePluginManager.java\nindex cc696f6..eef3f8e 100644\n--- a/src/org/bukkit/plugin/SimplePluginManager.java\n+++ b/src/org/bukkit/plugin/SimplePluginManager.java\n@@ -194,7 +194,7 @@\n         List<RegisteredListener> eventListeners = listeners.get(type);\n         int position = 0;\n \n-        if (listeners != null) {\n+        if (eventListeners != null) {\n             for (RegisteredListener registration : eventListeners) {\n                 if (registration.getPriority().compareTo(priority) < 0) {\n                     break;\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 197,
    "bugNodeStartChar": 6667,
    "bugNodeLength": 17,
    "fixLineNum": 197,
    "fixNodeStartChar": 6667,
    "fixNodeLength": 22,
    "sourceBeforeFix": "listeners != null",
    "sourceAfterFix": "eventListeners != null"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "b5339d83f4936a28dcb59f20aac6e3ec2917dc4f",
    "fixCommitParentSHA1": "87b8e0823058be4e5ca58056988ffd863aa20426",
    "bugFilePath": "src/org/bukkit/plugin/java/JavaPluginLoader.java",
    "fixPatch": "diff --git a/src/org/bukkit/plugin/java/JavaPluginLoader.java b/src/org/bukkit/plugin/java/JavaPluginLoader.java\nindex 3f17112..a33e61f 100644\n--- a/src/org/bukkit/plugin/java/JavaPluginLoader.java\n+++ b/src/org/bukkit/plugin/java/JavaPluginLoader.java\n@@ -82,10 +82,10 @@\n             PlayerListener trueListener = (PlayerListener)listener;\n \n             switch (event.getType()) {\n-                case JOIN:\n+                case PLAYER_JOIN:\n                     trueListener.onPlayerJoin((PlayerEvent)event);\n                     break;\n-                case QUIT:\n+                case PLAYER_QUIT:\n                     trueListener.onPlayerQuit((PlayerEvent)event);\n                     break;\n             }\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 85,
    "bugNodeStartChar": 2942,
    "bugNodeLength": 10,
    "fixLineNum": 85,
    "fixNodeStartChar": 2942,
    "fixNodeLength": 17,
    "sourceBeforeFix": "case JOIN: ",
    "sourceAfterFix": "case PLAYER_JOIN: "
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "b5339d83f4936a28dcb59f20aac6e3ec2917dc4f",
    "fixCommitParentSHA1": "87b8e0823058be4e5ca58056988ffd863aa20426",
    "bugFilePath": "src/org/bukkit/plugin/java/JavaPluginLoader.java",
    "fixPatch": "diff --git a/src/org/bukkit/plugin/java/JavaPluginLoader.java b/src/org/bukkit/plugin/java/JavaPluginLoader.java\nindex 3f17112..a33e61f 100644\n--- a/src/org/bukkit/plugin/java/JavaPluginLoader.java\n+++ b/src/org/bukkit/plugin/java/JavaPluginLoader.java\n@@ -82,10 +82,10 @@\n             PlayerListener trueListener = (PlayerListener)listener;\n \n             switch (event.getType()) {\n-                case JOIN:\n+                case PLAYER_JOIN:\n                     trueListener.onPlayerJoin((PlayerEvent)event);\n                     break;\n-                case QUIT:\n+                case PLAYER_QUIT:\n                     trueListener.onPlayerQuit((PlayerEvent)event);\n                     break;\n             }\n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 88,
    "bugNodeStartChar": 3063,
    "bugNodeLength": 10,
    "fixLineNum": 88,
    "fixNodeStartChar": 3063,
    "fixNodeLength": 17,
    "sourceBeforeFix": "case QUIT: ",
    "sourceAfterFix": "case PLAYER_QUIT: "
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "3fdb366559bc846f2dad1965dab940dfa49b2801",
    "fixCommitParentSHA1": "8be2f2258010a9b5126ac9c9db22b799d7d6f7e5",
    "bugFilePath": "src/org/bukkit/plugin/java/JavaPluginLoader.java",
    "fixPatch": "diff --git a/src/org/bukkit/plugin/java/JavaPluginLoader.java b/src/org/bukkit/plugin/java/JavaPluginLoader.java\nindex 085e96f..bd6d0f8 100644\n--- a/src/org/bukkit/plugin/java/JavaPluginLoader.java\n+++ b/src/org/bukkit/plugin/java/JavaPluginLoader.java\n@@ -41,7 +41,7 @@\n             Constructor<? extends JavaPlugin> constructor = plugin.getConstructor(PluginLoader.class, Server.class, PluginDescriptionFile.class, File.class, ClassLoader.class);\n \n             result = constructor.newInstance(this, server, description, file, loader);\n-        } catch (Exception ex) {\n+        } catch (Throwable ex) {\n             throw new InvalidPluginException(ex);\n         }\n \n",
    "projectName": "Bukkit.Bukkit",
    "bugLineNum": 44,
    "bugNodeStartChar": 1751,
    "bugNodeLength": 12,
    "fixLineNum": 44,
    "fixNodeStartChar": 1751,
    "fixNodeLength": 12,
    "sourceBeforeFix": "Exception ex",
    "sourceAfterFix": "Throwable ex"
  }
]