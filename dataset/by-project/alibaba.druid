[{"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "41bf1b7459905a8201b5d60bb6545fbbb502d59d", "fixCommitParentSHA1": "cc2c98d3eef67ed523fc13920d14e4773877a67a", "bugFilePath": "src/main/java/com/alibaba/druid/pool/DruidDataSource.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\nindex b26f0f9..3831a40 100644\n--- a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n+++ b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n@@ -3401,7 +3401,7 @@\n             map.put(\"ActiveCount\", this.getActiveCount());\n             map.put(\"PoolingCount\", this.getPoolingCount());\n             map.put(\"LockQueueLength\", this.getLockQueueLength());\n-            map.put(\"WaitThreadCount\", this.getNotEmptyWaitThreadPeak());\n+            map.put(\"WaitThreadCount\", this.getNotEmptyWaitThreadCount());\n \n             // 10 - 14\n             map.put(\"InitialSize\", this.getInitialSize());\n", "projectName": "alibaba.druid", "bugLineNum": 3404, "bugNodeStartChar": 118619, "bugNodeLength": 32, "fixLineNum": 3404, "fixNodeStartChar": 118619, "fixNodeLength": 33, "sourceBeforeFix": "this.getNotEmptyWaitThreadPeak()", "sourceAfterFix": "this.getNotEmptyWaitThreadCount()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "41bf1b7459905a8201b5d60bb6545fbbb502d59d", "fixCommitParentSHA1": "cc2c98d3eef67ed523fc13920d14e4773877a67a", "bugFilePath": "src/main/java/com/alibaba/druid/pool/DruidDataSource.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\nindex b26f0f9..3831a40 100644\n--- a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n+++ b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n@@ -3401,7 +3401,7 @@\n             map.put(\"ActiveCount\", this.getActiveCount());\n             map.put(\"PoolingCount\", this.getPoolingCount());\n             map.put(\"LockQueueLength\", this.getLockQueueLength());\n-            map.put(\"WaitThreadCount\", this.getNotEmptyWaitThreadPeak());\n+            map.put(\"WaitThreadCount\", this.getNotEmptyWaitThreadCount());\n \n             // 10 - 14\n             map.put(\"InitialSize\", this.getInitialSize());\n", "projectName": "alibaba.druid", "bugLineNum": 3404, "bugNodeStartChar": 118619, "bugNodeLength": 32, "fixLineNum": 3404, "fixNodeStartChar": 118619, "fixNodeLength": 33, "sourceBeforeFix": "this.getNotEmptyWaitThreadPeak()", "sourceAfterFix": "this.getNotEmptyWaitThreadCount()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "54c45bf012b26fd82934b5c5cdda29dabf98076e", "fixCommitParentSHA1": "c8ffb825084ae67ad327bbe46cf596c7c422aa1b", "bugFilePath": "src/main/java/com/alibaba/druid/pool/DruidDataSource.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\nindex 862872f..4cda151 100644\n--- a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n+++ b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n@@ -3210,7 +3210,7 @@\n             map.put(\"ActiveCount\", this.getActiveCount());\n             map.put(\"PoolingCount\", this.getPoolingCount());\n             map.put(\"LockQueueLength\", this.getLockQueueLength());\n-            map.put(\"WaitThreadCount\", this.getNotEmptyWaitThreadPeak());\n+            map.put(\"WaitThreadCount\", this.getNotEmptyWaitThreadCount());\n \n             // 10 - 14\n             map.put(\"InitialSize\", this.getInitialSize());\n", "projectName": "alibaba.druid", "bugLineNum": 3213, "bugNodeStartChar": 111913, "bugNodeLength": 32, "fixLineNum": 3213, "fixNodeStartChar": 111913, "fixNodeLength": 33, "sourceBeforeFix": "this.getNotEmptyWaitThreadPeak()", "sourceAfterFix": "this.getNotEmptyWaitThreadCount()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "54c45bf012b26fd82934b5c5cdda29dabf98076e", "fixCommitParentSHA1": "c8ffb825084ae67ad327bbe46cf596c7c422aa1b", "bugFilePath": "src/main/java/com/alibaba/druid/pool/DruidDataSource.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\nindex 862872f..4cda151 100644\n--- a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n+++ b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n@@ -3210,7 +3210,7 @@\n             map.put(\"ActiveCount\", this.getActiveCount());\n             map.put(\"PoolingCount\", this.getPoolingCount());\n             map.put(\"LockQueueLength\", this.getLockQueueLength());\n-            map.put(\"WaitThreadCount\", this.getNotEmptyWaitThreadPeak());\n+            map.put(\"WaitThreadCount\", this.getNotEmptyWaitThreadCount());\n \n             // 10 - 14\n             map.put(\"InitialSize\", this.getInitialSize());\n", "projectName": "alibaba.druid", "bugLineNum": 3213, "bugNodeStartChar": 111913, "bugNodeLength": 32, "fixLineNum": 3213, "fixNodeStartChar": 111913, "fixNodeLength": 33, "sourceBeforeFix": "this.getNotEmptyWaitThreadPeak()", "sourceAfterFix": "this.getNotEmptyWaitThreadCount()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "636c7667e60a14cc18f4735958fd766922486ae6", "fixCommitParentSHA1": "6ce53e3203ffe9a0c9050dd69a27b1312a035e6d", "bugFilePath": "src/main/java/com/alibaba/druid/sql/parser/Lexer.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/sql/parser/Lexer.java b/src/main/java/com/alibaba/druid/sql/parser/Lexer.java\nindex 4aba23d..0d3ccdb 100644\n--- a/src/main/java/com/alibaba/druid/sql/parser/Lexer.java\n+++ b/src/main/java/com/alibaba/druid/sql/parser/Lexer.java\n@@ -270,7 +270,7 @@\n         }\n \n         this.posLine = line;\n-        this.posColumn = posColumn;\n+        this.posColumn = column;\n \n         StringBuilder buf = new StringBuilder();\n         buf\n", "projectName": "alibaba.druid", "bugLineNum": 273, "bugNodeStartChar": 7615, "bugNodeLength": 26, "fixLineNum": 273, "fixNodeStartChar": 7615, "fixNodeLength": 23, "sourceBeforeFix": "this.posColumn=posColumn", "sourceAfterFix": "this.posColumn=column"}, {"bugType": "SWAP_BOOLEAN_LITERAL", "fixCommitSHA1": "14c151ba066a8911eebc76778962fc04f1b400c8", "fixCommitParentSHA1": "a40071a3cb5e50ab2f8b8efb3e4cf5e228c10dd3", "bugFilePath": "src/test/java/com/alibaba/druid/bvt/pool/InitExceptionThrowTest.java", "fixPatch": "diff --git a/src/test/java/com/alibaba/druid/bvt/pool/InitExceptionThrowTest.java b/src/test/java/com/alibaba/druid/bvt/pool/InitExceptionThrowTest.java\nindex b5f9d0a..1629fdd 100644\n--- a/src/test/java/com/alibaba/druid/bvt/pool/InitExceptionThrowTest.java\n+++ b/src/test/java/com/alibaba/druid/bvt/pool/InitExceptionThrowTest.java\n@@ -14,7 +14,7 @@\n     private int connectCount = 0;\n \n     protected void setUp() throws Exception {\n-        dataSource.setInitExceptionThrow(true);\n+        dataSource.setInitExceptionThrow(false);\n         dataSource.setUrl(\"jdbc:mock:xxx\");\n         dataSource.setDriver(new MockDriver() {\n             public Connection connect(String url, Properties info) throws SQLException {\n", "projectName": "alibaba.druid", "bugLineNum": 17, "bugNodeStartChar": 478, "bugNodeLength": 38, "fixLineNum": 17, "fixNodeStartChar": 478, "fixNodeLength": 39, "sourceBeforeFix": "dataSource.setInitExceptionThrow(true)", "sourceAfterFix": "dataSource.setInitExceptionThrow(false)"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "a4045eb6bd919f79b17ea9bf778b975e74e777e6", "fixCommitParentSHA1": "a2dd353b0d73bfb115f31800f4731e3536b19e19", "bugFilePath": "src/main/java/com/alibaba/druid/stat/TableStat.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/stat/TableStat.java b/src/main/java/com/alibaba/druid/stat/TableStat.java\nindex 190a8ad..97229f1 100644\n--- a/src/main/java/com/alibaba/druid/stat/TableStat.java\n+++ b/src/main/java/com/alibaba/druid/stat/TableStat.java\n@@ -453,7 +453,7 @@\n \r\n         public String getFullName() {\r\n             if (fullName == null) {\r\n-                if (table != null) {\r\n+                if (table == null) {\r\n                     fullName = name;\r\n                 } else {\r\n                     fullName = table + '.' + name;\r\n", "projectName": "alibaba.druid", "bugLineNum": 456, "bugNodeStartChar": 12602, "bugNodeLength": 13, "fixLineNum": 456, "fixNodeStartChar": 12147, "fixNodeLength": 13, "sourceBeforeFix": "table != null", "sourceAfterFix": "table == null"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "39ad7f7a0c808f4a36310d078a5a2c11ee884612", "fixCommitParentSHA1": "a2dd353b0d73bfb115f31800f4731e3536b19e19", "bugFilePath": "src/main/java/com/alibaba/druid/stat/TableStat.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/stat/TableStat.java b/src/main/java/com/alibaba/druid/stat/TableStat.java\nindex 190a8ad..97229f1 100644\n--- a/src/main/java/com/alibaba/druid/stat/TableStat.java\n+++ b/src/main/java/com/alibaba/druid/stat/TableStat.java\n@@ -453,7 +453,7 @@\n \r\n         public String getFullName() {\r\n             if (fullName == null) {\r\n-                if (table != null) {\r\n+                if (table == null) {\r\n                     fullName = name;\r\n                 } else {\r\n                     fullName = table + '.' + name;\r\n", "projectName": "alibaba.druid", "bugLineNum": 456, "bugNodeStartChar": 12602, "bugNodeLength": 13, "fixLineNum": 456, "fixNodeStartChar": 12147, "fixNodeLength": 13, "sourceBeforeFix": "table != null", "sourceAfterFix": "table == null"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "7ce110d5b6334d4e13fca74bae58f0522afc9fed", "fixCommitParentSHA1": "cb23e294caba222311b4f14c145da75b6c2ec59c", "bugFilePath": "src/test/java/com/alibaba/druid/bvt/sql/postgresql/select/PGSelectTest1.java", "fixPatch": "diff --git a/src/test/java/com/alibaba/druid/bvt/sql/postgresql/select/PGSelectTest1.java b/src/test/java/com/alibaba/druid/bvt/sql/postgresql/select/PGSelectTest1.java\nindex 5a491de..f328f44 100644\n--- a/src/test/java/com/alibaba/druid/bvt/sql/postgresql/select/PGSelectTest1.java\n+++ b/src/test/java/com/alibaba/druid/bvt/sql/postgresql/select/PGSelectTest1.java\n@@ -47,7 +47,7 @@\n //        System.out.println(\"coditions : \" + visitor.getConditions());\n \n         assertEquals(2, visitor.getColumns().size());\n-        assertEquals(4, visitor.getTables().size());\n+        assertEquals(2, visitor.getTables().size());\n     }\n     \n     public void test_1() throws Exception {\n", "projectName": "alibaba.druid", "bugLineNum": 50, "bugNodeStartChar": 1945, "bugNodeLength": 43, "fixLineNum": 50, "fixNodeStartChar": 1945, "fixNodeLength": 43, "sourceBeforeFix": "assertEquals(4,visitor.getTables().size())", "sourceAfterFix": "assertEquals(2,visitor.getTables().size())"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "f678fbc96b5c2efeb7c4b93a4d5cfd62b053029b", "fixCommitParentSHA1": "569c50977a40475db70f9a9f73dd8510ca8ebe4e", "bugFilePath": "src/test/java/com/alibaba/druid/bvt/sql/db2/DB2InsertTest_1.java", "fixPatch": "diff --git a/src/test/java/com/alibaba/druid/bvt/sql/db2/DB2InsertTest_1.java b/src/test/java/com/alibaba/druid/bvt/sql/db2/DB2InsertTest_1.java\nindex 6648239..7743aa5 100644\n--- a/src/test/java/com/alibaba/druid/bvt/sql/db2/DB2InsertTest_1.java\n+++ b/src/test/java/com/alibaba/druid/bvt/sql/db2/DB2InsertTest_1.java\n@@ -93,7 +93,7 @@\n \n         Assert.assertEquals(2, visitor.getTables().size());\n         Assert.assertEquals(11, visitor.getColumns().size());\n-        Assert.assertEquals(3, visitor.getConditions().size());\n+        Assert.assertEquals(4, visitor.getConditions().size());\n \n         Assert.assertTrue(visitor.getTables().containsKey(new TableStat.Name(\"MK.KPI_AREA_SORT_FACT_LATN_ID_MID\")));\n \n", "projectName": "alibaba.druid", "bugLineNum": 96, "bugNodeStartChar": 4299, "bugNodeLength": 54, "fixLineNum": 96, "fixNodeStartChar": 4299, "fixNodeLength": 54, "sourceBeforeFix": "Assert.assertEquals(3,visitor.getConditions().size())", "sourceAfterFix": "Assert.assertEquals(4,visitor.getConditions().size())"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "f678fbc96b5c2efeb7c4b93a4d5cfd62b053029b", "fixCommitParentSHA1": "569c50977a40475db70f9a9f73dd8510ca8ebe4e", "bugFilePath": "src/test/java/com/alibaba/druid/bvt/sql/db2/DB2SelectTest_26.java", "fixPatch": "diff --git a/src/test/java/com/alibaba/druid/bvt/sql/db2/DB2SelectTest_26.java b/src/test/java/com/alibaba/druid/bvt/sql/db2/DB2SelectTest_26.java\nindex a82e382..74ab58d 100644\n--- a/src/test/java/com/alibaba/druid/bvt/sql/db2/DB2SelectTest_26.java\n+++ b/src/test/java/com/alibaba/druid/bvt/sql/db2/DB2SelectTest_26.java\n@@ -77,7 +77,7 @@\n \n         Assert.assertEquals(1, visitor.getTables().size());\n         Assert.assertEquals(5, visitor.getColumns().size());\n-        Assert.assertEquals(2, visitor.getConditions().size());\n+        Assert.assertEquals(3, visitor.getConditions().size());\n \n         Assert.assertTrue(visitor.getTables().containsKey(new TableStat.Name(\"MK.M_BROAD_BAND_USER_FACT\")));\n \n", "projectName": "alibaba.druid", "bugLineNum": 80, "bugNodeStartChar": 3655, "bugNodeLength": 54, "fixLineNum": 80, "fixNodeStartChar": 3655, "fixNodeLength": 54, "sourceBeforeFix": "Assert.assertEquals(2,visitor.getConditions().size())", "sourceAfterFix": "Assert.assertEquals(3,visitor.getConditions().size())"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "f678fbc96b5c2efeb7c4b93a4d5cfd62b053029b", "fixCommitParentSHA1": "569c50977a40475db70f9a9f73dd8510ca8ebe4e", "bugFilePath": "src/test/java/com/alibaba/druid/bvt/sql/oracle/select/OracleSelectTest101.java", "fixPatch": "diff --git a/src/test/java/com/alibaba/druid/bvt/sql/oracle/select/OracleSelectTest101.java b/src/test/java/com/alibaba/druid/bvt/sql/oracle/select/OracleSelectTest101.java\nindex 538b79e..c6f0345 100644\n--- a/src/test/java/com/alibaba/druid/bvt/sql/oracle/select/OracleSelectTest101.java\n+++ b/src/test/java/com/alibaba/druid/bvt/sql/oracle/select/OracleSelectTest101.java\n@@ -145,7 +145,7 @@\n \n         assertEquals(5, visitor.getTables().size());\n         assertEquals(24, visitor.getColumns().size());\n-        assertEquals(11, visitor.getConditions().size());\n+        assertEquals(12, visitor.getConditions().size());\n         assertEquals(4, visitor.getRelationships().size());\n         assertEquals(1, visitor.getOrderByColumns().size());\n     }\n", "projectName": "alibaba.druid", "bugLineNum": 148, "bugNodeStartChar": 7277, "bugNodeLength": 48, "fixLineNum": 148, "fixNodeStartChar": 7277, "fixNodeLength": 48, "sourceBeforeFix": "assertEquals(11,visitor.getConditions().size())", "sourceAfterFix": "assertEquals(12,visitor.getConditions().size())"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "798beed7a84ec00cfb0835cf41b7988e27898e22", "fixCommitParentSHA1": "3445a3a3f2491f0d82f375578702c80566659097", "bugFilePath": "src/main/java/com/alibaba/druid/sql/parser/SQLExprParser.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/sql/parser/SQLExprParser.java b/src/main/java/com/alibaba/druid/sql/parser/SQLExprParser.java\nindex c0dd3d0..f599ac3 100644\n--- a/src/main/java/com/alibaba/druid/sql/parser/SQLExprParser.java\n+++ b/src/main/java/com/alibaba/druid/sql/parser/SQLExprParser.java\n@@ -2956,7 +2956,7 @@\n         }\n \n         SQLSelectItem selectItem = new SQLSelectItem(expr, alias, connectByRoot);\n-        if (lexer.token == Token.HINT) {\n+        if (lexer.token == Token.HINT && !lexer.isEnabled(SQLParserFeature.StrictForWall)) {\n             String comment = \"/*\" + lexer.stringVal() + \"*/\";\n             selectItem.addAfterComment(comment);\n             lexer.nextToken();\n", "projectName": "alibaba.druid", "bugLineNum": 2959, "bugNodeStartChar": 103948, "bugNodeLength": 25, "fixLineNum": 2959, "fixNodeStartChar": 103948, "fixNodeLength": 77, "sourceBeforeFix": "lexer.token == Token.HINT", "sourceAfterFix": "lexer.token == Token.HINT && !lexer.isEnabled(SQLParserFeature.StrictForWall)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "798beed7a84ec00cfb0835cf41b7988e27898e22", "fixCommitParentSHA1": "3445a3a3f2491f0d82f375578702c80566659097", "bugFilePath": "src/main/java/com/alibaba/druid/wall/spi/MySqlWallProvider.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/wall/spi/MySqlWallProvider.java b/src/main/java/com/alibaba/druid/wall/spi/MySqlWallProvider.java\nindex b2e8724..4d1cc9f 100644\n--- a/src/main/java/com/alibaba/druid/wall/spi/MySqlWallProvider.java\n+++ b/src/main/java/com/alibaba/druid/wall/spi/MySqlWallProvider.java\n@@ -39,7 +39,9 @@\n \r\n     @Override\r\n     public SQLStatementParser createParser(String sql) {\r\n-        return new MySqlStatementParser(sql, SQLParserFeature.EnableSQLBinaryOpExprGroup\r\n+        return new MySqlStatementParser(sql\r\n+                , SQLParserFeature.EnableSQLBinaryOpExprGroup\r\n+                , SQLParserFeature.StrictForWall\r\n         );\r\n     }\r\n \r\n", "projectName": "alibaba.druid", "bugLineNum": 42, "bugNodeStartChar": 1604, "bugNodeLength": 84, "fixLineNum": 42, "fixNodeStartChar": 1563, "fixNodeLength": 149, "sourceBeforeFix": "new MySqlStatementParser(sql,SQLParserFeature.EnableSQLBinaryOpExprGroup)", "sourceAfterFix": "new MySqlStatementParser(sql,SQLParserFeature.EnableSQLBinaryOpExprGroup,SQLParserFeature.StrictForWall)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "09524a8829309cecf1f5446395451ccd012a5c8d", "fixCommitParentSHA1": "9990e07aaa573ddbb95d276dd7212d5e82c34364", "bugFilePath": "src/main/java/com/alibaba/druid/VERSION.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/VERSION.java b/src/main/java/com/alibaba/druid/VERSION.java\nindex 0588114..d68f267 100644\n--- a/src/main/java/com/alibaba/druid/VERSION.java\n+++ b/src/main/java/com/alibaba/druid/VERSION.java\n@@ -19,7 +19,7 @@\n \n     public final static int MajorVersion    = 1;\n     public final static int MinorVersion    = 1;\n-    public final static int RevisionVersion = 2;\n+    public final static int RevisionVersion = 3;\n \n     public static String getVersionNumber() {\n         return VERSION.MajorVersion + \".\" + VERSION.MinorVersion + \".\" + VERSION.RevisionVersion;\n", "projectName": "alibaba.druid", "bugLineNum": 22, "bugNodeStartChar": 800, "bugNodeLength": 19, "fixLineNum": 22, "fixNodeStartChar": 800, "fixNodeLength": 19, "sourceBeforeFix": "RevisionVersion=2", "sourceAfterFix": "RevisionVersion=3"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "1356e1616848043c79acf8864e00d7787d57e6a3", "fixCommitParentSHA1": "2da211287f532dc7ba4bf5c24324d64ace4abd70", "bugFilePath": "src/main/java/com/alibaba/druid/pool/DruidDataSource.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\nindex fc770ac..256f6f7 100644\n--- a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n+++ b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n@@ -139,10 +139,10 @@\n     private DruidConnectionHolder[]          keepAliveConnections;\n \n     // threads\n-    private ScheduledFuture<?>               destroySchedulerFuture;\n+    private volatile ScheduledFuture<?>      destroySchedulerFuture;\n     private DestroyTask                      destroyTask;\n \n-    private Future<?>                        createSchedulerFuture;\n+    private volatile Future<?>               createSchedulerFuture;\n \n     private CreateConnectionThread           createConnectionThread;\n     private DestroyConnectionThread          destroyConnectionThread;\n", "projectName": "alibaba.druid", "bugLineNum": 142, "bugNodeStartChar": 6352, "bugNodeLength": 64, "fixLineNum": 142, "fixNodeStartChar": 6352, "fixNodeLength": 64, "sourceBeforeFix": "2", "sourceAfterFix": "66"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "1356e1616848043c79acf8864e00d7787d57e6a3", "fixCommitParentSHA1": "2da211287f532dc7ba4bf5c24324d64ace4abd70", "bugFilePath": "src/main/java/com/alibaba/druid/pool/DruidDataSource.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\nindex fc770ac..256f6f7 100644\n--- a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n+++ b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n@@ -139,10 +139,10 @@\n     private DruidConnectionHolder[]          keepAliveConnections;\n \n     // threads\n-    private ScheduledFuture<?>               destroySchedulerFuture;\n+    private volatile ScheduledFuture<?>      destroySchedulerFuture;\n     private DestroyTask                      destroyTask;\n \n-    private Future<?>                        createSchedulerFuture;\n+    private volatile Future<?>               createSchedulerFuture;\n \n     private CreateConnectionThread           createConnectionThread;\n     private DestroyConnectionThread          destroyConnectionThread;\n", "projectName": "alibaba.druid", "bugLineNum": 145, "bugNodeStartChar": 6480, "bugNodeLength": 63, "fixLineNum": 145, "fixNodeStartChar": 6480, "fixNodeLength": 63, "sourceBeforeFix": "2", "sourceAfterFix": "66"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "7b998a45ff6bd91e340027dc7d51c65f932e441b", "fixCommitParentSHA1": "30a79c41ab2fa3fe2d1d64b4f0773353aac59d60", "bugFilePath": "src/main/java/com/alibaba/druid/sql/visitor/SchemaStatVisitor.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/sql/visitor/SchemaStatVisitor.java b/src/main/java/com/alibaba/druid/sql/visitor/SchemaStatVisitor.java\nindex fdb88d4..bc06fee 100644\n--- a/src/main/java/com/alibaba/druid/sql/visitor/SchemaStatVisitor.java\n+++ b/src/main/java/com/alibaba/druid/sql/visitor/SchemaStatVisitor.java\n@@ -967,7 +967,7 @@\n             return false;\r\n         }\r\n \r\n-        if (\"LEVEL\".equalsIgnoreCase(ident)) {\r\n+        if (\"LEVEL\".equalsIgnoreCase(ident) || \"CONNECT_BY_ISCYCLE\".equalsIgnoreCase(ident)) {\r\n             SQLObject parent = x.getParent();\r\n             if (parent instanceof SQLSelectItem) {\r\n                 SQLObject parent2 = parent.getParent();\r\n", "projectName": "alibaba.druid", "bugLineNum": 970, "bugNodeStartChar": 32070, "bugNodeLength": 31, "fixLineNum": 970, "fixNodeStartChar": 31101, "fixNodeLength": 79, "sourceBeforeFix": "\"LEVEL\".equalsIgnoreCase(ident)", "sourceAfterFix": "\"LEVEL\".equalsIgnoreCase(ident) || \"CONNECT_BY_ISCYCLE\".equalsIgnoreCase(ident)"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "a18e8b3a4a095ccb7c02dec0f93510a2bc4a3f27", "fixCommitParentSHA1": "23d2bf5fe7821b00999cae8dfa6e75ecc7f43cd7", "bugFilePath": "src/main/java/com/alibaba/druid/sql/parser/Lexer.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/sql/parser/Lexer.java b/src/main/java/com/alibaba/druid/sql/parser/Lexer.java\nindex 531b4ba..fbbb6d3 100644\n--- a/src/main/java/com/alibaba/druid/sql/parser/Lexer.java\n+++ b/src/main/java/com/alibaba/druid/sql/parser/Lexer.java\n@@ -450,13 +450,13 @@\n                     return;\n                 case '?':\n                     scanChar();\n-                    if (ch == '?') {\n+                    if (ch == '?' && JdbcConstants.POSTGRESQL.equals(dbType)) {\n                         scanChar();\n                         token = Token.QUESQUES;\n-                    } else if (ch == '|') {\n+                    } else if (ch == '|' && JdbcConstants.POSTGRESQL.equals(dbType)) {\n                         scanChar();\n                         token = Token.QUESBAR;\n-                    } else if (ch == '&') {\n+                    } else if (ch == '&' && JdbcConstants.POSTGRESQL.equals(dbType)) {\n                         scanChar();\n                         token = Token.QUESAMP;\n                     } else {\n", "projectName": "alibaba.druid", "bugLineNum": 453, "bugNodeStartChar": 12153, "bugNodeLength": 9, "fixLineNum": 453, "fixNodeStartChar": 12153, "fixNodeLength": 52, "sourceBeforeFix": "ch == '?'", "sourceAfterFix": "ch == '?' && JdbcConstants.POSTGRESQL.equals(dbType)"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "a18e8b3a4a095ccb7c02dec0f93510a2bc4a3f27", "fixCommitParentSHA1": "23d2bf5fe7821b00999cae8dfa6e75ecc7f43cd7", "bugFilePath": "src/main/java/com/alibaba/druid/sql/parser/Lexer.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/sql/parser/Lexer.java b/src/main/java/com/alibaba/druid/sql/parser/Lexer.java\nindex 531b4ba..fbbb6d3 100644\n--- a/src/main/java/com/alibaba/druid/sql/parser/Lexer.java\n+++ b/src/main/java/com/alibaba/druid/sql/parser/Lexer.java\n@@ -450,13 +450,13 @@\n                     return;\n                 case '?':\n                     scanChar();\n-                    if (ch == '?') {\n+                    if (ch == '?' && JdbcConstants.POSTGRESQL.equals(dbType)) {\n                         scanChar();\n                         token = Token.QUESQUES;\n-                    } else if (ch == '|') {\n+                    } else if (ch == '|' && JdbcConstants.POSTGRESQL.equals(dbType)) {\n                         scanChar();\n                         token = Token.QUESBAR;\n-                    } else if (ch == '&') {\n+                    } else if (ch == '&' && JdbcConstants.POSTGRESQL.equals(dbType)) {\n                         scanChar();\n                         token = Token.QUESAMP;\n                     } else {\n", "projectName": "alibaba.druid", "bugLineNum": 456, "bugNodeStartChar": 12281, "bugNodeLength": 9, "fixLineNum": 456, "fixNodeStartChar": 12281, "fixNodeLength": 52, "sourceBeforeFix": "ch == '|'", "sourceAfterFix": "ch == '|' && JdbcConstants.POSTGRESQL.equals(dbType)"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "a18e8b3a4a095ccb7c02dec0f93510a2bc4a3f27", "fixCommitParentSHA1": "23d2bf5fe7821b00999cae8dfa6e75ecc7f43cd7", "bugFilePath": "src/main/java/com/alibaba/druid/sql/parser/Lexer.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/sql/parser/Lexer.java b/src/main/java/com/alibaba/druid/sql/parser/Lexer.java\nindex 531b4ba..fbbb6d3 100644\n--- a/src/main/java/com/alibaba/druid/sql/parser/Lexer.java\n+++ b/src/main/java/com/alibaba/druid/sql/parser/Lexer.java\n@@ -450,13 +450,13 @@\n                     return;\n                 case '?':\n                     scanChar();\n-                    if (ch == '?') {\n+                    if (ch == '?' && JdbcConstants.POSTGRESQL.equals(dbType)) {\n                         scanChar();\n                         token = Token.QUESQUES;\n-                    } else if (ch == '|') {\n+                    } else if (ch == '|' && JdbcConstants.POSTGRESQL.equals(dbType)) {\n                         scanChar();\n                         token = Token.QUESBAR;\n-                    } else if (ch == '&') {\n+                    } else if (ch == '&' && JdbcConstants.POSTGRESQL.equals(dbType)) {\n                         scanChar();\n                         token = Token.QUESAMP;\n                     } else {\n", "projectName": "alibaba.druid", "bugLineNum": 459, "bugNodeStartChar": 12408, "bugNodeLength": 9, "fixLineNum": 459, "fixNodeStartChar": 12408, "fixNodeLength": 52, "sourceBeforeFix": "ch == '&'", "sourceAfterFix": "ch == '&' && JdbcConstants.POSTGRESQL.equals(dbType)"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "c9e9aabd8148d596fe4b1bcb00691d819fc4eff5", "fixCommitParentSHA1": "103ee3e1a3c446590d0bd61e8e29f1d0d643b7e4", "bugFilePath": "src/main/java/com/alibaba/druid/support/http/WebStatFilter.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/support/http/WebStatFilter.java b/src/main/java/com/alibaba/druid/support/http/WebStatFilter.java\nindex b50dca3..0746a42 100644\n--- a/src/main/java/com/alibaba/druid/support/http/WebStatFilter.java\n+++ b/src/main/java/com/alibaba/druid/support/http/WebStatFilter.java\n@@ -185,7 +185,7 @@\n     }\n \n     public boolean isExclusion(String requestURI) {\n-        if (excludesPattern == null) {\n+        if (excludesPattern == null || requestURI == null) {\n             return false;\n         }\n \n", "projectName": "alibaba.druid", "bugLineNum": 188, "bugNodeStartChar": 6987, "bugNodeLength": 23, "fixLineNum": 188, "fixNodeStartChar": 6987, "fixNodeLength": 45, "sourceBeforeFix": "excludesPattern == null", "sourceAfterFix": "excludesPattern == null || requestURI == null"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "c9e9aabd8148d596fe4b1bcb00691d819fc4eff5", "fixCommitParentSHA1": "103ee3e1a3c446590d0bd61e8e29f1d0d643b7e4", "bugFilePath": "src/main/java/com/alibaba/druid/support/http/WebStatFilter.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/support/http/WebStatFilter.java b/src/main/java/com/alibaba/druid/support/http/WebStatFilter.java\nindex b50dca3..0746a42 100644\n--- a/src/main/java/com/alibaba/druid/support/http/WebStatFilter.java\n+++ b/src/main/java/com/alibaba/druid/support/http/WebStatFilter.java\n@@ -185,7 +185,7 @@\n     }\n \n     public boolean isExclusion(String requestURI) {\n-        if (excludesPattern == null) {\n+        if (excludesPattern == null || requestURI == null) {\n             return false;\n         }\n \n", "projectName": "alibaba.druid", "bugLineNum": 188, "bugNodeStartChar": 6987, "bugNodeLength": 23, "fixLineNum": 188, "fixNodeStartChar": 6987, "fixNodeLength": 45, "sourceBeforeFix": "excludesPattern == null", "sourceAfterFix": "excludesPattern == null || requestURI == null"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "84b306a05494b8fc2d9248101b6bdfe119196f8e", "fixCommitParentSHA1": "f2894d6c3b1db963b708507ec95a1d27f49673f7", "bugFilePath": "src/main/java/com/alibaba/druid/stat/DruidStatService.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/stat/DruidStatService.java b/src/main/java/com/alibaba/druid/stat/DruidStatService.java\nindex 894a9d0..e76072e 100644\n--- a/src/main/java/com/alibaba/druid/stat/DruidStatService.java\n+++ b/src/main/java/com/alibaba/druid/stat/DruidStatService.java\n@@ -149,7 +149,7 @@\n         }\n \n         if (url.startsWith(\"/weburi-\") && url.indexOf(\".json\") > 0) {\n-            String uri = StringUtils.subString(url, \"weburi-\", \".json\");\n+            String uri = StringUtils.subString(url, \"weburi-\", \".json\", true);\n             return returnJSONResult(RESULT_CODE_SUCCESS, getWebURIStatData(uri));\n         }\n \n", "projectName": "alibaba.druid", "bugLineNum": 152, "bugNodeStartChar": 6075, "bugNodeLength": 46, "fixLineNum": 152, "fixNodeStartChar": 6075, "fixNodeLength": 52, "sourceBeforeFix": "StringUtils.subString(url,\"weburi-\",\".json\")", "sourceAfterFix": "StringUtils.subString(url,\"weburi-\",\".json\",true)"}, {"bugType": "SWAP_BOOLEAN_LITERAL", "fixCommitSHA1": "cedf72640d917a1d2df5ca88fb6a41d624ffd1ab", "fixCommitParentSHA1": "178de15fac9b9d085bed8bae05360dd7a27715bc", "bugFilePath": "src/main/java/com/alibaba/druid/sql/dialect/postgresql/visitor/PGExportParameterVisitor.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/sql/dialect/postgresql/visitor/PGExportParameterVisitor.java b/src/main/java/com/alibaba/druid/sql/dialect/postgresql/visitor/PGExportParameterVisitor.java\nindex 50d820d..21d9c93 100644\n--- a/src/main/java/com/alibaba/druid/sql/dialect/postgresql/visitor/PGExportParameterVisitor.java\n+++ b/src/main/java/com/alibaba/druid/sql/dialect/postgresql/visitor/PGExportParameterVisitor.java\n@@ -46,7 +46,7 @@\n     }\r\n \r\n     public PGExportParameterVisitor(final List<Object> parameters){\r\n-        this(parameters,new StringBuilder(),false);\r\n+        this(parameters,new StringBuilder(),true);\r\n     }\r\n \r\n     public PGExportParameterVisitor(final Appendable appender) {\r\n", "projectName": "alibaba.druid", "bugLineNum": 49, "bugNodeStartChar": 1957, "bugNodeLength": 43, "fixLineNum": 49, "fixNodeStartChar": 1909, "fixNodeLength": 42, "sourceBeforeFix": "this(parameters,new StringBuilder(),false); ", "sourceAfterFix": "this(parameters,new StringBuilder(),true); "}, {"bugType": "SWAP_BOOLEAN_LITERAL", "fixCommitSHA1": "cedf72640d917a1d2df5ca88fb6a41d624ffd1ab", "fixCommitParentSHA1": "178de15fac9b9d085bed8bae05360dd7a27715bc", "bugFilePath": "src/main/java/com/alibaba/druid/sql/dialect/sqlserver/visitor/MSSQLServerExportParameterVisitor.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/sql/dialect/sqlserver/visitor/MSSQLServerExportParameterVisitor.java b/src/main/java/com/alibaba/druid/sql/dialect/sqlserver/visitor/MSSQLServerExportParameterVisitor.java\nindex 3cd037f..f0ca185 100644\n--- a/src/main/java/com/alibaba/druid/sql/dialect/sqlserver/visitor/MSSQLServerExportParameterVisitor.java\n+++ b/src/main/java/com/alibaba/druid/sql/dialect/sqlserver/visitor/MSSQLServerExportParameterVisitor.java\n@@ -46,7 +46,7 @@\n     }\r\n \r\n     public MSSQLServerExportParameterVisitor(final List<Object> parameters){\r\n-        this(parameters,new StringBuilder(),false);\r\n+        this(parameters,new StringBuilder(),true);\r\n     }\r\n \r\n     public MSSQLServerExportParameterVisitor(final Appendable appender) {\r\n", "projectName": "alibaba.druid", "bugLineNum": 49, "bugNodeStartChar": 1999, "bugNodeLength": 43, "fixLineNum": 49, "fixNodeStartChar": 1951, "fixNodeLength": 42, "sourceBeforeFix": "this(parameters,new StringBuilder(),false); ", "sourceAfterFix": "this(parameters,new StringBuilder(),true); "}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "8a7c5ce2b440f584c4af52ae1e4d7f7a885a6ac4", "fixCommitParentSHA1": "79c2500d39cfe09d75504633dddd3597b1c9af53", "bugFilePath": "src/test/java/com/alibaba/druid/bvt/pool/TestPoolPreparedStatement2.java", "fixPatch": "diff --git a/src/test/java/com/alibaba/druid/bvt/pool/TestPoolPreparedStatement2.java b/src/test/java/com/alibaba/druid/bvt/pool/TestPoolPreparedStatement2.java\nindex dafd8b7..afc57f8 100644\n--- a/src/test/java/com/alibaba/druid/bvt/pool/TestPoolPreparedStatement2.java\n+++ b/src/test/java/com/alibaba/druid/bvt/pool/TestPoolPreparedStatement2.java\n@@ -85,7 +85,7 @@\n             }\r\n         }\r\n \r\n-        for (int i = 0; i < 1000 * 1; ++i) {\r\n+        for (int i = 0; i < 10 * 1; ++i) {\r\n             Connection conn = dataSource.getConnection();\r\n             PreparedStatement stmt = conn.prepareStatement(\"SELECT \" + i);\r\n             stmt.execute();\r\n", "projectName": "alibaba.druid", "bugLineNum": 88, "bugNodeStartChar": 3203, "bugNodeLength": 8, "fixLineNum": 88, "fixNodeStartChar": 3116, "fixNodeLength": 6, "sourceBeforeFix": "1000 * 1", "sourceAfterFix": "10 * 1"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "36722bc051dd9e0b1915a4a0479746f36d42d820", "fixCommitParentSHA1": "18e84e44c2ab6a29d846c5579a3501de374a6fcf", "bugFilePath": "src/main/java/com/alibaba/druid/filter/FilterManager.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/filter/FilterManager.java b/src/main/java/com/alibaba/druid/filter/FilterManager.java\nindex b201de2..547519e 100644\n--- a/src/main/java/com/alibaba/druid/filter/FilterManager.java\n+++ b/src/main/java/com/alibaba/druid/filter/FilterManager.java\n@@ -46,7 +46,7 @@\n                     aliasMap.put(name, (String) entry.getValue());\n                 }\n             }\n-        } catch (Exception e) {\n+        } catch (Throwable e) {\n             LOG.error(\"load filter config error\", e);\n         }\n     }\n", "projectName": "alibaba.druid", "bugLineNum": 49, "bugNodeStartChar": 1826, "bugNodeLength": 11, "fixLineNum": 49, "fixNodeStartChar": 1826, "fixNodeLength": 11, "sourceBeforeFix": "Exception e", "sourceAfterFix": "Throwable e"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "051910f66628ff4438c86ecdf5f6ea16810454f9", "fixCommitParentSHA1": "1ce92f7d43bc7a30be73a1cc29312f432fccc600", "bugFilePath": "src/main/java/com/alibaba/druid/sql/dialect/teradata/parser/TeradataStatementParser.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/sql/dialect/teradata/parser/TeradataStatementParser.java b/src/main/java/com/alibaba/druid/sql/dialect/teradata/parser/TeradataStatementParser.java\nindex 5ca482b..5a8354e 100644\n--- a/src/main/java/com/alibaba/druid/sql/dialect/teradata/parser/TeradataStatementParser.java\n+++ b/src/main/java/com/alibaba/druid/sql/dialect/teradata/parser/TeradataStatementParser.java\n@@ -118,7 +118,8 @@\n                 break;\n             }\n \n-        } else if (lexer.token() == (Token.SELECT)) {\n+        } else if (lexer.token() == (Token.SELECT) \n+        \t\t|| lexer.token() == (Token.SEL)) {\n             SQLSelect select = this.exprParser.createSelectParser().select();\n             select.setParent(insertStatement);\n             insertStatement.setQuery(select);\n", "projectName": "alibaba.druid", "bugLineNum": 121, "bugNodeStartChar": 4424, "bugNodeLength": 31, "fixLineNum": 121, "fixNodeStartChar": 4424, "fixNodeLength": 74, "sourceBeforeFix": "lexer.token() == (Token.SELECT)", "sourceAfterFix": "lexer.token() == (Token.SELECT) || lexer.token() == (Token.SEL)"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "051910f66628ff4438c86ecdf5f6ea16810454f9", "fixCommitParentSHA1": "1ce92f7d43bc7a30be73a1cc29312f432fccc600", "bugFilePath": "src/main/java/com/alibaba/druid/sql/dialect/teradata/parser/TeradataStatementParser.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/sql/dialect/teradata/parser/TeradataStatementParser.java b/src/main/java/com/alibaba/druid/sql/dialect/teradata/parser/TeradataStatementParser.java\nindex 5ca482b..5a8354e 100644\n--- a/src/main/java/com/alibaba/druid/sql/dialect/teradata/parser/TeradataStatementParser.java\n+++ b/src/main/java/com/alibaba/druid/sql/dialect/teradata/parser/TeradataStatementParser.java\n@@ -118,7 +118,8 @@\n                 break;\n             }\n \n-        } else if (lexer.token() == (Token.SELECT)) {\n+        } else if (lexer.token() == (Token.SELECT) \n+        \t\t|| lexer.token() == (Token.SEL)) {\n             SQLSelect select = this.exprParser.createSelectParser().select();\n             select.setParent(insertStatement);\n             insertStatement.setQuery(select);\n", "projectName": "alibaba.druid", "bugLineNum": 121, "bugNodeStartChar": 4424, "bugNodeLength": 31, "fixLineNum": 121, "fixNodeStartChar": 4424, "fixNodeLength": 74, "sourceBeforeFix": "lexer.token() == (Token.SELECT)", "sourceAfterFix": "lexer.token() == (Token.SELECT) || lexer.token() == (Token.SEL)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "91809146310a94d68249a1e9ef6e2652b0d05843", "fixCommitParentSHA1": "5f9ae8a67f4f4ab05048805b31d5a892f7e3e7ed", "bugFilePath": "src/main/java/com/alibaba/druid/pool/DruidDataSource.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\nindex 56712f6..ecfb47e 100644\n--- a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n+++ b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n@@ -1834,7 +1834,7 @@\n                         try {\n                             notEmpty.signalAll();\n                         } finally {\n-                            lock.lock();\n+                            lock.unlock();\n                         }\n                     }\n \n", "projectName": "alibaba.druid", "bugLineNum": 1837, "bugNodeStartChar": 62572, "bugNodeLength": 11, "fixLineNum": 1837, "fixNodeStartChar": 62572, "fixNodeLength": 13, "sourceBeforeFix": "lock.lock()", "sourceAfterFix": "lock.unlock()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "91809146310a94d68249a1e9ef6e2652b0d05843", "fixCommitParentSHA1": "5f9ae8a67f4f4ab05048805b31d5a892f7e3e7ed", "bugFilePath": "src/main/java/com/alibaba/druid/pool/DruidDataSource.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\nindex 56712f6..ecfb47e 100644\n--- a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n+++ b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n@@ -1834,7 +1834,7 @@\n                         try {\n                             notEmpty.signalAll();\n                         } finally {\n-                            lock.lock();\n+                            lock.unlock();\n                         }\n                     }\n \n", "projectName": "alibaba.druid", "bugLineNum": 1837, "bugNodeStartChar": 62572, "bugNodeLength": 11, "fixLineNum": 1837, "fixNodeStartChar": 62572, "fixNodeLength": 13, "sourceBeforeFix": "lock.lock()", "sourceAfterFix": "lock.unlock()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "6cdc9df75435ba869cf4a4d6a5f2d398439a16f1", "fixCommitParentSHA1": "5f9ae8a67f4f4ab05048805b31d5a892f7e3e7ed", "bugFilePath": "src/main/java/com/alibaba/druid/pool/DruidDataSource.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\nindex 56712f6..ecfb47e 100644\n--- a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n+++ b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n@@ -1834,7 +1834,7 @@\n                         try {\n                             notEmpty.signalAll();\n                         } finally {\n-                            lock.lock();\n+                            lock.unlock();\n                         }\n                     }\n \n", "projectName": "alibaba.druid", "bugLineNum": 1837, "bugNodeStartChar": 62572, "bugNodeLength": 11, "fixLineNum": 1837, "fixNodeStartChar": 62572, "fixNodeLength": 13, "sourceBeforeFix": "lock.lock()", "sourceAfterFix": "lock.unlock()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "6cdc9df75435ba869cf4a4d6a5f2d398439a16f1", "fixCommitParentSHA1": "5f9ae8a67f4f4ab05048805b31d5a892f7e3e7ed", "bugFilePath": "src/main/java/com/alibaba/druid/pool/DruidDataSource.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\nindex 56712f6..ecfb47e 100644\n--- a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n+++ b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n@@ -1834,7 +1834,7 @@\n                         try {\n                             notEmpty.signalAll();\n                         } finally {\n-                            lock.lock();\n+                            lock.unlock();\n                         }\n                     }\n \n", "projectName": "alibaba.druid", "bugLineNum": 1837, "bugNodeStartChar": 62572, "bugNodeLength": 11, "fixLineNum": 1837, "fixNodeStartChar": 62572, "fixNodeLength": 13, "sourceBeforeFix": "lock.lock()", "sourceAfterFix": "lock.unlock()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "b282b8181d18ddfd3ba30089e65114696995462f", "fixCommitParentSHA1": "7d94fa4505a6ea45f4b247d8a18d922a726d0f30", "bugFilePath": "src/main/java/com/alibaba/druid/mock/MockDriver.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/mock/MockDriver.java b/src/main/java/com/alibaba/druid/mock/MockDriver.java\nindex 1f0d902..ae9f4dd 100644\n--- a/src/main/java/com/alibaba/druid/mock/MockDriver.java\n+++ b/src/main/java/com/alibaba/druid/mock/MockDriver.java\n@@ -144,7 +144,7 @@\n                     mbeanServer.registerMBean(instance, objectName);\r\n                 }\r\n             } catch (Exception ex) {\r\n-                getLog().error(\"register druid-driver mbean error\", ex);\r\n+                getLog().warn(\"register druid-driver mbean error\", ex);\r\n             }\r\n \r\n             return true;\r\n", "projectName": "alibaba.druid", "bugLineNum": 147, "bugNodeStartChar": 4924, "bugNodeLength": 55, "fixLineNum": 147, "fixNodeStartChar": 4778, "fixNodeLength": 54, "sourceBeforeFix": "getLog().error(\"register druid-driver mbean error\",ex)", "sourceAfterFix": "getLog().warn(\"register druid-driver mbean error\",ex)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "b282b8181d18ddfd3ba30089e65114696995462f", "fixCommitParentSHA1": "7d94fa4505a6ea45f4b247d8a18d922a726d0f30", "bugFilePath": "src/main/java/com/alibaba/druid/mock/MockDriver.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/mock/MockDriver.java b/src/main/java/com/alibaba/druid/mock/MockDriver.java\nindex 1f0d902..ae9f4dd 100644\n--- a/src/main/java/com/alibaba/druid/mock/MockDriver.java\n+++ b/src/main/java/com/alibaba/druid/mock/MockDriver.java\n@@ -144,7 +144,7 @@\n                     mbeanServer.registerMBean(instance, objectName);\r\n                 }\r\n             } catch (Exception ex) {\r\n-                getLog().error(\"register druid-driver mbean error\", ex);\r\n+                getLog().warn(\"register druid-driver mbean error\", ex);\r\n             }\r\n \r\n             return true;\r\n", "projectName": "alibaba.druid", "bugLineNum": 147, "bugNodeStartChar": 4924, "bugNodeLength": 55, "fixLineNum": 147, "fixNodeStartChar": 4778, "fixNodeLength": 54, "sourceBeforeFix": "getLog().error(\"register druid-driver mbean error\",ex)", "sourceAfterFix": "getLog().warn(\"register druid-driver mbean error\",ex)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "b282b8181d18ddfd3ba30089e65114696995462f", "fixCommitParentSHA1": "7d94fa4505a6ea45f4b247d8a18d922a726d0f30", "bugFilePath": "src/main/java/com/alibaba/druid/proxy/DruidDriver.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/proxy/DruidDriver.java b/src/main/java/com/alibaba/druid/proxy/DruidDriver.java\nindex ca9d598..54263dd 100644\n--- a/src/main/java/com/alibaba/druid/proxy/DruidDriver.java\n+++ b/src/main/java/com/alibaba/druid/proxy/DruidDriver.java\n@@ -102,7 +102,7 @@\n                 if (LOG == null) {\n                     LOG = LogFactory.getLog(DruidDriver.class);\n                 }\n-                LOG.error(\"register druid-driver mbean error\", ex);\n+                LOG.warn(\"register druid-driver mbean error\", ex);\n             }\n \n             return true;\n", "projectName": "alibaba.druid", "bugLineNum": 105, "bugNodeStartChar": 4630, "bugNodeLength": 50, "fixLineNum": 105, "fixNodeStartChar": 4630, "fixNodeLength": 49, "sourceBeforeFix": "LOG.error(\"register druid-driver mbean error\",ex)", "sourceAfterFix": "LOG.warn(\"register druid-driver mbean error\",ex)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "b282b8181d18ddfd3ba30089e65114696995462f", "fixCommitParentSHA1": "7d94fa4505a6ea45f4b247d8a18d922a726d0f30", "bugFilePath": "src/main/java/com/alibaba/druid/proxy/DruidDriver.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/proxy/DruidDriver.java b/src/main/java/com/alibaba/druid/proxy/DruidDriver.java\nindex ca9d598..54263dd 100644\n--- a/src/main/java/com/alibaba/druid/proxy/DruidDriver.java\n+++ b/src/main/java/com/alibaba/druid/proxy/DruidDriver.java\n@@ -102,7 +102,7 @@\n                 if (LOG == null) {\n                     LOG = LogFactory.getLog(DruidDriver.class);\n                 }\n-                LOG.error(\"register druid-driver mbean error\", ex);\n+                LOG.warn(\"register druid-driver mbean error\", ex);\n             }\n \n             return true;\n", "projectName": "alibaba.druid", "bugLineNum": 105, "bugNodeStartChar": 4630, "bugNodeLength": 50, "fixLineNum": 105, "fixNodeStartChar": 4630, "fixNodeLength": 49, "sourceBeforeFix": "LOG.error(\"register druid-driver mbean error\",ex)", "sourceAfterFix": "LOG.warn(\"register druid-driver mbean error\",ex)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "427bea8bae3af37769a58f579767d54cb7af415a", "fixCommitParentSHA1": "125a3df68e1d2f5675d5f86fe523c0a9e258b09d", "bugFilePath": "src/main/java/com/alibaba/druid/mock/MockDriver.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/mock/MockDriver.java b/src/main/java/com/alibaba/druid/mock/MockDriver.java\nindex 1f0d902..ae9f4dd 100644\n--- a/src/main/java/com/alibaba/druid/mock/MockDriver.java\n+++ b/src/main/java/com/alibaba/druid/mock/MockDriver.java\n@@ -144,7 +144,7 @@\n                     mbeanServer.registerMBean(instance, objectName);\r\n                 }\r\n             } catch (Exception ex) {\r\n-                getLog().error(\"register druid-driver mbean error\", ex);\r\n+                getLog().warn(\"register druid-driver mbean error\", ex);\r\n             }\r\n \r\n             return true;\r\n", "projectName": "alibaba.druid", "bugLineNum": 147, "bugNodeStartChar": 4924, "bugNodeLength": 55, "fixLineNum": 147, "fixNodeStartChar": 4778, "fixNodeLength": 54, "sourceBeforeFix": "getLog().error(\"register druid-driver mbean error\",ex)", "sourceAfterFix": "getLog().warn(\"register druid-driver mbean error\",ex)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "427bea8bae3af37769a58f579767d54cb7af415a", "fixCommitParentSHA1": "125a3df68e1d2f5675d5f86fe523c0a9e258b09d", "bugFilePath": "src/main/java/com/alibaba/druid/mock/MockDriver.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/mock/MockDriver.java b/src/main/java/com/alibaba/druid/mock/MockDriver.java\nindex 1f0d902..ae9f4dd 100644\n--- a/src/main/java/com/alibaba/druid/mock/MockDriver.java\n+++ b/src/main/java/com/alibaba/druid/mock/MockDriver.java\n@@ -144,7 +144,7 @@\n                     mbeanServer.registerMBean(instance, objectName);\r\n                 }\r\n             } catch (Exception ex) {\r\n-                getLog().error(\"register druid-driver mbean error\", ex);\r\n+                getLog().warn(\"register druid-driver mbean error\", ex);\r\n             }\r\n \r\n             return true;\r\n", "projectName": "alibaba.druid", "bugLineNum": 147, "bugNodeStartChar": 4924, "bugNodeLength": 55, "fixLineNum": 147, "fixNodeStartChar": 4778, "fixNodeLength": 54, "sourceBeforeFix": "getLog().error(\"register druid-driver mbean error\",ex)", "sourceAfterFix": "getLog().warn(\"register druid-driver mbean error\",ex)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "427bea8bae3af37769a58f579767d54cb7af415a", "fixCommitParentSHA1": "125a3df68e1d2f5675d5f86fe523c0a9e258b09d", "bugFilePath": "src/main/java/com/alibaba/druid/proxy/DruidDriver.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/proxy/DruidDriver.java b/src/main/java/com/alibaba/druid/proxy/DruidDriver.java\nindex ca9d598..54263dd 100644\n--- a/src/main/java/com/alibaba/druid/proxy/DruidDriver.java\n+++ b/src/main/java/com/alibaba/druid/proxy/DruidDriver.java\n@@ -102,7 +102,7 @@\n                 if (LOG == null) {\n                     LOG = LogFactory.getLog(DruidDriver.class);\n                 }\n-                LOG.error(\"register druid-driver mbean error\", ex);\n+                LOG.warn(\"register druid-driver mbean error\", ex);\n             }\n \n             return true;\n", "projectName": "alibaba.druid", "bugLineNum": 105, "bugNodeStartChar": 4630, "bugNodeLength": 50, "fixLineNum": 105, "fixNodeStartChar": 4630, "fixNodeLength": 49, "sourceBeforeFix": "LOG.error(\"register druid-driver mbean error\",ex)", "sourceAfterFix": "LOG.warn(\"register druid-driver mbean error\",ex)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "427bea8bae3af37769a58f579767d54cb7af415a", "fixCommitParentSHA1": "125a3df68e1d2f5675d5f86fe523c0a9e258b09d", "bugFilePath": "src/main/java/com/alibaba/druid/proxy/DruidDriver.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/proxy/DruidDriver.java b/src/main/java/com/alibaba/druid/proxy/DruidDriver.java\nindex ca9d598..54263dd 100644\n--- a/src/main/java/com/alibaba/druid/proxy/DruidDriver.java\n+++ b/src/main/java/com/alibaba/druid/proxy/DruidDriver.java\n@@ -102,7 +102,7 @@\n                 if (LOG == null) {\n                     LOG = LogFactory.getLog(DruidDriver.class);\n                 }\n-                LOG.error(\"register druid-driver mbean error\", ex);\n+                LOG.warn(\"register druid-driver mbean error\", ex);\n             }\n \n             return true;\n", "projectName": "alibaba.druid", "bugLineNum": 105, "bugNodeStartChar": 4630, "bugNodeLength": 50, "fixLineNum": 105, "fixNodeStartChar": 4630, "fixNodeLength": 49, "sourceBeforeFix": "LOG.error(\"register druid-driver mbean error\",ex)", "sourceAfterFix": "LOG.warn(\"register druid-driver mbean error\",ex)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "e254b1b36eb99df733b04e16471aabc8abd3e386", "fixCommitParentSHA1": "74e37df61638d0aa6f27c5ad4cf36aa7527876a9", "bugFilePath": "src/main/java/com/alibaba/druid/pool/DruidAbstractDataSource.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/pool/DruidAbstractDataSource.java b/src/main/java/com/alibaba/druid/pool/DruidAbstractDataSource.java\nindex d746716..4f14805 100644\n--- a/src/main/java/com/alibaba/druid/pool/DruidAbstractDataSource.java\n+++ b/src/main/java/com/alibaba/druid/pool/DruidAbstractDataSource.java\n@@ -200,7 +200,7 @@\n     protected final AtomicLong                         cachedPreparedStatementDeleteCount        = new AtomicLong();\n     protected final AtomicLong                         cachedPreparedStatementMissCount          = new AtomicLong();\n \n-    protected final Histogram                          transactionHistogram                      = new Histogram(\n+    protected final Histogram                          transactionHistogram                      = new Histogram(1,\n                                                                                                                  10,\n                                                                                                                  100,\n                                                                                                                  1000,\n", "projectName": "alibaba.druid", "bugLineNum": 203, "bugNodeStartChar": 11881, "bugNodeLength": 617, "fixLineNum": 203, "fixNodeStartChar": 11881, "fixNodeLength": 619, "sourceBeforeFix": "new Histogram(10,100,1000,10 * 1000,100 * 1000)", "sourceAfterFix": "new Histogram(1,10,100,1000,10 * 1000,100 * 1000)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "cec2ed6d25f9b3f70b90ee3c8af70149992dbbce", "fixCommitParentSHA1": "74e37df61638d0aa6f27c5ad4cf36aa7527876a9", "bugFilePath": "src/main/java/com/alibaba/druid/pool/DruidAbstractDataSource.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/pool/DruidAbstractDataSource.java b/src/main/java/com/alibaba/druid/pool/DruidAbstractDataSource.java\nindex d746716..4f14805 100644\n--- a/src/main/java/com/alibaba/druid/pool/DruidAbstractDataSource.java\n+++ b/src/main/java/com/alibaba/druid/pool/DruidAbstractDataSource.java\n@@ -200,7 +200,7 @@\n     protected final AtomicLong                         cachedPreparedStatementDeleteCount        = new AtomicLong();\n     protected final AtomicLong                         cachedPreparedStatementMissCount          = new AtomicLong();\n \n-    protected final Histogram                          transactionHistogram                      = new Histogram(\n+    protected final Histogram                          transactionHistogram                      = new Histogram(1,\n                                                                                                                  10,\n                                                                                                                  100,\n                                                                                                                  1000,\n", "projectName": "alibaba.druid", "bugLineNum": 203, "bugNodeStartChar": 11881, "bugNodeLength": 617, "fixLineNum": 203, "fixNodeStartChar": 11881, "fixNodeLength": 619, "sourceBeforeFix": "new Histogram(10,100,1000,10 * 1000,100 * 1000)", "sourceAfterFix": "new Histogram(1,10,100,1000,10 * 1000,100 * 1000)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "b7dfbc0a93d9a7135a1bbb1cc32fd715b2091eae", "fixCommitParentSHA1": "fa46812ffcb2f205c9b2d3fddd642b614354ae69", "bugFilePath": "src/main/java/com/alibaba/druid/pool/DruidDataSource.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\nindex 1ebeec5..96190fb 100644\n--- a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n+++ b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n@@ -1569,7 +1569,7 @@\n         value.setTestWhileIdle(this.isTestWhileIdle());\n \n         value.setDefaultAutoCommit(this.isDefaultAutoCommit());\n-        value.setDefaultReadOnly(this.isDefaultAutoCommit());\n+        value.setDefaultReadOnly(this.getDefaultReadOnly());\n         value.setDefaultTransactionIsolation(this.getDefaultTransactionIsolation());\n \n         value.setLogicConnectErrorCount(connectErrorCount.getAndSet(0));\n@@ -2294,7 +2294,7 @@\n         dataMap.put(\"TestWhileIdle\", this.isTestWhileIdle());\n \n         dataMap.put(\"DefaultAutoCommit\", this.isDefaultAutoCommit());\n-        dataMap.put(\"DefaultReadOnly\", this.isDefaultAutoCommit());\n+        dataMap.put(\"DefaultReadOnly\", this.getDefaultReadOnly());\n         dataMap.put(\"DefaultTransactionIsolation\", this.getDefaultTransactionIsolation());\n \n         dataMap.put(\"LogicConnectCount\", connectCount);\n", "projectName": "alibaba.druid", "bugLineNum": 1572, "bugNodeStartChar": 53035, "bugNodeLength": 26, "fixLineNum": 1572, "fixNodeStartChar": 53035, "fixNodeLength": 25, "sourceBeforeFix": "this.isDefaultAutoCommit()", "sourceAfterFix": "this.getDefaultReadOnly()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "b7dfbc0a93d9a7135a1bbb1cc32fd715b2091eae", "fixCommitParentSHA1": "fa46812ffcb2f205c9b2d3fddd642b614354ae69", "bugFilePath": "src/main/java/com/alibaba/druid/pool/DruidDataSource.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\nindex 1ebeec5..96190fb 100644\n--- a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n+++ b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n@@ -1569,7 +1569,7 @@\n         value.setTestWhileIdle(this.isTestWhileIdle());\n \n         value.setDefaultAutoCommit(this.isDefaultAutoCommit());\n-        value.setDefaultReadOnly(this.isDefaultAutoCommit());\n+        value.setDefaultReadOnly(this.getDefaultReadOnly());\n         value.setDefaultTransactionIsolation(this.getDefaultTransactionIsolation());\n \n         value.setLogicConnectErrorCount(connectErrorCount.getAndSet(0));\n@@ -2294,7 +2294,7 @@\n         dataMap.put(\"TestWhileIdle\", this.isTestWhileIdle());\n \n         dataMap.put(\"DefaultAutoCommit\", this.isDefaultAutoCommit());\n-        dataMap.put(\"DefaultReadOnly\", this.isDefaultAutoCommit());\n+        dataMap.put(\"DefaultReadOnly\", this.getDefaultReadOnly());\n         dataMap.put(\"DefaultTransactionIsolation\", this.getDefaultTransactionIsolation());\n \n         dataMap.put(\"LogicConnectCount\", connectCount);\n", "projectName": "alibaba.druid", "bugLineNum": 1572, "bugNodeStartChar": 53035, "bugNodeLength": 26, "fixLineNum": 1572, "fixNodeStartChar": 53035, "fixNodeLength": 25, "sourceBeforeFix": "this.isDefaultAutoCommit()", "sourceAfterFix": "this.getDefaultReadOnly()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "b7dfbc0a93d9a7135a1bbb1cc32fd715b2091eae", "fixCommitParentSHA1": "fa46812ffcb2f205c9b2d3fddd642b614354ae69", "bugFilePath": "src/main/java/com/alibaba/druid/pool/DruidDataSource.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\nindex 1ebeec5..96190fb 100644\n--- a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n+++ b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n@@ -1569,7 +1569,7 @@\n         value.setTestWhileIdle(this.isTestWhileIdle());\n \n         value.setDefaultAutoCommit(this.isDefaultAutoCommit());\n-        value.setDefaultReadOnly(this.isDefaultAutoCommit());\n+        value.setDefaultReadOnly(this.getDefaultReadOnly());\n         value.setDefaultTransactionIsolation(this.getDefaultTransactionIsolation());\n \n         value.setLogicConnectErrorCount(connectErrorCount.getAndSet(0));\n@@ -2294,7 +2294,7 @@\n         dataMap.put(\"TestWhileIdle\", this.isTestWhileIdle());\n \n         dataMap.put(\"DefaultAutoCommit\", this.isDefaultAutoCommit());\n-        dataMap.put(\"DefaultReadOnly\", this.isDefaultAutoCommit());\n+        dataMap.put(\"DefaultReadOnly\", this.getDefaultReadOnly());\n         dataMap.put(\"DefaultTransactionIsolation\", this.getDefaultTransactionIsolation());\n \n         dataMap.put(\"LogicConnectCount\", connectCount);\n", "projectName": "alibaba.druid", "bugLineNum": 2297, "bugNodeStartChar": 78160, "bugNodeLength": 26, "fixLineNum": 2297, "fixNodeStartChar": 78160, "fixNodeLength": 25, "sourceBeforeFix": "this.isDefaultAutoCommit()", "sourceAfterFix": "this.getDefaultReadOnly()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "b7dfbc0a93d9a7135a1bbb1cc32fd715b2091eae", "fixCommitParentSHA1": "fa46812ffcb2f205c9b2d3fddd642b614354ae69", "bugFilePath": "src/main/java/com/alibaba/druid/pool/DruidDataSource.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\nindex 1ebeec5..96190fb 100644\n--- a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n+++ b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n@@ -1569,7 +1569,7 @@\n         value.setTestWhileIdle(this.isTestWhileIdle());\n \n         value.setDefaultAutoCommit(this.isDefaultAutoCommit());\n-        value.setDefaultReadOnly(this.isDefaultAutoCommit());\n+        value.setDefaultReadOnly(this.getDefaultReadOnly());\n         value.setDefaultTransactionIsolation(this.getDefaultTransactionIsolation());\n \n         value.setLogicConnectErrorCount(connectErrorCount.getAndSet(0));\n@@ -2294,7 +2294,7 @@\n         dataMap.put(\"TestWhileIdle\", this.isTestWhileIdle());\n \n         dataMap.put(\"DefaultAutoCommit\", this.isDefaultAutoCommit());\n-        dataMap.put(\"DefaultReadOnly\", this.isDefaultAutoCommit());\n+        dataMap.put(\"DefaultReadOnly\", this.getDefaultReadOnly());\n         dataMap.put(\"DefaultTransactionIsolation\", this.getDefaultTransactionIsolation());\n \n         dataMap.put(\"LogicConnectCount\", connectCount);\n", "projectName": "alibaba.druid", "bugLineNum": 2297, "bugNodeStartChar": 78160, "bugNodeLength": 26, "fixLineNum": 2297, "fixNodeStartChar": 78160, "fixNodeLength": 25, "sourceBeforeFix": "this.isDefaultAutoCommit()", "sourceAfterFix": "this.getDefaultReadOnly()"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "dee930814fe7ee86fad5be312bce331affc0fc0b", "fixCommitParentSHA1": "95b7631c03f6dc2eeeabe025df1d7b3d5b359890", "bugFilePath": "src/main/java/com/alibaba/druid/pool/DruidDataSource.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\nindex db71050..0d291cc 100644\n--- a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n+++ b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n@@ -1065,7 +1065,7 @@\n \n             String errorMessage = buf.toString();\n \n-            if (this.createError == null) {\n+            if (this.createError != null) {\n                 throw new GetConnectionTimeoutException(errorMessage, createError);\n             } else {\n                 throw new GetConnectionTimeoutException(errorMessage);\n", "projectName": "alibaba.druid", "bugLineNum": 1068, "bugNodeStartChar": 36958, "bugNodeLength": 24, "fixLineNum": 1068, "fixNodeStartChar": 36958, "fixNodeLength": 24, "sourceBeforeFix": "this.createError == null", "sourceAfterFix": "this.createError != null"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "6e60d48b0a7ce11a06459aef1b8667d77589132d", "fixCommitParentSHA1": "c65c28e9b2aeb310d849f237daf4184025ac0aff", "bugFilePath": "src/main/java/com/alibaba/druid/wall/WallFilter.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/wall/WallFilter.java b/src/main/java/com/alibaba/druid/wall/WallFilter.java\nindex 154ede8..8c947ed 100644\n--- a/src/main/java/com/alibaba/druid/wall/WallFilter.java\n+++ b/src/main/java/com/alibaba/druid/wall/WallFilter.java\n@@ -59,7 +59,7 @@\n     public final static String ATTR_SQL_STAT  = \"wall.sqlStat\";\n \n     @Override\n-    public void init(DataSourceProxy dataSource) {\n+    public synchronized void init(DataSourceProxy dataSource) {\n         if (this.dbType == null || this.dbType.trim().length() == 0) {\n             if (dataSource != null && dataSource.getDbType() != null) {\n                 this.dbType = dataSource.getDbType();\n", "projectName": "alibaba.druid", "bugLineNum": 61, "bugNodeStartChar": 2245, "bugNodeLength": 2028, "fixLineNum": 61, "fixNodeStartChar": 2245, "fixNodeLength": 2041, "sourceBeforeFix": "1", "sourceAfterFix": "33"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "bde289e71664e8f60d926bd884ce35e201543e50", "fixCommitParentSHA1": "71ae21e8c2eb7c46232fda3228e43db6ff67b49a", "bugFilePath": "src/test/java/com/alibaba/druid/bvt/filter/wall/MySqlWallTest92.java", "fixPatch": "diff --git a/src/test/java/com/alibaba/druid/bvt/filter/wall/MySqlWallTest92.java b/src/test/java/com/alibaba/druid/bvt/filter/wall/MySqlWallTest92.java\nindex b450c96..32b5afa 100644\n--- a/src/test/java/com/alibaba/druid/bvt/filter/wall/MySqlWallTest92.java\n+++ b/src/test/java/com/alibaba/druid/bvt/filter/wall/MySqlWallTest92.java\n@@ -34,7 +34,7 @@\n     public void test_false() throws Exception {\n         WallProvider provider = new MySqlWallProvider();\n         \n-        Assert.assertTrue(provider.checkValid(//\n+        Assert.assertFalse(provider.checkValid(//\n         \"SELECT * FROM T WHERE FID = 40 OR EXTRACTVALUE(4484,CONCAT(0x5c,0x7163646371,(SELECT (CASE WHEN (4484=4484) THEN 1 ELSE 0 END)),0x7165767271))\"));\n \n         Assert.assertEquals(1, provider.getTableStats().size());\n", "projectName": "alibaba.druid", "bugLineNum": 37, "bugNodeStartChar": 1079, "bugNodeLength": 195, "fixLineNum": 37, "fixNodeStartChar": 1079, "fixNodeLength": 196, "sourceBeforeFix": "Assert.assertTrue(provider.checkValid(\"SELECT * FROM T WHERE FID = 40 OR EXTRACTVALUE(4484,CONCAT(0x5c,0x7163646371,(SELECT (CASE WHEN (4484=4484) THEN 1 ELSE 0 END)),0x7165767271))\"))", "sourceAfterFix": "Assert.assertFalse(provider.checkValid(\"SELECT * FROM T WHERE FID = 40 OR EXTRACTVALUE(4484,CONCAT(0x5c,0x7163646371,(SELECT (CASE WHEN (4484=4484) THEN 1 ELSE 0 END)),0x7165767271))\"))"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "bde289e71664e8f60d926bd884ce35e201543e50", "fixCommitParentSHA1": "71ae21e8c2eb7c46232fda3228e43db6ff67b49a", "bugFilePath": "src/test/java/com/alibaba/druid/bvt/filter/wall/MySqlWallTest92.java", "fixPatch": "diff --git a/src/test/java/com/alibaba/druid/bvt/filter/wall/MySqlWallTest92.java b/src/test/java/com/alibaba/druid/bvt/filter/wall/MySqlWallTest92.java\nindex b450c96..32b5afa 100644\n--- a/src/test/java/com/alibaba/druid/bvt/filter/wall/MySqlWallTest92.java\n+++ b/src/test/java/com/alibaba/druid/bvt/filter/wall/MySqlWallTest92.java\n@@ -34,7 +34,7 @@\n     public void test_false() throws Exception {\n         WallProvider provider = new MySqlWallProvider();\n         \n-        Assert.assertTrue(provider.checkValid(//\n+        Assert.assertFalse(provider.checkValid(//\n         \"SELECT * FROM T WHERE FID = 40 OR EXTRACTVALUE(4484,CONCAT(0x5c,0x7163646371,(SELECT (CASE WHEN (4484=4484) THEN 1 ELSE 0 END)),0x7165767271))\"));\n \n         Assert.assertEquals(1, provider.getTableStats().size());\n", "projectName": "alibaba.druid", "bugLineNum": 37, "bugNodeStartChar": 1079, "bugNodeLength": 195, "fixLineNum": 37, "fixNodeStartChar": 1079, "fixNodeLength": 196, "sourceBeforeFix": "Assert.assertTrue(provider.checkValid(\"SELECT * FROM T WHERE FID = 40 OR EXTRACTVALUE(4484,CONCAT(0x5c,0x7163646371,(SELECT (CASE WHEN (4484=4484) THEN 1 ELSE 0 END)),0x7165767271))\"))", "sourceAfterFix": "Assert.assertFalse(provider.checkValid(\"SELECT * FROM T WHERE FID = 40 OR EXTRACTVALUE(4484,CONCAT(0x5c,0x7163646371,(SELECT (CASE WHEN (4484=4484) THEN 1 ELSE 0 END)),0x7165767271))\"))"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "8328666cb87ec2daf4a1ae67be86c8622a5d10bf", "fixCommitParentSHA1": "53a6895b32c3ab6c2710a09d8b9fd251cc98797e", "bugFilePath": "src/main/java/com/alibaba/druid/pool/DruidPooledConnection.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/pool/DruidPooledConnection.java b/src/main/java/com/alibaba/druid/pool/DruidPooledConnection.java\nindex a211164..4557d28 100644\n--- a/src/main/java/com/alibaba/druid/pool/DruidPooledConnection.java\n+++ b/src/main/java/com/alibaba/druid/pool/DruidPooledConnection.java\n@@ -149,7 +149,7 @@\n                     return;\r\n                 }\r\n                 \r\n-                LOG.warn(\"clear parameter error\", ex);\r\n+                LOG.error(\"clear parameter error\", ex);\r\n             }\r\n         }\r\n \r\n", "projectName": "alibaba.druid", "bugLineNum": 152, "bugNodeStartChar": 5123, "bugNodeLength": 37, "fixLineNum": 152, "fixNodeStartChar": 4972, "fixNodeLength": 38, "sourceBeforeFix": "LOG.warn(\"clear parameter error\",ex)", "sourceAfterFix": "LOG.error(\"clear parameter error\",ex)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "8328666cb87ec2daf4a1ae67be86c8622a5d10bf", "fixCommitParentSHA1": "53a6895b32c3ab6c2710a09d8b9fd251cc98797e", "bugFilePath": "src/main/java/com/alibaba/druid/pool/DruidPooledConnection.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/pool/DruidPooledConnection.java b/src/main/java/com/alibaba/druid/pool/DruidPooledConnection.java\nindex a211164..4557d28 100644\n--- a/src/main/java/com/alibaba/druid/pool/DruidPooledConnection.java\n+++ b/src/main/java/com/alibaba/druid/pool/DruidPooledConnection.java\n@@ -149,7 +149,7 @@\n                     return;\r\n                 }\r\n                 \r\n-                LOG.warn(\"clear parameter error\", ex);\r\n+                LOG.error(\"clear parameter error\", ex);\r\n             }\r\n         }\r\n \r\n", "projectName": "alibaba.druid", "bugLineNum": 152, "bugNodeStartChar": 5123, "bugNodeLength": 37, "fixLineNum": 152, "fixNodeStartChar": 4972, "fixNodeLength": 38, "sourceBeforeFix": "LOG.warn(\"clear parameter error\",ex)", "sourceAfterFix": "LOG.error(\"clear parameter error\",ex)"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "340a7a945ec66c7b4bcf562dd13cfbf995354d2d", "fixCommitParentSHA1": "c59312d546f8402f463bb870fcb73d85af255f1a", "bugFilePath": "src/main/java/com/alibaba/druid/support/http/WebStatFilter.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/support/http/WebStatFilter.java b/src/main/java/com/alibaba/druid/support/http/WebStatFilter.java\nindex f95525b..cca0018 100644\n--- a/src/main/java/com/alibaba/druid/support/http/WebStatFilter.java\n+++ b/src/main/java/com/alibaba/druid/support/http/WebStatFilter.java\n@@ -265,7 +265,7 @@\n             return sessionValue.toString();\n         }\n \n-        if (principalCookieName != null) {\n+        if (principalCookieName != null && httpRequest.getCookies() != null) {\n             for (Cookie cookie : httpRequest.getCookies()) {\n                 if (principalCookieName.equals(cookie.getName())) {\n                     return cookie.getValue();\n", "projectName": "alibaba.druid", "bugLineNum": 268, "bugNodeStartChar": 9804, "bugNodeLength": 27, "fixLineNum": 268, "fixNodeStartChar": 9804, "fixNodeLength": 63, "sourceBeforeFix": "principalCookieName != null", "sourceAfterFix": "principalCookieName != null && httpRequest.getCookies() != null"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "a5324f4086176f54dccf5df1864bcd1b458a851d", "fixCommitParentSHA1": "88908b5f25a20efb2d548d6501c3f486b1e3f74a", "bugFilePath": "src/main/java/com/alibaba/druid/stat/DruidStatManagerFacade.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/stat/DruidStatManagerFacade.java b/src/main/java/com/alibaba/druid/stat/DruidStatManagerFacade.java\nindex 7c9cfb9..848c8c4 100644\n--- a/src/main/java/com/alibaba/druid/stat/DruidStatManagerFacade.java\n+++ b/src/main/java/com/alibaba/druid/stat/DruidStatManagerFacade.java\n@@ -229,7 +229,7 @@\n     public List<String> getActiveConnectionStackTraceByDataSourceId(Integer id) {\n         Object datasource = getDruidDataSourceById(id);\n \n-        if (datasource == null || DruidDataSourceUtils.isRemoveAbandoned(datasource)) {\n+        if (datasource == null || !DruidDataSourceUtils.isRemoveAbandoned(datasource)) {\n             return null;\n         }\n \n", "projectName": "alibaba.druid", "bugLineNum": 232, "bugNodeStartChar": 7521, "bugNodeLength": 50, "fixLineNum": 232, "fixNodeStartChar": 7521, "fixNodeLength": 51, "sourceBeforeFix": "DruidDataSourceUtils.isRemoveAbandoned(datasource)", "sourceAfterFix": "!DruidDataSourceUtils.isRemoveAbandoned(datasource)"}, {"bugType": "DELETE_THROWS_EXCEPTION", "fixCommitSHA1": "f60f4dbdad22bbd4ef94ce1b01eb63f9adeb7659", "fixCommitParentSHA1": "e72a2c5e0fe6670f1fedf8fb09f2be9c5fbcf916", "bugFilePath": "src/main/java/com/alibaba/druid/sql/parser/Lexer.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/sql/parser/Lexer.java b/src/main/java/com/alibaba/druid/sql/parser/Lexer.java\nindex 12ccd10..e4aa41f 100644\n--- a/src/main/java/com/alibaba/druid/sql/parser/Lexer.java\n+++ b/src/main/java/com/alibaba/druid/sql/parser/Lexer.java\n@@ -808,7 +808,7 @@\n         token = Token.LITERAL_HEX;\r\n     }\r\n \r\n-    public String hexString() throws NumberFormatException {\r\n+    public String hexString() {\r\n         return new String(buf, np, sp);\r\n     }\r\n \r\n@@ -876,7 +876,7 @@\n     }\r\n \r\n     // QS_TODO negative number is invisible for lexer\r\n-    public Number integerValue() throws NumberFormatException {\r\n+    public Number integerValue() {\r\n         long result = 0;\r\n         boolean negative = false;\r\n         int i = np, max = np + sp;\r\n", "projectName": "alibaba.druid", "bugLineNum": 811, "bugNodeStartChar": 22686, "bugNodeLength": 104, "fixLineNum": 811, "fixNodeStartChar": 21876, "fixNodeLength": 73, "sourceBeforeFix": "1", "sourceAfterFix": "1"}, {"bugType": "DELETE_THROWS_EXCEPTION", "fixCommitSHA1": "f60f4dbdad22bbd4ef94ce1b01eb63f9adeb7659", "fixCommitParentSHA1": "e72a2c5e0fe6670f1fedf8fb09f2be9c5fbcf916", "bugFilePath": "src/main/java/com/alibaba/druid/sql/parser/Lexer.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/sql/parser/Lexer.java b/src/main/java/com/alibaba/druid/sql/parser/Lexer.java\nindex 12ccd10..e4aa41f 100644\n--- a/src/main/java/com/alibaba/druid/sql/parser/Lexer.java\n+++ b/src/main/java/com/alibaba/druid/sql/parser/Lexer.java\n@@ -808,7 +808,7 @@\n         token = Token.LITERAL_HEX;\r\n     }\r\n \r\n-    public String hexString() throws NumberFormatException {\r\n+    public String hexString() {\r\n         return new String(buf, np, sp);\r\n     }\r\n \r\n@@ -876,7 +876,7 @@\n     }\r\n \r\n     // QS_TODO negative number is invisible for lexer\r\n-    public Number integerValue() throws NumberFormatException {\r\n+    public Number integerValue() {\r\n         long result = 0;\r\n         boolean negative = false;\r\n         int i = np, max = np + sp;\r\n", "projectName": "alibaba.druid", "bugLineNum": 879, "bugNodeStartChar": 24522, "bugNodeLength": 1529, "fixLineNum": 879, "fixNodeStartChar": 23644, "fixNodeLength": 1451, "sourceBeforeFix": "1", "sourceAfterFix": "1"}, {"bugType": "DELETE_THROWS_EXCEPTION", "fixCommitSHA1": "f60f4dbdad22bbd4ef94ce1b01eb63f9adeb7659", "fixCommitParentSHA1": "e72a2c5e0fe6670f1fedf8fb09f2be9c5fbcf916", "bugFilePath": "src/main/java/com/alibaba/druid/support/spring/stat/BeanTypeAutoProxyCreator.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/support/spring/stat/BeanTypeAutoProxyCreator.java b/src/main/java/com/alibaba/druid/support/spring/stat/BeanTypeAutoProxyCreator.java\nindex 42409d8..6ce7f98 100644\n--- a/src/main/java/com/alibaba/druid/support/spring/stat/BeanTypeAutoProxyCreator.java\n+++ b/src/main/java/com/alibaba/druid/support/spring/stat/BeanTypeAutoProxyCreator.java\n@@ -52,7 +52,7 @@\n         this.targetBeanType = targetClass;\n     }\n \n-    public void setApplicationContext(ApplicationContext context) throws BeansException {\n+    public void setApplicationContext(ApplicationContext context) {\n         this.context = context;\n     }\n \n", "projectName": "alibaba.druid", "bugLineNum": 55, "bugNodeStartChar": 1961, "bugNodeLength": 123, "fixLineNum": 55, "fixNodeStartChar": 1961, "fixNodeLength": 101, "sourceBeforeFix": "1", "sourceAfterFix": "1"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "a7ae8848fabd6fc4d7c0ee04d80eadc9ec02d43b", "fixCommitParentSHA1": "95ccb66f11f1097e8658ae6bf46e330a1ecaf7b6", "bugFilePath": "src/main/java/com/alibaba/druid/util/ConcurrentIdentityHashMap.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/util/ConcurrentIdentityHashMap.java b/src/main/java/com/alibaba/druid/util/ConcurrentIdentityHashMap.java\nindex b1d03c5..1b7b8ca 100644\n--- a/src/main/java/com/alibaba/druid/util/ConcurrentIdentityHashMap.java\n+++ b/src/main/java/com/alibaba/druid/util/ConcurrentIdentityHashMap.java\n@@ -39,7 +39,7 @@\n  * @param <K> the type of keys maintained by this map\r\n  * @param <V> the type of mapped values\r\n  */\r\n-public final class ConcurrentIdentityHashMap<K, V> extends AbstractMap<K, V> implements ConcurrentMap<K, V> {\r\n+public class ConcurrentIdentityHashMap<K, V> extends AbstractMap<K, V> implements ConcurrentMap<K, V> {\r\n \r\n     /**\r\n      * The default initial capacity for this table, used when not otherwise specified in a constructor.\r\n@@ -853,7 +853,7 @@\n      * @param m mappings to be stored in this map\r\n      */\r\n     @Override\r\n-    public void putAll(Map<? extends K, ? extends V> m) {\r\n+    public final void putAll(Map<? extends K, ? extends V> m) {\r\n         for (Map.Entry<? extends K, ? extends V> e : m.entrySet()) {\r\n             put(e.getKey(), e.getValue());\r\n         }\r\n", "projectName": "alibaba.druid", "bugLineNum": 30, "bugNodeStartChar": 1039, "bugNodeLength": 44235, "fixLineNum": 30, "fixNodeStartChar": 1010, "fixNodeLength": 42991, "sourceBeforeFix": "17", "sourceAfterFix": "1"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "a7ae8848fabd6fc4d7c0ee04d80eadc9ec02d43b", "fixCommitParentSHA1": "95ccb66f11f1097e8658ae6bf46e330a1ecaf7b6", "bugFilePath": "src/main/java/com/alibaba/druid/util/ConcurrentIdentityHashMap.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/util/ConcurrentIdentityHashMap.java b/src/main/java/com/alibaba/druid/util/ConcurrentIdentityHashMap.java\nindex b1d03c5..1b7b8ca 100644\n--- a/src/main/java/com/alibaba/druid/util/ConcurrentIdentityHashMap.java\n+++ b/src/main/java/com/alibaba/druid/util/ConcurrentIdentityHashMap.java\n@@ -39,7 +39,7 @@\n  * @param <K> the type of keys maintained by this map\r\n  * @param <V> the type of mapped values\r\n  */\r\n-public final class ConcurrentIdentityHashMap<K, V> extends AbstractMap<K, V> implements ConcurrentMap<K, V> {\r\n+public class ConcurrentIdentityHashMap<K, V> extends AbstractMap<K, V> implements ConcurrentMap<K, V> {\r\n \r\n     /**\r\n      * The default initial capacity for this table, used when not otherwise specified in a constructor.\r\n@@ -853,7 +853,7 @@\n      * @param m mappings to be stored in this map\r\n      */\r\n     @Override\r\n-    public void putAll(Map<? extends K, ? extends V> m) {\r\n+    public final void putAll(Map<? extends K, ? extends V> m) {\r\n         for (Map.Entry<? extends K, ? extends V> e : m.entrySet()) {\r\n             put(e.getKey(), e.getValue());\r\n         }\r\n", "projectName": "alibaba.druid", "bugLineNum": 849, "bugNodeStartChar": 33254, "bugNodeLength": 463, "fixLineNum": 849, "fixNodeStartChar": 32406, "fixNodeLength": 458, "sourceBeforeFix": "1", "sourceAfterFix": "17"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "6c4cfa7a18d589462f14a2165932d17e46c8f510", "fixCommitParentSHA1": "b3649c5a1929c0ee403828b757a650641cf2ab36", "bugFilePath": "src/main/java/com/alibaba/druid/pool/DruidPooledConnection.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/pool/DruidPooledConnection.java b/src/main/java/com/alibaba/druid/pool/DruidPooledConnection.java\nindex 5809a85..3fae003 100644\n--- a/src/main/java/com/alibaba/druid/pool/DruidPooledConnection.java\n+++ b/src/main/java/com/alibaba/druid/pool/DruidPooledConnection.java\n@@ -57,7 +57,7 @@\n     private final static Log   LOG         = LogFactory.getLog(DruidPooledConnection.class);\r\n \r\n     protected Connection       conn;\r\n-    protected DruidConnectionHolder holder;\r\n+    protected volatile DruidConnectionHolder holder;\r\n     protected TransactionInfo  transactionInfo;\r\n     private final boolean      dupCloseLogEnable;\r\n     private boolean            traceEnable = false;\r\n", "projectName": "alibaba.druid", "bugLineNum": 60, "bugNodeStartChar": 2121, "bugNodeLength": 39, "fixLineNum": 60, "fixNodeStartChar": 2062, "fixNodeLength": 48, "sourceBeforeFix": "4", "sourceAfterFix": "68"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "1b6db95bb43cfe3f3ac92f55f96cd35fff73317a", "fixCommitParentSHA1": "e6e1a276f58b1e843033b6bffb927d2afb8e8c36", "bugFilePath": "src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java", "fixPatch": "diff --git a/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java b/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java\nindex 206b355..d004cc5 100644\n--- a/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java\n+++ b/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java\n@@ -40,12 +40,12 @@\n             }\r\n         };\r\n \r\n-        Assert.assertEquals(0, raw.getParameters().size());\r\n+        Assert.assertEquals(0, raw.getOutParameters().size());\r\n         stmt.registerOutParameter(1, Types.INTEGER);\r\n-        Assert.assertEquals(1, raw.getParameters().size());\r\n+        Assert.assertEquals(1, raw.getOutParameters().size());\r\n \r\n         stmt.registerOutParameter(2, Types.DECIMAL, 10);\r\n-        Assert.assertEquals(2, raw.getParameters().size());\r\n+        Assert.assertEquals(2, raw.getOutParameters().size());\r\n     }\r\n \r\n     public void test_basic() throws Exception {\r\n", "projectName": "alibaba.druid", "bugLineNum": 43, "bugNodeStartChar": 1449, "bugNodeLength": 19, "fixLineNum": 43, "fixNodeStartChar": 1407, "fixNodeLength": 22, "sourceBeforeFix": "raw.getParameters()", "sourceAfterFix": "raw.getOutParameters()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "1b6db95bb43cfe3f3ac92f55f96cd35fff73317a", "fixCommitParentSHA1": "e6e1a276f58b1e843033b6bffb927d2afb8e8c36", "bugFilePath": "src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java", "fixPatch": "diff --git a/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java b/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java\nindex 206b355..d004cc5 100644\n--- a/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java\n+++ b/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java\n@@ -40,12 +40,12 @@\n             }\r\n         };\r\n \r\n-        Assert.assertEquals(0, raw.getParameters().size());\r\n+        Assert.assertEquals(0, raw.getOutParameters().size());\r\n         stmt.registerOutParameter(1, Types.INTEGER);\r\n-        Assert.assertEquals(1, raw.getParameters().size());\r\n+        Assert.assertEquals(1, raw.getOutParameters().size());\r\n \r\n         stmt.registerOutParameter(2, Types.DECIMAL, 10);\r\n-        Assert.assertEquals(2, raw.getParameters().size());\r\n+        Assert.assertEquals(2, raw.getOutParameters().size());\r\n     }\r\n \r\n     public void test_basic() throws Exception {\r\n", "projectName": "alibaba.druid", "bugLineNum": 43, "bugNodeStartChar": 1449, "bugNodeLength": 19, "fixLineNum": 43, "fixNodeStartChar": 1407, "fixNodeLength": 22, "sourceBeforeFix": "raw.getParameters()", "sourceAfterFix": "raw.getOutParameters()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "1b6db95bb43cfe3f3ac92f55f96cd35fff73317a", "fixCommitParentSHA1": "e6e1a276f58b1e843033b6bffb927d2afb8e8c36", "bugFilePath": "src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java", "fixPatch": "diff --git a/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java b/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java\nindex 206b355..d004cc5 100644\n--- a/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java\n+++ b/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java\n@@ -40,12 +40,12 @@\n             }\r\n         };\r\n \r\n-        Assert.assertEquals(0, raw.getParameters().size());\r\n+        Assert.assertEquals(0, raw.getOutParameters().size());\r\n         stmt.registerOutParameter(1, Types.INTEGER);\r\n-        Assert.assertEquals(1, raw.getParameters().size());\r\n+        Assert.assertEquals(1, raw.getOutParameters().size());\r\n \r\n         stmt.registerOutParameter(2, Types.DECIMAL, 10);\r\n-        Assert.assertEquals(2, raw.getParameters().size());\r\n+        Assert.assertEquals(2, raw.getOutParameters().size());\r\n     }\r\n \r\n     public void test_basic() throws Exception {\r\n", "projectName": "alibaba.druid", "bugLineNum": 45, "bugNodeStartChar": 1564, "bugNodeLength": 19, "fixLineNum": 45, "fixNodeStartChar": 1520, "fixNodeLength": 22, "sourceBeforeFix": "raw.getParameters()", "sourceAfterFix": "raw.getOutParameters()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "1b6db95bb43cfe3f3ac92f55f96cd35fff73317a", "fixCommitParentSHA1": "e6e1a276f58b1e843033b6bffb927d2afb8e8c36", "bugFilePath": "src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java", "fixPatch": "diff --git a/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java b/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java\nindex 206b355..d004cc5 100644\n--- a/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java\n+++ b/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java\n@@ -40,12 +40,12 @@\n             }\r\n         };\r\n \r\n-        Assert.assertEquals(0, raw.getParameters().size());\r\n+        Assert.assertEquals(0, raw.getOutParameters().size());\r\n         stmt.registerOutParameter(1, Types.INTEGER);\r\n-        Assert.assertEquals(1, raw.getParameters().size());\r\n+        Assert.assertEquals(1, raw.getOutParameters().size());\r\n \r\n         stmt.registerOutParameter(2, Types.DECIMAL, 10);\r\n-        Assert.assertEquals(2, raw.getParameters().size());\r\n+        Assert.assertEquals(2, raw.getOutParameters().size());\r\n     }\r\n \r\n     public void test_basic() throws Exception {\r\n", "projectName": "alibaba.druid", "bugLineNum": 45, "bugNodeStartChar": 1564, "bugNodeLength": 19, "fixLineNum": 45, "fixNodeStartChar": 1520, "fixNodeLength": 22, "sourceBeforeFix": "raw.getParameters()", "sourceAfterFix": "raw.getOutParameters()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "1b6db95bb43cfe3f3ac92f55f96cd35fff73317a", "fixCommitParentSHA1": "e6e1a276f58b1e843033b6bffb927d2afb8e8c36", "bugFilePath": "src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java", "fixPatch": "diff --git a/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java b/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java\nindex 206b355..d004cc5 100644\n--- a/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java\n+++ b/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java\n@@ -40,12 +40,12 @@\n             }\r\n         };\r\n \r\n-        Assert.assertEquals(0, raw.getParameters().size());\r\n+        Assert.assertEquals(0, raw.getOutParameters().size());\r\n         stmt.registerOutParameter(1, Types.INTEGER);\r\n-        Assert.assertEquals(1, raw.getParameters().size());\r\n+        Assert.assertEquals(1, raw.getOutParameters().size());\r\n \r\n         stmt.registerOutParameter(2, Types.DECIMAL, 10);\r\n-        Assert.assertEquals(2, raw.getParameters().size());\r\n+        Assert.assertEquals(2, raw.getOutParameters().size());\r\n     }\r\n \r\n     public void test_basic() throws Exception {\r\n", "projectName": "alibaba.druid", "bugLineNum": 48, "bugNodeStartChar": 1685, "bugNodeLength": 19, "fixLineNum": 48, "fixNodeStartChar": 1638, "fixNodeLength": 22, "sourceBeforeFix": "raw.getParameters()", "sourceAfterFix": "raw.getOutParameters()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "1b6db95bb43cfe3f3ac92f55f96cd35fff73317a", "fixCommitParentSHA1": "e6e1a276f58b1e843033b6bffb927d2afb8e8c36", "bugFilePath": "src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java", "fixPatch": "diff --git a/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java b/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java\nindex 206b355..d004cc5 100644\n--- a/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java\n+++ b/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java\n@@ -40,12 +40,12 @@\n             }\r\n         };\r\n \r\n-        Assert.assertEquals(0, raw.getParameters().size());\r\n+        Assert.assertEquals(0, raw.getOutParameters().size());\r\n         stmt.registerOutParameter(1, Types.INTEGER);\r\n-        Assert.assertEquals(1, raw.getParameters().size());\r\n+        Assert.assertEquals(1, raw.getOutParameters().size());\r\n \r\n         stmt.registerOutParameter(2, Types.DECIMAL, 10);\r\n-        Assert.assertEquals(2, raw.getParameters().size());\r\n+        Assert.assertEquals(2, raw.getOutParameters().size());\r\n     }\r\n \r\n     public void test_basic() throws Exception {\r\n", "projectName": "alibaba.druid", "bugLineNum": 48, "bugNodeStartChar": 1685, "bugNodeLength": 19, "fixLineNum": 48, "fixNodeStartChar": 1638, "fixNodeLength": 22, "sourceBeforeFix": "raw.getParameters()", "sourceAfterFix": "raw.getOutParameters()"}, {"bugType": "SWAP_BOOLEAN_LITERAL", "fixCommitSHA1": "ed5a73fae62dba1bae5786445be7e535f9a3cfd1", "fixCommitParentSHA1": "a49d301514ca14bc78c02445db9bc9e5dcc9b177", "bugFilePath": "src/main/java/com/alibaba/druid/pool/DruidDataSourceC3P0Adapter.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/pool/DruidDataSourceC3P0Adapter.java b/src/main/java/com/alibaba/druid/pool/DruidDataSourceC3P0Adapter.java\nindex da2c969..713fa70 100644\n--- a/src/main/java/com/alibaba/druid/pool/DruidDataSourceC3P0Adapter.java\n+++ b/src/main/java/com/alibaba/druid/pool/DruidDataSourceC3P0Adapter.java\n@@ -25,7 +25,7 @@\n         this.setAcquireIncrement(3);\r\n         this.setAcquireIncrement(30);\r\n         this.setAcquireRetryDelay(1000);\r\n-        this.setAutoCommitOnClose(false);\r\n+        this.setAutoCommitOnClose(true);\r\n         this.setAutomaticTestTable(null);\r\n         this.setCheckoutTimeout(0);\r\n         this.setDebugUnreturnedConnectionStackTraces(false);\r\n", "projectName": "alibaba.druid", "bugLineNum": 28, "bugNodeStartChar": 783, "bugNodeLength": 32, "fixLineNum": 28, "fixNodeStartChar": 756, "fixNodeLength": 31, "sourceBeforeFix": "this.setAutoCommitOnClose(false)", "sourceAfterFix": "this.setAutoCommitOnClose(true)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "a50af4dbd590499463b96fbb2799974afbf4c7dd", "fixCommitParentSHA1": "e50f491caa752cd92ad7393414ad37b28279a0f8", "bugFilePath": "src/main/java/com/alibaba/druid/util/JdbcUtils.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/util/JdbcUtils.java b/src/main/java/com/alibaba/druid/util/JdbcUtils.java\nindex b451b85..14c0fd5 100644\n--- a/src/main/java/com/alibaba/druid/util/JdbcUtils.java\n+++ b/src/main/java/com/alibaba/druid/util/JdbcUtils.java\n@@ -595,7 +595,7 @@\n                 Map<String, Object> row = new LinkedHashMap<String, Object>();\r\n \r\n                 for (int i = 0, size = rsMeta.getColumnCount(); i < size; ++i) {\r\n-                    String columName = rsMeta.getColumnName(i + 1);\r\n+                    String columName = rsMeta.getColumnLabel(i + 1);\r\n                     Object value = rs.getObject(i + 1);\r\n                     row.put(columName, value);\r\n                 }\r\n", "projectName": "alibaba.druid", "bugLineNum": 598, "bugNodeStartChar": 20747, "bugNodeLength": 27, "fixLineNum": 598, "fixNodeStartChar": 20150, "fixNodeLength": 28, "sourceBeforeFix": "rsMeta.getColumnName(i + 1)", "sourceAfterFix": "rsMeta.getColumnLabel(i + 1)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "a50af4dbd590499463b96fbb2799974afbf4c7dd", "fixCommitParentSHA1": "e50f491caa752cd92ad7393414ad37b28279a0f8", "bugFilePath": "src/main/java/com/alibaba/druid/util/JdbcUtils.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/util/JdbcUtils.java b/src/main/java/com/alibaba/druid/util/JdbcUtils.java\nindex b451b85..14c0fd5 100644\n--- a/src/main/java/com/alibaba/druid/util/JdbcUtils.java\n+++ b/src/main/java/com/alibaba/druid/util/JdbcUtils.java\n@@ -595,7 +595,7 @@\n                 Map<String, Object> row = new LinkedHashMap<String, Object>();\r\n \r\n                 for (int i = 0, size = rsMeta.getColumnCount(); i < size; ++i) {\r\n-                    String columName = rsMeta.getColumnName(i + 1);\r\n+                    String columName = rsMeta.getColumnLabel(i + 1);\r\n                     Object value = rs.getObject(i + 1);\r\n                     row.put(columName, value);\r\n                 }\r\n", "projectName": "alibaba.druid", "bugLineNum": 598, "bugNodeStartChar": 20747, "bugNodeLength": 27, "fixLineNum": 598, "fixNodeStartChar": 20150, "fixNodeLength": 28, "sourceBeforeFix": "rsMeta.getColumnName(i + 1)", "sourceAfterFix": "rsMeta.getColumnLabel(i + 1)"}, {"bugType": "SWAP_BOOLEAN_LITERAL", "fixCommitSHA1": "bf98dcad6cd2048935d2fed2847ce24622cc418a", "fixCommitParentSHA1": "c1ee9ec8708f71cc3b0744542dd79bd673c92e9a", "bugFilePath": "src/main/java/com/alibaba/druid/stat/JdbcDataSourceStat.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/stat/JdbcDataSourceStat.java b/src/main/java/com/alibaba/druid/stat/JdbcDataSourceStat.java\nindex bc83ed2..d87e8ac 100644\n--- a/src/main/java/com/alibaba/druid/stat/JdbcDataSourceStat.java\n+++ b/src/main/java/com/alibaba/druid/stat/JdbcDataSourceStat.java\n@@ -47,7 +47,7 @@\n     private final LinkedHashMap<String, JdbcSqlStat>            sqlStatMap     = new LinkedHashMap<String, JdbcSqlStat>(\r\n                                                                                                                         maxSize,\r\n                                                                                                                         0.75f,\r\n-                                                                                                                        true);\r\n+                                                                                                                        false);\r\n \r\n     // private final ConcurrentMap<String, JdbcSqlStat> sqlStatMap = new ConcurrentHashMap<String, JdbcSqlStat>();\r\n \r\n", "projectName": "alibaba.druid", "bugLineNum": 47, "bugNodeStartChar": 2117, "bugNodeLength": 424, "fixLineNum": 47, "fixNodeStartChar": 2071, "fixNodeLength": 422, "sourceBeforeFix": "new LinkedHashMap<String,JdbcSqlStat>(maxSize,0.75f,true)", "sourceAfterFix": "new LinkedHashMap<String,JdbcSqlStat>(maxSize,0.75f,false)"}, {"bugType": "SWAP_BOOLEAN_LITERAL", "fixCommitSHA1": "bf98dcad6cd2048935d2fed2847ce24622cc418a", "fixCommitParentSHA1": "c1ee9ec8708f71cc3b0744542dd79bd673c92e9a", "bugFilePath": "src/main/java/com/alibaba/druid/wall/WallProvider.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/wall/WallProvider.java b/src/main/java/com/alibaba/druid/wall/WallProvider.java\nindex b99f34a..31e5c53 100644\n--- a/src/main/java/com/alibaba/druid/wall/WallProvider.java\n+++ b/src/main/java/com/alibaba/druid/wall/WallProvider.java\n@@ -40,7 +40,7 @@\n         lock.writeLock().lock();\r\n         try {\r\n             if (whiteList == null) {\r\n-                whiteList = new LinkedHashMap<String, Object>(whileListMaxSize, 0.75f, true);\r\n+                whiteList = new LinkedHashMap<String, Object>(whileListMaxSize, 0.75f, false);\r\n             }\r\n \r\n             whiteList.put(sql, PRESENT);\r\n", "projectName": "alibaba.druid", "bugLineNum": 43, "bugNodeStartChar": 1342, "bugNodeLength": 64, "fixLineNum": 43, "fixNodeStartChar": 1300, "fixNodeLength": 65, "sourceBeforeFix": "new LinkedHashMap<String,Object>(whileListMaxSize,0.75f,true)", "sourceAfterFix": "new LinkedHashMap<String,Object>(whileListMaxSize,0.75f,false)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "474f8ec97f7750303807e5b73b78b8f78c7c6d95", "fixCommitParentSHA1": "9eaf49542d1688cc9946e96f208a5825162e1895", "bugFilePath": "src/test/java/com/alibaba/druid/bvt/pool/TestIdle3_Concurrent.java", "fixPatch": "diff --git a/src/test/java/com/alibaba/druid/bvt/pool/TestIdle3_Concurrent.java b/src/test/java/com/alibaba/druid/bvt/pool/TestIdle3_Concurrent.java\nindex e624240..bc8c2f6 100644\n--- a/src/test/java/com/alibaba/druid/bvt/pool/TestIdle3_Concurrent.java\n+++ b/src/test/java/com/alibaba/druid/bvt/pool/TestIdle3_Concurrent.java\n@@ -60,7 +60,7 @@\n \n         {\n             // \u5e76\u53d1\u521b\u5efa14\u4e2a\n-            concurrent(driver, dataSource, 100);\n+            concurrent(driver, dataSource, 30);\n         }\n \n         // \u8fde\u7eed\u6253\u5f00\u5173\u95ed\u5355\u4e2a\u8fde\u63a5\n", "projectName": "alibaba.druid", "bugLineNum": 63, "bugNodeStartChar": 2444, "bugNodeLength": 35, "fixLineNum": 63, "fixNodeStartChar": 2444, "fixNodeLength": 34, "sourceBeforeFix": "concurrent(driver,dataSource,100)", "sourceAfterFix": "concurrent(driver,dataSource,30)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "6b819669e14cb1f32bb5bd895493f44313ad1564", "fixCommitParentSHA1": "43405cda89313078d11c0aa1ab4dc5645fb32ff5", "bugFilePath": "src/test/java/com/alibaba/druid/bvt/pool/TestConcurrent.java", "fixPatch": "diff --git a/src/test/java/com/alibaba/druid/bvt/pool/TestConcurrent.java b/src/test/java/com/alibaba/druid/bvt/pool/TestConcurrent.java\nindex d6c21d5..5ecc0b2 100644\n--- a/src/test/java/com/alibaba/druid/bvt/pool/TestConcurrent.java\n+++ b/src/test/java/com/alibaba/druid/bvt/pool/TestConcurrent.java\n@@ -105,32 +105,32 @@\n         }\n \n         // 2\u4e2a\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(2);\n         }\n \n         // 5\u4e2a\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(5);\n         }\n \n         // 10\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(10);\n         }\n \n         // 20\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(20);\n         }\n \n         // 50\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(50);\n         }\n \n         // 100\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(100);\n         }\n     }\n", "projectName": "alibaba.druid", "bugLineNum": 108, "bugNodeStartChar": 3767, "bugNodeLength": 6, "fixLineNum": 108, "fixNodeStartChar": 3767, "fixNodeLength": 5, "sourceBeforeFix": "i < 10", "sourceAfterFix": "i < 3"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "6b819669e14cb1f32bb5bd895493f44313ad1564", "fixCommitParentSHA1": "43405cda89313078d11c0aa1ab4dc5645fb32ff5", "bugFilePath": "src/test/java/com/alibaba/druid/bvt/pool/TestConcurrent.java", "fixPatch": "diff --git a/src/test/java/com/alibaba/druid/bvt/pool/TestConcurrent.java b/src/test/java/com/alibaba/druid/bvt/pool/TestConcurrent.java\nindex d6c21d5..5ecc0b2 100644\n--- a/src/test/java/com/alibaba/druid/bvt/pool/TestConcurrent.java\n+++ b/src/test/java/com/alibaba/druid/bvt/pool/TestConcurrent.java\n@@ -105,32 +105,32 @@\n         }\n \n         // 2\u4e2a\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(2);\n         }\n \n         // 5\u4e2a\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(5);\n         }\n \n         // 10\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(10);\n         }\n \n         // 20\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(20);\n         }\n \n         // 50\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(50);\n         }\n \n         // 100\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(100);\n         }\n     }\n", "projectName": "alibaba.druid", "bugLineNum": 113, "bugNodeStartChar": 3860, "bugNodeLength": 6, "fixLineNum": 113, "fixNodeStartChar": 3860, "fixNodeLength": 5, "sourceBeforeFix": "i < 10", "sourceAfterFix": "i < 3"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "6b819669e14cb1f32bb5bd895493f44313ad1564", "fixCommitParentSHA1": "43405cda89313078d11c0aa1ab4dc5645fb32ff5", "bugFilePath": "src/test/java/com/alibaba/druid/bvt/pool/TestConcurrent.java", "fixPatch": "diff --git a/src/test/java/com/alibaba/druid/bvt/pool/TestConcurrent.java b/src/test/java/com/alibaba/druid/bvt/pool/TestConcurrent.java\nindex d6c21d5..5ecc0b2 100644\n--- a/src/test/java/com/alibaba/druid/bvt/pool/TestConcurrent.java\n+++ b/src/test/java/com/alibaba/druid/bvt/pool/TestConcurrent.java\n@@ -105,32 +105,32 @@\n         }\n \n         // 2\u4e2a\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(2);\n         }\n \n         // 5\u4e2a\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(5);\n         }\n \n         // 10\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(10);\n         }\n \n         // 20\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(20);\n         }\n \n         // 50\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(50);\n         }\n \n         // 100\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(100);\n         }\n     }\n", "projectName": "alibaba.druid", "bugLineNum": 118, "bugNodeStartChar": 3953, "bugNodeLength": 6, "fixLineNum": 118, "fixNodeStartChar": 3953, "fixNodeLength": 5, "sourceBeforeFix": "i < 10", "sourceAfterFix": "i < 3"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "6b819669e14cb1f32bb5bd895493f44313ad1564", "fixCommitParentSHA1": "43405cda89313078d11c0aa1ab4dc5645fb32ff5", "bugFilePath": "src/test/java/com/alibaba/druid/bvt/pool/TestConcurrent.java", "fixPatch": "diff --git a/src/test/java/com/alibaba/druid/bvt/pool/TestConcurrent.java b/src/test/java/com/alibaba/druid/bvt/pool/TestConcurrent.java\nindex d6c21d5..5ecc0b2 100644\n--- a/src/test/java/com/alibaba/druid/bvt/pool/TestConcurrent.java\n+++ b/src/test/java/com/alibaba/druid/bvt/pool/TestConcurrent.java\n@@ -105,32 +105,32 @@\n         }\n \n         // 2\u4e2a\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(2);\n         }\n \n         // 5\u4e2a\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(5);\n         }\n \n         // 10\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(10);\n         }\n \n         // 20\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(20);\n         }\n \n         // 50\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(50);\n         }\n \n         // 100\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(100);\n         }\n     }\n", "projectName": "alibaba.druid", "bugLineNum": 123, "bugNodeStartChar": 4047, "bugNodeLength": 6, "fixLineNum": 123, "fixNodeStartChar": 4047, "fixNodeLength": 5, "sourceBeforeFix": "i < 10", "sourceAfterFix": "i < 3"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "6b819669e14cb1f32bb5bd895493f44313ad1564", "fixCommitParentSHA1": "43405cda89313078d11c0aa1ab4dc5645fb32ff5", "bugFilePath": "src/test/java/com/alibaba/druid/bvt/pool/TestConcurrent.java", "fixPatch": "diff --git a/src/test/java/com/alibaba/druid/bvt/pool/TestConcurrent.java b/src/test/java/com/alibaba/druid/bvt/pool/TestConcurrent.java\nindex d6c21d5..5ecc0b2 100644\n--- a/src/test/java/com/alibaba/druid/bvt/pool/TestConcurrent.java\n+++ b/src/test/java/com/alibaba/druid/bvt/pool/TestConcurrent.java\n@@ -105,32 +105,32 @@\n         }\n \n         // 2\u4e2a\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(2);\n         }\n \n         // 5\u4e2a\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(5);\n         }\n \n         // 10\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(10);\n         }\n \n         // 20\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(20);\n         }\n \n         // 50\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(50);\n         }\n \n         // 100\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(100);\n         }\n     }\n", "projectName": "alibaba.druid", "bugLineNum": 128, "bugNodeStartChar": 4141, "bugNodeLength": 6, "fixLineNum": 128, "fixNodeStartChar": 4141, "fixNodeLength": 5, "sourceBeforeFix": "i < 10", "sourceAfterFix": "i < 3"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "6b819669e14cb1f32bb5bd895493f44313ad1564", "fixCommitParentSHA1": "43405cda89313078d11c0aa1ab4dc5645fb32ff5", "bugFilePath": "src/test/java/com/alibaba/druid/bvt/pool/TestConcurrent.java", "fixPatch": "diff --git a/src/test/java/com/alibaba/druid/bvt/pool/TestConcurrent.java b/src/test/java/com/alibaba/druid/bvt/pool/TestConcurrent.java\nindex d6c21d5..5ecc0b2 100644\n--- a/src/test/java/com/alibaba/druid/bvt/pool/TestConcurrent.java\n+++ b/src/test/java/com/alibaba/druid/bvt/pool/TestConcurrent.java\n@@ -105,32 +105,32 @@\n         }\n \n         // 2\u4e2a\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(2);\n         }\n \n         // 5\u4e2a\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(5);\n         }\n \n         // 10\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(10);\n         }\n \n         // 20\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(20);\n         }\n \n         // 50\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(50);\n         }\n \n         // 100\u5e76\u53d1\n-        for (int i = 0; i < 10; ++i) {\n+        for (int i = 0; i < 3; ++i) {\n             concurrent(100);\n         }\n     }\n", "projectName": "alibaba.druid", "bugLineNum": 133, "bugNodeStartChar": 4236, "bugNodeLength": 6, "fixLineNum": 133, "fixNodeStartChar": 4236, "fixNodeLength": 5, "sourceBeforeFix": "i < 10", "sourceAfterFix": "i < 3"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "221156e25c6a8368fa7cd26c7b46660a3c71dda4", "fixCommitParentSHA1": "1fb466f75d3fdd3d1404656e706cf72b0a66eb64", "bugFilePath": "src/main/java/com/alibaba/druid/pool/DruidDataSource.java", "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\nindex ca316b7..a68ca21 100644\n--- a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n+++ b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n@@ -548,7 +548,7 @@\n         long nanos = unit.toNanos(timeout);\n \n         for (;;) {\n-            if (activeCount == maxActive) {\n+            if (activeCount >= maxActive) {\n                 long startNano = System.nanoTime();\n                 notMaxActive.awaitNanos(nanos);\n                 nanos -= (System.nanoTime() - startNano);\n", "projectName": "alibaba.druid", "bugLineNum": 551, "bugNodeStartChar": 19398, "bugNodeLength": 24, "fixLineNum": 551, "fixNodeStartChar": 19398, "fixNodeLength": 24, "sourceBeforeFix": "activeCount == maxActive", "sourceAfterFix": "activeCount >= maxActive"}]