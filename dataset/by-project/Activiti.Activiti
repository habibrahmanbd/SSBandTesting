[
  {
    "bugType": "CHANGE_OPERATOR",
    "fixCommitSHA1": "aa90e04b5e6eb7f6d46dde16867196329568324e",
    "fixCommitParentSHA1": "46d3a4007fe1418d53baabc16dec39275079684b",
    "bugFilePath": "modules/activiti-form-engine/src/main/java/org/activiti/form/engine/impl/cmd/GetRuntimeFormDefinitionCmd.java",
    "fixPatch": "diff --git a/modules/activiti-form-engine/src/main/java/org/activiti/form/engine/impl/cmd/GetRuntimeFormDefinitionCmd.java b/modules/activiti-form-engine/src/main/java/org/activiti/form/engine/impl/cmd/GetRuntimeFormDefinitionCmd.java\nindex a71cd4c..93a8693 100644\n--- a/modules/activiti-form-engine/src/main/java/org/activiti/form/engine/impl/cmd/GetRuntimeFormDefinitionCmd.java\n+++ b/modules/activiti-form-engine/src/main/java/org/activiti/form/engine/impl/cmd/GetRuntimeFormDefinitionCmd.java\n@@ -181,7 +181,7 @@\n       for (SubmittedForm otherForm : submittedForms) {\n         try {\n           JsonNode submittedNode = formEngineConfiguration.getObjectMapper().readTree(otherForm.getFormValueBytes());\n-          if (submittedNode == null || submittedNode.get(\"values\") != null) {\n+          if (submittedNode == null || submittedNode.get(\"values\") == null) {\n             continue;\n           }\n          \n@@ -221,7 +221,7 @@\n         try {\n           if (StringUtils.isNotEmpty(fieldValue)) {\n             LocalDate dateValue = LocalDate.parse(fieldValue);\n-            variables.put(field.getId(), dateValue);\n+            variables.put(field.getId(), dateValue.toString(\"yyyy-M-d\"));\n           }\n         } catch (Exception e) {\n           logger.error(\"Error parsing form date value for process instance \" + processInstanceId + \" with value \" + fieldValue, e);\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 184,
    "bugNodeStartChar": 8444,
    "bugNodeLength": 35,
    "fixLineNum": 184,
    "fixNodeStartChar": 8444,
    "fixNodeLength": 35,
    "sourceBeforeFix": "submittedNode.get(\"values\") != null",
    "sourceAfterFix": "submittedNode.get(\"values\") == null"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "46d3a4007fe1418d53baabc16dec39275079684b",
    "fixCommitParentSHA1": "4a51f2c95fc1ab5eb6c32c32d8d31dc078fea630",
    "bugFilePath": "modules/activiti-secure-service-tasks/src/test/java/org/activiti/test/serviceTask/secure/SecureServiceTaskBaseTest.java",
    "fixPatch": "diff --git a/modules/activiti-secure-service-tasks/src/test/java/org/activiti/test/serviceTask/secure/SecureServiceTaskBaseTest.java b/modules/activiti-secure-service-tasks/src/test/java/org/activiti/test/serviceTask/secure/SecureServiceTaskBaseTest.java\nindex 0531c3e..e515670b 100644\n--- a/modules/activiti-secure-service-tasks/src/test/java/org/activiti/test/serviceTask/secure/SecureServiceTaskBaseTest.java\n+++ b/modules/activiti-secure-service-tasks/src/test/java/org/activiti/test/serviceTask/secure/SecureServiceTaskBaseTest.java\n@@ -28,7 +28,7 @@\n     @Override\n     protected List<ProcessEngineConfigurator> getConfigurators() {\n         ProcessEngineConfigurator configurator = new SecureServiceTaskConfigurator()\n-                .setWhiteListedShellCommands(new HashSet<String>(Arrays.asList(\"ls\", \"pwd\")));\n+                .setWhiteListedShellCommands(new HashSet<String>(Arrays.asList(\"cmd\",\"ls\", \"pwd\")));\n \n         return Arrays.asList(configurator);\n     }\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 31,
    "bugNodeStartChar": 1214,
    "bugNodeLength": 26,
    "fixLineNum": 31,
    "fixNodeStartChar": 1214,
    "fixNodeLength": 32,
    "sourceBeforeFix": "Arrays.asList(\"ls\",\"pwd\")",
    "sourceAfterFix": "Arrays.asList(\"cmd\",\"ls\",\"pwd\")"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "e15dbdf6aceac531383d22369d7f09b40106f06e",
    "fixCommitParentSHA1": "27471f6535a7c91cf5387a88b1a920d4d991c2e5",
    "bugFilePath": "modules/activiti-secure-service-tasks/src/test/java/org/activiti/test/serviceTask/secure/SecureServiceTaskBaseTest.java",
    "fixPatch": "diff --git a/modules/activiti-secure-service-tasks/src/test/java/org/activiti/test/serviceTask/secure/SecureServiceTaskBaseTest.java b/modules/activiti-secure-service-tasks/src/test/java/org/activiti/test/serviceTask/secure/SecureServiceTaskBaseTest.java\nindex 0531c3e..e515670b 100644\n--- a/modules/activiti-secure-service-tasks/src/test/java/org/activiti/test/serviceTask/secure/SecureServiceTaskBaseTest.java\n+++ b/modules/activiti-secure-service-tasks/src/test/java/org/activiti/test/serviceTask/secure/SecureServiceTaskBaseTest.java\n@@ -28,7 +28,7 @@\n     @Override\n     protected List<ProcessEngineConfigurator> getConfigurators() {\n         ProcessEngineConfigurator configurator = new SecureServiceTaskConfigurator()\n-                .setWhiteListedShellCommands(new HashSet<String>(Arrays.asList(\"ls\", \"pwd\")));\n+                .setWhiteListedShellCommands(new HashSet<String>(Arrays.asList(\"cmd\",\"ls\", \"pwd\")));\n \n         return Arrays.asList(configurator);\n     }\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 31,
    "bugNodeStartChar": 1214,
    "bugNodeLength": 26,
    "fixLineNum": 31,
    "fixNodeStartChar": 1214,
    "fixNodeLength": 32,
    "sourceBeforeFix": "Arrays.asList(\"ls\",\"pwd\")",
    "sourceAfterFix": "Arrays.asList(\"cmd\",\"ls\",\"pwd\")"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "114870164ba9822afc3a92eefe5258f54a1c6a17",
    "fixCommitParentSHA1": "845ab7d135ab688e4943bd0f5472f0a5401528f8",
    "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/TaskInvolvementTest.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/TaskInvolvementTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/TaskInvolvementTest.java\nindex 4de3611..f71b5a3 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/TaskInvolvementTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/TaskInvolvementTest.java\n@@ -26,7 +26,7 @@\n             assertEquals(1, taskService.createTaskQuery()\n                     .or()\n                     .taskInvolvedUser(\"involvedUser\")\n-                    .taskInvolvedGroups(groups)\n+                    .taskInvolvedGroupsIn(groups)\n                     .endOr()\n                     .count());\n \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 26,
    "bugNodeStartChar": 797,
    "bugNodeLength": 157,
    "fixLineNum": 26,
    "fixNodeStartChar": 797,
    "fixNodeLength": 159,
    "sourceBeforeFix": "taskService.createTaskQuery().or().taskInvolvedUser(\"involvedUser\").taskInvolvedGroups(groups)",
    "sourceAfterFix": "taskService.createTaskQuery().or().taskInvolvedUser(\"involvedUser\").taskInvolvedGroupsIn(groups)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "114870164ba9822afc3a92eefe5258f54a1c6a17",
    "fixCommitParentSHA1": "845ab7d135ab688e4943bd0f5472f0a5401528f8",
    "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/TaskInvolvementTest.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/TaskInvolvementTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/TaskInvolvementTest.java\nindex 4de3611..f71b5a3 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/TaskInvolvementTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/TaskInvolvementTest.java\n@@ -26,7 +26,7 @@\n             assertEquals(1, taskService.createTaskQuery()\n                     .or()\n                     .taskInvolvedUser(\"involvedUser\")\n-                    .taskInvolvedGroups(groups)\n+                    .taskInvolvedGroupsIn(groups)\n                     .endOr()\n                     .count());\n \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 26,
    "bugNodeStartChar": 797,
    "bugNodeLength": 157,
    "fixLineNum": 26,
    "fixNodeStartChar": 797,
    "fixNodeLength": 159,
    "sourceBeforeFix": "taskService.createTaskQuery().or().taskInvolvedUser(\"involvedUser\").taskInvolvedGroups(groups)",
    "sourceAfterFix": "taskService.createTaskQuery().or().taskInvolvedUser(\"involvedUser\").taskInvolvedGroupsIn(groups)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "8999fbf3f64ca631485431592c8f4f8290f59db1",
    "fixCommitParentSHA1": "977f738759f4c60d17ddc4af045ad77091f6ff78",
    "bugFilePath": "modules/activiti-camel/src/test/java/org/activiti/camel/revisited/AsyncProcessRevisitedTest.java",
    "fixPatch": "diff --git a/modules/activiti-camel/src/test/java/org/activiti/camel/revisited/AsyncProcessRevisitedTest.java b/modules/activiti-camel/src/test/java/org/activiti/camel/revisited/AsyncProcessRevisitedTest.java\nindex ec34354..951cf7a 100755\n--- a/modules/activiti-camel/src/test/java/org/activiti/camel/revisited/AsyncProcessRevisitedTest.java\n+++ b/modules/activiti-camel/src/test/java/org/activiti/camel/revisited/AsyncProcessRevisitedTest.java\n@@ -53,7 +53,7 @@\n     ProcessInstance processInstance = runtimeService.startProcessInstanceByKey(\"asyncCamelProcessRevisited\");\n     List<Execution> executionList = runtimeService.createExecutionQuery().list();\n     assertEquals(3, executionList.size());\n-    waitForJobExecutorToProcessAllJobs(3000, 500);\n+    waitForJobExecutorToProcessAllJobs(5000, 500);\n     assertEquals(0, runtimeService.createProcessInstanceQuery().processInstanceId(processInstance.getId()).count());\n   }\n }\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 56,
    "bugNodeStartChar": 2285,
    "bugNodeLength": 45,
    "fixLineNum": 56,
    "fixNodeStartChar": 2285,
    "fixNodeLength": 45,
    "sourceBeforeFix": "waitForJobExecutorToProcessAllJobs(3000,500)",
    "sourceAfterFix": "waitForJobExecutorToProcessAllJobs(5000,500)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "4fd2358fcf0cf248806b7f7a05c555d0f99b6cd7",
    "fixCommitParentSHA1": "2888ffa952177f80de66a3ddc02a2208f9e27e22",
    "bugFilePath": "modules/activiti-camel/src/test/java/org/activiti/camel/revisited/AsyncProcessRevisitedTest.java",
    "fixPatch": "diff --git a/modules/activiti-camel/src/test/java/org/activiti/camel/revisited/AsyncProcessRevisitedTest.java b/modules/activiti-camel/src/test/java/org/activiti/camel/revisited/AsyncProcessRevisitedTest.java\nindex ec34354..951cf7a 100755\n--- a/modules/activiti-camel/src/test/java/org/activiti/camel/revisited/AsyncProcessRevisitedTest.java\n+++ b/modules/activiti-camel/src/test/java/org/activiti/camel/revisited/AsyncProcessRevisitedTest.java\n@@ -53,7 +53,7 @@\n     ProcessInstance processInstance = runtimeService.startProcessInstanceByKey(\"asyncCamelProcessRevisited\");\n     List<Execution> executionList = runtimeService.createExecutionQuery().list();\n     assertEquals(3, executionList.size());\n-    waitForJobExecutorToProcessAllJobs(3000, 500);\n+    waitForJobExecutorToProcessAllJobs(5000, 500);\n     assertEquals(0, runtimeService.createProcessInstanceQuery().processInstanceId(processInstance.getId()).count());\n   }\n }\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 56,
    "bugNodeStartChar": 2285,
    "bugNodeLength": 45,
    "fixLineNum": 56,
    "fixNodeStartChar": 2285,
    "fixNodeLength": 45,
    "sourceBeforeFix": "waitForJobExecutorToProcessAllJobs(3000,500)",
    "sourceAfterFix": "waitForJobExecutorToProcessAllJobs(5000,500)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "c63848c72d1476607e6aecf717f65532f86e8d86",
    "fixCommitParentSHA1": "d3ca988b6c797434986bba2c28274bbfca983681",
    "bugFilePath": "modules/activiti-form-engine/src/main/java/org/activiti/form/engine/impl/cmd/GetRuntimeFormDefinitionCmd.java",
    "fixPatch": "diff --git a/modules/activiti-form-engine/src/main/java/org/activiti/form/engine/impl/cmd/GetRuntimeFormDefinitionCmd.java b/modules/activiti-form-engine/src/main/java/org/activiti/form/engine/impl/cmd/GetRuntimeFormDefinitionCmd.java\nindex 94817b5..a71cd4c 100644\n--- a/modules/activiti-form-engine/src/main/java/org/activiti/form/engine/impl/cmd/GetRuntimeFormDefinitionCmd.java\n+++ b/modules/activiti-form-engine/src/main/java/org/activiti/form/engine/impl/cmd/GetRuntimeFormDefinitionCmd.java\n@@ -108,7 +108,7 @@\n           try {\n             field.setValue(formExpression.getValue(variables));\n           } catch (Exception e) {\n-            logger.error(\"Error getting value for expression \" + expressionField.getExpression() + \" \" + e.getMessage());\n+            logger.error(\"Error getting value for expression \" + expressionField.getExpression() + \" \" + e.getMessage(), e);\n           }\n           \n         } else {\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 111,
    "bugNodeStartChar": 4835,
    "bugNodeLength": 108,
    "fixLineNum": 111,
    "fixNodeStartChar": 4835,
    "fixNodeLength": 111,
    "sourceBeforeFix": "logger.error(\"Error getting value for expression \" + expressionField.getExpression() + \" \"+ e.getMessage())",
    "sourceAfterFix": "logger.error(\"Error getting value for expression \" + expressionField.getExpression() + \" \"+ e.getMessage(),e)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "e47f552b58a809e41c6c5ebddf1fd5bbfe4136fd",
    "fixCommitParentSHA1": "c244edd41547d1105e0e9ecdefbaa0e17467d405",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/persistence/entity/VariableScopeImpl.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/persistence/entity/VariableScopeImpl.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/persistence/entity/VariableScopeImpl.java\nindex 291fb1a..f3039a2 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/persistence/entity/VariableScopeImpl.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/persistence/entity/VariableScopeImpl.java\n@@ -222,7 +222,7 @@\n     }\n     \n     if (transientVariabes != null) {\n-      variables.putAll(variables);\n+      variables.putAll(transientVariabes);\n     }\n \n     return variables;\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 225,
    "bugNodeStartChar": 8613,
    "bugNodeLength": 27,
    "fixLineNum": 225,
    "fixNodeStartChar": 8613,
    "fixNodeLength": 35,
    "sourceBeforeFix": "variables.putAll(variables)",
    "sourceAfterFix": "variables.putAll(transientVariabes)"
  },
  {
    "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
    "fixCommitSHA1": "9b649ac6da4293d736676de895a67aaf87fc5979",
    "fixCommitParentSHA1": "7161a504bbbdb06c5141b0fcee643b19eda7860e",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/cfg/ProcessEngineConfigurationImpl.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cfg/ProcessEngineConfigurationImpl.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cfg/ProcessEngineConfigurationImpl.java\nindex 6335125..7604803 100755\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cfg/ProcessEngineConfigurationImpl.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cfg/ProcessEngineConfigurationImpl.java\n@@ -1209,7 +1209,7 @@\n \n       // Special care for MSSQL, as it has a hard limit of 2000 params per statement (incl bulk statement).\n       // Especially with executions, with 100 as default, this limit is passed.\n-      if (DATABASE_TYPE_MYSQL.equals(databaseType)) {\n+      if (DATABASE_TYPE_MSSQL.equals(databaseType)) {\n         maxNrOfStatementsInBulkInsert = DEFAULT_MAX_NR_OF_STATEMENTS_BULK_INSERT_SQL_SERVER;\n       }\n       \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 1212,
    "bugNodeStartChar": 58872,
    "bugNodeLength": 40,
    "fixLineNum": 1212,
    "fixNodeStartChar": 58872,
    "fixNodeLength": 40,
    "sourceBeforeFix": "DATABASE_TYPE_MYSQL.equals(databaseType)",
    "sourceAfterFix": "DATABASE_TYPE_MSSQL.equals(databaseType)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "9b649ac6da4293d736676de895a67aaf87fc5979",
    "fixCommitParentSHA1": "7161a504bbbdb06c5141b0fcee643b19eda7860e",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/cfg/ProcessEngineConfigurationImpl.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cfg/ProcessEngineConfigurationImpl.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cfg/ProcessEngineConfigurationImpl.java\nindex 6335125..7604803 100755\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cfg/ProcessEngineConfigurationImpl.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cfg/ProcessEngineConfigurationImpl.java\n@@ -1209,7 +1209,7 @@\n \n       // Special care for MSSQL, as it has a hard limit of 2000 params per statement (incl bulk statement).\n       // Especially with executions, with 100 as default, this limit is passed.\n-      if (DATABASE_TYPE_MYSQL.equals(databaseType)) {\n+      if (DATABASE_TYPE_MSSQL.equals(databaseType)) {\n         maxNrOfStatementsInBulkInsert = DEFAULT_MAX_NR_OF_STATEMENTS_BULK_INSERT_SQL_SERVER;\n       }\n       \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 1212,
    "bugNodeStartChar": 58872,
    "bugNodeLength": 40,
    "fixLineNum": 1212,
    "fixNodeStartChar": 58872,
    "fixNodeLength": 40,
    "sourceBeforeFix": "DATABASE_TYPE_MYSQL.equals(databaseType)",
    "sourceAfterFix": "DATABASE_TYPE_MSSQL.equals(databaseType)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "c9c1e334bc0844438ce6930669908a7a5fd8950e",
    "fixCommitParentSHA1": "a78b348c4a9a6197d6c69eee975a68d9779fa972",
    "bugFilePath": "modules/activiti5-test/src/test/java/org/activiti5/examples/mgmt/ManagementServiceTest.java",
    "fixPatch": "diff --git a/modules/activiti5-test/src/test/java/org/activiti5/examples/mgmt/ManagementServiceTest.java b/modules/activiti5-test/src/test/java/org/activiti5/examples/mgmt/ManagementServiceTest.java\nindex 0bdc934..209cccb 100644\n--- a/modules/activiti5-test/src/test/java/org/activiti5/examples/mgmt/ManagementServiceTest.java\n+++ b/modules/activiti5-test/src/test/java/org/activiti5/examples/mgmt/ManagementServiceTest.java\n@@ -32,7 +32,7 @@\n     \n     String tablePrefix = processEngineConfiguration.getDatabaseTablePrefix();\n     \n-    assertEquals(new Long(3), tableCount.get(tablePrefix+\"ACT_GE_PROPERTY\"));\n+    assertEquals(new Long(4), tableCount.get(tablePrefix+\"ACT_GE_PROPERTY\"));\n     assertEquals(new Long(0), tableCount.get(tablePrefix+\"ACT_GE_BYTEARRAY\"));\n     assertEquals(new Long(0), tableCount.get(tablePrefix+\"ACT_RE_DEPLOYMENT\"));\n     assertEquals(new Long(0), tableCount.get(tablePrefix+\"ACT_RU_EXECUTION\"));\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 35,
    "bugNodeStartChar": 1225,
    "bugNodeLength": 11,
    "fixLineNum": 35,
    "fixNodeStartChar": 1225,
    "fixNodeLength": 11,
    "sourceBeforeFix": "new Long(3)",
    "sourceAfterFix": "new Long(4)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "1f8fb8ad37dbd4cb4be77d827ba19e857bd451d1",
    "fixCommitParentSHA1": "3755e5734f04e17dc88ec98aa6c12e28bc9d02c0",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\nindex f9450b7..e4b578a 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\n@@ -168,7 +168,7 @@\n               // reduce log level, as normally we're not interested in logging this exception\n               log.debug(\"Optimistic locking exception : \" + exception);\n             } else {\n-              log.debug(\"Error while closing command context\", exception);\n+              log.error(\"Error while closing command context\", exception);\n             }\n \n             transactionContext.rollback();\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 171,
    "bugNodeStartChar": 7738,
    "bugNodeLength": 59,
    "fixLineNum": 171,
    "fixNodeStartChar": 7738,
    "fixNodeLength": 59,
    "sourceBeforeFix": "log.debug(\"Error while closing command context\",exception)",
    "sourceAfterFix": "log.error(\"Error while closing command context\",exception)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "1f8fb8ad37dbd4cb4be77d827ba19e857bd451d1",
    "fixCommitParentSHA1": "3755e5734f04e17dc88ec98aa6c12e28bc9d02c0",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\nindex f9450b7..e4b578a 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\n@@ -168,7 +168,7 @@\n               // reduce log level, as normally we're not interested in logging this exception\n               log.debug(\"Optimistic locking exception : \" + exception);\n             } else {\n-              log.debug(\"Error while closing command context\", exception);\n+              log.error(\"Error while closing command context\", exception);\n             }\n \n             transactionContext.rollback();\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 171,
    "bugNodeStartChar": 7738,
    "bugNodeLength": 59,
    "fixLineNum": 171,
    "fixNodeStartChar": 7738,
    "fixNodeLength": 59,
    "sourceBeforeFix": "log.debug(\"Error while closing command context\",exception)",
    "sourceAfterFix": "log.error(\"Error while closing command context\",exception)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "02d326b888b3ce431468700ce32602c1b247bd91",
    "fixCommitParentSHA1": "23f263bd327b8cbee01cca161c306dd081ba93af",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\nindex d11308b..7c84dd9 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\n@@ -153,7 +153,7 @@\n       // reduce log level, as normally we're not interested in logging this exception\n       log.debug(\"Optimistic locking exception : \" + exception);\n     } else {\n-      log.debug(\"Error while closing command context\", exception);\n+      log.error(\"Error while closing command context\", exception);\n     }\n   }\n \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 156,
    "bugNodeStartChar": 7326,
    "bugNodeLength": 59,
    "fixLineNum": 156,
    "fixNodeStartChar": 7326,
    "fixNodeLength": 59,
    "sourceBeforeFix": "log.debug(\"Error while closing command context\",exception)",
    "sourceAfterFix": "log.error(\"Error while closing command context\",exception)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "02d326b888b3ce431468700ce32602c1b247bd91",
    "fixCommitParentSHA1": "23f263bd327b8cbee01cca161c306dd081ba93af",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\nindex d11308b..7c84dd9 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\n@@ -153,7 +153,7 @@\n       // reduce log level, as normally we're not interested in logging this exception\n       log.debug(\"Optimistic locking exception : \" + exception);\n     } else {\n-      log.debug(\"Error while closing command context\", exception);\n+      log.error(\"Error while closing command context\", exception);\n     }\n   }\n \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 156,
    "bugNodeStartChar": 7326,
    "bugNodeLength": 59,
    "fixLineNum": 156,
    "fixNodeStartChar": 7326,
    "fixNodeLength": 59,
    "sourceBeforeFix": "log.debug(\"Error while closing command context\",exception)",
    "sourceAfterFix": "log.error(\"Error while closing command context\",exception)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "02d326b888b3ce431468700ce32602c1b247bd91",
    "fixCommitParentSHA1": "23f263bd327b8cbee01cca161c306dd081ba93af",
    "bugFilePath": "modules/activiti5-engine/src/main/java/org/activiti5/engine/impl/interceptor/CommandContext.java",
    "fixPatch": "diff --git a/modules/activiti5-engine/src/main/java/org/activiti5/engine/impl/interceptor/CommandContext.java b/modules/activiti5-engine/src/main/java/org/activiti5/engine/impl/interceptor/CommandContext.java\nindex d5cf7ae..b90a554 100644\n--- a/modules/activiti5-engine/src/main/java/org/activiti5/engine/impl/interceptor/CommandContext.java\n+++ b/modules/activiti5-engine/src/main/java/org/activiti5/engine/impl/interceptor/CommandContext.java\n@@ -171,7 +171,7 @@\n               // reduce log level, as normally we're not interested in logging this exception\n               log.debug(\"Optimistic locking exception : \" + exception);\n             } else {\n-              log.debug(\"Error while closing command context\", exception);\n+              log.error(\"Error while closing command context\", exception);\n             }\n \n             transactionContext.rollback();\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 174,
    "bugNodeStartChar": 8013,
    "bugNodeLength": 59,
    "fixLineNum": 174,
    "fixNodeStartChar": 8013,
    "fixNodeLength": 59,
    "sourceBeforeFix": "log.debug(\"Error while closing command context\",exception)",
    "sourceAfterFix": "log.error(\"Error while closing command context\",exception)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "02d326b888b3ce431468700ce32602c1b247bd91",
    "fixCommitParentSHA1": "23f263bd327b8cbee01cca161c306dd081ba93af",
    "bugFilePath": "modules/activiti5-engine/src/main/java/org/activiti5/engine/impl/interceptor/CommandContext.java",
    "fixPatch": "diff --git a/modules/activiti5-engine/src/main/java/org/activiti5/engine/impl/interceptor/CommandContext.java b/modules/activiti5-engine/src/main/java/org/activiti5/engine/impl/interceptor/CommandContext.java\nindex d5cf7ae..b90a554 100644\n--- a/modules/activiti5-engine/src/main/java/org/activiti5/engine/impl/interceptor/CommandContext.java\n+++ b/modules/activiti5-engine/src/main/java/org/activiti5/engine/impl/interceptor/CommandContext.java\n@@ -171,7 +171,7 @@\n               // reduce log level, as normally we're not interested in logging this exception\n               log.debug(\"Optimistic locking exception : \" + exception);\n             } else {\n-              log.debug(\"Error while closing command context\", exception);\n+              log.error(\"Error while closing command context\", exception);\n             }\n \n             transactionContext.rollback();\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 174,
    "bugNodeStartChar": 8013,
    "bugNodeLength": 59,
    "fixLineNum": 174,
    "fixNodeStartChar": 8013,
    "fixNodeLength": 59,
    "sourceBeforeFix": "log.debug(\"Error while closing command context\",exception)",
    "sourceAfterFix": "log.error(\"Error while closing command context\",exception)"
  },
  {
    "bugType": "MORE_SPECIFIC_IF",
    "fixCommitSHA1": "0ebbee083af8f9047503b0ad50cf56f1a95504e3",
    "fixCommitParentSHA1": "64743e3c38d45be1d01cbc931440037eefdccc33",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSessionFactory.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSessionFactory.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSessionFactory.java\nindex 3a42a25..e980fe5 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSessionFactory.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSessionFactory.java\n@@ -70,14 +70,14 @@\n \n   public Session openSession(CommandContext commandContext) {\n     DbSqlSession dbSqlSession = new DbSqlSession(this, commandContext.getEntityCache());\n-    if (getDatabaseSchema() != null) {\n+    if (getDatabaseSchema() != null && getDatabaseSchema().length() > 0) {\n       try {\n         dbSqlSession.getSqlSession().getConnection().setSchema(getDatabaseSchema());\n       } catch (SQLException e) {\n         throw new ActivitiException(\"Could not set database schema on connection\", e);\n       }\n     }\n-    if (getDatabaseCatalog() != null) {\n+    if (getDatabaseCatalog() != null && getDatabaseCatalog().length() > 0) {\n       try {\n         dbSqlSession.getSqlSession().getConnection().setCatalog(getDatabaseCatalog());\n       } catch (SQLException e) {\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 73,
    "bugNodeStartChar": 3126,
    "bugNodeLength": 27,
    "fixLineNum": 73,
    "fixNodeStartChar": 3126,
    "fixNodeLength": 63,
    "sourceBeforeFix": "getDatabaseSchema() != null",
    "sourceAfterFix": "getDatabaseSchema() != null && getDatabaseSchema().length() > 0"
  },
  {
    "bugType": "MORE_SPECIFIC_IF",
    "fixCommitSHA1": "0ebbee083af8f9047503b0ad50cf56f1a95504e3",
    "fixCommitParentSHA1": "64743e3c38d45be1d01cbc931440037eefdccc33",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSessionFactory.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSessionFactory.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSessionFactory.java\nindex 3a42a25..e980fe5 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSessionFactory.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSessionFactory.java\n@@ -70,14 +70,14 @@\n \n   public Session openSession(CommandContext commandContext) {\n     DbSqlSession dbSqlSession = new DbSqlSession(this, commandContext.getEntityCache());\n-    if (getDatabaseSchema() != null) {\n+    if (getDatabaseSchema() != null && getDatabaseSchema().length() > 0) {\n       try {\n         dbSqlSession.getSqlSession().getConnection().setSchema(getDatabaseSchema());\n       } catch (SQLException e) {\n         throw new ActivitiException(\"Could not set database schema on connection\", e);\n       }\n     }\n-    if (getDatabaseCatalog() != null) {\n+    if (getDatabaseCatalog() != null && getDatabaseCatalog().length() > 0) {\n       try {\n         dbSqlSession.getSqlSession().getConnection().setCatalog(getDatabaseCatalog());\n       } catch (SQLException e) {\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 80,
    "bugNodeStartChar": 3396,
    "bugNodeLength": 28,
    "fixLineNum": 80,
    "fixNodeStartChar": 3396,
    "fixNodeLength": 65,
    "sourceBeforeFix": "getDatabaseCatalog() != null",
    "sourceAfterFix": "getDatabaseCatalog() != null && getDatabaseCatalog().length() > 0"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "da81d5ef25e71ae77bb98e0184aed2cb125fc1a6",
    "fixCommitParentSHA1": "714c943e03485fdaaa2c816f306dd04cc29e8c2e",
    "bugFilePath": "modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java",
    "fixPatch": "diff --git a/modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java b/modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java\nindex ebf8114..ed39b9f 100644\n--- a/modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java\n+++ b/modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java\n@@ -88,7 +88,7 @@\n     // advance the clock after 9 days from starting the process ->\n     // the system will execute the pending job and will create a new one (day by day)\n     moveByMinutes(9 * 60 * 24);\n-    waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(10000, 200);\n+    executeJobExecutorForTime(10000, 200);\n     \n     // there must be a pending job because the endDate is not reached yet\n \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 91,
    "bugNodeStartChar": 3569,
    "bugNodeLength": 68,
    "fixLineNum": 91,
    "fixNodeStartChar": 3569,
    "fixNodeLength": 37,
    "sourceBeforeFix": "waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(10000,200)",
    "sourceAfterFix": "executeJobExecutorForTime(10000,200)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "da81d5ef25e71ae77bb98e0184aed2cb125fc1a6",
    "fixCommitParentSHA1": "714c943e03485fdaaa2c816f306dd04cc29e8c2e",
    "bugFilePath": "modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java",
    "fixPatch": "diff --git a/modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java b/modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java\nindex ebf8114..ed39b9f 100644\n--- a/modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java\n+++ b/modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java\n@@ -88,7 +88,7 @@\n     // advance the clock after 9 days from starting the process ->\n     // the system will execute the pending job and will create a new one (day by day)\n     moveByMinutes(9 * 60 * 24);\n-    waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(10000, 200);\n+    executeJobExecutorForTime(10000, 200);\n     \n     // there must be a pending job because the endDate is not reached yet\n \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 91,
    "bugNodeStartChar": 3569,
    "bugNodeLength": 68,
    "fixLineNum": 91,
    "fixNodeStartChar": 3569,
    "fixNodeLength": 37,
    "sourceBeforeFix": "waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(10000,200)",
    "sourceAfterFix": "executeJobExecutorForTime(10000,200)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "0fdbc8a43243c636f2d551e904c39f580ad69bf0",
    "fixCommitParentSHA1": "d8385279a3ad73e5402badfbf5cae27b4d312aa6",
    "bugFilePath": "modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java",
    "fixPatch": "diff --git a/modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java b/modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java\nindex ebf8114..ed39b9f 100644\n--- a/modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java\n+++ b/modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java\n@@ -88,7 +88,7 @@\n     // advance the clock after 9 days from starting the process ->\n     // the system will execute the pending job and will create a new one (day by day)\n     moveByMinutes(9 * 60 * 24);\n-    waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(10000, 200);\n+    executeJobExecutorForTime(10000, 200);\n     \n     // there must be a pending job because the endDate is not reached yet\n \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 91,
    "bugNodeStartChar": 3569,
    "bugNodeLength": 68,
    "fixLineNum": 91,
    "fixNodeStartChar": 3569,
    "fixNodeLength": 37,
    "sourceBeforeFix": "waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(10000,200)",
    "sourceAfterFix": "executeJobExecutorForTime(10000,200)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "0fdbc8a43243c636f2d551e904c39f580ad69bf0",
    "fixCommitParentSHA1": "d8385279a3ad73e5402badfbf5cae27b4d312aa6",
    "bugFilePath": "modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java",
    "fixPatch": "diff --git a/modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java b/modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java\nindex ebf8114..ed39b9f 100644\n--- a/modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java\n+++ b/modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java\n@@ -88,7 +88,7 @@\n     // advance the clock after 9 days from starting the process ->\n     // the system will execute the pending job and will create a new one (day by day)\n     moveByMinutes(9 * 60 * 24);\n-    waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(10000, 200);\n+    executeJobExecutorForTime(10000, 200);\n     \n     // there must be a pending job because the endDate is not reached yet\n \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 91,
    "bugNodeStartChar": 3569,
    "bugNodeLength": 68,
    "fixLineNum": 91,
    "fixNodeStartChar": 3569,
    "fixNodeLength": 37,
    "sourceBeforeFix": "waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(10000,200)",
    "sourceAfterFix": "executeJobExecutorForTime(10000,200)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "d3eafb4cd35a17740adc2a9f69741604811b749f",
    "fixCommitParentSHA1": "1c0a00813b010a25e498bdeb876137b39910a273",
    "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/ExecutionQueryTest.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/ExecutionQueryTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/ExecutionQueryTest.java\nindex acabadd..58fcda9 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/ExecutionQueryTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/ExecutionQueryTest.java\n@@ -1597,7 +1597,7 @@\n   @Deployment(resources = { \"org/activiti/engine/test/api/oneTaskProcess.bpmn20.xml\" })\n   public void testQueryStartedAfter() throws Exception {\n     Calendar calendar = new GregorianCalendar();\n-    calendar.set(Calendar.YEAR, 2200);\n+    calendar.set(Calendar.YEAR, 2030);\n     calendar.set(Calendar.MONTH, 8);\n     calendar.set(Calendar.DAY_OF_MONTH, 30);\n     calendar.set(Calendar.HOUR_OF_DAY, 12);\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 1600,
    "bugNodeStartChar": 79713,
    "bugNodeLength": 33,
    "fixLineNum": 1600,
    "fixNodeStartChar": 79713,
    "fixNodeLength": 33,
    "sourceBeforeFix": "calendar.set(Calendar.YEAR,2200)",
    "sourceAfterFix": "calendar.set(Calendar.YEAR,2030)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "d3eafb4cd35a17740adc2a9f69741604811b749f",
    "fixCommitParentSHA1": "1c0a00813b010a25e498bdeb876137b39910a273",
    "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/ProcessInstanceQueryTest.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/ProcessInstanceQueryTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/ProcessInstanceQueryTest.java\nindex ef56c88..62a685c 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/ProcessInstanceQueryTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/ProcessInstanceQueryTest.java\n@@ -1901,7 +1901,7 @@\n   @Deployment(resources = { \"org/activiti/engine/test/api/oneTaskProcess.bpmn20.xml\" })\n   public void testQueryStartedAfter() throws Exception {\n     Calendar calendar = new GregorianCalendar();\n-    calendar.set(Calendar.YEAR, 2200);\n+    calendar.set(Calendar.YEAR, 2030);\n     calendar.set(Calendar.MONTH, 8);\n     calendar.set(Calendar.DAY_OF_MONTH, 30);\n     calendar.set(Calendar.HOUR_OF_DAY, 12);\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 1904,
    "bugNodeStartChar": 101390,
    "bugNodeLength": 33,
    "fixLineNum": 1904,
    "fixNodeStartChar": 101390,
    "fixNodeLength": 33,
    "sourceBeforeFix": "calendar.set(Calendar.YEAR,2200)",
    "sourceAfterFix": "calendar.set(Calendar.YEAR,2030)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "d3eafb4cd35a17740adc2a9f69741604811b749f",
    "fixCommitParentSHA1": "1c0a00813b010a25e498bdeb876137b39910a273",
    "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java\nindex 75d48fc..64319dc 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java\n@@ -87,7 +87,7 @@\n     // advance the clock after 9 days from starting the process ->\n     // the system will execute the pending job and will create a new one (day by day)\n     moveByMinutes(9 * 60 * 24);\n-    waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(10000, 200);\n+    waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(20000, 200);\n     // there must be a pending job because the endDate is not reached yet\n     jobs = managementService.createTimerJobQuery().list();\n     assertEquals(1, jobs.size());\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 90,
    "bugNodeStartChar": 3494,
    "bugNodeLength": 68,
    "fixLineNum": 90,
    "fixNodeStartChar": 3494,
    "fixNodeLength": 68,
    "sourceBeforeFix": "waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(10000,200)",
    "sourceAfterFix": "waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(20000,200)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "703231e3b4333d5e188ff53aa5b6147667d5fcf7",
    "fixCommitParentSHA1": "9f71a2ed7f4e23ae62442cdfa50c6621c877f5c2",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/listener/ListenerUtil.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/listener/ListenerUtil.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/listener/ListenerUtil.java\nindex f4c45d9..50efe8a 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/listener/ListenerUtil.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/listener/ListenerUtil.java\n@@ -106,7 +106,7 @@\n     if (TransactionDependentExecutionListener.ON_TRANSACTION_RESULT_COMMITTED.equals(activitiListener.getOnTransactionResult())) {\n       executionListenerContextCloseListener.addClosedExecutionListener(executionListener, execution, executionVariablesToUse, customPropertiesMapToUse);\n     } else if (TransactionDependentExecutionListener.ON_TRANSACTION_RESULT_ROLLED_BACK.equals(activitiListener.getOnTransactionResult())) {\n-      executionListenerContextCloseListener.addClosedExecutionListener(executionListener, execution, executionVariablesToUse, customPropertiesMapToUse);\n+      executionListenerContextCloseListener.addCloseFailedExecutionListener(executionListener, execution, executionVariablesToUse, customPropertiesMapToUse);\n     }\n   }\n \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 109,
    "bugNodeStartChar": 6267,
    "bugNodeLength": 145,
    "fixLineNum": 109,
    "fixNodeStartChar": 6267,
    "fixNodeLength": 150,
    "sourceBeforeFix": "executionListenerContextCloseListener.addClosedExecutionListener(executionListener,execution,executionVariablesToUse,customPropertiesMapToUse)",
    "sourceAfterFix": "executionListenerContextCloseListener.addCloseFailedExecutionListener(executionListener,execution,executionVariablesToUse,customPropertiesMapToUse)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "703231e3b4333d5e188ff53aa5b6147667d5fcf7",
    "fixCommitParentSHA1": "9f71a2ed7f4e23ae62442cdfa50c6621c877f5c2",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/listener/ListenerUtil.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/listener/ListenerUtil.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/listener/ListenerUtil.java\nindex f4c45d9..50efe8a 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/listener/ListenerUtil.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/listener/ListenerUtil.java\n@@ -106,7 +106,7 @@\n     if (TransactionDependentExecutionListener.ON_TRANSACTION_RESULT_COMMITTED.equals(activitiListener.getOnTransactionResult())) {\n       executionListenerContextCloseListener.addClosedExecutionListener(executionListener, execution, executionVariablesToUse, customPropertiesMapToUse);\n     } else if (TransactionDependentExecutionListener.ON_TRANSACTION_RESULT_ROLLED_BACK.equals(activitiListener.getOnTransactionResult())) {\n-      executionListenerContextCloseListener.addClosedExecutionListener(executionListener, execution, executionVariablesToUse, customPropertiesMapToUse);\n+      executionListenerContextCloseListener.addCloseFailedExecutionListener(executionListener, execution, executionVariablesToUse, customPropertiesMapToUse);\n     }\n   }\n \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 109,
    "bugNodeStartChar": 6267,
    "bugNodeLength": 145,
    "fixLineNum": 109,
    "fixNodeStartChar": 6267,
    "fixNodeLength": 150,
    "sourceBeforeFix": "executionListenerContextCloseListener.addClosedExecutionListener(executionListener,execution,executionVariablesToUse,customPropertiesMapToUse)",
    "sourceAfterFix": "executionListenerContextCloseListener.addCloseFailedExecutionListener(executionListener,execution,executionVariablesToUse,customPropertiesMapToUse)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "60ef304601539a6ed91ba9ae88c31114d4b098a6",
    "fixCommitParentSHA1": "90d07a5b752ef02b7d8d425eb6b05b1e72adc19a",
    "bugFilePath": "modules/activiti-bpmn-converter/src/main/java/org/activiti/bpmn/converter/ServiceTaskXMLConverter.java",
    "fixPatch": "diff --git a/modules/activiti-bpmn-converter/src/main/java/org/activiti/bpmn/converter/ServiceTaskXMLConverter.java b/modules/activiti-bpmn-converter/src/main/java/org/activiti/bpmn/converter/ServiceTaskXMLConverter.java\nindex bfb0b61..798cfbf 100644\n--- a/modules/activiti-bpmn-converter/src/main/java/org/activiti/bpmn/converter/ServiceTaskXMLConverter.java\n+++ b/modules/activiti-bpmn-converter/src/main/java/org/activiti/bpmn/converter/ServiceTaskXMLConverter.java\n@@ -126,7 +126,7 @@\n         } else {\n           xtw.writeStartElement(ACTIVITI_EXTENSIONS_PREFIX, ELEMENT_FIELD_STRING, ACTIVITI_EXTENSIONS_NAMESPACE);\n         }\n-        xtw.writeCharacters(customProperty.getSimpleValue());\n+        xtw.writeCData(customProperty.getSimpleValue());\n         xtw.writeEndElement();\n         xtw.writeEndElement();\n       }\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 129,
    "bugNodeStartChar": 6623,
    "bugNodeLength": 52,
    "fixLineNum": 129,
    "fixNodeStartChar": 6623,
    "fixNodeLength": 47,
    "sourceBeforeFix": "xtw.writeCharacters(customProperty.getSimpleValue())",
    "sourceAfterFix": "xtw.writeCData(customProperty.getSimpleValue())"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "60ef304601539a6ed91ba9ae88c31114d4b098a6",
    "fixCommitParentSHA1": "90d07a5b752ef02b7d8d425eb6b05b1e72adc19a",
    "bugFilePath": "modules/activiti-bpmn-converter/src/main/java/org/activiti/bpmn/converter/ServiceTaskXMLConverter.java",
    "fixPatch": "diff --git a/modules/activiti-bpmn-converter/src/main/java/org/activiti/bpmn/converter/ServiceTaskXMLConverter.java b/modules/activiti-bpmn-converter/src/main/java/org/activiti/bpmn/converter/ServiceTaskXMLConverter.java\nindex bfb0b61..798cfbf 100644\n--- a/modules/activiti-bpmn-converter/src/main/java/org/activiti/bpmn/converter/ServiceTaskXMLConverter.java\n+++ b/modules/activiti-bpmn-converter/src/main/java/org/activiti/bpmn/converter/ServiceTaskXMLConverter.java\n@@ -126,7 +126,7 @@\n         } else {\n           xtw.writeStartElement(ACTIVITI_EXTENSIONS_PREFIX, ELEMENT_FIELD_STRING, ACTIVITI_EXTENSIONS_NAMESPACE);\n         }\n-        xtw.writeCharacters(customProperty.getSimpleValue());\n+        xtw.writeCData(customProperty.getSimpleValue());\n         xtw.writeEndElement();\n         xtw.writeEndElement();\n       }\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 129,
    "bugNodeStartChar": 6623,
    "bugNodeLength": 52,
    "fixLineNum": 129,
    "fixNodeStartChar": 6623,
    "fixNodeLength": 47,
    "sourceBeforeFix": "xtw.writeCharacters(customProperty.getSimpleValue())",
    "sourceAfterFix": "xtw.writeCData(customProperty.getSimpleValue())"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "60ef304601539a6ed91ba9ae88c31114d4b098a6",
    "fixCommitParentSHA1": "90d07a5b752ef02b7d8d425eb6b05b1e72adc19a",
    "bugFilePath": "modules/activiti-bpmn-converter/src/main/java/org/activiti/bpmn/converter/UserTaskXMLConverter.java",
    "fixPatch": "diff --git a/modules/activiti-bpmn-converter/src/main/java/org/activiti/bpmn/converter/UserTaskXMLConverter.java b/modules/activiti-bpmn-converter/src/main/java/org/activiti/bpmn/converter/UserTaskXMLConverter.java\nindex d588c3d..fb523c6 100644\n--- a/modules/activiti-bpmn-converter/src/main/java/org/activiti/bpmn/converter/UserTaskXMLConverter.java\n+++ b/modules/activiti-bpmn-converter/src/main/java/org/activiti/bpmn/converter/UserTaskXMLConverter.java\n@@ -162,7 +162,7 @@\n           didWriteExtensionStartElement = true;\n         }\n         xtw.writeStartElement(ACTIVITI_EXTENSIONS_PREFIX, customProperty.getName(), ACTIVITI_EXTENSIONS_NAMESPACE);\n-        xtw.writeCharacters(customProperty.getSimpleValue());\n+        xtw.writeCData(customProperty.getSimpleValue());\n         xtw.writeEndElement();\n       }\n     }\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 165,
    "bugNodeStartChar": 8479,
    "bugNodeLength": 52,
    "fixLineNum": 165,
    "fixNodeStartChar": 8479,
    "fixNodeLength": 47,
    "sourceBeforeFix": "xtw.writeCharacters(customProperty.getSimpleValue())",
    "sourceAfterFix": "xtw.writeCData(customProperty.getSimpleValue())"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "60ef304601539a6ed91ba9ae88c31114d4b098a6",
    "fixCommitParentSHA1": "90d07a5b752ef02b7d8d425eb6b05b1e72adc19a",
    "bugFilePath": "modules/activiti-bpmn-converter/src/main/java/org/activiti/bpmn/converter/UserTaskXMLConverter.java",
    "fixPatch": "diff --git a/modules/activiti-bpmn-converter/src/main/java/org/activiti/bpmn/converter/UserTaskXMLConverter.java b/modules/activiti-bpmn-converter/src/main/java/org/activiti/bpmn/converter/UserTaskXMLConverter.java\nindex d588c3d..fb523c6 100644\n--- a/modules/activiti-bpmn-converter/src/main/java/org/activiti/bpmn/converter/UserTaskXMLConverter.java\n+++ b/modules/activiti-bpmn-converter/src/main/java/org/activiti/bpmn/converter/UserTaskXMLConverter.java\n@@ -162,7 +162,7 @@\n           didWriteExtensionStartElement = true;\n         }\n         xtw.writeStartElement(ACTIVITI_EXTENSIONS_PREFIX, customProperty.getName(), ACTIVITI_EXTENSIONS_NAMESPACE);\n-        xtw.writeCharacters(customProperty.getSimpleValue());\n+        xtw.writeCData(customProperty.getSimpleValue());\n         xtw.writeEndElement();\n       }\n     }\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 165,
    "bugNodeStartChar": 8479,
    "bugNodeLength": 52,
    "fixLineNum": 165,
    "fixNodeStartChar": 8479,
    "fixNodeLength": 47,
    "sourceBeforeFix": "xtw.writeCharacters(customProperty.getSimpleValue())",
    "sourceAfterFix": "xtw.writeCData(customProperty.getSimpleValue())"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8e8a116f56055c1ed55a175a7cf94d96f8e6f277",
    "fixCommitParentSHA1": "e86b9752584cb9d46b252061ca94128c18380e8f",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/persistence/entity/JobEntityManagerImpl.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/persistence/entity/JobEntityManagerImpl.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/persistence/entity/JobEntityManagerImpl.java\nindex 8306654..51565ec 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/persistence/entity/JobEntityManagerImpl.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/persistence/entity/JobEntityManagerImpl.java\n@@ -290,7 +290,7 @@\n   protected void removeExecutionLink(JobEntity jobEntity) {\n     if (jobEntity.getExecutionId() != null) {\n       ExecutionEntity execution = getExecutionEntityManager().findById(jobEntity.getExecutionId());\n-      execution.getJobs().remove(this);\n+      execution.getJobs().remove(jobEntity);\n     }\n   }\n \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 293,
    "bugNodeStartChar": 11035,
    "bugNodeLength": 4,
    "fixLineNum": 293,
    "fixNodeStartChar": 11035,
    "fixNodeLength": 9,
    "sourceBeforeFix": "execution.getJobs().remove(this)",
    "sourceAfterFix": "execution.getJobs().remove(jobEntity)"
  },
  {
    "bugType": "SWAP_BOOLEAN_LITERAL",
    "fixCommitSHA1": "1ab4426ed60aec7fbc643db7d66f85e53e9c5619",
    "fixCommitParentSHA1": "029fe206ace43908385b8058deae85b8add41b34",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/RuntimeServiceImpl.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/RuntimeServiceImpl.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/RuntimeServiceImpl.java\nindex 8b4e354..bb3a440 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/RuntimeServiceImpl.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/RuntimeServiceImpl.java\n@@ -182,11 +182,11 @@\n   }\n   \n   public Map<String, VariableInstance> getVariableInstancesLocal(String executionId, Collection<String> variableNames) {\n-    return commandExecutor.execute(new GetExecutionVariableInstancesCmd(executionId, variableNames, false));\n+    return commandExecutor.execute(new GetExecutionVariableInstancesCmd(executionId, variableNames, true));\n   }\n \n   public Map<String, VariableInstance> getVariableInstancesLocal(String executionId, Collection<String> variableNames, String locale, boolean withLocalizationFallback) {\n-    return commandExecutor.execute(new GetExecutionVariableInstancesCmd(executionId, variableNames, false, locale, withLocalizationFallback));\n+    return commandExecutor.execute(new GetExecutionVariableInstancesCmd(executionId, variableNames, true, locale, withLocalizationFallback));\n   }\n \n   public Object getVariable(String executionId, String variableName) {\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 185,
    "bugNodeStartChar": 9899,
    "bugNodeLength": 71,
    "fixLineNum": 185,
    "fixNodeStartChar": 9899,
    "fixNodeLength": 70,
    "sourceBeforeFix": "new GetExecutionVariableInstancesCmd(executionId,variableNames,false)",
    "sourceAfterFix": "new GetExecutionVariableInstancesCmd(executionId,variableNames,true)"
  },
  {
    "bugType": "SWAP_BOOLEAN_LITERAL",
    "fixCommitSHA1": "1ab4426ed60aec7fbc643db7d66f85e53e9c5619",
    "fixCommitParentSHA1": "029fe206ace43908385b8058deae85b8add41b34",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/RuntimeServiceImpl.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/RuntimeServiceImpl.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/RuntimeServiceImpl.java\nindex 8b4e354..bb3a440 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/RuntimeServiceImpl.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/RuntimeServiceImpl.java\n@@ -182,11 +182,11 @@\n   }\n   \n   public Map<String, VariableInstance> getVariableInstancesLocal(String executionId, Collection<String> variableNames) {\n-    return commandExecutor.execute(new GetExecutionVariableInstancesCmd(executionId, variableNames, false));\n+    return commandExecutor.execute(new GetExecutionVariableInstancesCmd(executionId, variableNames, true));\n   }\n \n   public Map<String, VariableInstance> getVariableInstancesLocal(String executionId, Collection<String> variableNames, String locale, boolean withLocalizationFallback) {\n-    return commandExecutor.execute(new GetExecutionVariableInstancesCmd(executionId, variableNames, false, locale, withLocalizationFallback));\n+    return commandExecutor.execute(new GetExecutionVariableInstancesCmd(executionId, variableNames, true, locale, withLocalizationFallback));\n   }\n \n   public Object getVariable(String executionId, String variableName) {\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 189,
    "bugNodeStartChar": 10183,
    "bugNodeLength": 105,
    "fixLineNum": 189,
    "fixNodeStartChar": 10183,
    "fixNodeLength": 104,
    "sourceBeforeFix": "new GetExecutionVariableInstancesCmd(executionId,variableNames,false,locale,withLocalizationFallback)",
    "sourceAfterFix": "new GetExecutionVariableInstancesCmd(executionId,variableNames,true,locale,withLocalizationFallback)"
  },
  {
    "bugType": "SWAP_BOOLEAN_LITERAL",
    "fixCommitSHA1": "0ae1dde1e24af995f109c79c6ccf5ce5f769fc7b",
    "fixCommitParentSHA1": "7d0b05914372be7b1fec8290d3a4fda5fe2ec147",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/RuntimeServiceImpl.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/RuntimeServiceImpl.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/RuntimeServiceImpl.java\nindex 8b4e354..bb3a440 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/RuntimeServiceImpl.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/RuntimeServiceImpl.java\n@@ -182,11 +182,11 @@\n   }\n   \n   public Map<String, VariableInstance> getVariableInstancesLocal(String executionId, Collection<String> variableNames) {\n-    return commandExecutor.execute(new GetExecutionVariableInstancesCmd(executionId, variableNames, false));\n+    return commandExecutor.execute(new GetExecutionVariableInstancesCmd(executionId, variableNames, true));\n   }\n \n   public Map<String, VariableInstance> getVariableInstancesLocal(String executionId, Collection<String> variableNames, String locale, boolean withLocalizationFallback) {\n-    return commandExecutor.execute(new GetExecutionVariableInstancesCmd(executionId, variableNames, false, locale, withLocalizationFallback));\n+    return commandExecutor.execute(new GetExecutionVariableInstancesCmd(executionId, variableNames, true, locale, withLocalizationFallback));\n   }\n \n   public Object getVariable(String executionId, String variableName) {\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 185,
    "bugNodeStartChar": 9899,
    "bugNodeLength": 71,
    "fixLineNum": 185,
    "fixNodeStartChar": 9899,
    "fixNodeLength": 70,
    "sourceBeforeFix": "new GetExecutionVariableInstancesCmd(executionId,variableNames,false)",
    "sourceAfterFix": "new GetExecutionVariableInstancesCmd(executionId,variableNames,true)"
  },
  {
    "bugType": "SWAP_BOOLEAN_LITERAL",
    "fixCommitSHA1": "0ae1dde1e24af995f109c79c6ccf5ce5f769fc7b",
    "fixCommitParentSHA1": "7d0b05914372be7b1fec8290d3a4fda5fe2ec147",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/RuntimeServiceImpl.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/RuntimeServiceImpl.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/RuntimeServiceImpl.java\nindex 8b4e354..bb3a440 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/RuntimeServiceImpl.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/RuntimeServiceImpl.java\n@@ -182,11 +182,11 @@\n   }\n   \n   public Map<String, VariableInstance> getVariableInstancesLocal(String executionId, Collection<String> variableNames) {\n-    return commandExecutor.execute(new GetExecutionVariableInstancesCmd(executionId, variableNames, false));\n+    return commandExecutor.execute(new GetExecutionVariableInstancesCmd(executionId, variableNames, true));\n   }\n \n   public Map<String, VariableInstance> getVariableInstancesLocal(String executionId, Collection<String> variableNames, String locale, boolean withLocalizationFallback) {\n-    return commandExecutor.execute(new GetExecutionVariableInstancesCmd(executionId, variableNames, false, locale, withLocalizationFallback));\n+    return commandExecutor.execute(new GetExecutionVariableInstancesCmd(executionId, variableNames, true, locale, withLocalizationFallback));\n   }\n \n   public Object getVariable(String executionId, String variableName) {\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 189,
    "bugNodeStartChar": 10183,
    "bugNodeLength": 105,
    "fixLineNum": 189,
    "fixNodeStartChar": 10183,
    "fixNodeLength": 104,
    "sourceBeforeFix": "new GetExecutionVariableInstancesCmd(executionId,variableNames,false,locale,withLocalizationFallback)",
    "sourceAfterFix": "new GetExecutionVariableInstancesCmd(executionId,variableNames,true,locale,withLocalizationFallback)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8f235043a979aa4a0795b1c36c34a1ea3d03a3ae",
    "fixCommitParentSHA1": "ed033f816140f195ddf38fb4ef92e5bd85ff7194",
    "bugFilePath": "modules/activiti-ui/activiti-app-logic/src/main/java/com/activiti/service/runtime/DeploymentServiceImpl.java",
    "fixPatch": "diff --git a/modules/activiti-ui/activiti-app-logic/src/main/java/com/activiti/service/runtime/DeploymentServiceImpl.java b/modules/activiti-ui/activiti-app-logic/src/main/java/com/activiti/service/runtime/DeploymentServiceImpl.java\nindex aaf3d79..676d159 100644\n--- a/modules/activiti-ui/activiti-app-logic/src/main/java/com/activiti/service/runtime/DeploymentServiceImpl.java\n+++ b/modules/activiti-ui/activiti-app-logic/src/main/java/com/activiti/service/runtime/DeploymentServiceImpl.java\n@@ -333,7 +333,7 @@\n             }\n         }\n         \n-        if (StringUtils.isEmpty(formKey)) {\n+        if (StringUtils.isEmpty(finalFormKey)) {\n             finalFormKey = formKey;\n         }\n         \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 336,
    "bugNodeStartChar": 16813,
    "bugNodeLength": 28,
    "fixLineNum": 336,
    "fixNodeStartChar": 16813,
    "fixNodeLength": 33,
    "sourceBeforeFix": "StringUtils.isEmpty(formKey)",
    "sourceAfterFix": "StringUtils.isEmpty(finalFormKey)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "cc683d501d1fca3fd664f96b4b6b209aaf69a685",
    "fixCommitParentSHA1": "139c08353687a3b8aae24ea6eb2872994a6e8265",
    "bugFilePath": "modules/activiti-ui/activiti-app-logic/src/main/java/com/activiti/service/runtime/DeploymentServiceImpl.java",
    "fixPatch": "diff --git a/modules/activiti-ui/activiti-app-logic/src/main/java/com/activiti/service/runtime/DeploymentServiceImpl.java b/modules/activiti-ui/activiti-app-logic/src/main/java/com/activiti/service/runtime/DeploymentServiceImpl.java\nindex aaf3d79..676d159 100644\n--- a/modules/activiti-ui/activiti-app-logic/src/main/java/com/activiti/service/runtime/DeploymentServiceImpl.java\n+++ b/modules/activiti-ui/activiti-app-logic/src/main/java/com/activiti/service/runtime/DeploymentServiceImpl.java\n@@ -333,7 +333,7 @@\n             }\n         }\n         \n-        if (StringUtils.isEmpty(formKey)) {\n+        if (StringUtils.isEmpty(finalFormKey)) {\n             finalFormKey = formKey;\n         }\n         \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 336,
    "bugNodeStartChar": 16813,
    "bugNodeLength": 28,
    "fixLineNum": 336,
    "fixNodeStartChar": 16813,
    "fixNodeLength": 33,
    "sourceBeforeFix": "StringUtils.isEmpty(formKey)",
    "sourceAfterFix": "StringUtils.isEmpty(finalFormKey)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "45fe4ec0e1219a5e2716088c084807573378e2c4",
    "fixCommitParentSHA1": "e7a8bf9ffa42a743e0f359794a0c78e20fe291a9",
    "bugFilePath": "modules/activiti5-engine/src/main/java/org/activiti5/engine/impl/db/DbSqlSessionFactory.java",
    "fixPatch": "diff --git a/modules/activiti5-engine/src/main/java/org/activiti5/engine/impl/db/DbSqlSessionFactory.java b/modules/activiti5-engine/src/main/java/org/activiti5/engine/impl/db/DbSqlSessionFactory.java\nindex d5e7e56..8254e12 100644\n--- a/modules/activiti5-engine/src/main/java/org/activiti5/engine/impl/db/DbSqlSessionFactory.java\n+++ b/modules/activiti5-engine/src/main/java/org/activiti5/engine/impl/db/DbSqlSessionFactory.java\n@@ -332,7 +332,7 @@\n   }\n   \n   public Boolean isBulkInsertable(Class<? extends PersistentObject> persistentObjectClass) {\n-  \treturn bulkInsertableMap != null && bulkInsertableMap.containsKey(persistentObjectClass) && bulkInsertableMap.get(entityClass) == true;\n+  \treturn bulkInsertableMap != null && bulkInsertableMap.containsKey(persistentObjectClass) && bulkInsertableMap.get(persistentObjectClass) == true;\n   }\n \n   // getters and setters //////////////////////////////////////////////////////\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 335,
    "bugNodeStartChar": 23244,
    "bugNodeLength": 34,
    "fixLineNum": 335,
    "fixNodeStartChar": 23244,
    "fixNodeLength": 44,
    "sourceBeforeFix": "bulkInsertableMap.get(entityClass)",
    "sourceAfterFix": "bulkInsertableMap.get(persistentObjectClass)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "3e70031de5c5d25011ce8363d161e75595a84133",
    "fixCommitParentSHA1": "b6fee3ac606547a9a3630676c3775881036b6cd4",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSessionFactory.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSessionFactory.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSessionFactory.java\nindex 51c00f4..3659a08 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSessionFactory.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSessionFactory.java\n@@ -332,7 +332,7 @@\n   }\n   \n   public Boolean isBulkInsertable(Class<? extends PersistentObject> persistentObjectClass) {\n-  \treturn bulkInsertableMap != null && bulkInsertableMap.get(persistentObjectClass);\n+  \treturn bulkInsertableMap != null && bulkInsertableMap.containsKey(persistentObjectClass);\n   }\n \n   // getters and setters //////////////////////////////////////////////////////\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 335,
    "bugNodeStartChar": 23183,
    "bugNodeLength": 44,
    "fixLineNum": 335,
    "fixNodeStartChar": 23183,
    "fixNodeLength": 52,
    "sourceBeforeFix": "bulkInsertableMap.get(persistentObjectClass)",
    "sourceAfterFix": "bulkInsertableMap.containsKey(persistentObjectClass)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "3e70031de5c5d25011ce8363d161e75595a84133",
    "fixCommitParentSHA1": "b6fee3ac606547a9a3630676c3775881036b6cd4",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSessionFactory.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSessionFactory.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSessionFactory.java\nindex 51c00f4..3659a08 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSessionFactory.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSessionFactory.java\n@@ -332,7 +332,7 @@\n   }\n   \n   public Boolean isBulkInsertable(Class<? extends PersistentObject> persistentObjectClass) {\n-  \treturn bulkInsertableMap != null && bulkInsertableMap.get(persistentObjectClass);\n+  \treturn bulkInsertableMap != null && bulkInsertableMap.containsKey(persistentObjectClass);\n   }\n \n   // getters and setters //////////////////////////////////////////////////////\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 335,
    "bugNodeStartChar": 23183,
    "bugNodeLength": 44,
    "fixLineNum": 335,
    "fixNodeStartChar": 23183,
    "fixNodeLength": 52,
    "sourceBeforeFix": "bulkInsertableMap.get(persistentObjectClass)",
    "sourceAfterFix": "bulkInsertableMap.containsKey(persistentObjectClass)"
  },
  {
    "bugType": "MORE_SPECIFIC_IF",
    "fixCommitSHA1": "8308774c0daeeab64404f34333d927a666dd31d6",
    "fixCommitParentSHA1": "9837d651146a9006b363a535ae957e537b1dac8a",
    "bugFilePath": "modules/activiti-diagram-rest/src/main/java/org/activiti/rest/diagram/services/BaseProcessDefinitionDiagramLayoutResource.java",
    "fixPatch": "diff --git a/modules/activiti-diagram-rest/src/main/java/org/activiti/rest/diagram/services/BaseProcessDefinitionDiagramLayoutResource.java b/modules/activiti-diagram-rest/src/main/java/org/activiti/rest/diagram/services/BaseProcessDefinitionDiagramLayoutResource.java\nindex 960cfc5..8f8c9a0 100644\n--- a/modules/activiti-diagram-rest/src/main/java/org/activiti/rest/diagram/services/BaseProcessDefinitionDiagramLayoutResource.java\n+++ b/modules/activiti-diagram-rest/src/main/java/org/activiti/rest/diagram/services/BaseProcessDefinitionDiagramLayoutResource.java\n@@ -436,7 +436,7 @@\n \r\n         // If active activities nas no instance of this callActivity then add\r\n         // last definition\r\n-        if (processInstanceArray.size() == 0) {\r\n+        if (processInstanceArray.size() == 0 && StringUtils.isNotEmpty(callActivityBehavior.getProcessDefinitonKey())) {\r\n           // Get last definition by key\r\n           ProcessDefinition lastProcessDefinition = repositoryService\r\n               .createProcessDefinitionQuery()\r\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 439,
    "bugNodeStartChar": 19694,
    "bugNodeLength": 32,
    "fixLineNum": 439,
    "fixNodeStartChar": 19256,
    "fixNodeLength": 105,
    "sourceBeforeFix": "processInstanceArray.size() == 0",
    "sourceAfterFix": "processInstanceArray.size() == 0 && StringUtils.isNotEmpty(callActivityBehavior.getProcessDefinitonKey())"
  },
  {
    "bugType": "MORE_SPECIFIC_IF",
    "fixCommitSHA1": "9223ede19d01b9b30581ec60dba7f6ffbce51cbb",
    "fixCommitParentSHA1": "1edfad1ae191c244d74818f54f334c10437990e4",
    "bugFilePath": "modules/activiti-diagram-rest/src/main/java/org/activiti/rest/diagram/services/BaseProcessDefinitionDiagramLayoutResource.java",
    "fixPatch": "diff --git a/modules/activiti-diagram-rest/src/main/java/org/activiti/rest/diagram/services/BaseProcessDefinitionDiagramLayoutResource.java b/modules/activiti-diagram-rest/src/main/java/org/activiti/rest/diagram/services/BaseProcessDefinitionDiagramLayoutResource.java\nindex 960cfc5..8f8c9a0 100644\n--- a/modules/activiti-diagram-rest/src/main/java/org/activiti/rest/diagram/services/BaseProcessDefinitionDiagramLayoutResource.java\n+++ b/modules/activiti-diagram-rest/src/main/java/org/activiti/rest/diagram/services/BaseProcessDefinitionDiagramLayoutResource.java\n@@ -436,7 +436,7 @@\n \r\n         // If active activities nas no instance of this callActivity then add\r\n         // last definition\r\n-        if (processInstanceArray.size() == 0) {\r\n+        if (processInstanceArray.size() == 0 && StringUtils.isNotEmpty(callActivityBehavior.getProcessDefinitonKey())) {\r\n           // Get last definition by key\r\n           ProcessDefinition lastProcessDefinition = repositoryService\r\n               .createProcessDefinitionQuery()\r\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 439,
    "bugNodeStartChar": 19694,
    "bugNodeLength": 32,
    "fixLineNum": 439,
    "fixNodeStartChar": 19256,
    "fixNodeLength": 105,
    "sourceBeforeFix": "processInstanceArray.size() == 0",
    "sourceAfterFix": "processInstanceArray.size() == 0 && StringUtils.isNotEmpty(callActivityBehavior.getProcessDefinitonKey())"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "0f61fff1d9412a00df98de912cfd295cd3440f38",
    "fixCommitParentSHA1": "33ff3f57c16c40545454c2a368f89fc4e47fc85d",
    "bugFilePath": "modules/activiti-modeler/src/main/java/org/activiti/rest/editor/main/StencilsetRestResource.java",
    "fixPatch": "diff --git a/modules/activiti-modeler/src/main/java/org/activiti/rest/editor/main/StencilsetRestResource.java b/modules/activiti-modeler/src/main/java/org/activiti/rest/editor/main/StencilsetRestResource.java\nindex 903efbc..4502b19 100644\n--- a/modules/activiti-modeler/src/main/java/org/activiti/rest/editor/main/StencilsetRestResource.java\n+++ b/modules/activiti-modeler/src/main/java/org/activiti/rest/editor/main/StencilsetRestResource.java\n@@ -27,12 +27,11 @@\n @RestController\n public class StencilsetRestResource {\n \n-  @RequestMapping(value = \"/editor/stencilset\", method = RequestMethod.GET, produces = \"application/json\")\n-  public @ResponseBody\n-  String getStencilset() {\n+  @RequestMapping(value=\"/editor/stencilset\", method = RequestMethod.GET, produces = \"application/json;charset=utf-8\")\n+  public @ResponseBody String getStencilset() {\n     InputStream stencilsetStream = this.getClass().getClassLoader().getResourceAsStream(\"stencilset.json\");\n     try {\n-      return IOUtils.toString(stencilsetStream);\n+      return IOUtils.toString(stencilsetStream, \"utf-8\");\n     } catch (Exception e) {\n       throw new ActivitiException(\"Error while loading stencil set\", e);\n     }\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 35,
    "bugNodeStartChar": 1343,
    "bugNodeLength": 34,
    "fixLineNum": 35,
    "fixNodeStartChar": 1343,
    "fixNodeLength": 43,
    "sourceBeforeFix": "IOUtils.toString(stencilsetStream)",
    "sourceAfterFix": "IOUtils.toString(stencilsetStream,\"utf-8\")"
  },
  {
    "bugType": "MORE_SPECIFIC_IF",
    "fixCommitSHA1": "2d592d60961db355a017024266e3dc4bb2a63ab7",
    "fixCommitParentSHA1": "0014d130387614ce1602773d13d657cf928255c5",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/variable/JPAEntityScanner.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/variable/JPAEntityScanner.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/variable/JPAEntityScanner.java\nindex 5fbbb87..f3e9bf7 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/variable/JPAEntityScanner.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/variable/JPAEntityScanner.java\n@@ -70,7 +70,7 @@\n     Id idAnnotation = null;\n     for (Method method : methods) {\n       idAnnotation = method.getAnnotation(Id.class);\n-      if (idAnnotation != null) {\n+      if(idAnnotation != null && !method.isBridge()) {\n         idMethod = method;\n         break;\n       }\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 73,
    "bugNodeStartChar": 2496,
    "bugNodeLength": 20,
    "fixLineNum": 73,
    "fixNodeStartChar": 2495,
    "fixNodeLength": 42,
    "sourceBeforeFix": "idAnnotation != null",
    "sourceAfterFix": "idAnnotation != null && !method.isBridge()"
  },
  {
    "bugType": "MORE_SPECIFIC_IF",
    "fixCommitSHA1": "093378c268431a115a33a107a44c295e0c6b64c4",
    "fixCommitParentSHA1": "ab03eef34c612d77f93d7af5563c6766d89dbb2d",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/variable/JPAEntityScanner.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/variable/JPAEntityScanner.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/variable/JPAEntityScanner.java\nindex 8268ae2..0eb674c 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/variable/JPAEntityScanner.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/variable/JPAEntityScanner.java\n@@ -71,7 +71,7 @@\n     Id idAnnotation = null;\n     for(Method method : methods) {\n       idAnnotation = method.getAnnotation(Id.class);\n-      if(idAnnotation != null) {\n+      if(idAnnotation != null && !method.isBridge()) {\n         idMethod = method;\n         break;\n       }\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 74,
    "bugNodeStartChar": 2510,
    "bugNodeLength": 20,
    "fixLineNum": 74,
    "fixNodeStartChar": 2510,
    "fixNodeLength": 42,
    "sourceBeforeFix": "idAnnotation != null",
    "sourceAfterFix": "idAnnotation != null && !method.isBridge()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "5622a68e763431819499b28fd976dd8d240480de",
    "fixCommitParentSHA1": "f73627cc2e2c173446ece066c8f9e9eb81178a47",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/delegate/event/impl/ActivitiEventDispatcherImpl.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/delegate/event/impl/ActivitiEventDispatcherImpl.java b/modules/activiti-engine/src/main/java/org/activiti/engine/delegate/event/impl/ActivitiEventDispatcherImpl.java\nindex a215ea2..a3b31d8 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/delegate/event/impl/ActivitiEventDispatcherImpl.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/delegate/event/impl/ActivitiEventDispatcherImpl.java\n@@ -102,7 +102,7 @@\n \n     if (event instanceof ActivitiEntityEvent) {\n       Object entity = ((ActivitiEntityEvent) event).getEntity();\n-      if (entity instanceof ProcessDefinition) {\n+      if (entity instanceof ProcessDefinitionEntity) {\n         result = (ProcessDefinitionEntity) entity;\n       }\n     }\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 105,
    "bugNodeStartChar": 4050,
    "bugNodeLength": 35,
    "fixLineNum": 105,
    "fixNodeStartChar": 4050,
    "fixNodeLength": 41,
    "sourceBeforeFix": "entity instanceof ProcessDefinition",
    "sourceAfterFix": "entity instanceof ProcessDefinitionEntity"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "041d650753ff4b846fc86e4266658fc64046bc45",
    "fixCommitParentSHA1": "ca05ef903e102e027f0e983d06dd075e479fff1e",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/delegate/event/impl/ActivitiEventDispatcherImpl.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/delegate/event/impl/ActivitiEventDispatcherImpl.java b/modules/activiti-engine/src/main/java/org/activiti/engine/delegate/event/impl/ActivitiEventDispatcherImpl.java\nindex a215ea2..a3b31d8 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/delegate/event/impl/ActivitiEventDispatcherImpl.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/delegate/event/impl/ActivitiEventDispatcherImpl.java\n@@ -102,7 +102,7 @@\n \n     if (event instanceof ActivitiEntityEvent) {\n       Object entity = ((ActivitiEntityEvent) event).getEntity();\n-      if (entity instanceof ProcessDefinition) {\n+      if (entity instanceof ProcessDefinitionEntity) {\n         result = (ProcessDefinitionEntity) entity;\n       }\n     }\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 105,
    "bugNodeStartChar": 4050,
    "bugNodeLength": 35,
    "fixLineNum": 105,
    "fixNodeStartChar": 4050,
    "fixNodeLength": 41,
    "sourceBeforeFix": "entity instanceof ProcessDefinition",
    "sourceAfterFix": "entity instanceof ProcessDefinitionEntity"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "c015d11303339f50254a10be7335fd33546911ab",
    "fixCommitParentSHA1": "d9dc1d6e0dfb3965544251d705aca06ea0352922",
    "bugFilePath": "modules/activiti-modeler/src/main/java/org/activiti/rest/editor/main/StencilsetRestResource.java",
    "fixPatch": "diff --git a/modules/activiti-modeler/src/main/java/org/activiti/rest/editor/main/StencilsetRestResource.java b/modules/activiti-modeler/src/main/java/org/activiti/rest/editor/main/StencilsetRestResource.java\nindex b07c4a7..4502b19 100644\n--- a/modules/activiti-modeler/src/main/java/org/activiti/rest/editor/main/StencilsetRestResource.java\n+++ b/modules/activiti-modeler/src/main/java/org/activiti/rest/editor/main/StencilsetRestResource.java\n@@ -27,11 +27,11 @@\n @RestController\n public class StencilsetRestResource {\n   \n-  @RequestMapping(value=\"/editor/stencilset\", method = RequestMethod.GET, produces = \"application/json\")\n+  @RequestMapping(value=\"/editor/stencilset\", method = RequestMethod.GET, produces = \"application/json;charset=utf-8\")\n   public @ResponseBody String getStencilset() {\n     InputStream stencilsetStream = this.getClass().getClassLoader().getResourceAsStream(\"stencilset.json\");\n     try {\n-      return IOUtils.toString(stencilsetStream);\n+      return IOUtils.toString(stencilsetStream, \"utf-8\");\n     } catch (Exception e) {\n       throw new ActivitiException(\"Error while loading stencil set\", e);\n     }\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 34,
    "bugNodeStartChar": 1341,
    "bugNodeLength": 34,
    "fixLineNum": 34,
    "fixNodeStartChar": 1341,
    "fixNodeLength": 43,
    "sourceBeforeFix": "IOUtils.toString(stencilsetStream)",
    "sourceAfterFix": "IOUtils.toString(stencilsetStream,\"utf-8\")"
  },
  {
    "bugType": "MORE_SPECIFIC_IF",
    "fixCommitSHA1": "90446c9d7ede4e6cfef750663856d6d08f8c8809",
    "fixCommitParentSHA1": "d063efccb3efc0530efb19f80018627c2ebebd26",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/variable/JPAEntityScanner.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/variable/JPAEntityScanner.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/variable/JPAEntityScanner.java\nindex 8268ae2..0eb674c 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/variable/JPAEntityScanner.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/variable/JPAEntityScanner.java\n@@ -71,7 +71,7 @@\n     Id idAnnotation = null;\n     for(Method method : methods) {\n       idAnnotation = method.getAnnotation(Id.class);\n-      if(idAnnotation != null) {\n+      if(idAnnotation != null && !method.isBridge()) {\n         idMethod = method;\n         break;\n       }\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 74,
    "bugNodeStartChar": 2510,
    "bugNodeLength": 20,
    "fixLineNum": 74,
    "fixNodeStartChar": 2510,
    "fixNodeLength": 42,
    "sourceBeforeFix": "idAnnotation != null",
    "sourceAfterFix": "idAnnotation != null && !method.isBridge()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "7753dab97afbc48e87d8d07961c356dbc2885401",
    "fixCommitParentSHA1": "cea5b603b2c6941cdb892a8f2e76ec0e309633c7",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/agenda/Agenda.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/agenda/Agenda.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/agenda/Agenda.java\nindex 7da71dd..9949957 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/agenda/Agenda.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/agenda/Agenda.java\n@@ -69,7 +69,7 @@\n     }\n     \n     public void planContinueProcessSynchronousOperation(ActivityExecution execution) {\n-        planOperation(new ContinueProcessOperation(this, execution, true), (ExecutionEntity) execution);\n+        planOperation(new ContinueProcessOperation(commandContext, execution, true), (ExecutionEntity) execution);\n     }\n \n     public void planTakeOutgoingSequenceFlowsOperation(ActivityExecution execution, boolean evaluateConditions) {\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 72,
    "bugNodeStartChar": 2319,
    "bugNodeLength": 4,
    "fixLineNum": 72,
    "fixNodeStartChar": 2319,
    "fixNodeLength": 14,
    "sourceBeforeFix": "new ContinueProcessOperation(this,execution,true)",
    "sourceAfterFix": "new ContinueProcessOperation(commandContext,execution,true)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "f9dfe09527afac8deca02509f6e8bcae101ae8fb",
    "fixCommitParentSHA1": "3affd3cfe6f8256e85fadc2c734bd6a17cf82a82",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/cmd/JobRetryCmd.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cmd/JobRetryCmd.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cmd/JobRetryCmd.java\nindex a390b60..8bbe954 100755\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cmd/JobRetryCmd.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cmd/JobRetryCmd.java\n@@ -64,7 +64,7 @@\n     ProcessEngineConfiguration processEngineConfig = commandContext.getProcessEngineConfiguration();\r\n    \r\n     if (activity == null || activity.getFailedJobRetryTimeCycleValue() == null) {\r\n-      log.error(\"activitiy or FailedJobRetryTimerCycleValue is null in job \" + jobId + \"'. only decrementing retries.\");\r\n+      log.info(\"activitiy or FailedJobRetryTimerCycleValue is null in job \" + jobId + \"'. only decrementing retries.\");\r\n       job.setRetries(job.getRetries() - 1);\r\n       job.setLockOwner(null);\r\n       job.setLockExpirationTime(null);\r\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 67,
    "bugNodeStartChar": 2702,
    "bugNodeLength": 113,
    "fixLineNum": 67,
    "fixNodeStartChar": 2636,
    "fixNodeLength": 112,
    "sourceBeforeFix": "log.error(\"activitiy or FailedJobRetryTimerCycleValue is null in job \" + jobId + \"'. only decrementing retries.\")",
    "sourceAfterFix": "log.info(\"activitiy or FailedJobRetryTimerCycleValue is null in job \" + jobId + \"'. only decrementing retries.\")"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "f9dfe09527afac8deca02509f6e8bcae101ae8fb",
    "fixCommitParentSHA1": "3affd3cfe6f8256e85fadc2c734bd6a17cf82a82",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/cmd/JobRetryCmd.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cmd/JobRetryCmd.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cmd/JobRetryCmd.java\nindex a390b60..8bbe954 100755\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cmd/JobRetryCmd.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cmd/JobRetryCmd.java\n@@ -64,7 +64,7 @@\n     ProcessEngineConfiguration processEngineConfig = commandContext.getProcessEngineConfiguration();\r\n    \r\n     if (activity == null || activity.getFailedJobRetryTimeCycleValue() == null) {\r\n-      log.error(\"activitiy or FailedJobRetryTimerCycleValue is null in job \" + jobId + \"'. only decrementing retries.\");\r\n+      log.info(\"activitiy or FailedJobRetryTimerCycleValue is null in job \" + jobId + \"'. only decrementing retries.\");\r\n       job.setRetries(job.getRetries() - 1);\r\n       job.setLockOwner(null);\r\n       job.setLockExpirationTime(null);\r\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 67,
    "bugNodeStartChar": 2702,
    "bugNodeLength": 113,
    "fixLineNum": 67,
    "fixNodeStartChar": 2636,
    "fixNodeLength": 112,
    "sourceBeforeFix": "log.error(\"activitiy or FailedJobRetryTimerCycleValue is null in job \" + jobId + \"'. only decrementing retries.\")",
    "sourceAfterFix": "log.info(\"activitiy or FailedJobRetryTimerCycleValue is null in job \" + jobId + \"'. only decrementing retries.\")"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "e10fb4a2fa797c81b9ab8052793527a3cb80cd73",
    "fixCommitParentSHA1": "604abdaceea67ab8f0e88f5e3866405c83a8b73e",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/cmd/JobRetryCmd.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cmd/JobRetryCmd.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cmd/JobRetryCmd.java\nindex 0a40a0b..b6f21ea 100755\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cmd/JobRetryCmd.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cmd/JobRetryCmd.java\n@@ -68,7 +68,7 @@\n     ProcessEngineConfiguration processEngineConfig = commandContext.getProcessEngineConfiguration();\r\n    \r\n     if (activity == null || activity.getFailedJobRetryTimeCycleValue() == null) {\r\n-      log.error(\"activitiy or FailedJobRetryTimerCycleValue is null in job \" + jobId + \"'. only decrementing retries.\");\r\n+      log.info(\"activitiy or FailedJobRetryTimerCycleValue is null in job \" + jobId + \"'. only decrementing retries.\");\r\n       job.setRetries(job.getRetries() - 1);\r\n       job.setLockOwner(null);\r\n       job.setLockExpirationTime(null);\r\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 71,
    "bugNodeStartChar": 3027,
    "bugNodeLength": 113,
    "fixLineNum": 71,
    "fixNodeStartChar": 2957,
    "fixNodeLength": 112,
    "sourceBeforeFix": "log.error(\"activitiy or FailedJobRetryTimerCycleValue is null in job \" + jobId + \"'. only decrementing retries.\")",
    "sourceAfterFix": "log.info(\"activitiy or FailedJobRetryTimerCycleValue is null in job \" + jobId + \"'. only decrementing retries.\")"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "e10fb4a2fa797c81b9ab8052793527a3cb80cd73",
    "fixCommitParentSHA1": "604abdaceea67ab8f0e88f5e3866405c83a8b73e",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/cmd/JobRetryCmd.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cmd/JobRetryCmd.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cmd/JobRetryCmd.java\nindex 0a40a0b..b6f21ea 100755\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cmd/JobRetryCmd.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cmd/JobRetryCmd.java\n@@ -68,7 +68,7 @@\n     ProcessEngineConfiguration processEngineConfig = commandContext.getProcessEngineConfiguration();\r\n    \r\n     if (activity == null || activity.getFailedJobRetryTimeCycleValue() == null) {\r\n-      log.error(\"activitiy or FailedJobRetryTimerCycleValue is null in job \" + jobId + \"'. only decrementing retries.\");\r\n+      log.info(\"activitiy or FailedJobRetryTimerCycleValue is null in job \" + jobId + \"'. only decrementing retries.\");\r\n       job.setRetries(job.getRetries() - 1);\r\n       job.setLockOwner(null);\r\n       job.setLockExpirationTime(null);\r\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 71,
    "bugNodeStartChar": 3027,
    "bugNodeLength": 113,
    "fixLineNum": 71,
    "fixNodeStartChar": 2957,
    "fixNodeLength": 112,
    "sourceBeforeFix": "log.error(\"activitiy or FailedJobRetryTimerCycleValue is null in job \" + jobId + \"'. only decrementing retries.\")",
    "sourceAfterFix": "log.info(\"activitiy or FailedJobRetryTimerCycleValue is null in job \" + jobId + \"'. only decrementing retries.\")"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "715113fb25e3eaa18df0fdaf2df54211bf691fbe",
    "fixCommitParentSHA1": "2e8aa7bbd39325043556044d46f02855d08e82a3",
    "bugFilePath": "modules/activiti-jmx/src/main/java/org/activiti/management/jmx/DefaultManagementMBeanAssembler.java",
    "fixPatch": "diff --git a/modules/activiti-jmx/src/main/java/org/activiti/management/jmx/DefaultManagementMBeanAssembler.java b/modules/activiti-jmx/src/main/java/org/activiti/management/jmx/DefaultManagementMBeanAssembler.java\nindex d3af95f..e98c33f 100755\n--- a/modules/activiti-jmx/src/main/java/org/activiti/management/jmx/DefaultManagementMBeanAssembler.java\n+++ b/modules/activiti-jmx/src/main/java/org/activiti/management/jmx/DefaultManagementMBeanAssembler.java\n@@ -28,7 +28,7 @@\n  */\r\n public class DefaultManagementMBeanAssembler implements ManagementMBeanAssembler {\r\n \r\n-  private static final Logger LOG = LoggerFactory.getLogger(DefaultManagementAgent.class);\r\n+  private static final Logger LOG = LoggerFactory.getLogger(DefaultManagementMBeanAssembler.class);\r\n   \r\n   protected final MBeanInfoAssembler assembler;\r\n \r\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 31,
    "bugNodeStartChar": 1233,
    "bugNodeLength": 28,
    "fixLineNum": 31,
    "fixNodeStartChar": 1203,
    "fixNodeLength": 37,
    "sourceBeforeFix": "DefaultManagementAgent.class",
    "sourceAfterFix": "DefaultManagementMBeanAssembler.class"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "715113fb25e3eaa18df0fdaf2df54211bf691fbe",
    "fixCommitParentSHA1": "2e8aa7bbd39325043556044d46f02855d08e82a3",
    "bugFilePath": "modules/activiti-jmx/src/main/java/org/activiti/management/jmx/MBeanInfoAssembler.java",
    "fixPatch": "diff --git a/modules/activiti-jmx/src/main/java/org/activiti/management/jmx/MBeanInfoAssembler.java b/modules/activiti-jmx/src/main/java/org/activiti/management/jmx/MBeanInfoAssembler.java\nindex 5b3bcb6..ae5b13b 100755\n--- a/modules/activiti-jmx/src/main/java/org/activiti/management/jmx/MBeanInfoAssembler.java\n+++ b/modules/activiti-jmx/src/main/java/org/activiti/management/jmx/MBeanInfoAssembler.java\n@@ -45,7 +45,7 @@\n \r\n public class MBeanInfoAssembler {\r\n \r\n-  private static final Logger LOG = LoggerFactory.getLogger(DefaultManagementAgent.class);\r\n+  private static final Logger LOG = LoggerFactory.getLogger(MBeanInfoAssembler.class);\r\n \r\n   protected final WeakHashMap<Class< ? >, MBeanAttributesAndOperations> cache = new WeakHashMap<Class< ? >, MBeanAttributesAndOperations>(10);\r\n \r\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 48,
    "bugNodeStartChar": 1858,
    "bugNodeLength": 28,
    "fixLineNum": 48,
    "fixNodeStartChar": 1811,
    "fixNodeLength": 24,
    "sourceBeforeFix": "DefaultManagementAgent.class",
    "sourceAfterFix": "MBeanInfoAssembler.class"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "2fd76b44572ea58787e055deffd83288414dd2ef",
    "fixCommitParentSHA1": "3f678faf3071dbed6a9519c180c23312da41a7cd",
    "bugFilePath": "modules/activiti-jmx/src/main/java/org/activiti/management/jmx/DefaultManagementMBeanAssembler.java",
    "fixPatch": "diff --git a/modules/activiti-jmx/src/main/java/org/activiti/management/jmx/DefaultManagementMBeanAssembler.java b/modules/activiti-jmx/src/main/java/org/activiti/management/jmx/DefaultManagementMBeanAssembler.java\nindex d3af95f..e98c33f 100755\n--- a/modules/activiti-jmx/src/main/java/org/activiti/management/jmx/DefaultManagementMBeanAssembler.java\n+++ b/modules/activiti-jmx/src/main/java/org/activiti/management/jmx/DefaultManagementMBeanAssembler.java\n@@ -28,7 +28,7 @@\n  */\r\n public class DefaultManagementMBeanAssembler implements ManagementMBeanAssembler {\r\n \r\n-  private static final Logger LOG = LoggerFactory.getLogger(DefaultManagementAgent.class);\r\n+  private static final Logger LOG = LoggerFactory.getLogger(DefaultManagementMBeanAssembler.class);\r\n   \r\n   protected final MBeanInfoAssembler assembler;\r\n \r\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 31,
    "bugNodeStartChar": 1233,
    "bugNodeLength": 28,
    "fixLineNum": 31,
    "fixNodeStartChar": 1203,
    "fixNodeLength": 37,
    "sourceBeforeFix": "DefaultManagementAgent.class",
    "sourceAfterFix": "DefaultManagementMBeanAssembler.class"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "2fd76b44572ea58787e055deffd83288414dd2ef",
    "fixCommitParentSHA1": "3f678faf3071dbed6a9519c180c23312da41a7cd",
    "bugFilePath": "modules/activiti-jmx/src/main/java/org/activiti/management/jmx/MBeanInfoAssembler.java",
    "fixPatch": "diff --git a/modules/activiti-jmx/src/main/java/org/activiti/management/jmx/MBeanInfoAssembler.java b/modules/activiti-jmx/src/main/java/org/activiti/management/jmx/MBeanInfoAssembler.java\nindex 5b3bcb6..ae5b13b 100755\n--- a/modules/activiti-jmx/src/main/java/org/activiti/management/jmx/MBeanInfoAssembler.java\n+++ b/modules/activiti-jmx/src/main/java/org/activiti/management/jmx/MBeanInfoAssembler.java\n@@ -45,7 +45,7 @@\n \r\n public class MBeanInfoAssembler {\r\n \r\n-  private static final Logger LOG = LoggerFactory.getLogger(DefaultManagementAgent.class);\r\n+  private static final Logger LOG = LoggerFactory.getLogger(MBeanInfoAssembler.class);\r\n \r\n   protected final WeakHashMap<Class< ? >, MBeanAttributesAndOperations> cache = new WeakHashMap<Class< ? >, MBeanAttributesAndOperations>(10);\r\n \r\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 48,
    "bugNodeStartChar": 1858,
    "bugNodeLength": 28,
    "fixLineNum": 48,
    "fixNodeStartChar": 1811,
    "fixNodeLength": 24,
    "sourceBeforeFix": "DefaultManagementAgent.class",
    "sourceAfterFix": "MBeanInfoAssembler.class"
  },
  {
    "bugType": "SWAP_BOOLEAN_LITERAL",
    "fixCommitSHA1": "14df7cdd9469716d8da651a91df15add6c172f82",
    "fixCommitParentSHA1": "edc689ff3ced7335dec2b639cba2bfa9a121d011",
    "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/api/repository/DeployInvalidXmlTest.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/repository/DeployInvalidXmlTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/repository/DeployInvalidXmlTest.java\nindex 66a75c0..630be40 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/repository/DeployInvalidXmlTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/repository/DeployInvalidXmlTest.java\n@@ -27,7 +27,7 @@\n   protected void setUp() throws Exception {\n     super.setUp();\n     \n-    processEngineConfiguration.setEnableSafeBpmnXml(false); // Needs to be enabled to test this\n+    processEngineConfiguration.setEnableSafeBpmnXml(true); // Needs to be enabled to test this\n   }\n   \n   @Override\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 30,
    "bugNodeStartChar": 1016,
    "bugNodeLength": 54,
    "fixLineNum": 30,
    "fixNodeStartChar": 1016,
    "fixNodeLength": 53,
    "sourceBeforeFix": "processEngineConfiguration.setEnableSafeBpmnXml(false)",
    "sourceAfterFix": "processEngineConfiguration.setEnableSafeBpmnXml(true)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "0e5fb3b2a49dc21509c63d70d2a6120830c4d51a",
    "fixCommitParentSHA1": "c19b4f172ee90391f9d3cdb7d78593f60c25da29",
    "bugFilePath": "modules/activiti-jmx/src/test/java/org/activiti/management/jmx/MBeanInfoAssemblerTest.java",
    "fixPatch": "diff --git a/modules/activiti-jmx/src/test/java/org/activiti/management/jmx/MBeanInfoAssemblerTest.java b/modules/activiti-jmx/src/test/java/org/activiti/management/jmx/MBeanInfoAssemblerTest.java\nindex 5b665bd..5a4fb1a 100755\n--- a/modules/activiti-jmx/src/test/java/org/activiti/management/jmx/MBeanInfoAssemblerTest.java\n+++ b/modules/activiti-jmx/src/test/java/org/activiti/management/jmx/MBeanInfoAssemblerTest.java\n@@ -136,9 +136,9 @@\n     ModelMBeanInfo beanInfo = mbeanInfoAssembler.getMBeanInfo(new BadInherited(), null, \"someName\");\r\n     assertNotNull(beanInfo);\r\n     assertNotNull(beanInfo.getAttributes());\r\n-    assertEquals(0, beanInfo.getAttributes().length);\r\n+    assertEquals(2, beanInfo.getAttributes().length);\r\n     assertNotNull(beanInfo.getOperations());\r\n-    assertEquals(0, beanInfo.getOperations().length);\r\n+    assertEquals(1, beanInfo.getOperations().length);\r\n \r\n   }\r\n \r\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 139,
    "bugNodeStartChar": 5667,
    "bugNodeLength": 48,
    "fixLineNum": 139,
    "fixNodeStartChar": 5529,
    "fixNodeLength": 48,
    "sourceBeforeFix": "assertEquals(0,beanInfo.getAttributes().length)",
    "sourceAfterFix": "assertEquals(2,beanInfo.getAttributes().length)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "0e5fb3b2a49dc21509c63d70d2a6120830c4d51a",
    "fixCommitParentSHA1": "c19b4f172ee90391f9d3cdb7d78593f60c25da29",
    "bugFilePath": "modules/activiti-jmx/src/test/java/org/activiti/management/jmx/MBeanInfoAssemblerTest.java",
    "fixPatch": "diff --git a/modules/activiti-jmx/src/test/java/org/activiti/management/jmx/MBeanInfoAssemblerTest.java b/modules/activiti-jmx/src/test/java/org/activiti/management/jmx/MBeanInfoAssemblerTest.java\nindex 5b665bd..5a4fb1a 100755\n--- a/modules/activiti-jmx/src/test/java/org/activiti/management/jmx/MBeanInfoAssemblerTest.java\n+++ b/modules/activiti-jmx/src/test/java/org/activiti/management/jmx/MBeanInfoAssemblerTest.java\n@@ -136,9 +136,9 @@\n     ModelMBeanInfo beanInfo = mbeanInfoAssembler.getMBeanInfo(new BadInherited(), null, \"someName\");\r\n     assertNotNull(beanInfo);\r\n     assertNotNull(beanInfo.getAttributes());\r\n-    assertEquals(0, beanInfo.getAttributes().length);\r\n+    assertEquals(2, beanInfo.getAttributes().length);\r\n     assertNotNull(beanInfo.getOperations());\r\n-    assertEquals(0, beanInfo.getOperations().length);\r\n+    assertEquals(1, beanInfo.getOperations().length);\r\n \r\n   }\r\n \r\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 141,
    "bugNodeStartChar": 5768,
    "bugNodeLength": 48,
    "fixLineNum": 141,
    "fixNodeStartChar": 5628,
    "fixNodeLength": 48,
    "sourceBeforeFix": "assertEquals(0,beanInfo.getOperations().length)",
    "sourceAfterFix": "assertEquals(1,beanInfo.getOperations().length)"
  },
  {
    "bugType": "MORE_SPECIFIC_IF",
    "fixCommitSHA1": "eebcaa5425216fdc9a9c4349090fa68c6a2504d3",
    "fixCommitParentSHA1": "43e4684a43da4b8232bf59e1028f3e77d253d61c",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSession.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSession.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSession.java\nindex f0aabd9..0b06f01 100755\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSession.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSession.java\n@@ -1067,12 +1067,12 @@\n       ResultSet tables = null;\n \n       String catalog = this.connectionMetadataDefaultCatalog;\n-      if (dbSqlSessionFactory.getDatabaseCatalog() != null) {\n+      if (dbSqlSessionFactory.getDatabaseCatalog() != null && dbSqlSessionFactory.getDatabaseCatalog().length() > 0) {\n         catalog = dbSqlSessionFactory.getDatabaseCatalog();\n       }\n \n       String schema = this.connectionMetadataDefaultSchema;\n-      if (dbSqlSessionFactory.getDatabaseSchema()!=null) {\n+      if (dbSqlSessionFactory.getDatabaseSchema() != null && dbSqlSessionFactory.getDatabaseSchema().length() > 0) {\n         schema = dbSqlSessionFactory.getDatabaseSchema();\n       }\n       \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 1070,
    "bugNodeStartChar": 40146,
    "bugNodeLength": 48,
    "fixLineNum": 1070,
    "fixNodeStartChar": 40146,
    "fixNodeLength": 105,
    "sourceBeforeFix": "dbSqlSessionFactory.getDatabaseCatalog() != null",
    "sourceAfterFix": "dbSqlSessionFactory.getDatabaseCatalog() != null && dbSqlSessionFactory.getDatabaseCatalog().length() > 0"
  },
  {
    "bugType": "MORE_SPECIFIC_IF",
    "fixCommitSHA1": "eebcaa5425216fdc9a9c4349090fa68c6a2504d3",
    "fixCommitParentSHA1": "43e4684a43da4b8232bf59e1028f3e77d253d61c",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSession.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSession.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSession.java\nindex f0aabd9..0b06f01 100755\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSession.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSession.java\n@@ -1067,12 +1067,12 @@\n       ResultSet tables = null;\n \n       String catalog = this.connectionMetadataDefaultCatalog;\n-      if (dbSqlSessionFactory.getDatabaseCatalog() != null) {\n+      if (dbSqlSessionFactory.getDatabaseCatalog() != null && dbSqlSessionFactory.getDatabaseCatalog().length() > 0) {\n         catalog = dbSqlSessionFactory.getDatabaseCatalog();\n       }\n \n       String schema = this.connectionMetadataDefaultSchema;\n-      if (dbSqlSessionFactory.getDatabaseSchema()!=null) {\n+      if (dbSqlSessionFactory.getDatabaseSchema() != null && dbSqlSessionFactory.getDatabaseSchema().length() > 0) {\n         schema = dbSqlSessionFactory.getDatabaseSchema();\n       }\n       \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 1075,
    "bugNodeStartChar": 40337,
    "bugNodeLength": 45,
    "fixLineNum": 1075,
    "fixNodeStartChar": 40337,
    "fixNodeLength": 103,
    "sourceBeforeFix": "dbSqlSessionFactory.getDatabaseSchema() != null",
    "sourceAfterFix": "dbSqlSessionFactory.getDatabaseSchema() != null && dbSqlSessionFactory.getDatabaseSchema().length() > 0"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "a4662237bc467310f0dc1c28aa621f84571225b1",
    "fixCommitParentSHA1": "ad69603a419c345ab963288ec2ff0a737d11db5f",
    "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/api/event/JobEventsTest.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/event/JobEventsTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/event/JobEventsTest.java\nindex e390609..01472b3 100755\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/event/JobEventsTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/event/JobEventsTest.java\n@@ -105,7 +105,7 @@\n \n     processEngineConfiguration.setClock(testClock);\n \n-    testClock.setCurrentTime(new Date(0));\n+    testClock.setCurrentTime(new Date(1));\n     ProcessInstance processInstance = runtimeService.startProcessInstanceByKey(\"testRepetitionJobEvents\");\n     Job theJob = managementService.createJobQuery().processInstanceId(processInstance.getId()).singleResult();\n     assertNotNull(theJob);\n@@ -156,7 +156,7 @@\n \n     processEngineConfiguration.setClock(testClock);\n \n-    testClock.setCurrentTime(new Date(0));\n+    testClock.setCurrentTime(new Date(1));\n     runtimeService.startProcessInstanceByKey(\"testTimerCancelledEvent\");\n     listener.clearEventsReceived();\n \n@@ -170,7 +170,7 @@\n   @Deployment(resources = \"org/activiti/engine/test/api/event/JobEventsTest.testJobCanceledEventOnBoundaryEvent.bpmn20.xml\")\n   public void testJobCanceledEventByManagementService() throws Exception {\n     // GIVEN\n-    processEngineConfiguration.getClock().setCurrentTime(new Date(0));\n+    processEngineConfiguration.getClock().setCurrentTime(new Date(1));\n     ProcessInstance processInstance = runtimeService.startProcessInstanceByKey(\"testTimerCancelledEvent\");\n     listener.clearEventsReceived();\n \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 108,
    "bugNodeStartChar": 4051,
    "bugNodeLength": 11,
    "fixLineNum": 108,
    "fixNodeStartChar": 4051,
    "fixNodeLength": 11,
    "sourceBeforeFix": "new Date(0)",
    "sourceAfterFix": "new Date(1)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "a4662237bc467310f0dc1c28aa621f84571225b1",
    "fixCommitParentSHA1": "ad69603a419c345ab963288ec2ff0a737d11db5f",
    "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/api/event/JobEventsTest.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/event/JobEventsTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/event/JobEventsTest.java\nindex e390609..01472b3 100755\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/event/JobEventsTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/event/JobEventsTest.java\n@@ -105,7 +105,7 @@\n \n     processEngineConfiguration.setClock(testClock);\n \n-    testClock.setCurrentTime(new Date(0));\n+    testClock.setCurrentTime(new Date(1));\n     ProcessInstance processInstance = runtimeService.startProcessInstanceByKey(\"testRepetitionJobEvents\");\n     Job theJob = managementService.createJobQuery().processInstanceId(processInstance.getId()).singleResult();\n     assertNotNull(theJob);\n@@ -156,7 +156,7 @@\n \n     processEngineConfiguration.setClock(testClock);\n \n-    testClock.setCurrentTime(new Date(0));\n+    testClock.setCurrentTime(new Date(1));\n     runtimeService.startProcessInstanceByKey(\"testTimerCancelledEvent\");\n     listener.clearEventsReceived();\n \n@@ -170,7 +170,7 @@\n   @Deployment(resources = \"org/activiti/engine/test/api/event/JobEventsTest.testJobCanceledEventOnBoundaryEvent.bpmn20.xml\")\n   public void testJobCanceledEventByManagementService() throws Exception {\n     // GIVEN\n-    processEngineConfiguration.getClock().setCurrentTime(new Date(0));\n+    processEngineConfiguration.getClock().setCurrentTime(new Date(1));\n     ProcessInstance processInstance = runtimeService.startProcessInstanceByKey(\"testTimerCancelledEvent\");\n     listener.clearEventsReceived();\n \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 159,
    "bugNodeStartChar": 5922,
    "bugNodeLength": 11,
    "fixLineNum": 159,
    "fixNodeStartChar": 5922,
    "fixNodeLength": 11,
    "sourceBeforeFix": "new Date(0)",
    "sourceAfterFix": "new Date(1)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "a4662237bc467310f0dc1c28aa621f84571225b1",
    "fixCommitParentSHA1": "ad69603a419c345ab963288ec2ff0a737d11db5f",
    "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/api/event/JobEventsTest.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/event/JobEventsTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/event/JobEventsTest.java\nindex e390609..01472b3 100755\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/event/JobEventsTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/event/JobEventsTest.java\n@@ -105,7 +105,7 @@\n \n     processEngineConfiguration.setClock(testClock);\n \n-    testClock.setCurrentTime(new Date(0));\n+    testClock.setCurrentTime(new Date(1));\n     ProcessInstance processInstance = runtimeService.startProcessInstanceByKey(\"testRepetitionJobEvents\");\n     Job theJob = managementService.createJobQuery().processInstanceId(processInstance.getId()).singleResult();\n     assertNotNull(theJob);\n@@ -156,7 +156,7 @@\n \n     processEngineConfiguration.setClock(testClock);\n \n-    testClock.setCurrentTime(new Date(0));\n+    testClock.setCurrentTime(new Date(1));\n     runtimeService.startProcessInstanceByKey(\"testTimerCancelledEvent\");\n     listener.clearEventsReceived();\n \n@@ -170,7 +170,7 @@\n   @Deployment(resources = \"org/activiti/engine/test/api/event/JobEventsTest.testJobCanceledEventOnBoundaryEvent.bpmn20.xml\")\n   public void testJobCanceledEventByManagementService() throws Exception {\n     // GIVEN\n-    processEngineConfiguration.getClock().setCurrentTime(new Date(0));\n+    processEngineConfiguration.getClock().setCurrentTime(new Date(1));\n     ProcessInstance processInstance = runtimeService.startProcessInstanceByKey(\"testTimerCancelledEvent\");\n     listener.clearEventsReceived();\n \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 173,
    "bugNodeStartChar": 6481,
    "bugNodeLength": 11,
    "fixLineNum": 173,
    "fixNodeStartChar": 6481,
    "fixNodeLength": 11,
    "sourceBeforeFix": "new Date(0)",
    "sourceAfterFix": "new Date(1)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "2b77ee60c2b8229ff24ac01937d16ec4dc36fe3d",
    "fixCommitParentSHA1": "09d327aa1f52300b895e725428c8905901069ec6",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/cmd/SetProcessDefinitionVersionCmd.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cmd/SetProcessDefinitionVersionCmd.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cmd/SetProcessDefinitionVersionCmd.java\nindex c6c7531..2f5c1ad 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cmd/SetProcessDefinitionVersionCmd.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cmd/SetProcessDefinitionVersionCmd.java\n@@ -115,7 +115,7 @@\n     \n     // switch all sub-executions of the process instance to the new process definition version\n     List<ExecutionEntity> childExecutions = executionManager\n-      .findChildExecutionsByParentExecutionId(processInstanceId);\n+      .findChildExecutionsByProcessInstanceId(processInstanceId);\n     for (ExecutionEntity executionEntity : childExecutions) {\n       validateAndSwitchVersionOfExecution(commandContext, executionEntity, newProcessDefinition);\n     }\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 117,
    "bugNodeStartChar": 5901,
    "bugNodeLength": 81,
    "fixLineNum": 117,
    "fixNodeStartChar": 5901,
    "fixNodeLength": 81,
    "sourceBeforeFix": "executionManager.findChildExecutionsByParentExecutionId(processInstanceId)",
    "sourceAfterFix": "executionManager.findChildExecutionsByProcessInstanceId(processInstanceId)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "2b77ee60c2b8229ff24ac01937d16ec4dc36fe3d",
    "fixCommitParentSHA1": "09d327aa1f52300b895e725428c8905901069ec6",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/cmd/SetProcessDefinitionVersionCmd.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cmd/SetProcessDefinitionVersionCmd.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cmd/SetProcessDefinitionVersionCmd.java\nindex c6c7531..2f5c1ad 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cmd/SetProcessDefinitionVersionCmd.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cmd/SetProcessDefinitionVersionCmd.java\n@@ -115,7 +115,7 @@\n     \n     // switch all sub-executions of the process instance to the new process definition version\n     List<ExecutionEntity> childExecutions = executionManager\n-      .findChildExecutionsByParentExecutionId(processInstanceId);\n+      .findChildExecutionsByProcessInstanceId(processInstanceId);\n     for (ExecutionEntity executionEntity : childExecutions) {\n       validateAndSwitchVersionOfExecution(commandContext, executionEntity, newProcessDefinition);\n     }\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 117,
    "bugNodeStartChar": 5901,
    "bugNodeLength": 81,
    "fixLineNum": 117,
    "fixNodeStartChar": 5901,
    "fixNodeLength": 81,
    "sourceBeforeFix": "executionManager.findChildExecutionsByParentExecutionId(processInstanceId)",
    "sourceAfterFix": "executionManager.findChildExecutionsByProcessInstanceId(processInstanceId)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "9767c69472f323cb94a4e0b123c364a626d480ea",
    "fixCommitParentSHA1": "173177b427479a8231475ff960d4d80b52bd9208",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/jobexecutor/ExecuteJobsRunnable.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/jobexecutor/ExecuteJobsRunnable.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/jobexecutor/ExecuteJobsRunnable.java\nindex 82ceb27..9273282 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/jobexecutor/ExecuteJobsRunnable.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/jobexecutor/ExecuteJobsRunnable.java\n@@ -27,7 +27,7 @@\n  */\n public class ExecuteJobsRunnable implements Runnable\n {\n-    private static Logger log = LoggerFactory.getLogger(AcquireJobsRunnable.class);\n+    private static Logger log = LoggerFactory.getLogger(ExecuteJobsRunnable.class);\n \n     private final List<String> jobIds;\n     private final JobExecutor jobExecutor;\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 30,
    "bugNodeStartChar": 1020,
    "bugNodeLength": 25,
    "fixLineNum": 30,
    "fixNodeStartChar": 1020,
    "fixNodeLength": 25,
    "sourceBeforeFix": "AcquireJobsRunnable.class",
    "sourceAfterFix": "ExecuteJobsRunnable.class"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "b02cbb72bfddf1683af4b4a19c6e71292308e6f4",
    "fixCommitParentSHA1": "542c53fdf1b605793845f86109189aef2a01de7f",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/deployer/BpmnDeployer.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/deployer/BpmnDeployer.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/deployer/BpmnDeployer.java\nindex 5bb834c..139013f 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/deployer/BpmnDeployer.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/deployer/BpmnDeployer.java\n@@ -185,7 +185,7 @@\n         processDefinition.setDeploymentId(deploymentId);\n         \n         ProcessDefinitionEntity persistedProcessDefinition = null; \n-        if (processDefinition.getTenantId() == null) {\n+        if (processDefinition.getTenantId() == null || ProcessEngineConfiguration.NO_TENANT_ID.equals(processDefinition.getTenantId())) {\n         \tpersistedProcessDefinition = processDefinitionManager.findProcessDefinitionByDeploymentAndKey(deploymentId, processDefinition.getKey());\n         } else {\n         \tpersistedProcessDefinition = processDefinitionManager.findProcessDefinitionByDeploymentAndKeyAndTenantId(deploymentId, processDefinition.getKey(), processDefinition.getTenantId());\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 188,
    "bugNodeStartChar": 9075,
    "bugNodeLength": 39,
    "fixLineNum": 188,
    "fixNodeStartChar": 9075,
    "fixNodeLength": 122,
    "sourceBeforeFix": "processDefinition.getTenantId() == null",
    "sourceAfterFix": "processDefinition.getTenantId() == null || ProcessEngineConfiguration.NO_TENANT_ID.equals(processDefinition.getTenantId())"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "b02cbb72bfddf1683af4b4a19c6e71292308e6f4",
    "fixCommitParentSHA1": "542c53fdf1b605793845f86109189aef2a01de7f",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/deployer/BpmnDeployer.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/deployer/BpmnDeployer.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/deployer/BpmnDeployer.java\nindex 5bb834c..139013f 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/deployer/BpmnDeployer.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/deployer/BpmnDeployer.java\n@@ -185,7 +185,7 @@\n         processDefinition.setDeploymentId(deploymentId);\n         \n         ProcessDefinitionEntity persistedProcessDefinition = null; \n-        if (processDefinition.getTenantId() == null) {\n+        if (processDefinition.getTenantId() == null || ProcessEngineConfiguration.NO_TENANT_ID.equals(processDefinition.getTenantId())) {\n         \tpersistedProcessDefinition = processDefinitionManager.findProcessDefinitionByDeploymentAndKey(deploymentId, processDefinition.getKey());\n         } else {\n         \tpersistedProcessDefinition = processDefinitionManager.findProcessDefinitionByDeploymentAndKeyAndTenantId(deploymentId, processDefinition.getKey(), processDefinition.getTenantId());\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 188,
    "bugNodeStartChar": 9075,
    "bugNodeLength": 39,
    "fixLineNum": 188,
    "fixNodeStartChar": 9075,
    "fixNodeLength": 122,
    "sourceBeforeFix": "processDefinition.getTenantId() == null",
    "sourceAfterFix": "processDefinition.getTenantId() == null || ProcessEngineConfiguration.NO_TENANT_ID.equals(processDefinition.getTenantId())"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "23efcad891c91fc131ed4729c734ff6b122197df",
    "fixCommitParentSHA1": "dce2a9168d64b99fe089cc8107e1c5ab69b31f7e",
    "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/db/DuplicateVariableInsertTest.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/db/DuplicateVariableInsertTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/db/DuplicateVariableInsertTest.java\nindex 85a4e58..c1f49a4 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/db/DuplicateVariableInsertTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/db/DuplicateVariableInsertTest.java\n@@ -35,7 +35,7 @@\n \t * a barrier for starting and a barrier for completing the command, so they each insert a new variable guaranteed.\n \t */\n \tpublic void testDuplicateVariableInsertOnExecution() throws Exception {\n-\t\tString processDefinitionId = deployOneTaskProcess();\n+\t\tString processDefinitionId = deployOneTaskTestProcess();\n \t\tfinal ProcessInstance processInstance = runtimeService.startProcessInstanceById(processDefinitionId);\n \t\t\n \t\tfinal CyclicBarrier startBarrier = new CyclicBarrier(2);\n@@ -88,7 +88,7 @@\n \t * a barrier for starting and a barrier for completing the command, so they each insert a new variable guaranteed.\n \t */\n \tpublic void testDuplicateVariableInsertOnTask() throws Exception {\n-\t\tString processDefinitionId = deployOneTaskProcess();\n+\t\tString processDefinitionId = deployOneTaskTestProcess();\n \t\tfinal ProcessInstance processInstance = runtimeService.startProcessInstanceById(processDefinitionId);\n \t\tfinal Task task = taskService.createTaskQuery().processInstanceId(processInstance.getId()).singleResult();\n \t\t\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 38,
    "bugNodeStartChar": 1691,
    "bugNodeLength": 22,
    "fixLineNum": 38,
    "fixNodeStartChar": 1691,
    "fixNodeLength": 26,
    "sourceBeforeFix": "deployOneTaskProcess()",
    "sourceAfterFix": "deployOneTaskTestProcess()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "23efcad891c91fc131ed4729c734ff6b122197df",
    "fixCommitParentSHA1": "dce2a9168d64b99fe089cc8107e1c5ab69b31f7e",
    "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/db/DuplicateVariableInsertTest.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/db/DuplicateVariableInsertTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/db/DuplicateVariableInsertTest.java\nindex 85a4e58..c1f49a4 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/db/DuplicateVariableInsertTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/db/DuplicateVariableInsertTest.java\n@@ -35,7 +35,7 @@\n \t * a barrier for starting and a barrier for completing the command, so they each insert a new variable guaranteed.\n \t */\n \tpublic void testDuplicateVariableInsertOnExecution() throws Exception {\n-\t\tString processDefinitionId = deployOneTaskProcess();\n+\t\tString processDefinitionId = deployOneTaskTestProcess();\n \t\tfinal ProcessInstance processInstance = runtimeService.startProcessInstanceById(processDefinitionId);\n \t\t\n \t\tfinal CyclicBarrier startBarrier = new CyclicBarrier(2);\n@@ -88,7 +88,7 @@\n \t * a barrier for starting and a barrier for completing the command, so they each insert a new variable guaranteed.\n \t */\n \tpublic void testDuplicateVariableInsertOnTask() throws Exception {\n-\t\tString processDefinitionId = deployOneTaskProcess();\n+\t\tString processDefinitionId = deployOneTaskTestProcess();\n \t\tfinal ProcessInstance processInstance = runtimeService.startProcessInstanceById(processDefinitionId);\n \t\tfinal Task task = taskService.createTaskQuery().processInstanceId(processInstance.getId()).singleResult();\n \t\t\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 38,
    "bugNodeStartChar": 1691,
    "bugNodeLength": 22,
    "fixLineNum": 38,
    "fixNodeStartChar": 1691,
    "fixNodeLength": 26,
    "sourceBeforeFix": "deployOneTaskProcess()",
    "sourceAfterFix": "deployOneTaskTestProcess()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "23efcad891c91fc131ed4729c734ff6b122197df",
    "fixCommitParentSHA1": "dce2a9168d64b99fe089cc8107e1c5ab69b31f7e",
    "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/db/DuplicateVariableInsertTest.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/db/DuplicateVariableInsertTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/db/DuplicateVariableInsertTest.java\nindex 85a4e58..c1f49a4 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/db/DuplicateVariableInsertTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/db/DuplicateVariableInsertTest.java\n@@ -35,7 +35,7 @@\n \t * a barrier for starting and a barrier for completing the command, so they each insert a new variable guaranteed.\n \t */\n \tpublic void testDuplicateVariableInsertOnExecution() throws Exception {\n-\t\tString processDefinitionId = deployOneTaskProcess();\n+\t\tString processDefinitionId = deployOneTaskTestProcess();\n \t\tfinal ProcessInstance processInstance = runtimeService.startProcessInstanceById(processDefinitionId);\n \t\t\n \t\tfinal CyclicBarrier startBarrier = new CyclicBarrier(2);\n@@ -88,7 +88,7 @@\n \t * a barrier for starting and a barrier for completing the command, so they each insert a new variable guaranteed.\n \t */\n \tpublic void testDuplicateVariableInsertOnTask() throws Exception {\n-\t\tString processDefinitionId = deployOneTaskProcess();\n+\t\tString processDefinitionId = deployOneTaskTestProcess();\n \t\tfinal ProcessInstance processInstance = runtimeService.startProcessInstanceById(processDefinitionId);\n \t\tfinal Task task = taskService.createTaskQuery().processInstanceId(processInstance.getId()).singleResult();\n \t\t\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 91,
    "bugNodeStartChar": 3605,
    "bugNodeLength": 22,
    "fixLineNum": 91,
    "fixNodeStartChar": 3605,
    "fixNodeLength": 26,
    "sourceBeforeFix": "deployOneTaskProcess()",
    "sourceAfterFix": "deployOneTaskTestProcess()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "23efcad891c91fc131ed4729c734ff6b122197df",
    "fixCommitParentSHA1": "dce2a9168d64b99fe089cc8107e1c5ab69b31f7e",
    "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/db/DuplicateVariableInsertTest.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/db/DuplicateVariableInsertTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/db/DuplicateVariableInsertTest.java\nindex 85a4e58..c1f49a4 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/db/DuplicateVariableInsertTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/db/DuplicateVariableInsertTest.java\n@@ -35,7 +35,7 @@\n \t * a barrier for starting and a barrier for completing the command, so they each insert a new variable guaranteed.\n \t */\n \tpublic void testDuplicateVariableInsertOnExecution() throws Exception {\n-\t\tString processDefinitionId = deployOneTaskProcess();\n+\t\tString processDefinitionId = deployOneTaskTestProcess();\n \t\tfinal ProcessInstance processInstance = runtimeService.startProcessInstanceById(processDefinitionId);\n \t\t\n \t\tfinal CyclicBarrier startBarrier = new CyclicBarrier(2);\n@@ -88,7 +88,7 @@\n \t * a barrier for starting and a barrier for completing the command, so they each insert a new variable guaranteed.\n \t */\n \tpublic void testDuplicateVariableInsertOnTask() throws Exception {\n-\t\tString processDefinitionId = deployOneTaskProcess();\n+\t\tString processDefinitionId = deployOneTaskTestProcess();\n \t\tfinal ProcessInstance processInstance = runtimeService.startProcessInstanceById(processDefinitionId);\n \t\tfinal Task task = taskService.createTaskQuery().processInstanceId(processInstance.getId()).singleResult();\n \t\t\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 91,
    "bugNodeStartChar": 3605,
    "bugNodeLength": 22,
    "fixLineNum": 91,
    "fixNodeStartChar": 3605,
    "fixNodeLength": 26,
    "sourceBeforeFix": "deployOneTaskProcess()",
    "sourceAfterFix": "deployOneTaskTestProcess()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "2a4442771eee1cc9e857f6999b3ead8e7cc43fd4",
    "fixCommitParentSHA1": "bccfa52d8df8eb135fdeb5bbcfbfa7d68f078a39",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\nindex 8e1bf22..6e77c75 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\n@@ -137,7 +137,7 @@\n               // reduce log level, as normally we're not interested in logging this exception\n               log.debug(\"Optimistic locking exception : \" + exception);\n             } else {\n-              log.error(\"Error while closing command context\", exception);\n+              log.debug(\"Error while closing command context\", exception);\n             }\n \n             transactionContext.rollback();\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 140,
    "bugNodeStartChar": 6484,
    "bugNodeLength": 59,
    "fixLineNum": 140,
    "fixNodeStartChar": 6484,
    "fixNodeLength": 59,
    "sourceBeforeFix": "log.error(\"Error while closing command context\",exception)",
    "sourceAfterFix": "log.debug(\"Error while closing command context\",exception)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "2a4442771eee1cc9e857f6999b3ead8e7cc43fd4",
    "fixCommitParentSHA1": "bccfa52d8df8eb135fdeb5bbcfbfa7d68f078a39",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\nindex 8e1bf22..6e77c75 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\n@@ -137,7 +137,7 @@\n               // reduce log level, as normally we're not interested in logging this exception\n               log.debug(\"Optimistic locking exception : \" + exception);\n             } else {\n-              log.error(\"Error while closing command context\", exception);\n+              log.debug(\"Error while closing command context\", exception);\n             }\n \n             transactionContext.rollback();\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 140,
    "bugNodeStartChar": 6484,
    "bugNodeLength": 59,
    "fixLineNum": 140,
    "fixNodeStartChar": 6484,
    "fixNodeLength": 59,
    "sourceBeforeFix": "log.error(\"Error while closing command context\",exception)",
    "sourceAfterFix": "log.debug(\"Error while closing command context\",exception)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "2983b18fd66c6b375d7589f2b78df637151dd9db",
    "fixCommitParentSHA1": "edfa0d932a48c57c38a9fb2701394cccd0778b58",
    "bugFilePath": "modules/activiti-rest/src/test/java/org/activiti/rest/api/management/JobCollectionResourceTest.java",
    "fixPatch": "diff --git a/modules/activiti-rest/src/test/java/org/activiti/rest/api/management/JobCollectionResourceTest.java b/modules/activiti-rest/src/test/java/org/activiti/rest/api/management/JobCollectionResourceTest.java\nindex 4bcd048..431ddd7 100644\n--- a/modules/activiti-rest/src/test/java/org/activiti/rest/api/management/JobCollectionResourceTest.java\n+++ b/modules/activiti-rest/src/test/java/org/activiti/rest/api/management/JobCollectionResourceTest.java\n@@ -75,7 +75,7 @@\n     \n     // Fetch using processDefinitionId\n     url = RestUrls.createRelativeResourceUrl(RestUrls.URL_JOB_COLLECTION) + \"?processDefinitionId=\" + processInstance.getProcessDefinitionId();\n-    assertResultsPresentInDataResponse(url, timerJob.getId());\n+    assertResultsPresentInDataResponse(url, asyncJob.getId(), timerJob.getId());\n     \n     url = RestUrls.createRelativeResourceUrl(RestUrls.URL_JOB_COLLECTION) + \"?processDefinitionId=unexisting\";\n     assertResultsPresentInDataResponse(url);\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 78,
    "bugNodeStartChar": 3463,
    "bugNodeLength": 57,
    "fixLineNum": 78,
    "fixNodeStartChar": 3463,
    "fixNodeLength": 75,
    "sourceBeforeFix": "assertResultsPresentInDataResponse(url,timerJob.getId())",
    "sourceAfterFix": "assertResultsPresentInDataResponse(url,asyncJob.getId(),timerJob.getId())"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "0258c8ad89e63130480ff5e15d7d4a12be92ff1c",
    "fixCommitParentSHA1": "820d5b8cbc50c18679380516ce9f35145b9217d4",
    "bugFilePath": "modules/activiti-cxf/src/test/java/org/activiti/engine/test/bpmn/sendtask/WebServiceUELTest.java",
    "fixPatch": "diff --git a/modules/activiti-cxf/src/test/java/org/activiti/engine/test/bpmn/sendtask/WebServiceUELTest.java b/modules/activiti-cxf/src/test/java/org/activiti/engine/test/bpmn/sendtask/WebServiceUELTest.java\nindex bf2b3c0..64209db 100644\n--- a/modules/activiti-cxf/src/test/java/org/activiti/engine/test/bpmn/sendtask/WebServiceUELTest.java\n+++ b/modules/activiti-cxf/src/test/java/org/activiti/engine/test/bpmn/sendtask/WebServiceUELTest.java\n@@ -36,7 +36,7 @@\n     assertEquals(-1, counter.getCount());\n \n     ProcessDefinitionEntity processDefinition = processEngineConfiguration\n-      .getCommandExecutorTxRequiresNew()\n+      .getCommandExecutor()\n       .execute(new Command<ProcessDefinitionEntity>() {\n         public ProcessDefinitionEntity execute(CommandContext commandContext) {\n           return Context\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 38,
    "bugNodeStartChar": 1510,
    "bugNodeLength": 67,
    "fixLineNum": 38,
    "fixNodeStartChar": 1510,
    "fixNodeLength": 54,
    "sourceBeforeFix": "processEngineConfiguration.getCommandExecutorTxRequiresNew()",
    "sourceAfterFix": "processEngineConfiguration.getCommandExecutor()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "0258c8ad89e63130480ff5e15d7d4a12be92ff1c",
    "fixCommitParentSHA1": "820d5b8cbc50c18679380516ce9f35145b9217d4",
    "bugFilePath": "modules/activiti-cxf/src/test/java/org/activiti/engine/test/bpmn/sendtask/WebServiceUELTest.java",
    "fixPatch": "diff --git a/modules/activiti-cxf/src/test/java/org/activiti/engine/test/bpmn/sendtask/WebServiceUELTest.java b/modules/activiti-cxf/src/test/java/org/activiti/engine/test/bpmn/sendtask/WebServiceUELTest.java\nindex bf2b3c0..64209db 100644\n--- a/modules/activiti-cxf/src/test/java/org/activiti/engine/test/bpmn/sendtask/WebServiceUELTest.java\n+++ b/modules/activiti-cxf/src/test/java/org/activiti/engine/test/bpmn/sendtask/WebServiceUELTest.java\n@@ -36,7 +36,7 @@\n     assertEquals(-1, counter.getCount());\n \n     ProcessDefinitionEntity processDefinition = processEngineConfiguration\n-      .getCommandExecutorTxRequiresNew()\n+      .getCommandExecutor()\n       .execute(new Command<ProcessDefinitionEntity>() {\n         public ProcessDefinitionEntity execute(CommandContext commandContext) {\n           return Context\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 38,
    "bugNodeStartChar": 1510,
    "bugNodeLength": 67,
    "fixLineNum": 38,
    "fixNodeStartChar": 1510,
    "fixNodeLength": 54,
    "sourceBeforeFix": "processEngineConfiguration.getCommandExecutorTxRequiresNew()",
    "sourceAfterFix": "processEngineConfiguration.getCommandExecutor()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "0258c8ad89e63130480ff5e15d7d4a12be92ff1c",
    "fixCommitParentSHA1": "820d5b8cbc50c18679380516ce9f35145b9217d4",
    "bugFilePath": "modules/activiti-cxf/src/test/java/org/activiti/engine/test/bpmn/servicetask/WebServiceUELTest.java",
    "fixPatch": "diff --git a/modules/activiti-cxf/src/test/java/org/activiti/engine/test/bpmn/servicetask/WebServiceUELTest.java b/modules/activiti-cxf/src/test/java/org/activiti/engine/test/bpmn/servicetask/WebServiceUELTest.java\nindex 7747d5d..8420a15 100644\n--- a/modules/activiti-cxf/src/test/java/org/activiti/engine/test/bpmn/servicetask/WebServiceUELTest.java\n+++ b/modules/activiti-cxf/src/test/java/org/activiti/engine/test/bpmn/servicetask/WebServiceUELTest.java\n@@ -33,7 +33,7 @@\n   @Deployment\n   public void testWebServiceInvocationWithDataFlowUEL() throws Exception {\n     ProcessDefinitionEntity processDefinition = processEngineConfiguration\n-      .getCommandExecutorTxRequiresNew()\n+      .getCommandExecutor()\n       .execute(new Command<ProcessDefinitionEntity>() {\n         public ProcessDefinitionEntity execute(CommandContext commandContext) {\n           return Context\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 35,
    "bugNodeStartChar": 1427,
    "bugNodeLength": 67,
    "fixLineNum": 35,
    "fixNodeStartChar": 1427,
    "fixNodeLength": 54,
    "sourceBeforeFix": "processEngineConfiguration.getCommandExecutorTxRequiresNew()",
    "sourceAfterFix": "processEngineConfiguration.getCommandExecutor()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "0258c8ad89e63130480ff5e15d7d4a12be92ff1c",
    "fixCommitParentSHA1": "820d5b8cbc50c18679380516ce9f35145b9217d4",
    "bugFilePath": "modules/activiti-cxf/src/test/java/org/activiti/engine/test/bpmn/servicetask/WebServiceUELTest.java",
    "fixPatch": "diff --git a/modules/activiti-cxf/src/test/java/org/activiti/engine/test/bpmn/servicetask/WebServiceUELTest.java b/modules/activiti-cxf/src/test/java/org/activiti/engine/test/bpmn/servicetask/WebServiceUELTest.java\nindex 7747d5d..8420a15 100644\n--- a/modules/activiti-cxf/src/test/java/org/activiti/engine/test/bpmn/servicetask/WebServiceUELTest.java\n+++ b/modules/activiti-cxf/src/test/java/org/activiti/engine/test/bpmn/servicetask/WebServiceUELTest.java\n@@ -33,7 +33,7 @@\n   @Deployment\n   public void testWebServiceInvocationWithDataFlowUEL() throws Exception {\n     ProcessDefinitionEntity processDefinition = processEngineConfiguration\n-      .getCommandExecutorTxRequiresNew()\n+      .getCommandExecutor()\n       .execute(new Command<ProcessDefinitionEntity>() {\n         public ProcessDefinitionEntity execute(CommandContext commandContext) {\n           return Context\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 35,
    "bugNodeStartChar": 1427,
    "bugNodeLength": 67,
    "fixLineNum": 35,
    "fixNodeStartChar": 1427,
    "fixNodeLength": 54,
    "sourceBeforeFix": "processEngineConfiguration.getCommandExecutorTxRequiresNew()",
    "sourceAfterFix": "processEngineConfiguration.getCommandExecutor()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8a70dd07e91ab83c74346934b1597d60dbe84dfb",
    "fixCommitParentSHA1": "8ebfad76f5ec953563388f6524c3897c1f3e4cea",
    "bugFilePath": "modules/activiti-spring/src/main/java/org/activiti/spring/components/scope/ProcessScope.java",
    "fixPatch": "diff --git a/modules/activiti-spring/src/main/java/org/activiti/spring/components/scope/ProcessScope.java b/modules/activiti-spring/src/main/java/org/activiti/spring/components/scope/ProcessScope.java\nindex ebd99bd..00dfa05 100644\n--- a/modules/activiti-spring/src/main/java/org/activiti/spring/components/scope/ProcessScope.java\n+++ b/modules/activiti-spring/src/main/java/org/activiti/spring/components/scope/ProcessScope.java\n@@ -104,7 +104,7 @@\n \t\t\t}\n \t\t\treturn createDirtyCheckingProxy(name, scopedObject);\n \t\t} catch (Throwable th) {\n-\t\t\tlogger.warn(\"couldn't return value from process scope! {}\",ExceptionUtils.getFullStackTrace(th));\n+\t\t\tlogger.warn(\"couldn't return value from process scope! {}\", ExceptionUtils.getStackTrace(th));\n \t\t} finally {\n \t\t\tif (executionEntity != null) {\n \t\t\t\tlogger.debug(\"set variable '{}' on executionEntity#{}\", name, executionEntity.getId());\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 107,
    "bugNodeStartChar": 4295,
    "bugNodeLength": 36,
    "fixLineNum": 107,
    "fixNodeStartChar": 4296,
    "fixNodeLength": 32,
    "sourceBeforeFix": "ExceptionUtils.getFullStackTrace(th)",
    "sourceAfterFix": "ExceptionUtils.getStackTrace(th)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8a70dd07e91ab83c74346934b1597d60dbe84dfb",
    "fixCommitParentSHA1": "8ebfad76f5ec953563388f6524c3897c1f3e4cea",
    "bugFilePath": "modules/activiti-spring/src/main/java/org/activiti/spring/components/scope/ProcessScope.java",
    "fixPatch": "diff --git a/modules/activiti-spring/src/main/java/org/activiti/spring/components/scope/ProcessScope.java b/modules/activiti-spring/src/main/java/org/activiti/spring/components/scope/ProcessScope.java\nindex ebd99bd..00dfa05 100644\n--- a/modules/activiti-spring/src/main/java/org/activiti/spring/components/scope/ProcessScope.java\n+++ b/modules/activiti-spring/src/main/java/org/activiti/spring/components/scope/ProcessScope.java\n@@ -104,7 +104,7 @@\n \t\t\t}\n \t\t\treturn createDirtyCheckingProxy(name, scopedObject);\n \t\t} catch (Throwable th) {\n-\t\t\tlogger.warn(\"couldn't return value from process scope! {}\",ExceptionUtils.getFullStackTrace(th));\n+\t\t\tlogger.warn(\"couldn't return value from process scope! {}\", ExceptionUtils.getStackTrace(th));\n \t\t} finally {\n \t\t\tif (executionEntity != null) {\n \t\t\t\tlogger.debug(\"set variable '{}' on executionEntity#{}\", name, executionEntity.getId());\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 107,
    "bugNodeStartChar": 4295,
    "bugNodeLength": 36,
    "fixLineNum": 107,
    "fixNodeStartChar": 4296,
    "fixNodeLength": 32,
    "sourceBeforeFix": "ExceptionUtils.getFullStackTrace(th)",
    "sourceAfterFix": "ExceptionUtils.getStackTrace(th)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "b3006a1c95564207deee570ac402a183ed362ac9",
    "fixCommitParentSHA1": "21a1ca49b2b541603a8defd3eba5b0277ea8bb69",
    "bugFilePath": "modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java",
    "fixPatch": "diff --git a/modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java b/modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java\nindex 3d5b9fb..ce5aa19 100644\n--- a/modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java\n+++ b/modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java\n@@ -173,13 +173,13 @@\n       taskQuery.taskDefinitionKey(request.getTaskDefinitionKey());\n     }\n     taskQuery.taskDefinitionKeyLike(request.getTaskDefinitionKeyLike());\n-    if(request.getTaskDefinitionKey() != null) {\n+    if(request.getDueDate() != null) {\n       taskQuery.dueDate(request.getDueDate());\n     }\n-    if(request.getTaskDefinitionKey() != null) {\n+    if(request.getDueBefore() != null) {\n       taskQuery.dueBefore(request.getDueBefore());\n     }\n-    if(request.getTaskDefinitionKey() != null) {\n+    if(request.getDueAfter() != null) {\n       taskQuery.dueAfter(request.getDueAfter());\n     }\n     \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 176,
    "bugNodeStartChar": 6399,
    "bugNodeLength": 30,
    "fixLineNum": 176,
    "fixNodeStartChar": 6399,
    "fixNodeLength": 20,
    "sourceBeforeFix": "request.getTaskDefinitionKey()",
    "sourceAfterFix": "request.getDueDate()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "b3006a1c95564207deee570ac402a183ed362ac9",
    "fixCommitParentSHA1": "21a1ca49b2b541603a8defd3eba5b0277ea8bb69",
    "bugFilePath": "modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java",
    "fixPatch": "diff --git a/modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java b/modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java\nindex 3d5b9fb..ce5aa19 100644\n--- a/modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java\n+++ b/modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java\n@@ -173,13 +173,13 @@\n       taskQuery.taskDefinitionKey(request.getTaskDefinitionKey());\n     }\n     taskQuery.taskDefinitionKeyLike(request.getTaskDefinitionKeyLike());\n-    if(request.getTaskDefinitionKey() != null) {\n+    if(request.getDueDate() != null) {\n       taskQuery.dueDate(request.getDueDate());\n     }\n-    if(request.getTaskDefinitionKey() != null) {\n+    if(request.getDueBefore() != null) {\n       taskQuery.dueBefore(request.getDueBefore());\n     }\n-    if(request.getTaskDefinitionKey() != null) {\n+    if(request.getDueAfter() != null) {\n       taskQuery.dueAfter(request.getDueAfter());\n     }\n     \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 176,
    "bugNodeStartChar": 6399,
    "bugNodeLength": 30,
    "fixLineNum": 176,
    "fixNodeStartChar": 6399,
    "fixNodeLength": 20,
    "sourceBeforeFix": "request.getTaskDefinitionKey()",
    "sourceAfterFix": "request.getDueDate()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "b3006a1c95564207deee570ac402a183ed362ac9",
    "fixCommitParentSHA1": "21a1ca49b2b541603a8defd3eba5b0277ea8bb69",
    "bugFilePath": "modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java",
    "fixPatch": "diff --git a/modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java b/modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java\nindex 3d5b9fb..ce5aa19 100644\n--- a/modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java\n+++ b/modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java\n@@ -173,13 +173,13 @@\n       taskQuery.taskDefinitionKey(request.getTaskDefinitionKey());\n     }\n     taskQuery.taskDefinitionKeyLike(request.getTaskDefinitionKeyLike());\n-    if(request.getTaskDefinitionKey() != null) {\n+    if(request.getDueDate() != null) {\n       taskQuery.dueDate(request.getDueDate());\n     }\n-    if(request.getTaskDefinitionKey() != null) {\n+    if(request.getDueBefore() != null) {\n       taskQuery.dueBefore(request.getDueBefore());\n     }\n-    if(request.getTaskDefinitionKey() != null) {\n+    if(request.getDueAfter() != null) {\n       taskQuery.dueAfter(request.getDueAfter());\n     }\n     \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 179,
    "bugNodeStartChar": 6501,
    "bugNodeLength": 30,
    "fixLineNum": 179,
    "fixNodeStartChar": 6501,
    "fixNodeLength": 22,
    "sourceBeforeFix": "request.getTaskDefinitionKey()",
    "sourceAfterFix": "request.getDueBefore()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "b3006a1c95564207deee570ac402a183ed362ac9",
    "fixCommitParentSHA1": "21a1ca49b2b541603a8defd3eba5b0277ea8bb69",
    "bugFilePath": "modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java",
    "fixPatch": "diff --git a/modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java b/modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java\nindex 3d5b9fb..ce5aa19 100644\n--- a/modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java\n+++ b/modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java\n@@ -173,13 +173,13 @@\n       taskQuery.taskDefinitionKey(request.getTaskDefinitionKey());\n     }\n     taskQuery.taskDefinitionKeyLike(request.getTaskDefinitionKeyLike());\n-    if(request.getTaskDefinitionKey() != null) {\n+    if(request.getDueDate() != null) {\n       taskQuery.dueDate(request.getDueDate());\n     }\n-    if(request.getTaskDefinitionKey() != null) {\n+    if(request.getDueBefore() != null) {\n       taskQuery.dueBefore(request.getDueBefore());\n     }\n-    if(request.getTaskDefinitionKey() != null) {\n+    if(request.getDueAfter() != null) {\n       taskQuery.dueAfter(request.getDueAfter());\n     }\n     \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 179,
    "bugNodeStartChar": 6501,
    "bugNodeLength": 30,
    "fixLineNum": 179,
    "fixNodeStartChar": 6501,
    "fixNodeLength": 22,
    "sourceBeforeFix": "request.getTaskDefinitionKey()",
    "sourceAfterFix": "request.getDueBefore()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "b3006a1c95564207deee570ac402a183ed362ac9",
    "fixCommitParentSHA1": "21a1ca49b2b541603a8defd3eba5b0277ea8bb69",
    "bugFilePath": "modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java",
    "fixPatch": "diff --git a/modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java b/modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java\nindex 3d5b9fb..ce5aa19 100644\n--- a/modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java\n+++ b/modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java\n@@ -173,13 +173,13 @@\n       taskQuery.taskDefinitionKey(request.getTaskDefinitionKey());\n     }\n     taskQuery.taskDefinitionKeyLike(request.getTaskDefinitionKeyLike());\n-    if(request.getTaskDefinitionKey() != null) {\n+    if(request.getDueDate() != null) {\n       taskQuery.dueDate(request.getDueDate());\n     }\n-    if(request.getTaskDefinitionKey() != null) {\n+    if(request.getDueBefore() != null) {\n       taskQuery.dueBefore(request.getDueBefore());\n     }\n-    if(request.getTaskDefinitionKey() != null) {\n+    if(request.getDueAfter() != null) {\n       taskQuery.dueAfter(request.getDueAfter());\n     }\n     \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 182,
    "bugNodeStartChar": 6607,
    "bugNodeLength": 30,
    "fixLineNum": 182,
    "fixNodeStartChar": 6607,
    "fixNodeLength": 21,
    "sourceBeforeFix": "request.getTaskDefinitionKey()",
    "sourceAfterFix": "request.getDueAfter()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "b3006a1c95564207deee570ac402a183ed362ac9",
    "fixCommitParentSHA1": "21a1ca49b2b541603a8defd3eba5b0277ea8bb69",
    "bugFilePath": "modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java",
    "fixPatch": "diff --git a/modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java b/modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java\nindex 3d5b9fb..ce5aa19 100644\n--- a/modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java\n+++ b/modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java\n@@ -173,13 +173,13 @@\n       taskQuery.taskDefinitionKey(request.getTaskDefinitionKey());\n     }\n     taskQuery.taskDefinitionKeyLike(request.getTaskDefinitionKeyLike());\n-    if(request.getTaskDefinitionKey() != null) {\n+    if(request.getDueDate() != null) {\n       taskQuery.dueDate(request.getDueDate());\n     }\n-    if(request.getTaskDefinitionKey() != null) {\n+    if(request.getDueBefore() != null) {\n       taskQuery.dueBefore(request.getDueBefore());\n     }\n-    if(request.getTaskDefinitionKey() != null) {\n+    if(request.getDueAfter() != null) {\n       taskQuery.dueAfter(request.getDueAfter());\n     }\n     \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 182,
    "bugNodeStartChar": 6607,
    "bugNodeLength": 30,
    "fixLineNum": 182,
    "fixNodeStartChar": 6607,
    "fixNodeLength": 21,
    "sourceBeforeFix": "request.getTaskDefinitionKey()",
    "sourceAfterFix": "request.getDueAfter()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "3d8aaf3c3fcce6133c197d9ca3c1c3f72c260beb",
    "fixCommitParentSHA1": "5b07d8c80555abaf7f31913a4dd9ee0d0258b27e",
    "bugFilePath": "modules/activiti-explorer/src/main/java/org/activiti/explorer/ui/process/ProcessDefinitionImageStreamResourceBuilder.java",
    "fixPatch": "diff --git a/modules/activiti-explorer/src/main/java/org/activiti/explorer/ui/process/ProcessDefinitionImageStreamResourceBuilder.java b/modules/activiti-explorer/src/main/java/org/activiti/explorer/ui/process/ProcessDefinitionImageStreamResourceBuilder.java\nindex 062f352..5d2a9ee 100644\n--- a/modules/activiti-explorer/src/main/java/org/activiti/explorer/ui/process/ProcessDefinitionImageStreamResourceBuilder.java\n+++ b/modules/activiti-explorer/src/main/java/org/activiti/explorer/ui/process/ProcessDefinitionImageStreamResourceBuilder.java\n@@ -75,7 +75,7 @@\n     if (processDefinition != null && processDefinition.isGraphicalNotationDefined()) {\n       try {\n         \n-        BpmnModel bpmnModel = repositoryService.getBpmnModel(processInstance.getId());\n+        BpmnModel bpmnModel = repositoryService.getBpmnModel(processInstance.getProcessDefinitionId());\n         InputStream definitionImageStream = ProcessDiagramGenerator.generateDiagram(bpmnModel, \"png\", \n                 runtimeService.getActiveActivityIds(processInstance.getId()));\n               \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 78,
    "bugNodeStartChar": 3284,
    "bugNodeLength": 23,
    "fixLineNum": 78,
    "fixNodeStartChar": 3284,
    "fixNodeLength": 40,
    "sourceBeforeFix": "processInstance.getId()",
    "sourceAfterFix": "processInstance.getProcessDefinitionId()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "3d8aaf3c3fcce6133c197d9ca3c1c3f72c260beb",
    "fixCommitParentSHA1": "5b07d8c80555abaf7f31913a4dd9ee0d0258b27e",
    "bugFilePath": "modules/activiti-explorer/src/main/java/org/activiti/explorer/ui/process/ProcessDefinitionImageStreamResourceBuilder.java",
    "fixPatch": "diff --git a/modules/activiti-explorer/src/main/java/org/activiti/explorer/ui/process/ProcessDefinitionImageStreamResourceBuilder.java b/modules/activiti-explorer/src/main/java/org/activiti/explorer/ui/process/ProcessDefinitionImageStreamResourceBuilder.java\nindex 062f352..5d2a9ee 100644\n--- a/modules/activiti-explorer/src/main/java/org/activiti/explorer/ui/process/ProcessDefinitionImageStreamResourceBuilder.java\n+++ b/modules/activiti-explorer/src/main/java/org/activiti/explorer/ui/process/ProcessDefinitionImageStreamResourceBuilder.java\n@@ -75,7 +75,7 @@\n     if (processDefinition != null && processDefinition.isGraphicalNotationDefined()) {\n       try {\n         \n-        BpmnModel bpmnModel = repositoryService.getBpmnModel(processInstance.getId());\n+        BpmnModel bpmnModel = repositoryService.getBpmnModel(processInstance.getProcessDefinitionId());\n         InputStream definitionImageStream = ProcessDiagramGenerator.generateDiagram(bpmnModel, \"png\", \n                 runtimeService.getActiveActivityIds(processInstance.getId()));\n               \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 78,
    "bugNodeStartChar": 3284,
    "bugNodeLength": 23,
    "fixLineNum": 78,
    "fixNodeStartChar": 3284,
    "fixNodeLength": 40,
    "sourceBeforeFix": "processInstance.getId()",
    "sourceAfterFix": "processInstance.getProcessDefinitionId()"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "5855ba3b3a70f813d1d47b40bf856b15b694534a",
    "fixCommitParentSHA1": "c568ccdebf927562166af05c3c9aa02e61c602c3",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/behavior/InclusiveGatewayActivityBehavior.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/behavior/InclusiveGatewayActivityBehavior.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/behavior/InclusiveGatewayActivityBehavior.java\nindex 9423166..a25f7b0 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/behavior/InclusiveGatewayActivityBehavior.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/behavior/InclusiveGatewayActivityBehavior.java\n@@ -143,7 +143,7 @@\n      // if source has no outputs, it is the end of the process, and its parent process should be checked.\t  \n \tif (srcActivity.getOutgoingTransitions().size() == 0) {\n \t\tvisitedActivities.add(srcActivity);\n-\t\tif (srcActivity.getParent() == null)\n+\t\tif (srcActivity.getParent() == null || !(srcActivity.getParent() instanceof PvmActivity) )\n \t\t\treturn false;\n \t\tsrcActivity = (PvmActivity) srcActivity.getParent();\n \t}\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 146,
    "bugNodeStartChar": 5951,
    "bugNodeLength": 31,
    "fixLineNum": 146,
    "fixNodeStartChar": 5951,
    "fixNodeLength": 84,
    "sourceBeforeFix": "srcActivity.getParent() == null",
    "sourceAfterFix": "srcActivity.getParent() == null || !(srcActivity.getParent() instanceof PvmActivity)"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "5855ba3b3a70f813d1d47b40bf856b15b694534a",
    "fixCommitParentSHA1": "c568ccdebf927562166af05c3c9aa02e61c602c3",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/behavior/InclusiveGatewayActivityBehavior.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/behavior/InclusiveGatewayActivityBehavior.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/behavior/InclusiveGatewayActivityBehavior.java\nindex 9423166..a25f7b0 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/behavior/InclusiveGatewayActivityBehavior.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/behavior/InclusiveGatewayActivityBehavior.java\n@@ -143,7 +143,7 @@\n      // if source has no outputs, it is the end of the process, and its parent process should be checked.\t  \n \tif (srcActivity.getOutgoingTransitions().size() == 0) {\n \t\tvisitedActivities.add(srcActivity);\n-\t\tif (srcActivity.getParent() == null)\n+\t\tif (srcActivity.getParent() == null || !(srcActivity.getParent() instanceof PvmActivity) )\n \t\t\treturn false;\n \t\tsrcActivity = (PvmActivity) srcActivity.getParent();\n \t}\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 146,
    "bugNodeStartChar": 5951,
    "bugNodeLength": 31,
    "fixLineNum": 146,
    "fixNodeStartChar": 5951,
    "fixNodeLength": 84,
    "sourceBeforeFix": "srcActivity.getParent() == null",
    "sourceAfterFix": "srcActivity.getParent() == null || !(srcActivity.getParent() instanceof PvmActivity)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "9760ff5294fd81c3272989b6007b6496a08e0ca7",
    "fixCommitParentSHA1": "d6735dc46cb9624643ebdaf902285de2823fd400",
    "bugFilePath": "modules/activiti-upgrade/src/test/java/org/activiti/upgrade/ProxyDriver.java",
    "fixPatch": "diff --git a/modules/activiti-upgrade/src/test/java/org/activiti/upgrade/ProxyDriver.java b/modules/activiti-upgrade/src/test/java/org/activiti/upgrade/ProxyDriver.java\nindex b63fbb5..4af6588 100644\n--- a/modules/activiti-upgrade/src/test/java/org/activiti/upgrade/ProxyDriver.java\n+++ b/modules/activiti-upgrade/src/test/java/org/activiti/upgrade/ProxyDriver.java\n@@ -50,9 +50,9 @@\n     } else if (url.startsWith(\"jdbc:sqlserver\")) {\n       databaseFormatter = new DatabaseFormatterMsSqlServer();\n     } else if (url.startsWith(\"jdbc:db2\")) {\n-      databaseFormatter = new DatabaseFormatterOracle();\n+      databaseFormatter = new DatabaseFormatterDb2();\n     } else if (url.startsWith(\"jdbc:postgresql\")) {\n-      databaseFormatter = new DatabaseFormatterOracle();\n+      databaseFormatter = new DatabaseFormatterPostgres();\n     } \n   }\n \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 53,
    "bugNodeStartChar": 1824,
    "bugNodeLength": 29,
    "fixLineNum": 53,
    "fixNodeStartChar": 1824,
    "fixNodeLength": 26,
    "sourceBeforeFix": "new DatabaseFormatterOracle()",
    "sourceAfterFix": "new DatabaseFormatterDb2()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "9760ff5294fd81c3272989b6007b6496a08e0ca7",
    "fixCommitParentSHA1": "d6735dc46cb9624643ebdaf902285de2823fd400",
    "bugFilePath": "modules/activiti-upgrade/src/test/java/org/activiti/upgrade/ProxyDriver.java",
    "fixPatch": "diff --git a/modules/activiti-upgrade/src/test/java/org/activiti/upgrade/ProxyDriver.java b/modules/activiti-upgrade/src/test/java/org/activiti/upgrade/ProxyDriver.java\nindex b63fbb5..4af6588 100644\n--- a/modules/activiti-upgrade/src/test/java/org/activiti/upgrade/ProxyDriver.java\n+++ b/modules/activiti-upgrade/src/test/java/org/activiti/upgrade/ProxyDriver.java\n@@ -50,9 +50,9 @@\n     } else if (url.startsWith(\"jdbc:sqlserver\")) {\n       databaseFormatter = new DatabaseFormatterMsSqlServer();\n     } else if (url.startsWith(\"jdbc:db2\")) {\n-      databaseFormatter = new DatabaseFormatterOracle();\n+      databaseFormatter = new DatabaseFormatterDb2();\n     } else if (url.startsWith(\"jdbc:postgresql\")) {\n-      databaseFormatter = new DatabaseFormatterOracle();\n+      databaseFormatter = new DatabaseFormatterPostgres();\n     } \n   }\n \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 55,
    "bugNodeStartChar": 1933,
    "bugNodeLength": 29,
    "fixLineNum": 55,
    "fixNodeStartChar": 1933,
    "fixNodeLength": 31,
    "sourceBeforeFix": "new DatabaseFormatterOracle()",
    "sourceAfterFix": "new DatabaseFormatterPostgres()"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "28ba7b19efbee8d9586e9519fb85635afa7b9539",
    "fixCommitParentSHA1": "5e7873ebd45790d9d72eb9d312de4611dc97f796",
    "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/standalone/history/FullHistoryTest.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/standalone/history/FullHistoryTest.java b/modules/activiti-engine/src/test/java/org/activiti/standalone/history/FullHistoryTest.java\nindex 48ca3f0..d08b4d9 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/standalone/history/FullHistoryTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/standalone/history/FullHistoryTest.java\n@@ -626,7 +626,7 @@\n     taskService.complete(task.getId());\n     \n     assertEquals(1, historyService.createHistoricProcessInstanceQuery().processInstanceId(processInstance.getId()).count());\n-    assertEquals(2, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).count());\n+    assertEquals(3, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).count());\n     assertEquals(4, historyService.createHistoricDetailQuery().processInstanceId(processInstance.getId()).count());\n     assertEquals(1, historyService.createHistoricTaskInstanceQuery().processInstanceId(processInstance.getId()).count());\n     \n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 629,
    "bugNodeStartChar": 31754,
    "bugNodeLength": 120,
    "fixLineNum": 629,
    "fixNodeStartChar": 31754,
    "fixNodeLength": 120,
    "sourceBeforeFix": "assertEquals(2,historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).count())",
    "sourceAfterFix": "assertEquals(3,historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).count())"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "5e7873ebd45790d9d72eb9d312de4611dc97f796",
    "fixCommitParentSHA1": "ea1743c1045cf359c88ad2c43fcc6d74160c6619",
    "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\nindex 2ae8ddf..cf8e5e5 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\n@@ -100,9 +100,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().executionId(\"nonExistingExecutionId\").list().size());\n     \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     }\n@@ -110,9 +110,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().processInstanceId(\"nonExistingProcessInstanceId\").list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     }\n@@ -120,9 +120,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().processDefinitionId(\"nonExistingProcessDefinitionId\").list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     }\n@@ -130,9 +130,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().unfinished().list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     }\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 103,
    "bugNodeStartChar": 5029,
    "bugNodeLength": 120,
    "fixLineNum": 103,
    "fixNodeStartChar": 5029,
    "fixNodeLength": 120,
    "sourceBeforeFix": "assertEquals(2,historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size())",
    "sourceAfterFix": "assertEquals(3,historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size())"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "5e7873ebd45790d9d72eb9d312de4611dc97f796",
    "fixCommitParentSHA1": "ea1743c1045cf359c88ad2c43fcc6d74160c6619",
    "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\nindex 2ae8ddf..cf8e5e5 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\n@@ -100,9 +100,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().executionId(\"nonExistingExecutionId\").list().size());\n     \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     }\n@@ -110,9 +110,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().processInstanceId(\"nonExistingProcessInstanceId\").list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     }\n@@ -120,9 +120,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().processDefinitionId(\"nonExistingProcessDefinitionId\").list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     }\n@@ -130,9 +130,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().unfinished().list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     }\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 105,
    "bugNodeStartChar": 5274,
    "bugNodeLength": 120,
    "fixLineNum": 105,
    "fixNodeStartChar": 5274,
    "fixNodeLength": 120,
    "sourceBeforeFix": "assertEquals(1,historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size())",
    "sourceAfterFix": "assertEquals(3,historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size())"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "5e7873ebd45790d9d72eb9d312de4611dc97f796",
    "fixCommitParentSHA1": "ea1743c1045cf359c88ad2c43fcc6d74160c6619",
    "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\nindex 2ae8ddf..cf8e5e5 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\n@@ -100,9 +100,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().executionId(\"nonExistingExecutionId\").list().size());\n     \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     }\n@@ -110,9 +110,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().processInstanceId(\"nonExistingProcessInstanceId\").list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     }\n@@ -120,9 +120,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().processDefinitionId(\"nonExistingProcessDefinitionId\").list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     }\n@@ -130,9 +130,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().unfinished().list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     }\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 113,
    "bugNodeStartChar": 5796,
    "bugNodeLength": 126,
    "fixLineNum": 113,
    "fixNodeStartChar": 5796,
    "fixNodeLength": 126,
    "sourceBeforeFix": "assertEquals(2,historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size())",
    "sourceAfterFix": "assertEquals(3,historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size())"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "5e7873ebd45790d9d72eb9d312de4611dc97f796",
    "fixCommitParentSHA1": "ea1743c1045cf359c88ad2c43fcc6d74160c6619",
    "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\nindex 2ae8ddf..cf8e5e5 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\n@@ -100,9 +100,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().executionId(\"nonExistingExecutionId\").list().size());\n     \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     }\n@@ -110,9 +110,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().processInstanceId(\"nonExistingProcessInstanceId\").list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     }\n@@ -120,9 +120,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().processDefinitionId(\"nonExistingProcessDefinitionId\").list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     }\n@@ -130,9 +130,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().unfinished().list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     }\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 115,
    "bugNodeStartChar": 6047,
    "bugNodeLength": 126,
    "fixLineNum": 115,
    "fixNodeStartChar": 6047,
    "fixNodeLength": 126,
    "sourceBeforeFix": "assertEquals(1,historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size())",
    "sourceAfterFix": "assertEquals(3,historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size())"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "5e7873ebd45790d9d72eb9d312de4611dc97f796",
    "fixCommitParentSHA1": "ea1743c1045cf359c88ad2c43fcc6d74160c6619",
    "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\nindex 2ae8ddf..cf8e5e5 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\n@@ -100,9 +100,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().executionId(\"nonExistingExecutionId\").list().size());\n     \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     }\n@@ -110,9 +110,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().processInstanceId(\"nonExistingProcessInstanceId\").list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     }\n@@ -120,9 +120,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().processDefinitionId(\"nonExistingProcessDefinitionId\").list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     }\n@@ -130,9 +130,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().unfinished().list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     }\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 123,
    "bugNodeStartChar": 6585,
    "bugNodeLength": 145,
    "fixLineNum": 123,
    "fixNodeStartChar": 6585,
    "fixNodeLength": 145,
    "sourceBeforeFix": "assertEquals(2,historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size())",
    "sourceAfterFix": "assertEquals(3,historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size())"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "5e7873ebd45790d9d72eb9d312de4611dc97f796",
    "fixCommitParentSHA1": "ea1743c1045cf359c88ad2c43fcc6d74160c6619",
    "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\nindex 2ae8ddf..cf8e5e5 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\n@@ -100,9 +100,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().executionId(\"nonExistingExecutionId\").list().size());\n     \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     }\n@@ -110,9 +110,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().processInstanceId(\"nonExistingProcessInstanceId\").list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     }\n@@ -120,9 +120,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().processDefinitionId(\"nonExistingProcessDefinitionId\").list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     }\n@@ -130,9 +130,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().unfinished().list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     }\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 125,
    "bugNodeStartChar": 6855,
    "bugNodeLength": 145,
    "fixLineNum": 125,
    "fixNodeStartChar": 6855,
    "fixNodeLength": 145,
    "sourceBeforeFix": "assertEquals(1,historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size())",
    "sourceAfterFix": "assertEquals(3,historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size())"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "5e7873ebd45790d9d72eb9d312de4611dc97f796",
    "fixCommitParentSHA1": "ea1743c1045cf359c88ad2c43fcc6d74160c6619",
    "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\nindex 2ae8ddf..cf8e5e5 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\n@@ -100,9 +100,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().executionId(\"nonExistingExecutionId\").list().size());\n     \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     }\n@@ -110,9 +110,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().processInstanceId(\"nonExistingProcessInstanceId\").list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     }\n@@ -120,9 +120,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().processDefinitionId(\"nonExistingProcessDefinitionId\").list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     }\n@@ -130,9 +130,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().unfinished().list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     }\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 133,
    "bugNodeStartChar": 7394,
    "bugNodeLength": 94,
    "fixLineNum": 133,
    "fixNodeStartChar": 7394,
    "fixNodeLength": 94,
    "sourceBeforeFix": "assertEquals(2,historyService.createHistoricActivityInstanceQuery().finished().list().size())",
    "sourceAfterFix": "assertEquals(3,historyService.createHistoricActivityInstanceQuery().finished().list().size())"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "5e7873ebd45790d9d72eb9d312de4611dc97f796",
    "fixCommitParentSHA1": "ea1743c1045cf359c88ad2c43fcc6d74160c6619",
    "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\nindex 2ae8ddf..cf8e5e5 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\n@@ -100,9 +100,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().executionId(\"nonExistingExecutionId\").list().size());\n     \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     }\n@@ -110,9 +110,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().processInstanceId(\"nonExistingProcessInstanceId\").list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     }\n@@ -120,9 +120,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().processDefinitionId(\"nonExistingProcessDefinitionId\").list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     }\n@@ -130,9 +130,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().unfinished().list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     }\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 135,
    "bugNodeStartChar": 7613,
    "bugNodeLength": 94,
    "fixLineNum": 135,
    "fixNodeStartChar": 7613,
    "fixNodeLength": 94,
    "sourceBeforeFix": "assertEquals(1,historyService.createHistoricActivityInstanceQuery().finished().list().size())",
    "sourceAfterFix": "assertEquals(3,historyService.createHistoricActivityInstanceQuery().finished().list().size())"
  },
  {
    "bugType": "MORE_SPECIFIC_IF",
    "fixCommitSHA1": "e1d5b45cc8be6e302921a6ce80966417bfbde86a",
    "fixCommitParentSHA1": "2a289176571111c981955f96a2d349c1a1c94bba",
    "bugFilePath": "modules/activiti-spring/src/main/java/org/activiti/spring/ProcessEngineFactoryBean.java",
    "fixPatch": "diff --git a/modules/activiti-spring/src/main/java/org/activiti/spring/ProcessEngineFactoryBean.java b/modules/activiti-spring/src/main/java/org/activiti/spring/ProcessEngineFactoryBean.java\nindex 752c3ec..1c8e302 100644\n--- a/modules/activiti-spring/src/main/java/org/activiti/spring/ProcessEngineFactoryBean.java\n+++ b/modules/activiti-spring/src/main/java/org/activiti/spring/ProcessEngineFactoryBean.java\n@@ -59,7 +59,7 @@\n   }\n \n   protected void initializeExpressionManager() {\n-    if (applicationContext != null) {\n+    if (processEngineConfiguration.getExpressionManager() == null && applicationContext != null) {\n       processEngineConfiguration.setExpressionManager(\n         new SpringExpressionManager(applicationContext, processEngineConfiguration.getBeans()));\n     }\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 62,
    "bugNodeStartChar": 2237,
    "bugNodeLength": 26,
    "fixLineNum": 62,
    "fixNodeStartChar": 2237,
    "fixNodeLength": 87,
    "sourceBeforeFix": "applicationContext != null",
    "sourceAfterFix": "processEngineConfiguration.getExpressionManager() == null && applicationContext != null"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "cf783f141a741ce1e24c472e16cbfeff41b6a3e7",
    "fixCommitParentSHA1": "50ce37421b83e790d00c888726f2de3acbecf2b2",
    "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/servicetask/ServiceTaskVariablesTest.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/servicetask/ServiceTaskVariablesTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/servicetask/ServiceTaskVariablesTest.java\nindex 707b2fb..54f79f8 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/servicetask/ServiceTaskVariablesTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/servicetask/ServiceTaskVariablesTest.java\n@@ -25,7 +25,7 @@\n  *\r\n  * @author Daniel Meyer\r\n  */\r\n-public class ServiceTaskVariablesTest extends PluggableActivitiTestCase {\r\n+public abstract class ServiceTaskVariablesTest extends PluggableActivitiTestCase {\r\n   \r\n   static boolean isNullInDelegate2;\r\n   static boolean isNullInDelegate3;\r\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 24,
    "bugNodeStartChar": 883,
    "bugNodeLength": 3046,
    "fixLineNum": 24,
    "fixNodeStartChar": 860,
    "fixNodeLength": 2963,
    "sourceBeforeFix": "1",
    "sourceAfterFix": "1025"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "febea8d12b9e1df1e9239101d23fa0f8c5dd6dfd",
    "fixCommitParentSHA1": "d7cadcdc58a8f983a9bfc520bdaea129a9b423ca",
    "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/multiinstance/MultiInstanceTest.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/multiinstance/MultiInstanceTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/multiinstance/MultiInstanceTest.java\nindex 7de37cb..f3ecf77 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/multiinstance/MultiInstanceTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/multiinstance/MultiInstanceTest.java\n@@ -575,7 +575,7 @@\n   @Deployment\n   public void testParallelSubProcessCompletionCondition() {\n     String procId = runtimeService.startProcessInstanceByKey(\"miParallelSubprocessCompletionCondition\").getId();\n-    List<Task> tasks = taskService.createTaskQuery().orderByTaskId().asc().list();\n+    List<Task> tasks = taskService.createTaskQuery().orderByExecutionId().asc().list();\n     assertEquals(4, tasks.size());\n     \n     for (int i=0; i<2; i++) {\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 578,
    "bugNodeStartChar": 24222,
    "bugNodeLength": 45,
    "fixLineNum": 578,
    "fixNodeStartChar": 24222,
    "fixNodeLength": 50,
    "sourceBeforeFix": "taskService.createTaskQuery().orderByTaskId()",
    "sourceAfterFix": "taskService.createTaskQuery().orderByExecutionId()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "febea8d12b9e1df1e9239101d23fa0f8c5dd6dfd",
    "fixCommitParentSHA1": "d7cadcdc58a8f983a9bfc520bdaea129a9b423ca",
    "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/multiinstance/MultiInstanceTest.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/multiinstance/MultiInstanceTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/multiinstance/MultiInstanceTest.java\nindex 7de37cb..f3ecf77 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/multiinstance/MultiInstanceTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/multiinstance/MultiInstanceTest.java\n@@ -575,7 +575,7 @@\n   @Deployment\n   public void testParallelSubProcessCompletionCondition() {\n     String procId = runtimeService.startProcessInstanceByKey(\"miParallelSubprocessCompletionCondition\").getId();\n-    List<Task> tasks = taskService.createTaskQuery().orderByTaskId().asc().list();\n+    List<Task> tasks = taskService.createTaskQuery().orderByExecutionId().asc().list();\n     assertEquals(4, tasks.size());\n     \n     for (int i=0; i<2; i++) {\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 578,
    "bugNodeStartChar": 24222,
    "bugNodeLength": 45,
    "fixLineNum": 578,
    "fixNodeStartChar": 24222,
    "fixNodeLength": 50,
    "sourceBeforeFix": "taskService.createTaskQuery().orderByTaskId()",
    "sourceAfterFix": "taskService.createTaskQuery().orderByExecutionId()"
  },
  {
    "bugType": "CHANGE_UNARY_OPERATOR",
    "fixCommitSHA1": "d904333295305778c4db69ce4b7c1b441fa1a99c",
    "fixCommitParentSHA1": "37d52379ded8248b69f7982fa40107572cd1177b",
    "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/behavior/BusinessRuleTaskActivityBehavior.java",
    "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/behavior/BusinessRuleTaskActivityBehavior.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/behavior/BusinessRuleTaskActivityBehavior.java\nindex d5a578d..9b97c44 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/behavior/BusinessRuleTaskActivityBehavior.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/behavior/BusinessRuleTaskActivityBehavior.java\n@@ -63,7 +63,7 @@\n         Expression ruleName = itRuleNames.next();\n         filter.addSuffic(ruleName.getValue(execution).toString());\n       }\n-      filter.setAccept(exclude);\n+      filter.setAccept(!exclude);\n       ksession.fireAllRules(filter);\n       \n     } else {\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 66,
    "bugNodeStartChar": 2622,
    "bugNodeLength": 7,
    "fixLineNum": 66,
    "fixNodeStartChar": 2622,
    "fixNodeLength": 8,
    "sourceBeforeFix": "exclude",
    "sourceAfterFix": "!exclude"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "9f1dcae64b97de86fccf34e7114790e22181de64",
    "fixCommitParentSHA1": "e0669d0431e1f54233d61c92e5ca568b5285f371",
    "bugFilePath": "modules/activiti-cactus/src/main/java/org/activiti/test/cactus/ActivitiServletTestCase.java",
    "fixPatch": "diff --git a/modules/activiti-cactus/src/main/java/org/activiti/test/cactus/ActivitiServletTestCase.java b/modules/activiti-cactus/src/main/java/org/activiti/test/cactus/ActivitiServletTestCase.java\nindex 17bcc24..811fa8a 100644\n--- a/modules/activiti-cactus/src/main/java/org/activiti/test/cactus/ActivitiServletTestCase.java\n+++ b/modules/activiti-cactus/src/main/java/org/activiti/test/cactus/ActivitiServletTestCase.java\n@@ -102,7 +102,7 @@\n     } else if (Test.class.isAssignableFrom(testClass)) {\n       // Test case, should be wrapped in TestSuite to have all\n       // test-methods turned into a single Test\n-      TestSuite testSuite = new TestSuite(testClass);\n+      ServletTestSuite testSuite = new ServletTestSuite(testClass);\n       suite.addTest(testSuite);\n     } else {\n       throw new RuntimeException(\"Class \" + classname + \" is not a TestCase nor a TestSuite\");\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 105,
    "bugNodeStartChar": 3391,
    "bugNodeLength": 47,
    "fixLineNum": 105,
    "fixNodeStartChar": 3391,
    "fixNodeLength": 61,
    "sourceBeforeFix": "TestSuite testSuite=new TestSuite(testClass); ",
    "sourceAfterFix": "ServletTestSuite testSuite=new ServletTestSuite(testClass); "
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "ca256ae2a033fd8cb76abac8563fad8fe8c988ae",
    "fixCommitParentSHA1": "767106b14de38daf8d763c59a5b46f3692ad8007",
    "bugFilePath": "modules/activiti-spring/src/main/java/org/activiti/spring/SpringExpressionManager.java",
    "fixPatch": "diff --git a/modules/activiti-spring/src/main/java/org/activiti/spring/SpringExpressionManager.java b/modules/activiti-spring/src/main/java/org/activiti/spring/SpringExpressionManager.java\nindex 8923a5f..836a9eb 100644\n--- a/modules/activiti-spring/src/main/java/org/activiti/spring/SpringExpressionManager.java\n+++ b/modules/activiti-spring/src/main/java/org/activiti/spring/SpringExpressionManager.java\n@@ -58,7 +58,7 @@\n     \n     if(beans != null) {\n       // Only expose limited set of beans in expressions\n-      compositeElResolver.add(new ReadonlyMapELResolver(beans));\n+      compositeElResolver.add(new ReadOnlyMapELResolver(beans));\n     } else {\n       // Expose full application-context in expressions\n       compositeElResolver.add(new ApplicationContextElResolver(applicationContext));\n",
    "projectName": "Activiti.Activiti",
    "bugLineNum": 61,
    "bugNodeStartChar": 2306,
    "bugNodeLength": 32,
    "fixLineNum": 61,
    "fixNodeStartChar": 2306,
    "fixNodeLength": 32,
    "sourceBeforeFix": "new ReadonlyMapELResolver(beans)",
    "sourceAfterFix": "new ReadOnlyMapELResolver(beans)"
  }
]