[{"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "e42f1219ebe6706f1dc01e74412cb85a02f5c0f2", "fixCommitParentSHA1": "9c55e1237863d2c6ad6113015872c6c41bd282cd", "bugFilePath": "extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TexturePacker.java", "fixPatch": "diff --git a/extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TexturePacker.java b/extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TexturePacker.java\nindex fd050b0..32e173a 100644\n--- a/extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TexturePacker.java\n+++ b/extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TexturePacker.java\n@@ -167,13 +167,13 @@\n \t\t\t}\r\n \t\t\tprogress.end();\r\n \r\n-\t\t\tprogress.start(0.19f);\r\n+\t\t\tprogress.start(0.35f);\r\n \t\t\tprogress.count = 0;\r\n \t\t\tprogress.total = imageProcessor.getImages().size;\r\n \t\t\tArray<Page> pages = packer.pack(progress, imageProcessor.getImages());\r\n \t\t\tprogress.end();\r\n \r\n-\t\t\tprogress.start(0.45f);\r\n+\t\t\tprogress.start(0.29f);\r\n \t\t\tprogress.count = 0;\r\n \t\t\tprogress.total = pages.size;\r\n \t\t\tString scaledPackFileName = settings.getScaledPackFileName(packFileName, i);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 170, "bugNodeStartChar": 5706, "bugNodeLength": 21, "fixLineNum": 170, "fixNodeStartChar": 5537, "fixNodeLength": 21, "sourceBeforeFix": "progress.start(0.19f)", "sourceAfterFix": "progress.start(0.35f)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "e42f1219ebe6706f1dc01e74412cb85a02f5c0f2", "fixCommitParentSHA1": "9c55e1237863d2c6ad6113015872c6c41bd282cd", "bugFilePath": "extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TexturePacker.java", "fixPatch": "diff --git a/extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TexturePacker.java b/extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TexturePacker.java\nindex fd050b0..32e173a 100644\n--- a/extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TexturePacker.java\n+++ b/extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TexturePacker.java\n@@ -167,13 +167,13 @@\n \t\t\t}\r\n \t\t\tprogress.end();\r\n \r\n-\t\t\tprogress.start(0.19f);\r\n+\t\t\tprogress.start(0.35f);\r\n \t\t\tprogress.count = 0;\r\n \t\t\tprogress.total = imageProcessor.getImages().size;\r\n \t\t\tArray<Page> pages = packer.pack(progress, imageProcessor.getImages());\r\n \t\t\tprogress.end();\r\n \r\n-\t\t\tprogress.start(0.45f);\r\n+\t\t\tprogress.start(0.29f);\r\n \t\t\tprogress.count = 0;\r\n \t\t\tprogress.total = pages.size;\r\n \t\t\tString scaledPackFileName = settings.getScaledPackFileName(packFileName, i);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 176, "bugNodeStartChar": 5908, "bugNodeLength": 21, "fixLineNum": 176, "fixNodeStartChar": 5733, "fixNodeLength": 21, "sourceBeforeFix": "progress.start(0.45f)", "sourceAfterFix": "progress.start(0.29f)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "7358784c887e9fb135e42c7083a81179085ba116", "fixCommitParentSHA1": "3f59b3087697dfa199373a9c496ddbbddd1c48ed", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/utils/BaseDrawable.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/BaseDrawable.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/BaseDrawable.java\nindex 6d581f3..ee3809c 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/BaseDrawable.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/BaseDrawable.java\n@@ -99,7 +99,7 @@\n \n \tpublic void setMinSize (float minWidth, float minHeight) {\n \t\tsetMinWidth(minWidth);\n-\t\tsetMinHeight(minWidth);\n+\t\tsetMinHeight(minHeight);\n \t}\n \n \tpublic String getName () {\n", "projectName": "libgdx.libgdx", "bugLineNum": 102, "bugNodeStartChar": 2881, "bugNodeLength": 22, "fixLineNum": 102, "fixNodeStartChar": 2881, "fixNodeLength": 23, "sourceBeforeFix": "setMinHeight(minWidth)", "sourceAfterFix": "setMinHeight(minHeight)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "0fe895a19c01ccaf2b5080170e17faa00d8b8058", "fixCommitParentSHA1": "3f59b3087697dfa199373a9c496ddbbddd1c48ed", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/utils/BaseDrawable.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/BaseDrawable.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/BaseDrawable.java\nindex 6d581f3..ee3809c 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/BaseDrawable.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/BaseDrawable.java\n@@ -99,7 +99,7 @@\n \n \tpublic void setMinSize (float minWidth, float minHeight) {\n \t\tsetMinWidth(minWidth);\n-\t\tsetMinHeight(minWidth);\n+\t\tsetMinHeight(minHeight);\n \t}\n \n \tpublic String getName () {\n", "projectName": "libgdx.libgdx", "bugLineNum": 102, "bugNodeStartChar": 2881, "bugNodeLength": 22, "fixLineNum": 102, "fixNodeStartChar": 2881, "fixNodeLength": 23, "sourceBeforeFix": "setMinHeight(minWidth)", "sourceAfterFix": "setMinHeight(minHeight)"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "bd3a6e9e31b2153ea00e964eed4a56a52e5ad57e", "fixCommitParentSHA1": "89203640d6d0851e4262a8032ec3b253598dd936", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/Json.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/Json.java b/gdx/src/com/badlogic/gdx/utils/Json.java\nindex 91dbe8e..f510ef2 100644\n--- a/gdx/src/com/badlogic/gdx/utils/Json.java\n+++ b/gdx/src/com/badlogic/gdx/utils/Json.java\n@@ -1111,11 +1111,11 @@\n \t * object. The <code>to</code> object must have at least all the fields of the <code>from</code> object with the same name and\n \t * type. */\n \tpublic void copyFields (Object from, Object to) {\n-\t\tOrderedMap<String, FieldMetadata> toFields = getFields(from.getClass());\n+\t\tOrderedMap<String, FieldMetadata> toFields = getFields(to.getClass());\n \t\tfor (ObjectMap.Entry<String, FieldMetadata> entry : getFields(from.getClass())) {\n \t\t\tFieldMetadata toField = toFields.get(entry.key);\n \t\t\tField fromField = entry.value.field;\n-\t\t\tif (toField == null) throw new SerializationException(\"To object is missing field\" + entry.key);\n+\t\t\tif (toField == null) throw new SerializationException(\"To object is missing field: \" + entry.key);\n \t\t\ttry {\n \t\t\t\ttoField.field.set(to, fromField.get(from));\n \t\t\t} catch (ReflectionException ex) {\n", "projectName": "libgdx.libgdx", "bugLineNum": 1114, "bugNodeStartChar": 42070, "bugNodeLength": 15, "fixLineNum": 1114, "fixNodeStartChar": 42070, "fixNodeLength": 13, "sourceBeforeFix": "from.getClass()", "sourceAfterFix": "to.getClass()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "bd3a6e9e31b2153ea00e964eed4a56a52e5ad57e", "fixCommitParentSHA1": "89203640d6d0851e4262a8032ec3b253598dd936", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/Json.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/Json.java b/gdx/src/com/badlogic/gdx/utils/Json.java\nindex 91dbe8e..f510ef2 100644\n--- a/gdx/src/com/badlogic/gdx/utils/Json.java\n+++ b/gdx/src/com/badlogic/gdx/utils/Json.java\n@@ -1111,11 +1111,11 @@\n \t * object. The <code>to</code> object must have at least all the fields of the <code>from</code> object with the same name and\n \t * type. */\n \tpublic void copyFields (Object from, Object to) {\n-\t\tOrderedMap<String, FieldMetadata> toFields = getFields(from.getClass());\n+\t\tOrderedMap<String, FieldMetadata> toFields = getFields(to.getClass());\n \t\tfor (ObjectMap.Entry<String, FieldMetadata> entry : getFields(from.getClass())) {\n \t\t\tFieldMetadata toField = toFields.get(entry.key);\n \t\t\tField fromField = entry.value.field;\n-\t\t\tif (toField == null) throw new SerializationException(\"To object is missing field\" + entry.key);\n+\t\t\tif (toField == null) throw new SerializationException(\"To object is missing field: \" + entry.key);\n \t\t\ttry {\n \t\t\t\ttoField.field.set(to, fromField.get(from));\n \t\t\t} catch (ReflectionException ex) {\n", "projectName": "libgdx.libgdx", "bugLineNum": 1114, "bugNodeStartChar": 42070, "bugNodeLength": 15, "fixLineNum": 1114, "fixNodeStartChar": 42070, "fixNodeLength": 13, "sourceBeforeFix": "from.getClass()", "sourceAfterFix": "to.getClass()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "76d69ac2d17de5b0b7212cc9109ed99a76d54aec", "fixCommitParentSHA1": "5864b18cd4850f8b33d6594554f8d2ef57491e8d", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java b/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java\nindex c627724..30bcee1 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java\n@@ -533,7 +533,7 @@\n \t\t\t\tfloat radius2 = radiusX * radiusX;\r\n \t\t\t\twhile (true) {\r\n \t\t\t\t\tfloat px = MathUtils.random(width) - radiusX;\r\n-\t\t\t\t\tfloat py = MathUtils.random(height) - radiusY;\r\n+\t\t\t\t\tfloat py = MathUtils.random(width) - radiusX;\r\n \t\t\t\t\tif (px * px + py * py <= radius2) {\r\n \t\t\t\t\t\tx += px;\r\n \t\t\t\t\t\ty += py / scaleY;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 536, "bugNodeStartChar": 18471, "bugNodeLength": 24, "fixLineNum": 536, "fixNodeStartChar": 17936, "fixNodeLength": 23, "sourceBeforeFix": "MathUtils.random(height)", "sourceAfterFix": "MathUtils.random(width)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "50331333ca6a1ee5237cb435eb32fd6a3de2a060", "fixCommitParentSHA1": "19702eb73c9f4c67aa717768d87c82d38fa8f3be", "bugFilePath": "tests/gdx-tests-android/src/com/badlogic/gdx/tests/android/AndroidTestStarter.java", "fixPatch": "diff --git a/tests/gdx-tests-android/src/com/badlogic/gdx/tests/android/AndroidTestStarter.java b/tests/gdx-tests-android/src/com/badlogic/gdx/tests/android/AndroidTestStarter.java\nindex 1b5c574..04a96e3 100644\n--- a/tests/gdx-tests-android/src/com/badlogic/gdx/tests/android/AndroidTestStarter.java\n+++ b/tests/gdx-tests-android/src/com/badlogic/gdx/tests/android/AndroidTestStarter.java\n@@ -52,7 +52,7 @@\n \t\tEditor editor = prefs.edit();\r\n \t\teditor.putInt(\"index\", listView.getFirstVisiblePosition());\r\n \t\teditor.putInt(\"top\", listView.getChildAt(0) == null ? 0 : listView.getChildAt(0).getTop());\r\n-\t\teditor.commit();\r\n+\t\teditor.apply();\r\n \r\n \t\tObject o = this.getListAdapter().getItem(position);\r\n \t\tString testName = o.toString();\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 55, "bugNodeStartChar": 2200, "bugNodeLength": 15, "fixLineNum": 55, "fixNodeStartChar": 2146, "fixNodeLength": 14, "sourceBeforeFix": "editor.commit()", "sourceAfterFix": "editor.apply()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "50331333ca6a1ee5237cb435eb32fd6a3de2a060", "fixCommitParentSHA1": "19702eb73c9f4c67aa717768d87c82d38fa8f3be", "bugFilePath": "tests/gdx-tests-android/src/com/badlogic/gdx/tests/android/AndroidTestStarter.java", "fixPatch": "diff --git a/tests/gdx-tests-android/src/com/badlogic/gdx/tests/android/AndroidTestStarter.java b/tests/gdx-tests-android/src/com/badlogic/gdx/tests/android/AndroidTestStarter.java\nindex 1b5c574..04a96e3 100644\n--- a/tests/gdx-tests-android/src/com/badlogic/gdx/tests/android/AndroidTestStarter.java\n+++ b/tests/gdx-tests-android/src/com/badlogic/gdx/tests/android/AndroidTestStarter.java\n@@ -52,7 +52,7 @@\n \t\tEditor editor = prefs.edit();\r\n \t\teditor.putInt(\"index\", listView.getFirstVisiblePosition());\r\n \t\teditor.putInt(\"top\", listView.getChildAt(0) == null ? 0 : listView.getChildAt(0).getTop());\r\n-\t\teditor.commit();\r\n+\t\teditor.apply();\r\n \r\n \t\tObject o = this.getListAdapter().getItem(position);\r\n \t\tString testName = o.toString();\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 55, "bugNodeStartChar": 2200, "bugNodeLength": 15, "fixLineNum": 55, "fixNodeStartChar": 2146, "fixNodeLength": 14, "sourceBeforeFix": "editor.commit()", "sourceAfterFix": "editor.apply()"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "19702eb73c9f4c67aa717768d87c82d38fa8f3be", "fixCommitParentSHA1": "0c26167bb5e3ef4bc976f8b59e24f6f61e0848c1", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g2d/PixmapPacker.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/PixmapPacker.java b/gdx/src/com/badlogic/gdx/graphics/g2d/PixmapPacker.java\nindex 3886749..22773ae 100755\n--- a/gdx/src/com/badlogic/gdx/graphics/g2d/PixmapPacker.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/PixmapPacker.java\n@@ -715,7 +715,7 @@\n \t\treturn pads;\n \t}\n \n-\tprivate static Color c = new Color();\n+\tprivate Color c = new Color();\n \tprivate int getSplitPoint (Pixmap raster, int startX, int startY, boolean startPoint, boolean xAxis) {\n \t\tint[] rgba = new int[4];\n \n", "projectName": "libgdx.libgdx", "bugLineNum": 718, "bugNodeStartChar": 25352, "bugNodeLength": 37, "fixLineNum": 718, "fixNodeStartChar": 25352, "fixNodeLength": 30, "sourceBeforeFix": "10", "sourceAfterFix": "2"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "63b7f0d065c51b125f53c90c1c61e2eda9068929", "fixCommitParentSHA1": "0a16b1e6117d2c47253322c5c3623126dbb6528a", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java\nindex adace9d..5645410 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java\n@@ -77,7 +77,8 @@\n \t\t\tpublic void touchUp (InputEvent event, float x, float y, int pointer, int button) {\r\n \t\t\t\tif (pointer != draggingPointer) return;\r\n \t\t\t\tdraggingPointer = -1;\r\n-\t\t\t\tif (!calculatePositionAndValue(x, y)) {\r\n+\t\t\t\t// The position is invalid when focus is cancelled\r\n+\t\t\t\tif (event.isTouchFocusCancel() || !calculatePositionAndValue(x, y)) {\r\n \t\t\t\t\t// Fire an event on touchUp even if the value didn't change, so listeners can see when a drag ends via isDragging.\r\n \t\t\t\t\tChangeEvent changeEvent = Pools.obtain(ChangeEvent.class);\r\n \t\t\t\t\tfire(changeEvent);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 80, "bugNodeStartChar": 3933, "bugNodeLength": 32, "fixLineNum": 81, "fixNodeStartChar": 3909, "fixNodeLength": 62, "sourceBeforeFix": "!calculatePositionAndValue(x,y)", "sourceAfterFix": "event.isTouchFocusCancel() || !calculatePositionAndValue(x,y)"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "0273c2288d39777528ece72ffa47c0b8790b42ab", "fixCommitParentSHA1": "04d8645c7b08c84d25a5b14b0f20d4599feb2547", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextArea.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextArea.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextArea.java\nindex fcc0952..b310bff 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextArea.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextArea.java\n@@ -88,7 +88,7 @@\n \t\t\t\tint i = start;\n \t\t\t\tfor (; i < end; i++)\n \t\t\t\t\tif (glyphPositions[i] > x) break;\n-\t\t\t\tif (glyphPositions[i] - x <= x - glyphPositions[i - 1]) return i;\n+\t\t\t\tif (i > 0 && glyphPositions[i] - x <= x - glyphPositions[i - 1]) return i;\n \t\t\t\treturn Math.max(0, i - 1);\n \t\t\t}\n \t\t} else {\n", "projectName": "libgdx.libgdx", "bugLineNum": 91, "bugNodeStartChar": 2957, "bugNodeLength": 50, "fixLineNum": 91, "fixNodeStartChar": 2957, "fixNodeLength": 59, "sourceBeforeFix": "glyphPositions[i] - x <= x - glyphPositions[i - 1]", "sourceAfterFix": "i > 0 && glyphPositions[i] - x <= x - glyphPositions[i - 1]"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4b52e5d010469405c1ec24baa2f8457f3eada222", "fixCommitParentSHA1": "1ac90bbe54871a0d2b0dd5839ba64e7ce7dc401b", "bugFilePath": "gdx/src/com/badlogic/gdx/InputMultiplexer.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/InputMultiplexer.java b/gdx/src/com/badlogic/gdx/InputMultiplexer.java\nindex c918102..960ab83 100644\n--- a/gdx/src/com/badlogic/gdx/InputMultiplexer.java\n+++ b/gdx/src/com/badlogic/gdx/InputMultiplexer.java\n@@ -74,10 +74,10 @@\n \t}\r\n \r\n \tpublic boolean keyDown (int keycode) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].keyDown(keycode)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).keyDown(keycode)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -85,10 +85,10 @@\n \t}\r\n \r\n \tpublic boolean keyUp (int keycode) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].keyUp(keycode)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).keyUp(keycode)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -96,10 +96,10 @@\n \t}\r\n \r\n \tpublic boolean keyTyped (char character) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].keyTyped(character)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).keyTyped(character)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -107,10 +107,10 @@\n \t}\r\n \r\n \tpublic boolean touchDown (int screenX, int screenY, int pointer, int button) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].touchDown(screenX, screenY, pointer, button)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).touchDown(screenX, screenY, pointer, button)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -118,10 +118,10 @@\n \t}\r\n \r\n \tpublic boolean touchUp (int screenX, int screenY, int pointer, int button) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].touchUp(screenX, screenY, pointer, button)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).touchUp(screenX, screenY, pointer, button)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -129,10 +129,10 @@\n \t}\r\n \r\n \tpublic boolean touchDragged (int screenX, int screenY, int pointer) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].touchDragged(screenX, screenY, pointer)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).touchDragged(screenX, screenY, pointer)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -140,10 +140,10 @@\n \t}\r\n \r\n \tpublic boolean mouseMoved (int screenX, int screenY) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].mouseMoved(screenX, screenY)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).mouseMoved(screenX, screenY)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -151,10 +151,10 @@\n \t}\r\n \r\n \tpublic boolean scrolled (int amount) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].scrolled(amount)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).scrolled(amount)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 77, "bugNodeStartChar": 2535, "bugNodeLength": 16, "fixLineNum": 77, "fixNodeStartChar": 2459, "fixNodeLength": 8, "sourceBeforeFix": "InputProcessor[]", "sourceAfterFix": "Object[]"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4b52e5d010469405c1ec24baa2f8457f3eada222", "fixCommitParentSHA1": "1ac90bbe54871a0d2b0dd5839ba64e7ce7dc401b", "bugFilePath": "gdx/src/com/badlogic/gdx/InputMultiplexer.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/InputMultiplexer.java b/gdx/src/com/badlogic/gdx/InputMultiplexer.java\nindex c918102..960ab83 100644\n--- a/gdx/src/com/badlogic/gdx/InputMultiplexer.java\n+++ b/gdx/src/com/badlogic/gdx/InputMultiplexer.java\n@@ -74,10 +74,10 @@\n \t}\r\n \r\n \tpublic boolean keyDown (int keycode) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].keyDown(keycode)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).keyDown(keycode)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -85,10 +85,10 @@\n \t}\r\n \r\n \tpublic boolean keyUp (int keycode) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].keyUp(keycode)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).keyUp(keycode)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -96,10 +96,10 @@\n \t}\r\n \r\n \tpublic boolean keyTyped (char character) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].keyTyped(character)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).keyTyped(character)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -107,10 +107,10 @@\n \t}\r\n \r\n \tpublic boolean touchDown (int screenX, int screenY, int pointer, int button) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].touchDown(screenX, screenY, pointer, button)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).touchDown(screenX, screenY, pointer, button)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -118,10 +118,10 @@\n \t}\r\n \r\n \tpublic boolean touchUp (int screenX, int screenY, int pointer, int button) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].touchUp(screenX, screenY, pointer, button)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).touchUp(screenX, screenY, pointer, button)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -129,10 +129,10 @@\n \t}\r\n \r\n \tpublic boolean touchDragged (int screenX, int screenY, int pointer) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].touchDragged(screenX, screenY, pointer)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).touchDragged(screenX, screenY, pointer)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -140,10 +140,10 @@\n \t}\r\n \r\n \tpublic boolean mouseMoved (int screenX, int screenY) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].mouseMoved(screenX, screenY)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).mouseMoved(screenX, screenY)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -151,10 +151,10 @@\n \t}\r\n \r\n \tpublic boolean scrolled (int amount) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].scrolled(amount)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).scrolled(amount)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 88, "bugNodeStartChar": 2798, "bugNodeLength": 16, "fixLineNum": 88, "fixNodeStartChar": 2711, "fixNodeLength": 8, "sourceBeforeFix": "InputProcessor[]", "sourceAfterFix": "Object[]"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4b52e5d010469405c1ec24baa2f8457f3eada222", "fixCommitParentSHA1": "1ac90bbe54871a0d2b0dd5839ba64e7ce7dc401b", "bugFilePath": "gdx/src/com/badlogic/gdx/InputMultiplexer.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/InputMultiplexer.java b/gdx/src/com/badlogic/gdx/InputMultiplexer.java\nindex c918102..960ab83 100644\n--- a/gdx/src/com/badlogic/gdx/InputMultiplexer.java\n+++ b/gdx/src/com/badlogic/gdx/InputMultiplexer.java\n@@ -74,10 +74,10 @@\n \t}\r\n \r\n \tpublic boolean keyDown (int keycode) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].keyDown(keycode)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).keyDown(keycode)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -85,10 +85,10 @@\n \t}\r\n \r\n \tpublic boolean keyUp (int keycode) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].keyUp(keycode)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).keyUp(keycode)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -96,10 +96,10 @@\n \t}\r\n \r\n \tpublic boolean keyTyped (char character) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].keyTyped(character)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).keyTyped(character)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -107,10 +107,10 @@\n \t}\r\n \r\n \tpublic boolean touchDown (int screenX, int screenY, int pointer, int button) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].touchDown(screenX, screenY, pointer, button)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).touchDown(screenX, screenY, pointer, button)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -118,10 +118,10 @@\n \t}\r\n \r\n \tpublic boolean touchUp (int screenX, int screenY, int pointer, int button) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].touchUp(screenX, screenY, pointer, button)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).touchUp(screenX, screenY, pointer, button)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -129,10 +129,10 @@\n \t}\r\n \r\n \tpublic boolean touchDragged (int screenX, int screenY, int pointer) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].touchDragged(screenX, screenY, pointer)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).touchDragged(screenX, screenY, pointer)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -140,10 +140,10 @@\n \t}\r\n \r\n \tpublic boolean mouseMoved (int screenX, int screenY) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].mouseMoved(screenX, screenY)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).mouseMoved(screenX, screenY)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -151,10 +151,10 @@\n \t}\r\n \r\n \tpublic boolean scrolled (int amount) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].scrolled(amount)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).scrolled(amount)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 99, "bugNodeStartChar": 3065, "bugNodeLength": 16, "fixLineNum": 99, "fixNodeStartChar": 2967, "fixNodeLength": 8, "sourceBeforeFix": "InputProcessor[]", "sourceAfterFix": "Object[]"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4b52e5d010469405c1ec24baa2f8457f3eada222", "fixCommitParentSHA1": "1ac90bbe54871a0d2b0dd5839ba64e7ce7dc401b", "bugFilePath": "gdx/src/com/badlogic/gdx/InputMultiplexer.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/InputMultiplexer.java b/gdx/src/com/badlogic/gdx/InputMultiplexer.java\nindex c918102..960ab83 100644\n--- a/gdx/src/com/badlogic/gdx/InputMultiplexer.java\n+++ b/gdx/src/com/badlogic/gdx/InputMultiplexer.java\n@@ -74,10 +74,10 @@\n \t}\r\n \r\n \tpublic boolean keyDown (int keycode) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].keyDown(keycode)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).keyDown(keycode)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -85,10 +85,10 @@\n \t}\r\n \r\n \tpublic boolean keyUp (int keycode) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].keyUp(keycode)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).keyUp(keycode)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -96,10 +96,10 @@\n \t}\r\n \r\n \tpublic boolean keyTyped (char character) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].keyTyped(character)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).keyTyped(character)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -107,10 +107,10 @@\n \t}\r\n \r\n \tpublic boolean touchDown (int screenX, int screenY, int pointer, int button) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].touchDown(screenX, screenY, pointer, button)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).touchDown(screenX, screenY, pointer, button)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -118,10 +118,10 @@\n \t}\r\n \r\n \tpublic boolean touchUp (int screenX, int screenY, int pointer, int button) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].touchUp(screenX, screenY, pointer, button)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).touchUp(screenX, screenY, pointer, button)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -129,10 +129,10 @@\n \t}\r\n \r\n \tpublic boolean touchDragged (int screenX, int screenY, int pointer) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].touchDragged(screenX, screenY, pointer)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).touchDragged(screenX, screenY, pointer)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -140,10 +140,10 @@\n \t}\r\n \r\n \tpublic boolean mouseMoved (int screenX, int screenY) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].mouseMoved(screenX, screenY)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).mouseMoved(screenX, screenY)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -151,10 +151,10 @@\n \t}\r\n \r\n \tpublic boolean scrolled (int amount) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].scrolled(amount)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).scrolled(amount)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 110, "bugNodeStartChar": 3373, "bugNodeLength": 16, "fixLineNum": 110, "fixNodeStartChar": 3264, "fixNodeLength": 8, "sourceBeforeFix": "InputProcessor[]", "sourceAfterFix": "Object[]"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4b52e5d010469405c1ec24baa2f8457f3eada222", "fixCommitParentSHA1": "1ac90bbe54871a0d2b0dd5839ba64e7ce7dc401b", "bugFilePath": "gdx/src/com/badlogic/gdx/InputMultiplexer.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/InputMultiplexer.java b/gdx/src/com/badlogic/gdx/InputMultiplexer.java\nindex c918102..960ab83 100644\n--- a/gdx/src/com/badlogic/gdx/InputMultiplexer.java\n+++ b/gdx/src/com/badlogic/gdx/InputMultiplexer.java\n@@ -74,10 +74,10 @@\n \t}\r\n \r\n \tpublic boolean keyDown (int keycode) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].keyDown(keycode)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).keyDown(keycode)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -85,10 +85,10 @@\n \t}\r\n \r\n \tpublic boolean keyUp (int keycode) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].keyUp(keycode)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).keyUp(keycode)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -96,10 +96,10 @@\n \t}\r\n \r\n \tpublic boolean keyTyped (char character) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].keyTyped(character)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).keyTyped(character)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -107,10 +107,10 @@\n \t}\r\n \r\n \tpublic boolean touchDown (int screenX, int screenY, int pointer, int button) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].touchDown(screenX, screenY, pointer, button)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).touchDown(screenX, screenY, pointer, button)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -118,10 +118,10 @@\n \t}\r\n \r\n \tpublic boolean touchUp (int screenX, int screenY, int pointer, int button) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].touchUp(screenX, screenY, pointer, button)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).touchUp(screenX, screenY, pointer, button)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -129,10 +129,10 @@\n \t}\r\n \r\n \tpublic boolean touchDragged (int screenX, int screenY, int pointer) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].touchDragged(screenX, screenY, pointer)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).touchDragged(screenX, screenY, pointer)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -140,10 +140,10 @@\n \t}\r\n \r\n \tpublic boolean mouseMoved (int screenX, int screenY) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].mouseMoved(screenX, screenY)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).mouseMoved(screenX, screenY)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -151,10 +151,10 @@\n \t}\r\n \r\n \tpublic boolean scrolled (int amount) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].scrolled(amount)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).scrolled(amount)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 121, "bugNodeStartChar": 3704, "bugNodeLength": 16, "fixLineNum": 121, "fixNodeStartChar": 3584, "fixNodeLength": 8, "sourceBeforeFix": "InputProcessor[]", "sourceAfterFix": "Object[]"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4b52e5d010469405c1ec24baa2f8457f3eada222", "fixCommitParentSHA1": "1ac90bbe54871a0d2b0dd5839ba64e7ce7dc401b", "bugFilePath": "gdx/src/com/badlogic/gdx/InputMultiplexer.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/InputMultiplexer.java b/gdx/src/com/badlogic/gdx/InputMultiplexer.java\nindex c918102..960ab83 100644\n--- a/gdx/src/com/badlogic/gdx/InputMultiplexer.java\n+++ b/gdx/src/com/badlogic/gdx/InputMultiplexer.java\n@@ -74,10 +74,10 @@\n \t}\r\n \r\n \tpublic boolean keyDown (int keycode) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].keyDown(keycode)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).keyDown(keycode)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -85,10 +85,10 @@\n \t}\r\n \r\n \tpublic boolean keyUp (int keycode) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].keyUp(keycode)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).keyUp(keycode)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -96,10 +96,10 @@\n \t}\r\n \r\n \tpublic boolean keyTyped (char character) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].keyTyped(character)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).keyTyped(character)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -107,10 +107,10 @@\n \t}\r\n \r\n \tpublic boolean touchDown (int screenX, int screenY, int pointer, int button) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].touchDown(screenX, screenY, pointer, button)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).touchDown(screenX, screenY, pointer, button)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -118,10 +118,10 @@\n \t}\r\n \r\n \tpublic boolean touchUp (int screenX, int screenY, int pointer, int button) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].touchUp(screenX, screenY, pointer, button)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).touchUp(screenX, screenY, pointer, button)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -129,10 +129,10 @@\n \t}\r\n \r\n \tpublic boolean touchDragged (int screenX, int screenY, int pointer) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].touchDragged(screenX, screenY, pointer)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).touchDragged(screenX, screenY, pointer)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -140,10 +140,10 @@\n \t}\r\n \r\n \tpublic boolean mouseMoved (int screenX, int screenY) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].mouseMoved(screenX, screenY)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).mouseMoved(screenX, screenY)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -151,10 +151,10 @@\n \t}\r\n \r\n \tpublic boolean scrolled (int amount) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].scrolled(amount)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).scrolled(amount)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 132, "bugNodeStartChar": 4026, "bugNodeLength": 16, "fixLineNum": 132, "fixNodeStartChar": 3895, "fixNodeLength": 8, "sourceBeforeFix": "InputProcessor[]", "sourceAfterFix": "Object[]"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4b52e5d010469405c1ec24baa2f8457f3eada222", "fixCommitParentSHA1": "1ac90bbe54871a0d2b0dd5839ba64e7ce7dc401b", "bugFilePath": "gdx/src/com/badlogic/gdx/InputMultiplexer.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/InputMultiplexer.java b/gdx/src/com/badlogic/gdx/InputMultiplexer.java\nindex c918102..960ab83 100644\n--- a/gdx/src/com/badlogic/gdx/InputMultiplexer.java\n+++ b/gdx/src/com/badlogic/gdx/InputMultiplexer.java\n@@ -74,10 +74,10 @@\n \t}\r\n \r\n \tpublic boolean keyDown (int keycode) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].keyDown(keycode)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).keyDown(keycode)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -85,10 +85,10 @@\n \t}\r\n \r\n \tpublic boolean keyUp (int keycode) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].keyUp(keycode)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).keyUp(keycode)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -96,10 +96,10 @@\n \t}\r\n \r\n \tpublic boolean keyTyped (char character) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].keyTyped(character)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).keyTyped(character)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -107,10 +107,10 @@\n \t}\r\n \r\n \tpublic boolean touchDown (int screenX, int screenY, int pointer, int button) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].touchDown(screenX, screenY, pointer, button)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).touchDown(screenX, screenY, pointer, button)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -118,10 +118,10 @@\n \t}\r\n \r\n \tpublic boolean touchUp (int screenX, int screenY, int pointer, int button) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].touchUp(screenX, screenY, pointer, button)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).touchUp(screenX, screenY, pointer, button)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -129,10 +129,10 @@\n \t}\r\n \r\n \tpublic boolean touchDragged (int screenX, int screenY, int pointer) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].touchDragged(screenX, screenY, pointer)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).touchDragged(screenX, screenY, pointer)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -140,10 +140,10 @@\n \t}\r\n \r\n \tpublic boolean mouseMoved (int screenX, int screenY) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].mouseMoved(screenX, screenY)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).mouseMoved(screenX, screenY)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -151,10 +151,10 @@\n \t}\r\n \r\n \tpublic boolean scrolled (int amount) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].scrolled(amount)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).scrolled(amount)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 143, "bugNodeStartChar": 4330, "bugNodeLength": 16, "fixLineNum": 143, "fixNodeStartChar": 4188, "fixNodeLength": 8, "sourceBeforeFix": "InputProcessor[]", "sourceAfterFix": "Object[]"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4b52e5d010469405c1ec24baa2f8457f3eada222", "fixCommitParentSHA1": "1ac90bbe54871a0d2b0dd5839ba64e7ce7dc401b", "bugFilePath": "gdx/src/com/badlogic/gdx/InputMultiplexer.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/InputMultiplexer.java b/gdx/src/com/badlogic/gdx/InputMultiplexer.java\nindex c918102..960ab83 100644\n--- a/gdx/src/com/badlogic/gdx/InputMultiplexer.java\n+++ b/gdx/src/com/badlogic/gdx/InputMultiplexer.java\n@@ -74,10 +74,10 @@\n \t}\r\n \r\n \tpublic boolean keyDown (int keycode) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].keyDown(keycode)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).keyDown(keycode)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -85,10 +85,10 @@\n \t}\r\n \r\n \tpublic boolean keyUp (int keycode) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].keyUp(keycode)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).keyUp(keycode)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -96,10 +96,10 @@\n \t}\r\n \r\n \tpublic boolean keyTyped (char character) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].keyTyped(character)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).keyTyped(character)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -107,10 +107,10 @@\n \t}\r\n \r\n \tpublic boolean touchDown (int screenX, int screenY, int pointer, int button) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].touchDown(screenX, screenY, pointer, button)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).touchDown(screenX, screenY, pointer, button)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -118,10 +118,10 @@\n \t}\r\n \r\n \tpublic boolean touchUp (int screenX, int screenY, int pointer, int button) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].touchUp(screenX, screenY, pointer, button)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).touchUp(screenX, screenY, pointer, button)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -129,10 +129,10 @@\n \t}\r\n \r\n \tpublic boolean touchDragged (int screenX, int screenY, int pointer) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].touchDragged(screenX, screenY, pointer)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).touchDragged(screenX, screenY, pointer)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -140,10 +140,10 @@\n \t}\r\n \r\n \tpublic boolean mouseMoved (int screenX, int screenY) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].mouseMoved(screenX, screenY)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).mouseMoved(screenX, screenY)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n@@ -151,10 +151,10 @@\n \t}\r\n \r\n \tpublic boolean scrolled (int amount) {\r\n-\t\tInputProcessor[] items = processors.begin();\r\n+\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n-\t\t\t\tif (items[i].scrolled(amount)) return true;\r\n+\t\t\t\tif (((InputProcessor)items[i]).scrolled(amount)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 154, "bugNodeStartChar": 4607, "bugNodeLength": 16, "fixLineNum": 154, "fixNodeStartChar": 4454, "fixNodeLength": 8, "sourceBeforeFix": "InputProcessor[]", "sourceAfterFix": "Object[]"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "3b936881f7e3fa84b26a1e67830d95dd87416dea", "fixCommitParentSHA1": "67f7266bc471677f448cfd7605c5ab1229b67460", "bugFilePath": "gdx/src/com/badlogic/gdx/math/Interpolation.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/Interpolation.java b/gdx/src/com/badlogic/gdx/math/Interpolation.java\nindex ba772bc..4400535 100644\n--- a/gdx/src/com/badlogic/gdx/math/Interpolation.java\n+++ b/gdx/src/com/badlogic/gdx/math/Interpolation.java\n@@ -66,7 +66,7 @@\n \tstatic public final PowIn slowFast = pow2In;\r\n \t/** Fast, then slow. */\r\n \tstatic public final PowOut pow2Out = new PowOut(2);\r\n-\tstatic public final PowIn fastSlow = pow2In;\r\n+\tstatic public final PowOut fastSlow = pow2Out;\r\n \tstatic public final Interpolation pow2InInverse = new Interpolation() {\r\n \t\tpublic float apply (float a) {\r\n \t\t\treturn (float)Math.sqrt(a);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 69, "bugNodeStartChar": 2204, "bugNodeLength": 44, "fixLineNum": 69, "fixNodeStartChar": 2136, "fixNodeLength": 46, "sourceBeforeFix": "static public final PowIn fastSlow=pow2In; ", "sourceAfterFix": "static public final PowOut fastSlow=pow2Out; "}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "10478a75550b82e13cc2501eda20512a85f8c840", "fixCommitParentSHA1": "0ee2eb2ff67e372ec3475fa065bc28d9ec891324", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TooltipManager.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TooltipManager.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TooltipManager.java\nindex 096e93a..d70a5e2 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TooltipManager.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TooltipManager.java\n@@ -64,7 +64,7 @@\n \tTooltip showTooltip;\n \tfinal Task showTask = new Task() {\n \t\tpublic void run () {\n-\t\t\tif (showTooltip == null) return;\n+\t\t\tif (showTooltip == null || showTooltip.targetActor == null) return;\n \n \t\t\tStage stage = showTooltip.targetActor.getStage();\n \t\t\tif (stage == null) return;\n", "projectName": "libgdx.libgdx", "bugLineNum": 67, "bugNodeStartChar": 2724, "bugNodeLength": 19, "fixLineNum": 67, "fixNodeStartChar": 2724, "fixNodeLength": 54, "sourceBeforeFix": "showTooltip == null", "sourceAfterFix": "showTooltip == null || showTooltip.targetActor == null"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "10478a75550b82e13cc2501eda20512a85f8c840", "fixCommitParentSHA1": "0ee2eb2ff67e372ec3475fa065bc28d9ec891324", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TooltipManager.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TooltipManager.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TooltipManager.java\nindex 096e93a..d70a5e2 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TooltipManager.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TooltipManager.java\n@@ -64,7 +64,7 @@\n \tTooltip showTooltip;\n \tfinal Task showTask = new Task() {\n \t\tpublic void run () {\n-\t\t\tif (showTooltip == null) return;\n+\t\t\tif (showTooltip == null || showTooltip.targetActor == null) return;\n \n \t\t\tStage stage = showTooltip.targetActor.getStage();\n \t\t\tif (stage == null) return;\n", "projectName": "libgdx.libgdx", "bugLineNum": 67, "bugNodeStartChar": 2724, "bugNodeLength": 19, "fixLineNum": 67, "fixNodeStartChar": 2724, "fixNodeLength": 54, "sourceBeforeFix": "showTooltip == null", "sourceAfterFix": "showTooltip == null || showTooltip.targetActor == null"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "a6e7fb22578c900a5b806d2a429a05d81a722635", "fixCommitParentSHA1": "43b6253401d332add7a1755f23e194ad7548459e", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g2d/Sprite.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/Sprite.java b/gdx/src/com/badlogic/gdx/graphics/g2d/Sprite.java\nindex e67bda4..e773701 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g2d/Sprite.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/Sprite.java\n@@ -190,7 +190,7 @@\n \r\n \t/** Sets the position where the sprite will be drawn, relative to its current origin.  */\r\n \tpublic void setOriginBasedPosition (float x, float y) {\r\n-\t\tsetPosition(x - this.originX, y - this.originX);\r\n+\t\tsetPosition(x - this.originX, y - this.originY);\r\n \t}\r\n \r\n \t/** Sets the x position where the sprite will be drawn. If origin, rotation, or scale are changed, it is slightly more efficient\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 193, "bugNodeStartChar": 7723, "bugNodeLength": 12, "fixLineNum": 193, "fixNodeStartChar": 7531, "fixNodeLength": 12, "sourceBeforeFix": "this.originX", "sourceAfterFix": "this.originY"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "98390cf27b0ce41447e0a104a8963b2cfdc20795", "fixCommitParentSHA1": "9be601a6b3dc046ea61e6bd8e5da6bdcf556f4e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/Array.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/Array.java b/gdx/src/com/badlogic/gdx/utils/Array.java\nindex 860bbc3..f064ef8 100644\n--- a/gdx/src/com/badlogic/gdx/utils/Array.java\n+++ b/gdx/src/com/badlogic/gdx/utils/Array.java\n@@ -120,7 +120,7 @@\n \r\n \tpublic void add (T value1, T value2, T value3, T value4) {\r\n \t\tT[] items = this.items;\r\n-\t\tif (size + 3 >= items.length) items = resize(Math.max(8, (int)(size * 1.75f)));\r\n+\t\tif (size + 3 >= items.length) items = resize(Math.max(8, (int)(size * 1.8f))); // 1.75 isn't enough when size=5.\r\n \t\titems[size] = value1;\r\n \t\titems[size + 1] = value2;\r\n \t\titems[size + 2] = value3;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 123, "bugNodeStartChar": 5213, "bugNodeLength": 12, "fixLineNum": 123, "fixNodeStartChar": 5091, "fixNodeLength": 11, "sourceBeforeFix": "size * 1.75f", "sourceAfterFix": "size * 1.8f"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "98390cf27b0ce41447e0a104a8963b2cfdc20795", "fixCommitParentSHA1": "9be601a6b3dc046ea61e6bd8e5da6bdcf556f4e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/BooleanArray.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/BooleanArray.java b/gdx/src/com/badlogic/gdx/utils/BooleanArray.java\nindex 06fdadf..6e6837d 100644\n--- a/gdx/src/com/badlogic/gdx/utils/BooleanArray.java\n+++ b/gdx/src/com/badlogic/gdx/utils/BooleanArray.java\n@@ -99,7 +99,7 @@\n \r\n \tpublic void add (boolean value1, boolean value2, boolean value3, boolean value4) {\r\n \t\tboolean[] items = this.items;\r\n-\t\tif (size + 3 >= items.length) items = resize(Math.max(8, (int)(size * 1.75f)));\r\n+\t\tif (size + 3 >= items.length) items = resize(Math.max(8, (int)(size * 1.8f))); // 1.75 isn't enough when size=5.\r\n \t\titems[size] = value1;\r\n \t\titems[size + 1] = value2;\r\n \t\titems[size + 2] = value3;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 102, "bugNodeStartChar": 4299, "bugNodeLength": 12, "fixLineNum": 102, "fixNodeStartChar": 4198, "fixNodeLength": 11, "sourceBeforeFix": "size * 1.75f", "sourceAfterFix": "size * 1.8f"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "98390cf27b0ce41447e0a104a8963b2cfdc20795", "fixCommitParentSHA1": "9be601a6b3dc046ea61e6bd8e5da6bdcf556f4e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ByteArray.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ByteArray.java b/gdx/src/com/badlogic/gdx/utils/ByteArray.java\nindex a65bf86..9f5848e 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ByteArray.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ByteArray.java\n@@ -97,7 +97,7 @@\n \n \tpublic void add (byte value1, byte value2, byte value3, byte value4) {\n \t\tbyte[] items = this.items;\n-\t\tif (size + 3 >= items.length) items = resize(Math.max(8, (int)(size * 1.75f)));\n+\t\tif (size + 3 >= items.length) items = resize(Math.max(8, (int)(size * 1.8f))); // 1.75 isn't enough when size=5.\n \t\titems[size] = value1;\n \t\titems[size + 1] = value2;\n \t\titems[size + 2] = value3;\n", "projectName": "libgdx.libgdx", "bugLineNum": 100, "bugNodeStartChar": 3891, "bugNodeLength": 12, "fixLineNum": 100, "fixNodeStartChar": 3891, "fixNodeLength": 11, "sourceBeforeFix": "size * 1.75f", "sourceAfterFix": "size * 1.8f"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "98390cf27b0ce41447e0a104a8963b2cfdc20795", "fixCommitParentSHA1": "9be601a6b3dc046ea61e6bd8e5da6bdcf556f4e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/CharArray.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/CharArray.java b/gdx/src/com/badlogic/gdx/utils/CharArray.java\nindex 1571e19..6c6c793 100644\n--- a/gdx/src/com/badlogic/gdx/utils/CharArray.java\n+++ b/gdx/src/com/badlogic/gdx/utils/CharArray.java\n@@ -97,7 +97,7 @@\n \r\n \tpublic void add (char value1, char value2, char value3, char value4) {\r\n \t\tchar[] items = this.items;\r\n-\t\tif (size + 3 >= items.length) items = resize(Math.max(8, (int)(size * 1.75f)));\r\n+\t\tif (size + 3 >= items.length) items = resize(Math.max(8, (int)(size * 1.8f))); // 1.75 isn't enough when size=5.\r\n \t\titems[size] = value1;\r\n \t\titems[size + 1] = value2;\r\n \t\titems[size + 2] = value3;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 100, "bugNodeStartChar": 3995, "bugNodeLength": 12, "fixLineNum": 100, "fixNodeStartChar": 3896, "fixNodeLength": 11, "sourceBeforeFix": "size * 1.75f", "sourceAfterFix": "size * 1.8f"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "98390cf27b0ce41447e0a104a8963b2cfdc20795", "fixCommitParentSHA1": "9be601a6b3dc046ea61e6bd8e5da6bdcf556f4e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/FloatArray.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/FloatArray.java b/gdx/src/com/badlogic/gdx/utils/FloatArray.java\nindex 259d7b4..267616d 100644\n--- a/gdx/src/com/badlogic/gdx/utils/FloatArray.java\n+++ b/gdx/src/com/badlogic/gdx/utils/FloatArray.java\n@@ -97,7 +97,7 @@\n \r\n \tpublic void add (float value1, float value2, float value3, float value4) {\r\n \t\tfloat[] items = this.items;\r\n-\t\tif (size + 3 >= items.length) items = resize(Math.max(8, (int)(size * 1.75f)));\r\n+\t\tif (size + 3 >= items.length) items = resize(Math.max(8, (int)(size * 1.8f))); // 1.75 isn't enough when size=5.\r\n \t\titems[size] = value1;\r\n \t\titems[size + 1] = value2;\r\n \t\titems[size + 2] = value3;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 100, "bugNodeStartChar": 4019, "bugNodeLength": 12, "fixLineNum": 100, "fixNodeStartChar": 3920, "fixNodeLength": 11, "sourceBeforeFix": "size * 1.75f", "sourceAfterFix": "size * 1.8f"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "98390cf27b0ce41447e0a104a8963b2cfdc20795", "fixCommitParentSHA1": "9be601a6b3dc046ea61e6bd8e5da6bdcf556f4e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/IntArray.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/IntArray.java b/gdx/src/com/badlogic/gdx/utils/IntArray.java\nindex 55e05b5..ed5cec0 100644\n--- a/gdx/src/com/badlogic/gdx/utils/IntArray.java\n+++ b/gdx/src/com/badlogic/gdx/utils/IntArray.java\n@@ -97,7 +97,7 @@\n \r\n \tpublic void add (int value1, int value2, int value3, int value4) {\r\n \t\tint[] items = this.items;\r\n-\t\tif (size + 3 >= items.length) items = resize(Math.max(8, (int)(size * 1.75f)));\r\n+\t\tif (size + 3 >= items.length) items = resize(Math.max(8, (int)(size * 1.8f))); // 1.75 isn't enough when size=5.\r\n \t\titems[size] = value1;\r\n \t\titems[size + 1] = value2;\r\n \t\titems[size + 2] = value3;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 100, "bugNodeStartChar": 3965, "bugNodeLength": 12, "fixLineNum": 100, "fixNodeStartChar": 3866, "fixNodeLength": 11, "sourceBeforeFix": "size * 1.75f", "sourceAfterFix": "size * 1.8f"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "98390cf27b0ce41447e0a104a8963b2cfdc20795", "fixCommitParentSHA1": "9be601a6b3dc046ea61e6bd8e5da6bdcf556f4e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/LongArray.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/LongArray.java b/gdx/src/com/badlogic/gdx/utils/LongArray.java\nindex 9ab512c..36e817f 100644\n--- a/gdx/src/com/badlogic/gdx/utils/LongArray.java\n+++ b/gdx/src/com/badlogic/gdx/utils/LongArray.java\n@@ -97,7 +97,7 @@\n \r\n \tpublic void add (long value1, long value2, long value3, long value4) {\r\n \t\tlong[] items = this.items;\r\n-\t\tif (size + 3 >= items.length) items = resize(Math.max(8, (int)(size * 1.75f)));\r\n+\t\tif (size + 3 >= items.length) items = resize(Math.max(8, (int)(size * 1.8f))); // 1.75 isn't enough when size=5.\r\n \t\titems[size] = value1;\r\n \t\titems[size + 1] = value2;\r\n \t\titems[size + 2] = value3;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 100, "bugNodeStartChar": 3990, "bugNodeLength": 12, "fixLineNum": 100, "fixNodeStartChar": 3891, "fixNodeLength": 11, "sourceBeforeFix": "size * 1.75f", "sourceAfterFix": "size * 1.8f"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "98390cf27b0ce41447e0a104a8963b2cfdc20795", "fixCommitParentSHA1": "9be601a6b3dc046ea61e6bd8e5da6bdcf556f4e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ShortArray.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ShortArray.java b/gdx/src/com/badlogic/gdx/utils/ShortArray.java\nindex 7af6756..b152ad3 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ShortArray.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ShortArray.java\n@@ -104,7 +104,7 @@\n \r\n \tpublic void add (short value1, short value2, short value3, short value4) {\r\n \t\tshort[] items = this.items;\r\n-\t\tif (size + 3 >= items.length) items = resize(Math.max(8, (int)(size * 1.75f)));\r\n+\t\tif (size + 3 >= items.length) items = resize(Math.max(8, (int)(size * 1.8f))); // 1.75 isn't enough when size=5.\r\n \t\titems[size] = value1;\r\n \t\titems[size + 1] = value2;\r\n \t\titems[size + 2] = value3;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 107, "bugNodeStartChar": 4257, "bugNodeLength": 12, "fixLineNum": 107, "fixNodeStartChar": 4151, "fixNodeLength": 11, "sourceBeforeFix": "size * 1.75f", "sourceAfterFix": "size * 1.8f"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "32d470c4e3edba4b399ae18bdcb9e09592e3cc14", "fixCommitParentSHA1": "f20b1443115bcc88cb41cd13abe0432a7ab5f782", "bugFilePath": "extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreetypeBuild.java", "fixPatch": "diff --git a/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreetypeBuild.java b/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreetypeBuild.java\nindex d4208e2..fc22998 100644\n--- a/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreetypeBuild.java\n+++ b/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreetypeBuild.java\n@@ -127,7 +127,7 @@\n \t\tios.cFlags += \" -DFT2_BUILD_LIBRARY\";\r\n \t\tios.cppFlags += \" -DFT2_BUILD_LIBRARY\";\r\n \r\n-\t\tnew NativeCodeGenerator().generate();\r\n+\t\tnew NativeCodeGenerator().generate(\"src\", \"bin:../../gdx/bin\", \"jni\");\r\n \t\tnew AntScriptGenerator()\r\n \t\t\t.generate(new BuildConfig(\"gdx-freetype\"), win32home, win32, win64, lin32, lin64, mac, mac64, android, ios);\r\n // BuildExecutor.executeAnt(\"jni/build-windows32home.xml\", \"-v clean\");\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 130, "bugNodeStartChar": 5590, "bugNodeLength": 36, "fixLineNum": 130, "fixNodeStartChar": 5461, "fixNodeLength": 69, "sourceBeforeFix": "new NativeCodeGenerator().generate()", "sourceAfterFix": "new NativeCodeGenerator().generate(\"src\",\"bin:../../gdx/bin\",\"jni\")"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "11fc33161f47544de5d2c50444340438f09a5b82", "fixCommitParentSHA1": "ebcaa4053325364c0f9f57b129dd46cc2cdaceb1", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/XmlReader.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/XmlReader.java b/gdx/src/com/badlogic/gdx/utils/XmlReader.java\nindex 211f59d..afc8155 100644\n--- a/gdx/src/com/badlogic/gdx/utils/XmlReader.java\n+++ b/gdx/src/com/badlogic/gdx/utils/XmlReader.java\n@@ -587,7 +587,7 @@\n \t\t}\r\n \r\n \t\tpublic boolean hasChild (String name) {\r\n-\t\t\tif (attributes == null) return false;\r\n+\t\t\tif (children == null) return false;\r\n \t\t\treturn getChildByName(name) != null;\r\n \t\t}\r\n \r\n@@ -605,7 +605,7 @@\n \t\t}\r\n \r\n \t\tpublic boolean hasChildRecursive (String name) {\r\n-\t\t\tif (attributes == null) return false;\r\n+\t\t\tif (children == null) return false;\r\n \t\t\treturn getChildByNameRecursive(name) != null;\r\n \t\t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 590, "bugNodeStartChar": 17884, "bugNodeLength": 18, "fixLineNum": 590, "fixNodeStartChar": 17295, "fixNodeLength": 16, "sourceBeforeFix": "attributes == null", "sourceAfterFix": "children == null"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "11fc33161f47544de5d2c50444340438f09a5b82", "fixCommitParentSHA1": "ebcaa4053325364c0f9f57b129dd46cc2cdaceb1", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/XmlReader.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/XmlReader.java b/gdx/src/com/badlogic/gdx/utils/XmlReader.java\nindex 211f59d..afc8155 100644\n--- a/gdx/src/com/badlogic/gdx/utils/XmlReader.java\n+++ b/gdx/src/com/badlogic/gdx/utils/XmlReader.java\n@@ -587,7 +587,7 @@\n \t\t}\r\n \r\n \t\tpublic boolean hasChild (String name) {\r\n-\t\t\tif (attributes == null) return false;\r\n+\t\t\tif (children == null) return false;\r\n \t\t\treturn getChildByName(name) != null;\r\n \t\t}\r\n \r\n@@ -605,7 +605,7 @@\n \t\t}\r\n \r\n \t\tpublic boolean hasChildRecursive (String name) {\r\n-\t\t\tif (attributes == null) return false;\r\n+\t\t\tif (children == null) return false;\r\n \t\t\treturn getChildByNameRecursive(name) != null;\r\n \t\t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 590, "bugNodeStartChar": 17884, "bugNodeLength": 18, "fixLineNum": 590, "fixNodeStartChar": 17295, "fixNodeLength": 16, "sourceBeforeFix": "attributes == null", "sourceAfterFix": "children == null"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "11fc33161f47544de5d2c50444340438f09a5b82", "fixCommitParentSHA1": "ebcaa4053325364c0f9f57b129dd46cc2cdaceb1", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/XmlReader.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/XmlReader.java b/gdx/src/com/badlogic/gdx/utils/XmlReader.java\nindex 211f59d..afc8155 100644\n--- a/gdx/src/com/badlogic/gdx/utils/XmlReader.java\n+++ b/gdx/src/com/badlogic/gdx/utils/XmlReader.java\n@@ -587,7 +587,7 @@\n \t\t}\r\n \r\n \t\tpublic boolean hasChild (String name) {\r\n-\t\t\tif (attributes == null) return false;\r\n+\t\t\tif (children == null) return false;\r\n \t\t\treturn getChildByName(name) != null;\r\n \t\t}\r\n \r\n@@ -605,7 +605,7 @@\n \t\t}\r\n \r\n \t\tpublic boolean hasChildRecursive (String name) {\r\n-\t\t\tif (attributes == null) return false;\r\n+\t\t\tif (children == null) return false;\r\n \t\t\treturn getChildByNameRecursive(name) != null;\r\n \t\t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 608, "bugNodeStartChar": 18519, "bugNodeLength": 18, "fixLineNum": 608, "fixNodeStartChar": 17912, "fixNodeLength": 16, "sourceBeforeFix": "attributes == null", "sourceAfterFix": "children == null"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "11fc33161f47544de5d2c50444340438f09a5b82", "fixCommitParentSHA1": "ebcaa4053325364c0f9f57b129dd46cc2cdaceb1", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/XmlReader.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/XmlReader.java b/gdx/src/com/badlogic/gdx/utils/XmlReader.java\nindex 211f59d..afc8155 100644\n--- a/gdx/src/com/badlogic/gdx/utils/XmlReader.java\n+++ b/gdx/src/com/badlogic/gdx/utils/XmlReader.java\n@@ -587,7 +587,7 @@\n \t\t}\r\n \r\n \t\tpublic boolean hasChild (String name) {\r\n-\t\t\tif (attributes == null) return false;\r\n+\t\t\tif (children == null) return false;\r\n \t\t\treturn getChildByName(name) != null;\r\n \t\t}\r\n \r\n@@ -605,7 +605,7 @@\n \t\t}\r\n \r\n \t\tpublic boolean hasChildRecursive (String name) {\r\n-\t\t\tif (attributes == null) return false;\r\n+\t\t\tif (children == null) return false;\r\n \t\t\treturn getChildByNameRecursive(name) != null;\r\n \t\t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 608, "bugNodeStartChar": 18519, "bugNodeLength": 18, "fixLineNum": 608, "fixNodeStartChar": 17912, "fixNodeLength": 16, "sourceBeforeFix": "attributes == null", "sourceAfterFix": "children == null"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "996cadb3e79b248d2f2b3e584a1ea9e9f77fc1c2", "fixCommitParentSHA1": "34fdc2a3d329587123ed00be6fafdbc1ba6cc852", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java\nindex c78e84c..f4ec715 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java\n@@ -320,7 +320,7 @@\n \t}\n \n \tpublic float getPrefWidth () {\n-\t\treturn Math.max(super.getPrefWidth(), titleLabel.getPrefWidth() + getPadLeft() + getPadRight());\n+\t\treturn Math.max(super.getPrefWidth(), titleTable.getPrefWidth() + getPadLeft() + getPadRight());\n \t}\n \n \tpublic Table getTitleTable () {\n", "projectName": "libgdx.libgdx", "bugLineNum": 323, "bugNodeStartChar": 11631, "bugNodeLength": 25, "fixLineNum": 323, "fixNodeStartChar": 11631, "fixNodeLength": 25, "sourceBeforeFix": "titleLabel.getPrefWidth()", "sourceAfterFix": "titleTable.getPrefWidth()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "996cadb3e79b248d2f2b3e584a1ea9e9f77fc1c2", "fixCommitParentSHA1": "34fdc2a3d329587123ed00be6fafdbc1ba6cc852", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java\nindex c78e84c..f4ec715 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java\n@@ -320,7 +320,7 @@\n \t}\n \n \tpublic float getPrefWidth () {\n-\t\treturn Math.max(super.getPrefWidth(), titleLabel.getPrefWidth() + getPadLeft() + getPadRight());\n+\t\treturn Math.max(super.getPrefWidth(), titleTable.getPrefWidth() + getPadLeft() + getPadRight());\n \t}\n \n \tpublic Table getTitleTable () {\n", "projectName": "libgdx.libgdx", "bugLineNum": 323, "bugNodeStartChar": 11631, "bugNodeLength": 25, "fixLineNum": 323, "fixNodeStartChar": 11631, "fixNodeLength": 25, "sourceBeforeFix": "titleLabel.getPrefWidth()", "sourceAfterFix": "titleTable.getPrefWidth()"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "cef498f67beedbe7eb7cf4e921c0b22f9d096fd4", "fixCommitParentSHA1": "d9133be383e6069b11d3cdf2308a765fc64064ed", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java\nindex 337971e..5b898e8 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java\n@@ -72,7 +72,7 @@\n \t/** The size (in number of floats) of each vertex */\r\n \tprivate int stride;\r\n \t/** The current vertex index, used for indexing */\r\n-\tprivate short vindex;\r\n+\tprivate int vindex;\r\n \t/** The offset in the indices array when begin() was called, used to define a meshpart. */\r\n \tprivate int istart;\r\n \t/** The offset within an vertex to position */\r\n@@ -536,7 +536,7 @@\n \r\n \t@Override\r\n \tpublic short vertex (Vector3 pos, Vector3 nor, Color col, Vector2 uv) {\r\n-\t\tif (vindex >= Short.MAX_VALUE) throw new GdxRuntimeException(\"Too many vertices used\");\r\n+\t\tif (vindex > Short.MAX_VALUE) throw new GdxRuntimeException(\"Too many vertices used\");\r\n \r\n \t\tvertex[posOffset] = pos.x;\r\n \t\tif (posSize > 1) vertex[posOffset + 1] = pos.y;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 539, "bugNodeStartChar": 21746, "bugNodeLength": 25, "fixLineNum": 539, "fixNodeStartChar": 21208, "fixNodeLength": 24, "sourceBeforeFix": "vindex >= Short.MAX_VALUE", "sourceAfterFix": "vindex > Short.MAX_VALUE"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "b6b9cd997b689c70f194da8517910d3bb2d8e843", "fixCommitParentSHA1": "adb26f3b776fca66db14d94e4a67d2ff6d9382fd", "bugFilePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java", "fixPatch": "diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java\nindex 92add30..aa1fc4d 100644\n--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java\n+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java\n@@ -610,7 +610,7 @@\n \t\t\t\tswitch (event.phase) {\n \t\t\t\tcase Began:\n \t\t\t\t\tif (inputProcessor != null) inputProcessor.touchDown(event.x, event.y, event.pointer, Buttons.LEFT);\n-\t\t\t\t\tif (numTouched == 1) justTouched = true;\n+\t\t\t\t\tif (numTouched >= 1) justTouched = true;\n \t\t\t\t\tbreak;\n \t\t\t\tcase Cancelled:\n \t\t\t\tcase Ended:\n", "projectName": "libgdx.libgdx", "bugLineNum": 613, "bugNodeStartChar": 17412, "bugNodeLength": 15, "fixLineNum": 613, "fixNodeStartChar": 17412, "fixNodeLength": 15, "sourceBeforeFix": "numTouched == 1", "sourceAfterFix": "numTouched >= 1"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "ac0a527f7df275e047a4d6440ddc1cb0a1e4912c", "fixCommitParentSHA1": "abc9af18a62221b4c21fec91e464142254735fe6", "bugFilePath": "gdx/src/com/badlogic/gdx/math/collision/BoundingBox.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/collision/BoundingBox.java b/gdx/src/com/badlogic/gdx/math/collision/BoundingBox.java\nindex 3b33cba..3943f84 100644\n--- a/gdx/src/com/badlogic/gdx/math/collision/BoundingBox.java\n+++ b/gdx/src/com/badlogic/gdx/math/collision/BoundingBox.java\n@@ -207,10 +207,10 @@\n \t\treturn this.set(min.set(0, 0, 0), max.set(0, 0, 0));\r\n \t}\r\n \r\n-\t/** Returns whether this bounding box is valid. This means that {@link #max} is greater than {@link #min}.\r\n+\t/** Returns whether this bounding box is valid. This means that {@link #max} is greater than or equal to {@link #min}.\r\n \t * @return True in case the bounding box is valid, false otherwise */\r\n \tpublic boolean isValid () {\r\n-\t\treturn min.x < max.x && min.y < max.y && min.z < max.z;\r\n+\t\treturn min.x <= max.x && min.y <= max.y && min.z <= max.z;\r\n \t}\r\n \r\n \t/** Extends this bounding box by the given bounding box.\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 213, "bugNodeStartChar": 6759, "bugNodeLength": 13, "fixLineNum": 213, "fixNodeStartChar": 6547, "fixNodeLength": 14, "sourceBeforeFix": "min.x < max.x", "sourceAfterFix": "min.x <= max.x"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "8c4de8abcd7ae84928b6290a51b4e680b9ee9ae2", "fixCommitParentSHA1": "2e760823c4dad4ea5d5a1ff559b46d2d63322ba0", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g2d/PolygonSpriteBatch.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/PolygonSpriteBatch.java b/gdx/src/com/badlogic/gdx/graphics/g2d/PolygonSpriteBatch.java\nindex 3d2a0f2..0584975 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g2d/PolygonSpriteBatch.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/PolygonSpriteBatch.java\n@@ -123,7 +123,7 @@\n \tpublic PolygonSpriteBatch (int maxVertices, int maxTriangles, ShaderProgram defaultShader) {\r\n \t\t// 32767 is max vertex index.\r\n \t\tif (maxVertices > 32767)\r\n-\t\t\tthrow new IllegalArgumentException(\"Can't have more than 32767 vertices per batch: \" + maxTriangles);\r\n+\t\t\tthrow new IllegalArgumentException(\"Can't have more than 32767 vertices per batch: \" + maxVertices);\r\n \r\n \t\tMesh.VertexDataType vertexDataType = Mesh.VertexDataType.VertexArray;\r\n \t\tif (Gdx.gl30 != null) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 126, "bugNodeStartChar": 6329, "bugNodeLength": 64, "fixLineNum": 126, "fixNodeStartChar": 6204, "fixNodeLength": 63, "sourceBeforeFix": "\"Can't have more than 32767 vertices per batch: \" + maxTriangles", "sourceAfterFix": "\"Can't have more than 32767 vertices per batch: \" + maxVertices"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "8c4de8abcd7ae84928b6290a51b4e680b9ee9ae2", "fixCommitParentSHA1": "2e760823c4dad4ea5d5a1ff559b46d2d63322ba0", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g2d/PolygonSpriteBatch.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/PolygonSpriteBatch.java b/gdx/src/com/badlogic/gdx/graphics/g2d/PolygonSpriteBatch.java\nindex 3d2a0f2..0584975 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g2d/PolygonSpriteBatch.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/PolygonSpriteBatch.java\n@@ -123,7 +123,7 @@\n \tpublic PolygonSpriteBatch (int maxVertices, int maxTriangles, ShaderProgram defaultShader) {\r\n \t\t// 32767 is max vertex index.\r\n \t\tif (maxVertices > 32767)\r\n-\t\t\tthrow new IllegalArgumentException(\"Can't have more than 32767 vertices per batch: \" + maxTriangles);\r\n+\t\t\tthrow new IllegalArgumentException(\"Can't have more than 32767 vertices per batch: \" + maxVertices);\r\n \r\n \t\tMesh.VertexDataType vertexDataType = Mesh.VertexDataType.VertexArray;\r\n \t\tif (Gdx.gl30 != null) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 126, "bugNodeStartChar": 6329, "bugNodeLength": 64, "fixLineNum": 126, "fixNodeStartChar": 6204, "fixNodeLength": 63, "sourceBeforeFix": "\"Can't have more than 32767 vertices per batch: \" + maxTriangles", "sourceAfterFix": "\"Can't have more than 32767 vertices per batch: \" + maxVertices"}, {"bugType": "SWAP_BOOLEAN_LITERAL", "fixCommitSHA1": "d18d75cdfc36f74fed0c8df772835f38d9604b13", "fixCommitParentSHA1": "e90d601ffa06233e2b2bcfe532e380fb1a4e9eb2", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g3d/ModelInstance.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/ModelInstance.java b/gdx/src/com/badlogic/gdx/graphics/g3d/ModelInstance.java\nindex ef16a9c..d166dc0 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g3d/ModelInstance.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/ModelInstance.java\n@@ -406,7 +406,7 @@\n \t/** @param id The ID of the animation to fetch (case sensitive).\r\n \t * @return The {@link Animation} with the specified id, or null if not available. */\r\n \tpublic Animation getAnimation (final String id) {\r\n-\t\treturn getAnimation(id, true);\r\n+\t\treturn getAnimation(id, false);\r\n \t}\r\n \r\n \t/** @param id The ID of the animation to fetch.\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 409, "bugNodeStartChar": 19106, "bugNodeLength": 22, "fixLineNum": 409, "fixNodeStartChar": 18698, "fixNodeLength": 23, "sourceBeforeFix": "getAnimation(id,true)", "sourceAfterFix": "getAnimation(id,false)"}, {"bugType": "SWAP_BOOLEAN_LITERAL", "fixCommitSHA1": "de994d857881dbfd727485b898152ed5422eb684", "fixCommitParentSHA1": "59900f36f2adf5f07e6c7cc351c778c6ae3630e0", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java\nindex e0068c4..16098a1 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java\n@@ -314,7 +314,7 @@\n \r\n \t/** Disables scrolling of the list shown when the select box is open. */\r\n \tpublic void setScrollingDisabled (boolean y) {\r\n-\t\tselectBoxList.setScrollingDisabled(false, y);\r\n+\t\tselectBoxList.setScrollingDisabled(true, y);\r\n \t\tinvalidateHierarchy();\r\n \t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 317, "bugNodeStartChar": 11186, "bugNodeLength": 44, "fixLineNum": 317, "fixNodeStartChar": 10870, "fixNodeLength": 43, "sourceBeforeFix": "selectBoxList.setScrollingDisabled(false,y)", "sourceAfterFix": "selectBoxList.setScrollingDisabled(true,y)"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "f3ab698aab76ed690b1255a704d57d5cafb97e78", "fixCommitParentSHA1": "9b2cfa49cb6d7bcaa962acb726c6a27523961be0", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java\nindex ccbbad0..ded7eb5 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java\n@@ -661,7 +661,7 @@\n \t\t\t\tevent.setRelatedActor(oldScrollFocus);\n \t\t\t\tactor.fire(event);\n \t\t\t\tsuccess = !event.isCancelled();\n-\t\t\t\tif (success) setScrollFocus(oldScrollFocus);\n+\t\t\t\tif (!success) setScrollFocus(oldScrollFocus);\n \t\t\t}\n \t\t}\n \t\tPools.free(event);\n", "projectName": "libgdx.libgdx", "bugLineNum": 664, "bugNodeStartChar": 25352, "bugNodeLength": 7, "fixLineNum": 664, "fixNodeStartChar": 25352, "fixNodeLength": 8, "sourceBeforeFix": "success", "sourceAfterFix": "!success"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "d251856fc9062d7abcdb5b4e48e7385d8e978b9b", "fixCommitParentSHA1": "2ca14f07afe47bdbd1050db440b2d29fd84f506f", "bugFilePath": "backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java", "fixPatch": "diff --git a/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java b/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java\nindex ffb0def..e065313 100755\n--- a/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java\n+++ b/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java\n@@ -52,7 +52,7 @@\n \r\n \t@Override\r\n \tpublic Preferences putLong (String key, long val) {\r\n-\t\tnsDictionary.put(convertKey(key), NSNumber.numberWithLong(val));\r\n+\t\tnsDictionary.put(convertKey(key), NSNumber.numberWithLongLong(val));\r\n \t\treturn this;\r\n \t}\r\n \r\n@@ -106,7 +106,7 @@\n \tpublic long getLong (String key) {\r\n \t\tNSNumber value = (NSNumber)nsDictionary.get(convertKey(key));\r\n \t\tif (value == null) return 0L;\r\n-\t\treturn value.longValue();\r\n+\t\treturn value.longLongValue();\r\n \t}\r\n \r\n \t@Override\r\n@@ -118,7 +118,8 @@\n \r\n \t@Override\r\n \tpublic String getString (String key) {\r\n-\t\tNSString value = (NSString)nsDictionary.get(convertKey(key));\r\n+\t\t//Implicit mapping from NSString to String apparently?\r\n+\t\tObject value = nsDictionary.get(convertKey(key));\r\n \t\tif (value == null) return \"\";\r\n \t\treturn value.toString();\r\n \t}\r\n@@ -179,7 +180,7 @@\n \t}\r\n \r\n \tprivate NSString convertKey (String key) {\r\n-\t\treturn NSString.stringWithString(key);\r\n+\t\treturn NSString.alloc().initWithString(key);\r\n \t}\r\n \r\n \t@Override\r\n@@ -188,6 +189,6 @@\n \t\tif (!nsDictionary.writeToFileAtomically(file.getAbsolutePath(), false)) {\r\n \t\t\tGdx.app.debug(\"IOSPreferences\", \"Failed to write NSDictionary to file \" + file);\r\n \t\t}\r\n-\t\tpool.dealloc();\r\n+\t\tpool.drain();\r\n \t}\r\n }\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 55, "bugNodeStartChar": 1879, "bugNodeLength": 28, "fixLineNum": 55, "fixNodeStartChar": 1825, "fixNodeLength": 32, "sourceBeforeFix": "NSNumber.numberWithLong(val)", "sourceAfterFix": "NSNumber.numberWithLongLong(val)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d251856fc9062d7abcdb5b4e48e7385d8e978b9b", "fixCommitParentSHA1": "2ca14f07afe47bdbd1050db440b2d29fd84f506f", "bugFilePath": "backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java", "fixPatch": "diff --git a/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java b/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java\nindex ffb0def..e065313 100755\n--- a/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java\n+++ b/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java\n@@ -52,7 +52,7 @@\n \r\n \t@Override\r\n \tpublic Preferences putLong (String key, long val) {\r\n-\t\tnsDictionary.put(convertKey(key), NSNumber.numberWithLong(val));\r\n+\t\tnsDictionary.put(convertKey(key), NSNumber.numberWithLongLong(val));\r\n \t\treturn this;\r\n \t}\r\n \r\n@@ -106,7 +106,7 @@\n \tpublic long getLong (String key) {\r\n \t\tNSNumber value = (NSNumber)nsDictionary.get(convertKey(key));\r\n \t\tif (value == null) return 0L;\r\n-\t\treturn value.longValue();\r\n+\t\treturn value.longLongValue();\r\n \t}\r\n \r\n \t@Override\r\n@@ -118,7 +118,8 @@\n \r\n \t@Override\r\n \tpublic String getString (String key) {\r\n-\t\tNSString value = (NSString)nsDictionary.get(convertKey(key));\r\n+\t\t//Implicit mapping from NSString to String apparently?\r\n+\t\tObject value = nsDictionary.get(convertKey(key));\r\n \t\tif (value == null) return \"\";\r\n \t\treturn value.toString();\r\n \t}\r\n@@ -179,7 +180,7 @@\n \t}\r\n \r\n \tprivate NSString convertKey (String key) {\r\n-\t\treturn NSString.stringWithString(key);\r\n+\t\treturn NSString.alloc().initWithString(key);\r\n \t}\r\n \r\n \t@Override\r\n@@ -188,6 +189,6 @@\n \t\tif (!nsDictionary.writeToFileAtomically(file.getAbsolutePath(), false)) {\r\n \t\t\tGdx.app.debug(\"IOSPreferences\", \"Failed to write NSDictionary to file \" + file);\r\n \t\t}\r\n-\t\tpool.dealloc();\r\n+\t\tpool.drain();\r\n \t}\r\n }\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 55, "bugNodeStartChar": 1879, "bugNodeLength": 28, "fixLineNum": 55, "fixNodeStartChar": 1825, "fixNodeLength": 32, "sourceBeforeFix": "NSNumber.numberWithLong(val)", "sourceAfterFix": "NSNumber.numberWithLongLong(val)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "d251856fc9062d7abcdb5b4e48e7385d8e978b9b", "fixCommitParentSHA1": "2ca14f07afe47bdbd1050db440b2d29fd84f506f", "bugFilePath": "backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java", "fixPatch": "diff --git a/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java b/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java\nindex ffb0def..e065313 100755\n--- a/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java\n+++ b/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java\n@@ -52,7 +52,7 @@\n \r\n \t@Override\r\n \tpublic Preferences putLong (String key, long val) {\r\n-\t\tnsDictionary.put(convertKey(key), NSNumber.numberWithLong(val));\r\n+\t\tnsDictionary.put(convertKey(key), NSNumber.numberWithLongLong(val));\r\n \t\treturn this;\r\n \t}\r\n \r\n@@ -106,7 +106,7 @@\n \tpublic long getLong (String key) {\r\n \t\tNSNumber value = (NSNumber)nsDictionary.get(convertKey(key));\r\n \t\tif (value == null) return 0L;\r\n-\t\treturn value.longValue();\r\n+\t\treturn value.longLongValue();\r\n \t}\r\n \r\n \t@Override\r\n@@ -118,7 +118,8 @@\n \r\n \t@Override\r\n \tpublic String getString (String key) {\r\n-\t\tNSString value = (NSString)nsDictionary.get(convertKey(key));\r\n+\t\t//Implicit mapping from NSString to String apparently?\r\n+\t\tObject value = nsDictionary.get(convertKey(key));\r\n \t\tif (value == null) return \"\";\r\n \t\treturn value.toString();\r\n \t}\r\n@@ -179,7 +180,7 @@\n \t}\r\n \r\n \tprivate NSString convertKey (String key) {\r\n-\t\treturn NSString.stringWithString(key);\r\n+\t\treturn NSString.alloc().initWithString(key);\r\n \t}\r\n \r\n \t@Override\r\n@@ -188,6 +189,6 @@\n \t\tif (!nsDictionary.writeToFileAtomically(file.getAbsolutePath(), false)) {\r\n \t\t\tGdx.app.debug(\"IOSPreferences\", \"Failed to write NSDictionary to file \" + file);\r\n \t\t}\r\n-\t\tpool.dealloc();\r\n+\t\tpool.drain();\r\n \t}\r\n }\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 109, "bugNodeStartChar": 3361, "bugNodeLength": 17, "fixLineNum": 109, "fixNodeStartChar": 3253, "fixNodeLength": 21, "sourceBeforeFix": "value.longValue()", "sourceAfterFix": "value.longLongValue()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d251856fc9062d7abcdb5b4e48e7385d8e978b9b", "fixCommitParentSHA1": "2ca14f07afe47bdbd1050db440b2d29fd84f506f", "bugFilePath": "backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java", "fixPatch": "diff --git a/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java b/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java\nindex ffb0def..e065313 100755\n--- a/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java\n+++ b/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java\n@@ -52,7 +52,7 @@\n \r\n \t@Override\r\n \tpublic Preferences putLong (String key, long val) {\r\n-\t\tnsDictionary.put(convertKey(key), NSNumber.numberWithLong(val));\r\n+\t\tnsDictionary.put(convertKey(key), NSNumber.numberWithLongLong(val));\r\n \t\treturn this;\r\n \t}\r\n \r\n@@ -106,7 +106,7 @@\n \tpublic long getLong (String key) {\r\n \t\tNSNumber value = (NSNumber)nsDictionary.get(convertKey(key));\r\n \t\tif (value == null) return 0L;\r\n-\t\treturn value.longValue();\r\n+\t\treturn value.longLongValue();\r\n \t}\r\n \r\n \t@Override\r\n@@ -118,7 +118,8 @@\n \r\n \t@Override\r\n \tpublic String getString (String key) {\r\n-\t\tNSString value = (NSString)nsDictionary.get(convertKey(key));\r\n+\t\t//Implicit mapping from NSString to String apparently?\r\n+\t\tObject value = nsDictionary.get(convertKey(key));\r\n \t\tif (value == null) return \"\";\r\n \t\treturn value.toString();\r\n \t}\r\n@@ -179,7 +180,7 @@\n \t}\r\n \r\n \tprivate NSString convertKey (String key) {\r\n-\t\treturn NSString.stringWithString(key);\r\n+\t\treturn NSString.alloc().initWithString(key);\r\n \t}\r\n \r\n \t@Override\r\n@@ -188,6 +189,6 @@\n \t\tif (!nsDictionary.writeToFileAtomically(file.getAbsolutePath(), false)) {\r\n \t\t\tGdx.app.debug(\"IOSPreferences\", \"Failed to write NSDictionary to file \" + file);\r\n \t\t}\r\n-\t\tpool.dealloc();\r\n+\t\tpool.drain();\r\n \t}\r\n }\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 109, "bugNodeStartChar": 3361, "bugNodeLength": 17, "fixLineNum": 109, "fixNodeStartChar": 3253, "fixNodeLength": 21, "sourceBeforeFix": "value.longValue()", "sourceAfterFix": "value.longLongValue()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d251856fc9062d7abcdb5b4e48e7385d8e978b9b", "fixCommitParentSHA1": "2ca14f07afe47bdbd1050db440b2d29fd84f506f", "bugFilePath": "backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java", "fixPatch": "diff --git a/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java b/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java\nindex ffb0def..e065313 100755\n--- a/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java\n+++ b/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java\n@@ -52,7 +52,7 @@\n \r\n \t@Override\r\n \tpublic Preferences putLong (String key, long val) {\r\n-\t\tnsDictionary.put(convertKey(key), NSNumber.numberWithLong(val));\r\n+\t\tnsDictionary.put(convertKey(key), NSNumber.numberWithLongLong(val));\r\n \t\treturn this;\r\n \t}\r\n \r\n@@ -106,7 +106,7 @@\n \tpublic long getLong (String key) {\r\n \t\tNSNumber value = (NSNumber)nsDictionary.get(convertKey(key));\r\n \t\tif (value == null) return 0L;\r\n-\t\treturn value.longValue();\r\n+\t\treturn value.longLongValue();\r\n \t}\r\n \r\n \t@Override\r\n@@ -118,7 +118,8 @@\n \r\n \t@Override\r\n \tpublic String getString (String key) {\r\n-\t\tNSString value = (NSString)nsDictionary.get(convertKey(key));\r\n+\t\t//Implicit mapping from NSString to String apparently?\r\n+\t\tObject value = nsDictionary.get(convertKey(key));\r\n \t\tif (value == null) return \"\";\r\n \t\treturn value.toString();\r\n \t}\r\n@@ -179,7 +180,7 @@\n \t}\r\n \r\n \tprivate NSString convertKey (String key) {\r\n-\t\treturn NSString.stringWithString(key);\r\n+\t\treturn NSString.alloc().initWithString(key);\r\n \t}\r\n \r\n \t@Override\r\n@@ -188,6 +189,6 @@\n \t\tif (!nsDictionary.writeToFileAtomically(file.getAbsolutePath(), false)) {\r\n \t\t\tGdx.app.debug(\"IOSPreferences\", \"Failed to write NSDictionary to file \" + file);\r\n \t\t}\r\n-\t\tpool.dealloc();\r\n+\t\tpool.drain();\r\n \t}\r\n }\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 121, "bugNodeStartChar": 3627, "bugNodeLength": 61, "fixLineNum": 122, "fixNodeStartChar": 3564, "fixNodeLength": 49, "sourceBeforeFix": "NSString value=(NSString)nsDictionary.get(convertKey(key)); ", "sourceAfterFix": "Object value=nsDictionary.get(convertKey(key)); "}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "d251856fc9062d7abcdb5b4e48e7385d8e978b9b", "fixCommitParentSHA1": "2ca14f07afe47bdbd1050db440b2d29fd84f506f", "bugFilePath": "backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java", "fixPatch": "diff --git a/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java b/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java\nindex ffb0def..e065313 100755\n--- a/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java\n+++ b/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java\n@@ -52,7 +52,7 @@\n \r\n \t@Override\r\n \tpublic Preferences putLong (String key, long val) {\r\n-\t\tnsDictionary.put(convertKey(key), NSNumber.numberWithLong(val));\r\n+\t\tnsDictionary.put(convertKey(key), NSNumber.numberWithLongLong(val));\r\n \t\treturn this;\r\n \t}\r\n \r\n@@ -106,7 +106,7 @@\n \tpublic long getLong (String key) {\r\n \t\tNSNumber value = (NSNumber)nsDictionary.get(convertKey(key));\r\n \t\tif (value == null) return 0L;\r\n-\t\treturn value.longValue();\r\n+\t\treturn value.longLongValue();\r\n \t}\r\n \r\n \t@Override\r\n@@ -118,7 +118,8 @@\n \r\n \t@Override\r\n \tpublic String getString (String key) {\r\n-\t\tNSString value = (NSString)nsDictionary.get(convertKey(key));\r\n+\t\t//Implicit mapping from NSString to String apparently?\r\n+\t\tObject value = nsDictionary.get(convertKey(key));\r\n \t\tif (value == null) return \"\";\r\n \t\treturn value.toString();\r\n \t}\r\n@@ -179,7 +180,7 @@\n \t}\r\n \r\n \tprivate NSString convertKey (String key) {\r\n-\t\treturn NSString.stringWithString(key);\r\n+\t\treturn NSString.alloc().initWithString(key);\r\n \t}\r\n \r\n \t@Override\r\n@@ -188,6 +189,6 @@\n \t\tif (!nsDictionary.writeToFileAtomically(file.getAbsolutePath(), false)) {\r\n \t\t\tGdx.app.debug(\"IOSPreferences\", \"Failed to write NSDictionary to file \" + file);\r\n \t\t}\r\n-\t\tpool.dealloc();\r\n+\t\tpool.drain();\r\n \t}\r\n }\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 191, "bugNodeStartChar": 5361, "bugNodeLength": 14, "fixLineNum": 191, "fixNodeStartChar": 5171, "fixNodeLength": 12, "sourceBeforeFix": "pool.dealloc()", "sourceAfterFix": "pool.drain()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d251856fc9062d7abcdb5b4e48e7385d8e978b9b", "fixCommitParentSHA1": "2ca14f07afe47bdbd1050db440b2d29fd84f506f", "bugFilePath": "backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java", "fixPatch": "diff --git a/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java b/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java\nindex ffb0def..e065313 100755\n--- a/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java\n+++ b/backends/gdx-backend-moe/src/com/badlogic/gdx/backends/iosmoe/IOSPreferences.java\n@@ -52,7 +52,7 @@\n \r\n \t@Override\r\n \tpublic Preferences putLong (String key, long val) {\r\n-\t\tnsDictionary.put(convertKey(key), NSNumber.numberWithLong(val));\r\n+\t\tnsDictionary.put(convertKey(key), NSNumber.numberWithLongLong(val));\r\n \t\treturn this;\r\n \t}\r\n \r\n@@ -106,7 +106,7 @@\n \tpublic long getLong (String key) {\r\n \t\tNSNumber value = (NSNumber)nsDictionary.get(convertKey(key));\r\n \t\tif (value == null) return 0L;\r\n-\t\treturn value.longValue();\r\n+\t\treturn value.longLongValue();\r\n \t}\r\n \r\n \t@Override\r\n@@ -118,7 +118,8 @@\n \r\n \t@Override\r\n \tpublic String getString (String key) {\r\n-\t\tNSString value = (NSString)nsDictionary.get(convertKey(key));\r\n+\t\t//Implicit mapping from NSString to String apparently?\r\n+\t\tObject value = nsDictionary.get(convertKey(key));\r\n \t\tif (value == null) return \"\";\r\n \t\treturn value.toString();\r\n \t}\r\n@@ -179,7 +180,7 @@\n \t}\r\n \r\n \tprivate NSString convertKey (String key) {\r\n-\t\treturn NSString.stringWithString(key);\r\n+\t\treturn NSString.alloc().initWithString(key);\r\n \t}\r\n \r\n \t@Override\r\n@@ -188,6 +189,6 @@\n \t\tif (!nsDictionary.writeToFileAtomically(file.getAbsolutePath(), false)) {\r\n \t\t\tGdx.app.debug(\"IOSPreferences\", \"Failed to write NSDictionary to file \" + file);\r\n \t\t}\r\n-\t\tpool.dealloc();\r\n+\t\tpool.drain();\r\n \t}\r\n }\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 191, "bugNodeStartChar": 5361, "bugNodeLength": 14, "fixLineNum": 191, "fixNodeStartChar": 5171, "fixNodeLength": 12, "sourceBeforeFix": "pool.dealloc()", "sourceAfterFix": "pool.drain()"}, {"bugType": "SWAP_BOOLEAN_LITERAL", "fixCommitSHA1": "5411f0477194933cea95f870e946426af1e4fd58", "fixCommitParentSHA1": "9e67329cdd8cad94dfbe78acf139b6fc95c14935", "bugFilePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/conformance/DisplayModeTest.java", "fixPatch": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/conformance/DisplayModeTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/conformance/DisplayModeTest.java\nindex b7eb995..5ee8872 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/conformance/DisplayModeTest.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/conformance/DisplayModeTest.java\n@@ -47,9 +47,9 @@\n \t\tif (a.length != b.length) {\n \t\t\tthrow new AssertionError(\"Display modes \" + Arrays.toString(a) + \" aren't equal to display modes \" + Arrays.toString(b));\n \t\t}\n-\t\tboolean equal = false;\n+\t\tboolean equal = true;\n \t\tfor (int i = 0; i < a.length; i++) {\n-\t\t\tequal = isDisplayModeEqual(a[i], b[i]);\n+\t\t\tequal = equal && isDisplayModeEqual(a[i], b[i]);\n \t\t}\n \t\tif (!equal) {\n \t\t\tthrow new AssertionError(\"Display modes \" + Arrays.toString(a) + \" aren't equal to display modes \" + Arrays.toString(b));\n", "projectName": "libgdx.libgdx", "bugLineNum": 50, "bugNodeStartChar": 2368, "bugNodeLength": 13, "fixLineNum": 50, "fixNodeStartChar": 2368, "fixNodeLength": 12, "sourceBeforeFix": "equal=false", "sourceAfterFix": "equal=true"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "37ee7f19dad5b5e3f9d298448a3f778069efebdc", "fixCommitParentSHA1": "3ed3738bcbf82c8afd39390c96909aee0699f80b", "bugFilePath": "gdx/src/com/badlogic/gdx/math/BSpline.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/BSpline.java b/gdx/src/com/badlogic/gdx/math/BSpline.java\nindex f922f10..ed10a41 100644\n--- a/gdx/src/com/badlogic/gdx/math/BSpline.java\n+++ b/gdx/src/com/badlogic/gdx/math/BSpline.java\n@@ -90,7 +90,7 @@\n \t\tfinal float t2 = u * u;\n \t\tfinal float t3 = t2 * u;\n \t\tout.set(points[i]).scl(1.5f * t2 - 2 * u);\n-\t\tif (continuous || i > 0) out.add(tmp.set(points[(n + i - 1) % n]).scl(0.5f * (1 - u) * (1 - u)));\n+\t\tif (continuous || i > 0) out.add(tmp.set(points[(n + i - 1) % n]).scl(-0.5f * dt * dt));\n \t\tif (continuous || i < (n - 1)) out.add(tmp.set(points[(i + 1) % n]).scl(-1.5f * t2 + u + 0.5f));\n \t\tif (continuous || i < (n - 2)) out.add(tmp.set(points[(i + 2) % n]).scl(0.5f * t2));\n \t\treturn out;\n", "projectName": "libgdx.libgdx", "bugLineNum": 93, "bugNodeStartChar": 4378, "bugNodeLength": 4, "fixLineNum": 93, "fixNodeStartChar": 4378, "fixNodeLength": 5, "sourceBeforeFix": "0.5f", "sourceAfterFix": "-0.5f"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "0867fa3723a28ad280f7512a7b68141b58215209", "fixCommitParentSHA1": "9def365af81c0397bb6509b9cbe5ec561078ae7c", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java\nindex 536c5af..76cb133 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java\n@@ -56,7 +56,7 @@\n \r\n \tprivate IntBuffer toIntBuffer (int v[], int offset, int count) {\r\n \t\tensureBufferCapacity(count << 2);\r\n-\t\tfloatBuffer.clear();\r\n+\t\tintBuffer.clear();\r\n \t\tcom.badlogic.gdx.utils.BufferUtils.copy(v, count, offset, intBuffer);\r\n \t\treturn intBuffer;\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 59, "bugNodeStartChar": 2109, "bugNodeLength": 19, "fixLineNum": 59, "fixNodeStartChar": 2051, "fixNodeLength": 17, "sourceBeforeFix": "floatBuffer.clear()", "sourceAfterFix": "intBuffer.clear()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "0867fa3723a28ad280f7512a7b68141b58215209", "fixCommitParentSHA1": "9def365af81c0397bb6509b9cbe5ec561078ae7c", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java\nindex 536c5af..76cb133 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java\n@@ -56,7 +56,7 @@\n \r\n \tprivate IntBuffer toIntBuffer (int v[], int offset, int count) {\r\n \t\tensureBufferCapacity(count << 2);\r\n-\t\tfloatBuffer.clear();\r\n+\t\tintBuffer.clear();\r\n \t\tcom.badlogic.gdx.utils.BufferUtils.copy(v, count, offset, intBuffer);\r\n \t\treturn intBuffer;\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 59, "bugNodeStartChar": 2109, "bugNodeLength": 19, "fixLineNum": 59, "fixNodeStartChar": 2051, "fixNodeLength": 17, "sourceBeforeFix": "floatBuffer.clear()", "sourceAfterFix": "intBuffer.clear()"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "10821c9f522d7897c0f84eaa2b14af6d90f2d2fe", "fixCommitParentSHA1": "6e71dd4fd5db289306bf0b3336939c6e379f2c54", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java\nindex 536c5af..76cb133 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java\n@@ -56,7 +56,7 @@\n \r\n \tprivate IntBuffer toIntBuffer (int v[], int offset, int count) {\r\n \t\tensureBufferCapacity(count << 2);\r\n-\t\tfloatBuffer.clear();\r\n+\t\tintBuffer.clear();\r\n \t\tcom.badlogic.gdx.utils.BufferUtils.copy(v, count, offset, intBuffer);\r\n \t\treturn intBuffer;\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 59, "bugNodeStartChar": 2109, "bugNodeLength": 19, "fixLineNum": 59, "fixNodeStartChar": 2051, "fixNodeLength": 17, "sourceBeforeFix": "floatBuffer.clear()", "sourceAfterFix": "intBuffer.clear()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "10821c9f522d7897c0f84eaa2b14af6d90f2d2fe", "fixCommitParentSHA1": "6e71dd4fd5db289306bf0b3336939c6e379f2c54", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java\nindex 536c5af..76cb133 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java\n@@ -56,7 +56,7 @@\n \r\n \tprivate IntBuffer toIntBuffer (int v[], int offset, int count) {\r\n \t\tensureBufferCapacity(count << 2);\r\n-\t\tfloatBuffer.clear();\r\n+\t\tintBuffer.clear();\r\n \t\tcom.badlogic.gdx.utils.BufferUtils.copy(v, count, offset, intBuffer);\r\n \t\treturn intBuffer;\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 59, "bugNodeStartChar": 2109, "bugNodeLength": 19, "fixLineNum": 59, "fixNodeStartChar": 2051, "fixNodeLength": 17, "sourceBeforeFix": "floatBuffer.clear()", "sourceAfterFix": "intBuffer.clear()"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "1c6bc8ead71b0f8f2939e12cf66a8c61f9fae26e", "fixCommitParentSHA1": "a39e406de0138869ff9a36d226accfaf50ee67e2", "bugFilePath": "backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java\nindex 3341469..8675205 100644\n--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java\n@@ -60,7 +60,7 @@\n \r\n \tprivate IntBuffer toIntBuffer (int v[], int offset, int count) {\r\n \t\tensureBufferCapacity(count << 2);\r\n-\t\tfloatBuffer.clear();\r\n+\t\tintBuffer.clear();\r\n \t\tcom.badlogic.gdx.utils.BufferUtils.copy(v, count, offset, intBuffer);\r\n \t\treturn intBuffer;\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 63, "bugNodeStartChar": 2327, "bugNodeLength": 19, "fixLineNum": 63, "fixNodeStartChar": 2265, "fixNodeLength": 17, "sourceBeforeFix": "floatBuffer.clear()", "sourceAfterFix": "intBuffer.clear()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "1c6bc8ead71b0f8f2939e12cf66a8c61f9fae26e", "fixCommitParentSHA1": "a39e406de0138869ff9a36d226accfaf50ee67e2", "bugFilePath": "backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java\nindex 3341469..8675205 100644\n--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java\n@@ -60,7 +60,7 @@\n \r\n \tprivate IntBuffer toIntBuffer (int v[], int offset, int count) {\r\n \t\tensureBufferCapacity(count << 2);\r\n-\t\tfloatBuffer.clear();\r\n+\t\tintBuffer.clear();\r\n \t\tcom.badlogic.gdx.utils.BufferUtils.copy(v, count, offset, intBuffer);\r\n \t\treturn intBuffer;\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 63, "bugNodeStartChar": 2327, "bugNodeLength": 19, "fixLineNum": 63, "fixNodeStartChar": 2265, "fixNodeLength": 17, "sourceBeforeFix": "floatBuffer.clear()", "sourceAfterFix": "intBuffer.clear()"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "b981c761276a1a9aaedac51c10622656271dc180", "fixCommitParentSHA1": "a39e406de0138869ff9a36d226accfaf50ee67e2", "bugFilePath": "backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java\nindex 3341469..8675205 100644\n--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java\n@@ -60,7 +60,7 @@\n \r\n \tprivate IntBuffer toIntBuffer (int v[], int offset, int count) {\r\n \t\tensureBufferCapacity(count << 2);\r\n-\t\tfloatBuffer.clear();\r\n+\t\tintBuffer.clear();\r\n \t\tcom.badlogic.gdx.utils.BufferUtils.copy(v, count, offset, intBuffer);\r\n \t\treturn intBuffer;\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 63, "bugNodeStartChar": 2327, "bugNodeLength": 19, "fixLineNum": 63, "fixNodeStartChar": 2265, "fixNodeLength": 17, "sourceBeforeFix": "floatBuffer.clear()", "sourceAfterFix": "intBuffer.clear()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "b981c761276a1a9aaedac51c10622656271dc180", "fixCommitParentSHA1": "a39e406de0138869ff9a36d226accfaf50ee67e2", "bugFilePath": "backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java\nindex 3341469..8675205 100644\n--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java\n@@ -60,7 +60,7 @@\n \r\n \tprivate IntBuffer toIntBuffer (int v[], int offset, int count) {\r\n \t\tensureBufferCapacity(count << 2);\r\n-\t\tfloatBuffer.clear();\r\n+\t\tintBuffer.clear();\r\n \t\tcom.badlogic.gdx.utils.BufferUtils.copy(v, count, offset, intBuffer);\r\n \t\treturn intBuffer;\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 63, "bugNodeStartChar": 2327, "bugNodeLength": 19, "fixLineNum": 63, "fixNodeStartChar": 2265, "fixNodeLength": 17, "sourceBeforeFix": "floatBuffer.clear()", "sourceAfterFix": "intBuffer.clear()"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "1cb815170a2fd69558f737d92f5665c9d64cebd1", "fixCommitParentSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 9fbfeff..7ab2b0e 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -353,18 +353,16 @@\n \t}\r\n \r\n \tpublic String glGetActiveAttrib (int program, int index, IntBuffer size, Buffer type) {\r\n-\t\t// FIXME this is less than ideal of course...\r\n \t\tIntBuffer typeTmp = BufferUtils.createIntBuffer(2);\r\n-\t\tString name = GL20.glGetActiveAttrib(program, index, 256, typeTmp);\r\n+\t\tString name = GL20.glGetActiveAttrib(program, index, 256, size, typeTmp);\r\n \t\tsize.put(typeTmp.get(0));\r\n \t\tif (type instanceof IntBuffer) ((IntBuffer)type).put(typeTmp.get(1));\r\n \t\treturn name;\r\n \t}\r\n \r\n \tpublic String glGetActiveUniform (int program, int index, IntBuffer size, Buffer type) {\r\n-\t\t// FIXME this is less than ideal of course...\r\n \t\tIntBuffer typeTmp = BufferUtils.createIntBuffer(2);\r\n-\t\tString name = GL20.glGetActiveUniform(program, index, 256, typeTmp);\r\n+\t\tString name = GL20.glGetActiveUniform(program, index, 256, size, typeTmp);\r\n \t\tsize.put(typeTmp.get(0));\r\n \t\tif (type instanceof IntBuffer) ((IntBuffer)type).put(typeTmp.get(1));\r\n \t\treturn name;\r\n@@ -808,15 +806,15 @@\n \tpublic void glVertexAttribPointer (int indx, int size, int type, boolean normalized, int stride, Buffer buffer) {\r\n \t\tif (buffer instanceof ByteBuffer) {\r\n \t\t\tif (type == GL_BYTE)\t\t\t\t\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, false, normalized, stride, (ByteBuffer)buffer);\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, (ByteBuffer)buffer);\r\n \t\t\telse if (type == GL_UNSIGNED_BYTE)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, true, normalized, stride, (ByteBuffer)buffer);\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, (ByteBuffer)buffer);\r\n \t\t\telse if (type == GL_SHORT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, false, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n \t\t\telse if (type == GL_UNSIGNED_SHORT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, true, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n \t\t\telse if (type == GL_FLOAT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, normalized, stride, ((ByteBuffer)buffer).asFloatBuffer());\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, ((ByteBuffer)buffer).asFloatBuffer());\r\n \t\t\telse\r\n \t\t\t\tthrow new GdxRuntimeException(\r\n \t\t\t\t\t\"Can't use \"\r\n@@ -826,7 +824,7 @@\n \t\t\t\t\t\t+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\r\n \t\t} else if (buffer instanceof FloatBuffer) {\r\n \t\t\tif (type == GL_FLOAT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, normalized, stride, (FloatBuffer)buffer);\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, (FloatBuffer)buffer);\r\n \t\t\telse\r\n \t\t\t\tthrow new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \" + type\r\n \t\t\t\t\t+ \" with this method.\");\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 358, "bugNodeStartChar": 11565, "bugNodeLength": 52, "fixLineNum": 358, "fixNodeStartChar": 11208, "fixNodeLength": 58, "sourceBeforeFix": "GL20.glGetActiveAttrib(program,index,256,typeTmp)", "sourceAfterFix": "GL20.glGetActiveAttrib(program,index,256,size,typeTmp)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "1cb815170a2fd69558f737d92f5665c9d64cebd1", "fixCommitParentSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 9fbfeff..7ab2b0e 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -353,18 +353,16 @@\n \t}\r\n \r\n \tpublic String glGetActiveAttrib (int program, int index, IntBuffer size, Buffer type) {\r\n-\t\t// FIXME this is less than ideal of course...\r\n \t\tIntBuffer typeTmp = BufferUtils.createIntBuffer(2);\r\n-\t\tString name = GL20.glGetActiveAttrib(program, index, 256, typeTmp);\r\n+\t\tString name = GL20.glGetActiveAttrib(program, index, 256, size, typeTmp);\r\n \t\tsize.put(typeTmp.get(0));\r\n \t\tif (type instanceof IntBuffer) ((IntBuffer)type).put(typeTmp.get(1));\r\n \t\treturn name;\r\n \t}\r\n \r\n \tpublic String glGetActiveUniform (int program, int index, IntBuffer size, Buffer type) {\r\n-\t\t// FIXME this is less than ideal of course...\r\n \t\tIntBuffer typeTmp = BufferUtils.createIntBuffer(2);\r\n-\t\tString name = GL20.glGetActiveUniform(program, index, 256, typeTmp);\r\n+\t\tString name = GL20.glGetActiveUniform(program, index, 256, size, typeTmp);\r\n \t\tsize.put(typeTmp.get(0));\r\n \t\tif (type instanceof IntBuffer) ((IntBuffer)type).put(typeTmp.get(1));\r\n \t\treturn name;\r\n@@ -808,15 +806,15 @@\n \tpublic void glVertexAttribPointer (int indx, int size, int type, boolean normalized, int stride, Buffer buffer) {\r\n \t\tif (buffer instanceof ByteBuffer) {\r\n \t\t\tif (type == GL_BYTE)\t\t\t\t\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, false, normalized, stride, (ByteBuffer)buffer);\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, (ByteBuffer)buffer);\r\n \t\t\telse if (type == GL_UNSIGNED_BYTE)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, true, normalized, stride, (ByteBuffer)buffer);\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, (ByteBuffer)buffer);\r\n \t\t\telse if (type == GL_SHORT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, false, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n \t\t\telse if (type == GL_UNSIGNED_SHORT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, true, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n \t\t\telse if (type == GL_FLOAT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, normalized, stride, ((ByteBuffer)buffer).asFloatBuffer());\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, ((ByteBuffer)buffer).asFloatBuffer());\r\n \t\t\telse\r\n \t\t\t\tthrow new GdxRuntimeException(\r\n \t\t\t\t\t\"Can't use \"\r\n@@ -826,7 +824,7 @@\n \t\t\t\t\t\t+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\r\n \t\t} else if (buffer instanceof FloatBuffer) {\r\n \t\t\tif (type == GL_FLOAT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, normalized, stride, (FloatBuffer)buffer);\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, (FloatBuffer)buffer);\r\n \t\t\telse\r\n \t\t\t\tthrow new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \" + type\r\n \t\t\t\t\t+ \" with this method.\");\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 358, "bugNodeStartChar": 11565, "bugNodeLength": 52, "fixLineNum": 358, "fixNodeStartChar": 11208, "fixNodeLength": 58, "sourceBeforeFix": "GL20.glGetActiveAttrib(program,index,256,typeTmp)", "sourceAfterFix": "GL20.glGetActiveAttrib(program,index,256,size,typeTmp)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "1cb815170a2fd69558f737d92f5665c9d64cebd1", "fixCommitParentSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 9fbfeff..7ab2b0e 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -353,18 +353,16 @@\n \t}\r\n \r\n \tpublic String glGetActiveAttrib (int program, int index, IntBuffer size, Buffer type) {\r\n-\t\t// FIXME this is less than ideal of course...\r\n \t\tIntBuffer typeTmp = BufferUtils.createIntBuffer(2);\r\n-\t\tString name = GL20.glGetActiveAttrib(program, index, 256, typeTmp);\r\n+\t\tString name = GL20.glGetActiveAttrib(program, index, 256, size, typeTmp);\r\n \t\tsize.put(typeTmp.get(0));\r\n \t\tif (type instanceof IntBuffer) ((IntBuffer)type).put(typeTmp.get(1));\r\n \t\treturn name;\r\n \t}\r\n \r\n \tpublic String glGetActiveUniform (int program, int index, IntBuffer size, Buffer type) {\r\n-\t\t// FIXME this is less than ideal of course...\r\n \t\tIntBuffer typeTmp = BufferUtils.createIntBuffer(2);\r\n-\t\tString name = GL20.glGetActiveUniform(program, index, 256, typeTmp);\r\n+\t\tString name = GL20.glGetActiveUniform(program, index, 256, size, typeTmp);\r\n \t\tsize.put(typeTmp.get(0));\r\n \t\tif (type instanceof IntBuffer) ((IntBuffer)type).put(typeTmp.get(1));\r\n \t\treturn name;\r\n@@ -808,15 +806,15 @@\n \tpublic void glVertexAttribPointer (int indx, int size, int type, boolean normalized, int stride, Buffer buffer) {\r\n \t\tif (buffer instanceof ByteBuffer) {\r\n \t\t\tif (type == GL_BYTE)\t\t\t\t\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, false, normalized, stride, (ByteBuffer)buffer);\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, (ByteBuffer)buffer);\r\n \t\t\telse if (type == GL_UNSIGNED_BYTE)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, true, normalized, stride, (ByteBuffer)buffer);\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, (ByteBuffer)buffer);\r\n \t\t\telse if (type == GL_SHORT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, false, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n \t\t\telse if (type == GL_UNSIGNED_SHORT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, true, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n \t\t\telse if (type == GL_FLOAT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, normalized, stride, ((ByteBuffer)buffer).asFloatBuffer());\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, ((ByteBuffer)buffer).asFloatBuffer());\r\n \t\t\telse\r\n \t\t\t\tthrow new GdxRuntimeException(\r\n \t\t\t\t\t\"Can't use \"\r\n@@ -826,7 +824,7 @@\n \t\t\t\t\t\t+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\r\n \t\t} else if (buffer instanceof FloatBuffer) {\r\n \t\t\tif (type == GL_FLOAT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, normalized, stride, (FloatBuffer)buffer);\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, (FloatBuffer)buffer);\r\n \t\t\telse\r\n \t\t\t\tthrow new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \" + type\r\n \t\t\t\t\t+ \" with this method.\");\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 367, "bugNodeStartChar": 11955, "bugNodeLength": 53, "fixLineNum": 367, "fixNodeStartChar": 11589, "fixNodeLength": 59, "sourceBeforeFix": "GL20.glGetActiveUniform(program,index,256,typeTmp)", "sourceAfterFix": "GL20.glGetActiveUniform(program,index,256,size,typeTmp)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "1cb815170a2fd69558f737d92f5665c9d64cebd1", "fixCommitParentSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 9fbfeff..7ab2b0e 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -353,18 +353,16 @@\n \t}\r\n \r\n \tpublic String glGetActiveAttrib (int program, int index, IntBuffer size, Buffer type) {\r\n-\t\t// FIXME this is less than ideal of course...\r\n \t\tIntBuffer typeTmp = BufferUtils.createIntBuffer(2);\r\n-\t\tString name = GL20.glGetActiveAttrib(program, index, 256, typeTmp);\r\n+\t\tString name = GL20.glGetActiveAttrib(program, index, 256, size, typeTmp);\r\n \t\tsize.put(typeTmp.get(0));\r\n \t\tif (type instanceof IntBuffer) ((IntBuffer)type).put(typeTmp.get(1));\r\n \t\treturn name;\r\n \t}\r\n \r\n \tpublic String glGetActiveUniform (int program, int index, IntBuffer size, Buffer type) {\r\n-\t\t// FIXME this is less than ideal of course...\r\n \t\tIntBuffer typeTmp = BufferUtils.createIntBuffer(2);\r\n-\t\tString name = GL20.glGetActiveUniform(program, index, 256, typeTmp);\r\n+\t\tString name = GL20.glGetActiveUniform(program, index, 256, size, typeTmp);\r\n \t\tsize.put(typeTmp.get(0));\r\n \t\tif (type instanceof IntBuffer) ((IntBuffer)type).put(typeTmp.get(1));\r\n \t\treturn name;\r\n@@ -808,15 +806,15 @@\n \tpublic void glVertexAttribPointer (int indx, int size, int type, boolean normalized, int stride, Buffer buffer) {\r\n \t\tif (buffer instanceof ByteBuffer) {\r\n \t\t\tif (type == GL_BYTE)\t\t\t\t\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, false, normalized, stride, (ByteBuffer)buffer);\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, (ByteBuffer)buffer);\r\n \t\t\telse if (type == GL_UNSIGNED_BYTE)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, true, normalized, stride, (ByteBuffer)buffer);\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, (ByteBuffer)buffer);\r\n \t\t\telse if (type == GL_SHORT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, false, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n \t\t\telse if (type == GL_UNSIGNED_SHORT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, true, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n \t\t\telse if (type == GL_FLOAT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, normalized, stride, ((ByteBuffer)buffer).asFloatBuffer());\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, ((ByteBuffer)buffer).asFloatBuffer());\r\n \t\t\telse\r\n \t\t\t\tthrow new GdxRuntimeException(\r\n \t\t\t\t\t\"Can't use \"\r\n@@ -826,7 +824,7 @@\n \t\t\t\t\t\t+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\r\n \t\t} else if (buffer instanceof FloatBuffer) {\r\n \t\t\tif (type == GL_FLOAT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, normalized, stride, (FloatBuffer)buffer);\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, (FloatBuffer)buffer);\r\n \t\t\telse\r\n \t\t\t\tthrow new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \" + type\r\n \t\t\t\t\t+ \" with this method.\");\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 367, "bugNodeStartChar": 11955, "bugNodeLength": 53, "fixLineNum": 367, "fixNodeStartChar": 11589, "fixNodeLength": 59, "sourceBeforeFix": "GL20.glGetActiveUniform(program,index,256,typeTmp)", "sourceAfterFix": "GL20.glGetActiveUniform(program,index,256,size,typeTmp)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "1cb815170a2fd69558f737d92f5665c9d64cebd1", "fixCommitParentSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 9fbfeff..7ab2b0e 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -353,18 +353,16 @@\n \t}\r\n \r\n \tpublic String glGetActiveAttrib (int program, int index, IntBuffer size, Buffer type) {\r\n-\t\t// FIXME this is less than ideal of course...\r\n \t\tIntBuffer typeTmp = BufferUtils.createIntBuffer(2);\r\n-\t\tString name = GL20.glGetActiveAttrib(program, index, 256, typeTmp);\r\n+\t\tString name = GL20.glGetActiveAttrib(program, index, 256, size, typeTmp);\r\n \t\tsize.put(typeTmp.get(0));\r\n \t\tif (type instanceof IntBuffer) ((IntBuffer)type).put(typeTmp.get(1));\r\n \t\treturn name;\r\n \t}\r\n \r\n \tpublic String glGetActiveUniform (int program, int index, IntBuffer size, Buffer type) {\r\n-\t\t// FIXME this is less than ideal of course...\r\n \t\tIntBuffer typeTmp = BufferUtils.createIntBuffer(2);\r\n-\t\tString name = GL20.glGetActiveUniform(program, index, 256, typeTmp);\r\n+\t\tString name = GL20.glGetActiveUniform(program, index, 256, size, typeTmp);\r\n \t\tsize.put(typeTmp.get(0));\r\n \t\tif (type instanceof IntBuffer) ((IntBuffer)type).put(typeTmp.get(1));\r\n \t\treturn name;\r\n@@ -808,15 +806,15 @@\n \tpublic void glVertexAttribPointer (int indx, int size, int type, boolean normalized, int stride, Buffer buffer) {\r\n \t\tif (buffer instanceof ByteBuffer) {\r\n \t\t\tif (type == GL_BYTE)\t\t\t\t\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, false, normalized, stride, (ByteBuffer)buffer);\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, (ByteBuffer)buffer);\r\n \t\t\telse if (type == GL_UNSIGNED_BYTE)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, true, normalized, stride, (ByteBuffer)buffer);\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, (ByteBuffer)buffer);\r\n \t\t\telse if (type == GL_SHORT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, false, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n \t\t\telse if (type == GL_UNSIGNED_SHORT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, true, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n \t\t\telse if (type == GL_FLOAT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, normalized, stride, ((ByteBuffer)buffer).asFloatBuffer());\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, ((ByteBuffer)buffer).asFloatBuffer());\r\n \t\t\telse\r\n \t\t\t\tthrow new GdxRuntimeException(\r\n \t\t\t\t\t\"Can't use \"\r\n@@ -826,7 +824,7 @@\n \t\t\t\t\t\t+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\r\n \t\t} else if (buffer instanceof FloatBuffer) {\r\n \t\t\tif (type == GL_FLOAT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, normalized, stride, (FloatBuffer)buffer);\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, (FloatBuffer)buffer);\r\n \t\t\telse\r\n \t\t\t\tthrow new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \" + type\r\n \t\t\t\t\t+ \" with this method.\");\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 819, "bugNodeStartChar": 28109, "bugNodeLength": 96, "fixLineNum": 819, "fixNodeStartChar": 27291, "fixNodeLength": 102, "sourceBeforeFix": "GL20.glVertexAttribPointer(indx,size,normalized,stride,((ByteBuffer)buffer).asFloatBuffer())", "sourceAfterFix": "GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asFloatBuffer())"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "1cb815170a2fd69558f737d92f5665c9d64cebd1", "fixCommitParentSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 9fbfeff..7ab2b0e 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -353,18 +353,16 @@\n \t}\r\n \r\n \tpublic String glGetActiveAttrib (int program, int index, IntBuffer size, Buffer type) {\r\n-\t\t// FIXME this is less than ideal of course...\r\n \t\tIntBuffer typeTmp = BufferUtils.createIntBuffer(2);\r\n-\t\tString name = GL20.glGetActiveAttrib(program, index, 256, typeTmp);\r\n+\t\tString name = GL20.glGetActiveAttrib(program, index, 256, size, typeTmp);\r\n \t\tsize.put(typeTmp.get(0));\r\n \t\tif (type instanceof IntBuffer) ((IntBuffer)type).put(typeTmp.get(1));\r\n \t\treturn name;\r\n \t}\r\n \r\n \tpublic String glGetActiveUniform (int program, int index, IntBuffer size, Buffer type) {\r\n-\t\t// FIXME this is less than ideal of course...\r\n \t\tIntBuffer typeTmp = BufferUtils.createIntBuffer(2);\r\n-\t\tString name = GL20.glGetActiveUniform(program, index, 256, typeTmp);\r\n+\t\tString name = GL20.glGetActiveUniform(program, index, 256, size, typeTmp);\r\n \t\tsize.put(typeTmp.get(0));\r\n \t\tif (type instanceof IntBuffer) ((IntBuffer)type).put(typeTmp.get(1));\r\n \t\treturn name;\r\n@@ -808,15 +806,15 @@\n \tpublic void glVertexAttribPointer (int indx, int size, int type, boolean normalized, int stride, Buffer buffer) {\r\n \t\tif (buffer instanceof ByteBuffer) {\r\n \t\t\tif (type == GL_BYTE)\t\t\t\t\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, false, normalized, stride, (ByteBuffer)buffer);\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, (ByteBuffer)buffer);\r\n \t\t\telse if (type == GL_UNSIGNED_BYTE)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, true, normalized, stride, (ByteBuffer)buffer);\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, (ByteBuffer)buffer);\r\n \t\t\telse if (type == GL_SHORT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, false, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n \t\t\telse if (type == GL_UNSIGNED_SHORT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, true, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n \t\t\telse if (type == GL_FLOAT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, normalized, stride, ((ByteBuffer)buffer).asFloatBuffer());\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, ((ByteBuffer)buffer).asFloatBuffer());\r\n \t\t\telse\r\n \t\t\t\tthrow new GdxRuntimeException(\r\n \t\t\t\t\t\"Can't use \"\r\n@@ -826,7 +824,7 @@\n \t\t\t\t\t\t+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\r\n \t\t} else if (buffer instanceof FloatBuffer) {\r\n \t\t\tif (type == GL_FLOAT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, normalized, stride, (FloatBuffer)buffer);\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, (FloatBuffer)buffer);\r\n \t\t\telse\r\n \t\t\t\tthrow new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \" + type\r\n \t\t\t\t\t+ \" with this method.\");\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 829, "bugNodeStartChar": 28570, "bugNodeLength": 79, "fixLineNum": 829, "fixNodeStartChar": 27742, "fixNodeLength": 85, "sourceBeforeFix": "GL20.glVertexAttribPointer(indx,size,normalized,stride,(FloatBuffer)buffer)", "sourceAfterFix": "GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(FloatBuffer)buffer)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 386, "bugNodeStartChar": 12642, "bugNodeLength": 48, "fixLineNum": 386, "fixNodeStartChar": 12257, "fixNodeLength": 50, "sourceBeforeFix": "GL15.glGetBufferParameter(target,pname,params)", "sourceAfterFix": "GL15.glGetBufferParameteriv(target,pname,params)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 386, "bugNodeStartChar": 12642, "bugNodeLength": 48, "fixLineNum": 386, "fixNodeStartChar": 12257, "fixNodeLength": 50, "sourceBeforeFix": "GL15.glGetBufferParameter(target,pname,params)", "sourceAfterFix": "GL15.glGetBufferParameteriv(target,pname,params)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 394, "bugNodeStartChar": 12825, "bugNodeLength": 30, "fixLineNum": 394, "fixNodeStartChar": 12432, "fixNodeLength": 31, "sourceBeforeFix": "GL11.glGetFloat(pname,params)", "sourceAfterFix": "GL11.glGetFloatv(pname,params)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 394, "bugNodeStartChar": 12825, "bugNodeLength": 30, "fixLineNum": 394, "fixNodeStartChar": 12432, "fixNodeLength": 31, "sourceBeforeFix": "GL11.glGetFloat(pname,params)", "sourceAfterFix": "GL11.glGetFloatv(pname,params)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 398, "bugNodeStartChar": 12978, "bugNodeLength": 94, "fixLineNum": 398, "fixNodeStartChar": 12581, "fixNodeLength": 96, "sourceBeforeFix": "EXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target,attachment,pname,params)", "sourceAfterFix": "EXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target,attachment,pname,params)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 398, "bugNodeStartChar": 12978, "bugNodeLength": 94, "fixLineNum": 398, "fixNodeStartChar": 12581, "fixNodeLength": 96, "sourceBeforeFix": "EXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target,attachment,pname,params)", "sourceAfterFix": "EXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target,attachment,pname,params)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 402, "bugNodeStartChar": 13143, "bugNodeLength": 32, "fixLineNum": 402, "fixNodeStartChar": 12742, "fixNodeLength": 33, "sourceBeforeFix": "GL11.glGetInteger(pname,params)", "sourceAfterFix": "GL11.glGetIntegerv(pname,params)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 402, "bugNodeStartChar": 13143, "bugNodeLength": 32, "fixLineNum": 402, "fixNodeStartChar": 12742, "fixNodeLength": 33, "sourceBeforeFix": "GL11.glGetInteger(pname,params)", "sourceAfterFix": "GL11.glGetIntegerv(pname,params)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 420, "bugNodeStartChar": 13738, "bugNodeLength": 41, "fixLineNum": 420, "fixNodeStartChar": 13319, "fixNodeLength": 43, "sourceBeforeFix": "GL20.glGetProgram(program,pname,params)", "sourceAfterFix": "GL20.glGetProgramiv(program,pname,params)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 420, "bugNodeStartChar": 13738, "bugNodeLength": 41, "fixLineNum": 420, "fixNodeStartChar": 13319, "fixNodeLength": 43, "sourceBeforeFix": "GL20.glGetProgram(program,pname,params)", "sourceAfterFix": "GL20.glGetProgramiv(program,pname,params)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 424, "bugNodeStartChar": 13877, "bugNodeLength": 73, "fixLineNum": 424, "fixNodeStartChar": 13454, "fixNodeLength": 75, "sourceBeforeFix": "EXTFramebufferObject.glGetRenderbufferParameterEXT(target,pname,params)", "sourceAfterFix": "EXTFramebufferObject.glGetRenderbufferParameterivEXT(target,pname,params)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 424, "bugNodeStartChar": 13877, "bugNodeLength": 73, "fixLineNum": 424, "fixNodeStartChar": 13454, "fixNodeLength": 75, "sourceBeforeFix": "EXTFramebufferObject.glGetRenderbufferParameterEXT(target,pname,params)", "sourceAfterFix": "EXTFramebufferObject.glGetRenderbufferParameterivEXT(target,pname,params)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 446, "bugNodeStartChar": 14706, "bugNodeLength": 39, "fixLineNum": 446, "fixNodeStartChar": 14261, "fixNodeLength": 41, "sourceBeforeFix": "GL20.glGetShader(shader,pname,params)", "sourceAfterFix": "GL20.glGetShaderiv(shader,pname,params)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 446, "bugNodeStartChar": 14706, "bugNodeLength": 39, "fixLineNum": 446, "fixNodeStartChar": 14261, "fixNodeLength": 41, "sourceBeforeFix": "GL20.glGetShader(shader,pname,params)", "sourceAfterFix": "GL20.glGetShaderiv(shader,pname,params)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 454, "bugNodeStartChar": 14917, "bugNodeLength": 45, "fixLineNum": 454, "fixNodeStartChar": 14464, "fixNodeLength": 47, "sourceBeforeFix": "GL11.glGetTexParameter(target,pname,params)", "sourceAfterFix": "GL11.glGetTexParameterfv(target,pname,params)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 454, "bugNodeStartChar": 14917, "bugNodeLength": 45, "fixLineNum": 454, "fixNodeStartChar": 14464, "fixNodeLength": 47, "sourceBeforeFix": "GL11.glGetTexParameter(target,pname,params)", "sourceAfterFix": "GL11.glGetTexParameterfv(target,pname,params)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 458, "bugNodeStartChar": 15051, "bugNodeLength": 45, "fixLineNum": 458, "fixNodeStartChar": 14594, "fixNodeLength": 47, "sourceBeforeFix": "GL11.glGetTexParameter(target,pname,params)", "sourceAfterFix": "GL11.glGetTexParameteriv(target,pname,params)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 458, "bugNodeStartChar": 15051, "bugNodeLength": 45, "fixLineNum": 458, "fixNodeStartChar": 14594, "fixNodeLength": 47, "sourceBeforeFix": "GL11.glGetTexParameter(target,pname,params)", "sourceAfterFix": "GL11.glGetTexParameteriv(target,pname,params)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 466, "bugNodeStartChar": 15307, "bugNodeLength": 44, "fixLineNum": 466, "fixNodeStartChar": 14842, "fixNodeLength": 46, "sourceBeforeFix": "GL20.glGetUniform(program,location,params)", "sourceAfterFix": "GL20.glGetUniformfv(program,location,params)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 466, "bugNodeStartChar": 15307, "bugNodeLength": 44, "fixLineNum": 466, "fixNodeStartChar": 14842, "fixNodeLength": 46, "sourceBeforeFix": "GL20.glGetUniform(program,location,params)", "sourceAfterFix": "GL20.glGetUniformfv(program,location,params)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 470, "bugNodeStartChar": 15439, "bugNodeLength": 44, "fixLineNum": 470, "fixNodeStartChar": 14970, "fixNodeLength": 46, "sourceBeforeFix": "GL20.glGetUniform(program,location,params)", "sourceAfterFix": "GL20.glGetUniformiv(program,location,params)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 470, "bugNodeStartChar": 15439, "bugNodeLength": 44, "fixLineNum": 470, "fixNodeStartChar": 14970, "fixNodeLength": 46, "sourceBeforeFix": "GL20.glGetUniform(program,location,params)", "sourceAfterFix": "GL20.glGetUniformiv(program,location,params)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 478, "bugNodeStartChar": 15736, "bugNodeLength": 44, "fixLineNum": 478, "fixNodeStartChar": 15259, "fixNodeLength": 46, "sourceBeforeFix": "GL20.glGetVertexAttrib(index,pname,params)", "sourceAfterFix": "GL20.glGetVertexAttribfv(index,pname,params)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 478, "bugNodeStartChar": 15736, "bugNodeLength": 44, "fixLineNum": 478, "fixNodeStartChar": 15259, "fixNodeLength": 46, "sourceBeforeFix": "GL20.glGetVertexAttrib(index,pname,params)", "sourceAfterFix": "GL20.glGetVertexAttribfv(index,pname,params)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 482, "bugNodeStartChar": 15868, "bugNodeLength": 44, "fixLineNum": 482, "fixNodeStartChar": 15387, "fixNodeLength": 46, "sourceBeforeFix": "GL20.glGetVertexAttrib(index,pname,params)", "sourceAfterFix": "GL20.glGetVertexAttribiv(index,pname,params)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 482, "bugNodeStartChar": 15868, "bugNodeLength": 44, "fixLineNum": 482, "fixNodeStartChar": 15387, "fixNodeLength": 46, "sourceBeforeFix": "GL20.glGetVertexAttrib(index,pname,params)", "sourceAfterFix": "GL20.glGetVertexAttribiv(index,pname,params)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 619, "bugNodeStartChar": 20725, "bugNodeLength": 42, "fixLineNum": 619, "fixNodeStartChar": 20107, "fixNodeLength": 44, "sourceBeforeFix": "GL11.glTexParameter(target,pname,params)", "sourceAfterFix": "GL11.glTexParameterfv(target,pname,params)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 619, "bugNodeStartChar": 20725, "bugNodeLength": 42, "fixLineNum": 619, "fixNodeStartChar": 20107, "fixNodeLength": 44, "sourceBeforeFix": "GL11.glTexParameter(target,pname,params)", "sourceAfterFix": "GL11.glTexParameterfv(target,pname,params)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 627, "bugNodeStartChar": 20973, "bugNodeLength": 42, "fixLineNum": 627, "fixNodeStartChar": 20347, "fixNodeLength": 44, "sourceBeforeFix": "GL11.glTexParameter(target,pname,params)", "sourceAfterFix": "GL11.glTexParameteriv(target,pname,params)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 627, "bugNodeStartChar": 20973, "bugNodeLength": 42, "fixLineNum": 627, "fixNodeStartChar": 20347, "fixNodeLength": 44, "sourceBeforeFix": "GL11.glTexParameter(target,pname,params)", "sourceAfterFix": "GL11.glTexParameteriv(target,pname,params)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 652, "bugNodeStartChar": 22294, "bugNodeLength": 28, "fixLineNum": 652, "fixNodeStartChar": 21643, "fixNodeLength": 30, "sourceBeforeFix": "GL20.glUniform1(location,v)", "sourceAfterFix": "GL20.glUniform1fv(location,v)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 652, "bugNodeStartChar": 22294, "bugNodeLength": 28, "fixLineNum": 652, "fixNodeStartChar": 21643, "fixNodeLength": 30, "sourceBeforeFix": "GL20.glUniform1(location,v)", "sourceAfterFix": "GL20.glUniform1fv(location,v)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 656, "bugNodeStartChar": 22411, "bugNodeLength": 58, "fixLineNum": 656, "fixNodeStartChar": 21756, "fixNodeLength": 60, "sourceBeforeFix": "GL20.glUniform1(location,toFloatBuffer(v,offset,count))", "sourceAfterFix": "GL20.glUniform1fv(location,toFloatBuffer(v,offset,count))"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 656, "bugNodeStartChar": 22411, "bugNodeLength": 58, "fixLineNum": 656, "fixNodeStartChar": 21756, "fixNodeLength": 60, "sourceBeforeFix": "GL20.glUniform1(location,toFloatBuffer(v,offset,count))", "sourceAfterFix": "GL20.glUniform1fv(location,toFloatBuffer(v,offset,count))"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 664, "bugNodeStartChar": 22638, "bugNodeLength": 28, "fixLineNum": 664, "fixNodeStartChar": 21975, "fixNodeLength": 30, "sourceBeforeFix": "GL20.glUniform1(location,v)", "sourceAfterFix": "GL20.glUniform1iv(location,v)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 664, "bugNodeStartChar": 22638, "bugNodeLength": 28, "fixLineNum": 664, "fixNodeStartChar": 21975, "fixNodeLength": 30, "sourceBeforeFix": "GL20.glUniform1(location,v)", "sourceAfterFix": "GL20.glUniform1iv(location,v)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 669, "bugNodeStartChar": 22765, "bugNodeLength": 56, "fixLineNum": 669, "fixNodeStartChar": 22097, "fixNodeLength": 58, "sourceBeforeFix": "GL20.glUniform1(location,toIntBuffer(v,offset,count))", "sourceAfterFix": "GL20.glUniform1iv(location,toIntBuffer(v,offset,count))"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 669, "bugNodeStartChar": 22765, "bugNodeLength": 56, "fixLineNum": 669, "fixNodeStartChar": 22097, "fixNodeLength": 58, "sourceBeforeFix": "GL20.glUniform1(location,toIntBuffer(v,offset,count))", "sourceAfterFix": "GL20.glUniform1iv(location,toIntBuffer(v,offset,count))"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 677, "bugNodeStartChar": 23006, "bugNodeLength": 28, "fixLineNum": 677, "fixNodeStartChar": 22330, "fixNodeLength": 30, "sourceBeforeFix": "GL20.glUniform2(location,v)", "sourceAfterFix": "GL20.glUniform2fv(location,v)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 677, "bugNodeStartChar": 23006, "bugNodeLength": 28, "fixLineNum": 677, "fixNodeStartChar": 22330, "fixNodeLength": 30, "sourceBeforeFix": "GL20.glUniform2(location,v)", "sourceAfterFix": "GL20.glUniform2fv(location,v)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 681, "bugNodeStartChar": 23123, "bugNodeLength": 63, "fixLineNum": 681, "fixNodeStartChar": 22443, "fixNodeLength": 65, "sourceBeforeFix": "GL20.glUniform2(location,toFloatBuffer(v,offset,count << 1))", "sourceAfterFix": "GL20.glUniform2fv(location,toFloatBuffer(v,offset,count << 1))"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 681, "bugNodeStartChar": 23123, "bugNodeLength": 63, "fixLineNum": 681, "fixNodeStartChar": 22443, "fixNodeLength": 65, "sourceBeforeFix": "GL20.glUniform2(location,toFloatBuffer(v,offset,count << 1))", "sourceAfterFix": "GL20.glUniform2fv(location,toFloatBuffer(v,offset,count << 1))"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 689, "bugNodeStartChar": 23365, "bugNodeLength": 28, "fixLineNum": 689, "fixNodeStartChar": 22677, "fixNodeLength": 30, "sourceBeforeFix": "GL20.glUniform2(location,v)", "sourceAfterFix": "GL20.glUniform2iv(location,v)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 689, "bugNodeStartChar": 23365, "bugNodeLength": 28, "fixLineNum": 689, "fixNodeStartChar": 22677, "fixNodeLength": 30, "sourceBeforeFix": "GL20.glUniform2(location,v)", "sourceAfterFix": "GL20.glUniform2iv(location,v)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 693, "bugNodeStartChar": 23480, "bugNodeLength": 61, "fixLineNum": 693, "fixNodeStartChar": 22788, "fixNodeLength": 63, "sourceBeforeFix": "GL20.glUniform2(location,toIntBuffer(v,offset,count << 1))", "sourceAfterFix": "GL20.glUniform2iv(location,toIntBuffer(v,offset,count << 1))"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 693, "bugNodeStartChar": 23480, "bugNodeLength": 61, "fixLineNum": 693, "fixNodeStartChar": 22788, "fixNodeLength": 63, "sourceBeforeFix": "GL20.glUniform2(location,toIntBuffer(v,offset,count << 1))", "sourceAfterFix": "GL20.glUniform2iv(location,toIntBuffer(v,offset,count << 1))"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 701, "bugNodeStartChar": 23738, "bugNodeLength": 28, "fixLineNum": 701, "fixNodeStartChar": 23038, "fixNodeLength": 30, "sourceBeforeFix": "GL20.glUniform3(location,v)", "sourceAfterFix": "GL20.glUniform3fv(location,v)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 701, "bugNodeStartChar": 23738, "bugNodeLength": 28, "fixLineNum": 701, "fixNodeStartChar": 23038, "fixNodeLength": 30, "sourceBeforeFix": "GL20.glUniform3(location,v)", "sourceAfterFix": "GL20.glUniform3fv(location,v)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 705, "bugNodeStartChar": 23855, "bugNodeLength": 62, "fixLineNum": 705, "fixNodeStartChar": 23151, "fixNodeLength": 64, "sourceBeforeFix": "GL20.glUniform3(location,toFloatBuffer(v,offset,count * 3))", "sourceAfterFix": "GL20.glUniform3fv(location,toFloatBuffer(v,offset,count * 3))"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 705, "bugNodeStartChar": 23855, "bugNodeLength": 62, "fixLineNum": 705, "fixNodeStartChar": 23151, "fixNodeLength": 64, "sourceBeforeFix": "GL20.glUniform3(location,toFloatBuffer(v,offset,count * 3))", "sourceAfterFix": "GL20.glUniform3fv(location,toFloatBuffer(v,offset,count * 3))"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 713, "bugNodeStartChar": 24106, "bugNodeLength": 28, "fixLineNum": 713, "fixNodeStartChar": 23394, "fixNodeLength": 30, "sourceBeforeFix": "GL20.glUniform3(location,v)", "sourceAfterFix": "GL20.glUniform3iv(location,v)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 713, "bugNodeStartChar": 24106, "bugNodeLength": 28, "fixLineNum": 713, "fixNodeStartChar": 23394, "fixNodeLength": 30, "sourceBeforeFix": "GL20.glUniform3(location,v)", "sourceAfterFix": "GL20.glUniform3iv(location,v)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 717, "bugNodeStartChar": 24221, "bugNodeLength": 60, "fixLineNum": 717, "fixNodeStartChar": 23505, "fixNodeLength": 62, "sourceBeforeFix": "GL20.glUniform3(location,toIntBuffer(v,offset,count * 3))", "sourceAfterFix": "GL20.glUniform3iv(location,toIntBuffer(v,offset,count * 3))"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 717, "bugNodeStartChar": 24221, "bugNodeLength": 60, "fixLineNum": 717, "fixNodeStartChar": 23505, "fixNodeLength": 62, "sourceBeforeFix": "GL20.glUniform3(location,toIntBuffer(v,offset,count * 3))", "sourceAfterFix": "GL20.glUniform3iv(location,toIntBuffer(v,offset,count * 3))"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 725, "bugNodeStartChar": 24490, "bugNodeLength": 28, "fixLineNum": 725, "fixNodeStartChar": 23766, "fixNodeLength": 30, "sourceBeforeFix": "GL20.glUniform4(location,v)", "sourceAfterFix": "GL20.glUniform4fv(location,v)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 725, "bugNodeStartChar": 24490, "bugNodeLength": 28, "fixLineNum": 725, "fixNodeStartChar": 23766, "fixNodeLength": 30, "sourceBeforeFix": "GL20.glUniform4(location,v)", "sourceAfterFix": "GL20.glUniform4fv(location,v)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 729, "bugNodeStartChar": 24607, "bugNodeLength": 63, "fixLineNum": 729, "fixNodeStartChar": 23879, "fixNodeLength": 65, "sourceBeforeFix": "GL20.glUniform4(location,toFloatBuffer(v,offset,count << 2))", "sourceAfterFix": "GL20.glUniform4fv(location,toFloatBuffer(v,offset,count << 2))"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 729, "bugNodeStartChar": 24607, "bugNodeLength": 63, "fixLineNum": 729, "fixNodeStartChar": 23879, "fixNodeLength": 65, "sourceBeforeFix": "GL20.glUniform4(location,toFloatBuffer(v,offset,count << 2))", "sourceAfterFix": "GL20.glUniform4fv(location,toFloatBuffer(v,offset,count << 2))"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 737, "bugNodeStartChar": 24869, "bugNodeLength": 28, "fixLineNum": 737, "fixNodeStartChar": 24133, "fixNodeLength": 30, "sourceBeforeFix": "GL20.glUniform4(location,v)", "sourceAfterFix": "GL20.glUniform4iv(location,v)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 737, "bugNodeStartChar": 24869, "bugNodeLength": 28, "fixLineNum": 737, "fixNodeStartChar": 24133, "fixNodeLength": 30, "sourceBeforeFix": "GL20.glUniform4(location,v)", "sourceAfterFix": "GL20.glUniform4iv(location,v)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 741, "bugNodeStartChar": 24984, "bugNodeLength": 61, "fixLineNum": 741, "fixNodeStartChar": 24244, "fixNodeLength": 63, "sourceBeforeFix": "GL20.glUniform4(location,toIntBuffer(v,offset,count << 2))", "sourceAfterFix": "GL20.glUniform4iv(location,toIntBuffer(v,offset,count << 2))"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 741, "bugNodeStartChar": 24984, "bugNodeLength": 61, "fixLineNum": 741, "fixNodeStartChar": 24244, "fixNodeLength": 63, "sourceBeforeFix": "GL20.glUniform4(location,toIntBuffer(v,offset,count << 2))", "sourceAfterFix": "GL20.glUniform4iv(location,toIntBuffer(v,offset,count << 2))"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 745, "bugNodeStartChar": 25155, "bugNodeLength": 49, "fixLineNum": 745, "fixNodeStartChar": 24411, "fixNodeLength": 51, "sourceBeforeFix": "GL20.glUniformMatrix2(location,transpose,value)", "sourceAfterFix": "GL20.glUniformMatrix2fv(location,transpose,value)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 745, "bugNodeStartChar": 25155, "bugNodeLength": 49, "fixLineNum": 745, "fixNodeStartChar": 24411, "fixNodeLength": 51, "sourceBeforeFix": "GL20.glUniformMatrix2(location,transpose,value)", "sourceAfterFix": "GL20.glUniformMatrix2fv(location,transpose,value)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 749, "bugNodeStartChar": 25322, "bugNodeLength": 84, "fixLineNum": 749, "fixNodeStartChar": 24574, "fixNodeLength": 86, "sourceBeforeFix": "GL20.glUniformMatrix2(location,transpose,toFloatBuffer(value,offset,count << 2))", "sourceAfterFix": "GL20.glUniformMatrix2fv(location,transpose,toFloatBuffer(value,offset,count << 2))"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 749, "bugNodeStartChar": 25322, "bugNodeLength": 84, "fixLineNum": 749, "fixNodeStartChar": 24574, "fixNodeLength": 86, "sourceBeforeFix": "GL20.glUniformMatrix2(location,transpose,toFloatBuffer(value,offset,count << 2))", "sourceAfterFix": "GL20.glUniformMatrix2fv(location,transpose,toFloatBuffer(value,offset,count << 2))"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 753, "bugNodeStartChar": 25516, "bugNodeLength": 49, "fixLineNum": 753, "fixNodeStartChar": 24764, "fixNodeLength": 51, "sourceBeforeFix": "GL20.glUniformMatrix3(location,transpose,value)", "sourceAfterFix": "GL20.glUniformMatrix3fv(location,transpose,value)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 753, "bugNodeStartChar": 25516, "bugNodeLength": 49, "fixLineNum": 753, "fixNodeStartChar": 24764, "fixNodeLength": 51, "sourceBeforeFix": "GL20.glUniformMatrix3(location,transpose,value)", "sourceAfterFix": "GL20.glUniformMatrix3fv(location,transpose,value)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 757, "bugNodeStartChar": 25683, "bugNodeLength": 83, "fixLineNum": 757, "fixNodeStartChar": 24927, "fixNodeLength": 85, "sourceBeforeFix": "GL20.glUniformMatrix3(location,transpose,toFloatBuffer(value,offset,count * 9))", "sourceAfterFix": "GL20.glUniformMatrix3fv(location,transpose,toFloatBuffer(value,offset,count * 9))"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 757, "bugNodeStartChar": 25683, "bugNodeLength": 83, "fixLineNum": 757, "fixNodeStartChar": 24927, "fixNodeLength": 85, "sourceBeforeFix": "GL20.glUniformMatrix3(location,transpose,toFloatBuffer(value,offset,count * 9))", "sourceAfterFix": "GL20.glUniformMatrix3fv(location,transpose,toFloatBuffer(value,offset,count * 9))"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 761, "bugNodeStartChar": 25876, "bugNodeLength": 49, "fixLineNum": 761, "fixNodeStartChar": 25116, "fixNodeLength": 51, "sourceBeforeFix": "GL20.glUniformMatrix4(location,transpose,value)", "sourceAfterFix": "GL20.glUniformMatrix4fv(location,transpose,value)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 761, "bugNodeStartChar": 25876, "bugNodeLength": 49, "fixLineNum": 761, "fixNodeStartChar": 25116, "fixNodeLength": 51, "sourceBeforeFix": "GL20.glUniformMatrix4(location,transpose,value)", "sourceAfterFix": "GL20.glUniformMatrix4fv(location,transpose,value)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 765, "bugNodeStartChar": 26043, "bugNodeLength": 84, "fixLineNum": 765, "fixNodeStartChar": 25279, "fixNodeLength": 86, "sourceBeforeFix": "GL20.glUniformMatrix4(location,transpose,toFloatBuffer(value,offset,count << 4))", "sourceAfterFix": "GL20.glUniformMatrix4fv(location,transpose,toFloatBuffer(value,offset,count << 4))"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50", "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 765, "bugNodeStartChar": 26043, "bugNodeLength": 84, "fixLineNum": 765, "fixNodeStartChar": 25279, "fixNodeLength": 86, "sourceBeforeFix": "GL20.glUniformMatrix4(location,transpose,toFloatBuffer(value,offset,count << 4))", "sourceAfterFix": "GL20.glUniformMatrix4fv(location,transpose,toFloatBuffer(value,offset,count << 4))"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "932ee6484938ca8aee7266efec14e85f310c07b3", "fixCommitParentSHA1": "1ee472bdf1c423802893c850768fb81523912b70", "bugFilePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/shadows/system/FirstPassBaseShadowSystem.java", "fixPatch": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/shadows/system/FirstPassBaseShadowSystem.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/shadows/system/FirstPassBaseShadowSystem.java\nindex 9fe937c..cefd722 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/shadows/system/FirstPassBaseShadowSystem.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/shadows/system/FirstPassBaseShadowSystem.java\n@@ -53,7 +53,7 @@\n \n \t@Override\n \tprotected void endPass (int n) {\n-\t\tsuper.beginPass(n);\n+\t\tsuper.endPass(n);\n \t\tif (n == FIRST_PASS) endPass1();\n \t};\n \n", "projectName": "libgdx.libgdx", "bugLineNum": 56, "bugNodeStartChar": 1806, "bugNodeLength": 18, "fixLineNum": 56, "fixNodeStartChar": 1806, "fixNodeLength": 16, "sourceBeforeFix": "super.beginPass(n)", "sourceAfterFix": "super.endPass(n)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "cb9f6dc4ff4aa6b605c18ac6c1258d7e94e33831", "fixCommitParentSHA1": "d64620802bf0ed0dad6881158da32acf25e8055a", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/glutils/GLFrameBuffer.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/GLFrameBuffer.java b/gdx/src/com/badlogic/gdx/graphics/glutils/GLFrameBuffer.java\nindex 4029b8e..95b34e9 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/glutils/GLFrameBuffer.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/GLFrameBuffer.java\n@@ -238,7 +238,7 @@\n \t\tdisposeColorTexture(colorTexture);\n \n \t\tif (hasDepthStencilPackedBuffer) {\n-\t\t\tgl.glDeleteBuffer(depthStencilPackedBufferHandle);\n+\t\t\tgl.glDeleteRenderbuffer(depthStencilPackedBufferHandle);\n \t\t} else {\n \t\t\tif (hasDepth) gl.glDeleteRenderbuffer(depthbufferHandle);\n \t\t\tif (hasStencil) gl.glDeleteRenderbuffer(stencilbufferHandle);\n", "projectName": "libgdx.libgdx", "bugLineNum": 241, "bugNodeStartChar": 9097, "bugNodeLength": 49, "fixLineNum": 241, "fixNodeStartChar": 9097, "fixNodeLength": 55, "sourceBeforeFix": "gl.glDeleteBuffer(depthStencilPackedBufferHandle)", "sourceAfterFix": "gl.glDeleteRenderbuffer(depthStencilPackedBufferHandle)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "cb9f6dc4ff4aa6b605c18ac6c1258d7e94e33831", "fixCommitParentSHA1": "d64620802bf0ed0dad6881158da32acf25e8055a", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/glutils/GLFrameBuffer.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/GLFrameBuffer.java b/gdx/src/com/badlogic/gdx/graphics/glutils/GLFrameBuffer.java\nindex 4029b8e..95b34e9 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/glutils/GLFrameBuffer.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/GLFrameBuffer.java\n@@ -238,7 +238,7 @@\n \t\tdisposeColorTexture(colorTexture);\n \n \t\tif (hasDepthStencilPackedBuffer) {\n-\t\t\tgl.glDeleteBuffer(depthStencilPackedBufferHandle);\n+\t\t\tgl.glDeleteRenderbuffer(depthStencilPackedBufferHandle);\n \t\t} else {\n \t\t\tif (hasDepth) gl.glDeleteRenderbuffer(depthbufferHandle);\n \t\t\tif (hasStencil) gl.glDeleteRenderbuffer(stencilbufferHandle);\n", "projectName": "libgdx.libgdx", "bugLineNum": 241, "bugNodeStartChar": 9097, "bugNodeLength": 49, "fixLineNum": 241, "fixNodeStartChar": 9097, "fixNodeLength": 55, "sourceBeforeFix": "gl.glDeleteBuffer(depthStencilPackedBufferHandle)", "sourceAfterFix": "gl.glDeleteRenderbuffer(depthStencilPackedBufferHandle)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "24f4e5797f7957b42069dc0989afad49bf9918da", "fixCommitParentSHA1": "d64620802bf0ed0dad6881158da32acf25e8055a", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/glutils/GLFrameBuffer.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/GLFrameBuffer.java b/gdx/src/com/badlogic/gdx/graphics/glutils/GLFrameBuffer.java\nindex 4029b8e..95b34e9 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/glutils/GLFrameBuffer.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/GLFrameBuffer.java\n@@ -238,7 +238,7 @@\n \t\tdisposeColorTexture(colorTexture);\n \n \t\tif (hasDepthStencilPackedBuffer) {\n-\t\t\tgl.glDeleteBuffer(depthStencilPackedBufferHandle);\n+\t\t\tgl.glDeleteRenderbuffer(depthStencilPackedBufferHandle);\n \t\t} else {\n \t\t\tif (hasDepth) gl.glDeleteRenderbuffer(depthbufferHandle);\n \t\t\tif (hasStencil) gl.glDeleteRenderbuffer(stencilbufferHandle);\n", "projectName": "libgdx.libgdx", "bugLineNum": 241, "bugNodeStartChar": 9097, "bugNodeLength": 49, "fixLineNum": 241, "fixNodeStartChar": 9097, "fixNodeLength": 55, "sourceBeforeFix": "gl.glDeleteBuffer(depthStencilPackedBufferHandle)", "sourceAfterFix": "gl.glDeleteRenderbuffer(depthStencilPackedBufferHandle)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "24f4e5797f7957b42069dc0989afad49bf9918da", "fixCommitParentSHA1": "d64620802bf0ed0dad6881158da32acf25e8055a", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/glutils/GLFrameBuffer.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/GLFrameBuffer.java b/gdx/src/com/badlogic/gdx/graphics/glutils/GLFrameBuffer.java\nindex 4029b8e..95b34e9 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/glutils/GLFrameBuffer.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/GLFrameBuffer.java\n@@ -238,7 +238,7 @@\n \t\tdisposeColorTexture(colorTexture);\n \n \t\tif (hasDepthStencilPackedBuffer) {\n-\t\t\tgl.glDeleteBuffer(depthStencilPackedBufferHandle);\n+\t\t\tgl.glDeleteRenderbuffer(depthStencilPackedBufferHandle);\n \t\t} else {\n \t\t\tif (hasDepth) gl.glDeleteRenderbuffer(depthbufferHandle);\n \t\t\tif (hasStencil) gl.glDeleteRenderbuffer(stencilbufferHandle);\n", "projectName": "libgdx.libgdx", "bugLineNum": 241, "bugNodeStartChar": 9097, "bugNodeLength": 49, "fixLineNum": 241, "fixNodeStartChar": 9097, "fixNodeLength": 55, "sourceBeforeFix": "gl.glDeleteBuffer(depthStencilPackedBufferHandle)", "sourceAfterFix": "gl.glDeleteRenderbuffer(depthStencilPackedBufferHandle)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "15408f1e26096217a62737eb40d394413befb12b", "fixCommitParentSHA1": "61d0619ce1be40709b40c4e9cdf4169a96923d93", "bugFilePath": "backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglCursor.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglCursor.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglCursor.java\nindex f07b187..a4ae201 100644\n--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglCursor.java\n+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglCursor.java\n@@ -80,7 +80,7 @@\n \t\t\t}\n \n \t\t\tlwjglCursor = new org.lwjgl.input.Cursor(pixmap.getWidth(), pixmap.getHeight(), xHotspot, pixmap.getHeight() - yHotspot\n-\t\t\t\t- 4, 1, IntBuffer.wrap(pixelsARGBflipped), null);\n+\t\t\t\t- 1, 1, IntBuffer.wrap(pixelsARGBflipped), null);\n \t\t} catch (LWJGLException e) {\n \t\t\tthrow new GdxRuntimeException(\"Could not create cursor image.\", e);\n \t\t}\n", "projectName": "libgdx.libgdx", "bugLineNum": 82, "bugNodeStartChar": 2854, "bugNodeLength": 37, "fixLineNum": 82, "fixNodeStartChar": 2854, "fixNodeLength": 37, "sourceBeforeFix": "pixmap.getHeight() - yHotspot - 4", "sourceAfterFix": "pixmap.getHeight() - yHotspot - 1"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "54fc510a45928b0f76eec4ec4f3e9e14db0dfb2a", "fixCommitParentSHA1": "75b2d88d2a1e81aaef5eba9bea116bf3f9fa967d", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/Color.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/Color.java b/gdx/src/com/badlogic/gdx/graphics/Color.java\nindex debb9f5..ed308b7 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/Color.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/Color.java\n@@ -27,7 +27,7 @@\n \tpublic static final Color BLACK = new Color(0, 0, 0, 1);\n \n \tpublic static final Color WHITE = new Color(0xffffffff);\n-\tpublic static final Color LIGHT_GRAY = new Color(0x696969ff);\n+\tpublic static final Color LIGHT_GRAY = new Color(0xbfbfbfff);\n \tpublic static final Color GRAY = new Color(0x7f7f7fff);\n \tpublic static final Color DARK_GRAY = new Color(0x3f3f3fff);\n \tpublic static final Color SLATE = new Color(0x708090ff);\n", "projectName": "libgdx.libgdx", "bugLineNum": 30, "bugNodeStartChar": 1262, "bugNodeLength": 21, "fixLineNum": 30, "fixNodeStartChar": 1262, "fixNodeLength": 21, "sourceBeforeFix": "new Color(0x696969ff)", "sourceAfterFix": "new Color(0xbfbfbfff)"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "e3a42e5c99e0f930a89fe267cb7cb141d421ddf0", "fixCommitParentSHA1": "4d9637de4cb6ce8866b25c2da2d432c68d1ed942", "bugFilePath": "gdx/src/com/badlogic/gdx/math/Intersector.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/Intersector.java b/gdx/src/com/badlogic/gdx/math/Intersector.java\nindex 25e9070..64d7d76 100644\n--- a/gdx/src/com/badlogic/gdx/math/Intersector.java\n+++ b/gdx/src/com/badlogic/gdx/math/Intersector.java\n@@ -1056,13 +1056,13 @@\n \n \t\t// set number of triangles\n \t\tsplit.total = 3;\n-\t\tsplit.numFront = (r1 ? 1 : 0) + (r2 ? 1 : 0) + (r3 ? 1 : 0);\n+\t\tsplit.numFront = (r1 ? 0 : 1) + (r2 ? 0 : 1) + (r3 ? 0 : 1);\n \t\tsplit.numBack = split.total - split.numFront;\n \n \t\t// hard case, split the three edges on the plane\n \t\t// determine which array to fill first, front or back, flip if we\n \t\t// cross the plane\n-\t\tsplit.setSide(r1);\n+\t\tsplit.setSide(!r1);\n \n \t\t// split first edge\n \t\tint first = 0;\n", "projectName": "libgdx.libgdx", "bugLineNum": 1065, "bugNodeStartChar": 39799, "bugNodeLength": 2, "fixLineNum": 1065, "fixNodeStartChar": 39799, "fixNodeLength": 3, "sourceBeforeFix": "r1", "sourceAfterFix": "!r1"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "0a009cf81ca7080d309645be82248c86b0a108f4", "fixCommitParentSHA1": "55c5a02eefdebe33be2bf5930f6d56c227196468", "bugFilePath": "gdx/src/com/badlogic/gdx/math/Intersector.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/Intersector.java b/gdx/src/com/badlogic/gdx/math/Intersector.java\nindex 6221fb2..50f38e8 100644\n--- a/gdx/src/com/badlogic/gdx/math/Intersector.java\n+++ b/gdx/src/com/badlogic/gdx/math/Intersector.java\n@@ -1056,13 +1056,13 @@\n \n \t\t// set number of triangles\n \t\tsplit.total = 3;\n-\t\tsplit.numFront = (r1 ? 1 : 0) + (r2 ? 1 : 0) + (r3 ? 1 : 0);\n+\t\tsplit.numFront = (r1 ? 0 : 1) + (r2 ? 0 : 1) + (r3 ? 0 : 1);\n \t\tsplit.numBack = split.total - split.numFront;\n \n \t\t// hard case, split the three edges on the plane\n \t\t// determine which array to fill first, front or back, flip if we\n \t\t// cross the plane\n-\t\tsplit.setSide(r1);\n+\t\tsplit.setSide(!r1);\n \n \t\t// split first edge\n \t\tint first = 0;\n", "projectName": "libgdx.libgdx", "bugLineNum": 1065, "bugNodeStartChar": 39799, "bugNodeLength": 2, "fixLineNum": 1065, "fixNodeStartChar": 39799, "fixNodeLength": 3, "sourceBeforeFix": "r1", "sourceAfterFix": "!r1"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "031f769fa3c610748b48bc105b4518c880161d0a", "fixCommitParentSHA1": "fc0c5e6b5eed8b1cdd5f96474495cc9520ecf016", "bugFilePath": "extensions/gdx-box2d/gdx-box2d/src/com/badlogic/gdx/physics/box2d/joints/WheelJoint.java", "fixPatch": "diff --git a/extensions/gdx-box2d/gdx-box2d/src/com/badlogic/gdx/physics/box2d/joints/WheelJoint.java b/extensions/gdx-box2d/gdx-box2d/src/com/badlogic/gdx/physics/box2d/joints/WheelJoint.java\nindex e39549c..7bbdbd4 100644\n--- a/extensions/gdx-box2d/gdx-box2d/src/com/badlogic/gdx/physics/box2d/joints/WheelJoint.java\n+++ b/extensions/gdx-box2d/gdx-box2d/src/com/badlogic/gdx/physics/box2d/joints/WheelJoint.java\n@@ -52,7 +52,7 @@\n \t*/\n \n \tpublic Vector2 getLocalAnchorB () {\n-\t\tjniGetLocalAnchorA(addr, tmp);\n+\t\tjniGetLocalAnchorB(addr, tmp);\n \t\tlocalAnchorB.set(tmp[0], tmp[1]);\n \t\treturn localAnchorB;\n \t}\n@@ -64,7 +64,7 @@\n \t*/\n \n \tpublic Vector2 getLocalAxisA(){\n-\t\tjniGetLocalAnchorA(addr, tmp);\n+\t\tjniGetLocalAxisA(addr, tmp);\n \t\tlocalAxisA.set(tmp[0], tmp[1]);\n \t\treturn localAxisA;\n \t}\n", "projectName": "libgdx.libgdx", "bugLineNum": 55, "bugNodeStartChar": 1995, "bugNodeLength": 29, "fixLineNum": 55, "fixNodeStartChar": 1995, "fixNodeLength": 29, "sourceBeforeFix": "jniGetLocalAnchorA(addr,tmp)", "sourceAfterFix": "jniGetLocalAnchorB(addr,tmp)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "031f769fa3c610748b48bc105b4518c880161d0a", "fixCommitParentSHA1": "fc0c5e6b5eed8b1cdd5f96474495cc9520ecf016", "bugFilePath": "extensions/gdx-box2d/gdx-box2d/src/com/badlogic/gdx/physics/box2d/joints/WheelJoint.java", "fixPatch": "diff --git a/extensions/gdx-box2d/gdx-box2d/src/com/badlogic/gdx/physics/box2d/joints/WheelJoint.java b/extensions/gdx-box2d/gdx-box2d/src/com/badlogic/gdx/physics/box2d/joints/WheelJoint.java\nindex e39549c..7bbdbd4 100644\n--- a/extensions/gdx-box2d/gdx-box2d/src/com/badlogic/gdx/physics/box2d/joints/WheelJoint.java\n+++ b/extensions/gdx-box2d/gdx-box2d/src/com/badlogic/gdx/physics/box2d/joints/WheelJoint.java\n@@ -52,7 +52,7 @@\n \t*/\n \n \tpublic Vector2 getLocalAnchorB () {\n-\t\tjniGetLocalAnchorA(addr, tmp);\n+\t\tjniGetLocalAnchorB(addr, tmp);\n \t\tlocalAnchorB.set(tmp[0], tmp[1]);\n \t\treturn localAnchorB;\n \t}\n@@ -64,7 +64,7 @@\n \t*/\n \n \tpublic Vector2 getLocalAxisA(){\n-\t\tjniGetLocalAnchorA(addr, tmp);\n+\t\tjniGetLocalAxisA(addr, tmp);\n \t\tlocalAxisA.set(tmp[0], tmp[1]);\n \t\treturn localAxisA;\n \t}\n", "projectName": "libgdx.libgdx", "bugLineNum": 55, "bugNodeStartChar": 1995, "bugNodeLength": 29, "fixLineNum": 55, "fixNodeStartChar": 1995, "fixNodeLength": 29, "sourceBeforeFix": "jniGetLocalAnchorA(addr,tmp)", "sourceAfterFix": "jniGetLocalAnchorB(addr,tmp)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "031f769fa3c610748b48bc105b4518c880161d0a", "fixCommitParentSHA1": "fc0c5e6b5eed8b1cdd5f96474495cc9520ecf016", "bugFilePath": "extensions/gdx-box2d/gdx-box2d/src/com/badlogic/gdx/physics/box2d/joints/WheelJoint.java", "fixPatch": "diff --git a/extensions/gdx-box2d/gdx-box2d/src/com/badlogic/gdx/physics/box2d/joints/WheelJoint.java b/extensions/gdx-box2d/gdx-box2d/src/com/badlogic/gdx/physics/box2d/joints/WheelJoint.java\nindex e39549c..7bbdbd4 100644\n--- a/extensions/gdx-box2d/gdx-box2d/src/com/badlogic/gdx/physics/box2d/joints/WheelJoint.java\n+++ b/extensions/gdx-box2d/gdx-box2d/src/com/badlogic/gdx/physics/box2d/joints/WheelJoint.java\n@@ -52,7 +52,7 @@\n \t*/\n \n \tpublic Vector2 getLocalAnchorB () {\n-\t\tjniGetLocalAnchorA(addr, tmp);\n+\t\tjniGetLocalAnchorB(addr, tmp);\n \t\tlocalAnchorB.set(tmp[0], tmp[1]);\n \t\treturn localAnchorB;\n \t}\n@@ -64,7 +64,7 @@\n \t*/\n \n \tpublic Vector2 getLocalAxisA(){\n-\t\tjniGetLocalAnchorA(addr, tmp);\n+\t\tjniGetLocalAxisA(addr, tmp);\n \t\tlocalAxisA.set(tmp[0], tmp[1]);\n \t\treturn localAxisA;\n \t}\n", "projectName": "libgdx.libgdx", "bugLineNum": 67, "bugNodeStartChar": 2330, "bugNodeLength": 29, "fixLineNum": 67, "fixNodeStartChar": 2330, "fixNodeLength": 27, "sourceBeforeFix": "jniGetLocalAnchorA(addr,tmp)", "sourceAfterFix": "jniGetLocalAxisA(addr,tmp)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "031f769fa3c610748b48bc105b4518c880161d0a", "fixCommitParentSHA1": "fc0c5e6b5eed8b1cdd5f96474495cc9520ecf016", "bugFilePath": "extensions/gdx-box2d/gdx-box2d/src/com/badlogic/gdx/physics/box2d/joints/WheelJoint.java", "fixPatch": "diff --git a/extensions/gdx-box2d/gdx-box2d/src/com/badlogic/gdx/physics/box2d/joints/WheelJoint.java b/extensions/gdx-box2d/gdx-box2d/src/com/badlogic/gdx/physics/box2d/joints/WheelJoint.java\nindex e39549c..7bbdbd4 100644\n--- a/extensions/gdx-box2d/gdx-box2d/src/com/badlogic/gdx/physics/box2d/joints/WheelJoint.java\n+++ b/extensions/gdx-box2d/gdx-box2d/src/com/badlogic/gdx/physics/box2d/joints/WheelJoint.java\n@@ -52,7 +52,7 @@\n \t*/\n \n \tpublic Vector2 getLocalAnchorB () {\n-\t\tjniGetLocalAnchorA(addr, tmp);\n+\t\tjniGetLocalAnchorB(addr, tmp);\n \t\tlocalAnchorB.set(tmp[0], tmp[1]);\n \t\treturn localAnchorB;\n \t}\n@@ -64,7 +64,7 @@\n \t*/\n \n \tpublic Vector2 getLocalAxisA(){\n-\t\tjniGetLocalAnchorA(addr, tmp);\n+\t\tjniGetLocalAxisA(addr, tmp);\n \t\tlocalAxisA.set(tmp[0], tmp[1]);\n \t\treturn localAxisA;\n \t}\n", "projectName": "libgdx.libgdx", "bugLineNum": 67, "bugNodeStartChar": 2330, "bugNodeLength": 29, "fixLineNum": 67, "fixNodeStartChar": 2330, "fixNodeLength": 27, "sourceBeforeFix": "jniGetLocalAnchorA(addr,tmp)", "sourceAfterFix": "jniGetLocalAxisA(addr,tmp)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "6899744572ba4d61d410f4fd039109da97cbf977", "fixCommitParentSHA1": "d875ce329a09f5a4cdfdfbfad6d5b952e2a4590e", "bugFilePath": "gdx/src/com/badlogic/gdx/math/Quaternion.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/Quaternion.java b/gdx/src/com/badlogic/gdx/math/Quaternion.java\nindex 834492a..02a599f 100644\n--- a/gdx/src/com/badlogic/gdx/math/Quaternion.java\n+++ b/gdx/src/com/badlogic/gdx/math/Quaternion.java\n@@ -501,7 +501,7 @@\n \t\t\txx *= lx;\r\n \t\t\txy *= lx;\r\n \t\t\txz *= lx;\r\n-\t\t\tyz *= ly;\r\n+\t\t\tyx *= ly;\r\n \t\t\tyy *= ly;\r\n \t\t\tyz *= ly;\r\n \t\t\tzx *= lz;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 504, "bugNodeStartChar": 19748, "bugNodeLength": 8, "fixLineNum": 504, "fixNodeStartChar": 19245, "fixNodeLength": 8, "sourceBeforeFix": "yz*=ly", "sourceAfterFix": "yx*=ly"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "ec729c57f331ebdce98a63d413210dc6496fff2c", "fixCommitParentSHA1": "a6b59e6b5743d936b13c4996d7a8828dc21c6680", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java\nindex 1c4a870..dc228a6 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java\n@@ -806,7 +806,7 @@\n \t\t\tset(u_fogColor, ((ColorAttribute)attributes.get(ColorAttribute.Fog)).color);\r\n \t\t}\r\n \r\n-\t\tif (lights.shadowMap != null) {\r\n+\t\tif (lights != null && lights.shadowMap != null) {\r\n \t\t\tset(u_shadowMapProjViewTrans, lights.shadowMap.getProjViewTrans());\r\n \t\t\tset(u_shadowTexture, lights.shadowMap.getDepthMap());\r\n \t\t\tset(u_shadowPCFOffset, 1.f / (float)(2f * lights.shadowMap.getDepthMap().texture.getWidth()));\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 809, "bugNodeStartChar": 40026, "bugNodeLength": 24, "fixLineNum": 809, "fixNodeStartChar": 39218, "fixNodeLength": 42, "sourceBeforeFix": "lights.shadowMap != null", "sourceAfterFix": "lights != null && lights.shadowMap != null"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "0836338de51bb11727e95561e8526829e4bd2b26", "fixCommitParentSHA1": "0b20b5d39a005e00dbc68052b78ccce4945e18f9", "bugFilePath": "gdx/src/com/badlogic/gdx/math/Polyline.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/Polyline.java b/gdx/src/com/badlogic/gdx/math/Polyline.java\nindex 417efcb..a2945c2 100644\n--- a/gdx/src/com/badlogic/gdx/math/Polyline.java\n+++ b/gdx/src/com/badlogic/gdx/math/Polyline.java\n@@ -17,7 +17,7 @@\n package com.badlogic.gdx.math;\n \n public class Polyline implements Shape2D {\n-\tprivate final float[] localVertices;\n+\tprivate float[] localVertices;\n \tprivate float[] worldVertices;\n \tprivate float x, y;\n \tprivate float originX, originY;\n", "projectName": "libgdx.libgdx", "bugLineNum": 20, "bugNodeStartChar": 834, "bugNodeLength": 36, "fixLineNum": 20, "fixNodeStartChar": 834, "fixNodeLength": 30, "sourceBeforeFix": "18", "sourceAfterFix": "2"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "08dd146508c894b3746092b2320c0eae64956d65", "fixCommitParentSHA1": "0b20b5d39a005e00dbc68052b78ccce4945e18f9", "bugFilePath": "gdx/src/com/badlogic/gdx/math/Polyline.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/Polyline.java b/gdx/src/com/badlogic/gdx/math/Polyline.java\nindex 417efcb..a2945c2 100644\n--- a/gdx/src/com/badlogic/gdx/math/Polyline.java\n+++ b/gdx/src/com/badlogic/gdx/math/Polyline.java\n@@ -17,7 +17,7 @@\n package com.badlogic.gdx.math;\n \n public class Polyline implements Shape2D {\n-\tprivate final float[] localVertices;\n+\tprivate float[] localVertices;\n \tprivate float[] worldVertices;\n \tprivate float x, y;\n \tprivate float originX, originY;\n", "projectName": "libgdx.libgdx", "bugLineNum": 20, "bugNodeStartChar": 834, "bugNodeLength": 36, "fixLineNum": 20, "fixNodeStartChar": 834, "fixNodeLength": 30, "sourceBeforeFix": "18", "sourceAfterFix": "2"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "6b415679e1fd7d46122b8a4ddadd4fa422c635ca", "fixCommitParentSHA1": "e97cd820e3487689109924f2bdce4d5697c5915b", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g2d/GlyphLayout.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/GlyphLayout.java b/gdx/src/com/badlogic/gdx/graphics/g2d/GlyphLayout.java\nindex 5a16900..eb7eae4 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g2d/GlyphLayout.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/GlyphLayout.java\n@@ -327,7 +327,7 @@\n \t\t\t\t\tif (i < start + 2 || i > start + 9) break; // Illegal number of hex digits.\n \t\t\t\t\tColor color = colorPool.obtain();\n \t\t\t\t\tcolorStack.add(color);\n-\t\t\t\t\tColor.rgb888ToColor(color, colorInt);\n+\t\t\t\t\tColor.rgba8888ToColor(color, colorInt);\n \t\t\t\t\tif (i <= start + 7) color.a = 1f; // RRGGBB\n \t\t\t\t\treturn i - start;\n \t\t\t\t}\n", "projectName": "libgdx.libgdx", "bugLineNum": 330, "bugNodeStartChar": 12084, "bugNodeLength": 36, "fixLineNum": 330, "fixNodeStartChar": 12084, "fixNodeLength": 38, "sourceBeforeFix": "Color.rgb888ToColor(color,colorInt)", "sourceAfterFix": "Color.rgba8888ToColor(color,colorInt)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "6b415679e1fd7d46122b8a4ddadd4fa422c635ca", "fixCommitParentSHA1": "e97cd820e3487689109924f2bdce4d5697c5915b", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g2d/GlyphLayout.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/GlyphLayout.java b/gdx/src/com/badlogic/gdx/graphics/g2d/GlyphLayout.java\nindex 5a16900..eb7eae4 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g2d/GlyphLayout.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/GlyphLayout.java\n@@ -327,7 +327,7 @@\n \t\t\t\t\tif (i < start + 2 || i > start + 9) break; // Illegal number of hex digits.\n \t\t\t\t\tColor color = colorPool.obtain();\n \t\t\t\t\tcolorStack.add(color);\n-\t\t\t\t\tColor.rgb888ToColor(color, colorInt);\n+\t\t\t\t\tColor.rgba8888ToColor(color, colorInt);\n \t\t\t\t\tif (i <= start + 7) color.a = 1f; // RRGGBB\n \t\t\t\t\treturn i - start;\n \t\t\t\t}\n", "projectName": "libgdx.libgdx", "bugLineNum": 330, "bugNodeStartChar": 12084, "bugNodeLength": 36, "fixLineNum": 330, "fixNodeStartChar": 12084, "fixNodeLength": 38, "sourceBeforeFix": "Color.rgb888ToColor(color,colorInt)", "sourceAfterFix": "Color.rgba8888ToColor(color,colorInt)"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "99c80d46120531f2e404425063587cb9961a7e3c", "fixCommitParentSHA1": "7b16e4b0f1aa1596f4ede7b3a7886591c42bda05", "bugFilePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java", "fixPatch": "diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java\nindex 31ccd08..8702e62 100644\n--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java\n+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java\n@@ -85,7 +85,7 @@\n \t}\n \n \tprivate static final NSObjectWrapper<UITouch> UI_TOUCH_WRAPPER = new NSObjectWrapper<UITouch>(UITouch.class);\n-\tprivate static final NSObjectWrapper<UIAcceleration> UI_ACCELERATION_WRAPPER = new NSObjectWrapper<UIAcceleration>(UIAcceleration.class);\n+\tstatic final NSObjectWrapper<UIAcceleration> UI_ACCELERATION_WRAPPER = new NSObjectWrapper<UIAcceleration>(UIAcceleration.class);\n \t\n \tIOSApplication app;\n \tIOSApplicationConfiguration config;\n", "projectName": "libgdx.libgdx", "bugLineNum": 88, "bugNodeStartChar": 3496, "bugNodeLength": 137, "fixLineNum": 88, "fixNodeStartChar": 3496, "fixNodeLength": 129, "sourceBeforeFix": "26", "sourceAfterFix": "24"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "7b16e4b0f1aa1596f4ede7b3a7886591c42bda05", "fixCommitParentSHA1": "1b2ba9c660c68beabea9161e00f64774e892676e", "bugFilePath": "tests/gdx-tests-android/src/com/badlogic/gdx/tests/android/MatrixTest.java", "fixPatch": "diff --git a/tests/gdx-tests-android/src/com/badlogic/gdx/tests/android/MatrixTest.java b/tests/gdx-tests-android/src/com/badlogic/gdx/tests/android/MatrixTest.java\nindex 141cf15..f922ffb 100644\n--- a/tests/gdx-tests-android/src/com/badlogic/gdx/tests/android/MatrixTest.java\n+++ b/tests/gdx-tests-android/src/com/badlogic/gdx/tests/android/MatrixTest.java\n@@ -75,7 +75,7 @@\n \tpublic void render () {\r\n \t\tGdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);\r\n \t\tbatch.begin();\r\n-\t\tfont.drawMultiLine(batch, results, 20, 300);\r\n+\t\tfont.draw(batch, results, 20, 300);\r\n \t\tbatch.end();\r\n \t}\r\n }\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 78, "bugNodeStartChar": 2243, "bugNodeLength": 43, "fixLineNum": 78, "fixNodeStartChar": 2166, "fixNodeLength": 34, "sourceBeforeFix": "font.drawMultiLine(batch,results,20,300)", "sourceAfterFix": "font.draw(batch,results,20,300)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "7b16e4b0f1aa1596f4ede7b3a7886591c42bda05", "fixCommitParentSHA1": "1b2ba9c660c68beabea9161e00f64774e892676e", "bugFilePath": "tests/gdx-tests-android/src/com/badlogic/gdx/tests/android/MatrixTest.java", "fixPatch": "diff --git a/tests/gdx-tests-android/src/com/badlogic/gdx/tests/android/MatrixTest.java b/tests/gdx-tests-android/src/com/badlogic/gdx/tests/android/MatrixTest.java\nindex 141cf15..f922ffb 100644\n--- a/tests/gdx-tests-android/src/com/badlogic/gdx/tests/android/MatrixTest.java\n+++ b/tests/gdx-tests-android/src/com/badlogic/gdx/tests/android/MatrixTest.java\n@@ -75,7 +75,7 @@\n \tpublic void render () {\r\n \t\tGdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);\r\n \t\tbatch.begin();\r\n-\t\tfont.drawMultiLine(batch, results, 20, 300);\r\n+\t\tfont.draw(batch, results, 20, 300);\r\n \t\tbatch.end();\r\n \t}\r\n }\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 78, "bugNodeStartChar": 2243, "bugNodeLength": 43, "fixLineNum": 78, "fixNodeStartChar": 2166, "fixNodeLength": 34, "sourceBeforeFix": "font.drawMultiLine(batch,results,20,300)", "sourceAfterFix": "font.draw(batch,results,20,300)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "2798f6edf82b64780fd846aaa5b860185c87f915", "fixCommitParentSHA1": "b041bcdeb2b96589efd6e6058fb0ba9dc630e949", "bugFilePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java", "fixPatch": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java\nindex ec80980..73f13c3 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java\n@@ -141,7 +141,7 @@\n \t\tkoala.stateTime += deltaTime;\r\n \r\n \t\t// check input and apply to velocity & state\r\n-\t\tif ((Gdx.input.isKeyPressed(Keys.SPACE) || isTouched(0.75f, 1)) && koala.grounded) {\r\n+\t\tif ((Gdx.input.isKeyPressed(Keys.SPACE) || isTouched(0.5f, 1)) && koala.grounded) {\r\n \t\t\tkoala.velocity.y += Koala.JUMP_VELOCITY;\r\n \t\t\tkoala.state = Koala.State.Jumping;\r\n \t\t\tkoala.grounded = false;\r\n@@ -219,7 +219,7 @@\n \t\t\t\tif (koala.velocity.y > 0) {\r\n \t\t\t\t\tkoala.position.y = tile.y - Koala.HEIGHT;\r\n \t\t\t\t\t// we hit a block jumping upwards, let's destroy it!\r\n-\t\t\t\t\tTiledMapTileLayer layer = (TiledMapTileLayer)map.getLayers().get(1);\r\n+\t\t\t\t\tTiledMapTileLayer layer = (TiledMapTileLayer)map.getLayers().get(\"walls\");\r\n \t\t\t\t\tlayer.setCell((int)tile.x, (int)tile.y, null);\r\n \t\t\t\t} else {\r\n \t\t\t\t\tkoala.position.y = tile.y + tile.height;\r\n@@ -247,7 +247,7 @@\n \t\t// check if any finge is touch the area between startX and endX\r\n \t\t// startX/endX are given between 0 (left edge of the screen) and 1 (right edge of the screen)\r\n \t\tfor (int i = 0; i < 2; i++) {\r\n-\t\t\tfloat x = Gdx.input.getX() / (float)Gdx.graphics.getWidth();\r\n+\t\t\tfloat x = Gdx.input.getX(i) / (float)Gdx.graphics.getWidth();\r\n \t\t\tif (Gdx.input.isTouched(i) && (x >= startX && x <= endX)) {\r\n \t\t\t\treturn true;\r\n \t\t\t}\r\n@@ -256,7 +256,7 @@\n \t}\r\n \r\n \tprivate void getTiles (int startX, int startY, int endX, int endY, Array<Rectangle> tiles) {\r\n-\t\tTiledMapTileLayer layer = (TiledMapTileLayer)map.getLayers().get(1);\r\n+\t\tTiledMapTileLayer layer = (TiledMapTileLayer)map.getLayers().get(\"walls\");\r\n \t\trectPool.freeAll(tiles);\r\n \t\ttiles.clear();\r\n \t\tfor (int y = startY; y <= endY; y++) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 144, "bugNodeStartChar": 5224, "bugNodeLength": 19, "fixLineNum": 144, "fixNodeStartChar": 5081, "fixNodeLength": 18, "sourceBeforeFix": "isTouched(0.75f,1)", "sourceAfterFix": "isTouched(0.5f,1)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "2798f6edf82b64780fd846aaa5b860185c87f915", "fixCommitParentSHA1": "b041bcdeb2b96589efd6e6058fb0ba9dc630e949", "bugFilePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java", "fixPatch": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java\nindex ec80980..73f13c3 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java\n@@ -141,7 +141,7 @@\n \t\tkoala.stateTime += deltaTime;\r\n \r\n \t\t// check input and apply to velocity & state\r\n-\t\tif ((Gdx.input.isKeyPressed(Keys.SPACE) || isTouched(0.75f, 1)) && koala.grounded) {\r\n+\t\tif ((Gdx.input.isKeyPressed(Keys.SPACE) || isTouched(0.5f, 1)) && koala.grounded) {\r\n \t\t\tkoala.velocity.y += Koala.JUMP_VELOCITY;\r\n \t\t\tkoala.state = Koala.State.Jumping;\r\n \t\t\tkoala.grounded = false;\r\n@@ -219,7 +219,7 @@\n \t\t\t\tif (koala.velocity.y > 0) {\r\n \t\t\t\t\tkoala.position.y = tile.y - Koala.HEIGHT;\r\n \t\t\t\t\t// we hit a block jumping upwards, let's destroy it!\r\n-\t\t\t\t\tTiledMapTileLayer layer = (TiledMapTileLayer)map.getLayers().get(1);\r\n+\t\t\t\t\tTiledMapTileLayer layer = (TiledMapTileLayer)map.getLayers().get(\"walls\");\r\n \t\t\t\t\tlayer.setCell((int)tile.x, (int)tile.y, null);\r\n \t\t\t\t} else {\r\n \t\t\t\t\tkoala.position.y = tile.y + tile.height;\r\n@@ -247,7 +247,7 @@\n \t\t// check if any finge is touch the area between startX and endX\r\n \t\t// startX/endX are given between 0 (left edge of the screen) and 1 (right edge of the screen)\r\n \t\tfor (int i = 0; i < 2; i++) {\r\n-\t\t\tfloat x = Gdx.input.getX() / (float)Gdx.graphics.getWidth();\r\n+\t\t\tfloat x = Gdx.input.getX(i) / (float)Gdx.graphics.getWidth();\r\n \t\t\tif (Gdx.input.isTouched(i) && (x >= startX && x <= endX)) {\r\n \t\t\t\treturn true;\r\n \t\t\t}\r\n@@ -256,7 +256,7 @@\n \t}\r\n \r\n \tprivate void getTiles (int startX, int startY, int endX, int endY, Array<Rectangle> tiles) {\r\n-\t\tTiledMapTileLayer layer = (TiledMapTileLayer)map.getLayers().get(1);\r\n+\t\tTiledMapTileLayer layer = (TiledMapTileLayer)map.getLayers().get(\"walls\");\r\n \t\trectPool.freeAll(tiles);\r\n \t\ttiles.clear();\r\n \t\tfor (int y = startY; y <= endY; y++) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 250, "bugNodeStartChar": 9160, "bugNodeLength": 16, "fixLineNum": 250, "fixNodeStartChar": 8911, "fixNodeLength": 17, "sourceBeforeFix": "Gdx.input.getX()", "sourceAfterFix": "Gdx.input.getX(i)"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "b041bcdeb2b96589efd6e6058fb0ba9dc630e949", "fixCommitParentSHA1": "8bf70562c09e416b9d7fd1f903f1ea8a9cb943a7", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g3d/model/Node.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/model/Node.java b/gdx/src/com/badlogic/gdx/graphics/g3d/model/Node.java\nindex 410f489..3208eef 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g3d/model/Node.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/model/Node.java\n@@ -199,7 +199,7 @@\n \t * @param child The Node to add as child of this Node\r\n \t * @return the zero-based index of the child */\r\n \tpublic <T extends Node> int insertChild (int index, final T child) {\r\n-\t\tfor (Node p = this; p != null; p = child.getParent()) {\r\n+\t\tfor (Node p = this; p != null; p = p.getParent()) {\r\n \t\t\tif (p == child) throw new GdxRuntimeException(\"Cannot add a parent as a child\");\r\n \t\t}\r\n \t\tNode p = child.getParent();\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 202, "bugNodeStartChar": 9075, "bugNodeLength": 17, "fixLineNum": 202, "fixNodeStartChar": 8874, "fixNodeLength": 13, "sourceBeforeFix": "child.getParent()", "sourceAfterFix": "p.getParent()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "b041bcdeb2b96589efd6e6058fb0ba9dc630e949", "fixCommitParentSHA1": "8bf70562c09e416b9d7fd1f903f1ea8a9cb943a7", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g3d/model/Node.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/model/Node.java b/gdx/src/com/badlogic/gdx/graphics/g3d/model/Node.java\nindex 410f489..3208eef 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g3d/model/Node.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/model/Node.java\n@@ -199,7 +199,7 @@\n \t * @param child The Node to add as child of this Node\r\n \t * @return the zero-based index of the child */\r\n \tpublic <T extends Node> int insertChild (int index, final T child) {\r\n-\t\tfor (Node p = this; p != null; p = child.getParent()) {\r\n+\t\tfor (Node p = this; p != null; p = p.getParent()) {\r\n \t\t\tif (p == child) throw new GdxRuntimeException(\"Cannot add a parent as a child\");\r\n \t\t}\r\n \t\tNode p = child.getParent();\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 202, "bugNodeStartChar": 9075, "bugNodeLength": 17, "fixLineNum": 202, "fixNodeStartChar": 8874, "fixNodeLength": 13, "sourceBeforeFix": "child.getParent()", "sourceAfterFix": "p.getParent()"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "28a04af5f4b957b75ba7dbf6486999b75547673c", "fixCommitParentSHA1": "72a0c5e829d86520dd59998094afacce4d6de818", "bugFilePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java", "fixPatch": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java\nindex ec80980..73f13c3 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java\n@@ -141,7 +141,7 @@\n \t\tkoala.stateTime += deltaTime;\r\n \r\n \t\t// check input and apply to velocity & state\r\n-\t\tif ((Gdx.input.isKeyPressed(Keys.SPACE) || isTouched(0.75f, 1)) && koala.grounded) {\r\n+\t\tif ((Gdx.input.isKeyPressed(Keys.SPACE) || isTouched(0.5f, 1)) && koala.grounded) {\r\n \t\t\tkoala.velocity.y += Koala.JUMP_VELOCITY;\r\n \t\t\tkoala.state = Koala.State.Jumping;\r\n \t\t\tkoala.grounded = false;\r\n@@ -219,7 +219,7 @@\n \t\t\t\tif (koala.velocity.y > 0) {\r\n \t\t\t\t\tkoala.position.y = tile.y - Koala.HEIGHT;\r\n \t\t\t\t\t// we hit a block jumping upwards, let's destroy it!\r\n-\t\t\t\t\tTiledMapTileLayer layer = (TiledMapTileLayer)map.getLayers().get(1);\r\n+\t\t\t\t\tTiledMapTileLayer layer = (TiledMapTileLayer)map.getLayers().get(\"walls\");\r\n \t\t\t\t\tlayer.setCell((int)tile.x, (int)tile.y, null);\r\n \t\t\t\t} else {\r\n \t\t\t\t\tkoala.position.y = tile.y + tile.height;\r\n@@ -247,7 +247,7 @@\n \t\t// check if any finge is touch the area between startX and endX\r\n \t\t// startX/endX are given between 0 (left edge of the screen) and 1 (right edge of the screen)\r\n \t\tfor (int i = 0; i < 2; i++) {\r\n-\t\t\tfloat x = Gdx.input.getX() / (float)Gdx.graphics.getWidth();\r\n+\t\t\tfloat x = Gdx.input.getX(i) / (float)Gdx.graphics.getWidth();\r\n \t\t\tif (Gdx.input.isTouched(i) && (x >= startX && x <= endX)) {\r\n \t\t\t\treturn true;\r\n \t\t\t}\r\n@@ -256,7 +256,7 @@\n \t}\r\n \r\n \tprivate void getTiles (int startX, int startY, int endX, int endY, Array<Rectangle> tiles) {\r\n-\t\tTiledMapTileLayer layer = (TiledMapTileLayer)map.getLayers().get(1);\r\n+\t\tTiledMapTileLayer layer = (TiledMapTileLayer)map.getLayers().get(\"walls\");\r\n \t\trectPool.freeAll(tiles);\r\n \t\ttiles.clear();\r\n \t\tfor (int y = startY; y <= endY; y++) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 144, "bugNodeStartChar": 5224, "bugNodeLength": 19, "fixLineNum": 144, "fixNodeStartChar": 5081, "fixNodeLength": 18, "sourceBeforeFix": "isTouched(0.75f,1)", "sourceAfterFix": "isTouched(0.5f,1)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "28a04af5f4b957b75ba7dbf6486999b75547673c", "fixCommitParentSHA1": "72a0c5e829d86520dd59998094afacce4d6de818", "bugFilePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java", "fixPatch": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java\nindex ec80980..73f13c3 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java\n@@ -141,7 +141,7 @@\n \t\tkoala.stateTime += deltaTime;\r\n \r\n \t\t// check input and apply to velocity & state\r\n-\t\tif ((Gdx.input.isKeyPressed(Keys.SPACE) || isTouched(0.75f, 1)) && koala.grounded) {\r\n+\t\tif ((Gdx.input.isKeyPressed(Keys.SPACE) || isTouched(0.5f, 1)) && koala.grounded) {\r\n \t\t\tkoala.velocity.y += Koala.JUMP_VELOCITY;\r\n \t\t\tkoala.state = Koala.State.Jumping;\r\n \t\t\tkoala.grounded = false;\r\n@@ -219,7 +219,7 @@\n \t\t\t\tif (koala.velocity.y > 0) {\r\n \t\t\t\t\tkoala.position.y = tile.y - Koala.HEIGHT;\r\n \t\t\t\t\t// we hit a block jumping upwards, let's destroy it!\r\n-\t\t\t\t\tTiledMapTileLayer layer = (TiledMapTileLayer)map.getLayers().get(1);\r\n+\t\t\t\t\tTiledMapTileLayer layer = (TiledMapTileLayer)map.getLayers().get(\"walls\");\r\n \t\t\t\t\tlayer.setCell((int)tile.x, (int)tile.y, null);\r\n \t\t\t\t} else {\r\n \t\t\t\t\tkoala.position.y = tile.y + tile.height;\r\n@@ -247,7 +247,7 @@\n \t\t// check if any finge is touch the area between startX and endX\r\n \t\t// startX/endX are given between 0 (left edge of the screen) and 1 (right edge of the screen)\r\n \t\tfor (int i = 0; i < 2; i++) {\r\n-\t\t\tfloat x = Gdx.input.getX() / (float)Gdx.graphics.getWidth();\r\n+\t\t\tfloat x = Gdx.input.getX(i) / (float)Gdx.graphics.getWidth();\r\n \t\t\tif (Gdx.input.isTouched(i) && (x >= startX && x <= endX)) {\r\n \t\t\t\treturn true;\r\n \t\t\t}\r\n@@ -256,7 +256,7 @@\n \t}\r\n \r\n \tprivate void getTiles (int startX, int startY, int endX, int endY, Array<Rectangle> tiles) {\r\n-\t\tTiledMapTileLayer layer = (TiledMapTileLayer)map.getLayers().get(1);\r\n+\t\tTiledMapTileLayer layer = (TiledMapTileLayer)map.getLayers().get(\"walls\");\r\n \t\trectPool.freeAll(tiles);\r\n \t\ttiles.clear();\r\n \t\tfor (int y = startY; y <= endY; y++) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 250, "bugNodeStartChar": 9160, "bugNodeLength": 16, "fixLineNum": 250, "fixNodeStartChar": 8911, "fixNodeLength": 17, "sourceBeforeFix": "Gdx.input.getX()", "sourceAfterFix": "Gdx.input.getX(i)"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "2e4508e11e0b6d8a4634dff159a8ce3e50c133ca", "fixCommitParentSHA1": "776bb2c227afa5cdb592a912048498bb60527af1", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java b/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java\nindex ad80991..9fc0bb4 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java\n@@ -98,7 +98,7 @@\n \t\t\t\tfor (JsonValue meshPart = meshParts.child; meshPart != null; meshPart = meshPart.next) {\r\n \t\t\t\t\tModelMeshPart jsonPart = new ModelMeshPart();\r\n \t\t\t\t\tString partId = meshPart.getString(\"id\", null);\r\n-\t\t\t\t\tif (id == null) {\r\n+\t\t\t\t\tif (partId == null) {\r\n \t\t\t\t\t\tthrow new GdxRuntimeException(\"Not id given for mesh part\");\r\n \t\t\t\t\t}\r\n \t\t\t\t\tfor (ModelMeshPart other : parts) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 101, "bugNodeStartChar": 4188, "bugNodeLength": 10, "fixLineNum": 101, "fixNodeStartChar": 4088, "fixNodeLength": 14, "sourceBeforeFix": "id == null", "sourceAfterFix": "partId == null"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "2e4508e11e0b6d8a4634dff159a8ce3e50c133ca", "fixCommitParentSHA1": "776bb2c227afa5cdb592a912048498bb60527af1", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java b/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java\nindex ad80991..9fc0bb4 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java\n@@ -98,7 +98,7 @@\n \t\t\t\tfor (JsonValue meshPart = meshParts.child; meshPart != null; meshPart = meshPart.next) {\r\n \t\t\t\t\tModelMeshPart jsonPart = new ModelMeshPart();\r\n \t\t\t\t\tString partId = meshPart.getString(\"id\", null);\r\n-\t\t\t\t\tif (id == null) {\r\n+\t\t\t\t\tif (partId == null) {\r\n \t\t\t\t\t\tthrow new GdxRuntimeException(\"Not id given for mesh part\");\r\n \t\t\t\t\t}\r\n \t\t\t\t\tfor (ModelMeshPart other : parts) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 101, "bugNodeStartChar": 4188, "bugNodeLength": 10, "fixLineNum": 101, "fixNodeStartChar": 4088, "fixNodeLength": 14, "sourceBeforeFix": "id == null", "sourceAfterFix": "partId == null"}, {"bugType": "SWAP_ARGUMENTS", "fixCommitSHA1": "f0a3f02efd290611d0c8a9bcd7bead1760edae81", "fixCommitParentSHA1": "3681282c9951c3fe635fe6fcc2997471fe47dadb", "bugFilePath": "extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TextureUnpacker.java", "fixPatch": "diff --git a/extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TextureUnpacker.java b/extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TextureUnpacker.java\nindex 77670be..7aca554 100644\n--- a/extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TextureUnpacker.java\n+++ b/extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TextureUnpacker.java\n@@ -135,7 +135,7 @@\n \t\t// get the needed part of the page and rotate if needed\n \t\tif (region.rotate) {\n \t\t\tBufferedImage srcImage = page.getSubimage(region.left, region.top, region.height, region.width);\n-\t\t\tsplitImage = new BufferedImage(region.height, region.width, page.getType());\n+\t\t\tsplitImage = new BufferedImage(region.width, region.height, page.getType());\n \n \t\t\tAffineTransform transform = new AffineTransform();\n \t\t\ttransform.rotate(Math.toRadians(90.0));\n", "projectName": "libgdx.libgdx", "bugLineNum": 138, "bugNodeStartChar": 5448, "bugNodeLength": 62, "fixLineNum": 138, "fixNodeStartChar": 5448, "fixNodeLength": 62, "sourceBeforeFix": "new BufferedImage(region.height,region.width,page.getType())", "sourceAfterFix": "new BufferedImage(region.width,region.height,page.getType())"}, {"bugType": "SWAP_ARGUMENTS", "fixCommitSHA1": "1fa1669dbb0e9f63856074e1691985fa476166f9", "fixCommitParentSHA1": "3681282c9951c3fe635fe6fcc2997471fe47dadb", "bugFilePath": "extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TextureUnpacker.java", "fixPatch": "diff --git a/extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TextureUnpacker.java b/extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TextureUnpacker.java\nindex 77670be..7aca554 100644\n--- a/extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TextureUnpacker.java\n+++ b/extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TextureUnpacker.java\n@@ -135,7 +135,7 @@\n \t\t// get the needed part of the page and rotate if needed\n \t\tif (region.rotate) {\n \t\t\tBufferedImage srcImage = page.getSubimage(region.left, region.top, region.height, region.width);\n-\t\t\tsplitImage = new BufferedImage(region.height, region.width, page.getType());\n+\t\t\tsplitImage = new BufferedImage(region.width, region.height, page.getType());\n \n \t\t\tAffineTransform transform = new AffineTransform();\n \t\t\ttransform.rotate(Math.toRadians(90.0));\n", "projectName": "libgdx.libgdx", "bugLineNum": 138, "bugNodeStartChar": 5448, "bugNodeLength": 62, "fixLineNum": 138, "fixNodeStartChar": 5448, "fixNodeLength": 62, "sourceBeforeFix": "new BufferedImage(region.height,region.width,page.getType())", "sourceAfterFix": "new BufferedImage(region.width,region.height,page.getType())"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "20c49903145fbb36556b88e65052aaf96d92fe19", "fixCommitParentSHA1": "e5803f4dc544469a09dbcb9bda7e2bebf771c47f", "bugFilePath": "backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java", "fixPatch": "diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java\nindex 3f6d46d..c512555 100644\n--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java\n+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java\n@@ -95,7 +95,7 @@\n \t\t}\r\n \t};\r\n \r\n-\tpublic static final int NUM_TOUCHES = 40;\r\n+\tpublic static final int NUM_TOUCHES = 20;\r\n \r\n \tArrayList<OnKeyListener> keyListeners = new ArrayList();\r\n \tArrayList<KeyEvent> keyEvents = new ArrayList();\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 98, "bugNodeStartChar": 3136, "bugNodeLength": 16, "fixLineNum": 98, "fixNodeStartChar": 3039, "fixNodeLength": 16, "sourceBeforeFix": "NUM_TOUCHES=40", "sourceAfterFix": "NUM_TOUCHES=20"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "fbabe43be4be0d8fa0aa55b9d83f41940a4c750a", "fixCommitParentSHA1": "f37a73acb831f005df60d65103e2f57715dd6e06", "bugFilePath": "extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TexturePacker.java", "fixPatch": "diff --git a/extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TexturePacker.java b/extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TexturePacker.java\nindex df1c1e7..a83f1c9 100644\n--- a/extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TexturePacker.java\n+++ b/extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TexturePacker.java\n@@ -89,7 +89,7 @@\n \r\n \tpublic void pack (File outputDir, String packFileName) {\r\n \t\tif (packFileName.endsWith(settings.atlasExtension))\r\n-\t\t\tpackFileName = packFileName.substring(packFileName.length() - settings.atlasExtension.length());\r\n+\t\t\tpackFileName = packFileName.substring(0, packFileName.length() - settings.atlasExtension.length());\r\n \t\toutputDir.mkdirs();\r\n \r\n \t\tfor (int i = 0, n = settings.scale.length; i < n; i++) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 92, "bugNodeStartChar": 3373, "bugNodeLength": 80, "fixLineNum": 92, "fixNodeStartChar": 3282, "fixNodeLength": 83, "sourceBeforeFix": "packFileName.substring(packFileName.length() - settings.atlasExtension.length())", "sourceAfterFix": "packFileName.substring(0,packFileName.length() - settings.atlasExtension.length())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "8bd88339696a90c36a772424eaa92d9cea6ad42a", "fixCommitParentSHA1": "02c058104902caeb2d72917b6a8d381301c343e3", "bugFilePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java", "fixPatch": "diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\nindex 5495aee..9012832 100644\n--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n@@ -431,12 +431,12 @@\n \t\treturn new Clipboard() {\n \t\t\t@Override\n \t\t\tpublic void setContents (String content) {\n-\t\t\t\tUIPasteboard.getGeneral().setString(content);\n+\t\t\t\tUIPasteboard.getGeneralPasteboard().setString(content);\n \t\t\t}\n \n \t\t\t@Override\n \t\t\tpublic String getContents () {\n-\t\t\t\treturn UIPasteboard.getGeneral().getString();\n+\t\t\t\treturn UIPasteboard.getGeneralPasteboard().getString();\n \t\t\t}\n \t\t};\n \t}\n", "projectName": "libgdx.libgdx", "bugLineNum": 434, "bugNodeStartChar": 12812, "bugNodeLength": 25, "fixLineNum": 434, "fixNodeStartChar": 12812, "fixNodeLength": 35, "sourceBeforeFix": "UIPasteboard.getGeneral()", "sourceAfterFix": "UIPasteboard.getGeneralPasteboard()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "8bd88339696a90c36a772424eaa92d9cea6ad42a", "fixCommitParentSHA1": "02c058104902caeb2d72917b6a8d381301c343e3", "bugFilePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java", "fixPatch": "diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\nindex 5495aee..9012832 100644\n--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n@@ -431,12 +431,12 @@\n \t\treturn new Clipboard() {\n \t\t\t@Override\n \t\t\tpublic void setContents (String content) {\n-\t\t\t\tUIPasteboard.getGeneral().setString(content);\n+\t\t\t\tUIPasteboard.getGeneralPasteboard().setString(content);\n \t\t\t}\n \n \t\t\t@Override\n \t\t\tpublic String getContents () {\n-\t\t\t\treturn UIPasteboard.getGeneral().getString();\n+\t\t\t\treturn UIPasteboard.getGeneralPasteboard().getString();\n \t\t\t}\n \t\t};\n \t}\n", "projectName": "libgdx.libgdx", "bugLineNum": 434, "bugNodeStartChar": 12812, "bugNodeLength": 25, "fixLineNum": 434, "fixNodeStartChar": 12812, "fixNodeLength": 35, "sourceBeforeFix": "UIPasteboard.getGeneral()", "sourceAfterFix": "UIPasteboard.getGeneralPasteboard()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "8bd88339696a90c36a772424eaa92d9cea6ad42a", "fixCommitParentSHA1": "02c058104902caeb2d72917b6a8d381301c343e3", "bugFilePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java", "fixPatch": "diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\nindex 5495aee..9012832 100644\n--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n@@ -431,12 +431,12 @@\n \t\treturn new Clipboard() {\n \t\t\t@Override\n \t\t\tpublic void setContents (String content) {\n-\t\t\t\tUIPasteboard.getGeneral().setString(content);\n+\t\t\t\tUIPasteboard.getGeneralPasteboard().setString(content);\n \t\t\t}\n \n \t\t\t@Override\n \t\t\tpublic String getContents () {\n-\t\t\t\treturn UIPasteboard.getGeneral().getString();\n+\t\t\t\treturn UIPasteboard.getGeneralPasteboard().getString();\n \t\t\t}\n \t\t};\n \t}\n", "projectName": "libgdx.libgdx", "bugLineNum": 439, "bugNodeStartChar": 12922, "bugNodeLength": 25, "fixLineNum": 439, "fixNodeStartChar": 12922, "fixNodeLength": 35, "sourceBeforeFix": "UIPasteboard.getGeneral()", "sourceAfterFix": "UIPasteboard.getGeneralPasteboard()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "8bd88339696a90c36a772424eaa92d9cea6ad42a", "fixCommitParentSHA1": "02c058104902caeb2d72917b6a8d381301c343e3", "bugFilePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java", "fixPatch": "diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\nindex 5495aee..9012832 100644\n--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n@@ -431,12 +431,12 @@\n \t\treturn new Clipboard() {\n \t\t\t@Override\n \t\t\tpublic void setContents (String content) {\n-\t\t\t\tUIPasteboard.getGeneral().setString(content);\n+\t\t\t\tUIPasteboard.getGeneralPasteboard().setString(content);\n \t\t\t}\n \n \t\t\t@Override\n \t\t\tpublic String getContents () {\n-\t\t\t\treturn UIPasteboard.getGeneral().getString();\n+\t\t\t\treturn UIPasteboard.getGeneralPasteboard().getString();\n \t\t\t}\n \t\t};\n \t}\n", "projectName": "libgdx.libgdx", "bugLineNum": 439, "bugNodeStartChar": 12922, "bugNodeLength": 25, "fixLineNum": 439, "fixNodeStartChar": 12922, "fixNodeLength": 35, "sourceBeforeFix": "UIPasteboard.getGeneral()", "sourceAfterFix": "UIPasteboard.getGeneralPasteboard()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "e08f74620ba29298d59c97e7327cbe51fbd5b39e", "fixCommitParentSHA1": "8a84ebf7df044e0e88c8aaab395dfed236f8aa53", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java\nindex 54411d9..9ed55d5 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java\n@@ -38,7 +38,7 @@\n \tprivate int pressedButton = -1;\r\n \tprivate int button;\r\n \tprivate boolean pressed, over, cancelled;\r\n-\tprivate float visualPressedTime;\r\n+\tprivate long visualPressedTime;\r\n \tprivate long tapCountInterval = (long)(0.4f * 1000000000l);\r\n \tprivate int tapCount;\r\n \tprivate long lastTapTime;\r\n@@ -61,7 +61,7 @@\n \t\tpressedButton = button;\r\n \t\ttouchDownX = x;\r\n \t\ttouchDownY = y;\r\n-\t\tvisualPressedTime = TimeUtils.nanoTime() + visualPressedDuration * 1000000000;\r\n+\t\tvisualPressedTime = TimeUtils.millis() + (long)(visualPressedDuration * 1000);\r\n \t\treturn true;\r\n \t}\r\n \r\n@@ -147,7 +147,7 @@\n \tpublic boolean isVisualPressed () {\r\n \t\tif (pressed) return true;\r\n \t\tif (visualPressedTime <= 0) return false;\r\n-\t\tif (visualPressedTime > TimeUtils.nanoTime() && Gdx.graphics.isContinuousRendering()) return true;\r\n+\t\tif (visualPressedTime > TimeUtils.millis() && Gdx.graphics.isContinuousRendering()) return true;\r\n \t\tvisualPressedTime = 0;\r\n \t\treturn false;\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 64, "bugNodeStartChar": 2844, "bugNodeLength": 20, "fixLineNum": 64, "fixNodeStartChar": 2781, "fixNodeLength": 18, "sourceBeforeFix": "TimeUtils.nanoTime()", "sourceAfterFix": "TimeUtils.millis()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "e08f74620ba29298d59c97e7327cbe51fbd5b39e", "fixCommitParentSHA1": "8a84ebf7df044e0e88c8aaab395dfed236f8aa53", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java\nindex 54411d9..9ed55d5 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java\n@@ -38,7 +38,7 @@\n \tprivate int pressedButton = -1;\r\n \tprivate int button;\r\n \tprivate boolean pressed, over, cancelled;\r\n-\tprivate float visualPressedTime;\r\n+\tprivate long visualPressedTime;\r\n \tprivate long tapCountInterval = (long)(0.4f * 1000000000l);\r\n \tprivate int tapCount;\r\n \tprivate long lastTapTime;\r\n@@ -61,7 +61,7 @@\n \t\tpressedButton = button;\r\n \t\ttouchDownX = x;\r\n \t\ttouchDownY = y;\r\n-\t\tvisualPressedTime = TimeUtils.nanoTime() + visualPressedDuration * 1000000000;\r\n+\t\tvisualPressedTime = TimeUtils.millis() + (long)(visualPressedDuration * 1000);\r\n \t\treturn true;\r\n \t}\r\n \r\n@@ -147,7 +147,7 @@\n \tpublic boolean isVisualPressed () {\r\n \t\tif (pressed) return true;\r\n \t\tif (visualPressedTime <= 0) return false;\r\n-\t\tif (visualPressedTime > TimeUtils.nanoTime() && Gdx.graphics.isContinuousRendering()) return true;\r\n+\t\tif (visualPressedTime > TimeUtils.millis() && Gdx.graphics.isContinuousRendering()) return true;\r\n \t\tvisualPressedTime = 0;\r\n \t\treturn false;\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 64, "bugNodeStartChar": 2844, "bugNodeLength": 20, "fixLineNum": 64, "fixNodeStartChar": 2781, "fixNodeLength": 18, "sourceBeforeFix": "TimeUtils.nanoTime()", "sourceAfterFix": "TimeUtils.millis()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "e08f74620ba29298d59c97e7327cbe51fbd5b39e", "fixCommitParentSHA1": "8a84ebf7df044e0e88c8aaab395dfed236f8aa53", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java\nindex 54411d9..9ed55d5 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java\n@@ -38,7 +38,7 @@\n \tprivate int pressedButton = -1;\r\n \tprivate int button;\r\n \tprivate boolean pressed, over, cancelled;\r\n-\tprivate float visualPressedTime;\r\n+\tprivate long visualPressedTime;\r\n \tprivate long tapCountInterval = (long)(0.4f * 1000000000l);\r\n \tprivate int tapCount;\r\n \tprivate long lastTapTime;\r\n@@ -61,7 +61,7 @@\n \t\tpressedButton = button;\r\n \t\ttouchDownX = x;\r\n \t\ttouchDownY = y;\r\n-\t\tvisualPressedTime = TimeUtils.nanoTime() + visualPressedDuration * 1000000000;\r\n+\t\tvisualPressedTime = TimeUtils.millis() + (long)(visualPressedDuration * 1000);\r\n \t\treturn true;\r\n \t}\r\n \r\n@@ -147,7 +147,7 @@\n \tpublic boolean isVisualPressed () {\r\n \t\tif (pressed) return true;\r\n \t\tif (visualPressedTime <= 0) return false;\r\n-\t\tif (visualPressedTime > TimeUtils.nanoTime() && Gdx.graphics.isContinuousRendering()) return true;\r\n+\t\tif (visualPressedTime > TimeUtils.millis() && Gdx.graphics.isContinuousRendering()) return true;\r\n \t\tvisualPressedTime = 0;\r\n \t\treturn false;\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 150, "bugNodeStartChar": 5869, "bugNodeLength": 20, "fixLineNum": 150, "fixNodeStartChar": 5720, "fixNodeLength": 18, "sourceBeforeFix": "TimeUtils.nanoTime()", "sourceAfterFix": "TimeUtils.millis()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "e08f74620ba29298d59c97e7327cbe51fbd5b39e", "fixCommitParentSHA1": "8a84ebf7df044e0e88c8aaab395dfed236f8aa53", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java\nindex 54411d9..9ed55d5 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java\n@@ -38,7 +38,7 @@\n \tprivate int pressedButton = -1;\r\n \tprivate int button;\r\n \tprivate boolean pressed, over, cancelled;\r\n-\tprivate float visualPressedTime;\r\n+\tprivate long visualPressedTime;\r\n \tprivate long tapCountInterval = (long)(0.4f * 1000000000l);\r\n \tprivate int tapCount;\r\n \tprivate long lastTapTime;\r\n@@ -61,7 +61,7 @@\n \t\tpressedButton = button;\r\n \t\ttouchDownX = x;\r\n \t\ttouchDownY = y;\r\n-\t\tvisualPressedTime = TimeUtils.nanoTime() + visualPressedDuration * 1000000000;\r\n+\t\tvisualPressedTime = TimeUtils.millis() + (long)(visualPressedDuration * 1000);\r\n \t\treturn true;\r\n \t}\r\n \r\n@@ -147,7 +147,7 @@\n \tpublic boolean isVisualPressed () {\r\n \t\tif (pressed) return true;\r\n \t\tif (visualPressedTime <= 0) return false;\r\n-\t\tif (visualPressedTime > TimeUtils.nanoTime() && Gdx.graphics.isContinuousRendering()) return true;\r\n+\t\tif (visualPressedTime > TimeUtils.millis() && Gdx.graphics.isContinuousRendering()) return true;\r\n \t\tvisualPressedTime = 0;\r\n \t\treturn false;\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 150, "bugNodeStartChar": 5869, "bugNodeLength": 20, "fixLineNum": 150, "fixNodeStartChar": 5720, "fixNodeLength": 18, "sourceBeforeFix": "TimeUtils.nanoTime()", "sourceAfterFix": "TimeUtils.millis()"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "141027650095536b699bffecf0d2168474c76ac2", "fixCommitParentSHA1": "806ba436b1805c3d56c22a3b25b7fd383bc44c40", "bugFilePath": "backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/math/Matrix4.java", "fixPatch": "diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/math/Matrix4.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/math/Matrix4.java\nindex b8e73fb..d1a5586 100644\n--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/math/Matrix4.java\n+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/math/Matrix4.java\n@@ -70,7 +70,9 @@\n \t/** WW: Typically the value one. On Vector3 multiplication this value is ignored. */\r\n \tpublic static final int M33 = 15;\r\n \r\n-\tpublic final float tmp[] = new float[16];\r\n+\t/** @Deprecated Do not use this member, instead use a temporary Matrix4 instance, or create a temporary float array. */\r\n+\t@Deprecated\r\n+\tpublic static final float tmp[] = new float[16]; // FIXME Change to private access\r\n \tpublic final float val[] = new float[16];\r\n \r\n \t/** Constructs an identity matrix */\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 73, "bugNodeStartChar": 4592, "bugNodeLength": 41, "fixLineNum": 73, "fixNodeStartChar": 4520, "fixNodeLength": 182, "sourceBeforeFix": "17", "sourceAfterFix": "25"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "141027650095536b699bffecf0d2168474c76ac2", "fixCommitParentSHA1": "806ba436b1805c3d56c22a3b25b7fd383bc44c40", "bugFilePath": "gdx/src/com/badlogic/gdx/math/Matrix4.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/Matrix4.java b/gdx/src/com/badlogic/gdx/math/Matrix4.java\nindex 6276f3e..b593435 100644\n--- a/gdx/src/com/badlogic/gdx/math/Matrix4.java\n+++ b/gdx/src/com/badlogic/gdx/math/Matrix4.java\n@@ -70,7 +70,9 @@\n \t/** WW: Typically the value one. On Vector3 multiplication this value is ignored. */\r\n \tpublic static final int M33 = 15;\r\n \r\n-\tpublic final float tmp[] = new float[16];\r\n+\t/** @Deprecated Do not use this member, instead use a temporary Matrix4 instance, or create a temporary float array. */\r\n+\t@Deprecated\r\n+\tpublic static final float tmp[] = new float[16]; // FIXME Change to private access\r\n \tpublic final float val[] = new float[16];\r\n \r\n \t/** Constructs an identity matrix */\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 73, "bugNodeStartChar": 4592, "bugNodeLength": 41, "fixLineNum": 73, "fixNodeStartChar": 4520, "fixNodeLength": 182, "sourceBeforeFix": "17", "sourceAfterFix": "25"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "9fdd285d30c306b99e59984c535fa1988620d523", "fixCommitParentSHA1": "fc3020520170c12d4be6ea1a59c93792f9d6fbcd", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java b/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java\nindex 42362ce..ad80991 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java\n@@ -154,7 +154,7 @@\n \t\t\t} else if (attr.equals(\"COLOR\")) {\r\n \t\t\t\tvertexAttributes.add(VertexAttribute.ColorUnpacked());\r\n \t\t\t} else if (attr.equals(\"COLORPACKED\")) {\r\n-\t\t\t\tvertexAttributes.add(VertexAttribute.Color());\r\n+\t\t\t\tvertexAttributes.add(VertexAttribute.ColorPacked());\r\n \t\t\t} else if (attr.equals(\"TANGENT\")) {\r\n \t\t\t\tvertexAttributes.add(VertexAttribute.Tangent());\r\n \t\t\t} else if (attr.equals(\"BINORMAL\")) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 157, "bugNodeStartChar": 6221, "bugNodeLength": 23, "fixLineNum": 157, "fixNodeStartChar": 6065, "fixNodeLength": 29, "sourceBeforeFix": "VertexAttribute.Color()", "sourceAfterFix": "VertexAttribute.ColorPacked()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "9fdd285d30c306b99e59984c535fa1988620d523", "fixCommitParentSHA1": "fc3020520170c12d4be6ea1a59c93792f9d6fbcd", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java b/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java\nindex 42362ce..ad80991 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java\n@@ -154,7 +154,7 @@\n \t\t\t} else if (attr.equals(\"COLOR\")) {\r\n \t\t\t\tvertexAttributes.add(VertexAttribute.ColorUnpacked());\r\n \t\t\t} else if (attr.equals(\"COLORPACKED\")) {\r\n-\t\t\t\tvertexAttributes.add(VertexAttribute.Color());\r\n+\t\t\t\tvertexAttributes.add(VertexAttribute.ColorPacked());\r\n \t\t\t} else if (attr.equals(\"TANGENT\")) {\r\n \t\t\t\tvertexAttributes.add(VertexAttribute.Tangent());\r\n \t\t\t} else if (attr.equals(\"BINORMAL\")) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 157, "bugNodeStartChar": 6221, "bugNodeLength": 23, "fixLineNum": 157, "fixNodeStartChar": 6065, "fixNodeLength": 29, "sourceBeforeFix": "VertexAttribute.Color()", "sourceAfterFix": "VertexAttribute.ColorPacked()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "0e371e64ca957e61a41309c7821cfff946274cbd", "fixCommitParentSHA1": "294910c6f0dcd6247e5ab296de08b2f47e614aa4", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java b/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java\nindex 42362ce..ad80991 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java\n@@ -154,7 +154,7 @@\n \t\t\t} else if (attr.equals(\"COLOR\")) {\r\n \t\t\t\tvertexAttributes.add(VertexAttribute.ColorUnpacked());\r\n \t\t\t} else if (attr.equals(\"COLORPACKED\")) {\r\n-\t\t\t\tvertexAttributes.add(VertexAttribute.Color());\r\n+\t\t\t\tvertexAttributes.add(VertexAttribute.ColorPacked());\r\n \t\t\t} else if (attr.equals(\"TANGENT\")) {\r\n \t\t\t\tvertexAttributes.add(VertexAttribute.Tangent());\r\n \t\t\t} else if (attr.equals(\"BINORMAL\")) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 157, "bugNodeStartChar": 6221, "bugNodeLength": 23, "fixLineNum": 157, "fixNodeStartChar": 6065, "fixNodeLength": 29, "sourceBeforeFix": "VertexAttribute.Color()", "sourceAfterFix": "VertexAttribute.ColorPacked()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "0e371e64ca957e61a41309c7821cfff946274cbd", "fixCommitParentSHA1": "294910c6f0dcd6247e5ab296de08b2f47e614aa4", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java b/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java\nindex 42362ce..ad80991 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java\n@@ -154,7 +154,7 @@\n \t\t\t} else if (attr.equals(\"COLOR\")) {\r\n \t\t\t\tvertexAttributes.add(VertexAttribute.ColorUnpacked());\r\n \t\t\t} else if (attr.equals(\"COLORPACKED\")) {\r\n-\t\t\t\tvertexAttributes.add(VertexAttribute.Color());\r\n+\t\t\t\tvertexAttributes.add(VertexAttribute.ColorPacked());\r\n \t\t\t} else if (attr.equals(\"TANGENT\")) {\r\n \t\t\t\tvertexAttributes.add(VertexAttribute.Tangent());\r\n \t\t\t} else if (attr.equals(\"BINORMAL\")) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 157, "bugNodeStartChar": 6221, "bugNodeLength": 23, "fixLineNum": 157, "fixNodeStartChar": 6065, "fixNodeLength": 29, "sourceBeforeFix": "VertexAttribute.Color()", "sourceAfterFix": "VertexAttribute.ColorPacked()"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "4374760010679cae216f1c512564626520e00238", "fixCommitParentSHA1": "b1075612af78f0d310030ec2dfd31531353ba2bc", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/Json.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/Json.java b/gdx/src/com/badlogic/gdx/utils/Json.java\nindex ffaeec4..7da25bc 100644\n--- a/gdx/src/com/badlogic/gdx/utils/Json.java\n+++ b/gdx/src/com/badlogic/gdx/utils/Json.java\n@@ -460,7 +460,7 @@\n \t\t\t\treturn;\n \t\t\t}\n \t\t\tif (value instanceof Collection) {\n-\t\t\t\tif (knownType != null && actualType != knownType && actualType != ArrayList.class) {\n+\t\t\t\tif (typeName != null && actualType != ArrayList.class && (knownType == null || knownType != actualType)) {\n \t\t\t\t\twriteObjectStart(actualType, knownType);\n \t\t\t\t\twriteArrayStart(\"items\");\n \t\t\t\t\tfor (Object item : (Collection)value)\n@@ -520,7 +520,7 @@\n \n \t\t\t// Enum special case.\n \t\t\tif (ClassReflection.isAssignableFrom(Enum.class, actualType)) {\n-\t\t\t\tif (knownType == null || knownType != actualType) {\n+\t\t\t\tif (typeName != null && (knownType == null || knownType != actualType)) {\n \t\t\t\t\t// Ensures that enums with specific implementations (abstract logic) serialize correctly.\n \t\t\t\t\tif (actualType.getEnumConstants() == null) actualType = actualType.getSuperclass();\n \n@@ -837,7 +837,7 @@\n \t\t\t\treturn readValue(\"value\", type, jsonData);\n \t\t\t}\n \n-\t\t\tif (ClassReflection.isAssignableFrom(Collection.class, type)) {\n+\t\t\tif (typeName != null && ClassReflection.isAssignableFrom(Collection.class, type)) {\n \t\t\t\t// JSON object wrapper to specify type.\n \t\t\t\tjsonData = jsonData.get(\"items\");\n \t\t\t} else {\n", "projectName": "libgdx.libgdx", "bugLineNum": 463, "bugNodeStartChar": 16694, "bugNodeLength": 17, "fixLineNum": 463, "fixNodeStartChar": 16694, "fixNodeLength": 16, "sourceBeforeFix": "knownType != null", "sourceAfterFix": "typeName != null"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4374760010679cae216f1c512564626520e00238", "fixCommitParentSHA1": "b1075612af78f0d310030ec2dfd31531353ba2bc", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/Json.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/Json.java b/gdx/src/com/badlogic/gdx/utils/Json.java\nindex ffaeec4..7da25bc 100644\n--- a/gdx/src/com/badlogic/gdx/utils/Json.java\n+++ b/gdx/src/com/badlogic/gdx/utils/Json.java\n@@ -460,7 +460,7 @@\n \t\t\t\treturn;\n \t\t\t}\n \t\t\tif (value instanceof Collection) {\n-\t\t\t\tif (knownType != null && actualType != knownType && actualType != ArrayList.class) {\n+\t\t\t\tif (typeName != null && actualType != ArrayList.class && (knownType == null || knownType != actualType)) {\n \t\t\t\t\twriteObjectStart(actualType, knownType);\n \t\t\t\t\twriteArrayStart(\"items\");\n \t\t\t\t\tfor (Object item : (Collection)value)\n@@ -520,7 +520,7 @@\n \n \t\t\t// Enum special case.\n \t\t\tif (ClassReflection.isAssignableFrom(Enum.class, actualType)) {\n-\t\t\t\tif (knownType == null || knownType != actualType) {\n+\t\t\t\tif (typeName != null && (knownType == null || knownType != actualType)) {\n \t\t\t\t\t// Ensures that enums with specific implementations (abstract logic) serialize correctly.\n \t\t\t\t\tif (actualType.getEnumConstants() == null) actualType = actualType.getSuperclass();\n \n@@ -837,7 +837,7 @@\n \t\t\t\treturn readValue(\"value\", type, jsonData);\n \t\t\t}\n \n-\t\t\tif (ClassReflection.isAssignableFrom(Collection.class, type)) {\n+\t\t\tif (typeName != null && ClassReflection.isAssignableFrom(Collection.class, type)) {\n \t\t\t\t// JSON object wrapper to specify type.\n \t\t\t\tjsonData = jsonData.get(\"items\");\n \t\t\t} else {\n", "projectName": "libgdx.libgdx", "bugLineNum": 463, "bugNodeStartChar": 16694, "bugNodeLength": 17, "fixLineNum": 463, "fixNodeStartChar": 16694, "fixNodeLength": 16, "sourceBeforeFix": "knownType != null", "sourceAfterFix": "typeName != null"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "752be931ebf139e3a74ab3e477e1434875a7ab95", "fixCommitParentSHA1": "27e43510824c027469be0b320ae84147cf609dfa", "bugFilePath": "extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/com/badlogic/gdx/physics/box2d/joints/RevoluteJoint.java", "fixPatch": "diff --git a/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/com/badlogic/gdx/physics/box2d/joints/RevoluteJoint.java b/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/com/badlogic/gdx/physics/box2d/joints/RevoluteJoint.java\nindex 1937cb7..d1d2f1c 100644\n--- a/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/com/badlogic/gdx/physics/box2d/joints/RevoluteJoint.java\n+++ b/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/com/badlogic/gdx/physics/box2d/joints/RevoluteJoint.java\n@@ -108,7 +108,7 @@\n \t}\n \n \tpublic Vector2 getLocalAnchorB () {\n-\t\treturn localAnchorA.set(joint.getLocalAnchorB().x, joint.getLocalAnchorB().y);\n+\t\treturn localAnchorB.set(joint.getLocalAnchorB().x, joint.getLocalAnchorB().y);\n \t}\n \n \t/** Get the current motor torque, usually in N-m. */\n", "projectName": "libgdx.libgdx", "bugLineNum": 111, "bugNodeStartChar": 3513, "bugNodeLength": 70, "fixLineNum": 111, "fixNodeStartChar": 3513, "fixNodeLength": 70, "sourceBeforeFix": "localAnchorA.set(joint.getLocalAnchorB().x,joint.getLocalAnchorB().y)", "sourceAfterFix": "localAnchorB.set(joint.getLocalAnchorB().x,joint.getLocalAnchorB().y)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "752be931ebf139e3a74ab3e477e1434875a7ab95", "fixCommitParentSHA1": "27e43510824c027469be0b320ae84147cf609dfa", "bugFilePath": "extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/com/badlogic/gdx/physics/box2d/joints/RevoluteJoint.java", "fixPatch": "diff --git a/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/com/badlogic/gdx/physics/box2d/joints/RevoluteJoint.java b/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/com/badlogic/gdx/physics/box2d/joints/RevoluteJoint.java\nindex 1937cb7..d1d2f1c 100644\n--- a/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/com/badlogic/gdx/physics/box2d/joints/RevoluteJoint.java\n+++ b/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/com/badlogic/gdx/physics/box2d/joints/RevoluteJoint.java\n@@ -108,7 +108,7 @@\n \t}\n \n \tpublic Vector2 getLocalAnchorB () {\n-\t\treturn localAnchorA.set(joint.getLocalAnchorB().x, joint.getLocalAnchorB().y);\n+\t\treturn localAnchorB.set(joint.getLocalAnchorB().x, joint.getLocalAnchorB().y);\n \t}\n \n \t/** Get the current motor torque, usually in N-m. */\n", "projectName": "libgdx.libgdx", "bugLineNum": 111, "bugNodeStartChar": 3513, "bugNodeLength": 70, "fixLineNum": 111, "fixNodeStartChar": 3513, "fixNodeLength": 70, "sourceBeforeFix": "localAnchorA.set(joint.getLocalAnchorB().x,joint.getLocalAnchorB().y)", "sourceAfterFix": "localAnchorB.set(joint.getLocalAnchorB().x,joint.getLocalAnchorB().y)"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "e5e1f1535e3cc33523f486ceee3630eaa8b42b93", "fixCommitParentSHA1": "b2ceb42296a88b109297203ac8a053b12785b973", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/JsonValue.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/JsonValue.java b/gdx/src/com/badlogic/gdx/utils/JsonValue.java\nindex 184046b..7a4231f 100644\n--- a/gdx/src/com/badlogic/gdx/utils/JsonValue.java\n+++ b/gdx/src/com/badlogic/gdx/utils/JsonValue.java\n@@ -244,9 +244,9 @@\n \t\tcase stringValue:\r\n \t\t\treturn stringValue.equalsIgnoreCase(\"true\");\r\n \t\tcase doubleValue:\r\n-\t\t\treturn doubleValue == 0;\r\n+\t\t\treturn doubleValue != 0;\r\n \t\tcase longValue:\r\n-\t\t\treturn longValue == 0;\r\n+\t\t\treturn longValue != 0;\r\n \t\tcase booleanValue:\r\n \t\t\treturn longValue != 0;\r\n \t\t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 247, "bugNodeStartChar": 7663, "bugNodeLength": 16, "fixLineNum": 247, "fixNodeStartChar": 7417, "fixNodeLength": 16, "sourceBeforeFix": "doubleValue == 0", "sourceAfterFix": "doubleValue != 0"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "e5e1f1535e3cc33523f486ceee3630eaa8b42b93", "fixCommitParentSHA1": "b2ceb42296a88b109297203ac8a053b12785b973", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/JsonValue.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/JsonValue.java b/gdx/src/com/badlogic/gdx/utils/JsonValue.java\nindex 184046b..7a4231f 100644\n--- a/gdx/src/com/badlogic/gdx/utils/JsonValue.java\n+++ b/gdx/src/com/badlogic/gdx/utils/JsonValue.java\n@@ -244,9 +244,9 @@\n \t\tcase stringValue:\r\n \t\t\treturn stringValue.equalsIgnoreCase(\"true\");\r\n \t\tcase doubleValue:\r\n-\t\t\treturn doubleValue == 0;\r\n+\t\t\treturn doubleValue != 0;\r\n \t\tcase longValue:\r\n-\t\t\treturn longValue == 0;\r\n+\t\t\treturn longValue != 0;\r\n \t\tcase booleanValue:\r\n \t\t\treturn longValue != 0;\r\n \t\t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 249, "bugNodeStartChar": 7711, "bugNodeLength": 14, "fixLineNum": 249, "fixNodeStartChar": 7463, "fixNodeLength": 14, "sourceBeforeFix": "longValue == 0", "sourceAfterFix": "longValue != 0"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "58a85ddcb5c3ad5bee1a893862b0c31c4e731dbd", "fixCommitParentSHA1": "062de10a9174dc8f58b059a104da66397d151b8a", "bugFilePath": "tests/gdx-tests-iosrobovm/src/com/badlogic/gdx/tests/IOSRobovmTests.java", "fixPatch": "diff --git a/tests/gdx-tests-iosrobovm/src/com/badlogic/gdx/tests/IOSRobovmTests.java b/tests/gdx-tests-iosrobovm/src/com/badlogic/gdx/tests/IOSRobovmTests.java\nindex 28a75c9..80f7772 100644\n--- a/tests/gdx-tests-iosrobovm/src/com/badlogic/gdx/tests/IOSRobovmTests.java\n+++ b/tests/gdx-tests-iosrobovm/src/com/badlogic/gdx/tests/IOSRobovmTests.java\n@@ -29,7 +29,7 @@\n \tprotected IOSApplication createApplication() {\n \t\tIOSApplicationConfiguration config = new IOSApplicationConfiguration();\r\n \t\tconfig.useAccelerometer = false;\n-\t\treturn new IOSApplication(new BulletTestCollection(), config);\n+\t\treturn new IOSApplication(new Box2DTestCollection(), config);\n \t}\n \n \tpublic static void main(String[] argv) {\n", "projectName": "libgdx.libgdx", "bugLineNum": 32, "bugNodeStartChar": 1356, "bugNodeLength": 26, "fixLineNum": 32, "fixNodeStartChar": 1334, "fixNodeLength": 25, "sourceBeforeFix": "new BulletTestCollection()", "sourceAfterFix": "new Box2DTestCollection()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "fe6949476080c74f812a4496f858cfaec01e359f", "fixCommitParentSHA1": "e263796e9bb5791ef21e7f52f8456fea122f666e", "bugFilePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java", "fixPatch": "diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\nindex 4e69b45..96f15ec 100644\n--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n@@ -290,14 +290,14 @@\n \t@Override\n \tpublic void log (String tag, String message) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void log (String tag, String message, Throwable exception) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -305,14 +305,14 @@\n \t@Override\n \tpublic void error (String tag, String message) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void error (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -320,14 +320,14 @@\n \t@Override\n \tpublic void debug (String tag, String message) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[debug] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[debug] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void debug (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n", "projectName": "libgdx.libgdx", "bugLineNum": 293, "bugNodeStartChar": 9173, "bugNodeLength": 50, "fixLineNum": 293, "fixNodeStartChar": 9173, "fixNodeLength": 48, "sourceBeforeFix": "Foundation.NSLog(\"[info] \" + tag + \": \"+ message)", "sourceAfterFix": "Foundation.log(\"[info] \" + tag + \": \"+ message)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "fe6949476080c74f812a4496f858cfaec01e359f", "fixCommitParentSHA1": "e263796e9bb5791ef21e7f52f8456fea122f666e", "bugFilePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java", "fixPatch": "diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\nindex 4e69b45..96f15ec 100644\n--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n@@ -290,14 +290,14 @@\n \t@Override\n \tpublic void log (String tag, String message) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void log (String tag, String message, Throwable exception) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -305,14 +305,14 @@\n \t@Override\n \tpublic void error (String tag, String message) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void error (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -320,14 +320,14 @@\n \t@Override\n \tpublic void debug (String tag, String message) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[debug] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[debug] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void debug (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n", "projectName": "libgdx.libgdx", "bugLineNum": 293, "bugNodeStartChar": 9173, "bugNodeLength": 50, "fixLineNum": 293, "fixNodeStartChar": 9173, "fixNodeLength": 48, "sourceBeforeFix": "Foundation.NSLog(\"[info] \" + tag + \": \"+ message)", "sourceAfterFix": "Foundation.log(\"[info] \" + tag + \": \"+ message)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "fe6949476080c74f812a4496f858cfaec01e359f", "fixCommitParentSHA1": "e263796e9bb5791ef21e7f52f8456fea122f666e", "bugFilePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java", "fixPatch": "diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\nindex 4e69b45..96f15ec 100644\n--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n@@ -290,14 +290,14 @@\n \t@Override\n \tpublic void log (String tag, String message) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void log (String tag, String message, Throwable exception) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -305,14 +305,14 @@\n \t@Override\n \tpublic void error (String tag, String message) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void error (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -320,14 +320,14 @@\n \t@Override\n \tpublic void debug (String tag, String message) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[debug] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[debug] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void debug (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n", "projectName": "libgdx.libgdx", "bugLineNum": 300, "bugNodeStartChar": 9345, "bugNodeLength": 50, "fixLineNum": 300, "fixNodeStartChar": 9345, "fixNodeLength": 48, "sourceBeforeFix": "Foundation.NSLog(\"[info] \" + tag + \": \"+ message)", "sourceAfterFix": "Foundation.log(\"[info] \" + tag + \": \"+ message)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "fe6949476080c74f812a4496f858cfaec01e359f", "fixCommitParentSHA1": "e263796e9bb5791ef21e7f52f8456fea122f666e", "bugFilePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java", "fixPatch": "diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\nindex 4e69b45..96f15ec 100644\n--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n@@ -290,14 +290,14 @@\n \t@Override\n \tpublic void log (String tag, String message) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void log (String tag, String message, Throwable exception) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -305,14 +305,14 @@\n \t@Override\n \tpublic void error (String tag, String message) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void error (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -320,14 +320,14 @@\n \t@Override\n \tpublic void debug (String tag, String message) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[debug] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[debug] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void debug (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n", "projectName": "libgdx.libgdx", "bugLineNum": 300, "bugNodeStartChar": 9345, "bugNodeLength": 50, "fixLineNum": 300, "fixNodeStartChar": 9345, "fixNodeLength": 48, "sourceBeforeFix": "Foundation.NSLog(\"[info] \" + tag + \": \"+ message)", "sourceAfterFix": "Foundation.log(\"[info] \" + tag + \": \"+ message)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "fe6949476080c74f812a4496f858cfaec01e359f", "fixCommitParentSHA1": "e263796e9bb5791ef21e7f52f8456fea122f666e", "bugFilePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java", "fixPatch": "diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\nindex 4e69b45..96f15ec 100644\n--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n@@ -290,14 +290,14 @@\n \t@Override\n \tpublic void log (String tag, String message) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void log (String tag, String message, Throwable exception) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -305,14 +305,14 @@\n \t@Override\n \tpublic void error (String tag, String message) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void error (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -320,14 +320,14 @@\n \t@Override\n \tpublic void debug (String tag, String message) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[debug] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[debug] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void debug (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n", "projectName": "libgdx.libgdx", "bugLineNum": 308, "bugNodeStartChar": 9532, "bugNodeLength": 51, "fixLineNum": 308, "fixNodeStartChar": 9532, "fixNodeLength": 49, "sourceBeforeFix": "Foundation.NSLog(\"[error] \" + tag + \": \"+ message)", "sourceAfterFix": "Foundation.log(\"[error] \" + tag + \": \"+ message)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "fe6949476080c74f812a4496f858cfaec01e359f", "fixCommitParentSHA1": "e263796e9bb5791ef21e7f52f8456fea122f666e", "bugFilePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java", "fixPatch": "diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\nindex 4e69b45..96f15ec 100644\n--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n@@ -290,14 +290,14 @@\n \t@Override\n \tpublic void log (String tag, String message) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void log (String tag, String message, Throwable exception) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -305,14 +305,14 @@\n \t@Override\n \tpublic void error (String tag, String message) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void error (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -320,14 +320,14 @@\n \t@Override\n \tpublic void debug (String tag, String message) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[debug] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[debug] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void debug (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n", "projectName": "libgdx.libgdx", "bugLineNum": 308, "bugNodeStartChar": 9532, "bugNodeLength": 51, "fixLineNum": 308, "fixNodeStartChar": 9532, "fixNodeLength": 49, "sourceBeforeFix": "Foundation.NSLog(\"[error] \" + tag + \": \"+ message)", "sourceAfterFix": "Foundation.log(\"[error] \" + tag + \": \"+ message)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "fe6949476080c74f812a4496f858cfaec01e359f", "fixCommitParentSHA1": "e263796e9bb5791ef21e7f52f8456fea122f666e", "bugFilePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java", "fixPatch": "diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\nindex 4e69b45..96f15ec 100644\n--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n@@ -290,14 +290,14 @@\n \t@Override\n \tpublic void log (String tag, String message) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void log (String tag, String message, Throwable exception) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -305,14 +305,14 @@\n \t@Override\n \tpublic void error (String tag, String message) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void error (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -320,14 +320,14 @@\n \t@Override\n \tpublic void debug (String tag, String message) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[debug] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[debug] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void debug (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n", "projectName": "libgdx.libgdx", "bugLineNum": 315, "bugNodeStartChar": 9709, "bugNodeLength": 51, "fixLineNum": 315, "fixNodeStartChar": 9709, "fixNodeLength": 49, "sourceBeforeFix": "Foundation.NSLog(\"[error] \" + tag + \": \"+ message)", "sourceAfterFix": "Foundation.log(\"[error] \" + tag + \": \"+ message)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "fe6949476080c74f812a4496f858cfaec01e359f", "fixCommitParentSHA1": "e263796e9bb5791ef21e7f52f8456fea122f666e", "bugFilePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java", "fixPatch": "diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\nindex 4e69b45..96f15ec 100644\n--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n@@ -290,14 +290,14 @@\n \t@Override\n \tpublic void log (String tag, String message) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void log (String tag, String message, Throwable exception) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -305,14 +305,14 @@\n \t@Override\n \tpublic void error (String tag, String message) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void error (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -320,14 +320,14 @@\n \t@Override\n \tpublic void debug (String tag, String message) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[debug] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[debug] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void debug (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n", "projectName": "libgdx.libgdx", "bugLineNum": 315, "bugNodeStartChar": 9709, "bugNodeLength": 51, "fixLineNum": 315, "fixNodeStartChar": 9709, "fixNodeLength": 49, "sourceBeforeFix": "Foundation.NSLog(\"[error] \" + tag + \": \"+ message)", "sourceAfterFix": "Foundation.log(\"[error] \" + tag + \": \"+ message)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "fe6949476080c74f812a4496f858cfaec01e359f", "fixCommitParentSHA1": "e263796e9bb5791ef21e7f52f8456fea122f666e", "bugFilePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java", "fixPatch": "diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\nindex 4e69b45..96f15ec 100644\n--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n@@ -290,14 +290,14 @@\n \t@Override\n \tpublic void log (String tag, String message) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void log (String tag, String message, Throwable exception) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -305,14 +305,14 @@\n \t@Override\n \tpublic void error (String tag, String message) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void error (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -320,14 +320,14 @@\n \t@Override\n \tpublic void debug (String tag, String message) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[debug] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[debug] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void debug (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n", "projectName": "libgdx.libgdx", "bugLineNum": 323, "bugNodeStartChar": 9897, "bugNodeLength": 51, "fixLineNum": 323, "fixNodeStartChar": 9897, "fixNodeLength": 49, "sourceBeforeFix": "Foundation.NSLog(\"[debug] \" + tag + \": \"+ message)", "sourceAfterFix": "Foundation.log(\"[debug] \" + tag + \": \"+ message)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "fe6949476080c74f812a4496f858cfaec01e359f", "fixCommitParentSHA1": "e263796e9bb5791ef21e7f52f8456fea122f666e", "bugFilePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java", "fixPatch": "diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\nindex 4e69b45..96f15ec 100644\n--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n@@ -290,14 +290,14 @@\n \t@Override\n \tpublic void log (String tag, String message) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void log (String tag, String message, Throwable exception) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -305,14 +305,14 @@\n \t@Override\n \tpublic void error (String tag, String message) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void error (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -320,14 +320,14 @@\n \t@Override\n \tpublic void debug (String tag, String message) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[debug] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[debug] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void debug (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n", "projectName": "libgdx.libgdx", "bugLineNum": 323, "bugNodeStartChar": 9897, "bugNodeLength": 51, "fixLineNum": 323, "fixNodeStartChar": 9897, "fixNodeLength": 49, "sourceBeforeFix": "Foundation.NSLog(\"[debug] \" + tag + \": \"+ message)", "sourceAfterFix": "Foundation.log(\"[debug] \" + tag + \": \"+ message)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "fe6949476080c74f812a4496f858cfaec01e359f", "fixCommitParentSHA1": "e263796e9bb5791ef21e7f52f8456fea122f666e", "bugFilePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java", "fixPatch": "diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\nindex 4e69b45..96f15ec 100644\n--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n@@ -290,14 +290,14 @@\n \t@Override\n \tpublic void log (String tag, String message) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void log (String tag, String message, Throwable exception) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -305,14 +305,14 @@\n \t@Override\n \tpublic void error (String tag, String message) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void error (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -320,14 +320,14 @@\n \t@Override\n \tpublic void debug (String tag, String message) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[debug] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[debug] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void debug (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n", "projectName": "libgdx.libgdx", "bugLineNum": 330, "bugNodeStartChar": 10074, "bugNodeLength": 51, "fixLineNum": 330, "fixNodeStartChar": 10074, "fixNodeLength": 49, "sourceBeforeFix": "Foundation.NSLog(\"[error] \" + tag + \": \"+ message)", "sourceAfterFix": "Foundation.log(\"[error] \" + tag + \": \"+ message)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "fe6949476080c74f812a4496f858cfaec01e359f", "fixCommitParentSHA1": "e263796e9bb5791ef21e7f52f8456fea122f666e", "bugFilePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java", "fixPatch": "diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\nindex 4e69b45..96f15ec 100644\n--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n@@ -290,14 +290,14 @@\n \t@Override\n \tpublic void log (String tag, String message) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void log (String tag, String message, Throwable exception) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -305,14 +305,14 @@\n \t@Override\n \tpublic void error (String tag, String message) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void error (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -320,14 +320,14 @@\n \t@Override\n \tpublic void debug (String tag, String message) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[debug] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[debug] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void debug (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n", "projectName": "libgdx.libgdx", "bugLineNum": 330, "bugNodeStartChar": 10074, "bugNodeLength": 51, "fixLineNum": 330, "fixNodeStartChar": 10074, "fixNodeLength": 49, "sourceBeforeFix": "Foundation.NSLog(\"[error] \" + tag + \": \"+ message)", "sourceAfterFix": "Foundation.log(\"[error] \" + tag + \": \"+ message)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "7012976421d9e593d8b276697b2fbbc9328b6fa5", "fixCommitParentSHA1": "c25f3ed04a7dcad130303a10f6d235e7ee7b36fd", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\nindex 40146f3..8dd0fce 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\n@@ -286,7 +286,7 @@\n \n \t/** Sets the minWidth and minHeight to the specified values. */\n \tpublic Container<T> minSize (float width, float height) {\n-\t\tminSize(new Fixed(width));\n+\t\tminSize(new Fixed(width), new Fixed(height));\n \t\treturn this;\n \t}\n \n@@ -326,7 +326,7 @@\n \n \t/** Sets the prefWidth and prefHeight to the specified value. */\n \tpublic Container<T> prefSize (float width, float height) {\n-\t\tprefSize(new Fixed(width));\n+\t\tprefSize(new Fixed(width), new Fixed(height));\n \t\treturn this;\n \t}\n \n@@ -378,7 +378,7 @@\n \n \t/** Sets the maxWidth and maxHeight to the specified values. */\n \tpublic Container<T> maxSize (float width, float height) {\n-\t\tmaxSize(new Fixed(width));\n+\t\tmaxSize(new Fixed(width), new Fixed(height));\n \t\treturn this;\n \t}\n \n", "projectName": "libgdx.libgdx", "bugLineNum": 289, "bugNodeStartChar": 9188, "bugNodeLength": 25, "fixLineNum": 289, "fixNodeStartChar": 9188, "fixNodeLength": 44, "sourceBeforeFix": "minSize(new Fixed(width))", "sourceAfterFix": "minSize(new Fixed(width),new Fixed(height))"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "7012976421d9e593d8b276697b2fbbc9328b6fa5", "fixCommitParentSHA1": "c25f3ed04a7dcad130303a10f6d235e7ee7b36fd", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\nindex 40146f3..8dd0fce 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\n@@ -286,7 +286,7 @@\n \n \t/** Sets the minWidth and minHeight to the specified values. */\n \tpublic Container<T> minSize (float width, float height) {\n-\t\tminSize(new Fixed(width));\n+\t\tminSize(new Fixed(width), new Fixed(height));\n \t\treturn this;\n \t}\n \n@@ -326,7 +326,7 @@\n \n \t/** Sets the prefWidth and prefHeight to the specified value. */\n \tpublic Container<T> prefSize (float width, float height) {\n-\t\tprefSize(new Fixed(width));\n+\t\tprefSize(new Fixed(width), new Fixed(height));\n \t\treturn this;\n \t}\n \n@@ -378,7 +378,7 @@\n \n \t/** Sets the maxWidth and maxHeight to the specified values. */\n \tpublic Container<T> maxSize (float width, float height) {\n-\t\tmaxSize(new Fixed(width));\n+\t\tmaxSize(new Fixed(width), new Fixed(height));\n \t\treturn this;\n \t}\n \n", "projectName": "libgdx.libgdx", "bugLineNum": 329, "bugNodeStartChar": 10145, "bugNodeLength": 26, "fixLineNum": 329, "fixNodeStartChar": 10145, "fixNodeLength": 45, "sourceBeforeFix": "prefSize(new Fixed(width))", "sourceAfterFix": "prefSize(new Fixed(width),new Fixed(height))"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "7012976421d9e593d8b276697b2fbbc9328b6fa5", "fixCommitParentSHA1": "c25f3ed04a7dcad130303a10f6d235e7ee7b36fd", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\nindex 40146f3..8dd0fce 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\n@@ -286,7 +286,7 @@\n \n \t/** Sets the minWidth and minHeight to the specified values. */\n \tpublic Container<T> minSize (float width, float height) {\n-\t\tminSize(new Fixed(width));\n+\t\tminSize(new Fixed(width), new Fixed(height));\n \t\treturn this;\n \t}\n \n@@ -326,7 +326,7 @@\n \n \t/** Sets the prefWidth and prefHeight to the specified value. */\n \tpublic Container<T> prefSize (float width, float height) {\n-\t\tprefSize(new Fixed(width));\n+\t\tprefSize(new Fixed(width), new Fixed(height));\n \t\treturn this;\n \t}\n \n@@ -378,7 +378,7 @@\n \n \t/** Sets the maxWidth and maxHeight to the specified values. */\n \tpublic Container<T> maxSize (float width, float height) {\n-\t\tmaxSize(new Fixed(width));\n+\t\tmaxSize(new Fixed(width), new Fixed(height));\n \t\treturn this;\n \t}\n \n", "projectName": "libgdx.libgdx", "bugLineNum": 381, "bugNodeStartChar": 11406, "bugNodeLength": 25, "fixLineNum": 381, "fixNodeStartChar": 11406, "fixNodeLength": 44, "sourceBeforeFix": "maxSize(new Fixed(width))", "sourceAfterFix": "maxSize(new Fixed(width),new Fixed(height))"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "df43a7a353d1f56e6996170bd74f7a6267eb2bb8", "fixCommitParentSHA1": "c25f3ed04a7dcad130303a10f6d235e7ee7b36fd", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\nindex 40146f3..8dd0fce 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\n@@ -286,7 +286,7 @@\n \n \t/** Sets the minWidth and minHeight to the specified values. */\n \tpublic Container<T> minSize (float width, float height) {\n-\t\tminSize(new Fixed(width));\n+\t\tminSize(new Fixed(width), new Fixed(height));\n \t\treturn this;\n \t}\n \n@@ -326,7 +326,7 @@\n \n \t/** Sets the prefWidth and prefHeight to the specified value. */\n \tpublic Container<T> prefSize (float width, float height) {\n-\t\tprefSize(new Fixed(width));\n+\t\tprefSize(new Fixed(width), new Fixed(height));\n \t\treturn this;\n \t}\n \n@@ -378,7 +378,7 @@\n \n \t/** Sets the maxWidth and maxHeight to the specified values. */\n \tpublic Container<T> maxSize (float width, float height) {\n-\t\tmaxSize(new Fixed(width));\n+\t\tmaxSize(new Fixed(width), new Fixed(height));\n \t\treturn this;\n \t}\n \n", "projectName": "libgdx.libgdx", "bugLineNum": 289, "bugNodeStartChar": 9188, "bugNodeLength": 25, "fixLineNum": 289, "fixNodeStartChar": 9188, "fixNodeLength": 44, "sourceBeforeFix": "minSize(new Fixed(width))", "sourceAfterFix": "minSize(new Fixed(width),new Fixed(height))"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "df43a7a353d1f56e6996170bd74f7a6267eb2bb8", "fixCommitParentSHA1": "c25f3ed04a7dcad130303a10f6d235e7ee7b36fd", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\nindex 40146f3..8dd0fce 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\n@@ -286,7 +286,7 @@\n \n \t/** Sets the minWidth and minHeight to the specified values. */\n \tpublic Container<T> minSize (float width, float height) {\n-\t\tminSize(new Fixed(width));\n+\t\tminSize(new Fixed(width), new Fixed(height));\n \t\treturn this;\n \t}\n \n@@ -326,7 +326,7 @@\n \n \t/** Sets the prefWidth and prefHeight to the specified value. */\n \tpublic Container<T> prefSize (float width, float height) {\n-\t\tprefSize(new Fixed(width));\n+\t\tprefSize(new Fixed(width), new Fixed(height));\n \t\treturn this;\n \t}\n \n@@ -378,7 +378,7 @@\n \n \t/** Sets the maxWidth and maxHeight to the specified values. */\n \tpublic Container<T> maxSize (float width, float height) {\n-\t\tmaxSize(new Fixed(width));\n+\t\tmaxSize(new Fixed(width), new Fixed(height));\n \t\treturn this;\n \t}\n \n", "projectName": "libgdx.libgdx", "bugLineNum": 329, "bugNodeStartChar": 10145, "bugNodeLength": 26, "fixLineNum": 329, "fixNodeStartChar": 10145, "fixNodeLength": 45, "sourceBeforeFix": "prefSize(new Fixed(width))", "sourceAfterFix": "prefSize(new Fixed(width),new Fixed(height))"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "df43a7a353d1f56e6996170bd74f7a6267eb2bb8", "fixCommitParentSHA1": "c25f3ed04a7dcad130303a10f6d235e7ee7b36fd", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\nindex 40146f3..8dd0fce 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\n@@ -286,7 +286,7 @@\n \n \t/** Sets the minWidth and minHeight to the specified values. */\n \tpublic Container<T> minSize (float width, float height) {\n-\t\tminSize(new Fixed(width));\n+\t\tminSize(new Fixed(width), new Fixed(height));\n \t\treturn this;\n \t}\n \n@@ -326,7 +326,7 @@\n \n \t/** Sets the prefWidth and prefHeight to the specified value. */\n \tpublic Container<T> prefSize (float width, float height) {\n-\t\tprefSize(new Fixed(width));\n+\t\tprefSize(new Fixed(width), new Fixed(height));\n \t\treturn this;\n \t}\n \n@@ -378,7 +378,7 @@\n \n \t/** Sets the maxWidth and maxHeight to the specified values. */\n \tpublic Container<T> maxSize (float width, float height) {\n-\t\tmaxSize(new Fixed(width));\n+\t\tmaxSize(new Fixed(width), new Fixed(height));\n \t\treturn this;\n \t}\n \n", "projectName": "libgdx.libgdx", "bugLineNum": 381, "bugNodeStartChar": 11406, "bugNodeLength": 25, "fixLineNum": 381, "fixNodeStartChar": 11406, "fixNodeLength": 44, "sourceBeforeFix": "maxSize(new Fixed(width))", "sourceAfterFix": "maxSize(new Fixed(width),new Fixed(height))"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "c25f3ed04a7dcad130303a10f6d235e7ee7b36fd", "fixCommitParentSHA1": "3d147782ed402c91dfcbd5036c4b124185588dc7", "bugFilePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/FilesTest.java", "fixPatch": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/FilesTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/FilesTest.java\nindex 3321c61..14f714e 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/FilesTest.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/FilesTest.java\n@@ -386,7 +386,7 @@\n \t\tif (handle.delete()) fail();\r\n \t\tif (handle.list().length != 0) fail();\r\n \t\tif (handle.child(\"meow\").exists()) fail();\r\n-\t\tif (handle.parent().exists()) fail();\r\n+\t\tif (!handle.parent().exists()) fail();\r\n \t\ttry {\r\n \t\t\thandle.read().close();\r\n \t\t\tfail();\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 389, "bugNodeStartChar": 13324, "bugNodeLength": 24, "fixLineNum": 389, "fixNodeStartChar": 12936, "fixNodeLength": 25, "sourceBeforeFix": "handle.parent().exists()", "sourceAfterFix": "!handle.parent().exists()"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "39c42c2dc347f1d8b10311c09e436fd4ade63c4c", "fixCommitParentSHA1": "148034b9978822f8c478a123131a02b08e26c95e", "bugFilePath": "gdx/src/com/badlogic/gdx/net/NetJavaImpl.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java b/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java\nindex 303f803..a844689 100644\n--- a/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java\n+++ b/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java\n@@ -146,7 +146,7 @@\n \t\t\tconnection.setDoOutput(doingOutPut);\r\n \t\t\tconnection.setDoInput(true);\r\n \t\t\tconnection.setRequestMethod(method);\r\n-\t\t\tconnection.setFollowRedirects(httpRequest.getFollowRedirects());\r\n+\t\t\tHttpURLConnection.setFollowRedirects(httpRequest.getFollowRedirects());\r\n \r\n \t\t\tlock.lock();\r\n \t\t\tconnections.put(httpRequest, connection);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 149, "bugNodeStartChar": 4832, "bugNodeLength": 63, "fixLineNum": 149, "fixNodeStartChar": 4684, "fixNodeLength": 70, "sourceBeforeFix": "connection.setFollowRedirects(httpRequest.getFollowRedirects())", "sourceAfterFix": "HttpURLConnection.setFollowRedirects(httpRequest.getFollowRedirects())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "39c42c2dc347f1d8b10311c09e436fd4ade63c4c", "fixCommitParentSHA1": "148034b9978822f8c478a123131a02b08e26c95e", "bugFilePath": "gdx/src/com/badlogic/gdx/net/NetJavaImpl.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java b/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java\nindex 303f803..a844689 100644\n--- a/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java\n+++ b/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java\n@@ -146,7 +146,7 @@\n \t\t\tconnection.setDoOutput(doingOutPut);\r\n \t\t\tconnection.setDoInput(true);\r\n \t\t\tconnection.setRequestMethod(method);\r\n-\t\t\tconnection.setFollowRedirects(httpRequest.getFollowRedirects());\r\n+\t\t\tHttpURLConnection.setFollowRedirects(httpRequest.getFollowRedirects());\r\n \r\n \t\t\tlock.lock();\r\n \t\t\tconnections.put(httpRequest, connection);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 149, "bugNodeStartChar": 4832, "bugNodeLength": 63, "fixLineNum": 149, "fixNodeStartChar": 4684, "fixNodeLength": 70, "sourceBeforeFix": "connection.setFollowRedirects(httpRequest.getFollowRedirects())", "sourceAfterFix": "HttpURLConnection.setFollowRedirects(httpRequest.getFollowRedirects())"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "b5247d268fd7d0c60421becb0dd1297ca545d219", "fixCommitParentSHA1": "2788d4280b709f33ffa3d7ece39c3302dadcd383", "bugFilePath": "gdx/src/com/badlogic/gdx/net/NetJavaImpl.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java b/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java\nindex 303f803..a844689 100644\n--- a/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java\n+++ b/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java\n@@ -146,7 +146,7 @@\n \t\t\tconnection.setDoOutput(doingOutPut);\r\n \t\t\tconnection.setDoInput(true);\r\n \t\t\tconnection.setRequestMethod(method);\r\n-\t\t\tconnection.setFollowRedirects(httpRequest.getFollowRedirects());\r\n+\t\t\tHttpURLConnection.setFollowRedirects(httpRequest.getFollowRedirects());\r\n \r\n \t\t\tlock.lock();\r\n \t\t\tconnections.put(httpRequest, connection);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 149, "bugNodeStartChar": 4832, "bugNodeLength": 63, "fixLineNum": 149, "fixNodeStartChar": 4684, "fixNodeLength": 70, "sourceBeforeFix": "connection.setFollowRedirects(httpRequest.getFollowRedirects())", "sourceAfterFix": "HttpURLConnection.setFollowRedirects(httpRequest.getFollowRedirects())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "b5247d268fd7d0c60421becb0dd1297ca545d219", "fixCommitParentSHA1": "2788d4280b709f33ffa3d7ece39c3302dadcd383", "bugFilePath": "gdx/src/com/badlogic/gdx/net/NetJavaImpl.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java b/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java\nindex 303f803..a844689 100644\n--- a/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java\n+++ b/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java\n@@ -146,7 +146,7 @@\n \t\t\tconnection.setDoOutput(doingOutPut);\r\n \t\t\tconnection.setDoInput(true);\r\n \t\t\tconnection.setRequestMethod(method);\r\n-\t\t\tconnection.setFollowRedirects(httpRequest.getFollowRedirects());\r\n+\t\t\tHttpURLConnection.setFollowRedirects(httpRequest.getFollowRedirects());\r\n \r\n \t\t\tlock.lock();\r\n \t\t\tconnections.put(httpRequest, connection);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 149, "bugNodeStartChar": 4832, "bugNodeLength": 63, "fixLineNum": 149, "fixNodeStartChar": 4684, "fixNodeLength": 70, "sourceBeforeFix": "connection.setFollowRedirects(httpRequest.getFollowRedirects())", "sourceAfterFix": "HttpURLConnection.setFollowRedirects(httpRequest.getFollowRedirects())"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "5bfeb071d07d2ae298e5c519991fc488d356f34c", "fixCommitParentSHA1": "bcad062185bc2ad7d9431c4c952645ad8351d394", "bugFilePath": "extensions/gdx-ai/src/com/badlogic/gdx/ai/msg/MessageDispatcher.java", "fixPatch": "diff --git a/extensions/gdx-ai/src/com/badlogic/gdx/ai/msg/MessageDispatcher.java b/extensions/gdx-ai/src/com/badlogic/gdx/ai/msg/MessageDispatcher.java\nindex 4dca0ab..549c185 100644\n--- a/extensions/gdx-ai/src/com/badlogic/gdx/ai/msg/MessageDispatcher.java\n+++ b/extensions/gdx-ai/src/com/badlogic/gdx/ai/msg/MessageDispatcher.java\n@@ -157,7 +157,7 @@\n \t\tdo {\n \t\t\t// Read the telegram from the front of the queue\n \t\t\tfinal Telegram telegram = queue.peek();\n-\t\t\tif (telegram.getTimestamp() < currentTime) break;\n+\t\t\tif (telegram.getTimestamp() > currentTime) break;\n \n \t\t\tif (debugEnabled) {\n \t\t\t\tGdx.app.log(LOG_TAG, \"Queued telegram ready for dispatch: Sent to \" + telegram.receiver + \". Msg is \"\n", "projectName": "libgdx.libgdx", "bugLineNum": 160, "bugNodeStartChar": 5649, "bugNodeLength": 37, "fixLineNum": 160, "fixNodeStartChar": 5649, "fixNodeLength": 37, "sourceBeforeFix": "telegram.getTimestamp() < currentTime", "sourceAfterFix": "telegram.getTimestamp() > currentTime"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "2979c84ee1ee2d8ee9623326bedd7d5a0d53de26", "fixCommitParentSHA1": "fcb18ff6ae441da1003ef87e566e4aaf05782488", "bugFilePath": "backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/PreloaderBundleGenerator.java", "fixPatch": "diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/PreloaderBundleGenerator.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/PreloaderBundleGenerator.java\nindex 63d0d38..ddf304f 100644\n--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/PreloaderBundleGenerator.java\n+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/PreloaderBundleGenerator.java\n@@ -229,7 +229,7 @@\n \t\t\tString[] tokens = paths.split(\",\");\n \t\t\tString path = null;\n \t\t\tfor(String token: tokens) {\n-\t\t\t\tif(new FileWrapper(token).exists()) {\n+\t\t\t\tif (new FileWrapper(token).exists() || new FileWrapper(token).mkdirs()) {\n \t\t\t\t\tpath = token;\n \t\t\t\t}\n \t\t\t}\n", "projectName": "libgdx.libgdx", "bugLineNum": 232, "bugNodeStartChar": 9642, "bugNodeLength": 31, "fixLineNum": 232, "fixNodeStartChar": 9643, "fixNodeLength": 66, "sourceBeforeFix": "new FileWrapper(token).exists()", "sourceAfterFix": "new FileWrapper(token).exists() || new FileWrapper(token).mkdirs()"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "abf9b6c77bdb66399f3296664b8d051582cdba29", "fixCommitParentSHA1": "e194bf8e1bfe3f9e45a85f0b02cdcc5ac8127308", "bugFilePath": "gdx/src/com/badlogic/gdx/math/Ellipse.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/Ellipse.java b/gdx/src/com/badlogic/gdx/math/Ellipse.java\nindex 71229b6..c33a10a 100644\n--- a/gdx/src/com/badlogic/gdx/math/Ellipse.java\n+++ b/gdx/src/com/badlogic/gdx/math/Ellipse.java\n@@ -180,7 +180,7 @@\n \r\n \t/** @return The area of this {@link Ellipse} as {@link MathUtils#PI} * {@link rx Ellipse#width} * {@link ry Ellipse#height} */\r\n \tpublic float area () {\r\n-\t\treturn MathUtils.PI * (this.width * this.height) / 2;\r\n+\t\treturn MathUtils.PI * (this.width * this.height) / 4;\r\n \t}\r\n \r\n \t/** Approximates the circumference of this {@link Ellipse}. Oddly enough, the circumference of an ellipse is actually difficult\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 183, "bugNodeStartChar": 5236, "bugNodeLength": 45, "fixLineNum": 183, "fixNodeStartChar": 5054, "fixNodeLength": 45, "sourceBeforeFix": "MathUtils.PI * (this.width * this.height) / 2", "sourceAfterFix": "MathUtils.PI * (this.width * this.height) / 4"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "3acb4cfe293cec597a89678bf92cf1ecbe96ce00", "fixCommitParentSHA1": "e194bf8e1bfe3f9e45a85f0b02cdcc5ac8127308", "bugFilePath": "gdx/src/com/badlogic/gdx/math/Ellipse.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/Ellipse.java b/gdx/src/com/badlogic/gdx/math/Ellipse.java\nindex 71229b6..c33a10a 100644\n--- a/gdx/src/com/badlogic/gdx/math/Ellipse.java\n+++ b/gdx/src/com/badlogic/gdx/math/Ellipse.java\n@@ -180,7 +180,7 @@\n \r\n \t/** @return The area of this {@link Ellipse} as {@link MathUtils#PI} * {@link rx Ellipse#width} * {@link ry Ellipse#height} */\r\n \tpublic float area () {\r\n-\t\treturn MathUtils.PI * (this.width * this.height) / 2;\r\n+\t\treturn MathUtils.PI * (this.width * this.height) / 4;\r\n \t}\r\n \r\n \t/** Approximates the circumference of this {@link Ellipse}. Oddly enough, the circumference of an ellipse is actually difficult\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 183, "bugNodeStartChar": 5236, "bugNodeLength": 45, "fixLineNum": 183, "fixNodeStartChar": 5054, "fixNodeLength": 45, "sourceBeforeFix": "MathUtils.PI * (this.width * this.height) / 2", "sourceAfterFix": "MathUtils.PI * (this.width * this.height) / 4"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "7369734ba2477dc5f208c9bcdbf438d42e92ac25", "fixCommitParentSHA1": "01196f282535b641f0c3c19933c214286e0cac2f", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\nindex 7dc5690..eb02c1b 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\n@@ -14,7 +14,7 @@\n  * {@link Table} with a single cell but is more lightweight.\n  * @author Nathan Sweet */\n public class Container<T extends Actor> extends WidgetGroup {\n-\tprivate Actor actor;\n+\tprivate T actor;\n \tprivate Value minWidth = Value.minWidth, minHeight = Value.minHeight;\n \tprivate Value prefWidth = Value.prefWidth, prefHeight = Value.prefHeight;\n \tprivate Value maxWidth = Value.zero, maxHeight = Value.zero;\n@@ -31,7 +31,7 @@\n \t\tsetTransform(false);\n \t}\n \n-\tpublic Container (Actor actor) {\n+\tpublic Container (T actor) {\n \t\tthis();\n \t\tsetActor(actor);\n \t}\n@@ -151,7 +151,7 @@\n \t}\n \n \t/** @param actor May be null. */\n-\tpublic void setActor (Actor actor) {\n+\tpublic void setActor (T actor) {\n \t\tif (actor == this) throw new IllegalArgumentException(\"actor cannot be the Container.\");\n \t\tif (this.actor != null) super.removeActor(this.actor);\n \t\tthis.actor = actor;\n@@ -160,7 +160,7 @@\n \n \t/** @return May be null. */\n \tpublic T getActor () {\n-\t\treturn (T)actor;\n+\t\treturn actor;\n \t}\n \n \t/** @deprecated Container may have only a single child.\n", "projectName": "libgdx.libgdx", "bugLineNum": 17, "bugNodeStartChar": 713, "bugNodeLength": 20, "fixLineNum": 17, "fixNodeStartChar": 713, "fixNodeLength": 16, "sourceBeforeFix": "private Actor actor; ", "sourceAfterFix": "private T actor; "}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "7369734ba2477dc5f208c9bcdbf438d42e92ac25", "fixCommitParentSHA1": "01196f282535b641f0c3c19933c214286e0cac2f", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\nindex 7dc5690..eb02c1b 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\n@@ -14,7 +14,7 @@\n  * {@link Table} with a single cell but is more lightweight.\n  * @author Nathan Sweet */\n public class Container<T extends Actor> extends WidgetGroup {\n-\tprivate Actor actor;\n+\tprivate T actor;\n \tprivate Value minWidth = Value.minWidth, minHeight = Value.minHeight;\n \tprivate Value prefWidth = Value.prefWidth, prefHeight = Value.prefHeight;\n \tprivate Value maxWidth = Value.zero, maxHeight = Value.zero;\n@@ -31,7 +31,7 @@\n \t\tsetTransform(false);\n \t}\n \n-\tpublic Container (Actor actor) {\n+\tpublic Container (T actor) {\n \t\tthis();\n \t\tsetActor(actor);\n \t}\n@@ -151,7 +151,7 @@\n \t}\n \n \t/** @param actor May be null. */\n-\tpublic void setActor (Actor actor) {\n+\tpublic void setActor (T actor) {\n \t\tif (actor == this) throw new IllegalArgumentException(\"actor cannot be the Container.\");\n \t\tif (this.actor != null) super.removeActor(this.actor);\n \t\tthis.actor = actor;\n@@ -160,7 +160,7 @@\n \n \t/** @return May be null. */\n \tpublic T getActor () {\n-\t\treturn (T)actor;\n+\t\treturn actor;\n \t}\n \n \t/** @deprecated Container may have only a single child.\n", "projectName": "libgdx.libgdx", "bugLineNum": 34, "bugNodeStartChar": 1333, "bugNodeLength": 11, "fixLineNum": 34, "fixNodeStartChar": 1333, "fixNodeLength": 7, "sourceBeforeFix": "Actor actor", "sourceAfterFix": "T actor"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "7369734ba2477dc5f208c9bcdbf438d42e92ac25", "fixCommitParentSHA1": "01196f282535b641f0c3c19933c214286e0cac2f", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\nindex 7dc5690..eb02c1b 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\n@@ -14,7 +14,7 @@\n  * {@link Table} with a single cell but is more lightweight.\n  * @author Nathan Sweet */\n public class Container<T extends Actor> extends WidgetGroup {\n-\tprivate Actor actor;\n+\tprivate T actor;\n \tprivate Value minWidth = Value.minWidth, minHeight = Value.minHeight;\n \tprivate Value prefWidth = Value.prefWidth, prefHeight = Value.prefHeight;\n \tprivate Value maxWidth = Value.zero, maxHeight = Value.zero;\n@@ -31,7 +31,7 @@\n \t\tsetTransform(false);\n \t}\n \n-\tpublic Container (Actor actor) {\n+\tpublic Container (T actor) {\n \t\tthis();\n \t\tsetActor(actor);\n \t}\n@@ -151,7 +151,7 @@\n \t}\n \n \t/** @param actor May be null. */\n-\tpublic void setActor (Actor actor) {\n+\tpublic void setActor (T actor) {\n \t\tif (actor == this) throw new IllegalArgumentException(\"actor cannot be the Container.\");\n \t\tif (this.actor != null) super.removeActor(this.actor);\n \t\tthis.actor = actor;\n@@ -160,7 +160,7 @@\n \n \t/** @return May be null. */\n \tpublic T getActor () {\n-\t\treturn (T)actor;\n+\t\treturn actor;\n \t}\n \n \t/** @deprecated Container may have only a single child.\n", "projectName": "libgdx.libgdx", "bugLineNum": 154, "bugNodeStartChar": 5353, "bugNodeLength": 11, "fixLineNum": 154, "fixNodeStartChar": 5353, "fixNodeLength": 7, "sourceBeforeFix": "Actor actor", "sourceAfterFix": "T actor"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "34df86db858d325c9ae6951ae9e69c2fae914be7", "fixCommitParentSHA1": "35437c5cbef3da7bd6e26089a828eb28585f5743", "bugFilePath": "gdx/src/com/badlogic/gdx/maps/tiled/renderers/OrthogonalTiledMapRenderer.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/renderers/OrthogonalTiledMapRenderer.java b/gdx/src/com/badlogic/gdx/maps/tiled/renderers/OrthogonalTiledMapRenderer.java\nindex 111d18a..26f95cd 100644\n--- a/gdx/src/com/badlogic/gdx/maps/tiled/renderers/OrthogonalTiledMapRenderer.java\n+++ b/gdx/src/com/badlogic/gdx/maps/tiled/renderers/OrthogonalTiledMapRenderer.java\n@@ -86,11 +86,11 @@\n \t\tfinal int row1 = Math.max(0, (int)(viewBounds.y / layerTileHeight));\r\n \t\tfinal int row2 = Math.min(layerHeight, (int)((viewBounds.y + viewBounds.height + layerTileHeight) / layerTileHeight));\r\n \r\n-\t\tfloat y = row1 * layerTileHeight;\r\n+\t\tfloat y = row2 * layerTileHeight;\r\n \t\tfloat xStart = col1 * layerTileWidth;\r\n \t\tfinal float[] vertices = this.vertices;\r\n \r\n-\t\tfor (int row = row1; row < row2; row++) {\r\n+\t\tfor (int row = row2; row >= row1; row--) {\r\n \t\t\tfloat x = xStart;\r\n \t\t\tfor (int col = col1; col < col2; col++) {\r\n \t\t\t\tfinal TiledMapTileLayer.Cell cell = layer.getCell(col, row);\r\n@@ -208,7 +208,7 @@\n \t\t\t\t}\r\n \t\t\t\tx += layerTileWidth;\r\n \t\t\t}\r\n-\t\t\ty += layerTileHeight;\r\n+\t\t\ty -= layerTileHeight;\r\n \t\t}\r\n \t}\r\n }\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 89, "bugNodeStartChar": 3724, "bugNodeLength": 22, "fixLineNum": 89, "fixNodeStartChar": 3636, "fixNodeLength": 22, "sourceBeforeFix": "row1 * layerTileHeight", "sourceAfterFix": "row2 * layerTileHeight"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "34df86db858d325c9ae6951ae9e69c2fae914be7", "fixCommitParentSHA1": "35437c5cbef3da7bd6e26089a828eb28585f5743", "bugFilePath": "gdx/src/com/badlogic/gdx/maps/tiled/renderers/OrthogonalTiledMapRenderer.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/renderers/OrthogonalTiledMapRenderer.java b/gdx/src/com/badlogic/gdx/maps/tiled/renderers/OrthogonalTiledMapRenderer.java\nindex 111d18a..26f95cd 100644\n--- a/gdx/src/com/badlogic/gdx/maps/tiled/renderers/OrthogonalTiledMapRenderer.java\n+++ b/gdx/src/com/badlogic/gdx/maps/tiled/renderers/OrthogonalTiledMapRenderer.java\n@@ -86,11 +86,11 @@\n \t\tfinal int row1 = Math.max(0, (int)(viewBounds.y / layerTileHeight));\r\n \t\tfinal int row2 = Math.min(layerHeight, (int)((viewBounds.y + viewBounds.height + layerTileHeight) / layerTileHeight));\r\n \r\n-\t\tfloat y = row1 * layerTileHeight;\r\n+\t\tfloat y = row2 * layerTileHeight;\r\n \t\tfloat xStart = col1 * layerTileWidth;\r\n \t\tfinal float[] vertices = this.vertices;\r\n \r\n-\t\tfor (int row = row1; row < row2; row++) {\r\n+\t\tfor (int row = row2; row >= row1; row--) {\r\n \t\t\tfloat x = xStart;\r\n \t\t\tfor (int col = col1; col < col2; col++) {\r\n \t\t\t\tfinal TiledMapTileLayer.Cell cell = layer.getCell(col, row);\r\n@@ -208,7 +208,7 @@\n \t\t\t\t}\r\n \t\t\t\tx += layerTileWidth;\r\n \t\t\t}\r\n-\t\t\ty += layerTileHeight;\r\n+\t\t\ty -= layerTileHeight;\r\n \t\t}\r\n \t}\r\n }\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 89, "bugNodeStartChar": 3724, "bugNodeLength": 22, "fixLineNum": 89, "fixNodeStartChar": 3636, "fixNodeLength": 22, "sourceBeforeFix": "row1 * layerTileHeight", "sourceAfterFix": "row2 * layerTileHeight"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "df40e74265a3bdc4797efb30f49cd35733bde902", "fixCommitParentSHA1": "ec205f012b27d771fe4be30f023daf40eeb0234e", "bugFilePath": "gdx/src/com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader.java b/gdx/src/com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader.java\nindex 2c443c5..518bad6 100644\n--- a/gdx/src/com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader.java\n+++ b/gdx/src/com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader.java\n@@ -337,7 +337,7 @@\n \t\t\tString atlasFilePath = map.getProperties().get(\"atlas\", String.class);\n \t\t\tif (atlasFilePath == null) {\n \t\t\t\tFileHandle atlasFile = tmxFile.sibling(tmxFile.nameWithoutExtension() + \".atlas\");\n-\t\t\t\tif (atlasFile.exists()) atlasFilePath = atlasFile.path();\n+\t\t\t\tif (atlasFile.exists()) atlasFilePath = atlasFile.name();\n \t\t\t}\n \t\t\tif (atlasFilePath == null) {\n \t\t\t\tthrow new GdxRuntimeException(\"The map is missing the 'atlas' property\");\n", "projectName": "libgdx.libgdx", "bugLineNum": 340, "bugNodeStartChar": 12528, "bugNodeLength": 16, "fixLineNum": 340, "fixNodeStartChar": 12528, "fixNodeLength": 16, "sourceBeforeFix": "atlasFile.path()", "sourceAfterFix": "atlasFile.name()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "df40e74265a3bdc4797efb30f49cd35733bde902", "fixCommitParentSHA1": "ec205f012b27d771fe4be30f023daf40eeb0234e", "bugFilePath": "gdx/src/com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader.java b/gdx/src/com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader.java\nindex 2c443c5..518bad6 100644\n--- a/gdx/src/com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader.java\n+++ b/gdx/src/com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader.java\n@@ -337,7 +337,7 @@\n \t\t\tString atlasFilePath = map.getProperties().get(\"atlas\", String.class);\n \t\t\tif (atlasFilePath == null) {\n \t\t\t\tFileHandle atlasFile = tmxFile.sibling(tmxFile.nameWithoutExtension() + \".atlas\");\n-\t\t\t\tif (atlasFile.exists()) atlasFilePath = atlasFile.path();\n+\t\t\t\tif (atlasFile.exists()) atlasFilePath = atlasFile.name();\n \t\t\t}\n \t\t\tif (atlasFilePath == null) {\n \t\t\t\tthrow new GdxRuntimeException(\"The map is missing the 'atlas' property\");\n", "projectName": "libgdx.libgdx", "bugLineNum": 340, "bugNodeStartChar": 12528, "bugNodeLength": 16, "fixLineNum": 340, "fixNodeStartChar": 12528, "fixNodeLength": 16, "sourceBeforeFix": "atlasFile.path()", "sourceAfterFix": "atlasFile.name()"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "31b6f673fc5a826e1a649edaec147f2572d3dcf4", "fixCommitParentSHA1": "a743eaef862f06110c0397e80382ea46c4ce6520", "bugFilePath": "extensions/gdx-setup/src/com/badlogic/gdx/setup/GdxSetup.java", "fixPatch": "diff --git a/extensions/gdx-setup/src/com/badlogic/gdx/setup/GdxSetup.java b/extensions/gdx-setup/src/com/badlogic/gdx/setup/GdxSetup.java\nindex 1b8ae82..2916fb9 100644\n--- a/extensions/gdx-setup/src/com/badlogic/gdx/setup/GdxSetup.java\n+++ b/extensions/gdx-setup/src/com/badlogic/gdx/setup/GdxSetup.java\n@@ -42,7 +42,7 @@\n \t\t\r\n \t\tString packageDir = packageName.replace('.', '/');\r\n \t\tString sdkPath = sdkLocation.replace('\\\\', '/');\r\n-\t\tif(isSdkLocationValid(sdkLocation)) {\r\n+\t\tif(!isSdkLocationValid(sdkLocation)) {\r\n \t\t\tSystem.out.println(\"Android SDK location '\" + sdkLocation + \"' doesn't contain an SDK\");\r\n \t\t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 45, "bugNodeStartChar": 1675, "bugNodeLength": 31, "fixLineNum": 45, "fixNodeStartChar": 1631, "fixNodeLength": 32, "sourceBeforeFix": "isSdkLocationValid(sdkLocation)", "sourceAfterFix": "!isSdkLocationValid(sdkLocation)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "07b041b58bd8c0780c744e672e9dd256a933b841", "fixCommitParentSHA1": "bb9234441916b623d6780574a2b942a76147eb7e", "bugFilePath": "backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/utils/reflect/ClassReflection.java", "fixPatch": "diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/utils/reflect/ClassReflection.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/utils/reflect/ClassReflection.java\nindex 6db7964..3ad2cea 100644\n--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/utils/reflect/ClassReflection.java\n+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/utils/reflect/ClassReflection.java\n@@ -34,7 +34,7 @@\n \r\n \t/** Returns the simple name of the underlying class as supplied in the source code. */\r\n \tstatic public String getSimpleName (Class c) {\r\n-\t\treturn c.getName();\r\n+\t\treturn c.getSimpleName();\r\n \t}\r\n \r\n \t/** Determines if the supplied Object is assignment-compatible with the object represented by supplied Class. */\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 37, "bugNodeStartChar": 1522, "bugNodeLength": 11, "fixLineNum": 37, "fixNodeStartChar": 1486, "fixNodeLength": 17, "sourceBeforeFix": "c.getName()", "sourceAfterFix": "c.getSimpleName()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "07b041b58bd8c0780c744e672e9dd256a933b841", "fixCommitParentSHA1": "bb9234441916b623d6780574a2b942a76147eb7e", "bugFilePath": "backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/utils/reflect/ClassReflection.java", "fixPatch": "diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/utils/reflect/ClassReflection.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/utils/reflect/ClassReflection.java\nindex 6db7964..3ad2cea 100644\n--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/utils/reflect/ClassReflection.java\n+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/utils/reflect/ClassReflection.java\n@@ -34,7 +34,7 @@\n \r\n \t/** Returns the simple name of the underlying class as supplied in the source code. */\r\n \tstatic public String getSimpleName (Class c) {\r\n-\t\treturn c.getName();\r\n+\t\treturn c.getSimpleName();\r\n \t}\r\n \r\n \t/** Determines if the supplied Object is assignment-compatible with the object represented by supplied Class. */\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 37, "bugNodeStartChar": 1522, "bugNodeLength": 11, "fixLineNum": 37, "fixNodeStartChar": 1486, "fixNodeLength": 17, "sourceBeforeFix": "c.getName()", "sourceAfterFix": "c.getSimpleName()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "62ea7a809b0c463f020324b841286d6dfe92d282", "fixCommitParentSHA1": "9cb129ba406090cde2e33f863a46b74e9ab9fb21", "bugFilePath": "extensions/gdx-setup/src/com/badlogic/gdx/setup/GdxSetupUI.java", "fixPatch": "diff --git a/extensions/gdx-setup/src/com/badlogic/gdx/setup/GdxSetupUI.java b/extensions/gdx-setup/src/com/badlogic/gdx/setup/GdxSetupUI.java\nindex 42405a2..b3b6409 100644\n--- a/extensions/gdx-setup/src/com/badlogic/gdx/setup/GdxSetupUI.java\n+++ b/extensions/gdx-setup/src/com/badlogic/gdx/setup/GdxSetupUI.java\n@@ -175,7 +175,7 @@\n \t\t\t\t\tJFileChooser chooser = new JFileChooser();\n \t\t\t\t\tchooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);\n \t\t\t\t\tchooser.setDialogTitle(\"Chose destination\");\n-\t\t\t\t\tint result = chooser.showSaveDialog(null);\n+\t\t\t\t\tint result = chooser.showOpenDialog(null);\n \t\t\t\t\tif(result == JFileChooser.APPROVE_OPTION) {\n \t\t\t\t\t\tFile dir = chooser.getSelectedFile();\n \t\t\t\t\t\tif(dir == null) return;\n", "projectName": "libgdx.libgdx", "bugLineNum": 178, "bugNodeStartChar": 6139, "bugNodeLength": 28, "fixLineNum": 178, "fixNodeStartChar": 6139, "fixNodeLength": 28, "sourceBeforeFix": "chooser.showSaveDialog(null)", "sourceAfterFix": "chooser.showOpenDialog(null)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "62ea7a809b0c463f020324b841286d6dfe92d282", "fixCommitParentSHA1": "9cb129ba406090cde2e33f863a46b74e9ab9fb21", "bugFilePath": "extensions/gdx-setup/src/com/badlogic/gdx/setup/GdxSetupUI.java", "fixPatch": "diff --git a/extensions/gdx-setup/src/com/badlogic/gdx/setup/GdxSetupUI.java b/extensions/gdx-setup/src/com/badlogic/gdx/setup/GdxSetupUI.java\nindex 42405a2..b3b6409 100644\n--- a/extensions/gdx-setup/src/com/badlogic/gdx/setup/GdxSetupUI.java\n+++ b/extensions/gdx-setup/src/com/badlogic/gdx/setup/GdxSetupUI.java\n@@ -175,7 +175,7 @@\n \t\t\t\t\tJFileChooser chooser = new JFileChooser();\n \t\t\t\t\tchooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);\n \t\t\t\t\tchooser.setDialogTitle(\"Chose destination\");\n-\t\t\t\t\tint result = chooser.showSaveDialog(null);\n+\t\t\t\t\tint result = chooser.showOpenDialog(null);\n \t\t\t\t\tif(result == JFileChooser.APPROVE_OPTION) {\n \t\t\t\t\t\tFile dir = chooser.getSelectedFile();\n \t\t\t\t\t\tif(dir == null) return;\n", "projectName": "libgdx.libgdx", "bugLineNum": 178, "bugNodeStartChar": 6139, "bugNodeLength": 28, "fixLineNum": 178, "fixNodeStartChar": 6139, "fixNodeLength": 28, "sourceBeforeFix": "chooser.showSaveDialog(null)", "sourceAfterFix": "chooser.showOpenDialog(null)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "aa6261fc69f53add198da737aeb9c58c3f91edee", "fixCommitParentSHA1": "0731fcac3f25382aca7465a1214552b1c6ee7fb2", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java\nindex 8e330f0..d614b6b 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java\n@@ -803,7 +803,7 @@\n \r\n \t/** Returns the width of the scrolled viewport. */\r\n \tpublic float getScrollWidth () {\r\n-\t\treturn areaHeight;\r\n+\t\treturn areaWidth;\r\n \t}\r\n \r\n \t/** Returns the height of the scrolled viewport. */\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 806, "bugNodeStartChar": 28178, "bugNodeLength": 18, "fixLineNum": 806, "fixNodeStartChar": 27373, "fixNodeLength": 17, "sourceBeforeFix": "return areaHeight; ", "sourceAfterFix": "return areaWidth; "}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "8057359cb2662f715bf05c04462f4f2d9e550ef6", "fixCommitParentSHA1": "f478d6b08ed427dacb92ba46e5e153a31f192661", "bugFilePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/CharacterTest.java", "fixPatch": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/CharacterTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/CharacterTest.java\nindex 936f163..a422b17 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/CharacterTest.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/CharacterTest.java\n@@ -69,16 +69,16 @@\n \t\tdisposables.add(texture);\n \t\tfinal Material material = new Material(TextureAttribute.createDiffuse(texture), ColorAttribute.createSpecular(1,1,1,1), FloatAttribute.createShininess(8f));\n \t\tfinal long attributes = Usage.Position | Usage.Normal | Usage.TextureCoordinates;\n-\t\tfinal Model capsule = modelBuilder.createCapsule(1.75f, 4.25f, 16, material, attributes);\n+\t\tfinal Model capsule = modelBuilder.createCapsule(2f, 6f, 16, material, attributes);\n \t\tdisposables.add(capsule);\n \t\tworld.addConstructor(\"capsule\", new BulletConstructor(capsule, null));\n-\t\tcharacter = world.add(\"capsule\", 5f, 2.125f, 5f);\n+\t\tcharacter = world.add(\"capsule\", 5f, 3f, 5f);\n \t\tcharacterTransform = character.transform; // Set by reference\n \t\t\n \t\t// Create the physics representation of the character\n \t\tghostObject = new btPairCachingGhostObject();\n \t\tghostObject.setWorldTransform(characterTransform);\n-\t\tghostShape = new btCapsuleShape(1.75f, 1.75f);\n+\t\tghostShape = new btCapsuleShape(2f, 2f);\n \t\tghostObject.setCollisionShape(ghostShape);\n \t\tghostObject.setCollisionFlags(btCollisionObject.CollisionFlags.CF_CHARACTER_OBJECT);\n \t\tcharacterController = new btKinematicCharacterController(ghostObject, ghostShape, .35f);\n", "projectName": "libgdx.libgdx", "bugLineNum": 75, "bugNodeStartChar": 3843, "bugNodeLength": 36, "fixLineNum": 75, "fixNodeStartChar": 3843, "fixNodeLength": 32, "sourceBeforeFix": "world.add(\"capsule\",5f,2.125f,5f)", "sourceAfterFix": "world.add(\"capsule\",5f,3f,5f)"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "eb04c74353ebdde873abe92417a43bbac6911ce0", "fixCommitParentSHA1": "741eed901fe05577e506d4adc22f9a958eb0095d", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java b/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java\nindex 598caff..c808235 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java\n@@ -200,7 +200,7 @@\n \tpublic void draw (Batch spriteBatch) {\r\n \t\tTextureRegion[] regions = font.getRegions();\r\n \t\tfor (int j = 0, n = vertexData.length; j < n; j++) {\r\n-\t\t\tif (idx[j] >= 0) { // ignore if this texture has no glyphs\r\n+\t\t\tif (idx[j] > 0) { // ignore if this texture has no glyphs\r\n \t\t\t\tfloat[] vertices = vertexData[j];\r\n \t\t\t\tspriteBatch.draw(regions[j].getTexture(), vertices, 0, idx[j]);\r\n \t\t\t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 203, "bugNodeStartChar": 7542, "bugNodeLength": 11, "fixLineNum": 203, "fixNodeStartChar": 7340, "fixNodeLength": 10, "sourceBeforeFix": "idx[j] >= 0", "sourceAfterFix": "idx[j] > 0"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "4673fe619fce74096d4f430ede8bee19f9ce2334", "fixCommitParentSHA1": "f8cd713aafac1e06e17a0b0af1ca943a14e368f2", "bugFilePath": "demos/pax-britannica/pax-britannica/src/de/swagner/paxbritannica/Ship.java", "fixPatch": "diff --git a/demos/pax-britannica/pax-britannica/src/de/swagner/paxbritannica/Ship.java b/demos/pax-britannica/pax-britannica/src/de/swagner/paxbritannica/Ship.java\nindex 6afec21..d7ce097 100644\n--- a/demos/pax-britannica/pax-britannica/src/de/swagner/paxbritannica/Ship.java\n+++ b/demos/pax-britannica/pax-britannica/src/de/swagner/paxbritannica/Ship.java\n@@ -68,7 +68,7 @@\n \t\tcollisionPoints.get(2).set( this.getVertices()[10], this.getVertices()[11]);\n \t\tcollisionPoints.get(3).set( this.getVertices()[15], this.getVertices()[16]);\n \t\t\n-\t\tcollisionCenter.set(collisionPoints.get(2)).scl(0.5f).add(collisionPoints.get(0));\n+\t\tcollisionCenter.set(collisionPoints.get(0)).add(collisionPoints.get(2)).scl(0.5f);\n \n \t\tvelocity.scl( (float) Math.pow(0.97f, delta * 30.f));\n \t\tposition.add(velocity.x * delta, velocity.y * delta);\n", "projectName": "libgdx.libgdx", "bugLineNum": 71, "bugNodeStartChar": 1927, "bugNodeLength": 22, "fixLineNum": 71, "fixNodeStartChar": 1927, "fixNodeLength": 22, "sourceBeforeFix": "collisionPoints.get(2)", "sourceAfterFix": "collisionPoints.get(0)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "376e6647bb5cb36b5dd37d303a5ad7fb1460daa0", "fixCommitParentSHA1": "f8cd713aafac1e06e17a0b0af1ca943a14e368f2", "bugFilePath": "demos/pax-britannica/pax-britannica/src/de/swagner/paxbritannica/Ship.java", "fixPatch": "diff --git a/demos/pax-britannica/pax-britannica/src/de/swagner/paxbritannica/Ship.java b/demos/pax-britannica/pax-britannica/src/de/swagner/paxbritannica/Ship.java\nindex 6afec21..d7ce097 100644\n--- a/demos/pax-britannica/pax-britannica/src/de/swagner/paxbritannica/Ship.java\n+++ b/demos/pax-britannica/pax-britannica/src/de/swagner/paxbritannica/Ship.java\n@@ -68,7 +68,7 @@\n \t\tcollisionPoints.get(2).set( this.getVertices()[10], this.getVertices()[11]);\n \t\tcollisionPoints.get(3).set( this.getVertices()[15], this.getVertices()[16]);\n \t\t\n-\t\tcollisionCenter.set(collisionPoints.get(2)).scl(0.5f).add(collisionPoints.get(0));\n+\t\tcollisionCenter.set(collisionPoints.get(0)).add(collisionPoints.get(2)).scl(0.5f);\n \n \t\tvelocity.scl( (float) Math.pow(0.97f, delta * 30.f));\n \t\tposition.add(velocity.x * delta, velocity.y * delta);\n", "projectName": "libgdx.libgdx", "bugLineNum": 71, "bugNodeStartChar": 1927, "bugNodeLength": 22, "fixLineNum": 71, "fixNodeStartChar": 1927, "fixNodeLength": 22, "sourceBeforeFix": "collisionPoints.get(2)", "sourceAfterFix": "collisionPoints.get(0)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "c5edc0976145a61a5551053dfda8a8c3394100ee", "fixCommitParentSHA1": "2330e1fecb57bb166c70ecf7f540be719be8e7e3", "bugFilePath": "backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglAWTCanvas.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglAWTCanvas.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglAWTCanvas.java\nindex 09c6d41..b3f440d 100644\n--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglAWTCanvas.java\n+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglAWTCanvas.java\n@@ -317,7 +317,7 @@\n \t\tif (preferences.containsKey(name)) {\n \t\t\treturn preferences.get(name);\n \t\t} else {\n-\t\t\tPreferences prefs = new LwjglPreferences(name);\n+\t\t\tPreferences prefs = new LwjglPreferences(name, \".prefs/\");\n \t\t\tpreferences.put(name, prefs);\n \t\t\treturn prefs;\n \t\t}\n", "projectName": "libgdx.libgdx", "bugLineNum": 320, "bugNodeStartChar": 8059, "bugNodeLength": 26, "fixLineNum": 320, "fixNodeStartChar": 8059, "fixNodeLength": 37, "sourceBeforeFix": "new LwjglPreferences(name)", "sourceAfterFix": "new LwjglPreferences(name,\".prefs/\")"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "c5edc0976145a61a5551053dfda8a8c3394100ee", "fixCommitParentSHA1": "2330e1fecb57bb166c70ecf7f540be719be8e7e3", "bugFilePath": "backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglCanvas.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglCanvas.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglCanvas.java\nindex 270c244..2c8fb23f 100644\n--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglCanvas.java\n+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglCanvas.java\n@@ -316,7 +316,7 @@\n \t\tif (preferences.containsKey(name)) {\r\n \t\t\treturn preferences.get(name);\r\n \t\t} else {\r\n-\t\t\tPreferences prefs = new LwjglPreferences(name);\r\n+\t\t\tPreferences prefs = new LwjglPreferences(name, \".prefs/\");\r\n \t\t\tpreferences.put(name, prefs);\r\n \t\t\treturn prefs;\r\n \t\t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 319, "bugNodeStartChar": 8688, "bugNodeLength": 26, "fixLineNum": 319, "fixNodeStartChar": 8370, "fixNodeLength": 37, "sourceBeforeFix": "new LwjglPreferences(name)", "sourceAfterFix": "new LwjglPreferences(name,\".prefs/\")"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "c5edc0976145a61a5551053dfda8a8c3394100ee", "fixCommitParentSHA1": "2330e1fecb57bb166c70ecf7f540be719be8e7e3", "bugFilePath": "backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglHeadlessApplication.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglHeadlessApplication.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglHeadlessApplication.java\nindex 9ff83f4..7c90913 100644\n--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglHeadlessApplication.java\n+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglHeadlessApplication.java\n@@ -199,7 +199,7 @@\n \t\tif (preferences.containsKey(name)) {\n \t\t\treturn preferences.get(name);\n \t\t} else {\n-\t\t\tPreferences prefs = new LwjglPreferences(name);\n+\t\t\tPreferences prefs = new LwjglPreferences(name, \".prefs/\");\n \t\t\tpreferences.put(name, prefs);\n \t\t\treturn prefs;\n \t\t}\n", "projectName": "libgdx.libgdx", "bugLineNum": 202, "bugNodeStartChar": 5443, "bugNodeLength": 26, "fixLineNum": 202, "fixNodeStartChar": 5443, "fixNodeLength": 37, "sourceBeforeFix": "new LwjglPreferences(name)", "sourceAfterFix": "new LwjglPreferences(name,\".prefs/\")"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "41467c8004b716fb78002c3139ea771b70ed165d", "fixCommitParentSHA1": "22cc1f679312b3222cf3f460afa62f76a63c4c2f", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java b/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java\nindex dae7722..5239153 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java\n@@ -254,10 +254,10 @@\n \t\tColor color = getColor();\r\n \t\tfloat oldAlpha = color.a;\r\n \t\tcolor.a *= alphaModulation;\r\n-\t\tsetColor(color);\r\n+\t\tsetColors(color);\r\n \t\tdraw(spriteBatch);\r\n \t\tcolor.a = oldAlpha;\r\n-\t\tsetColor(color);\r\n+\t\tsetColors(color);\r\n \t}\r\n \r\n \t/** Removes all glyphs in the cache. */\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 257, "bugNodeStartChar": 9033, "bugNodeLength": 15, "fixLineNum": 257, "fixNodeStartChar": 8777, "fixNodeLength": 16, "sourceBeforeFix": "setColor(color)", "sourceAfterFix": "setColors(color)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "41467c8004b716fb78002c3139ea771b70ed165d", "fixCommitParentSHA1": "22cc1f679312b3222cf3f460afa62f76a63c4c2f", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java b/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java\nindex dae7722..5239153 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java\n@@ -254,10 +254,10 @@\n \t\tColor color = getColor();\r\n \t\tfloat oldAlpha = color.a;\r\n \t\tcolor.a *= alphaModulation;\r\n-\t\tsetColor(color);\r\n+\t\tsetColors(color);\r\n \t\tdraw(spriteBatch);\r\n \t\tcolor.a = oldAlpha;\r\n-\t\tsetColor(color);\r\n+\t\tsetColors(color);\r\n \t}\r\n \r\n \t/** Removes all glyphs in the cache. */\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 257, "bugNodeStartChar": 9033, "bugNodeLength": 15, "fixLineNum": 257, "fixNodeStartChar": 8777, "fixNodeLength": 16, "sourceBeforeFix": "setColor(color)", "sourceAfterFix": "setColors(color)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "41467c8004b716fb78002c3139ea771b70ed165d", "fixCommitParentSHA1": "22cc1f679312b3222cf3f460afa62f76a63c4c2f", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java b/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java\nindex dae7722..5239153 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java\n@@ -254,10 +254,10 @@\n \t\tColor color = getColor();\r\n \t\tfloat oldAlpha = color.a;\r\n \t\tcolor.a *= alphaModulation;\r\n-\t\tsetColor(color);\r\n+\t\tsetColors(color);\r\n \t\tdraw(spriteBatch);\r\n \t\tcolor.a = oldAlpha;\r\n-\t\tsetColor(color);\r\n+\t\tsetColors(color);\r\n \t}\r\n \r\n \t/** Removes all glyphs in the cache. */\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 260, "bugNodeStartChar": 9098, "bugNodeLength": 15, "fixLineNum": 260, "fixNodeStartChar": 8839, "fixNodeLength": 16, "sourceBeforeFix": "setColor(color)", "sourceAfterFix": "setColors(color)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "41467c8004b716fb78002c3139ea771b70ed165d", "fixCommitParentSHA1": "22cc1f679312b3222cf3f460afa62f76a63c4c2f", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java b/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java\nindex dae7722..5239153 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java\n@@ -254,10 +254,10 @@\n \t\tColor color = getColor();\r\n \t\tfloat oldAlpha = color.a;\r\n \t\tcolor.a *= alphaModulation;\r\n-\t\tsetColor(color);\r\n+\t\tsetColors(color);\r\n \t\tdraw(spriteBatch);\r\n \t\tcolor.a = oldAlpha;\r\n-\t\tsetColor(color);\r\n+\t\tsetColors(color);\r\n \t}\r\n \r\n \t/** Removes all glyphs in the cache. */\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 260, "bugNodeStartChar": 9098, "bugNodeLength": 15, "fixLineNum": 260, "fixNodeStartChar": 8839, "fixNodeLength": 16, "sourceBeforeFix": "setColor(color)", "sourceAfterFix": "setColors(color)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "41467c8004b716fb78002c3139ea771b70ed165d", "fixCommitParentSHA1": "22cc1f679312b3222cf3f460afa62f76a63c4c2f", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\nindex eda0d0e..7071518 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\n@@ -207,7 +207,7 @@\n \t\t\tbatch.setColor(color.r, color.g, color.b, color.a * parentAlpha);\r\n \t\t\tstyle.background.draw(batch, getX(), getY(), getWidth(), getHeight());\r\n \t\t}\r\n-\t\tcache.setColor(style.fontColor == null ? color : Color.tmp.set(color).mul(style.fontColor));\r\n+\t\tcache.setColors(style.fontColor == null ? color : Color.tmp.set(color).mul(style.fontColor));\r\n \t\tcache.setPosition(getX(), getY());\r\n \t\tcache.draw(batch, parentAlpha);\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 210, "bugNodeStartChar": 7388, "bugNodeLength": 91, "fixLineNum": 210, "fixNodeStartChar": 7179, "fixNodeLength": 92, "sourceBeforeFix": "cache.setColor(style.fontColor == null ? color : Color.tmp.set(color).mul(style.fontColor))", "sourceAfterFix": "cache.setColors(style.fontColor == null ? color : Color.tmp.set(color).mul(style.fontColor))"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "41467c8004b716fb78002c3139ea771b70ed165d", "fixCommitParentSHA1": "22cc1f679312b3222cf3f460afa62f76a63c4c2f", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\nindex eda0d0e..7071518 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\n@@ -207,7 +207,7 @@\n \t\t\tbatch.setColor(color.r, color.g, color.b, color.a * parentAlpha);\r\n \t\t\tstyle.background.draw(batch, getX(), getY(), getWidth(), getHeight());\r\n \t\t}\r\n-\t\tcache.setColor(style.fontColor == null ? color : Color.tmp.set(color).mul(style.fontColor));\r\n+\t\tcache.setColors(style.fontColor == null ? color : Color.tmp.set(color).mul(style.fontColor));\r\n \t\tcache.setPosition(getX(), getY());\r\n \t\tcache.draw(batch, parentAlpha);\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 210, "bugNodeStartChar": 7388, "bugNodeLength": 91, "fixLineNum": 210, "fixNodeStartChar": 7179, "fixNodeLength": 92, "sourceBeforeFix": "cache.setColor(style.fontColor == null ? color : Color.tmp.set(color).mul(style.fontColor))", "sourceAfterFix": "cache.setColors(style.fontColor == null ? color : Color.tmp.set(color).mul(style.fontColor))"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "41467c8004b716fb78002c3139ea771b70ed165d", "fixCommitParentSHA1": "22cc1f679312b3222cf3f460afa62f76a63c4c2f", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java\nindex ee5e6f6..7169470 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java\n@@ -255,7 +255,7 @@\n \t\t\telse\r\n \t\t\t\ty -= (padTop - bounds.height) / 2;\r\n \t\t}\r\n-\t\ttitleCache.setColor(Color.tmp.set(getColor()).mul(style.titleFontColor));\r\n+\t\ttitleCache.setColors(Color.tmp.set(getColor()).mul(style.titleFontColor));\r\n \t\ttitleCache.setPosition((int)x, (int)y);\r\n \t\ttitleCache.draw(batch, parentAlpha);\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 258, "bugNodeStartChar": 9258, "bugNodeLength": 72, "fixLineNum": 258, "fixNodeStartChar": 9001, "fixNodeLength": 73, "sourceBeforeFix": "titleCache.setColor(Color.tmp.set(getColor()).mul(style.titleFontColor))", "sourceAfterFix": "titleCache.setColors(Color.tmp.set(getColor()).mul(style.titleFontColor))"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "41467c8004b716fb78002c3139ea771b70ed165d", "fixCommitParentSHA1": "22cc1f679312b3222cf3f460afa62f76a63c4c2f", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java\nindex ee5e6f6..7169470 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java\n@@ -255,7 +255,7 @@\n \t\t\telse\r\n \t\t\t\ty -= (padTop - bounds.height) / 2;\r\n \t\t}\r\n-\t\ttitleCache.setColor(Color.tmp.set(getColor()).mul(style.titleFontColor));\r\n+\t\ttitleCache.setColors(Color.tmp.set(getColor()).mul(style.titleFontColor));\r\n \t\ttitleCache.setPosition((int)x, (int)y);\r\n \t\ttitleCache.draw(batch, parentAlpha);\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 258, "bugNodeStartChar": 9258, "bugNodeLength": 72, "fixLineNum": 258, "fixNodeStartChar": 9001, "fixNodeLength": 73, "sourceBeforeFix": "titleCache.setColor(Color.tmp.set(getColor()).mul(style.titleFontColor))", "sourceAfterFix": "titleCache.setColors(Color.tmp.set(getColor()).mul(style.titleFontColor))"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "41467c8004b716fb78002c3139ea771b70ed165d", "fixCommitParentSHA1": "22cc1f679312b3222cf3f460afa62f76a63c4c2f", "bugFilePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontFlipTest.java", "fixPatch": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontFlipTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontFlipTest.java\nindex 4698dda..d86125a 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontFlipTest.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontFlipTest.java\n@@ -147,7 +147,7 @@\n \t}\r\n \r\n \tprivate void renderCached () {\r\n-\t\tcache5.setColor(red);\r\n+\t\tcache5.setColors(red);\r\n \t\tcache5.draw(spriteBatch);\r\n \r\n \t\tcache1.draw(spriteBatch);\r\n@@ -160,7 +160,7 @@\n \t}\r\n \r\n \tprivate void renderCachedScaled () {\r\n-\t\tcacheScaled5.setColor(red);\r\n+\t\tcacheScaled5.setColors(red);\r\n \t\tcacheScaled5.draw(spriteBatch);\r\n \r\n \t\tcacheScaled1.draw(spriteBatch);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 150, "bugNodeStartChar": 5429, "bugNodeLength": 20, "fixLineNum": 150, "fixNodeStartChar": 5280, "fixNodeLength": 21, "sourceBeforeFix": "cache5.setColor(red)", "sourceAfterFix": "cache5.setColors(red)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "41467c8004b716fb78002c3139ea771b70ed165d", "fixCommitParentSHA1": "22cc1f679312b3222cf3f460afa62f76a63c4c2f", "bugFilePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontFlipTest.java", "fixPatch": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontFlipTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontFlipTest.java\nindex 4698dda..d86125a 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontFlipTest.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontFlipTest.java\n@@ -147,7 +147,7 @@\n \t}\r\n \r\n \tprivate void renderCached () {\r\n-\t\tcache5.setColor(red);\r\n+\t\tcache5.setColors(red);\r\n \t\tcache5.draw(spriteBatch);\r\n \r\n \t\tcache1.draw(spriteBatch);\r\n@@ -160,7 +160,7 @@\n \t}\r\n \r\n \tprivate void renderCachedScaled () {\r\n-\t\tcacheScaled5.setColor(red);\r\n+\t\tcacheScaled5.setColors(red);\r\n \t\tcacheScaled5.draw(spriteBatch);\r\n \r\n \t\tcacheScaled1.draw(spriteBatch);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 150, "bugNodeStartChar": 5429, "bugNodeLength": 20, "fixLineNum": 150, "fixNodeStartChar": 5280, "fixNodeLength": 21, "sourceBeforeFix": "cache5.setColor(red)", "sourceAfterFix": "cache5.setColors(red)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "41467c8004b716fb78002c3139ea771b70ed165d", "fixCommitParentSHA1": "22cc1f679312b3222cf3f460afa62f76a63c4c2f", "bugFilePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontFlipTest.java", "fixPatch": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontFlipTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontFlipTest.java\nindex 4698dda..d86125a 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontFlipTest.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontFlipTest.java\n@@ -147,7 +147,7 @@\n \t}\r\n \r\n \tprivate void renderCached () {\r\n-\t\tcache5.setColor(red);\r\n+\t\tcache5.setColors(red);\r\n \t\tcache5.draw(spriteBatch);\r\n \r\n \t\tcache1.draw(spriteBatch);\r\n@@ -160,7 +160,7 @@\n \t}\r\n \r\n \tprivate void renderCachedScaled () {\r\n-\t\tcacheScaled5.setColor(red);\r\n+\t\tcacheScaled5.setColors(red);\r\n \t\tcacheScaled5.draw(spriteBatch);\r\n \r\n \t\tcacheScaled1.draw(spriteBatch);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 163, "bugNodeStartChar": 5679, "bugNodeLength": 26, "fixLineNum": 163, "fixNodeStartChar": 5517, "fixNodeLength": 27, "sourceBeforeFix": "cacheScaled5.setColor(red)", "sourceAfterFix": "cacheScaled5.setColors(red)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "41467c8004b716fb78002c3139ea771b70ed165d", "fixCommitParentSHA1": "22cc1f679312b3222cf3f460afa62f76a63c4c2f", "bugFilePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontFlipTest.java", "fixPatch": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontFlipTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontFlipTest.java\nindex 4698dda..d86125a 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontFlipTest.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontFlipTest.java\n@@ -147,7 +147,7 @@\n \t}\r\n \r\n \tprivate void renderCached () {\r\n-\t\tcache5.setColor(red);\r\n+\t\tcache5.setColors(red);\r\n \t\tcache5.draw(spriteBatch);\r\n \r\n \t\tcache1.draw(spriteBatch);\r\n@@ -160,7 +160,7 @@\n \t}\r\n \r\n \tprivate void renderCachedScaled () {\r\n-\t\tcacheScaled5.setColor(red);\r\n+\t\tcacheScaled5.setColors(red);\r\n \t\tcacheScaled5.draw(spriteBatch);\r\n \r\n \t\tcacheScaled1.draw(spriteBatch);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 163, "bugNodeStartChar": 5679, "bugNodeLength": 26, "fixLineNum": 163, "fixNodeStartChar": 5517, "fixNodeLength": 27, "sourceBeforeFix": "cacheScaled5.setColor(red)", "sourceAfterFix": "cacheScaled5.setColors(red)"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "d76ba8118cca9f2f1c4f0e89e2dd15a9db02f7e8", "fixCommitParentSHA1": "a7044b0d94942f2a58c0dba5ab1b18690fa75b05", "bugFilePath": "backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidMultiTouchHandler.java", "fixPatch": "diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidMultiTouchHandler.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidMultiTouchHandler.java\nindex 751e237..8ad2754 100644\n--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidMultiTouchHandler.java\n+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidMultiTouchHandler.java\n@@ -41,7 +41,7 @@\n \t\t\tcase MotionEvent.ACTION_DOWN:\r\n \t\t\tcase MotionEvent.ACTION_POINTER_DOWN:\r\n \t\t\t\trealPointerIndex = input.getFreePointerIndex(); // get a free pointer index as reported by Input.getX() etc.\r\n-\t\t\t\tif (realPointerIndex > AndroidInput.NUM_TOUCHES) break;\r\n+\t\t\t\tif (realPointerIndex >= AndroidInput.NUM_TOUCHES) break;\r\n \t\t\t\tinput.realId[realPointerIndex] = pointerId;\r\n \t\t\t\tx = (int)event.getX(pointerIndex);\r\n \t\t\t\ty = (int)event.getY(pointerIndex);\r\n@@ -59,7 +59,7 @@\n \t\t\tcase MotionEvent.ACTION_CANCEL:\r\n \t\t\t\trealPointerIndex = input.lookUpPointerIndex(pointerId);\r\n \t\t\t\tif (realPointerIndex == -1) break;\r\n-\t\t\t\tif (realPointerIndex > AndroidInput.NUM_TOUCHES) break;\r\n+\t\t\t\tif (realPointerIndex >= AndroidInput.NUM_TOUCHES) break;\r\n \t\t\t\tinput.realId[realPointerIndex] = -1;\r\n \t\t\t\tx = (int)event.getX(pointerIndex);\r\n \t\t\t\ty = (int)event.getY(pointerIndex);\r\n@@ -80,7 +80,7 @@\n \t\t\t\t\ty = (int)event.getY(pointerIndex);\r\n \t\t\t\t\trealPointerIndex = input.lookUpPointerIndex(pointerId);\r\n \t\t\t\t\tif (realPointerIndex == -1) continue;\r\n-\t\t\t\t\tif (realPointerIndex > AndroidInput.NUM_TOUCHES) break;\r\n+\t\t\t\t\tif (realPointerIndex >= AndroidInput.NUM_TOUCHES) break;\r\n \t\t\t\t\tpostTouchEvent(input, TouchEvent.TOUCH_DRAGGED, x, y, realPointerIndex, timeStamp);\r\n \t\t\t\t\tinput.deltaX[realPointerIndex] = x - input.touchX[realPointerIndex];\r\n \t\t\t\t\tinput.deltaY[realPointerIndex] = y - input.touchY[realPointerIndex];\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 44, "bugNodeStartChar": 1890, "bugNodeLength": 43, "fixLineNum": 44, "fixNodeStartChar": 1847, "fixNodeLength": 44, "sourceBeforeFix": "realPointerIndex > AndroidInput.NUM_TOUCHES", "sourceAfterFix": "realPointerIndex >= AndroidInput.NUM_TOUCHES"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "d76ba8118cca9f2f1c4f0e89e2dd15a9db02f7e8", "fixCommitParentSHA1": "a7044b0d94942f2a58c0dba5ab1b18690fa75b05", "bugFilePath": "backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidMultiTouchHandler.java", "fixPatch": "diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidMultiTouchHandler.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidMultiTouchHandler.java\nindex 751e237..8ad2754 100644\n--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidMultiTouchHandler.java\n+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidMultiTouchHandler.java\n@@ -41,7 +41,7 @@\n \t\t\tcase MotionEvent.ACTION_DOWN:\r\n \t\t\tcase MotionEvent.ACTION_POINTER_DOWN:\r\n \t\t\t\trealPointerIndex = input.getFreePointerIndex(); // get a free pointer index as reported by Input.getX() etc.\r\n-\t\t\t\tif (realPointerIndex > AndroidInput.NUM_TOUCHES) break;\r\n+\t\t\t\tif (realPointerIndex >= AndroidInput.NUM_TOUCHES) break;\r\n \t\t\t\tinput.realId[realPointerIndex] = pointerId;\r\n \t\t\t\tx = (int)event.getX(pointerIndex);\r\n \t\t\t\ty = (int)event.getY(pointerIndex);\r\n@@ -59,7 +59,7 @@\n \t\t\tcase MotionEvent.ACTION_CANCEL:\r\n \t\t\t\trealPointerIndex = input.lookUpPointerIndex(pointerId);\r\n \t\t\t\tif (realPointerIndex == -1) break;\r\n-\t\t\t\tif (realPointerIndex > AndroidInput.NUM_TOUCHES) break;\r\n+\t\t\t\tif (realPointerIndex >= AndroidInput.NUM_TOUCHES) break;\r\n \t\t\t\tinput.realId[realPointerIndex] = -1;\r\n \t\t\t\tx = (int)event.getX(pointerIndex);\r\n \t\t\t\ty = (int)event.getY(pointerIndex);\r\n@@ -80,7 +80,7 @@\n \t\t\t\t\ty = (int)event.getY(pointerIndex);\r\n \t\t\t\t\trealPointerIndex = input.lookUpPointerIndex(pointerId);\r\n \t\t\t\t\tif (realPointerIndex == -1) continue;\r\n-\t\t\t\t\tif (realPointerIndex > AndroidInput.NUM_TOUCHES) break;\r\n+\t\t\t\t\tif (realPointerIndex >= AndroidInput.NUM_TOUCHES) break;\r\n \t\t\t\t\tpostTouchEvent(input, TouchEvent.TOUCH_DRAGGED, x, y, realPointerIndex, timeStamp);\r\n \t\t\t\t\tinput.deltaX[realPointerIndex] = x - input.touchX[realPointerIndex];\r\n \t\t\t\t\tinput.deltaY[realPointerIndex] = y - input.touchY[realPointerIndex];\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 62, "bugNodeStartChar": 2635, "bugNodeLength": 43, "fixLineNum": 62, "fixNodeStartChar": 2574, "fixNodeLength": 44, "sourceBeforeFix": "realPointerIndex > AndroidInput.NUM_TOUCHES", "sourceAfterFix": "realPointerIndex >= AndroidInput.NUM_TOUCHES"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "d76ba8118cca9f2f1c4f0e89e2dd15a9db02f7e8", "fixCommitParentSHA1": "a7044b0d94942f2a58c0dba5ab1b18690fa75b05", "bugFilePath": "backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidMultiTouchHandler.java", "fixPatch": "diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidMultiTouchHandler.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidMultiTouchHandler.java\nindex 751e237..8ad2754 100644\n--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidMultiTouchHandler.java\n+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidMultiTouchHandler.java\n@@ -41,7 +41,7 @@\n \t\t\tcase MotionEvent.ACTION_DOWN:\r\n \t\t\tcase MotionEvent.ACTION_POINTER_DOWN:\r\n \t\t\t\trealPointerIndex = input.getFreePointerIndex(); // get a free pointer index as reported by Input.getX() etc.\r\n-\t\t\t\tif (realPointerIndex > AndroidInput.NUM_TOUCHES) break;\r\n+\t\t\t\tif (realPointerIndex >= AndroidInput.NUM_TOUCHES) break;\r\n \t\t\t\tinput.realId[realPointerIndex] = pointerId;\r\n \t\t\t\tx = (int)event.getX(pointerIndex);\r\n \t\t\t\ty = (int)event.getY(pointerIndex);\r\n@@ -59,7 +59,7 @@\n \t\t\tcase MotionEvent.ACTION_CANCEL:\r\n \t\t\t\trealPointerIndex = input.lookUpPointerIndex(pointerId);\r\n \t\t\t\tif (realPointerIndex == -1) break;\r\n-\t\t\t\tif (realPointerIndex > AndroidInput.NUM_TOUCHES) break;\r\n+\t\t\t\tif (realPointerIndex >= AndroidInput.NUM_TOUCHES) break;\r\n \t\t\t\tinput.realId[realPointerIndex] = -1;\r\n \t\t\t\tx = (int)event.getX(pointerIndex);\r\n \t\t\t\ty = (int)event.getY(pointerIndex);\r\n@@ -80,7 +80,7 @@\n \t\t\t\t\ty = (int)event.getY(pointerIndex);\r\n \t\t\t\t\trealPointerIndex = input.lookUpPointerIndex(pointerId);\r\n \t\t\t\t\tif (realPointerIndex == -1) continue;\r\n-\t\t\t\t\tif (realPointerIndex > AndroidInput.NUM_TOUCHES) break;\r\n+\t\t\t\t\tif (realPointerIndex >= AndroidInput.NUM_TOUCHES) break;\r\n \t\t\t\t\tpostTouchEvent(input, TouchEvent.TOUCH_DRAGGED, x, y, realPointerIndex, timeStamp);\r\n \t\t\t\t\tinput.deltaX[realPointerIndex] = x - input.touchX[realPointerIndex];\r\n \t\t\t\t\tinput.deltaY[realPointerIndex] = y - input.touchY[realPointerIndex];\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 83, "bugNodeStartChar": 3520, "bugNodeLength": 43, "fixLineNum": 83, "fixNodeStartChar": 3438, "fixNodeLength": 44, "sourceBeforeFix": "realPointerIndex > AndroidInput.NUM_TOUCHES", "sourceAfterFix": "realPointerIndex >= AndroidInput.NUM_TOUCHES"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "93427d90431acb1ec83e5708bd0ef6c0281369c9", "fixCommitParentSHA1": "43dc93b411428758b053cd0a4a182a3dd9bbd848", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java\nindex 122ac16..d5f334e 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java\n@@ -612,7 +612,7 @@\n \t\t\trect(i000, i100, i110, i010);\r\n \t\t\trect(i101, i001, i011, i111);\r\n \t\t\tindex(i000, i001, i010, i011, i110, i111, i100, i101);\r\n-\t\t} else if (primitiveType != GL10.GL_POINTS) {\r\n+\t\t} else if (primitiveType == GL10.GL_POINTS) {\r\n \t\t\tensureRectangleIndices(2);\r\n \t\t\trect(i000, i100, i110, i010);\r\n \t\t\trect(i101, i001, i011, i111);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 615, "bugNodeStartChar": 24328, "bugNodeLength": 31, "fixLineNum": 615, "fixNodeStartChar": 23714, "fixNodeLength": 31, "sourceBeforeFix": "primitiveType != GL10.GL_POINTS", "sourceAfterFix": "primitiveType == GL10.GL_POINTS"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "b2502762d7f643c89a023de9c31a4ccddeaf5ad1", "fixCommitParentSHA1": "76ff810863f70de81fdebac5b189ee440d0831dc", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java\nindex 122ac16..d5f334e 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java\n@@ -612,7 +612,7 @@\n \t\t\trect(i000, i100, i110, i010);\r\n \t\t\trect(i101, i001, i011, i111);\r\n \t\t\tindex(i000, i001, i010, i011, i110, i111, i100, i101);\r\n-\t\t} else if (primitiveType != GL10.GL_POINTS) {\r\n+\t\t} else if (primitiveType == GL10.GL_POINTS) {\r\n \t\t\tensureRectangleIndices(2);\r\n \t\t\trect(i000, i100, i110, i010);\r\n \t\t\trect(i101, i001, i011, i111);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 615, "bugNodeStartChar": 24328, "bugNodeLength": 31, "fixLineNum": 615, "fixNodeStartChar": 23714, "fixNodeLength": 31, "sourceBeforeFix": "primitiveType != GL10.GL_POINTS", "sourceAfterFix": "primitiveType == GL10.GL_POINTS"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "04a010c8499fbc96b1e5a99bdbebaf0b38d24586", "fixCommitParentSHA1": "d5b978271f13513ccb20a7f3b1393e6dd4331d0d", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/Array.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/Array.java b/gdx/src/com/badlogic/gdx/utils/Array.java\nindex e088c30..73562d8 100644\n--- a/gdx/src/com/badlogic/gdx/utils/Array.java\n+++ b/gdx/src/com/badlogic/gdx/utils/Array.java\n@@ -311,7 +311,7 @@\n \t * @return {@link #items} */\r\n \tpublic T[] ensureCapacity (int additionalCapacity) {\r\n \t\tint sizeNeeded = size + additionalCapacity;\r\n-\t\tif (sizeNeeded >= items.length) resize(Math.max(8, sizeNeeded));\r\n+\t\tif (sizeNeeded > items.length) resize(Math.max(8, sizeNeeded));\r\n \t\treturn items;\r\n \t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 314, "bugNodeStartChar": 11487, "bugNodeLength": 26, "fixLineNum": 314, "fixNodeStartChar": 11174, "fixNodeLength": 25, "sourceBeforeFix": "sizeNeeded >= items.length", "sourceAfterFix": "sizeNeeded > items.length"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "04a010c8499fbc96b1e5a99bdbebaf0b38d24586", "fixCommitParentSHA1": "d5b978271f13513ccb20a7f3b1393e6dd4331d0d", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/BooleanArray.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/BooleanArray.java b/gdx/src/com/badlogic/gdx/utils/BooleanArray.java\nindex b493cf3..771ddbe 100644\n--- a/gdx/src/com/badlogic/gdx/utils/BooleanArray.java\n+++ b/gdx/src/com/badlogic/gdx/utils/BooleanArray.java\n@@ -97,7 +97,7 @@\n \tpublic void addAll (boolean[] array, int offset, int length) {\r\n \t\tboolean[] items = this.items;\r\n \t\tint sizeNeeded = size + length;\r\n-\t\tif (sizeNeeded >= items.length) items = resize(Math.max(8, (int)(sizeNeeded * 1.75f)));\r\n+\t\tif (sizeNeeded > items.length) items = resize(Math.max(8, (int)(sizeNeeded * 1.75f)));\r\n \t\tSystem.arraycopy(array, offset, items, size, length);\r\n \t\tsize += length;\r\n \t}\r\n@@ -197,7 +197,7 @@\n \t * @return {@link #items} */\r\n \tpublic boolean[] ensureCapacity (int additionalCapacity) {\r\n \t\tint sizeNeeded = size + additionalCapacity;\r\n-\t\tif (sizeNeeded >= items.length) resize(Math.max(8, sizeNeeded));\r\n+\t\tif (sizeNeeded > items.length) resize(Math.max(8, sizeNeeded));\r\n \t\treturn items;\r\n \t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 100, "bugNodeStartChar": 4166, "bugNodeLength": 26, "fixLineNum": 100, "fixNodeStartChar": 4067, "fixNodeLength": 25, "sourceBeforeFix": "sizeNeeded >= items.length", "sourceAfterFix": "sizeNeeded > items.length"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "04a010c8499fbc96b1e5a99bdbebaf0b38d24586", "fixCommitParentSHA1": "d5b978271f13513ccb20a7f3b1393e6dd4331d0d", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/BooleanArray.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/BooleanArray.java b/gdx/src/com/badlogic/gdx/utils/BooleanArray.java\nindex b493cf3..771ddbe 100644\n--- a/gdx/src/com/badlogic/gdx/utils/BooleanArray.java\n+++ b/gdx/src/com/badlogic/gdx/utils/BooleanArray.java\n@@ -97,7 +97,7 @@\n \tpublic void addAll (boolean[] array, int offset, int length) {\r\n \t\tboolean[] items = this.items;\r\n \t\tint sizeNeeded = size + length;\r\n-\t\tif (sizeNeeded >= items.length) items = resize(Math.max(8, (int)(sizeNeeded * 1.75f)));\r\n+\t\tif (sizeNeeded > items.length) items = resize(Math.max(8, (int)(sizeNeeded * 1.75f)));\r\n \t\tSystem.arraycopy(array, offset, items, size, length);\r\n \t\tsize += length;\r\n \t}\r\n@@ -197,7 +197,7 @@\n \t * @return {@link #items} */\r\n \tpublic boolean[] ensureCapacity (int additionalCapacity) {\r\n \t\tint sizeNeeded = size + additionalCapacity;\r\n-\t\tif (sizeNeeded >= items.length) resize(Math.max(8, sizeNeeded));\r\n+\t\tif (sizeNeeded > items.length) resize(Math.max(8, sizeNeeded));\r\n \t\treturn items;\r\n \t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 200, "bugNodeStartChar": 7513, "bugNodeLength": 26, "fixLineNum": 200, "fixNodeStartChar": 7314, "fixNodeLength": 25, "sourceBeforeFix": "sizeNeeded >= items.length", "sourceAfterFix": "sizeNeeded > items.length"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "04a010c8499fbc96b1e5a99bdbebaf0b38d24586", "fixCommitParentSHA1": "d5b978271f13513ccb20a7f3b1393e6dd4331d0d", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/CharArray.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/CharArray.java b/gdx/src/com/badlogic/gdx/utils/CharArray.java\nindex bb7d9c5..654e988 100644\n--- a/gdx/src/com/badlogic/gdx/utils/CharArray.java\n+++ b/gdx/src/com/badlogic/gdx/utils/CharArray.java\n@@ -95,7 +95,7 @@\n \tpublic void addAll (char[] array, int offset, int length) {\r\n \t\tchar[] items = this.items;\r\n \t\tint sizeNeeded = size + length ;\r\n-\t\tif (sizeNeeded >= items.length) items = resize(Math.max(8, (int)(sizeNeeded * 1.75f)));\r\n+\t\tif (sizeNeeded > items.length) items = resize(Math.max(8, (int)(sizeNeeded * 1.75f)));\r\n \t\tSystem.arraycopy(array, offset, items, size, length);\r\n \t\tsize += length;\r\n \t}\r\n@@ -238,7 +238,7 @@\n \t * @return {@link #items} */\r\n \tpublic char[] ensureCapacity (int additionalCapacity) {\r\n \t\tint sizeNeeded = size + additionalCapacity;\r\n-\t\tif (sizeNeeded >= items.length) resize(Math.max(8, sizeNeeded));\r\n+\t\tif (sizeNeeded > items.length) resize(Math.max(8, sizeNeeded));\r\n \t\treturn items;\r\n \t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 98, "bugNodeStartChar": 3884, "bugNodeLength": 26, "fixLineNum": 98, "fixNodeStartChar": 3787, "fixNodeLength": 25, "sourceBeforeFix": "sizeNeeded >= items.length", "sourceAfterFix": "sizeNeeded > items.length"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "04a010c8499fbc96b1e5a99bdbebaf0b38d24586", "fixCommitParentSHA1": "d5b978271f13513ccb20a7f3b1393e6dd4331d0d", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/CharArray.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/CharArray.java b/gdx/src/com/badlogic/gdx/utils/CharArray.java\nindex bb7d9c5..654e988 100644\n--- a/gdx/src/com/badlogic/gdx/utils/CharArray.java\n+++ b/gdx/src/com/badlogic/gdx/utils/CharArray.java\n@@ -95,7 +95,7 @@\n \tpublic void addAll (char[] array, int offset, int length) {\r\n \t\tchar[] items = this.items;\r\n \t\tint sizeNeeded = size + length ;\r\n-\t\tif (sizeNeeded >= items.length) items = resize(Math.max(8, (int)(sizeNeeded * 1.75f)));\r\n+\t\tif (sizeNeeded > items.length) items = resize(Math.max(8, (int)(sizeNeeded * 1.75f)));\r\n \t\tSystem.arraycopy(array, offset, items, size, length);\r\n \t\tsize += length;\r\n \t}\r\n@@ -238,7 +238,7 @@\n \t * @return {@link #items} */\r\n \tpublic char[] ensureCapacity (int additionalCapacity) {\r\n \t\tint sizeNeeded = size + additionalCapacity;\r\n-\t\tif (sizeNeeded >= items.length) resize(Math.max(8, sizeNeeded));\r\n+\t\tif (sizeNeeded > items.length) resize(Math.max(8, sizeNeeded));\r\n \t\treturn items;\r\n \t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 241, "bugNodeStartChar": 8284, "bugNodeLength": 26, "fixLineNum": 241, "fixNodeStartChar": 8044, "fixNodeLength": 25, "sourceBeforeFix": "sizeNeeded >= items.length", "sourceAfterFix": "sizeNeeded > items.length"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "04a010c8499fbc96b1e5a99bdbebaf0b38d24586", "fixCommitParentSHA1": "d5b978271f13513ccb20a7f3b1393e6dd4331d0d", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/FloatArray.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/FloatArray.java b/gdx/src/com/badlogic/gdx/utils/FloatArray.java\nindex 7873b21..340b598 100644\n--- a/gdx/src/com/badlogic/gdx/utils/FloatArray.java\n+++ b/gdx/src/com/badlogic/gdx/utils/FloatArray.java\n@@ -95,7 +95,7 @@\n \tpublic void addAll (float[] array, int offset, int length) {\r\n \t\tfloat[] items = this.items;\r\n \t\tint sizeNeeded = size + length;\r\n-\t\tif (sizeNeeded >= items.length) items = resize(Math.max(8, (int)(sizeNeeded * 1.75f)));\r\n+\t\tif (sizeNeeded > items.length) items = resize(Math.max(8, (int)(sizeNeeded * 1.75f)));\r\n \t\tSystem.arraycopy(array, offset, items, size, length);\r\n \t\tsize += length;\r\n \t}\r\n@@ -238,7 +238,7 @@\n \t * @return {@link #items} */\r\n \tpublic float[] ensureCapacity (int additionalCapacity) {\r\n \t\tint sizeNeeded = size + additionalCapacity;\r\n-\t\tif (sizeNeeded >= items.length) resize(Math.max(8, sizeNeeded));\r\n+\t\tif (sizeNeeded > items.length) resize(Math.max(8, sizeNeeded));\r\n \t\treturn items;\r\n \t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 98, "bugNodeStartChar": 3900, "bugNodeLength": 26, "fixLineNum": 98, "fixNodeStartChar": 3803, "fixNodeLength": 25, "sourceBeforeFix": "sizeNeeded >= items.length", "sourceAfterFix": "sizeNeeded > items.length"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "04a010c8499fbc96b1e5a99bdbebaf0b38d24586", "fixCommitParentSHA1": "d5b978271f13513ccb20a7f3b1393e6dd4331d0d", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/FloatArray.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/FloatArray.java b/gdx/src/com/badlogic/gdx/utils/FloatArray.java\nindex 7873b21..340b598 100644\n--- a/gdx/src/com/badlogic/gdx/utils/FloatArray.java\n+++ b/gdx/src/com/badlogic/gdx/utils/FloatArray.java\n@@ -95,7 +95,7 @@\n \tpublic void addAll (float[] array, int offset, int length) {\r\n \t\tfloat[] items = this.items;\r\n \t\tint sizeNeeded = size + length;\r\n-\t\tif (sizeNeeded >= items.length) items = resize(Math.max(8, (int)(sizeNeeded * 1.75f)));\r\n+\t\tif (sizeNeeded > items.length) items = resize(Math.max(8, (int)(sizeNeeded * 1.75f)));\r\n \t\tSystem.arraycopy(array, offset, items, size, length);\r\n \t\tsize += length;\r\n \t}\r\n@@ -238,7 +238,7 @@\n \t * @return {@link #items} */\r\n \tpublic float[] ensureCapacity (int additionalCapacity) {\r\n \t\tint sizeNeeded = size + additionalCapacity;\r\n-\t\tif (sizeNeeded >= items.length) resize(Math.max(8, sizeNeeded));\r\n+\t\tif (sizeNeeded > items.length) resize(Math.max(8, sizeNeeded));\r\n \t\treturn items;\r\n \t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 241, "bugNodeStartChar": 8323, "bugNodeLength": 26, "fixLineNum": 241, "fixNodeStartChar": 8083, "fixNodeLength": 25, "sourceBeforeFix": "sizeNeeded >= items.length", "sourceAfterFix": "sizeNeeded > items.length"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "04a010c8499fbc96b1e5a99bdbebaf0b38d24586", "fixCommitParentSHA1": "d5b978271f13513ccb20a7f3b1393e6dd4331d0d", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/IntArray.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/IntArray.java b/gdx/src/com/badlogic/gdx/utils/IntArray.java\nindex 7bfdbb1..690603c 100644\n--- a/gdx/src/com/badlogic/gdx/utils/IntArray.java\n+++ b/gdx/src/com/badlogic/gdx/utils/IntArray.java\n@@ -95,7 +95,7 @@\n \tpublic void addAll (int[] array, int offset, int length) {\r\n \t\tint[] items = this.items;\r\n \t\tint sizeNeeded = size + length;\r\n-\t\tif (sizeNeeded >= items.length) items = resize(Math.max(8, (int)(sizeNeeded * 1.75f)));\r\n+\t\tif (sizeNeeded > items.length) items = resize(Math.max(8, (int)(sizeNeeded * 1.75f)));\r\n \t\tSystem.arraycopy(array, offset, items, size, length);\r\n \t\tsize += length;\r\n \t}\r\n@@ -238,7 +238,7 @@\n \t * @return {@link #items} */\r\n \tpublic int[] ensureCapacity (int additionalCapacity) {\r\n \t\tint sizeNeeded = size + additionalCapacity;\r\n-\t\tif (sizeNeeded >= items.length) resize(Math.max(8, sizeNeeded));\r\n+\t\tif (sizeNeeded > items.length) resize(Math.max(8, sizeNeeded));\r\n \t\treturn items;\r\n \t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 98, "bugNodeStartChar": 3860, "bugNodeLength": 26, "fixLineNum": 98, "fixNodeStartChar": 3763, "fixNodeLength": 25, "sourceBeforeFix": "sizeNeeded >= items.length", "sourceAfterFix": "sizeNeeded > items.length"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "04a010c8499fbc96b1e5a99bdbebaf0b38d24586", "fixCommitParentSHA1": "d5b978271f13513ccb20a7f3b1393e6dd4331d0d", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/IntArray.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/IntArray.java b/gdx/src/com/badlogic/gdx/utils/IntArray.java\nindex 7bfdbb1..690603c 100644\n--- a/gdx/src/com/badlogic/gdx/utils/IntArray.java\n+++ b/gdx/src/com/badlogic/gdx/utils/IntArray.java\n@@ -95,7 +95,7 @@\n \tpublic void addAll (int[] array, int offset, int length) {\r\n \t\tint[] items = this.items;\r\n \t\tint sizeNeeded = size + length;\r\n-\t\tif (sizeNeeded >= items.length) items = resize(Math.max(8, (int)(sizeNeeded * 1.75f)));\r\n+\t\tif (sizeNeeded > items.length) items = resize(Math.max(8, (int)(sizeNeeded * 1.75f)));\r\n \t\tSystem.arraycopy(array, offset, items, size, length);\r\n \t\tsize += length;\r\n \t}\r\n@@ -238,7 +238,7 @@\n \t * @return {@link #items} */\r\n \tpublic int[] ensureCapacity (int additionalCapacity) {\r\n \t\tint sizeNeeded = size + additionalCapacity;\r\n-\t\tif (sizeNeeded >= items.length) resize(Math.max(8, sizeNeeded));\r\n+\t\tif (sizeNeeded > items.length) resize(Math.max(8, sizeNeeded));\r\n \t\treturn items;\r\n \t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 241, "bugNodeStartChar": 8234, "bugNodeLength": 26, "fixLineNum": 241, "fixNodeStartChar": 7994, "fixNodeLength": 25, "sourceBeforeFix": "sizeNeeded >= items.length", "sourceAfterFix": "sizeNeeded > items.length"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "04a010c8499fbc96b1e5a99bdbebaf0b38d24586", "fixCommitParentSHA1": "d5b978271f13513ccb20a7f3b1393e6dd4331d0d", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/LongArray.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/LongArray.java b/gdx/src/com/badlogic/gdx/utils/LongArray.java\nindex be1c6f7..3db12ca 100644\n--- a/gdx/src/com/badlogic/gdx/utils/LongArray.java\n+++ b/gdx/src/com/badlogic/gdx/utils/LongArray.java\n@@ -95,7 +95,7 @@\n \tpublic void addAll (long[] array, int offset, int length) {\r\n \t\tlong[] items = this.items;\r\n \t\tint sizeNeeded = size + length;\r\n-\t\tif (sizeNeeded >= items.length) items = resize(Math.max(8, (int)(sizeNeeded * 1.75f)));\r\n+\t\tif (sizeNeeded > items.length) items = resize(Math.max(8, (int)(sizeNeeded * 1.75f)));\r\n \t\tSystem.arraycopy(array, offset, items, size, length);\r\n \t\tsize += length;\r\n \t}\r\n@@ -238,7 +238,7 @@\n \t * @return {@link #items} */\r\n \tpublic long[] ensureCapacity (int additionalCapacity) {\r\n \t\tint sizeNeeded = size + additionalCapacity;\r\n-\t\tif (sizeNeeded >= items.length) resize(Math.max(8, sizeNeeded));\r\n+\t\tif (sizeNeeded > items.length) resize(Math.max(8, sizeNeeded));\r\n \t\treturn items;\r\n \t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 98, "bugNodeStartChar": 3878, "bugNodeLength": 26, "fixLineNum": 98, "fixNodeStartChar": 3781, "fixNodeLength": 25, "sourceBeforeFix": "sizeNeeded >= items.length", "sourceAfterFix": "sizeNeeded > items.length"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "04a010c8499fbc96b1e5a99bdbebaf0b38d24586", "fixCommitParentSHA1": "d5b978271f13513ccb20a7f3b1393e6dd4331d0d", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/LongArray.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/LongArray.java b/gdx/src/com/badlogic/gdx/utils/LongArray.java\nindex be1c6f7..3db12ca 100644\n--- a/gdx/src/com/badlogic/gdx/utils/LongArray.java\n+++ b/gdx/src/com/badlogic/gdx/utils/LongArray.java\n@@ -95,7 +95,7 @@\n \tpublic void addAll (long[] array, int offset, int length) {\r\n \t\tlong[] items = this.items;\r\n \t\tint sizeNeeded = size + length;\r\n-\t\tif (sizeNeeded >= items.length) items = resize(Math.max(8, (int)(sizeNeeded * 1.75f)));\r\n+\t\tif (sizeNeeded > items.length) items = resize(Math.max(8, (int)(sizeNeeded * 1.75f)));\r\n \t\tSystem.arraycopy(array, offset, items, size, length);\r\n \t\tsize += length;\r\n \t}\r\n@@ -238,7 +238,7 @@\n \t * @return {@link #items} */\r\n \tpublic long[] ensureCapacity (int additionalCapacity) {\r\n \t\tint sizeNeeded = size + additionalCapacity;\r\n-\t\tif (sizeNeeded >= items.length) resize(Math.max(8, sizeNeeded));\r\n+\t\tif (sizeNeeded > items.length) resize(Math.max(8, sizeNeeded));\r\n \t\treturn items;\r\n \t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 241, "bugNodeStartChar": 8278, "bugNodeLength": 26, "fixLineNum": 241, "fixNodeStartChar": 8038, "fixNodeLength": 25, "sourceBeforeFix": "sizeNeeded >= items.length", "sourceAfterFix": "sizeNeeded > items.length"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "04a010c8499fbc96b1e5a99bdbebaf0b38d24586", "fixCommitParentSHA1": "d5b978271f13513ccb20a7f3b1393e6dd4331d0d", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ShortArray.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ShortArray.java b/gdx/src/com/badlogic/gdx/utils/ShortArray.java\nindex 0fb6379..940a321 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ShortArray.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ShortArray.java\n@@ -102,7 +102,7 @@\n \tpublic void addAll (short[] array, int offset, int length) {\r\n \t\tshort[] items = this.items;\r\n \t\tint sizeNeeded = size + length;\r\n-\t\tif (sizeNeeded >= items.length) items = resize(Math.max(8, (int)(sizeNeeded * 1.75f)));\r\n+\t\tif (sizeNeeded > items.length) items = resize(Math.max(8, (int)(sizeNeeded * 1.75f)));\r\n \t\tSystem.arraycopy(array, offset, items, size, length);\r\n \t\tsize += length;\r\n \t}\r\n@@ -245,7 +245,7 @@\n \t * @return {@link #items} */\r\n \tpublic short[] ensureCapacity (int additionalCapacity) {\r\n \t\tint sizeNeeded = size + additionalCapacity;\r\n-\t\tif (sizeNeeded >= items.length) resize(Math.max(8, sizeNeeded));\r\n+\t\tif (sizeNeeded > items.length) resize(Math.max(8, sizeNeeded));\r\n \t\treturn items;\r\n \t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 105, "bugNodeStartChar": 4138, "bugNodeLength": 26, "fixLineNum": 105, "fixNodeStartChar": 4034, "fixNodeLength": 25, "sourceBeforeFix": "sizeNeeded >= items.length", "sourceAfterFix": "sizeNeeded > items.length"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "04a010c8499fbc96b1e5a99bdbebaf0b38d24586", "fixCommitParentSHA1": "d5b978271f13513ccb20a7f3b1393e6dd4331d0d", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ShortArray.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ShortArray.java b/gdx/src/com/badlogic/gdx/utils/ShortArray.java\nindex 0fb6379..940a321 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ShortArray.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ShortArray.java\n@@ -102,7 +102,7 @@\n \tpublic void addAll (short[] array, int offset, int length) {\r\n \t\tshort[] items = this.items;\r\n \t\tint sizeNeeded = size + length;\r\n-\t\tif (sizeNeeded >= items.length) items = resize(Math.max(8, (int)(sizeNeeded * 1.75f)));\r\n+\t\tif (sizeNeeded > items.length) items = resize(Math.max(8, (int)(sizeNeeded * 1.75f)));\r\n \t\tSystem.arraycopy(array, offset, items, size, length);\r\n \t\tsize += length;\r\n \t}\r\n@@ -245,7 +245,7 @@\n \t * @return {@link #items} */\r\n \tpublic short[] ensureCapacity (int additionalCapacity) {\r\n \t\tint sizeNeeded = size + additionalCapacity;\r\n-\t\tif (sizeNeeded >= items.length) resize(Math.max(8, sizeNeeded));\r\n+\t\tif (sizeNeeded > items.length) resize(Math.max(8, sizeNeeded));\r\n \t\treturn items;\r\n \t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 248, "bugNodeStartChar": 8564, "bugNodeLength": 26, "fixLineNum": 248, "fixNodeStartChar": 8317, "fixNodeLength": 25, "sourceBeforeFix": "sizeNeeded >= items.length", "sourceAfterFix": "sizeNeeded > items.length"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "10c1478e3ebe41cf5ed8f637c9bdaac258c4f8f9", "fixCommitParentSHA1": "f9647284d3926ea8768e2209649c2b4f6f8dea48", "bugFilePath": "backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/io/DataInputStream.java", "fixPatch": "diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/io/DataInputStream.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/io/DataInputStream.java\nindex a89ea4b..1c3b504 100644\n--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/io/DataInputStream.java\n+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/io/DataInputStream.java\n@@ -113,13 +113,13 @@\n \t\t\tsb.append((char)a);\n \t\t\treturn 1;\n \t\t}\n-\t\tif ((a & 0xe0) == 0xb0) {\n+\t\tif ((a & 0xe0) == 0xc0) {\n \t\t\tint b = readUnsignedByte();\n \t\t\tsb.append((char)(((a & 0x1F) << 6) | (b & 0x3F)));\n \t\t\treturn 2;\n \t\t}\n \t\tif ((a & 0xf0) == 0xe0) {\n-\t\t\tint b = is.read();\n+\t\t\tint b = readUnsignedByte();\n \t\t\tint c = readUnsignedByte();\n \t\t\tsb.append((char)(((a & 0x0F) << 12) | ((b & 0x3F) << 6) | (c & 0x3F)));\n \t\t\treturn 3;\n", "projectName": "libgdx.libgdx", "bugLineNum": 116, "bugNodeStartChar": 2704, "bugNodeLength": 18, "fixLineNum": 116, "fixNodeStartChar": 2704, "fixNodeLength": 18, "sourceBeforeFix": "(a & 0xe0) == 0xb0", "sourceAfterFix": "(a & 0xe0) == 0xc0"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "4193fdac9237b8acbac7a76ecc3990ddeb05415c", "fixCommitParentSHA1": "35b32a4a7f2b7d8eb2ae696cd9d76d47d9f45586", "bugFilePath": "backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/io/DataInputStream.java", "fixPatch": "diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/io/DataInputStream.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/io/DataInputStream.java\nindex a89ea4b..1c3b504 100644\n--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/io/DataInputStream.java\n+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/io/DataInputStream.java\n@@ -113,13 +113,13 @@\n \t\t\tsb.append((char)a);\n \t\t\treturn 1;\n \t\t}\n-\t\tif ((a & 0xe0) == 0xb0) {\n+\t\tif ((a & 0xe0) == 0xc0) {\n \t\t\tint b = readUnsignedByte();\n \t\t\tsb.append((char)(((a & 0x1F) << 6) | (b & 0x3F)));\n \t\t\treturn 2;\n \t\t}\n \t\tif ((a & 0xf0) == 0xe0) {\n-\t\t\tint b = is.read();\n+\t\t\tint b = readUnsignedByte();\n \t\t\tint c = readUnsignedByte();\n \t\t\tsb.append((char)(((a & 0x0F) << 12) | ((b & 0x3F) << 6) | (c & 0x3F)));\n \t\t\treturn 3;\n", "projectName": "libgdx.libgdx", "bugLineNum": 116, "bugNodeStartChar": 2704, "bugNodeLength": 18, "fixLineNum": 116, "fixNodeStartChar": 2704, "fixNodeLength": 18, "sourceBeforeFix": "(a & 0xe0) == 0xb0", "sourceAfterFix": "(a & 0xe0) == 0xc0"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "5fb344a827762fc8f31b47699fd16823f624f1c6", "fixCommitParentSHA1": "de688453bb8288fd66728cccaffb9c0e10b6ce06", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/OrthographicCamera.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/OrthographicCamera.java b/gdx/src/com/badlogic/gdx/graphics/OrthographicCamera.java\nindex 9e8c4b9..484abd4 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/OrthographicCamera.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/OrthographicCamera.java\n@@ -84,7 +84,7 @@\n \t\t\tdirection.set(0, 0, 1);\r\n \t\t} else {\r\n \t\t\tup.set(0, 1, 0);\r\n-\t\t\tdirection.set(0, 0, 1);\r\n+\t\t\tdirection.set(0, 0, -1);\r\n \t\t}\r\n \t\tposition.set(zoom * viewportWidth / 2.0f, zoom * viewportHeight / 2.0f, 0);\r\n \t\tthis.viewportWidth = viewportWidth;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 87, "bugNodeStartChar": 3287, "bugNodeLength": 1, "fixLineNum": 87, "fixNodeStartChar": 3202, "fixNodeLength": 2, "sourceBeforeFix": "1", "sourceAfterFix": "-1"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "5805f36ea1b29a185ded3305590df0872c3abb44", "fixCommitParentSHA1": "de688453bb8288fd66728cccaffb9c0e10b6ce06", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/OrthographicCamera.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/OrthographicCamera.java b/gdx/src/com/badlogic/gdx/graphics/OrthographicCamera.java\nindex 9e8c4b9..484abd4 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/OrthographicCamera.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/OrthographicCamera.java\n@@ -84,7 +84,7 @@\n \t\t\tdirection.set(0, 0, 1);\r\n \t\t} else {\r\n \t\t\tup.set(0, 1, 0);\r\n-\t\t\tdirection.set(0, 0, 1);\r\n+\t\t\tdirection.set(0, 0, -1);\r\n \t\t}\r\n \t\tposition.set(zoom * viewportWidth / 2.0f, zoom * viewportHeight / 2.0f, 0);\r\n \t\tthis.viewportWidth = viewportWidth;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 87, "bugNodeStartChar": 3287, "bugNodeLength": 1, "fixLineNum": 87, "fixNodeStartChar": 3202, "fixNodeLength": 2, "sourceBeforeFix": "1", "sourceAfterFix": "-1"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "5ac0dcd1b04e38a3dbe11a94897cc0a34ef2d5ec", "fixCommitParentSHA1": "6ea901b1c7e37d2e5486a9910f2819bae0b030b6", "bugFilePath": "backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidApplication.java", "fixPatch": "diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidApplication.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidApplication.java\nindex a0d93b5..3c472ce 100644\n--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidApplication.java\n+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidApplication.java\n@@ -381,7 +381,7 @@\n \t}\r\n \r\n \t@Override\r\n-\tpublic void log (String tag, String message, Exception exception) {\r\n+\tpublic void log (String tag, String message, Throwable exception) {\r\n \t\tif (logLevel >= LOG_INFO) Log.i(tag, message, exception);\r\n \t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 384, "bugNodeStartChar": 14370, "bugNodeLength": 19, "fixLineNum": 384, "fixNodeStartChar": 13987, "fixNodeLength": 19, "sourceBeforeFix": "Exception exception", "sourceAfterFix": "Throwable exception"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "5ac0dcd1b04e38a3dbe11a94897cc0a34ef2d5ec", "fixCommitParentSHA1": "6ea901b1c7e37d2e5486a9910f2819bae0b030b6", "bugFilePath": "backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidDaydream.java", "fixPatch": "diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidDaydream.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidDaydream.java\nindex 10f7211..c1e2936 100644\n--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidDaydream.java\n+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidDaydream.java\n@@ -371,7 +371,7 @@\n \t}\n \n \t@Override\n-\tpublic void log (String tag, String message, Exception exception) {\n+\tpublic void log (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_INFO) Log.i(tag, message, exception);\n \t}\n \n", "projectName": "libgdx.libgdx", "bugLineNum": 374, "bugNodeStartChar": 13615, "bugNodeLength": 19, "fixLineNum": 374, "fixNodeStartChar": 13615, "fixNodeLength": 19, "sourceBeforeFix": "Exception exception", "sourceAfterFix": "Throwable exception"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "5ac0dcd1b04e38a3dbe11a94897cc0a34ef2d5ec", "fixCommitParentSHA1": "6ea901b1c7e37d2e5486a9910f2819bae0b030b6", "bugFilePath": "backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidLiveWallpaper.java", "fixPatch": "diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidLiveWallpaper.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidLiveWallpaper.java\nindex ccad000..15efbc0 100644\n--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidLiveWallpaper.java\n+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidLiveWallpaper.java\n@@ -328,7 +328,7 @@\n \t}\r\n \r\n \t@Override\r\n-\tpublic void log (String tag, String message, Exception exception) {\r\n+\tpublic void log (String tag, String message, Throwable exception) {\r\n \t\tif (logLevel >= LOG_INFO) Log.i(tag, message, exception);\r\n \t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 331, "bugNodeStartChar": 11522, "bugNodeLength": 19, "fixLineNum": 331, "fixNodeStartChar": 11192, "fixNodeLength": 19, "sourceBeforeFix": "Exception exception", "sourceAfterFix": "Throwable exception"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "5ac0dcd1b04e38a3dbe11a94897cc0a34ef2d5ec", "fixCommitParentSHA1": "6ea901b1c7e37d2e5486a9910f2819bae0b030b6", "bugFilePath": "backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwApplication.java", "fixPatch": "diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwApplication.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwApplication.java\nindex 75d5c2e..8ccfd2e 100644\n--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwApplication.java\n+++ b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwApplication.java\n@@ -377,7 +377,7 @@\n \t\t}\n \t}\n \n-\tpublic void log (String tag, String message, Exception exception) {\n+\tpublic void log (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_INFO) {\n \t\t\tSystem.out.println(tag + \": \" + message);\n \t\t\texception.printStackTrace(System.out);\n", "projectName": "libgdx.libgdx", "bugLineNum": 380, "bugNodeStartChar": 10055, "bugNodeLength": 19, "fixLineNum": 380, "fixNodeStartChar": 10055, "fixNodeLength": 19, "sourceBeforeFix": "Exception exception", "sourceAfterFix": "Throwable exception"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "5ac0dcd1b04e38a3dbe11a94897cc0a34ef2d5ec", "fixCommitParentSHA1": "6ea901b1c7e37d2e5486a9910f2819bae0b030b6", "bugFilePath": "backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglAWTCanvas.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglAWTCanvas.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglAWTCanvas.java\nindex 81e4874..09c6d41 100644\n--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglAWTCanvas.java\n+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglAWTCanvas.java\n@@ -357,7 +357,7 @@\n \t}\n \n \t@Override\n-\tpublic void log (String tag, String message, Exception exception) {\n+\tpublic void log (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_INFO) {\n \t\t\tSystem.out.println(tag + \": \" + message);\n \t\t\texception.printStackTrace(System.out);\n", "projectName": "libgdx.libgdx", "bugLineNum": 360, "bugNodeStartChar": 8892, "bugNodeLength": 19, "fixLineNum": 360, "fixNodeStartChar": 8892, "fixNodeLength": 19, "sourceBeforeFix": "Exception exception", "sourceAfterFix": "Throwable exception"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "5ac0dcd1b04e38a3dbe11a94897cc0a34ef2d5ec", "fixCommitParentSHA1": "6ea901b1c7e37d2e5486a9910f2819bae0b030b6", "bugFilePath": "backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglApplication.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglApplication.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglApplication.java\nindex 1d1b094..5f2e661 100644\n--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglApplication.java\n+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglApplication.java\n@@ -347,7 +347,7 @@\n \t}\r\n \r\n \t@Override\r\n-\tpublic void log (String tag, String message, Exception exception) {\r\n+\tpublic void log (String tag, String message, Throwable exception) {\r\n \t\tif (logLevel >= LOG_INFO) {\r\n \t\t\tSystem.out.println(tag + \": \" + message);\r\n \t\t\texception.printStackTrace(System.out);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 350, "bugNodeStartChar": 10257, "bugNodeLength": 19, "fixLineNum": 350, "fixNodeStartChar": 9908, "fixNodeLength": 19, "sourceBeforeFix": "Exception exception", "sourceAfterFix": "Throwable exception"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "5ac0dcd1b04e38a3dbe11a94897cc0a34ef2d5ec", "fixCommitParentSHA1": "6ea901b1c7e37d2e5486a9910f2819bae0b030b6", "bugFilePath": "backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglCanvas.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglCanvas.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglCanvas.java\nindex 38591b5..270c244 100644\n--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglCanvas.java\n+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglCanvas.java\n@@ -356,7 +356,7 @@\n \t}\r\n \r\n \t@Override\r\n-\tpublic void log (String tag, String message, Exception exception) {\r\n+\tpublic void log (String tag, String message, Throwable exception) {\r\n \t\tif (logLevel >= LOG_INFO) {\r\n \t\t\tSystem.out.println(tag + \": \" + message);\r\n \t\t\texception.printStackTrace(System.out);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 359, "bugNodeStartChar": 9561, "bugNodeLength": 19, "fixLineNum": 359, "fixNodeStartChar": 9203, "fixNodeLength": 19, "sourceBeforeFix": "Exception exception", "sourceAfterFix": "Throwable exception"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "5ac0dcd1b04e38a3dbe11a94897cc0a34ef2d5ec", "fixCommitParentSHA1": "6ea901b1c7e37d2e5486a9910f2819bae0b030b6", "bugFilePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java", "fixPatch": "diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\nindex e1bd308..ac4b98d 100644\n--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n@@ -264,7 +264,7 @@\n \t}\n \n \t@Override\n-\tpublic void log (String tag, String message, Exception exception) {\n+\tpublic void log (String tag, String message, Throwable exception) {\n \t\tif (logLevel > LOG_NONE) {\n \t\t\tSystem.out.println(\"[info] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n", "projectName": "libgdx.libgdx", "bugLineNum": 267, "bugNodeStartChar": 8061, "bugNodeLength": 19, "fixLineNum": 267, "fixNodeStartChar": 8061, "fixNodeLength": 19, "sourceBeforeFix": "Exception exception", "sourceAfterFix": "Throwable exception"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "5ac0dcd1b04e38a3dbe11a94897cc0a34ef2d5ec", "fixCommitParentSHA1": "6ea901b1c7e37d2e5486a9910f2819bae0b030b6", "bugFilePath": "backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtApplication.java", "fixPatch": "diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtApplication.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtApplication.java\nindex 13b0832..83d2c67 100644\n--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtApplication.java\n+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtApplication.java\n@@ -299,7 +299,7 @@\n \t}\n \n \t@Override\n-\tpublic void log (String tag, String message, Exception exception) {\n+\tpublic void log (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_INFO) {\n \t\t\tcheckLogLabel();\n \t\t\tlog.setText(log.getText() + \"\\n\" + tag + \": \" + message + \"\\n\" + exception.getMessage() + \"\\n\");\n", "projectName": "libgdx.libgdx", "bugLineNum": 302, "bugNodeStartChar": 9453, "bugNodeLength": 19, "fixLineNum": 302, "fixNodeStartChar": 9453, "fixNodeLength": 19, "sourceBeforeFix": "Exception exception", "sourceAfterFix": "Throwable exception"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "5ac0dcd1b04e38a3dbe11a94897cc0a34ef2d5ec", "fixCommitParentSHA1": "6ea901b1c7e37d2e5486a9910f2819bae0b030b6", "bugFilePath": "gdx/src/com/badlogic/gdx/Application.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/Application.java b/gdx/src/com/badlogic/gdx/Application.java\nindex cf8ce5d..fb69334 100644\n--- a/gdx/src/com/badlogic/gdx/Application.java\n+++ b/gdx/src/com/badlogic/gdx/Application.java\n@@ -129,7 +129,7 @@\n \tpublic void log (String tag, String message);\r\n \r\n \t/** Logs a message to the console or logcat */\r\n-\tpublic void log (String tag, String message, Exception exception);\r\n+\tpublic void log (String tag, String message, Throwable exception);\r\n \r\n \t/** Logs an error message to the console or logcat */\r\n \tpublic void error (String tag, String message);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 132, "bugNodeStartChar": 6431, "bugNodeLength": 19, "fixLineNum": 132, "fixNodeStartChar": 6300, "fixNodeLength": 19, "sourceBeforeFix": "Exception exception", "sourceAfterFix": "Throwable exception"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "fa187b882171fc0c6cf049a85bcaae26d2261328", "fixCommitParentSHA1": "3f035d80334fc38672916718a7b38b7d9d18f075", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/Pools.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/Pools.java b/gdx/src/com/badlogic/gdx/utils/Pools.java\nindex 798efe1..043a819 100644\n--- a/gdx/src/com/badlogic/gdx/utils/Pools.java\n+++ b/gdx/src/com/badlogic/gdx/utils/Pools.java\n@@ -51,7 +51,7 @@\n \t\tif (objects == null) throw new IllegalArgumentException(\"objects cannot be null.\");\r\n \t\tfor (int i = 0, n = objects.size; i < n; i++) {\r\n \t\t\tObject object = objects.get(i);\r\n-\t\t\tif (objects == null) continue;\r\n+\t\t\tif (object == null) continue;\r\n \t\t\tReflectionPool pool = typePools.get(object.getClass());\r\n \t\t\tif (pool == null) return; // Ignore freeing an object that was never retained.\r\n \t\t\tpool.free(object);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 54, "bugNodeStartChar": 2316, "bugNodeLength": 15, "fixLineNum": 54, "fixNodeStartChar": 2263, "fixNodeLength": 14, "sourceBeforeFix": "objects == null", "sourceAfterFix": "object == null"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "fa187b882171fc0c6cf049a85bcaae26d2261328", "fixCommitParentSHA1": "3f035d80334fc38672916718a7b38b7d9d18f075", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/Pools.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/Pools.java b/gdx/src/com/badlogic/gdx/utils/Pools.java\nindex 798efe1..043a819 100644\n--- a/gdx/src/com/badlogic/gdx/utils/Pools.java\n+++ b/gdx/src/com/badlogic/gdx/utils/Pools.java\n@@ -51,7 +51,7 @@\n \t\tif (objects == null) throw new IllegalArgumentException(\"objects cannot be null.\");\r\n \t\tfor (int i = 0, n = objects.size; i < n; i++) {\r\n \t\t\tObject object = objects.get(i);\r\n-\t\t\tif (objects == null) continue;\r\n+\t\t\tif (object == null) continue;\r\n \t\t\tReflectionPool pool = typePools.get(object.getClass());\r\n \t\t\tif (pool == null) return; // Ignore freeing an object that was never retained.\r\n \t\t\tpool.free(object);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 54, "bugNodeStartChar": 2316, "bugNodeLength": 15, "fixLineNum": 54, "fixNodeStartChar": 2263, "fixNodeLength": 14, "sourceBeforeFix": "objects == null", "sourceAfterFix": "object == null"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "53ebdf6a3f20e1b5ba4958e08ec1c31698d74c98", "fixCommitParentSHA1": "17652d247841973baf3c8a3bf54160db4090696d", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java\nindex 2451bff..41dfaa1 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java\n@@ -305,7 +305,7 @@\n \t\t\tNode node = nodes.get(i);\r\n \t\t\tif (node.actor.getY() < low) break;\r\n \t\t\tif (!node.isSelectable()) continue;\r\n-\t\t\tif (node.actor.getY() <= high) selectedNodes.add(node);\r\n+\t\t\tif (node.actor.getY() <= high && !selectedNodes.contains(node, true)) selectedNodes.add(node);\r\n \t\t\tif (node.expanded) selectNodes(node.children, low, high);\r\n \t\t}\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 308, "bugNodeStartChar": 10344, "bugNodeLength": 25, "fixLineNum": 308, "fixNodeStartChar": 10037, "fixNodeLength": 64, "sourceBeforeFix": "node.actor.getY() <= high", "sourceAfterFix": "node.actor.getY() <= high && !selectedNodes.contains(node,true)"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "70d674018c9f03dafc555f0aca8a5c64aa5a1408", "fixCommitParentSHA1": "2343ba9a9f44482b9c77acddbb0e26f687d8ecd5", "bugFilePath": "gdx/src/com/badlogic/gdx/math/Polygon.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/Polygon.java b/gdx/src/com/badlogic/gdx/math/Polygon.java\nindex 7e6ac63..eaa2f6b 100644\n--- a/gdx/src/com/badlogic/gdx/math/Polygon.java\n+++ b/gdx/src/com/badlogic/gdx/math/Polygon.java\n@@ -57,7 +57,7 @@\n \t\tdirty = false;\r\n \r\n \t\tfinal float[] localVertices = this.localVertices;\r\n-\t\tif (worldVertices == null || worldVertices.length < localVertices.length) worldVertices = new float[localVertices.length];\r\n+\t\tif (worldVertices == null || worldVertices.length != localVertices.length) worldVertices = new float[localVertices.length];\r\n \r\n \t\tfinal float[] worldVertices = this.worldVertices;\r\n \t\tfinal float positionX = x;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 60, "bugNodeStartChar": 2485, "bugNodeLength": 43, "fixLineNum": 60, "fixNodeStartChar": 2426, "fixNodeLength": 44, "sourceBeforeFix": "worldVertices.length < localVertices.length", "sourceAfterFix": "worldVertices.length != localVertices.length"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "16c64bd14729e2982934c2fe72ee2a7e8e382819", "fixCommitParentSHA1": "33ced6685879a2f4c5ffacea24edcce63d2a424f", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java b/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\nindex fbcd7c0..e3d7fd5 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\n@@ -461,16 +461,16 @@\n \t\tfloat x1, y1, x2, y2, x3, y3, x4, y4;\r\n \r\n \t\tx1 = x + c * (0 - originX) + -s * (0 - originY);\r\n-\t\ty1 = y + s * (0 - originY) + c * (0 - originY);\r\n+\t\ty1 = y + s * (0 - originX) + c * (0 - originY);\r\n \r\n \t\tx2 = x + c * (width - originX) + -s * (0 - originY);\r\n-\t\ty2 = y + s * (width - originY) + c * (0 - originY);\r\n+\t\ty2 = y + s * (width - originX) + c * (0 - originY);\r\n \r\n \t\tx3 = x + c * (width - originX) + -s * (height - originY);\r\n-\t\ty3 = y + s * (width - originY) + c * (height - originY);\r\n+\t\ty3 = y + s * (width - originX) + c * (height - originY);\r\n \r\n \t\tx4 = x + c * (0 - originX) + -s * (height - originY);\r\n-\t\ty4 = y + s * (0 - originY) + c * (height - originY);\r\n+\t\ty4 = y + s * (0 - originX) + c * (height - originY);\r\n \r\n \t\tif (currType == ShapeType.Line) {\r\n \t\t\trenderer.color(col1.r, col1.g, col1.b, col1.a);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 464, "bugNodeStartChar": 18100, "bugNodeLength": 11, "fixLineNum": 464, "fixNodeStartChar": 17637, "fixNodeLength": 11, "sourceBeforeFix": "0 - originY", "sourceAfterFix": "0 - originX"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "16c64bd14729e2982934c2fe72ee2a7e8e382819", "fixCommitParentSHA1": "33ced6685879a2f4c5ffacea24edcce63d2a424f", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java b/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\nindex fbcd7c0..e3d7fd5 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\n@@ -461,16 +461,16 @@\n \t\tfloat x1, y1, x2, y2, x3, y3, x4, y4;\r\n \r\n \t\tx1 = x + c * (0 - originX) + -s * (0 - originY);\r\n-\t\ty1 = y + s * (0 - originY) + c * (0 - originY);\r\n+\t\ty1 = y + s * (0 - originX) + c * (0 - originY);\r\n \r\n \t\tx2 = x + c * (width - originX) + -s * (0 - originY);\r\n-\t\ty2 = y + s * (width - originY) + c * (0 - originY);\r\n+\t\ty2 = y + s * (width - originX) + c * (0 - originY);\r\n \r\n \t\tx3 = x + c * (width - originX) + -s * (height - originY);\r\n-\t\ty3 = y + s * (width - originY) + c * (height - originY);\r\n+\t\ty3 = y + s * (width - originX) + c * (height - originY);\r\n \r\n \t\tx4 = x + c * (0 - originX) + -s * (height - originY);\r\n-\t\ty4 = y + s * (0 - originY) + c * (height - originY);\r\n+\t\ty4 = y + s * (0 - originX) + c * (height - originY);\r\n \r\n \t\tif (currType == ShapeType.Line) {\r\n \t\t\trenderer.color(col1.r, col1.g, col1.b, col1.a);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 464, "bugNodeStartChar": 18100, "bugNodeLength": 11, "fixLineNum": 464, "fixNodeStartChar": 17637, "fixNodeLength": 11, "sourceBeforeFix": "0 - originY", "sourceAfterFix": "0 - originX"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "16c64bd14729e2982934c2fe72ee2a7e8e382819", "fixCommitParentSHA1": "33ced6685879a2f4c5ffacea24edcce63d2a424f", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java b/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\nindex fbcd7c0..e3d7fd5 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\n@@ -461,16 +461,16 @@\n \t\tfloat x1, y1, x2, y2, x3, y3, x4, y4;\r\n \r\n \t\tx1 = x + c * (0 - originX) + -s * (0 - originY);\r\n-\t\ty1 = y + s * (0 - originY) + c * (0 - originY);\r\n+\t\ty1 = y + s * (0 - originX) + c * (0 - originY);\r\n \r\n \t\tx2 = x + c * (width - originX) + -s * (0 - originY);\r\n-\t\ty2 = y + s * (width - originY) + c * (0 - originY);\r\n+\t\ty2 = y + s * (width - originX) + c * (0 - originY);\r\n \r\n \t\tx3 = x + c * (width - originX) + -s * (height - originY);\r\n-\t\ty3 = y + s * (width - originY) + c * (height - originY);\r\n+\t\ty3 = y + s * (width - originX) + c * (height - originY);\r\n \r\n \t\tx4 = x + c * (0 - originX) + -s * (height - originY);\r\n-\t\ty4 = y + s * (0 - originY) + c * (height - originY);\r\n+\t\ty4 = y + s * (0 - originX) + c * (height - originY);\r\n \r\n \t\tif (currType == ShapeType.Line) {\r\n \t\t\trenderer.color(col1.r, col1.g, col1.b, col1.a);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 467, "bugNodeStartChar": 18209, "bugNodeLength": 15, "fixLineNum": 467, "fixNodeStartChar": 17743, "fixNodeLength": 15, "sourceBeforeFix": "width - originY", "sourceAfterFix": "width - originX"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "16c64bd14729e2982934c2fe72ee2a7e8e382819", "fixCommitParentSHA1": "33ced6685879a2f4c5ffacea24edcce63d2a424f", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java b/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\nindex fbcd7c0..e3d7fd5 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\n@@ -461,16 +461,16 @@\n \t\tfloat x1, y1, x2, y2, x3, y3, x4, y4;\r\n \r\n \t\tx1 = x + c * (0 - originX) + -s * (0 - originY);\r\n-\t\ty1 = y + s * (0 - originY) + c * (0 - originY);\r\n+\t\ty1 = y + s * (0 - originX) + c * (0 - originY);\r\n \r\n \t\tx2 = x + c * (width - originX) + -s * (0 - originY);\r\n-\t\ty2 = y + s * (width - originY) + c * (0 - originY);\r\n+\t\ty2 = y + s * (width - originX) + c * (0 - originY);\r\n \r\n \t\tx3 = x + c * (width - originX) + -s * (height - originY);\r\n-\t\ty3 = y + s * (width - originY) + c * (height - originY);\r\n+\t\ty3 = y + s * (width - originX) + c * (height - originY);\r\n \r\n \t\tx4 = x + c * (0 - originX) + -s * (height - originY);\r\n-\t\ty4 = y + s * (0 - originY) + c * (height - originY);\r\n+\t\ty4 = y + s * (0 - originX) + c * (height - originY);\r\n \r\n \t\tif (currType == ShapeType.Line) {\r\n \t\t\trenderer.color(col1.r, col1.g, col1.b, col1.a);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 467, "bugNodeStartChar": 18209, "bugNodeLength": 15, "fixLineNum": 467, "fixNodeStartChar": 17743, "fixNodeLength": 15, "sourceBeforeFix": "width - originY", "sourceAfterFix": "width - originX"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "16c64bd14729e2982934c2fe72ee2a7e8e382819", "fixCommitParentSHA1": "33ced6685879a2f4c5ffacea24edcce63d2a424f", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java b/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\nindex fbcd7c0..e3d7fd5 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\n@@ -461,16 +461,16 @@\n \t\tfloat x1, y1, x2, y2, x3, y3, x4, y4;\r\n \r\n \t\tx1 = x + c * (0 - originX) + -s * (0 - originY);\r\n-\t\ty1 = y + s * (0 - originY) + c * (0 - originY);\r\n+\t\ty1 = y + s * (0 - originX) + c * (0 - originY);\r\n \r\n \t\tx2 = x + c * (width - originX) + -s * (0 - originY);\r\n-\t\ty2 = y + s * (width - originY) + c * (0 - originY);\r\n+\t\ty2 = y + s * (width - originX) + c * (0 - originY);\r\n \r\n \t\tx3 = x + c * (width - originX) + -s * (height - originY);\r\n-\t\ty3 = y + s * (width - originY) + c * (height - originY);\r\n+\t\ty3 = y + s * (width - originX) + c * (height - originY);\r\n \r\n \t\tx4 = x + c * (0 - originX) + -s * (height - originY);\r\n-\t\ty4 = y + s * (0 - originY) + c * (height - originY);\r\n+\t\ty4 = y + s * (0 - originX) + c * (height - originY);\r\n \r\n \t\tif (currType == ShapeType.Line) {\r\n \t\t\trenderer.color(col1.r, col1.g, col1.b, col1.a);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 470, "bugNodeStartChar": 18327, "bugNodeLength": 15, "fixLineNum": 470, "fixNodeStartChar": 17858, "fixNodeLength": 15, "sourceBeforeFix": "width - originY", "sourceAfterFix": "width - originX"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "16c64bd14729e2982934c2fe72ee2a7e8e382819", "fixCommitParentSHA1": "33ced6685879a2f4c5ffacea24edcce63d2a424f", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java b/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\nindex fbcd7c0..e3d7fd5 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\n@@ -461,16 +461,16 @@\n \t\tfloat x1, y1, x2, y2, x3, y3, x4, y4;\r\n \r\n \t\tx1 = x + c * (0 - originX) + -s * (0 - originY);\r\n-\t\ty1 = y + s * (0 - originY) + c * (0 - originY);\r\n+\t\ty1 = y + s * (0 - originX) + c * (0 - originY);\r\n \r\n \t\tx2 = x + c * (width - originX) + -s * (0 - originY);\r\n-\t\ty2 = y + s * (width - originY) + c * (0 - originY);\r\n+\t\ty2 = y + s * (width - originX) + c * (0 - originY);\r\n \r\n \t\tx3 = x + c * (width - originX) + -s * (height - originY);\r\n-\t\ty3 = y + s * (width - originY) + c * (height - originY);\r\n+\t\ty3 = y + s * (width - originX) + c * (height - originY);\r\n \r\n \t\tx4 = x + c * (0 - originX) + -s * (height - originY);\r\n-\t\ty4 = y + s * (0 - originY) + c * (height - originY);\r\n+\t\ty4 = y + s * (0 - originX) + c * (height - originY);\r\n \r\n \t\tif (currType == ShapeType.Line) {\r\n \t\t\trenderer.color(col1.r, col1.g, col1.b, col1.a);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 470, "bugNodeStartChar": 18327, "bugNodeLength": 15, "fixLineNum": 470, "fixNodeStartChar": 17858, "fixNodeLength": 15, "sourceBeforeFix": "width - originY", "sourceAfterFix": "width - originX"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "16c64bd14729e2982934c2fe72ee2a7e8e382819", "fixCommitParentSHA1": "33ced6685879a2f4c5ffacea24edcce63d2a424f", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java b/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\nindex fbcd7c0..e3d7fd5 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\n@@ -461,16 +461,16 @@\n \t\tfloat x1, y1, x2, y2, x3, y3, x4, y4;\r\n \r\n \t\tx1 = x + c * (0 - originX) + -s * (0 - originY);\r\n-\t\ty1 = y + s * (0 - originY) + c * (0 - originY);\r\n+\t\ty1 = y + s * (0 - originX) + c * (0 - originY);\r\n \r\n \t\tx2 = x + c * (width - originX) + -s * (0 - originY);\r\n-\t\ty2 = y + s * (width - originY) + c * (0 - originY);\r\n+\t\ty2 = y + s * (width - originX) + c * (0 - originY);\r\n \r\n \t\tx3 = x + c * (width - originX) + -s * (height - originY);\r\n-\t\ty3 = y + s * (width - originY) + c * (height - originY);\r\n+\t\ty3 = y + s * (width - originX) + c * (height - originY);\r\n \r\n \t\tx4 = x + c * (0 - originX) + -s * (height - originY);\r\n-\t\ty4 = y + s * (0 - originY) + c * (height - originY);\r\n+\t\ty4 = y + s * (0 - originX) + c * (height - originY);\r\n \r\n \t\tif (currType == ShapeType.Line) {\r\n \t\t\trenderer.color(col1.r, col1.g, col1.b, col1.a);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 473, "bugNodeStartChar": 18446, "bugNodeLength": 11, "fixLineNum": 473, "fixNodeStartChar": 17974, "fixNodeLength": 11, "sourceBeforeFix": "0 - originY", "sourceAfterFix": "0 - originX"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "16c64bd14729e2982934c2fe72ee2a7e8e382819", "fixCommitParentSHA1": "33ced6685879a2f4c5ffacea24edcce63d2a424f", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java b/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\nindex fbcd7c0..e3d7fd5 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\n@@ -461,16 +461,16 @@\n \t\tfloat x1, y1, x2, y2, x3, y3, x4, y4;\r\n \r\n \t\tx1 = x + c * (0 - originX) + -s * (0 - originY);\r\n-\t\ty1 = y + s * (0 - originY) + c * (0 - originY);\r\n+\t\ty1 = y + s * (0 - originX) + c * (0 - originY);\r\n \r\n \t\tx2 = x + c * (width - originX) + -s * (0 - originY);\r\n-\t\ty2 = y + s * (width - originY) + c * (0 - originY);\r\n+\t\ty2 = y + s * (width - originX) + c * (0 - originY);\r\n \r\n \t\tx3 = x + c * (width - originX) + -s * (height - originY);\r\n-\t\ty3 = y + s * (width - originY) + c * (height - originY);\r\n+\t\ty3 = y + s * (width - originX) + c * (height - originY);\r\n \r\n \t\tx4 = x + c * (0 - originX) + -s * (height - originY);\r\n-\t\ty4 = y + s * (0 - originY) + c * (height - originY);\r\n+\t\ty4 = y + s * (0 - originX) + c * (height - originY);\r\n \r\n \t\tif (currType == ShapeType.Line) {\r\n \t\t\trenderer.color(col1.r, col1.g, col1.b, col1.a);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 473, "bugNodeStartChar": 18446, "bugNodeLength": 11, "fixLineNum": 473, "fixNodeStartChar": 17974, "fixNodeLength": 11, "sourceBeforeFix": "0 - originY", "sourceAfterFix": "0 - originX"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "6c1f65cd77fae163a32a1379839fb461a2a6d0b6", "fixCommitParentSHA1": "528849d460e279ad16b2fc21227b1cbd3a829bd1", "bugFilePath": "tests/gdx-tests-iosrobovm/src/com/badlogic/gdx/tests/IOSRobovmTests.java", "fixPatch": "diff --git a/tests/gdx-tests-iosrobovm/src/com/badlogic/gdx/tests/IOSRobovmTests.java b/tests/gdx-tests-iosrobovm/src/com/badlogic/gdx/tests/IOSRobovmTests.java\nindex c1846fc..dffd56d 100644\n--- a/tests/gdx-tests-iosrobovm/src/com/badlogic/gdx/tests/IOSRobovmTests.java\n+++ b/tests/gdx-tests-iosrobovm/src/com/badlogic/gdx/tests/IOSRobovmTests.java\n@@ -13,7 +13,7 @@\n \t@Override\n \tprotected IOSApplication createApplication() {\n \t\tIOSApplicationConfiguration config = new IOSApplicationConfiguration();\n-\t\treturn new IOSApplication(new MultitouchTest(), config);\n+\t\treturn new IOSApplication(new BulletTestCollection(), config);\n \t}\n \n \tpublic static void main(String[] argv) {\n", "projectName": "libgdx.libgdx", "bugLineNum": 16, "bugNodeStartChar": 523, "bugNodeLength": 20, "fixLineNum": 16, "fixNodeStartChar": 523, "fixNodeLength": 26, "sourceBeforeFix": "new MultitouchTest()", "sourceAfterFix": "new BulletTestCollection()"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "ecc84d22052f8489477bd263eeaa361c0d14f7f5", "fixCommitParentSHA1": "121c2675350b9981f49a602e28b1e74628c34e7a", "bugFilePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSGraphics.java", "fixPatch": "diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSGraphics.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSGraphics.java\nindex 01873fe..48a5c51 100644\n--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSGraphics.java\n+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSGraphics.java\n@@ -192,7 +192,7 @@\n \t\tppiX = ppi;\n \t\tppiY = ppi;\n \t\tppcX = ppiX / 2.54f;\n-\t\tppcY = ppcY / 2.54f;\n+\t\tppcY = ppiY / 2.54f;\n \t\tapp.debug(tag, \"Display: ppi=\" + ppi + \", density=\" + density);\n \n \t\t// time + FPS\n", "projectName": "libgdx.libgdx", "bugLineNum": 195, "bugNodeStartChar": 5985, "bugNodeLength": 12, "fixLineNum": 195, "fixNodeStartChar": 5985, "fixNodeLength": 12, "sourceBeforeFix": "ppcY / 2.54f", "sourceAfterFix": "ppiY / 2.54f"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "ecc84d22052f8489477bd263eeaa361c0d14f7f5", "fixCommitParentSHA1": "121c2675350b9981f49a602e28b1e74628c34e7a", "bugFilePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSGraphics.java", "fixPatch": "diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSGraphics.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSGraphics.java\nindex 01873fe..48a5c51 100644\n--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSGraphics.java\n+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSGraphics.java\n@@ -192,7 +192,7 @@\n \t\tppiX = ppi;\n \t\tppiY = ppi;\n \t\tppcX = ppiX / 2.54f;\n-\t\tppcY = ppcY / 2.54f;\n+\t\tppcY = ppiY / 2.54f;\n \t\tapp.debug(tag, \"Display: ppi=\" + ppi + \", density=\" + density);\n \n \t\t// time + FPS\n", "projectName": "libgdx.libgdx", "bugLineNum": 195, "bugNodeStartChar": 5985, "bugNodeLength": 12, "fixLineNum": 195, "fixNodeStartChar": 5985, "fixNodeLength": 12, "sourceBeforeFix": "ppcY / 2.54f", "sourceAfterFix": "ppiY / 2.54f"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "16123c79a01ae52fe40c908fbb94502e17cbe653", "fixCommitParentSHA1": "a19b9a3fefd575b8d683569b3911bad5f56fbec1", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java\nindex dec0b29..0715992 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java\n@@ -188,12 +188,12 @@\n \t\tif (tiled != null) return tiled;\r\n \r\n \t\tDrawable drawable = optional(name, Drawable.class);\r\n-\t\tif (tiled != null) {\r\n+\t\tif (drawable != null) {\r\n \t\t\tif (!(drawable instanceof TiledDrawable)) {\r\n \t\t\t\tthrow new GdxRuntimeException(\"Drawable found but is not a TiledDrawable: \" + name + \", \"\r\n \t\t\t\t\t+ drawable.getClass().getName());\r\n \t\t\t}\r\n-\t\t\treturn tiled;\r\n+\t\t\treturn (TiledDrawable)drawable;\r\n \t\t}\r\n \r\n \t\ttiled = new TiledDrawable(getRegion(name));\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 191, "bugNodeStartChar": 8265, "bugNodeLength": 13, "fixLineNum": 191, "fixNodeStartChar": 8075, "fixNodeLength": 16, "sourceBeforeFix": "tiled != null", "sourceAfterFix": "drawable != null"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "16123c79a01ae52fe40c908fbb94502e17cbe653", "fixCommitParentSHA1": "a19b9a3fefd575b8d683569b3911bad5f56fbec1", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java\nindex dec0b29..0715992 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java\n@@ -188,12 +188,12 @@\n \t\tif (tiled != null) return tiled;\r\n \r\n \t\tDrawable drawable = optional(name, Drawable.class);\r\n-\t\tif (tiled != null) {\r\n+\t\tif (drawable != null) {\r\n \t\t\tif (!(drawable instanceof TiledDrawable)) {\r\n \t\t\t\tthrow new GdxRuntimeException(\"Drawable found but is not a TiledDrawable: \" + name + \", \"\r\n \t\t\t\t\t+ drawable.getClass().getName());\r\n \t\t\t}\r\n-\t\t\treturn tiled;\r\n+\t\t\treturn (TiledDrawable)drawable;\r\n \t\t}\r\n \r\n \t\ttiled = new TiledDrawable(getRegion(name));\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 191, "bugNodeStartChar": 8265, "bugNodeLength": 13, "fixLineNum": 191, "fixNodeStartChar": 8075, "fixNodeLength": 16, "sourceBeforeFix": "tiled != null", "sourceAfterFix": "drawable != null"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "36861f2d8c45c809ce7d13944320bb144dbc6757", "fixCommitParentSHA1": "a19b9a3fefd575b8d683569b3911bad5f56fbec1", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java\nindex dec0b29..0715992 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java\n@@ -188,12 +188,12 @@\n \t\tif (tiled != null) return tiled;\r\n \r\n \t\tDrawable drawable = optional(name, Drawable.class);\r\n-\t\tif (tiled != null) {\r\n+\t\tif (drawable != null) {\r\n \t\t\tif (!(drawable instanceof TiledDrawable)) {\r\n \t\t\t\tthrow new GdxRuntimeException(\"Drawable found but is not a TiledDrawable: \" + name + \", \"\r\n \t\t\t\t\t+ drawable.getClass().getName());\r\n \t\t\t}\r\n-\t\t\treturn tiled;\r\n+\t\t\treturn (TiledDrawable)drawable;\r\n \t\t}\r\n \r\n \t\ttiled = new TiledDrawable(getRegion(name));\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 191, "bugNodeStartChar": 8265, "bugNodeLength": 13, "fixLineNum": 191, "fixNodeStartChar": 8075, "fixNodeLength": 16, "sourceBeforeFix": "tiled != null", "sourceAfterFix": "drawable != null"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "36861f2d8c45c809ce7d13944320bb144dbc6757", "fixCommitParentSHA1": "a19b9a3fefd575b8d683569b3911bad5f56fbec1", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java\nindex dec0b29..0715992 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java\n@@ -188,12 +188,12 @@\n \t\tif (tiled != null) return tiled;\r\n \r\n \t\tDrawable drawable = optional(name, Drawable.class);\r\n-\t\tif (tiled != null) {\r\n+\t\tif (drawable != null) {\r\n \t\t\tif (!(drawable instanceof TiledDrawable)) {\r\n \t\t\t\tthrow new GdxRuntimeException(\"Drawable found but is not a TiledDrawable: \" + name + \", \"\r\n \t\t\t\t\t+ drawable.getClass().getName());\r\n \t\t\t}\r\n-\t\t\treturn tiled;\r\n+\t\t\treturn (TiledDrawable)drawable;\r\n \t\t}\r\n \r\n \t\ttiled = new TiledDrawable(getRegion(name));\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 191, "bugNodeStartChar": 8265, "bugNodeLength": 13, "fixLineNum": 191, "fixNodeStartChar": 8075, "fixNodeLength": 16, "sourceBeforeFix": "tiled != null", "sourceAfterFix": "drawable != null"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "979ce2a33924be23a6343640ed0c038af5a33740", "fixCommitParentSHA1": "9cc1a8339e4bcd2ff3e4855c39dede3d5a260e29", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\nindex 8509aed..2292c3c 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\n@@ -30,9 +30,9 @@\n \tpublic boolean act (float delta) {\n \t\tActor actor = (targetActor != null ? targetActor : this.actor);\n \t\tif (capture)\n-\t\t\ttargetActor.addCaptureListener(listener);\n+\t\t\tactor.addCaptureListener(listener);\n \t\telse\n-\t\t\ttargetActor.addListener(listener);\n+\t\t\tactor.addListener(listener);\n \t\treturn true;\n \t}\n \n", "projectName": "libgdx.libgdx", "bugLineNum": 33, "bugNodeStartChar": 1272, "bugNodeLength": 40, "fixLineNum": 33, "fixNodeStartChar": 1272, "fixNodeLength": 34, "sourceBeforeFix": "targetActor.addCaptureListener(listener)", "sourceAfterFix": "actor.addCaptureListener(listener)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "979ce2a33924be23a6343640ed0c038af5a33740", "fixCommitParentSHA1": "9cc1a8339e4bcd2ff3e4855c39dede3d5a260e29", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\nindex 8509aed..2292c3c 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\n@@ -30,9 +30,9 @@\n \tpublic boolean act (float delta) {\n \t\tActor actor = (targetActor != null ? targetActor : this.actor);\n \t\tif (capture)\n-\t\t\ttargetActor.addCaptureListener(listener);\n+\t\t\tactor.addCaptureListener(listener);\n \t\telse\n-\t\t\ttargetActor.addListener(listener);\n+\t\t\tactor.addListener(listener);\n \t\treturn true;\n \t}\n \n", "projectName": "libgdx.libgdx", "bugLineNum": 33, "bugNodeStartChar": 1272, "bugNodeLength": 40, "fixLineNum": 33, "fixNodeStartChar": 1272, "fixNodeLength": 34, "sourceBeforeFix": "targetActor.addCaptureListener(listener)", "sourceAfterFix": "actor.addCaptureListener(listener)"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "979ce2a33924be23a6343640ed0c038af5a33740", "fixCommitParentSHA1": "9cc1a8339e4bcd2ff3e4855c39dede3d5a260e29", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\nindex 8509aed..2292c3c 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\n@@ -30,9 +30,9 @@\n \tpublic boolean act (float delta) {\n \t\tActor actor = (targetActor != null ? targetActor : this.actor);\n \t\tif (capture)\n-\t\t\ttargetActor.addCaptureListener(listener);\n+\t\t\tactor.addCaptureListener(listener);\n \t\telse\n-\t\t\ttargetActor.addListener(listener);\n+\t\t\tactor.addListener(listener);\n \t\treturn true;\n \t}\n \n", "projectName": "libgdx.libgdx", "bugLineNum": 35, "bugNodeStartChar": 1324, "bugNodeLength": 33, "fixLineNum": 35, "fixNodeStartChar": 1324, "fixNodeLength": 27, "sourceBeforeFix": "targetActor.addListener(listener)", "sourceAfterFix": "actor.addListener(listener)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "979ce2a33924be23a6343640ed0c038af5a33740", "fixCommitParentSHA1": "9cc1a8339e4bcd2ff3e4855c39dede3d5a260e29", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\nindex 8509aed..2292c3c 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\n@@ -30,9 +30,9 @@\n \tpublic boolean act (float delta) {\n \t\tActor actor = (targetActor != null ? targetActor : this.actor);\n \t\tif (capture)\n-\t\t\ttargetActor.addCaptureListener(listener);\n+\t\t\tactor.addCaptureListener(listener);\n \t\telse\n-\t\t\ttargetActor.addListener(listener);\n+\t\t\tactor.addListener(listener);\n \t\treturn true;\n \t}\n \n", "projectName": "libgdx.libgdx", "bugLineNum": 35, "bugNodeStartChar": 1324, "bugNodeLength": 33, "fixLineNum": 35, "fixNodeStartChar": 1324, "fixNodeLength": 27, "sourceBeforeFix": "targetActor.addListener(listener)", "sourceAfterFix": "actor.addListener(listener)"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "2128c76abd417bcdc41c6120d924b618593e9fca", "fixCommitParentSHA1": "9cc1a8339e4bcd2ff3e4855c39dede3d5a260e29", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\nindex 8509aed..2292c3c 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\n@@ -30,9 +30,9 @@\n \tpublic boolean act (float delta) {\n \t\tActor actor = (targetActor != null ? targetActor : this.actor);\n \t\tif (capture)\n-\t\t\ttargetActor.addCaptureListener(listener);\n+\t\t\tactor.addCaptureListener(listener);\n \t\telse\n-\t\t\ttargetActor.addListener(listener);\n+\t\t\tactor.addListener(listener);\n \t\treturn true;\n \t}\n \n", "projectName": "libgdx.libgdx", "bugLineNum": 33, "bugNodeStartChar": 1272, "bugNodeLength": 40, "fixLineNum": 33, "fixNodeStartChar": 1272, "fixNodeLength": 34, "sourceBeforeFix": "targetActor.addCaptureListener(listener)", "sourceAfterFix": "actor.addCaptureListener(listener)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "2128c76abd417bcdc41c6120d924b618593e9fca", "fixCommitParentSHA1": "9cc1a8339e4bcd2ff3e4855c39dede3d5a260e29", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\nindex 8509aed..2292c3c 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\n@@ -30,9 +30,9 @@\n \tpublic boolean act (float delta) {\n \t\tActor actor = (targetActor != null ? targetActor : this.actor);\n \t\tif (capture)\n-\t\t\ttargetActor.addCaptureListener(listener);\n+\t\t\tactor.addCaptureListener(listener);\n \t\telse\n-\t\t\ttargetActor.addListener(listener);\n+\t\t\tactor.addListener(listener);\n \t\treturn true;\n \t}\n \n", "projectName": "libgdx.libgdx", "bugLineNum": 33, "bugNodeStartChar": 1272, "bugNodeLength": 40, "fixLineNum": 33, "fixNodeStartChar": 1272, "fixNodeLength": 34, "sourceBeforeFix": "targetActor.addCaptureListener(listener)", "sourceAfterFix": "actor.addCaptureListener(listener)"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "2128c76abd417bcdc41c6120d924b618593e9fca", "fixCommitParentSHA1": "9cc1a8339e4bcd2ff3e4855c39dede3d5a260e29", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\nindex 8509aed..2292c3c 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\n@@ -30,9 +30,9 @@\n \tpublic boolean act (float delta) {\n \t\tActor actor = (targetActor != null ? targetActor : this.actor);\n \t\tif (capture)\n-\t\t\ttargetActor.addCaptureListener(listener);\n+\t\t\tactor.addCaptureListener(listener);\n \t\telse\n-\t\t\ttargetActor.addListener(listener);\n+\t\t\tactor.addListener(listener);\n \t\treturn true;\n \t}\n \n", "projectName": "libgdx.libgdx", "bugLineNum": 35, "bugNodeStartChar": 1324, "bugNodeLength": 33, "fixLineNum": 35, "fixNodeStartChar": 1324, "fixNodeLength": 27, "sourceBeforeFix": "targetActor.addListener(listener)", "sourceAfterFix": "actor.addListener(listener)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "2128c76abd417bcdc41c6120d924b618593e9fca", "fixCommitParentSHA1": "9cc1a8339e4bcd2ff3e4855c39dede3d5a260e29", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\nindex 8509aed..2292c3c 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\n@@ -30,9 +30,9 @@\n \tpublic boolean act (float delta) {\n \t\tActor actor = (targetActor != null ? targetActor : this.actor);\n \t\tif (capture)\n-\t\t\ttargetActor.addCaptureListener(listener);\n+\t\t\tactor.addCaptureListener(listener);\n \t\telse\n-\t\t\ttargetActor.addListener(listener);\n+\t\t\tactor.addListener(listener);\n \t\treturn true;\n \t}\n \n", "projectName": "libgdx.libgdx", "bugLineNum": 35, "bugNodeStartChar": 1324, "bugNodeLength": 33, "fixLineNum": 35, "fixNodeStartChar": 1324, "fixNodeLength": 27, "sourceBeforeFix": "targetActor.addListener(listener)", "sourceAfterFix": "actor.addListener(listener)"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "780a95c41d5d9ddafe1a237628183020746825a8", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/IdentityMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/IdentityMap.java b/gdx/src/com/badlogic/gdx/utils/IdentityMap.java\nindex a52ce7f..7d79b85 100644\n--- a/gdx/src/com/badlogic/gdx/utils/IdentityMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/IdentityMap.java\n@@ -67,7 +67,7 @@\n \t * before growing the backing table. */\r\n \tpublic IdentityMap (int initialCapacity, float loadFactor) {\r\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\r\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\r\n \r\n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 70, "bugNodeStartChar": 2916, "bugNodeLength": 18, "fixLineNum": 70, "fixNodeStartChar": 2847, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "780a95c41d5d9ddafe1a237628183020746825a8", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/IdentityMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/IdentityMap.java b/gdx/src/com/badlogic/gdx/utils/IdentityMap.java\nindex a52ce7f..7d79b85 100644\n--- a/gdx/src/com/badlogic/gdx/utils/IdentityMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/IdentityMap.java\n@@ -67,7 +67,7 @@\n \t * before growing the backing table. */\r\n \tpublic IdentityMap (int initialCapacity, float loadFactor) {\r\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\r\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\r\n \r\n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 70, "bugNodeStartChar": 2916, "bugNodeLength": 18, "fixLineNum": 70, "fixNodeStartChar": 2847, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "780a95c41d5d9ddafe1a237628183020746825a8", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/IntFloatMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java b/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java\nindex 7a135f0..659ae2a 100644\n--- a/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java\n@@ -71,7 +71,7 @@\n \t * before growing the backing table. */\n \tpublic IntFloatMap (int initialCapacity, float loadFactor) {\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\n \n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\n", "projectName": "libgdx.libgdx", "bugLineNum": 74, "bugNodeStartChar": 2964, "bugNodeLength": 18, "fixLineNum": 74, "fixNodeStartChar": 2964, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "780a95c41d5d9ddafe1a237628183020746825a8", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/IntFloatMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java b/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java\nindex 7a135f0..659ae2a 100644\n--- a/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java\n@@ -71,7 +71,7 @@\n \t * before growing the backing table. */\n \tpublic IntFloatMap (int initialCapacity, float loadFactor) {\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\n \n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\n", "projectName": "libgdx.libgdx", "bugLineNum": 74, "bugNodeStartChar": 2964, "bugNodeLength": 18, "fixLineNum": 74, "fixNodeStartChar": 2964, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "780a95c41d5d9ddafe1a237628183020746825a8", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/IntIntMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/IntIntMap.java b/gdx/src/com/badlogic/gdx/utils/IntIntMap.java\nindex 6bd8d89..e5365a6 100644\n--- a/gdx/src/com/badlogic/gdx/utils/IntIntMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/IntIntMap.java\n@@ -69,7 +69,7 @@\n \t * before growing the backing table. */\n \tpublic IntIntMap (int initialCapacity, float loadFactor) {\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\n \n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\n", "projectName": "libgdx.libgdx", "bugLineNum": 72, "bugNodeStartChar": 2904, "bugNodeLength": 18, "fixLineNum": 72, "fixNodeStartChar": 2904, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "780a95c41d5d9ddafe1a237628183020746825a8", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/IntIntMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/IntIntMap.java b/gdx/src/com/badlogic/gdx/utils/IntIntMap.java\nindex 6bd8d89..e5365a6 100644\n--- a/gdx/src/com/badlogic/gdx/utils/IntIntMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/IntIntMap.java\n@@ -69,7 +69,7 @@\n \t * before growing the backing table. */\n \tpublic IntIntMap (int initialCapacity, float loadFactor) {\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\n \n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\n", "projectName": "libgdx.libgdx", "bugLineNum": 72, "bugNodeStartChar": 2904, "bugNodeLength": 18, "fixLineNum": 72, "fixNodeStartChar": 2904, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "780a95c41d5d9ddafe1a237628183020746825a8", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/IntMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/IntMap.java b/gdx/src/com/badlogic/gdx/utils/IntMap.java\nindex 1208b96..0397ea8 100644\n--- a/gdx/src/com/badlogic/gdx/utils/IntMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/IntMap.java\n@@ -67,7 +67,7 @@\n \t * before growing the backing table. */\r\n \tpublic IntMap (int initialCapacity, float loadFactor) {\r\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\r\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\r\n \r\n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 70, "bugNodeStartChar": 2827, "bugNodeLength": 18, "fixLineNum": 70, "fixNodeStartChar": 2758, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "780a95c41d5d9ddafe1a237628183020746825a8", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/IntMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/IntMap.java b/gdx/src/com/badlogic/gdx/utils/IntMap.java\nindex 1208b96..0397ea8 100644\n--- a/gdx/src/com/badlogic/gdx/utils/IntMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/IntMap.java\n@@ -67,7 +67,7 @@\n \t * before growing the backing table. */\r\n \tpublic IntMap (int initialCapacity, float loadFactor) {\r\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\r\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\r\n \r\n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 70, "bugNodeStartChar": 2827, "bugNodeLength": 18, "fixLineNum": 70, "fixNodeStartChar": 2758, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "780a95c41d5d9ddafe1a237628183020746825a8", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/IntSet.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/IntSet.java b/gdx/src/com/badlogic/gdx/utils/IntSet.java\nindex eddbafd..39afed5 100644\n--- a/gdx/src/com/badlogic/gdx/utils/IntSet.java\n+++ b/gdx/src/com/badlogic/gdx/utils/IntSet.java\n@@ -62,7 +62,7 @@\n \t * before growing the backing table. */\n \tpublic IntSet (int initialCapacity, float loadFactor) {\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\n \n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\n", "projectName": "libgdx.libgdx", "bugLineNum": 65, "bugNodeStartChar": 2610, "bugNodeLength": 18, "fixLineNum": 65, "fixNodeStartChar": 2610, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "780a95c41d5d9ddafe1a237628183020746825a8", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/IntSet.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/IntSet.java b/gdx/src/com/badlogic/gdx/utils/IntSet.java\nindex eddbafd..39afed5 100644\n--- a/gdx/src/com/badlogic/gdx/utils/IntSet.java\n+++ b/gdx/src/com/badlogic/gdx/utils/IntSet.java\n@@ -62,7 +62,7 @@\n \t * before growing the backing table. */\n \tpublic IntSet (int initialCapacity, float loadFactor) {\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\n \n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\n", "projectName": "libgdx.libgdx", "bugLineNum": 65, "bugNodeStartChar": 2610, "bugNodeLength": 18, "fixLineNum": 65, "fixNodeStartChar": 2610, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "780a95c41d5d9ddafe1a237628183020746825a8", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/LongMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/LongMap.java b/gdx/src/com/badlogic/gdx/utils/LongMap.java\nindex 1f2f756..f5373e2 100644\n--- a/gdx/src/com/badlogic/gdx/utils/LongMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/LongMap.java\n@@ -67,7 +67,7 @@\n \t * before growing the backing table. */\r\n \tpublic LongMap (int initialCapacity, float loadFactor) {\r\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\r\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\r\n \r\n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 70, "bugNodeStartChar": 2833, "bugNodeLength": 18, "fixLineNum": 70, "fixNodeStartChar": 2764, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "780a95c41d5d9ddafe1a237628183020746825a8", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/LongMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/LongMap.java b/gdx/src/com/badlogic/gdx/utils/LongMap.java\nindex 1f2f756..f5373e2 100644\n--- a/gdx/src/com/badlogic/gdx/utils/LongMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/LongMap.java\n@@ -67,7 +67,7 @@\n \t * before growing the backing table. */\r\n \tpublic LongMap (int initialCapacity, float loadFactor) {\r\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\r\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\r\n \r\n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 70, "bugNodeStartChar": 2833, "bugNodeLength": 18, "fixLineNum": 70, "fixNodeStartChar": 2764, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "780a95c41d5d9ddafe1a237628183020746825a8", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java b/gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java\nindex 521dc0c..c880f35 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java\n@@ -64,7 +64,7 @@\n \t * before growing the backing table. */\n \tpublic ObjectFloatMap (int initialCapacity, float loadFactor) {\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\n \n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\n", "projectName": "libgdx.libgdx", "bugLineNum": 67, "bugNodeStartChar": 2729, "bugNodeLength": 18, "fixLineNum": 67, "fixNodeStartChar": 2729, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "780a95c41d5d9ddafe1a237628183020746825a8", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java b/gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java\nindex 521dc0c..c880f35 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java\n@@ -64,7 +64,7 @@\n \t * before growing the backing table. */\n \tpublic ObjectFloatMap (int initialCapacity, float loadFactor) {\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\n \n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\n", "projectName": "libgdx.libgdx", "bugLineNum": 67, "bugNodeStartChar": 2729, "bugNodeLength": 18, "fixLineNum": 67, "fixNodeStartChar": 2729, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "780a95c41d5d9ddafe1a237628183020746825a8", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java b/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java\nindex 0fe6084..9e822aa 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java\n@@ -64,7 +64,7 @@\n \t * before growing the backing table. */\r\n \tpublic ObjectIntMap (int initialCapacity, float loadFactor) {\r\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\r\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\r\n \r\n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 67, "bugNodeStartChar": 2783, "bugNodeLength": 18, "fixLineNum": 67, "fixNodeStartChar": 2717, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "780a95c41d5d9ddafe1a237628183020746825a8", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java b/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java\nindex 0fe6084..9e822aa 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java\n@@ -64,7 +64,7 @@\n \t * before growing the backing table. */\r\n \tpublic ObjectIntMap (int initialCapacity, float loadFactor) {\r\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\r\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\r\n \r\n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 67, "bugNodeStartChar": 2783, "bugNodeLength": 18, "fixLineNum": 67, "fixNodeStartChar": 2717, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "780a95c41d5d9ddafe1a237628183020746825a8", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ObjectMap.java b/gdx/src/com/badlogic/gdx/utils/ObjectMap.java\nindex 09757d1..d03ff84 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ObjectMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ObjectMap.java\n@@ -64,7 +64,7 @@\n \t * before growing the backing table. */\r\n \tpublic ObjectMap (int initialCapacity, float loadFactor) {\r\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\r\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\r\n \r\n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 67, "bugNodeStartChar": 2771, "bugNodeLength": 18, "fixLineNum": 67, "fixNodeStartChar": 2705, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "780a95c41d5d9ddafe1a237628183020746825a8", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ObjectMap.java b/gdx/src/com/badlogic/gdx/utils/ObjectMap.java\nindex 09757d1..d03ff84 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ObjectMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ObjectMap.java\n@@ -64,7 +64,7 @@\n \t * before growing the backing table. */\r\n \tpublic ObjectMap (int initialCapacity, float loadFactor) {\r\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\r\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\r\n \r\n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 67, "bugNodeStartChar": 2771, "bugNodeLength": 18, "fixLineNum": 67, "fixNodeStartChar": 2705, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "780a95c41d5d9ddafe1a237628183020746825a8", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ObjectSet.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ObjectSet.java b/gdx/src/com/badlogic/gdx/utils/ObjectSet.java\nindex 126fda7..565058a 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ObjectSet.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ObjectSet.java\n@@ -61,7 +61,7 @@\n \t * before growing the backing table. */\n \tpublic ObjectSet (int initialCapacity, float loadFactor) {\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\n \n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\n", "projectName": "libgdx.libgdx", "bugLineNum": 64, "bugNodeStartChar": 2644, "bugNodeLength": 18, "fixLineNum": 64, "fixNodeStartChar": 2644, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "780a95c41d5d9ddafe1a237628183020746825a8", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ObjectSet.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ObjectSet.java b/gdx/src/com/badlogic/gdx/utils/ObjectSet.java\nindex 126fda7..565058a 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ObjectSet.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ObjectSet.java\n@@ -61,7 +61,7 @@\n \t * before growing the backing table. */\n \tpublic ObjectSet (int initialCapacity, float loadFactor) {\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\n \n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\n", "projectName": "libgdx.libgdx", "bugLineNum": 64, "bugNodeStartChar": 2644, "bugNodeLength": 18, "fixLineNum": 64, "fixNodeStartChar": 2644, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "4281cc1c5d3aa51b56db9d9e251c761c52a855e3", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/IdentityMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/IdentityMap.java b/gdx/src/com/badlogic/gdx/utils/IdentityMap.java\nindex a52ce7f..7d79b85 100644\n--- a/gdx/src/com/badlogic/gdx/utils/IdentityMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/IdentityMap.java\n@@ -67,7 +67,7 @@\n \t * before growing the backing table. */\r\n \tpublic IdentityMap (int initialCapacity, float loadFactor) {\r\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\r\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\r\n \r\n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 70, "bugNodeStartChar": 2916, "bugNodeLength": 18, "fixLineNum": 70, "fixNodeStartChar": 2847, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4281cc1c5d3aa51b56db9d9e251c761c52a855e3", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/IdentityMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/IdentityMap.java b/gdx/src/com/badlogic/gdx/utils/IdentityMap.java\nindex a52ce7f..7d79b85 100644\n--- a/gdx/src/com/badlogic/gdx/utils/IdentityMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/IdentityMap.java\n@@ -67,7 +67,7 @@\n \t * before growing the backing table. */\r\n \tpublic IdentityMap (int initialCapacity, float loadFactor) {\r\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\r\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\r\n \r\n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 70, "bugNodeStartChar": 2916, "bugNodeLength": 18, "fixLineNum": 70, "fixNodeStartChar": 2847, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "4281cc1c5d3aa51b56db9d9e251c761c52a855e3", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/IntFloatMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java b/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java\nindex 7a135f0..659ae2a 100644\n--- a/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java\n@@ -71,7 +71,7 @@\n \t * before growing the backing table. */\n \tpublic IntFloatMap (int initialCapacity, float loadFactor) {\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\n \n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\n", "projectName": "libgdx.libgdx", "bugLineNum": 74, "bugNodeStartChar": 2964, "bugNodeLength": 18, "fixLineNum": 74, "fixNodeStartChar": 2964, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4281cc1c5d3aa51b56db9d9e251c761c52a855e3", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/IntFloatMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java b/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java\nindex 7a135f0..659ae2a 100644\n--- a/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java\n@@ -71,7 +71,7 @@\n \t * before growing the backing table. */\n \tpublic IntFloatMap (int initialCapacity, float loadFactor) {\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\n \n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\n", "projectName": "libgdx.libgdx", "bugLineNum": 74, "bugNodeStartChar": 2964, "bugNodeLength": 18, "fixLineNum": 74, "fixNodeStartChar": 2964, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "4281cc1c5d3aa51b56db9d9e251c761c52a855e3", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/IntIntMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/IntIntMap.java b/gdx/src/com/badlogic/gdx/utils/IntIntMap.java\nindex 6bd8d89..e5365a6 100644\n--- a/gdx/src/com/badlogic/gdx/utils/IntIntMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/IntIntMap.java\n@@ -69,7 +69,7 @@\n \t * before growing the backing table. */\n \tpublic IntIntMap (int initialCapacity, float loadFactor) {\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\n \n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\n", "projectName": "libgdx.libgdx", "bugLineNum": 72, "bugNodeStartChar": 2904, "bugNodeLength": 18, "fixLineNum": 72, "fixNodeStartChar": 2904, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4281cc1c5d3aa51b56db9d9e251c761c52a855e3", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/IntIntMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/IntIntMap.java b/gdx/src/com/badlogic/gdx/utils/IntIntMap.java\nindex 6bd8d89..e5365a6 100644\n--- a/gdx/src/com/badlogic/gdx/utils/IntIntMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/IntIntMap.java\n@@ -69,7 +69,7 @@\n \t * before growing the backing table. */\n \tpublic IntIntMap (int initialCapacity, float loadFactor) {\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\n \n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\n", "projectName": "libgdx.libgdx", "bugLineNum": 72, "bugNodeStartChar": 2904, "bugNodeLength": 18, "fixLineNum": 72, "fixNodeStartChar": 2904, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "4281cc1c5d3aa51b56db9d9e251c761c52a855e3", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/IntMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/IntMap.java b/gdx/src/com/badlogic/gdx/utils/IntMap.java\nindex 1208b96..0397ea8 100644\n--- a/gdx/src/com/badlogic/gdx/utils/IntMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/IntMap.java\n@@ -67,7 +67,7 @@\n \t * before growing the backing table. */\r\n \tpublic IntMap (int initialCapacity, float loadFactor) {\r\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\r\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\r\n \r\n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 70, "bugNodeStartChar": 2827, "bugNodeLength": 18, "fixLineNum": 70, "fixNodeStartChar": 2758, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4281cc1c5d3aa51b56db9d9e251c761c52a855e3", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/IntMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/IntMap.java b/gdx/src/com/badlogic/gdx/utils/IntMap.java\nindex 1208b96..0397ea8 100644\n--- a/gdx/src/com/badlogic/gdx/utils/IntMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/IntMap.java\n@@ -67,7 +67,7 @@\n \t * before growing the backing table. */\r\n \tpublic IntMap (int initialCapacity, float loadFactor) {\r\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\r\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\r\n \r\n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 70, "bugNodeStartChar": 2827, "bugNodeLength": 18, "fixLineNum": 70, "fixNodeStartChar": 2758, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "4281cc1c5d3aa51b56db9d9e251c761c52a855e3", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/IntSet.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/IntSet.java b/gdx/src/com/badlogic/gdx/utils/IntSet.java\nindex eddbafd..39afed5 100644\n--- a/gdx/src/com/badlogic/gdx/utils/IntSet.java\n+++ b/gdx/src/com/badlogic/gdx/utils/IntSet.java\n@@ -62,7 +62,7 @@\n \t * before growing the backing table. */\n \tpublic IntSet (int initialCapacity, float loadFactor) {\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\n \n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\n", "projectName": "libgdx.libgdx", "bugLineNum": 65, "bugNodeStartChar": 2610, "bugNodeLength": 18, "fixLineNum": 65, "fixNodeStartChar": 2610, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4281cc1c5d3aa51b56db9d9e251c761c52a855e3", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/IntSet.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/IntSet.java b/gdx/src/com/badlogic/gdx/utils/IntSet.java\nindex eddbafd..39afed5 100644\n--- a/gdx/src/com/badlogic/gdx/utils/IntSet.java\n+++ b/gdx/src/com/badlogic/gdx/utils/IntSet.java\n@@ -62,7 +62,7 @@\n \t * before growing the backing table. */\n \tpublic IntSet (int initialCapacity, float loadFactor) {\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\n \n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\n", "projectName": "libgdx.libgdx", "bugLineNum": 65, "bugNodeStartChar": 2610, "bugNodeLength": 18, "fixLineNum": 65, "fixNodeStartChar": 2610, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "4281cc1c5d3aa51b56db9d9e251c761c52a855e3", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/LongMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/LongMap.java b/gdx/src/com/badlogic/gdx/utils/LongMap.java\nindex 1f2f756..f5373e2 100644\n--- a/gdx/src/com/badlogic/gdx/utils/LongMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/LongMap.java\n@@ -67,7 +67,7 @@\n \t * before growing the backing table. */\r\n \tpublic LongMap (int initialCapacity, float loadFactor) {\r\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\r\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\r\n \r\n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 70, "bugNodeStartChar": 2833, "bugNodeLength": 18, "fixLineNum": 70, "fixNodeStartChar": 2764, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4281cc1c5d3aa51b56db9d9e251c761c52a855e3", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/LongMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/LongMap.java b/gdx/src/com/badlogic/gdx/utils/LongMap.java\nindex 1f2f756..f5373e2 100644\n--- a/gdx/src/com/badlogic/gdx/utils/LongMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/LongMap.java\n@@ -67,7 +67,7 @@\n \t * before growing the backing table. */\r\n \tpublic LongMap (int initialCapacity, float loadFactor) {\r\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\r\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\r\n \r\n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 70, "bugNodeStartChar": 2833, "bugNodeLength": 18, "fixLineNum": 70, "fixNodeStartChar": 2764, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "4281cc1c5d3aa51b56db9d9e251c761c52a855e3", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java b/gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java\nindex 521dc0c..c880f35 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java\n@@ -64,7 +64,7 @@\n \t * before growing the backing table. */\n \tpublic ObjectFloatMap (int initialCapacity, float loadFactor) {\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\n \n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\n", "projectName": "libgdx.libgdx", "bugLineNum": 67, "bugNodeStartChar": 2729, "bugNodeLength": 18, "fixLineNum": 67, "fixNodeStartChar": 2729, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4281cc1c5d3aa51b56db9d9e251c761c52a855e3", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java b/gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java\nindex 521dc0c..c880f35 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java\n@@ -64,7 +64,7 @@\n \t * before growing the backing table. */\n \tpublic ObjectFloatMap (int initialCapacity, float loadFactor) {\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\n \n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\n", "projectName": "libgdx.libgdx", "bugLineNum": 67, "bugNodeStartChar": 2729, "bugNodeLength": 18, "fixLineNum": 67, "fixNodeStartChar": 2729, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "4281cc1c5d3aa51b56db9d9e251c761c52a855e3", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java b/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java\nindex 0fe6084..9e822aa 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java\n@@ -64,7 +64,7 @@\n \t * before growing the backing table. */\r\n \tpublic ObjectIntMap (int initialCapacity, float loadFactor) {\r\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\r\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\r\n \r\n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 67, "bugNodeStartChar": 2783, "bugNodeLength": 18, "fixLineNum": 67, "fixNodeStartChar": 2717, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4281cc1c5d3aa51b56db9d9e251c761c52a855e3", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java b/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java\nindex 0fe6084..9e822aa 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java\n@@ -64,7 +64,7 @@\n \t * before growing the backing table. */\r\n \tpublic ObjectIntMap (int initialCapacity, float loadFactor) {\r\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\r\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\r\n \r\n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 67, "bugNodeStartChar": 2783, "bugNodeLength": 18, "fixLineNum": 67, "fixNodeStartChar": 2717, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "4281cc1c5d3aa51b56db9d9e251c761c52a855e3", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ObjectMap.java b/gdx/src/com/badlogic/gdx/utils/ObjectMap.java\nindex 09757d1..d03ff84 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ObjectMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ObjectMap.java\n@@ -64,7 +64,7 @@\n \t * before growing the backing table. */\r\n \tpublic ObjectMap (int initialCapacity, float loadFactor) {\r\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\r\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\r\n \r\n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 67, "bugNodeStartChar": 2771, "bugNodeLength": 18, "fixLineNum": 67, "fixNodeStartChar": 2705, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4281cc1c5d3aa51b56db9d9e251c761c52a855e3", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ObjectMap.java b/gdx/src/com/badlogic/gdx/utils/ObjectMap.java\nindex 09757d1..d03ff84 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ObjectMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ObjectMap.java\n@@ -64,7 +64,7 @@\n \t * before growing the backing table. */\r\n \tpublic ObjectMap (int initialCapacity, float loadFactor) {\r\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\r\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\r\n \r\n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 67, "bugNodeStartChar": 2771, "bugNodeLength": 18, "fixLineNum": 67, "fixNodeStartChar": 2705, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "4281cc1c5d3aa51b56db9d9e251c761c52a855e3", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ObjectSet.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ObjectSet.java b/gdx/src/com/badlogic/gdx/utils/ObjectSet.java\nindex 126fda7..565058a 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ObjectSet.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ObjectSet.java\n@@ -61,7 +61,7 @@\n \t * before growing the backing table. */\n \tpublic ObjectSet (int initialCapacity, float loadFactor) {\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\n \n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\n", "projectName": "libgdx.libgdx", "bugLineNum": 64, "bugNodeStartChar": 2644, "bugNodeLength": 18, "fixLineNum": 64, "fixNodeStartChar": 2644, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4281cc1c5d3aa51b56db9d9e251c761c52a855e3", "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ObjectSet.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ObjectSet.java b/gdx/src/com/badlogic/gdx/utils/ObjectSet.java\nindex 126fda7..565058a 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ObjectSet.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ObjectSet.java\n@@ -61,7 +61,7 @@\n \t * before growing the backing table. */\n \tpublic ObjectSet (int initialCapacity, float loadFactor) {\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\n \n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\n", "projectName": "libgdx.libgdx", "bugLineNum": 64, "bugNodeStartChar": 2644, "bugNodeLength": 18, "fixLineNum": 64, "fixNodeStartChar": 2644, "fixNodeLength": 25, "sourceBeforeFix": "capacity > 1 << 30", "sourceAfterFix": "initialCapacity > 1 << 30"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "3065ef5006b71e1369756b451da4c0746ab20b8c", "fixCommitParentSHA1": "a07c6f3f491760498f15e0ff0b9350eb3be06928", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/Mesh.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/Mesh.java b/gdx/src/com/badlogic/gdx/graphics/Mesh.java\nindex dff092b..f49d299 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/Mesh.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/Mesh.java\n@@ -281,7 +281,7 @@\n \t\t\tif (transformations != null)\r\n \t\t\t\ttransform(transformations[i], vertices, vertexSize, offset, numComponents, voffset / vertexSize, vsize / vertexSize);\r\n \t\t\tmesh.getIndices(indices, ioffset);\r\n-\t\t\tfor (int j = 0; j < isize; i++)\r\n+\t\t\tfor (int j = 0; j < isize; j++)\r\n \t\t\t\tindices[ioffset+j] = (short)(indices[ioffset+j] + voffset);\r\n \t\t\tvoffset += vsize;\r\n \t\t\tioffset += isize;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 284, "bugNodeStartChar": 13608, "bugNodeLength": 3, "fixLineNum": 284, "fixNodeStartChar": 13325, "fixNodeLength": 3, "sourceBeforeFix": "i++", "sourceAfterFix": "j++"}, {"bugType": "SWAP_BOOLEAN_LITERAL", "fixCommitSHA1": "a756acefb8a186c8bb2d8d4d899e2d18e1bfd576", "fixCommitParentSHA1": "738a29d1ade6addddd318d8aa8918cc6b163417a", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java\nindex 99115bf..043ce6e 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java\n@@ -80,7 +80,7 @@\n \r\n \t\taddListener(new InputListener() {\r\n \t\t\tpublic boolean touchDown (InputEvent event, float x, float y, int pointer, int button) {\r\n-\t\t\t\tif (disabled) return true;\r\n+\t\t\t\tif (disabled) return false;\r\n \t\t\t\tif (draggingPointer != -1) return false;\r\n \t\t\t\tdraggingPointer = pointer;\r\n \t\t\t\tcalculatePositionAndValue(x, y);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 83, "bugNodeStartChar": 4047, "bugNodeLength": 12, "fixLineNum": 83, "fixNodeStartChar": 3965, "fixNodeLength": 13, "sourceBeforeFix": "return true; ", "sourceAfterFix": "return false; "}, {"bugType": "OVERLOAD_METHOD_DELETED_ARGS", "fixCommitSHA1": "96b731c4af632c41e1c1954e2008dddf27240fc1", "fixCommitParentSHA1": "60277c4ad399c26a0a820e08915f7283b5b120b2", "bugFilePath": "extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/MaxRectsPacker.java", "fixPatch": "diff --git a/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/MaxRectsPacker.java b/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/MaxRectsPacker.java\nindex fb6d59f..bcd48cf 100644\n--- a/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/MaxRectsPacker.java\n+++ b/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/MaxRectsPacker.java\n@@ -52,20 +52,20 @@\n \t\tif (settings.fast) {\r\n \t\t\tif (settings.rotation) {\r\n \t\t\t\t// Sort by longest side if rotation is enabled.\r\n-\t\t\t\tsort.sort(inputRects.items, new Comparator<Rect>() {\r\n+\t\t\t\tsort.sort(inputRects, new Comparator<Rect>() {\r\n \t\t\t\t\tpublic int compare (Rect o1, Rect o2) {\r\n \t\t\t\t\t\tint n1 = o1.width > o1.height ? o1.width : o1.height;\r\n \t\t\t\t\t\tint n2 = o2.width > o2.height ? o2.width : o2.height;\r\n \t\t\t\t\t\treturn n2 - n1;\r\n \t\t\t\t\t}\r\n-\t\t\t\t}, 0, inputRects.size);\r\n+\t\t\t\t});\r\n \t\t\t} else {\r\n \t\t\t\t// Sort only by width (largest to smallest) if rotation is disabled.\r\n-\t\t\t\tsort.sort(inputRects.items, new Comparator<Rect>() {\r\n+\t\t\t\tsort.sort(inputRects, new Comparator<Rect>() {\r\n \t\t\t\t\tpublic int compare (Rect o1, Rect o2) {\r\n \t\t\t\t\t\treturn o2.width - o1.width;\r\n \t\t\t\t\t}\r\n-\t\t\t\t}, 0, inputRects.size);\r\n+\t\t\t\t});\r\n \t\t\t}\r\n \t\t}\r\n \r\n@@ -136,7 +136,7 @@\n \t\tif (bestResult == null)\r\n \t\t\tbestResult = packAtSize(false, settings.maxWidth - edgePaddingX, settings.maxHeight - edgePaddingY, inputRects);\r\n \r\n-\t\tbestResult.outputRects.sort(rectComparator);\r\n+\t\tsort.sort(bestResult.outputRects, rectComparator);\r\n \r\n \t\treturn bestResult;\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 55, "bugNodeStartChar": 2324, "bugNodeLength": 279, "fixLineNum": 55, "fixNodeStartChar": 2270, "fixNodeLength": 253, "sourceBeforeFix": "sort.sort(inputRects.items,new Comparator<Rect>(){   public int compare(  Rect o1,  Rect o2){     int n1=o1.width > o1.height ? o1.width : o1.height;     int n2=o2.width > o2.height ? o2.width : o2.height;     return n2 - n1;   } } ,0,inputRects.size)", "sourceAfterFix": "sort.sort(inputRects.items,new Comparator<Rect>(){   public int compare(  Rect o1,  Rect o2){     int n1=o1.width > o1.height ? o1.width : o1.height;     int n2=o2.width > o2.height ? o2.width : o2.height;     return n2 - n1;   } } )"}, {"bugType": "OVERLOAD_METHOD_DELETED_ARGS", "fixCommitSHA1": "96b731c4af632c41e1c1954e2008dddf27240fc1", "fixCommitParentSHA1": "60277c4ad399c26a0a820e08915f7283b5b120b2", "bugFilePath": "extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/MaxRectsPacker.java", "fixPatch": "diff --git a/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/MaxRectsPacker.java b/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/MaxRectsPacker.java\nindex fb6d59f..bcd48cf 100644\n--- a/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/MaxRectsPacker.java\n+++ b/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/MaxRectsPacker.java\n@@ -52,20 +52,20 @@\n \t\tif (settings.fast) {\r\n \t\t\tif (settings.rotation) {\r\n \t\t\t\t// Sort by longest side if rotation is enabled.\r\n-\t\t\t\tsort.sort(inputRects.items, new Comparator<Rect>() {\r\n+\t\t\t\tsort.sort(inputRects, new Comparator<Rect>() {\r\n \t\t\t\t\tpublic int compare (Rect o1, Rect o2) {\r\n \t\t\t\t\t\tint n1 = o1.width > o1.height ? o1.width : o1.height;\r\n \t\t\t\t\t\tint n2 = o2.width > o2.height ? o2.width : o2.height;\r\n \t\t\t\t\t\treturn n2 - n1;\r\n \t\t\t\t\t}\r\n-\t\t\t\t}, 0, inputRects.size);\r\n+\t\t\t\t});\r\n \t\t\t} else {\r\n \t\t\t\t// Sort only by width (largest to smallest) if rotation is disabled.\r\n-\t\t\t\tsort.sort(inputRects.items, new Comparator<Rect>() {\r\n+\t\t\t\tsort.sort(inputRects, new Comparator<Rect>() {\r\n \t\t\t\t\tpublic int compare (Rect o1, Rect o2) {\r\n \t\t\t\t\t\treturn o2.width - o1.width;\r\n \t\t\t\t\t}\r\n-\t\t\t\t}, 0, inputRects.size);\r\n+\t\t\t\t});\r\n \t\t\t}\r\n \t\t}\r\n \r\n@@ -136,7 +136,7 @@\n \t\tif (bestResult == null)\r\n \t\t\tbestResult = packAtSize(false, settings.maxWidth - edgePaddingX, settings.maxHeight - edgePaddingY, inputRects);\r\n \r\n-\t\tbestResult.outputRects.sort(rectComparator);\r\n+\t\tsort.sort(bestResult.outputRects, rectComparator);\r\n \r\n \t\treturn bestResult;\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 64, "bugNodeStartChar": 2697, "bugNodeLength": 169, "fixLineNum": 64, "fixNodeStartChar": 2634, "fixNodeLength": 145, "sourceBeforeFix": "sort.sort(inputRects.items,new Comparator<Rect>(){   public int compare(  Rect o1,  Rect o2){     return o2.width - o1.width;   } } ,0,inputRects.size)", "sourceAfterFix": "sort.sort(inputRects.items,new Comparator<Rect>(){   public int compare(  Rect o1,  Rect o2){     return o2.width - o1.width;   } } )"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "ba91960ef4f56fe20a68f04375b023486e79a416", "fixCommitParentSHA1": "bce343fd7548221e956f73eefc4baf869bc8ea2a", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ArrayMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ArrayMap.java b/gdx/src/com/badlogic/gdx/utils/ArrayMap.java\nindex f460df5..b95e415 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ArrayMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ArrayMap.java\n@@ -136,12 +136,12 @@\n \tpublic K getKey (V value, boolean identity) {\r\n \t\tObject[] values = this.values;\r\n \t\tint i = size - 1;\r\n-\t\tif (identity || values == null) {\r\n+\t\tif (identity || value == null) {\r\n \t\t\tfor (; i >= 0; i--)\r\n-\t\t\t\tif (values[i] == values) return keys[i];\r\n+\t\t\t\tif (values[i] == value) return keys[i];\r\n \t\t} else {\r\n \t\t\tfor (; i >= 0; i--)\r\n-\t\t\t\tif (values.equals(values[i])) return keys[i];\r\n+\t\t\t\tif (value.equals(values[i])) return keys[i];\r\n \t\t}\r\n \t\treturn null;\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 139, "bugNodeStartChar": 5905, "bugNodeLength": 14, "fixLineNum": 139, "fixNodeStartChar": 5767, "fixNodeLength": 13, "sourceBeforeFix": "values == null", "sourceAfterFix": "value == null"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "ba91960ef4f56fe20a68f04375b023486e79a416", "fixCommitParentSHA1": "bce343fd7548221e956f73eefc4baf869bc8ea2a", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ArrayMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ArrayMap.java b/gdx/src/com/badlogic/gdx/utils/ArrayMap.java\nindex f460df5..b95e415 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ArrayMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ArrayMap.java\n@@ -136,12 +136,12 @@\n \tpublic K getKey (V value, boolean identity) {\r\n \t\tObject[] values = this.values;\r\n \t\tint i = size - 1;\r\n-\t\tif (identity || values == null) {\r\n+\t\tif (identity || value == null) {\r\n \t\t\tfor (; i >= 0; i--)\r\n-\t\t\t\tif (values[i] == values) return keys[i];\r\n+\t\t\t\tif (values[i] == value) return keys[i];\r\n \t\t} else {\r\n \t\t\tfor (; i >= 0; i--)\r\n-\t\t\t\tif (values.equals(values[i])) return keys[i];\r\n+\t\t\t\tif (value.equals(values[i])) return keys[i];\r\n \t\t}\r\n \t\treturn null;\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 139, "bugNodeStartChar": 5905, "bugNodeLength": 14, "fixLineNum": 139, "fixNodeStartChar": 5767, "fixNodeLength": 13, "sourceBeforeFix": "values == null", "sourceAfterFix": "value == null"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "ba91960ef4f56fe20a68f04375b023486e79a416", "fixCommitParentSHA1": "bce343fd7548221e956f73eefc4baf869bc8ea2a", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ArrayMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ArrayMap.java b/gdx/src/com/badlogic/gdx/utils/ArrayMap.java\nindex f460df5..b95e415 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ArrayMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ArrayMap.java\n@@ -136,12 +136,12 @@\n \tpublic K getKey (V value, boolean identity) {\r\n \t\tObject[] values = this.values;\r\n \t\tint i = size - 1;\r\n-\t\tif (identity || values == null) {\r\n+\t\tif (identity || value == null) {\r\n \t\t\tfor (; i >= 0; i--)\r\n-\t\t\t\tif (values[i] == values) return keys[i];\r\n+\t\t\t\tif (values[i] == value) return keys[i];\r\n \t\t} else {\r\n \t\t\tfor (; i >= 0; i--)\r\n-\t\t\t\tif (values.equals(values[i])) return keys[i];\r\n+\t\t\t\tif (value.equals(values[i])) return keys[i];\r\n \t\t}\r\n \t\treturn null;\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 141, "bugNodeStartChar": 5956, "bugNodeLength": 19, "fixLineNum": 141, "fixNodeStartChar": 5816, "fixNodeLength": 18, "sourceBeforeFix": "values[i] == values", "sourceAfterFix": "values[i] == value"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "ba91960ef4f56fe20a68f04375b023486e79a416", "fixCommitParentSHA1": "bce343fd7548221e956f73eefc4baf869bc8ea2a", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ArrayMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ArrayMap.java b/gdx/src/com/badlogic/gdx/utils/ArrayMap.java\nindex f460df5..b95e415 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ArrayMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ArrayMap.java\n@@ -136,12 +136,12 @@\n \tpublic K getKey (V value, boolean identity) {\r\n \t\tObject[] values = this.values;\r\n \t\tint i = size - 1;\r\n-\t\tif (identity || values == null) {\r\n+\t\tif (identity || value == null) {\r\n \t\t\tfor (; i >= 0; i--)\r\n-\t\t\t\tif (values[i] == values) return keys[i];\r\n+\t\t\t\tif (values[i] == value) return keys[i];\r\n \t\t} else {\r\n \t\t\tfor (; i >= 0; i--)\r\n-\t\t\t\tif (values.equals(values[i])) return keys[i];\r\n+\t\t\t\tif (value.equals(values[i])) return keys[i];\r\n \t\t}\r\n \t\treturn null;\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 141, "bugNodeStartChar": 5956, "bugNodeLength": 19, "fixLineNum": 141, "fixNodeStartChar": 5816, "fixNodeLength": 18, "sourceBeforeFix": "values[i] == values", "sourceAfterFix": "values[i] == value"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "ba91960ef4f56fe20a68f04375b023486e79a416", "fixCommitParentSHA1": "bce343fd7548221e956f73eefc4baf869bc8ea2a", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ArrayMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ArrayMap.java b/gdx/src/com/badlogic/gdx/utils/ArrayMap.java\nindex f460df5..b95e415 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ArrayMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ArrayMap.java\n@@ -136,12 +136,12 @@\n \tpublic K getKey (V value, boolean identity) {\r\n \t\tObject[] values = this.values;\r\n \t\tint i = size - 1;\r\n-\t\tif (identity || values == null) {\r\n+\t\tif (identity || value == null) {\r\n \t\t\tfor (; i >= 0; i--)\r\n-\t\t\t\tif (values[i] == values) return keys[i];\r\n+\t\t\t\tif (values[i] == value) return keys[i];\r\n \t\t} else {\r\n \t\t\tfor (; i >= 0; i--)\r\n-\t\t\t\tif (values.equals(values[i])) return keys[i];\r\n+\t\t\t\tif (value.equals(values[i])) return keys[i];\r\n \t\t}\r\n \t\treturn null;\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 144, "bugNodeStartChar": 6038, "bugNodeLength": 24, "fixLineNum": 144, "fixNodeStartChar": 5895, "fixNodeLength": 23, "sourceBeforeFix": "values.equals(values[i])", "sourceAfterFix": "value.equals(values[i])"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "ba91960ef4f56fe20a68f04375b023486e79a416", "fixCommitParentSHA1": "bce343fd7548221e956f73eefc4baf869bc8ea2a", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ArrayMap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ArrayMap.java b/gdx/src/com/badlogic/gdx/utils/ArrayMap.java\nindex f460df5..b95e415 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ArrayMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ArrayMap.java\n@@ -136,12 +136,12 @@\n \tpublic K getKey (V value, boolean identity) {\r\n \t\tObject[] values = this.values;\r\n \t\tint i = size - 1;\r\n-\t\tif (identity || values == null) {\r\n+\t\tif (identity || value == null) {\r\n \t\t\tfor (; i >= 0; i--)\r\n-\t\t\t\tif (values[i] == values) return keys[i];\r\n+\t\t\t\tif (values[i] == value) return keys[i];\r\n \t\t} else {\r\n \t\t\tfor (; i >= 0; i--)\r\n-\t\t\t\tif (values.equals(values[i])) return keys[i];\r\n+\t\t\t\tif (value.equals(values[i])) return keys[i];\r\n \t\t}\r\n \t\treturn null;\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 144, "bugNodeStartChar": 6038, "bugNodeLength": 24, "fixLineNum": 144, "fixNodeStartChar": 5895, "fixNodeLength": 23, "sourceBeforeFix": "values.equals(values[i])", "sourceAfterFix": "value.equals(values[i])"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "de8de61a368f5c10eaff3a84a1ca3064a5cfbda3", "fixCommitParentSHA1": "7e622cc80c70c726408f1c24447f432b38993c5d", "bugFilePath": "backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java\nindex fc81fec..f83b707 100644\n--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java\n@@ -307,7 +307,7 @@\n \t\tIntBuffer typeTmp = BufferUtils.createIntBuffer(2);\r\n \t\tString name = GL20.glGetActiveUniform(program, index, 256, typeTmp);\r\n \t\tsize.put(typeTmp.get(0));\r\n-\t\tif (type instanceof IntBuffer) ((IntBuffer)type).put(typeTmp.get(0));\r\n+\t\tif (type instanceof IntBuffer) ((IntBuffer)type).put(typeTmp.get(1));\r\n \t\treturn name;\r\n \t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 310, "bugNodeStartChar": 10492, "bugNodeLength": 14, "fixLineNum": 310, "fixNodeStartChar": 10183, "fixNodeLength": 14, "sourceBeforeFix": "typeTmp.get(0)", "sourceAfterFix": "typeTmp.get(1)"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "f0e67a1474fab9528737cc703fde6c35fdd5e288", "fixCommitParentSHA1": "0cb1fa427da187297481bfc2fdc4ee59f7512494", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/Bits.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/Bits.java b/gdx/src/com/badlogic/gdx/utils/Bits.java\nindex a15bfc4..2f53487 100755\n--- a/gdx/src/com/badlogic/gdx/utils/Bits.java\n+++ b/gdx/src/com/badlogic/gdx/utils/Bits.java\n@@ -39,7 +39,7 @@\n \t}\r\n \t\r\n \tprivate void checkCapacity(int len) {\r\n-\t\tif(len> bits.length) {\r\n+\t\tif(len>=bits.length) {\r\n \t\t\tlong[] newBits = new long[len+1];\r\n \t\t\tSystem.arraycopy(bits, 0, newBits, 0, bits.length);\r\n \t\t\tbits = newBits;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 42, "bugNodeStartChar": 1038, "bugNodeLength": 16, "fixLineNum": 42, "fixNodeStartChar": 997, "fixNodeLength": 16, "sourceBeforeFix": "len > bits.length", "sourceAfterFix": "len >= bits.length"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "c66c2895bb0f64140fb87b9f366e7063bf2bf3ca", "fixCommitParentSHA1": "829e9a68a4bfb461a78e0e61291e832235da16aa", "bugFilePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BasicBulletTest.java", "fixPatch": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BasicBulletTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BasicBulletTest.java\nindex 4fa7af1..e60fa86 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BasicBulletTest.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BasicBulletTest.java\n@@ -114,7 +114,7 @@\n \t\t\tUsage.Position | Usage.Normal);\n \t\tmodels.add(sphereModel);\n \t\t// Load the bullet library\n-\t\tBullet.init();\n+\t\tBaseBulletTest.init(); // Normally use: Bullet.init();\n \t\t// Create the bullet world\n \t\tcollisionConfiguration = new btDefaultCollisionConfiguration();\n \t\tdispatcher = new btCollisionDispatcher(collisionConfiguration);\n", "projectName": "libgdx.libgdx", "bugLineNum": 117, "bugNodeStartChar": 5251, "bugNodeLength": 13, "fixLineNum": 117, "fixNodeStartChar": 5251, "fixNodeLength": 21, "sourceBeforeFix": "Bullet.init()", "sourceAfterFix": "BaseBulletTest.init()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "c66c2895bb0f64140fb87b9f366e7063bf2bf3ca", "fixCommitParentSHA1": "829e9a68a4bfb461a78e0e61291e832235da16aa", "bugFilePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BasicBulletTest.java", "fixPatch": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BasicBulletTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BasicBulletTest.java\nindex 4fa7af1..e60fa86 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BasicBulletTest.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BasicBulletTest.java\n@@ -114,7 +114,7 @@\n \t\t\tUsage.Position | Usage.Normal);\n \t\tmodels.add(sphereModel);\n \t\t// Load the bullet library\n-\t\tBullet.init();\n+\t\tBaseBulletTest.init(); // Normally use: Bullet.init();\n \t\t// Create the bullet world\n \t\tcollisionConfiguration = new btDefaultCollisionConfiguration();\n \t\tdispatcher = new btCollisionDispatcher(collisionConfiguration);\n", "projectName": "libgdx.libgdx", "bugLineNum": 117, "bugNodeStartChar": 5251, "bugNodeLength": 13, "fixLineNum": 117, "fixNodeStartChar": 5251, "fixNodeLength": 21, "sourceBeforeFix": "Bullet.init()", "sourceAfterFix": "BaseBulletTest.init()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "883dccf1192ac9ea58f8b30255251979cb03e675", "fixCommitParentSHA1": "d412caffa4935831fecc98fa5f718bdd5be599d2", "bugFilePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/ObjTest.java", "fixPatch": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/ObjTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/ObjTest.java\nindex e138460..d5bc590 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/ObjTest.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/ObjTest.java\n@@ -47,7 +47,7 @@\n \t\tmodel =  objLoader.loadModel(Gdx.files.internal(\"data/cube.obj\"));\r\n \t\t\r\n \t\tBoundingBox bbox = new BoundingBox();\r\n-\t\tmodel.getBoundingBox(bbox);\r\n+\t\tmodel.calculateBoundingBox(bbox);\r\n \t\t\r\n \t\tGdx.app.log(\"ObjTest\", \"obj bounds: \" + bbox);\r\n \t\ttexture = new Texture(Gdx.files.internal(\"data/badlogic.jpg\"), true);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 50, "bugNodeStartChar": 1883, "bugNodeLength": 26, "fixLineNum": 50, "fixNodeStartChar": 1834, "fixNodeLength": 32, "sourceBeforeFix": "model.getBoundingBox(bbox)", "sourceAfterFix": "model.calculateBoundingBox(bbox)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "883dccf1192ac9ea58f8b30255251979cb03e675", "fixCommitParentSHA1": "d412caffa4935831fecc98fa5f718bdd5be599d2", "bugFilePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/ObjTest.java", "fixPatch": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/ObjTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/ObjTest.java\nindex e138460..d5bc590 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/ObjTest.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/ObjTest.java\n@@ -47,7 +47,7 @@\n \t\tmodel =  objLoader.loadModel(Gdx.files.internal(\"data/cube.obj\"));\r\n \t\t\r\n \t\tBoundingBox bbox = new BoundingBox();\r\n-\t\tmodel.getBoundingBox(bbox);\r\n+\t\tmodel.calculateBoundingBox(bbox);\r\n \t\t\r\n \t\tGdx.app.log(\"ObjTest\", \"obj bounds: \" + bbox);\r\n \t\ttexture = new Texture(Gdx.files.internal(\"data/badlogic.jpg\"), true);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 50, "bugNodeStartChar": 1883, "bugNodeLength": 26, "fixLineNum": 50, "fixNodeStartChar": 1834, "fixNodeLength": 32, "sourceBeforeFix": "model.getBoundingBox(bbox)", "sourceAfterFix": "model.calculateBoundingBox(bbox)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "bb75dc34febfaebaee17da842105d4bb3274f863", "fixCommitParentSHA1": "7f549cb18b619e34a23df58cdbc235fe0a23fd10", "bugFilePath": "demos/cuboc/cuboc/src/com/badlogic/cubocy/MapRenderer.java", "fixPatch": "diff --git a/demos/cuboc/cuboc/src/com/badlogic/cubocy/MapRenderer.java b/demos/cuboc/cuboc/src/com/badlogic/cubocy/MapRenderer.java\nindex f497244..e43c953 100644\n--- a/demos/cuboc/cuboc/src/com/badlogic/cubocy/MapRenderer.java\n+++ b/demos/cuboc/cuboc/src/com/badlogic/cubocy/MapRenderer.java\n@@ -17,7 +17,7 @@\n \tMap map;\r\n \tOrthographicCamera cam;\r\n \tSpriteCache cache;\r\n-\tSpriteBatch batch = new SpriteBatch(10000);\r\n+\tSpriteBatch batch = new SpriteBatch(5460);\r\n \tImmediateModeRenderer20 renderer = new ImmediateModeRenderer20(false, true, 0);\r\n \tint[][] blocks;\r\n \tTextureRegion tile;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 20, "bugNodeStartChar": 665, "bugNodeLength": 22, "fixLineNum": 20, "fixNodeStartChar": 646, "fixNodeLength": 21, "sourceBeforeFix": "new SpriteBatch(10000)", "sourceAfterFix": "new SpriteBatch(5460)"}, {"bugType": "SWAP_BOOLEAN_LITERAL", "fixCommitSHA1": "98877e768178e17c258a04a2a02e727d1217f580", "fixCommitParentSHA1": "e83fcbd2c80634b05767d87d82338eed3b6573ff", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/Json.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/Json.java b/gdx/src/com/badlogic/gdx/utils/Json.java\nindex c82366c..67c6273 100644\n--- a/gdx/src/com/badlogic/gdx/utils/Json.java\n+++ b/gdx/src/com/badlogic/gdx/utils/Json.java\n@@ -43,7 +43,7 @@\n  * https://code.google.com/p/libgdx/wiki/JsonParsing\r\n  * @author Nathan Sweet */\r\n public class Json {\r\n-\tprivate static final boolean debug = false;\r\n+\tprivate static final boolean debug = true;\r\n \r\n \tprivate JsonWriter writer;\r\n \tprivate String typeName = \"class\";\r\n@@ -428,7 +428,7 @@\n \t\t\t}\r\n \r\n \t\t\tif (value instanceof Array) {\r\n-\t\t\t\tif (knownType != null && actualType != knownType)\r\n+\t\t\t\tif (knownType != null && actualType != knownType && actualType != Array.class)\r\n \t\t\t\t\tthrow new SerializationException(\"Serialization of an Array other than the known type is not supported.\\n\"\r\n \t\t\t\t\t\t+ \"Known type: \" + knownType + \"\\nActual type: \" + actualType);\r\n \t\t\t\twriteArrayStart();\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 46, "bugNodeStartChar": 1755, "bugNodeLength": 13, "fixLineNum": 46, "fixNodeStartChar": 1710, "fixNodeLength": 12, "sourceBeforeFix": "debug=false", "sourceAfterFix": "debug=true"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "f9fa3ea530d5743d26a3879e79ab67676e2a476b", "fixCommitParentSHA1": "80e6930bc330c3a0a41ccb0f8b9a488cd2ec17df", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g3d/loader/ObjLoader.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/loader/ObjLoader.java b/gdx/src/com/badlogic/gdx/graphics/g3d/loader/ObjLoader.java\nindex a6f2e3f..3fed957 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g3d/loader/ObjLoader.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/loader/ObjLoader.java\n@@ -84,7 +84,7 @@\n \t * \n \t * @param file the FileHandle */\n \tpublic Model loadObj (FileHandle file) {\n-\t\treturn loadObj(file, false);\n+\t\treturn loadModel(file);\n \t}\n \n \t/** @deprecated Use {@link ObjLoader#loadModel(FileHandle, boolean)} instead.<p>\n@@ -94,7 +94,7 @@\n \t * @param flipV whether to flip the v texture coordinate (Blender, Wings3D, et al) \n \t * */\n \tpublic Model loadObj (FileHandle file, boolean flipV) {\n-\t\treturn new Model(loadModelData(file, flipV));\n+\t\treturn loadModel(file, flipV);\n \t}\n \t\n \t/** Directly load the model on the calling thread. The model with not be managed by an {@link AssetManager}. */\n", "projectName": "libgdx.libgdx", "bugLineNum": 87, "bugNodeStartChar": 3446, "bugNodeLength": 20, "fixLineNum": 87, "fixNodeStartChar": 3446, "fixNodeLength": 15, "sourceBeforeFix": "loadObj(file,false)", "sourceAfterFix": "loadModel(file)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "f4df2bef2344745c127e9be9fc6610282a01e5bd", "fixCommitParentSHA1": "1a916ee9b50e7e9261eb95ab36df7ec5a2595a78", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java b/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java\nindex add3386..ab4ed7f 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java\n@@ -114,7 +114,7 @@\n \t\t\t\tJsonValue indices = meshPart.require(\"indices\");\n \t\t\t\tshort[] partIndices = new short[indices.size()];\n \t\t\t\tint k = 0;\n-\t\t\t\tfor (JsonValue value = indices.child(); value != null; value = value.next(), j++) {\n+\t\t\t\tfor (JsonValue value = indices.child(); value != null; value = value.next(), k++) {\n \t\t\t\t\tpartIndices[k] = (short)indices.getInt(k);\n \t\t\t\t}\n \t\t\t\tjsonPart.indices = partIndices;\n", "projectName": "libgdx.libgdx", "bugLineNum": 117, "bugNodeStartChar": 4450, "bugNodeLength": 3, "fixLineNum": 117, "fixNodeStartChar": 4450, "fixNodeLength": 3, "sourceBeforeFix": "j++", "sourceAfterFix": "k++"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "6b7e05a672ddf95bd7ee066e878ab90389f5b02c", "fixCommitParentSHA1": "40f49c0ae5059fa78f75df6c93d32ed10632170a", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java\nindex 89ef0ac..5306b51 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java\n@@ -292,7 +292,7 @@\n \t\tif (currentLocalTransform != renderable.localTransform)\n \t\t\tset(u_localTrans, (currentLocalTransform = renderable.localTransform) == null ? idtMatrix : renderable.localTransform);\n \t\tif (currentModelTransform != renderable.modelTransform)\n-\t\t\tset(u_modelTrans, (currentWorldTransform = renderable.modelTransform) == null ? idtMatrix : renderable.modelTransform);\n+\t\t\tset(u_modelTrans, (currentModelTransform = renderable.modelTransform) == null ? idtMatrix : renderable.modelTransform);\n \t\tif (currentLocalTransform == null && currentModelTransform == null)\n \t\t\tsetWorldTransform(idtMatrix, false);\n \t\telse if (currentLocalTransform == null)\n", "projectName": "libgdx.libgdx", "bugLineNum": 295, "bugNodeStartChar": 13829, "bugNodeLength": 49, "fixLineNum": 295, "fixNodeStartChar": 13829, "fixNodeLength": 49, "sourceBeforeFix": "currentWorldTransform=renderable.modelTransform", "sourceAfterFix": "currentModelTransform=renderable.modelTransform"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d3df587543605323d2a3432e896ea49a81bc8306", "fixCommitParentSHA1": "269c3e6c64739fbb1e32773d24dca0f7f9258446", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java\nindex 89ef0ac..5306b51 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java\n@@ -292,7 +292,7 @@\n \t\tif (currentLocalTransform != renderable.localTransform)\n \t\t\tset(u_localTrans, (currentLocalTransform = renderable.localTransform) == null ? idtMatrix : renderable.localTransform);\n \t\tif (currentModelTransform != renderable.modelTransform)\n-\t\t\tset(u_modelTrans, (currentWorldTransform = renderable.modelTransform) == null ? idtMatrix : renderable.modelTransform);\n+\t\t\tset(u_modelTrans, (currentModelTransform = renderable.modelTransform) == null ? idtMatrix : renderable.modelTransform);\n \t\tif (currentLocalTransform == null && currentModelTransform == null)\n \t\t\tsetWorldTransform(idtMatrix, false);\n \t\telse if (currentLocalTransform == null)\n", "projectName": "libgdx.libgdx", "bugLineNum": 295, "bugNodeStartChar": 13829, "bugNodeLength": 49, "fixLineNum": 295, "fixNodeStartChar": 13829, "fixNodeLength": 49, "sourceBeforeFix": "currentWorldTransform=renderable.modelTransform", "sourceAfterFix": "currentModelTransform=renderable.modelTransform"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "c0daacd3e40a9c8adebf9e03512f325cdc188a6a", "fixCommitParentSHA1": "796b3fb4fa3e9df519ed1419ed917cf7a41bd701", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g3d/loader/JsonModelLoader.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/loader/JsonModelLoader.java b/gdx/src/com/badlogic/gdx/graphics/g3d/loader/JsonModelLoader.java\nindex 9b4dc18..3a78fb2 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g3d/loader/JsonModelLoader.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/loader/JsonModelLoader.java\n@@ -170,7 +170,7 @@\n \t\t\t} else if(attr.equals(\"BLENDWEIGHTS\")) {\n \t\t\t\tvertexAttributes.add(VertexAttribute.BoneWeights(4));\n \t\t\t} else if(attr.equals(\"COLOR\")) {\n-\t\t\t\tvertexAttributes.add(VertexAttribute.Color());\n+\t\t\t\tvertexAttributes.add(VertexAttribute.ColorUnpacked());\n \t\t\t} else {\n \t\t\t\tthrow new GdxRuntimeException(\"Unknown vertex attribuet '\" + attr + \"', should be one of position, normal, uv, tangent or binormal\");\n \t\t\t}\n", "projectName": "libgdx.libgdx", "bugLineNum": 173, "bugNodeStartChar": 6340, "bugNodeLength": 23, "fixLineNum": 173, "fixNodeStartChar": 6340, "fixNodeLength": 31, "sourceBeforeFix": "VertexAttribute.Color()", "sourceAfterFix": "VertexAttribute.ColorUnpacked()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "c0daacd3e40a9c8adebf9e03512f325cdc188a6a", "fixCommitParentSHA1": "796b3fb4fa3e9df519ed1419ed917cf7a41bd701", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g3d/loader/JsonModelLoader.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/loader/JsonModelLoader.java b/gdx/src/com/badlogic/gdx/graphics/g3d/loader/JsonModelLoader.java\nindex 9b4dc18..3a78fb2 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g3d/loader/JsonModelLoader.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/loader/JsonModelLoader.java\n@@ -170,7 +170,7 @@\n \t\t\t} else if(attr.equals(\"BLENDWEIGHTS\")) {\n \t\t\t\tvertexAttributes.add(VertexAttribute.BoneWeights(4));\n \t\t\t} else if(attr.equals(\"COLOR\")) {\n-\t\t\t\tvertexAttributes.add(VertexAttribute.Color());\n+\t\t\t\tvertexAttributes.add(VertexAttribute.ColorUnpacked());\n \t\t\t} else {\n \t\t\t\tthrow new GdxRuntimeException(\"Unknown vertex attribuet '\" + attr + \"', should be one of position, normal, uv, tangent or binormal\");\n \t\t\t}\n", "projectName": "libgdx.libgdx", "bugLineNum": 173, "bugNodeStartChar": 6340, "bugNodeLength": 23, "fixLineNum": 173, "fixNodeStartChar": 6340, "fixNodeLength": 31, "sourceBeforeFix": "VertexAttribute.Color()", "sourceAfterFix": "VertexAttribute.ColorUnpacked()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "30024a16affda18949b08699a4d304852e1e1643", "fixCommitParentSHA1": "6dfe33e5a8e1f421084e0610835c98f4b94b2ab4", "bugFilePath": "backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/scenes/scene2d/ui/Skin.java", "fixPatch": "diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/scenes/scene2d/ui/Skin.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/scenes/scene2d/ui/Skin.java\nindex ed1e7de..c0583c1 100644\n--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/scenes/scene2d/ui/Skin.java\n+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/scenes/scene2d/ui/Skin.java\n@@ -393,7 +393,7 @@\n \t\t\t\t\ttry {\r\n \t\t\t\t\t\tadd(valueEntry.name(), object, addType);\r\n \t\t\t\t\t} catch (Exception ex) {\r\n-\t\t\t\t\t\tthrow new SerializationException(\"Error reading \" + type.getSimpleName() + \": \" + valueEntry.name(), ex);\r\n+\t\t\t\t\t\tthrow new SerializationException(\"Error reading \" + type.getName() + \": \" + valueEntry.name(), ex);\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 396, "bugNodeStartChar": 16396, "bugNodeLength": 20, "fixLineNum": 396, "fixNodeStartChar": 16001, "fixNodeLength": 14, "sourceBeforeFix": "type.getSimpleName()", "sourceAfterFix": "type.getName()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "30024a16affda18949b08699a4d304852e1e1643", "fixCommitParentSHA1": "6dfe33e5a8e1f421084e0610835c98f4b94b2ab4", "bugFilePath": "backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/scenes/scene2d/ui/Skin.java", "fixPatch": "diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/scenes/scene2d/ui/Skin.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/scenes/scene2d/ui/Skin.java\nindex ed1e7de..c0583c1 100644\n--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/scenes/scene2d/ui/Skin.java\n+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/scenes/scene2d/ui/Skin.java\n@@ -393,7 +393,7 @@\n \t\t\t\t\ttry {\r\n \t\t\t\t\t\tadd(valueEntry.name(), object, addType);\r\n \t\t\t\t\t} catch (Exception ex) {\r\n-\t\t\t\t\t\tthrow new SerializationException(\"Error reading \" + type.getSimpleName() + \": \" + valueEntry.name(), ex);\r\n+\t\t\t\t\t\tthrow new SerializationException(\"Error reading \" + type.getName() + \": \" + valueEntry.name(), ex);\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 396, "bugNodeStartChar": 16396, "bugNodeLength": 20, "fixLineNum": 396, "fixNodeStartChar": 16001, "fixNodeLength": 14, "sourceBeforeFix": "type.getSimpleName()", "sourceAfterFix": "type.getName()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "8480b29e196d01a0b772edceea1dc31ab14e4988", "fixCommitParentSHA1": "928823e1bebf59cd731f2d827d43b2ec9b990389", "bugFilePath": "backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/utils/Json.java", "fixPatch": "diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/utils/Json.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/utils/Json.java\nindex 51a1cf7..1539fad 100644\n--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/utils/Json.java\n+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/utils/Json.java\n@@ -478,7 +478,7 @@\n \t\t\t}\r\n \r\n \t\t\tif (value instanceof Map) {\r\n-\t\t\t\tif (knownType == null) knownType = ReflectionCache.getType(OrderedMap.class);\r\n+\t\t\t\tif (knownType == null) knownType = ReflectionCache.getType(HashMap.class);\r\n \t\t\t\twriteObjectStart(actualType.getClassOfType(), knownType.getClassOfType());\r\n \t\t\t\tfor (Map.Entry entry : ((Map<?, ?>)value).entrySet()) {\r\n \t\t\t\t\twriter.name(convertToString(entry.getKey()));\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 481, "bugNodeStartChar": 17190, "bugNodeLength": 16, "fixLineNum": 481, "fixNodeStartChar": 16710, "fixNodeLength": 13, "sourceBeforeFix": "OrderedMap.class", "sourceAfterFix": "HashMap.class"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "8480b29e196d01a0b772edceea1dc31ab14e4988", "fixCommitParentSHA1": "928823e1bebf59cd731f2d827d43b2ec9b990389", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/Json.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/Json.java b/gdx/src/com/badlogic/gdx/utils/Json.java\nindex 754643d..c82366c 100644\n--- a/gdx/src/com/badlogic/gdx/utils/Json.java\n+++ b/gdx/src/com/badlogic/gdx/utils/Json.java\n@@ -496,7 +496,7 @@\n \t\t\t}\r\n \r\n \t\t\tif (value instanceof Map) {\r\n-\t\t\t\tif (knownType == null) knownType = OrderedMap.class;\r\n+\t\t\t\tif (knownType == null) knownType = HashMap.class;\r\n \t\t\t\twriteObjectStart(actualType, knownType);\r\n \t\t\t\tfor (Map.Entry entry : ((Map<?, ?>)value).entrySet()) {\r\n \t\t\t\t\twriter.name(convertToString(entry.getKey()));\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 499, "bugNodeStartChar": 17339, "bugNodeLength": 16, "fixLineNum": 499, "fixNodeStartChar": 16841, "fixNodeLength": 13, "sourceBeforeFix": "OrderedMap.class", "sourceAfterFix": "HashMap.class"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "6196f126f039a618d3b8cc4112def78be2b07891", "fixCommitParentSHA1": "8446390f6c54e1fda28cb21e70f6e0833b84e650", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/Mesh.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/Mesh.java b/gdx/src/com/badlogic/gdx/graphics/Mesh.java\nindex ab6083d..74ecf30 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/Mesh.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/Mesh.java\n@@ -176,7 +176,7 @@\n \tpublic Mesh (VertexDataType type, boolean isStatic, int maxVertices, int maxIndices, VertexAttribute... attributes) {\r\n // if (type == VertexDataType.VertexArray && Gdx.graphics.isGL20Available()) type = VertexDataType.VertexBufferObject;\r\n \r\n-\t\tif (type == VertexDataType.VertexBufferObject) {\r\n+\t\tif (type == VertexDataType.VertexBufferObject || Mesh.forceVBO) {\r\n \t\t\tvertices = new VertexBufferObject(isStatic, maxVertices, attributes);\r\n \t\t\tindices = new IndexBufferObject(isStatic, maxIndices);\r\n \t\t\tisVertexArray = false;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 179, "bugNodeStartChar": 8586, "bugNodeLength": 41, "fixLineNum": 179, "fixNodeStartChar": 8408, "fixNodeLength": 58, "sourceBeforeFix": "type == VertexDataType.VertexBufferObject", "sourceAfterFix": "type == VertexDataType.VertexBufferObject || Mesh.forceVBO"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "6196f126f039a618d3b8cc4112def78be2b07891", "fixCommitParentSHA1": "8446390f6c54e1fda28cb21e70f6e0833b84e650", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/Mesh.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/Mesh.java b/gdx/src/com/badlogic/gdx/graphics/Mesh.java\nindex ab6083d..74ecf30 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/Mesh.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/Mesh.java\n@@ -176,7 +176,7 @@\n \tpublic Mesh (VertexDataType type, boolean isStatic, int maxVertices, int maxIndices, VertexAttribute... attributes) {\r\n // if (type == VertexDataType.VertexArray && Gdx.graphics.isGL20Available()) type = VertexDataType.VertexBufferObject;\r\n \r\n-\t\tif (type == VertexDataType.VertexBufferObject) {\r\n+\t\tif (type == VertexDataType.VertexBufferObject || Mesh.forceVBO) {\r\n \t\t\tvertices = new VertexBufferObject(isStatic, maxVertices, attributes);\r\n \t\t\tindices = new IndexBufferObject(isStatic, maxIndices);\r\n \t\t\tisVertexArray = false;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 179, "bugNodeStartChar": 8586, "bugNodeLength": 41, "fixLineNum": 179, "fixNodeStartChar": 8408, "fixNodeLength": 58, "sourceBeforeFix": "type == VertexDataType.VertexBufferObject", "sourceAfterFix": "type == VertexDataType.VertexBufferObject || Mesh.forceVBO"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "0d560643c720ea2ee7bc89d6fb04a0668aa3d91c", "fixCommitParentSHA1": "6d318ee72d8484dfc67d16a1aa52b44c4e9758e8", "bugFilePath": "backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtGraphics.java", "fixPatch": "diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtGraphics.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtGraphics.java\nindex a21d1c3..356f702 100644\n--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtGraphics.java\n+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtGraphics.java\n@@ -264,7 +264,7 @@\n \r\n \t@Override\r\n \tpublic float getDensity () {\r\n-\t\treturn 96.0 / 160;\r\n+\t\treturn 96.0f / 160;\r\n \t}\r\n \r\n \t@Override\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 267, "bugNodeStartChar": 7865, "bugNodeLength": 10, "fixLineNum": 267, "fixNodeStartChar": 7599, "fixNodeLength": 11, "sourceBeforeFix": "96.0 / 160", "sourceAfterFix": "96.0f / 160"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "6956f9776d189ef182f0fc25853c44304cf5fb78", "fixCommitParentSHA1": "c26ce0cb1e20c0dc066989f0cd94c92d683d62ee", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ButtonGroup.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ButtonGroup.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ButtonGroup.java\nindex 3de1422..244c7c3 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ButtonGroup.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ButtonGroup.java\n@@ -71,7 +71,7 @@\n \t\tif (text == null) throw new IllegalArgumentException(\"text cannot be null.\");\r\n \t\tfor (int i = 0, n = buttons.size; i < n; i++) {\r\n \t\t\tButton button = buttons.get(i);\r\n-\t\t\tif (button instanceof TextButton && text.equals(((TextButton)button).getText())) {\r\n+\t\t\tif (button instanceof TextButton && text.contentEquals(((TextButton)button).getText())) {\r\n \t\t\t\tbutton.setChecked(true);\r\n \t\t\t\treturn;\r\n \t\t\t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 74, "bugNodeStartChar": 2803, "bugNodeLength": 43, "fixLineNum": 74, "fixNodeStartChar": 2730, "fixNodeLength": 50, "sourceBeforeFix": "text.equals(((TextButton)button).getText())", "sourceAfterFix": "text.contentEquals(((TextButton)button).getText())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "6956f9776d189ef182f0fc25853c44304cf5fb78", "fixCommitParentSHA1": "c26ce0cb1e20c0dc066989f0cd94c92d683d62ee", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ButtonGroup.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ButtonGroup.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ButtonGroup.java\nindex 3de1422..244c7c3 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ButtonGroup.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ButtonGroup.java\n@@ -71,7 +71,7 @@\n \t\tif (text == null) throw new IllegalArgumentException(\"text cannot be null.\");\r\n \t\tfor (int i = 0, n = buttons.size; i < n; i++) {\r\n \t\t\tButton button = buttons.get(i);\r\n-\t\t\tif (button instanceof TextButton && text.equals(((TextButton)button).getText())) {\r\n+\t\t\tif (button instanceof TextButton && text.contentEquals(((TextButton)button).getText())) {\r\n \t\t\t\tbutton.setChecked(true);\r\n \t\t\t\treturn;\r\n \t\t\t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 74, "bugNodeStartChar": 2803, "bugNodeLength": 43, "fixLineNum": 74, "fixNodeStartChar": 2730, "fixNodeLength": 50, "sourceBeforeFix": "text.equals(((TextButton)button).getText())", "sourceAfterFix": "text.contentEquals(((TextButton)button).getText())"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "586c8eda959300c12504bda3c404b117dace13bd", "fixCommitParentSHA1": "4179cc73f67feaf4ccd3ee7097ebb8e3280fc9e1", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/glutils/FrameBuffer.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/FrameBuffer.java b/gdx/src/com/badlogic/gdx/graphics/glutils/FrameBuffer.java\nindex 0b5bc7f..00b0044 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/glutils/FrameBuffer.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/FrameBuffer.java\n@@ -119,7 +119,7 @@\n \t\t   if (Gdx.app.getType() == ApplicationType.iOS) {\r\n \t\t     IntBuffer intbuf = ByteBuffer.allocateDirect(16 * Integer.SIZE / 8).order(ByteOrder.nativeOrder()).asIntBuffer();\r\n \t\t     gl.glGetIntegerv(GL20.GL_FRAMEBUFFER_BINDING, intbuf);\r\n-\t\t     defaultFramebufferHandle = intbuf.get();\r\n+\t\t     defaultFramebufferHandle = intbuf.get(0);\r\n \t\t   }\r\n \t\t   else {\r\n \t\t     defaultFramebufferHandle = 0;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 122, "bugNodeStartChar": 4698, "bugNodeLength": 12, "fixLineNum": 122, "fixNodeStartChar": 4577, "fixNodeLength": 13, "sourceBeforeFix": "intbuf.get()", "sourceAfterFix": "intbuf.get(0)"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "2fadb63b063757fcdddcbfee0514252d8cbc2433", "fixCommitParentSHA1": "ece63ecc5810c5f790256b31ed23bb4c692fea85", "bugFilePath": "gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java b/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java\nindex e014412..278515c 100644\n--- a/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java\n+++ b/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java\n@@ -44,7 +44,7 @@\n \n \tpublic static class Parameters extends AssetLoaderParameters<TiledMap> {\n \t\t/** Whether to load the map for a y-up coordinate system */\n-\t\tboolean yUp = true;\n+\t\tpublic boolean yUp = true;\n \t}\n \t\n \tprotected static final int FLAG_FLIP_HORIZONTALLY = 0x80000000;\n", "projectName": "libgdx.libgdx", "bugLineNum": 46, "bugNodeStartChar": 1964, "bugNodeLength": 81, "fixLineNum": 46, "fixNodeStartChar": 1964, "fixNodeLength": 88, "sourceBeforeFix": "0", "sourceAfterFix": "1"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "4665dcf9ab41c3c61cd42aad296ebfe518bfa003", "fixCommitParentSHA1": "52e3e25337f4fecbd4e5dbd9e8ef6f7506658c93", "bugFilePath": "backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java", "fixPatch": "diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\nindex 52bba05..c76f91a 100644\n--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n+++ b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n@@ -52,7 +52,7 @@\n \t}\n \n \tpublic void glBindTexture (int target, int texture) {\n-\t\tGL.glBindTextureEXT(target, texture);\n+\t\tGL.glBindTexture(target, texture);\n \t}\n \n \tpublic void glBlendFunc (int sfactor, int dfactor) {\n@@ -91,11 +91,11 @@\n \t}\n \n \tpublic void glCopyTexImage2D (int target, int level, int internalformat, int x, int y, int width, int height, int border) {\n-\t\tGL.glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border);\n+\t\tGL.glCopyTexImage2D(target, level, internalformat, x, y, width, height, border);\n \t}\n \n \tpublic void glCopyTexSubImage2D (int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) {\n-\t\tGL.glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height);\n+\t\tGL.glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);\n \t}\n \n \tpublic void glCullFace (int mode) {\n@@ -103,7 +103,7 @@\n \t}\n \n \tpublic void glDeleteTextures (int n, IntBuffer textures) {\n-\t\tGL.glDeleteTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glDeleteTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic void glDepthFunc (int func) {\n@@ -123,7 +123,7 @@\n \t}\n \n \tpublic void glDrawArrays (int mode, int first, int count) {\n-\t\tGL.glDrawArraysEXT(mode, first, count);\n+\t\tGL.glDrawArrays(mode, first, count);\n \t}\n \n \tpublic void glDrawElements (int mode, int count, int type, Buffer indices) {\n@@ -147,7 +147,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, IntBuffer textures) {\n-\t\tGL.glGenTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glGenTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic int glGetError () {\n@@ -175,7 +175,7 @@\n \t}\n \n \tpublic void glPolygonOffset (float factor, float units) {\n-\t\tGL.glPolygonOffsetEXT(factor, units);\n+\t\tGL.glPolygonOffset(factor, units);\n \t}\n \n \tpublic void glReadPixels (int x, int y, int width, int height, int format, int type, Buffer pixels) {\n@@ -209,7 +209,7 @@\n \n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\n \t\tBuffer pixels) {\n-\t\tGL.glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n+\t\tGL.glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n \t}\n \n \tpublic void glViewport (int x, int y, int width, int height) {\n@@ -261,7 +261,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, int[] textures, int offset) {\n-\t\tGL.glGenTexturesEXT(n, toBuffer(textures, offset), 0);\n+\t\tGL.glGenTextures(n, toBuffer(textures, offset), 0);\n \t}\n \n \tpublic void glGetIntegerv (int pname, int[] params, int offset) {\n", "projectName": "libgdx.libgdx", "bugLineNum": 55, "bugNodeStartChar": 1620, "bugNodeLength": 36, "fixLineNum": 55, "fixNodeStartChar": 1620, "fixNodeLength": 33, "sourceBeforeFix": "GL.glBindTextureEXT(target,texture)", "sourceAfterFix": "GL.glBindTexture(target,texture)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4665dcf9ab41c3c61cd42aad296ebfe518bfa003", "fixCommitParentSHA1": "52e3e25337f4fecbd4e5dbd9e8ef6f7506658c93", "bugFilePath": "backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java", "fixPatch": "diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\nindex 52bba05..c76f91a 100644\n--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n+++ b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n@@ -52,7 +52,7 @@\n \t}\n \n \tpublic void glBindTexture (int target, int texture) {\n-\t\tGL.glBindTextureEXT(target, texture);\n+\t\tGL.glBindTexture(target, texture);\n \t}\n \n \tpublic void glBlendFunc (int sfactor, int dfactor) {\n@@ -91,11 +91,11 @@\n \t}\n \n \tpublic void glCopyTexImage2D (int target, int level, int internalformat, int x, int y, int width, int height, int border) {\n-\t\tGL.glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border);\n+\t\tGL.glCopyTexImage2D(target, level, internalformat, x, y, width, height, border);\n \t}\n \n \tpublic void glCopyTexSubImage2D (int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) {\n-\t\tGL.glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height);\n+\t\tGL.glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);\n \t}\n \n \tpublic void glCullFace (int mode) {\n@@ -103,7 +103,7 @@\n \t}\n \n \tpublic void glDeleteTextures (int n, IntBuffer textures) {\n-\t\tGL.glDeleteTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glDeleteTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic void glDepthFunc (int func) {\n@@ -123,7 +123,7 @@\n \t}\n \n \tpublic void glDrawArrays (int mode, int first, int count) {\n-\t\tGL.glDrawArraysEXT(mode, first, count);\n+\t\tGL.glDrawArrays(mode, first, count);\n \t}\n \n \tpublic void glDrawElements (int mode, int count, int type, Buffer indices) {\n@@ -147,7 +147,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, IntBuffer textures) {\n-\t\tGL.glGenTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glGenTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic int glGetError () {\n@@ -175,7 +175,7 @@\n \t}\n \n \tpublic void glPolygonOffset (float factor, float units) {\n-\t\tGL.glPolygonOffsetEXT(factor, units);\n+\t\tGL.glPolygonOffset(factor, units);\n \t}\n \n \tpublic void glReadPixels (int x, int y, int width, int height, int format, int type, Buffer pixels) {\n@@ -209,7 +209,7 @@\n \n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\n \t\tBuffer pixels) {\n-\t\tGL.glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n+\t\tGL.glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n \t}\n \n \tpublic void glViewport (int x, int y, int width, int height) {\n@@ -261,7 +261,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, int[] textures, int offset) {\n-\t\tGL.glGenTexturesEXT(n, toBuffer(textures, offset), 0);\n+\t\tGL.glGenTextures(n, toBuffer(textures, offset), 0);\n \t}\n \n \tpublic void glGetIntegerv (int pname, int[] params, int offset) {\n", "projectName": "libgdx.libgdx", "bugLineNum": 55, "bugNodeStartChar": 1620, "bugNodeLength": 36, "fixLineNum": 55, "fixNodeStartChar": 1620, "fixNodeLength": 33, "sourceBeforeFix": "GL.glBindTextureEXT(target,texture)", "sourceAfterFix": "GL.glBindTexture(target,texture)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "4665dcf9ab41c3c61cd42aad296ebfe518bfa003", "fixCommitParentSHA1": "52e3e25337f4fecbd4e5dbd9e8ef6f7506658c93", "bugFilePath": "backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java", "fixPatch": "diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\nindex 52bba05..c76f91a 100644\n--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n+++ b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n@@ -52,7 +52,7 @@\n \t}\n \n \tpublic void glBindTexture (int target, int texture) {\n-\t\tGL.glBindTextureEXT(target, texture);\n+\t\tGL.glBindTexture(target, texture);\n \t}\n \n \tpublic void glBlendFunc (int sfactor, int dfactor) {\n@@ -91,11 +91,11 @@\n \t}\n \n \tpublic void glCopyTexImage2D (int target, int level, int internalformat, int x, int y, int width, int height, int border) {\n-\t\tGL.glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border);\n+\t\tGL.glCopyTexImage2D(target, level, internalformat, x, y, width, height, border);\n \t}\n \n \tpublic void glCopyTexSubImage2D (int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) {\n-\t\tGL.glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height);\n+\t\tGL.glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);\n \t}\n \n \tpublic void glCullFace (int mode) {\n@@ -103,7 +103,7 @@\n \t}\n \n \tpublic void glDeleteTextures (int n, IntBuffer textures) {\n-\t\tGL.glDeleteTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glDeleteTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic void glDepthFunc (int func) {\n@@ -123,7 +123,7 @@\n \t}\n \n \tpublic void glDrawArrays (int mode, int first, int count) {\n-\t\tGL.glDrawArraysEXT(mode, first, count);\n+\t\tGL.glDrawArrays(mode, first, count);\n \t}\n \n \tpublic void glDrawElements (int mode, int count, int type, Buffer indices) {\n@@ -147,7 +147,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, IntBuffer textures) {\n-\t\tGL.glGenTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glGenTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic int glGetError () {\n@@ -175,7 +175,7 @@\n \t}\n \n \tpublic void glPolygonOffset (float factor, float units) {\n-\t\tGL.glPolygonOffsetEXT(factor, units);\n+\t\tGL.glPolygonOffset(factor, units);\n \t}\n \n \tpublic void glReadPixels (int x, int y, int width, int height, int format, int type, Buffer pixels) {\n@@ -209,7 +209,7 @@\n \n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\n \t\tBuffer pixels) {\n-\t\tGL.glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n+\t\tGL.glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n \t}\n \n \tpublic void glViewport (int x, int y, int width, int height) {\n@@ -261,7 +261,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, int[] textures, int offset) {\n-\t\tGL.glGenTexturesEXT(n, toBuffer(textures, offset), 0);\n+\t\tGL.glGenTextures(n, toBuffer(textures, offset), 0);\n \t}\n \n \tpublic void glGetIntegerv (int pname, int[] params, int offset) {\n", "projectName": "libgdx.libgdx", "bugLineNum": 94, "bugNodeStartChar": 2910, "bugNodeLength": 82, "fixLineNum": 94, "fixNodeStartChar": 2910, "fixNodeLength": 79, "sourceBeforeFix": "GL.glCopyTexImage2DEXT(target,level,internalformat,x,y,width,height,border)", "sourceAfterFix": "GL.glCopyTexImage2D(target,level,internalformat,x,y,width,height,border)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4665dcf9ab41c3c61cd42aad296ebfe518bfa003", "fixCommitParentSHA1": "52e3e25337f4fecbd4e5dbd9e8ef6f7506658c93", "bugFilePath": "backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java", "fixPatch": "diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\nindex 52bba05..c76f91a 100644\n--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n+++ b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n@@ -52,7 +52,7 @@\n \t}\n \n \tpublic void glBindTexture (int target, int texture) {\n-\t\tGL.glBindTextureEXT(target, texture);\n+\t\tGL.glBindTexture(target, texture);\n \t}\n \n \tpublic void glBlendFunc (int sfactor, int dfactor) {\n@@ -91,11 +91,11 @@\n \t}\n \n \tpublic void glCopyTexImage2D (int target, int level, int internalformat, int x, int y, int width, int height, int border) {\n-\t\tGL.glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border);\n+\t\tGL.glCopyTexImage2D(target, level, internalformat, x, y, width, height, border);\n \t}\n \n \tpublic void glCopyTexSubImage2D (int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) {\n-\t\tGL.glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height);\n+\t\tGL.glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);\n \t}\n \n \tpublic void glCullFace (int mode) {\n@@ -103,7 +103,7 @@\n \t}\n \n \tpublic void glDeleteTextures (int n, IntBuffer textures) {\n-\t\tGL.glDeleteTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glDeleteTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic void glDepthFunc (int func) {\n@@ -123,7 +123,7 @@\n \t}\n \n \tpublic void glDrawArrays (int mode, int first, int count) {\n-\t\tGL.glDrawArraysEXT(mode, first, count);\n+\t\tGL.glDrawArrays(mode, first, count);\n \t}\n \n \tpublic void glDrawElements (int mode, int count, int type, Buffer indices) {\n@@ -147,7 +147,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, IntBuffer textures) {\n-\t\tGL.glGenTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glGenTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic int glGetError () {\n@@ -175,7 +175,7 @@\n \t}\n \n \tpublic void glPolygonOffset (float factor, float units) {\n-\t\tGL.glPolygonOffsetEXT(factor, units);\n+\t\tGL.glPolygonOffset(factor, units);\n \t}\n \n \tpublic void glReadPixels (int x, int y, int width, int height, int format, int type, Buffer pixels) {\n@@ -209,7 +209,7 @@\n \n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\n \t\tBuffer pixels) {\n-\t\tGL.glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n+\t\tGL.glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n \t}\n \n \tpublic void glViewport (int x, int y, int width, int height) {\n@@ -261,7 +261,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, int[] textures, int offset) {\n-\t\tGL.glGenTexturesEXT(n, toBuffer(textures, offset), 0);\n+\t\tGL.glGenTextures(n, toBuffer(textures, offset), 0);\n \t}\n \n \tpublic void glGetIntegerv (int pname, int[] params, int offset) {\n", "projectName": "libgdx.libgdx", "bugLineNum": 94, "bugNodeStartChar": 2910, "bugNodeLength": 82, "fixLineNum": 94, "fixNodeStartChar": 2910, "fixNodeLength": 79, "sourceBeforeFix": "GL.glCopyTexImage2DEXT(target,level,internalformat,x,y,width,height,border)", "sourceAfterFix": "GL.glCopyTexImage2D(target,level,internalformat,x,y,width,height,border)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "4665dcf9ab41c3c61cd42aad296ebfe518bfa003", "fixCommitParentSHA1": "52e3e25337f4fecbd4e5dbd9e8ef6f7506658c93", "bugFilePath": "backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java", "fixPatch": "diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\nindex 52bba05..c76f91a 100644\n--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n+++ b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n@@ -52,7 +52,7 @@\n \t}\n \n \tpublic void glBindTexture (int target, int texture) {\n-\t\tGL.glBindTextureEXT(target, texture);\n+\t\tGL.glBindTexture(target, texture);\n \t}\n \n \tpublic void glBlendFunc (int sfactor, int dfactor) {\n@@ -91,11 +91,11 @@\n \t}\n \n \tpublic void glCopyTexImage2D (int target, int level, int internalformat, int x, int y, int width, int height, int border) {\n-\t\tGL.glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border);\n+\t\tGL.glCopyTexImage2D(target, level, internalformat, x, y, width, height, border);\n \t}\n \n \tpublic void glCopyTexSubImage2D (int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) {\n-\t\tGL.glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height);\n+\t\tGL.glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);\n \t}\n \n \tpublic void glCullFace (int mode) {\n@@ -103,7 +103,7 @@\n \t}\n \n \tpublic void glDeleteTextures (int n, IntBuffer textures) {\n-\t\tGL.glDeleteTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glDeleteTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic void glDepthFunc (int func) {\n@@ -123,7 +123,7 @@\n \t}\n \n \tpublic void glDrawArrays (int mode, int first, int count) {\n-\t\tGL.glDrawArraysEXT(mode, first, count);\n+\t\tGL.glDrawArrays(mode, first, count);\n \t}\n \n \tpublic void glDrawElements (int mode, int count, int type, Buffer indices) {\n@@ -147,7 +147,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, IntBuffer textures) {\n-\t\tGL.glGenTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glGenTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic int glGetError () {\n@@ -175,7 +175,7 @@\n \t}\n \n \tpublic void glPolygonOffset (float factor, float units) {\n-\t\tGL.glPolygonOffsetEXT(factor, units);\n+\t\tGL.glPolygonOffset(factor, units);\n \t}\n \n \tpublic void glReadPixels (int x, int y, int width, int height, int format, int type, Buffer pixels) {\n@@ -209,7 +209,7 @@\n \n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\n \t\tBuffer pixels) {\n-\t\tGL.glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n+\t\tGL.glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n \t}\n \n \tpublic void glViewport (int x, int y, int width, int height) {\n@@ -261,7 +261,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, int[] textures, int offset) {\n-\t\tGL.glGenTexturesEXT(n, toBuffer(textures, offset), 0);\n+\t\tGL.glGenTextures(n, toBuffer(textures, offset), 0);\n \t}\n \n \tpublic void glGetIntegerv (int pname, int[] params, int offset) {\n", "projectName": "libgdx.libgdx", "bugLineNum": 98, "bugNodeStartChar": 3122, "bugNodeLength": 79, "fixLineNum": 98, "fixNodeStartChar": 3122, "fixNodeLength": 76, "sourceBeforeFix": "GL.glCopyTexSubImage2DEXT(target,level,xoffset,yoffset,x,y,width,height)", "sourceAfterFix": "GL.glCopyTexSubImage2D(target,level,xoffset,yoffset,x,y,width,height)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4665dcf9ab41c3c61cd42aad296ebfe518bfa003", "fixCommitParentSHA1": "52e3e25337f4fecbd4e5dbd9e8ef6f7506658c93", "bugFilePath": "backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java", "fixPatch": "diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\nindex 52bba05..c76f91a 100644\n--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n+++ b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n@@ -52,7 +52,7 @@\n \t}\n \n \tpublic void glBindTexture (int target, int texture) {\n-\t\tGL.glBindTextureEXT(target, texture);\n+\t\tGL.glBindTexture(target, texture);\n \t}\n \n \tpublic void glBlendFunc (int sfactor, int dfactor) {\n@@ -91,11 +91,11 @@\n \t}\n \n \tpublic void glCopyTexImage2D (int target, int level, int internalformat, int x, int y, int width, int height, int border) {\n-\t\tGL.glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border);\n+\t\tGL.glCopyTexImage2D(target, level, internalformat, x, y, width, height, border);\n \t}\n \n \tpublic void glCopyTexSubImage2D (int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) {\n-\t\tGL.glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height);\n+\t\tGL.glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);\n \t}\n \n \tpublic void glCullFace (int mode) {\n@@ -103,7 +103,7 @@\n \t}\n \n \tpublic void glDeleteTextures (int n, IntBuffer textures) {\n-\t\tGL.glDeleteTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glDeleteTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic void glDepthFunc (int func) {\n@@ -123,7 +123,7 @@\n \t}\n \n \tpublic void glDrawArrays (int mode, int first, int count) {\n-\t\tGL.glDrawArraysEXT(mode, first, count);\n+\t\tGL.glDrawArrays(mode, first, count);\n \t}\n \n \tpublic void glDrawElements (int mode, int count, int type, Buffer indices) {\n@@ -147,7 +147,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, IntBuffer textures) {\n-\t\tGL.glGenTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glGenTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic int glGetError () {\n@@ -175,7 +175,7 @@\n \t}\n \n \tpublic void glPolygonOffset (float factor, float units) {\n-\t\tGL.glPolygonOffsetEXT(factor, units);\n+\t\tGL.glPolygonOffset(factor, units);\n \t}\n \n \tpublic void glReadPixels (int x, int y, int width, int height, int format, int type, Buffer pixels) {\n@@ -209,7 +209,7 @@\n \n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\n \t\tBuffer pixels) {\n-\t\tGL.glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n+\t\tGL.glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n \t}\n \n \tpublic void glViewport (int x, int y, int width, int height) {\n@@ -261,7 +261,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, int[] textures, int offset) {\n-\t\tGL.glGenTexturesEXT(n, toBuffer(textures, offset), 0);\n+\t\tGL.glGenTextures(n, toBuffer(textures, offset), 0);\n \t}\n \n \tpublic void glGetIntegerv (int pname, int[] params, int offset) {\n", "projectName": "libgdx.libgdx", "bugLineNum": 98, "bugNodeStartChar": 3122, "bugNodeLength": 79, "fixLineNum": 98, "fixNodeStartChar": 3122, "fixNodeLength": 76, "sourceBeforeFix": "GL.glCopyTexSubImage2DEXT(target,level,xoffset,yoffset,x,y,width,height)", "sourceAfterFix": "GL.glCopyTexSubImage2D(target,level,xoffset,yoffset,x,y,width,height)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "4665dcf9ab41c3c61cd42aad296ebfe518bfa003", "fixCommitParentSHA1": "52e3e25337f4fecbd4e5dbd9e8ef6f7506658c93", "bugFilePath": "backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java", "fixPatch": "diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\nindex 52bba05..c76f91a 100644\n--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n+++ b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n@@ -52,7 +52,7 @@\n \t}\n \n \tpublic void glBindTexture (int target, int texture) {\n-\t\tGL.glBindTextureEXT(target, texture);\n+\t\tGL.glBindTexture(target, texture);\n \t}\n \n \tpublic void glBlendFunc (int sfactor, int dfactor) {\n@@ -91,11 +91,11 @@\n \t}\n \n \tpublic void glCopyTexImage2D (int target, int level, int internalformat, int x, int y, int width, int height, int border) {\n-\t\tGL.glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border);\n+\t\tGL.glCopyTexImage2D(target, level, internalformat, x, y, width, height, border);\n \t}\n \n \tpublic void glCopyTexSubImage2D (int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) {\n-\t\tGL.glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height);\n+\t\tGL.glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);\n \t}\n \n \tpublic void glCullFace (int mode) {\n@@ -103,7 +103,7 @@\n \t}\n \n \tpublic void glDeleteTextures (int n, IntBuffer textures) {\n-\t\tGL.glDeleteTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glDeleteTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic void glDepthFunc (int func) {\n@@ -123,7 +123,7 @@\n \t}\n \n \tpublic void glDrawArrays (int mode, int first, int count) {\n-\t\tGL.glDrawArraysEXT(mode, first, count);\n+\t\tGL.glDrawArrays(mode, first, count);\n \t}\n \n \tpublic void glDrawElements (int mode, int count, int type, Buffer indices) {\n@@ -147,7 +147,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, IntBuffer textures) {\n-\t\tGL.glGenTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glGenTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic int glGetError () {\n@@ -175,7 +175,7 @@\n \t}\n \n \tpublic void glPolygonOffset (float factor, float units) {\n-\t\tGL.glPolygonOffsetEXT(factor, units);\n+\t\tGL.glPolygonOffset(factor, units);\n \t}\n \n \tpublic void glReadPixels (int x, int y, int width, int height, int format, int type, Buffer pixels) {\n@@ -209,7 +209,7 @@\n \n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\n \t\tBuffer pixels) {\n-\t\tGL.glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n+\t\tGL.glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n \t}\n \n \tpublic void glViewport (int x, int y, int width, int height) {\n@@ -261,7 +261,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, int[] textures, int offset) {\n-\t\tGL.glGenTexturesEXT(n, toBuffer(textures, offset), 0);\n+\t\tGL.glGenTextures(n, toBuffer(textures, offset), 0);\n \t}\n \n \tpublic void glGetIntegerv (int pname, int[] params, int offset) {\n", "projectName": "libgdx.libgdx", "bugLineNum": 106, "bugNodeStartChar": 3333, "bugNodeLength": 65, "fixLineNum": 106, "fixNodeStartChar": 3333, "fixNodeLength": 62, "sourceBeforeFix": "GL.glDeleteTexturesEXT(n,textures,Memory.getPosition(textures))", "sourceAfterFix": "GL.glDeleteTextures(n,textures,Memory.getPosition(textures))"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4665dcf9ab41c3c61cd42aad296ebfe518bfa003", "fixCommitParentSHA1": "52e3e25337f4fecbd4e5dbd9e8ef6f7506658c93", "bugFilePath": "backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java", "fixPatch": "diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\nindex 52bba05..c76f91a 100644\n--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n+++ b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n@@ -52,7 +52,7 @@\n \t}\n \n \tpublic void glBindTexture (int target, int texture) {\n-\t\tGL.glBindTextureEXT(target, texture);\n+\t\tGL.glBindTexture(target, texture);\n \t}\n \n \tpublic void glBlendFunc (int sfactor, int dfactor) {\n@@ -91,11 +91,11 @@\n \t}\n \n \tpublic void glCopyTexImage2D (int target, int level, int internalformat, int x, int y, int width, int height, int border) {\n-\t\tGL.glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border);\n+\t\tGL.glCopyTexImage2D(target, level, internalformat, x, y, width, height, border);\n \t}\n \n \tpublic void glCopyTexSubImage2D (int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) {\n-\t\tGL.glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height);\n+\t\tGL.glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);\n \t}\n \n \tpublic void glCullFace (int mode) {\n@@ -103,7 +103,7 @@\n \t}\n \n \tpublic void glDeleteTextures (int n, IntBuffer textures) {\n-\t\tGL.glDeleteTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glDeleteTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic void glDepthFunc (int func) {\n@@ -123,7 +123,7 @@\n \t}\n \n \tpublic void glDrawArrays (int mode, int first, int count) {\n-\t\tGL.glDrawArraysEXT(mode, first, count);\n+\t\tGL.glDrawArrays(mode, first, count);\n \t}\n \n \tpublic void glDrawElements (int mode, int count, int type, Buffer indices) {\n@@ -147,7 +147,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, IntBuffer textures) {\n-\t\tGL.glGenTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glGenTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic int glGetError () {\n@@ -175,7 +175,7 @@\n \t}\n \n \tpublic void glPolygonOffset (float factor, float units) {\n-\t\tGL.glPolygonOffsetEXT(factor, units);\n+\t\tGL.glPolygonOffset(factor, units);\n \t}\n \n \tpublic void glReadPixels (int x, int y, int width, int height, int format, int type, Buffer pixels) {\n@@ -209,7 +209,7 @@\n \n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\n \t\tBuffer pixels) {\n-\t\tGL.glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n+\t\tGL.glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n \t}\n \n \tpublic void glViewport (int x, int y, int width, int height) {\n@@ -261,7 +261,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, int[] textures, int offset) {\n-\t\tGL.glGenTexturesEXT(n, toBuffer(textures, offset), 0);\n+\t\tGL.glGenTextures(n, toBuffer(textures, offset), 0);\n \t}\n \n \tpublic void glGetIntegerv (int pname, int[] params, int offset) {\n", "projectName": "libgdx.libgdx", "bugLineNum": 106, "bugNodeStartChar": 3333, "bugNodeLength": 65, "fixLineNum": 106, "fixNodeStartChar": 3333, "fixNodeLength": 62, "sourceBeforeFix": "GL.glDeleteTexturesEXT(n,textures,Memory.getPosition(textures))", "sourceAfterFix": "GL.glDeleteTextures(n,textures,Memory.getPosition(textures))"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "4665dcf9ab41c3c61cd42aad296ebfe518bfa003", "fixCommitParentSHA1": "52e3e25337f4fecbd4e5dbd9e8ef6f7506658c93", "bugFilePath": "backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java", "fixPatch": "diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\nindex 52bba05..c76f91a 100644\n--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n+++ b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n@@ -52,7 +52,7 @@\n \t}\n \n \tpublic void glBindTexture (int target, int texture) {\n-\t\tGL.glBindTextureEXT(target, texture);\n+\t\tGL.glBindTexture(target, texture);\n \t}\n \n \tpublic void glBlendFunc (int sfactor, int dfactor) {\n@@ -91,11 +91,11 @@\n \t}\n \n \tpublic void glCopyTexImage2D (int target, int level, int internalformat, int x, int y, int width, int height, int border) {\n-\t\tGL.glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border);\n+\t\tGL.glCopyTexImage2D(target, level, internalformat, x, y, width, height, border);\n \t}\n \n \tpublic void glCopyTexSubImage2D (int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) {\n-\t\tGL.glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height);\n+\t\tGL.glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);\n \t}\n \n \tpublic void glCullFace (int mode) {\n@@ -103,7 +103,7 @@\n \t}\n \n \tpublic void glDeleteTextures (int n, IntBuffer textures) {\n-\t\tGL.glDeleteTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glDeleteTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic void glDepthFunc (int func) {\n@@ -123,7 +123,7 @@\n \t}\n \n \tpublic void glDrawArrays (int mode, int first, int count) {\n-\t\tGL.glDrawArraysEXT(mode, first, count);\n+\t\tGL.glDrawArrays(mode, first, count);\n \t}\n \n \tpublic void glDrawElements (int mode, int count, int type, Buffer indices) {\n@@ -147,7 +147,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, IntBuffer textures) {\n-\t\tGL.glGenTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glGenTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic int glGetError () {\n@@ -175,7 +175,7 @@\n \t}\n \n \tpublic void glPolygonOffset (float factor, float units) {\n-\t\tGL.glPolygonOffsetEXT(factor, units);\n+\t\tGL.glPolygonOffset(factor, units);\n \t}\n \n \tpublic void glReadPixels (int x, int y, int width, int height, int format, int type, Buffer pixels) {\n@@ -209,7 +209,7 @@\n \n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\n \t\tBuffer pixels) {\n-\t\tGL.glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n+\t\tGL.glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n \t}\n \n \tpublic void glViewport (int x, int y, int width, int height) {\n@@ -261,7 +261,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, int[] textures, int offset) {\n-\t\tGL.glGenTexturesEXT(n, toBuffer(textures, offset), 0);\n+\t\tGL.glGenTextures(n, toBuffer(textures, offset), 0);\n \t}\n \n \tpublic void glGetIntegerv (int pname, int[] params, int offset) {\n", "projectName": "libgdx.libgdx", "bugLineNum": 126, "bugNodeStartChar": 3755, "bugNodeLength": 38, "fixLineNum": 126, "fixNodeStartChar": 3755, "fixNodeLength": 35, "sourceBeforeFix": "GL.glDrawArraysEXT(mode,first,count)", "sourceAfterFix": "GL.glDrawArrays(mode,first,count)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4665dcf9ab41c3c61cd42aad296ebfe518bfa003", "fixCommitParentSHA1": "52e3e25337f4fecbd4e5dbd9e8ef6f7506658c93", "bugFilePath": "backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java", "fixPatch": "diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\nindex 52bba05..c76f91a 100644\n--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n+++ b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n@@ -52,7 +52,7 @@\n \t}\n \n \tpublic void glBindTexture (int target, int texture) {\n-\t\tGL.glBindTextureEXT(target, texture);\n+\t\tGL.glBindTexture(target, texture);\n \t}\n \n \tpublic void glBlendFunc (int sfactor, int dfactor) {\n@@ -91,11 +91,11 @@\n \t}\n \n \tpublic void glCopyTexImage2D (int target, int level, int internalformat, int x, int y, int width, int height, int border) {\n-\t\tGL.glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border);\n+\t\tGL.glCopyTexImage2D(target, level, internalformat, x, y, width, height, border);\n \t}\n \n \tpublic void glCopyTexSubImage2D (int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) {\n-\t\tGL.glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height);\n+\t\tGL.glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);\n \t}\n \n \tpublic void glCullFace (int mode) {\n@@ -103,7 +103,7 @@\n \t}\n \n \tpublic void glDeleteTextures (int n, IntBuffer textures) {\n-\t\tGL.glDeleteTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glDeleteTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic void glDepthFunc (int func) {\n@@ -123,7 +123,7 @@\n \t}\n \n \tpublic void glDrawArrays (int mode, int first, int count) {\n-\t\tGL.glDrawArraysEXT(mode, first, count);\n+\t\tGL.glDrawArrays(mode, first, count);\n \t}\n \n \tpublic void glDrawElements (int mode, int count, int type, Buffer indices) {\n@@ -147,7 +147,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, IntBuffer textures) {\n-\t\tGL.glGenTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glGenTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic int glGetError () {\n@@ -175,7 +175,7 @@\n \t}\n \n \tpublic void glPolygonOffset (float factor, float units) {\n-\t\tGL.glPolygonOffsetEXT(factor, units);\n+\t\tGL.glPolygonOffset(factor, units);\n \t}\n \n \tpublic void glReadPixels (int x, int y, int width, int height, int format, int type, Buffer pixels) {\n@@ -209,7 +209,7 @@\n \n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\n \t\tBuffer pixels) {\n-\t\tGL.glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n+\t\tGL.glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n \t}\n \n \tpublic void glViewport (int x, int y, int width, int height) {\n@@ -261,7 +261,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, int[] textures, int offset) {\n-\t\tGL.glGenTexturesEXT(n, toBuffer(textures, offset), 0);\n+\t\tGL.glGenTextures(n, toBuffer(textures, offset), 0);\n \t}\n \n \tpublic void glGetIntegerv (int pname, int[] params, int offset) {\n", "projectName": "libgdx.libgdx", "bugLineNum": 126, "bugNodeStartChar": 3755, "bugNodeLength": 38, "fixLineNum": 126, "fixNodeStartChar": 3755, "fixNodeLength": 35, "sourceBeforeFix": "GL.glDrawArraysEXT(mode,first,count)", "sourceAfterFix": "GL.glDrawArrays(mode,first,count)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "4665dcf9ab41c3c61cd42aad296ebfe518bfa003", "fixCommitParentSHA1": "52e3e25337f4fecbd4e5dbd9e8ef6f7506658c93", "bugFilePath": "backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java", "fixPatch": "diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\nindex 52bba05..c76f91a 100644\n--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n+++ b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n@@ -52,7 +52,7 @@\n \t}\n \n \tpublic void glBindTexture (int target, int texture) {\n-\t\tGL.glBindTextureEXT(target, texture);\n+\t\tGL.glBindTexture(target, texture);\n \t}\n \n \tpublic void glBlendFunc (int sfactor, int dfactor) {\n@@ -91,11 +91,11 @@\n \t}\n \n \tpublic void glCopyTexImage2D (int target, int level, int internalformat, int x, int y, int width, int height, int border) {\n-\t\tGL.glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border);\n+\t\tGL.glCopyTexImage2D(target, level, internalformat, x, y, width, height, border);\n \t}\n \n \tpublic void glCopyTexSubImage2D (int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) {\n-\t\tGL.glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height);\n+\t\tGL.glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);\n \t}\n \n \tpublic void glCullFace (int mode) {\n@@ -103,7 +103,7 @@\n \t}\n \n \tpublic void glDeleteTextures (int n, IntBuffer textures) {\n-\t\tGL.glDeleteTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glDeleteTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic void glDepthFunc (int func) {\n@@ -123,7 +123,7 @@\n \t}\n \n \tpublic void glDrawArrays (int mode, int first, int count) {\n-\t\tGL.glDrawArraysEXT(mode, first, count);\n+\t\tGL.glDrawArrays(mode, first, count);\n \t}\n \n \tpublic void glDrawElements (int mode, int count, int type, Buffer indices) {\n@@ -147,7 +147,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, IntBuffer textures) {\n-\t\tGL.glGenTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glGenTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic int glGetError () {\n@@ -175,7 +175,7 @@\n \t}\n \n \tpublic void glPolygonOffset (float factor, float units) {\n-\t\tGL.glPolygonOffsetEXT(factor, units);\n+\t\tGL.glPolygonOffset(factor, units);\n \t}\n \n \tpublic void glReadPixels (int x, int y, int width, int height, int format, int type, Buffer pixels) {\n@@ -209,7 +209,7 @@\n \n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\n \t\tBuffer pixels) {\n-\t\tGL.glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n+\t\tGL.glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n \t}\n \n \tpublic void glViewport (int x, int y, int width, int height) {\n@@ -261,7 +261,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, int[] textures, int offset) {\n-\t\tGL.glGenTexturesEXT(n, toBuffer(textures, offset), 0);\n+\t\tGL.glGenTextures(n, toBuffer(textures, offset), 0);\n \t}\n \n \tpublic void glGetIntegerv (int pname, int[] params, int offset) {\n", "projectName": "libgdx.libgdx", "bugLineNum": 150, "bugNodeStartChar": 4236, "bugNodeLength": 62, "fixLineNum": 150, "fixNodeStartChar": 4236, "fixNodeLength": 59, "sourceBeforeFix": "GL.glGenTexturesEXT(n,textures,Memory.getPosition(textures))", "sourceAfterFix": "GL.glGenTextures(n,textures,Memory.getPosition(textures))"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4665dcf9ab41c3c61cd42aad296ebfe518bfa003", "fixCommitParentSHA1": "52e3e25337f4fecbd4e5dbd9e8ef6f7506658c93", "bugFilePath": "backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java", "fixPatch": "diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\nindex 52bba05..c76f91a 100644\n--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n+++ b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n@@ -52,7 +52,7 @@\n \t}\n \n \tpublic void glBindTexture (int target, int texture) {\n-\t\tGL.glBindTextureEXT(target, texture);\n+\t\tGL.glBindTexture(target, texture);\n \t}\n \n \tpublic void glBlendFunc (int sfactor, int dfactor) {\n@@ -91,11 +91,11 @@\n \t}\n \n \tpublic void glCopyTexImage2D (int target, int level, int internalformat, int x, int y, int width, int height, int border) {\n-\t\tGL.glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border);\n+\t\tGL.glCopyTexImage2D(target, level, internalformat, x, y, width, height, border);\n \t}\n \n \tpublic void glCopyTexSubImage2D (int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) {\n-\t\tGL.glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height);\n+\t\tGL.glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);\n \t}\n \n \tpublic void glCullFace (int mode) {\n@@ -103,7 +103,7 @@\n \t}\n \n \tpublic void glDeleteTextures (int n, IntBuffer textures) {\n-\t\tGL.glDeleteTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glDeleteTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic void glDepthFunc (int func) {\n@@ -123,7 +123,7 @@\n \t}\n \n \tpublic void glDrawArrays (int mode, int first, int count) {\n-\t\tGL.glDrawArraysEXT(mode, first, count);\n+\t\tGL.glDrawArrays(mode, first, count);\n \t}\n \n \tpublic void glDrawElements (int mode, int count, int type, Buffer indices) {\n@@ -147,7 +147,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, IntBuffer textures) {\n-\t\tGL.glGenTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glGenTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic int glGetError () {\n@@ -175,7 +175,7 @@\n \t}\n \n \tpublic void glPolygonOffset (float factor, float units) {\n-\t\tGL.glPolygonOffsetEXT(factor, units);\n+\t\tGL.glPolygonOffset(factor, units);\n \t}\n \n \tpublic void glReadPixels (int x, int y, int width, int height, int format, int type, Buffer pixels) {\n@@ -209,7 +209,7 @@\n \n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\n \t\tBuffer pixels) {\n-\t\tGL.glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n+\t\tGL.glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n \t}\n \n \tpublic void glViewport (int x, int y, int width, int height) {\n@@ -261,7 +261,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, int[] textures, int offset) {\n-\t\tGL.glGenTexturesEXT(n, toBuffer(textures, offset), 0);\n+\t\tGL.glGenTextures(n, toBuffer(textures, offset), 0);\n \t}\n \n \tpublic void glGetIntegerv (int pname, int[] params, int offset) {\n", "projectName": "libgdx.libgdx", "bugLineNum": 150, "bugNodeStartChar": 4236, "bugNodeLength": 62, "fixLineNum": 150, "fixNodeStartChar": 4236, "fixNodeLength": 59, "sourceBeforeFix": "GL.glGenTexturesEXT(n,textures,Memory.getPosition(textures))", "sourceAfterFix": "GL.glGenTextures(n,textures,Memory.getPosition(textures))"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "4665dcf9ab41c3c61cd42aad296ebfe518bfa003", "fixCommitParentSHA1": "52e3e25337f4fecbd4e5dbd9e8ef6f7506658c93", "bugFilePath": "backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java", "fixPatch": "diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\nindex 52bba05..c76f91a 100644\n--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n+++ b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n@@ -52,7 +52,7 @@\n \t}\n \n \tpublic void glBindTexture (int target, int texture) {\n-\t\tGL.glBindTextureEXT(target, texture);\n+\t\tGL.glBindTexture(target, texture);\n \t}\n \n \tpublic void glBlendFunc (int sfactor, int dfactor) {\n@@ -91,11 +91,11 @@\n \t}\n \n \tpublic void glCopyTexImage2D (int target, int level, int internalformat, int x, int y, int width, int height, int border) {\n-\t\tGL.glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border);\n+\t\tGL.glCopyTexImage2D(target, level, internalformat, x, y, width, height, border);\n \t}\n \n \tpublic void glCopyTexSubImage2D (int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) {\n-\t\tGL.glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height);\n+\t\tGL.glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);\n \t}\n \n \tpublic void glCullFace (int mode) {\n@@ -103,7 +103,7 @@\n \t}\n \n \tpublic void glDeleteTextures (int n, IntBuffer textures) {\n-\t\tGL.glDeleteTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glDeleteTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic void glDepthFunc (int func) {\n@@ -123,7 +123,7 @@\n \t}\n \n \tpublic void glDrawArrays (int mode, int first, int count) {\n-\t\tGL.glDrawArraysEXT(mode, first, count);\n+\t\tGL.glDrawArrays(mode, first, count);\n \t}\n \n \tpublic void glDrawElements (int mode, int count, int type, Buffer indices) {\n@@ -147,7 +147,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, IntBuffer textures) {\n-\t\tGL.glGenTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glGenTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic int glGetError () {\n@@ -175,7 +175,7 @@\n \t}\n \n \tpublic void glPolygonOffset (float factor, float units) {\n-\t\tGL.glPolygonOffsetEXT(factor, units);\n+\t\tGL.glPolygonOffset(factor, units);\n \t}\n \n \tpublic void glReadPixels (int x, int y, int width, int height, int format, int type, Buffer pixels) {\n@@ -209,7 +209,7 @@\n \n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\n \t\tBuffer pixels) {\n-\t\tGL.glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n+\t\tGL.glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n \t}\n \n \tpublic void glViewport (int x, int y, int width, int height) {\n@@ -261,7 +261,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, int[] textures, int offset) {\n-\t\tGL.glGenTexturesEXT(n, toBuffer(textures, offset), 0);\n+\t\tGL.glGenTextures(n, toBuffer(textures, offset), 0);\n \t}\n \n \tpublic void glGetIntegerv (int pname, int[] params, int offset) {\n", "projectName": "libgdx.libgdx", "bugLineNum": 178, "bugNodeStartChar": 4860, "bugNodeLength": 36, "fixLineNum": 178, "fixNodeStartChar": 4860, "fixNodeLength": 33, "sourceBeforeFix": "GL.glPolygonOffsetEXT(factor,units)", "sourceAfterFix": "GL.glPolygonOffset(factor,units)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4665dcf9ab41c3c61cd42aad296ebfe518bfa003", "fixCommitParentSHA1": "52e3e25337f4fecbd4e5dbd9e8ef6f7506658c93", "bugFilePath": "backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java", "fixPatch": "diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\nindex 52bba05..c76f91a 100644\n--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n+++ b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n@@ -52,7 +52,7 @@\n \t}\n \n \tpublic void glBindTexture (int target, int texture) {\n-\t\tGL.glBindTextureEXT(target, texture);\n+\t\tGL.glBindTexture(target, texture);\n \t}\n \n \tpublic void glBlendFunc (int sfactor, int dfactor) {\n@@ -91,11 +91,11 @@\n \t}\n \n \tpublic void glCopyTexImage2D (int target, int level, int internalformat, int x, int y, int width, int height, int border) {\n-\t\tGL.glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border);\n+\t\tGL.glCopyTexImage2D(target, level, internalformat, x, y, width, height, border);\n \t}\n \n \tpublic void glCopyTexSubImage2D (int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) {\n-\t\tGL.glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height);\n+\t\tGL.glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);\n \t}\n \n \tpublic void glCullFace (int mode) {\n@@ -103,7 +103,7 @@\n \t}\n \n \tpublic void glDeleteTextures (int n, IntBuffer textures) {\n-\t\tGL.glDeleteTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glDeleteTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic void glDepthFunc (int func) {\n@@ -123,7 +123,7 @@\n \t}\n \n \tpublic void glDrawArrays (int mode, int first, int count) {\n-\t\tGL.glDrawArraysEXT(mode, first, count);\n+\t\tGL.glDrawArrays(mode, first, count);\n \t}\n \n \tpublic void glDrawElements (int mode, int count, int type, Buffer indices) {\n@@ -147,7 +147,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, IntBuffer textures) {\n-\t\tGL.glGenTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glGenTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic int glGetError () {\n@@ -175,7 +175,7 @@\n \t}\n \n \tpublic void glPolygonOffset (float factor, float units) {\n-\t\tGL.glPolygonOffsetEXT(factor, units);\n+\t\tGL.glPolygonOffset(factor, units);\n \t}\n \n \tpublic void glReadPixels (int x, int y, int width, int height, int format, int type, Buffer pixels) {\n@@ -209,7 +209,7 @@\n \n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\n \t\tBuffer pixels) {\n-\t\tGL.glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n+\t\tGL.glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n \t}\n \n \tpublic void glViewport (int x, int y, int width, int height) {\n@@ -261,7 +261,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, int[] textures, int offset) {\n-\t\tGL.glGenTexturesEXT(n, toBuffer(textures, offset), 0);\n+\t\tGL.glGenTextures(n, toBuffer(textures, offset), 0);\n \t}\n \n \tpublic void glGetIntegerv (int pname, int[] params, int offset) {\n", "projectName": "libgdx.libgdx", "bugLineNum": 178, "bugNodeStartChar": 4860, "bugNodeLength": 36, "fixLineNum": 178, "fixNodeStartChar": 4860, "fixNodeLength": 33, "sourceBeforeFix": "GL.glPolygonOffsetEXT(factor,units)", "sourceAfterFix": "GL.glPolygonOffset(factor,units)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "4665dcf9ab41c3c61cd42aad296ebfe518bfa003", "fixCommitParentSHA1": "52e3e25337f4fecbd4e5dbd9e8ef6f7506658c93", "bugFilePath": "backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java", "fixPatch": "diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\nindex 52bba05..c76f91a 100644\n--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n+++ b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n@@ -52,7 +52,7 @@\n \t}\n \n \tpublic void glBindTexture (int target, int texture) {\n-\t\tGL.glBindTextureEXT(target, texture);\n+\t\tGL.glBindTexture(target, texture);\n \t}\n \n \tpublic void glBlendFunc (int sfactor, int dfactor) {\n@@ -91,11 +91,11 @@\n \t}\n \n \tpublic void glCopyTexImage2D (int target, int level, int internalformat, int x, int y, int width, int height, int border) {\n-\t\tGL.glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border);\n+\t\tGL.glCopyTexImage2D(target, level, internalformat, x, y, width, height, border);\n \t}\n \n \tpublic void glCopyTexSubImage2D (int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) {\n-\t\tGL.glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height);\n+\t\tGL.glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);\n \t}\n \n \tpublic void glCullFace (int mode) {\n@@ -103,7 +103,7 @@\n \t}\n \n \tpublic void glDeleteTextures (int n, IntBuffer textures) {\n-\t\tGL.glDeleteTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glDeleteTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic void glDepthFunc (int func) {\n@@ -123,7 +123,7 @@\n \t}\n \n \tpublic void glDrawArrays (int mode, int first, int count) {\n-\t\tGL.glDrawArraysEXT(mode, first, count);\n+\t\tGL.glDrawArrays(mode, first, count);\n \t}\n \n \tpublic void glDrawElements (int mode, int count, int type, Buffer indices) {\n@@ -147,7 +147,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, IntBuffer textures) {\n-\t\tGL.glGenTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glGenTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic int glGetError () {\n@@ -175,7 +175,7 @@\n \t}\n \n \tpublic void glPolygonOffset (float factor, float units) {\n-\t\tGL.glPolygonOffsetEXT(factor, units);\n+\t\tGL.glPolygonOffset(factor, units);\n \t}\n \n \tpublic void glReadPixels (int x, int y, int width, int height, int format, int type, Buffer pixels) {\n@@ -209,7 +209,7 @@\n \n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\n \t\tBuffer pixels) {\n-\t\tGL.glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n+\t\tGL.glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n \t}\n \n \tpublic void glViewport (int x, int y, int width, int height) {\n@@ -261,7 +261,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, int[] textures, int offset) {\n-\t\tGL.glGenTexturesEXT(n, toBuffer(textures, offset), 0);\n+\t\tGL.glGenTextures(n, toBuffer(textures, offset), 0);\n \t}\n \n \tpublic void glGetIntegerv (int pname, int[] params, int offset) {\n", "projectName": "libgdx.libgdx", "bugLineNum": 212, "bugNodeStartChar": 6009, "bugNodeLength": 119, "fixLineNum": 212, "fixNodeStartChar": 6009, "fixNodeLength": 116, "sourceBeforeFix": "GL.glTexSubImage2DEXT(target,level,xoffset,yoffset,width,height,format,type,pixels,Memory.getPosition(pixels))", "sourceAfterFix": "GL.glTexSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels,Memory.getPosition(pixels))"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4665dcf9ab41c3c61cd42aad296ebfe518bfa003", "fixCommitParentSHA1": "52e3e25337f4fecbd4e5dbd9e8ef6f7506658c93", "bugFilePath": "backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java", "fixPatch": "diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\nindex 52bba05..c76f91a 100644\n--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n+++ b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n@@ -52,7 +52,7 @@\n \t}\n \n \tpublic void glBindTexture (int target, int texture) {\n-\t\tGL.glBindTextureEXT(target, texture);\n+\t\tGL.glBindTexture(target, texture);\n \t}\n \n \tpublic void glBlendFunc (int sfactor, int dfactor) {\n@@ -91,11 +91,11 @@\n \t}\n \n \tpublic void glCopyTexImage2D (int target, int level, int internalformat, int x, int y, int width, int height, int border) {\n-\t\tGL.glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border);\n+\t\tGL.glCopyTexImage2D(target, level, internalformat, x, y, width, height, border);\n \t}\n \n \tpublic void glCopyTexSubImage2D (int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) {\n-\t\tGL.glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height);\n+\t\tGL.glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);\n \t}\n \n \tpublic void glCullFace (int mode) {\n@@ -103,7 +103,7 @@\n \t}\n \n \tpublic void glDeleteTextures (int n, IntBuffer textures) {\n-\t\tGL.glDeleteTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glDeleteTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic void glDepthFunc (int func) {\n@@ -123,7 +123,7 @@\n \t}\n \n \tpublic void glDrawArrays (int mode, int first, int count) {\n-\t\tGL.glDrawArraysEXT(mode, first, count);\n+\t\tGL.glDrawArrays(mode, first, count);\n \t}\n \n \tpublic void glDrawElements (int mode, int count, int type, Buffer indices) {\n@@ -147,7 +147,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, IntBuffer textures) {\n-\t\tGL.glGenTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glGenTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic int glGetError () {\n@@ -175,7 +175,7 @@\n \t}\n \n \tpublic void glPolygonOffset (float factor, float units) {\n-\t\tGL.glPolygonOffsetEXT(factor, units);\n+\t\tGL.glPolygonOffset(factor, units);\n \t}\n \n \tpublic void glReadPixels (int x, int y, int width, int height, int format, int type, Buffer pixels) {\n@@ -209,7 +209,7 @@\n \n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\n \t\tBuffer pixels) {\n-\t\tGL.glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n+\t\tGL.glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n \t}\n \n \tpublic void glViewport (int x, int y, int width, int height) {\n@@ -261,7 +261,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, int[] textures, int offset) {\n-\t\tGL.glGenTexturesEXT(n, toBuffer(textures, offset), 0);\n+\t\tGL.glGenTextures(n, toBuffer(textures, offset), 0);\n \t}\n \n \tpublic void glGetIntegerv (int pname, int[] params, int offset) {\n", "projectName": "libgdx.libgdx", "bugLineNum": 212, "bugNodeStartChar": 6009, "bugNodeLength": 119, "fixLineNum": 212, "fixNodeStartChar": 6009, "fixNodeLength": 116, "sourceBeforeFix": "GL.glTexSubImage2DEXT(target,level,xoffset,yoffset,width,height,format,type,pixels,Memory.getPosition(pixels))", "sourceAfterFix": "GL.glTexSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels,Memory.getPosition(pixels))"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "4665dcf9ab41c3c61cd42aad296ebfe518bfa003", "fixCommitParentSHA1": "52e3e25337f4fecbd4e5dbd9e8ef6f7506658c93", "bugFilePath": "backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java", "fixPatch": "diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\nindex 52bba05..c76f91a 100644\n--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n+++ b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n@@ -52,7 +52,7 @@\n \t}\n \n \tpublic void glBindTexture (int target, int texture) {\n-\t\tGL.glBindTextureEXT(target, texture);\n+\t\tGL.glBindTexture(target, texture);\n \t}\n \n \tpublic void glBlendFunc (int sfactor, int dfactor) {\n@@ -91,11 +91,11 @@\n \t}\n \n \tpublic void glCopyTexImage2D (int target, int level, int internalformat, int x, int y, int width, int height, int border) {\n-\t\tGL.glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border);\n+\t\tGL.glCopyTexImage2D(target, level, internalformat, x, y, width, height, border);\n \t}\n \n \tpublic void glCopyTexSubImage2D (int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) {\n-\t\tGL.glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height);\n+\t\tGL.glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);\n \t}\n \n \tpublic void glCullFace (int mode) {\n@@ -103,7 +103,7 @@\n \t}\n \n \tpublic void glDeleteTextures (int n, IntBuffer textures) {\n-\t\tGL.glDeleteTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glDeleteTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic void glDepthFunc (int func) {\n@@ -123,7 +123,7 @@\n \t}\n \n \tpublic void glDrawArrays (int mode, int first, int count) {\n-\t\tGL.glDrawArraysEXT(mode, first, count);\n+\t\tGL.glDrawArrays(mode, first, count);\n \t}\n \n \tpublic void glDrawElements (int mode, int count, int type, Buffer indices) {\n@@ -147,7 +147,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, IntBuffer textures) {\n-\t\tGL.glGenTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glGenTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic int glGetError () {\n@@ -175,7 +175,7 @@\n \t}\n \n \tpublic void glPolygonOffset (float factor, float units) {\n-\t\tGL.glPolygonOffsetEXT(factor, units);\n+\t\tGL.glPolygonOffset(factor, units);\n \t}\n \n \tpublic void glReadPixels (int x, int y, int width, int height, int format, int type, Buffer pixels) {\n@@ -209,7 +209,7 @@\n \n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\n \t\tBuffer pixels) {\n-\t\tGL.glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n+\t\tGL.glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n \t}\n \n \tpublic void glViewport (int x, int y, int width, int height) {\n@@ -261,7 +261,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, int[] textures, int offset) {\n-\t\tGL.glGenTexturesEXT(n, toBuffer(textures, offset), 0);\n+\t\tGL.glGenTextures(n, toBuffer(textures, offset), 0);\n \t}\n \n \tpublic void glGetIntegerv (int pname, int[] params, int offset) {\n", "projectName": "libgdx.libgdx", "bugLineNum": 264, "bugNodeStartChar": 7534, "bugNodeLength": 53, "fixLineNum": 264, "fixNodeStartChar": 7534, "fixNodeLength": 50, "sourceBeforeFix": "GL.glGenTexturesEXT(n,toBuffer(textures,offset),0)", "sourceAfterFix": "GL.glGenTextures(n,toBuffer(textures,offset),0)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4665dcf9ab41c3c61cd42aad296ebfe518bfa003", "fixCommitParentSHA1": "52e3e25337f4fecbd4e5dbd9e8ef6f7506658c93", "bugFilePath": "backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java", "fixPatch": "diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\nindex 52bba05..c76f91a 100644\n--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n+++ b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n@@ -52,7 +52,7 @@\n \t}\n \n \tpublic void glBindTexture (int target, int texture) {\n-\t\tGL.glBindTextureEXT(target, texture);\n+\t\tGL.glBindTexture(target, texture);\n \t}\n \n \tpublic void glBlendFunc (int sfactor, int dfactor) {\n@@ -91,11 +91,11 @@\n \t}\n \n \tpublic void glCopyTexImage2D (int target, int level, int internalformat, int x, int y, int width, int height, int border) {\n-\t\tGL.glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border);\n+\t\tGL.glCopyTexImage2D(target, level, internalformat, x, y, width, height, border);\n \t}\n \n \tpublic void glCopyTexSubImage2D (int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) {\n-\t\tGL.glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height);\n+\t\tGL.glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);\n \t}\n \n \tpublic void glCullFace (int mode) {\n@@ -103,7 +103,7 @@\n \t}\n \n \tpublic void glDeleteTextures (int n, IntBuffer textures) {\n-\t\tGL.glDeleteTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glDeleteTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic void glDepthFunc (int func) {\n@@ -123,7 +123,7 @@\n \t}\n \n \tpublic void glDrawArrays (int mode, int first, int count) {\n-\t\tGL.glDrawArraysEXT(mode, first, count);\n+\t\tGL.glDrawArrays(mode, first, count);\n \t}\n \n \tpublic void glDrawElements (int mode, int count, int type, Buffer indices) {\n@@ -147,7 +147,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, IntBuffer textures) {\n-\t\tGL.glGenTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glGenTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic int glGetError () {\n@@ -175,7 +175,7 @@\n \t}\n \n \tpublic void glPolygonOffset (float factor, float units) {\n-\t\tGL.glPolygonOffsetEXT(factor, units);\n+\t\tGL.glPolygonOffset(factor, units);\n \t}\n \n \tpublic void glReadPixels (int x, int y, int width, int height, int format, int type, Buffer pixels) {\n@@ -209,7 +209,7 @@\n \n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\n \t\tBuffer pixels) {\n-\t\tGL.glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n+\t\tGL.glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n \t}\n \n \tpublic void glViewport (int x, int y, int width, int height) {\n@@ -261,7 +261,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, int[] textures, int offset) {\n-\t\tGL.glGenTexturesEXT(n, toBuffer(textures, offset), 0);\n+\t\tGL.glGenTextures(n, toBuffer(textures, offset), 0);\n \t}\n \n \tpublic void glGetIntegerv (int pname, int[] params, int offset) {\n", "projectName": "libgdx.libgdx", "bugLineNum": 264, "bugNodeStartChar": 7534, "bugNodeLength": 53, "fixLineNum": 264, "fixNodeStartChar": 7534, "fixNodeLength": 50, "sourceBeforeFix": "GL.glGenTexturesEXT(n,toBuffer(textures,offset),0)", "sourceAfterFix": "GL.glGenTextures(n,toBuffer(textures,offset),0)"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "f40a8efd0788a6385a62ef5052f71f3e6b7db295", "fixCommitParentSHA1": "fcda34896499d9f0c29ea5f000aee28854bdbfe2", "bugFilePath": "gdx/src/com/badlogic/gdx/math/Vector3.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/Vector3.java b/gdx/src/com/badlogic/gdx/math/Vector3.java\nindex f3b83ab..2531881 100644\n--- a/gdx/src/com/badlogic/gdx/math/Vector3.java\n+++ b/gdx/src/com/badlogic/gdx/math/Vector3.java\n@@ -224,7 +224,7 @@\n \r\n \t/** Divides this vector by the given vector */\r\n \tpublic Vector3 div (float vx, float vy, float vz) {\r\n-\t\treturn this.set(x/vx, y/vy, y/vz);\r\n+\t\treturn this.set(x/vx, y/vy, z/vz);\r\n \t}\r\n \r\n \t/** Divides this vector by the given vector */\r\n@@ -262,7 +262,7 @@\n \t * \r\n \t * @return This vector for chaining */\r\n \tpublic Vector3 nor () {\r\n-\t\tfloat len2 = this.len2();\r\n+\t\tfinal float len2 = this.len2();\r\n \t\tif (len2 == 0f || len2 == 1f)\r\n \t\t\treturn this;\r\n \t\treturn this.div((float)Math.sqrt(len2));\r\n@@ -392,9 +392,9 @@\n \t\tfinal float ty = target.y - y * dot;\r\n \t\tfinal float tz = target.z - z * dot;\r\n \t\tfinal float l2 = tx * tx + ty * ty + tz * tz;\r\n-\t\tfinal float dl = (l2 == 0 || l2 == 1f) ? 1f : 1f / (float)Math.sqrt(l2);\r\n+\t\tfinal float dl = st * ((l2 == 0 || l2 == 1f) ? 1f : 1f / (float)Math.sqrt(l2));\r\n \t\t\r\n-\t\treturn this.mul((float)Math.cos(theta)).add(tx * dl * st, ty * dl * st, tz * dl * st).nor();\r\n+\t\treturn this.mul((float)Math.cos(theta)).add(tx * dl, ty * dl, tz * dl).nor();\r\n \t}\r\n \r\n \t/** {@inheritDoc} */\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 227, "bugNodeStartChar": 7425, "bugNodeLength": 4, "fixLineNum": 227, "fixNodeStartChar": 7199, "fixNodeLength": 4, "sourceBeforeFix": "y / vz", "sourceAfterFix": "z / vz"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "f40a8efd0788a6385a62ef5052f71f3e6b7db295", "fixCommitParentSHA1": "fcda34896499d9f0c29ea5f000aee28854bdbfe2", "bugFilePath": "gdx/src/com/badlogic/gdx/math/Vector3.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/Vector3.java b/gdx/src/com/badlogic/gdx/math/Vector3.java\nindex f3b83ab..2531881 100644\n--- a/gdx/src/com/badlogic/gdx/math/Vector3.java\n+++ b/gdx/src/com/badlogic/gdx/math/Vector3.java\n@@ -224,7 +224,7 @@\n \r\n \t/** Divides this vector by the given vector */\r\n \tpublic Vector3 div (float vx, float vy, float vz) {\r\n-\t\treturn this.set(x/vx, y/vy, y/vz);\r\n+\t\treturn this.set(x/vx, y/vy, z/vz);\r\n \t}\r\n \r\n \t/** Divides this vector by the given vector */\r\n@@ -262,7 +262,7 @@\n \t * \r\n \t * @return This vector for chaining */\r\n \tpublic Vector3 nor () {\r\n-\t\tfloat len2 = this.len2();\r\n+\t\tfinal float len2 = this.len2();\r\n \t\tif (len2 == 0f || len2 == 1f)\r\n \t\t\treturn this;\r\n \t\treturn this.div((float)Math.sqrt(len2));\r\n@@ -392,9 +392,9 @@\n \t\tfinal float ty = target.y - y * dot;\r\n \t\tfinal float tz = target.z - z * dot;\r\n \t\tfinal float l2 = tx * tx + ty * ty + tz * tz;\r\n-\t\tfinal float dl = (l2 == 0 || l2 == 1f) ? 1f : 1f / (float)Math.sqrt(l2);\r\n+\t\tfinal float dl = st * ((l2 == 0 || l2 == 1f) ? 1f : 1f / (float)Math.sqrt(l2));\r\n \t\t\r\n-\t\treturn this.mul((float)Math.cos(theta)).add(tx * dl * st, ty * dl * st, tz * dl * st).nor();\r\n+\t\treturn this.mul((float)Math.cos(theta)).add(tx * dl, ty * dl, tz * dl).nor();\r\n \t}\r\n \r\n \t/** {@inheritDoc} */\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 227, "bugNodeStartChar": 7425, "bugNodeLength": 4, "fixLineNum": 227, "fixNodeStartChar": 7199, "fixNodeLength": 4, "sourceBeforeFix": "y / vz", "sourceAfterFix": "z / vz"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "f40a8efd0788a6385a62ef5052f71f3e6b7db295", "fixCommitParentSHA1": "fcda34896499d9f0c29ea5f000aee28854bdbfe2", "bugFilePath": "gdx/src/com/badlogic/gdx/math/Vector3.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/Vector3.java b/gdx/src/com/badlogic/gdx/math/Vector3.java\nindex f3b83ab..2531881 100644\n--- a/gdx/src/com/badlogic/gdx/math/Vector3.java\n+++ b/gdx/src/com/badlogic/gdx/math/Vector3.java\n@@ -224,7 +224,7 @@\n \r\n \t/** Divides this vector by the given vector */\r\n \tpublic Vector3 div (float vx, float vy, float vz) {\r\n-\t\treturn this.set(x/vx, y/vy, y/vz);\r\n+\t\treturn this.set(x/vx, y/vy, z/vz);\r\n \t}\r\n \r\n \t/** Divides this vector by the given vector */\r\n@@ -262,7 +262,7 @@\n \t * \r\n \t * @return This vector for chaining */\r\n \tpublic Vector3 nor () {\r\n-\t\tfloat len2 = this.len2();\r\n+\t\tfinal float len2 = this.len2();\r\n \t\tif (len2 == 0f || len2 == 1f)\r\n \t\t\treturn this;\r\n \t\treturn this.div((float)Math.sqrt(len2));\r\n@@ -392,9 +392,9 @@\n \t\tfinal float ty = target.y - y * dot;\r\n \t\tfinal float tz = target.z - z * dot;\r\n \t\tfinal float l2 = tx * tx + ty * ty + tz * tz;\r\n-\t\tfinal float dl = (l2 == 0 || l2 == 1f) ? 1f : 1f / (float)Math.sqrt(l2);\r\n+\t\tfinal float dl = st * ((l2 == 0 || l2 == 1f) ? 1f : 1f / (float)Math.sqrt(l2));\r\n \t\t\r\n-\t\treturn this.mul((float)Math.cos(theta)).add(tx * dl * st, ty * dl * st, tz * dl * st).nor();\r\n+\t\treturn this.mul((float)Math.cos(theta)).add(tx * dl, ty * dl, tz * dl).nor();\r\n \t}\r\n \r\n \t/** {@inheritDoc} */\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 265, "bugNodeStartChar": 8459, "bugNodeLength": 25, "fixLineNum": 265, "fixNodeStartChar": 8195, "fixNodeLength": 31, "sourceBeforeFix": "0", "sourceAfterFix": "16"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "fcda34896499d9f0c29ea5f000aee28854bdbfe2", "fixCommitParentSHA1": "0256c6ceff897814a8d532fc43d6006c8b9bd7b6", "bugFilePath": "gdx/src/com/badlogic/gdx/math/Vector3.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/Vector3.java b/gdx/src/com/badlogic/gdx/math/Vector3.java\nindex beb8d36..f3b83ab 100644\n--- a/gdx/src/com/badlogic/gdx/math/Vector3.java\n+++ b/gdx/src/com/badlogic/gdx/math/Vector3.java\n@@ -255,7 +255,7 @@\n \t\tfinal float b = vector.y - y;\r\n \t\tfinal float c = vector.z - z;\r\n \r\n-\t\treturn (float)Math.sqrt(a * a + b * b + c * b);\r\n+\t\treturn (float)Math.sqrt(a * a + b * b + c * c);\r\n \t}\r\n \r\n \t/** Normalizes this vector to unit length\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 258, "bugNodeStartChar": 8325, "bugNodeLength": 5, "fixLineNum": 258, "fixNodeStartChar": 8068, "fixNodeLength": 5, "sourceBeforeFix": "c * b", "sourceAfterFix": "c * c"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "fcda34896499d9f0c29ea5f000aee28854bdbfe2", "fixCommitParentSHA1": "0256c6ceff897814a8d532fc43d6006c8b9bd7b6", "bugFilePath": "gdx/src/com/badlogic/gdx/math/Vector3.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/Vector3.java b/gdx/src/com/badlogic/gdx/math/Vector3.java\nindex beb8d36..f3b83ab 100644\n--- a/gdx/src/com/badlogic/gdx/math/Vector3.java\n+++ b/gdx/src/com/badlogic/gdx/math/Vector3.java\n@@ -255,7 +255,7 @@\n \t\tfinal float b = vector.y - y;\r\n \t\tfinal float c = vector.z - z;\r\n \r\n-\t\treturn (float)Math.sqrt(a * a + b * b + c * b);\r\n+\t\treturn (float)Math.sqrt(a * a + b * b + c * c);\r\n \t}\r\n \r\n \t/** Normalizes this vector to unit length\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 258, "bugNodeStartChar": 8325, "bugNodeLength": 5, "fixLineNum": 258, "fixNodeStartChar": 8068, "fixNodeLength": 5, "sourceBeforeFix": "c * b", "sourceAfterFix": "c * c"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "0256c6ceff897814a8d532fc43d6006c8b9bd7b6", "fixCommitParentSHA1": "bc41c54cb9918f672e356777a19e46a73e714c8b", "bugFilePath": "gdx/src/com/badlogic/gdx/math/Vector3.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/Vector3.java b/gdx/src/com/badlogic/gdx/math/Vector3.java\nindex dee8938..beb8d36 100644\n--- a/gdx/src/com/badlogic/gdx/math/Vector3.java\n+++ b/gdx/src/com/badlogic/gdx/math/Vector3.java\n@@ -461,7 +461,7 @@\n \t\tfinal float b = y - this.y;\r\n \t\tfinal float c = z - this.z;\r\n \r\n-\t\treturn a * a + b * b + c * b;\r\n+\t\treturn a * a + b * b + c * c;\r\n \t}\r\n \r\n \t/** @return the distance between this point and the given point */\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 464, "bugNodeStartChar": 15956, "bugNodeLength": 5, "fixLineNum": 464, "fixNodeStartChar": 15493, "fixNodeLength": 5, "sourceBeforeFix": "c * b", "sourceAfterFix": "c * c"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "0256c6ceff897814a8d532fc43d6006c8b9bd7b6", "fixCommitParentSHA1": "bc41c54cb9918f672e356777a19e46a73e714c8b", "bugFilePath": "gdx/src/com/badlogic/gdx/math/Vector3.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/Vector3.java b/gdx/src/com/badlogic/gdx/math/Vector3.java\nindex dee8938..beb8d36 100644\n--- a/gdx/src/com/badlogic/gdx/math/Vector3.java\n+++ b/gdx/src/com/badlogic/gdx/math/Vector3.java\n@@ -461,7 +461,7 @@\n \t\tfinal float b = y - this.y;\r\n \t\tfinal float c = z - this.z;\r\n \r\n-\t\treturn a * a + b * b + c * b;\r\n+\t\treturn a * a + b * b + c * c;\r\n \t}\r\n \r\n \t/** @return the distance between this point and the given point */\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 464, "bugNodeStartChar": 15956, "bugNodeLength": 5, "fixLineNum": 464, "fixNodeStartChar": 15493, "fixNodeLength": 5, "sourceBeforeFix": "c * b", "sourceAfterFix": "c * c"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "4da179382de208b5d63ca0b017cb2aa25ba4461b", "fixCommitParentSHA1": "76bb307874cdbca0b3d0bccb460da5503126b2f2", "bugFilePath": "gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java b/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java\nindex 40007f0..926da82 100644\n--- a/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java\n+++ b/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java\n@@ -228,7 +228,7 @@\n \t\t\t\tint localtid = tileElement.getIntAttribute(\"id\", 0);\n \t\t\t\tTiledMapTile tile = tileset.getTile(firstgid + localtid);\n \t\t\t\tif (tile!= null) {\n-\t\t\t\t\tElement properties = element.getChildByName(\"properties\");\n+\t\t\t\t\tElement properties = tileElement.getChildByName(\"properties\");\n \t\t\t\t\tif (properties != null) {\n \t\t\t\t\t\tloadProperties(tile.getProperties(), properties);\n \t\t\t\t\t}\n", "projectName": "libgdx.libgdx", "bugLineNum": 231, "bugNodeStartChar": 8513, "bugNodeLength": 36, "fixLineNum": 231, "fixNodeStartChar": 8513, "fixNodeLength": 40, "sourceBeforeFix": "element.getChildByName(\"properties\")", "sourceAfterFix": "tileElement.getChildByName(\"properties\")"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4da179382de208b5d63ca0b017cb2aa25ba4461b", "fixCommitParentSHA1": "76bb307874cdbca0b3d0bccb460da5503126b2f2", "bugFilePath": "gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java b/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java\nindex 40007f0..926da82 100644\n--- a/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java\n+++ b/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java\n@@ -228,7 +228,7 @@\n \t\t\t\tint localtid = tileElement.getIntAttribute(\"id\", 0);\n \t\t\t\tTiledMapTile tile = tileset.getTile(firstgid + localtid);\n \t\t\t\tif (tile!= null) {\n-\t\t\t\t\tElement properties = element.getChildByName(\"properties\");\n+\t\t\t\t\tElement properties = tileElement.getChildByName(\"properties\");\n \t\t\t\t\tif (properties != null) {\n \t\t\t\t\t\tloadProperties(tile.getProperties(), properties);\n \t\t\t\t\t}\n", "projectName": "libgdx.libgdx", "bugLineNum": 231, "bugNodeStartChar": 8513, "bugNodeLength": 36, "fixLineNum": 231, "fixNodeStartChar": 8513, "fixNodeLength": 40, "sourceBeforeFix": "element.getChildByName(\"properties\")", "sourceAfterFix": "tileElement.getChildByName(\"properties\")"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "fb85c372214216ee1e0e04589c036fe5a5111f96", "fixCommitParentSHA1": "67a590d2b88a54a5b72517efaec88b2069eb2091", "bugFilePath": "gdx/src/com/badlogic/gdx/maps/loaders/GleedMapLoader.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/maps/loaders/GleedMapLoader.java b/gdx/src/com/badlogic/gdx/maps/loaders/GleedMapLoader.java\nindex b6cdca9..5973866 100644\n--- a/gdx/src/com/badlogic/gdx/maps/loaders/GleedMapLoader.java\n+++ b/gdx/src/com/badlogic/gdx/maps/loaders/GleedMapLoader.java\n@@ -341,7 +341,7 @@\n \t\t\n \t\tElement position = item.getChildByName(\"Position\");\n \t\trectangle.getRectangle().set(Float.parseFloat(position.getChildByName(\"X\").getText()),\n-\t\t\t\t\t\t\t\t\t\t\t  Float.parseFloat(position.getChildByName(\"Y\").getText()),\n+\t\t\t\t\t\t\t\t\t\t\t  -Float.parseFloat(position.getChildByName(\"Y\").getText()),\n \t\t\t\t\t\t\t\t\t\t\t  Float.parseFloat(item.getChildByName(\"Width\").getText()),\n \t\t\t\t\t\t\t\t\t\t\t  Float.parseFloat(item.getChildByName(\"Height\").getText()));\n \t\t\n", "projectName": "libgdx.libgdx", "bugLineNum": 344, "bugNodeStartChar": 11888, "bugNodeLength": 56, "fixLineNum": 344, "fixNodeStartChar": 11888, "fixNodeLength": 57, "sourceBeforeFix": "Float.parseFloat(position.getChildByName(\"Y\").getText())", "sourceAfterFix": "-Float.parseFloat(position.getChildByName(\"Y\").getText())"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "0ef571a65fc3e299a1c94cf24a1233a6fbd0a0d1", "fixCommitParentSHA1": "9b31e0c216473593dffe595723430846b6adc0c5", "bugFilePath": "gdx/src/com/badlogic/gdx/maps/loaders/GleedMapLoader.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/maps/loaders/GleedMapLoader.java b/gdx/src/com/badlogic/gdx/maps/loaders/GleedMapLoader.java\nindex b6cdca9..5973866 100644\n--- a/gdx/src/com/badlogic/gdx/maps/loaders/GleedMapLoader.java\n+++ b/gdx/src/com/badlogic/gdx/maps/loaders/GleedMapLoader.java\n@@ -341,7 +341,7 @@\n \t\t\n \t\tElement position = item.getChildByName(\"Position\");\n \t\trectangle.getRectangle().set(Float.parseFloat(position.getChildByName(\"X\").getText()),\n-\t\t\t\t\t\t\t\t\t\t\t  Float.parseFloat(position.getChildByName(\"Y\").getText()),\n+\t\t\t\t\t\t\t\t\t\t\t  -Float.parseFloat(position.getChildByName(\"Y\").getText()),\n \t\t\t\t\t\t\t\t\t\t\t  Float.parseFloat(item.getChildByName(\"Width\").getText()),\n \t\t\t\t\t\t\t\t\t\t\t  Float.parseFloat(item.getChildByName(\"Height\").getText()));\n \t\t\n", "projectName": "libgdx.libgdx", "bugLineNum": 344, "bugNodeStartChar": 11888, "bugNodeLength": 56, "fixLineNum": 344, "fixNodeStartChar": 11888, "fixNodeLength": 57, "sourceBeforeFix": "Float.parseFloat(position.getChildByName(\"Y\").getText())", "sourceAfterFix": "-Float.parseFloat(position.getChildByName(\"Y\").getText())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "6e2da060eef811f40aa6c33762520379fdfe7826", "fixCommitParentSHA1": "ef4fc223ffac2517cec9feb42707e52b05203b54", "bugFilePath": "extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePackerTest.java", "fixPatch": "diff --git a/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePackerTest.java b/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePackerTest.java\nindex 47e83d2..06543fb 100644\n--- a/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePackerTest.java\n+++ b/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePackerTest.java\n@@ -81,15 +81,15 @@\n \t\tint x = 20, y = 20;\r\n \t\tfor (Page page : pages) {\r\n \t\t\trenderer.setColor(Color.GRAY);\r\n-\t\t\trenderer.begin(ShapeType.FilledRectangle);\r\n+\t\t\trenderer.begin(ShapeType.Filled);\r\n \t\t\tfor (int i = 0; i < page.outputRects.size; i++) {\r\n \t\t\t\tRect rect = page.outputRects.get(i);\r\n-\t\t\t\trenderer.filledRect(x + rect.x + settings.paddingX, y + rect.y + settings.paddingY, rect.width - settings.paddingX,\r\n+\t\t\t\trenderer.rect(x + rect.x + settings.paddingX, y + rect.y + settings.paddingY, rect.width - settings.paddingX,\r\n \t\t\t\t\trect.height - settings.paddingY);\r\n \t\t\t}\r\n \t\t\trenderer.end();\r\n \t\t\trenderer.setColor(Color.RED);\r\n-\t\t\trenderer.begin(ShapeType.Rectangle);\r\n+\t\t\trenderer.begin(ShapeType.Line);\r\n \t\t\tfor (int i = 0; i < page.outputRects.size; i++) {\r\n \t\t\t\tRect rect = page.outputRects.get(i);\r\n \t\t\t\trenderer.rect(x + rect.x + settings.paddingX, y + rect.y + settings.paddingY, rect.width - settings.paddingX,\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 87, "bugNodeStartChar": 2980, "bugNodeLength": 154, "fixLineNum": 87, "fixNodeStartChar": 2895, "fixNodeLength": 147, "sourceBeforeFix": "renderer.filledRect(x + rect.x + settings.paddingX,y + rect.y + settings.paddingY,rect.width - settings.paddingX,rect.height - settings.paddingY)", "sourceAfterFix": "renderer.rect(x + rect.x + settings.paddingX,y + rect.y + settings.paddingY,rect.width - settings.paddingX,rect.height - settings.paddingY)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "6e2da060eef811f40aa6c33762520379fdfe7826", "fixCommitParentSHA1": "ef4fc223ffac2517cec9feb42707e52b05203b54", "bugFilePath": "extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePackerTest.java", "fixPatch": "diff --git a/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePackerTest.java b/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePackerTest.java\nindex 47e83d2..06543fb 100644\n--- a/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePackerTest.java\n+++ b/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePackerTest.java\n@@ -81,15 +81,15 @@\n \t\tint x = 20, y = 20;\r\n \t\tfor (Page page : pages) {\r\n \t\t\trenderer.setColor(Color.GRAY);\r\n-\t\t\trenderer.begin(ShapeType.FilledRectangle);\r\n+\t\t\trenderer.begin(ShapeType.Filled);\r\n \t\t\tfor (int i = 0; i < page.outputRects.size; i++) {\r\n \t\t\t\tRect rect = page.outputRects.get(i);\r\n-\t\t\t\trenderer.filledRect(x + rect.x + settings.paddingX, y + rect.y + settings.paddingY, rect.width - settings.paddingX,\r\n+\t\t\t\trenderer.rect(x + rect.x + settings.paddingX, y + rect.y + settings.paddingY, rect.width - settings.paddingX,\r\n \t\t\t\t\trect.height - settings.paddingY);\r\n \t\t\t}\r\n \t\t\trenderer.end();\r\n \t\t\trenderer.setColor(Color.RED);\r\n-\t\t\trenderer.begin(ShapeType.Rectangle);\r\n+\t\t\trenderer.begin(ShapeType.Line);\r\n \t\t\tfor (int i = 0; i < page.outputRects.size; i++) {\r\n \t\t\t\tRect rect = page.outputRects.get(i);\r\n \t\t\t\trenderer.rect(x + rect.x + settings.paddingX, y + rect.y + settings.paddingY, rect.width - settings.paddingX,\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 87, "bugNodeStartChar": 2980, "bugNodeLength": 154, "fixLineNum": 87, "fixNodeStartChar": 2895, "fixNodeLength": 147, "sourceBeforeFix": "renderer.filledRect(x + rect.x + settings.paddingX,y + rect.y + settings.paddingY,rect.width - settings.paddingX,rect.height - settings.paddingY)", "sourceAfterFix": "renderer.rect(x + rect.x + settings.paddingX,y + rect.y + settings.paddingY,rect.width - settings.paddingX,rect.height - settings.paddingY)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "7970b18a7777501be8290f7fff70e1ad1cf172ad", "fixCommitParentSHA1": "8723f1bd8fa6285e0ccbc1a950e22018b95c8092", "bugFilePath": "backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidLiveWallpaper.java", "fixPatch": "diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidLiveWallpaper.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidLiveWallpaper.java\nindex 4ca39bd..962696c 100755\n--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidLiveWallpaper.java\n+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidLiveWallpaper.java\n@@ -83,7 +83,7 @@\n \t\tgraphics = new AndroidGraphicsLiveWallpaper(this, config.useGL20, config.resolutionStrategy==null?new FillResolutionStrategy():config.resolutionStrategy);\r\n \t\tinput = AndroidInputFactory.newAndroidInput(this, this.getService(), null, config);\r\n \t\taudio = new AndroidAudio(this.getService(), config);\r\n-\t\tfiles = new AndroidFiles(this.getService().getAssets());\r\n+\t\tfiles = new AndroidFiles(this.getService().getAssets(), this.getService().getFilesDir().getAbsolutePath());\r\n \t\tthis.listener = listener;\r\n \t\t\r\n \t\tGdx.app = this;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 86, "bugNodeStartChar": 3300, "bugNodeLength": 47, "fixLineNum": 86, "fixNodeStartChar": 3215, "fixNodeLength": 98, "sourceBeforeFix": "new AndroidFiles(this.getService().getAssets())", "sourceAfterFix": "new AndroidFiles(this.getService().getAssets(),this.getService().getFilesDir().getAbsolutePath())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "f8cc32b31367f0cc4e42435a20793897cb432a40", "fixCommitParentSHA1": "aa0c34f66ba727cb353739c95107ca67d81de896", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/PerformanceCounter.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/PerformanceCounter.java b/gdx/src/com/badlogic/gdx/utils/PerformanceCounter.java\nindex 4ece8a3..651234d 100644\n--- a/gdx/src/com/badlogic/gdx/utils/PerformanceCounter.java\n+++ b/gdx/src/com/badlogic/gdx/utils/PerformanceCounter.java\n@@ -64,7 +64,7 @@\n \tpublic void tick() {\n \t\tfinal long t = System.nanoTime();\n \t\tif (lastTick > 0L)\n-\t\t\ttick((lastTick - t) * nano2seconds);\n+\t\t\ttick((t - lastTick) * nano2seconds);\n \t\tlastTick = t;\n \t}\n \t\n@@ -78,7 +78,7 @@\n \t\t\treturn;\n \t\t}\n \t\t\n-\t\ttime.put(delta);\n+\t\ttime.put(current);\n \t\t\n \t\tfinal float currentLoad = delta == 0f ? 0f : current / delta;\n \t\tload.put((delta > 1f) ? currentLoad : delta * currentLoad + (1f - delta) * load.latest);\n", "projectName": "libgdx.libgdx", "bugLineNum": 81, "bugNodeStartChar": 3076, "bugNodeLength": 15, "fixLineNum": 81, "fixNodeStartChar": 3076, "fixNodeLength": 17, "sourceBeforeFix": "time.put(delta)", "sourceAfterFix": "time.put(current)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "291fedc4f37709813c3544740c0563ee79358e65", "fixCommitParentSHA1": "e7d0513f3dc54fd08275ab7c26941edf07c98f3f", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/PerformanceCounter.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/PerformanceCounter.java b/gdx/src/com/badlogic/gdx/utils/PerformanceCounter.java\nindex 4ece8a3..651234d 100644\n--- a/gdx/src/com/badlogic/gdx/utils/PerformanceCounter.java\n+++ b/gdx/src/com/badlogic/gdx/utils/PerformanceCounter.java\n@@ -64,7 +64,7 @@\n \tpublic void tick() {\n \t\tfinal long t = System.nanoTime();\n \t\tif (lastTick > 0L)\n-\t\t\ttick((lastTick - t) * nano2seconds);\n+\t\t\ttick((t - lastTick) * nano2seconds);\n \t\tlastTick = t;\n \t}\n \t\n@@ -78,7 +78,7 @@\n \t\t\treturn;\n \t\t}\n \t\t\n-\t\ttime.put(delta);\n+\t\ttime.put(current);\n \t\t\n \t\tfinal float currentLoad = delta == 0f ? 0f : current / delta;\n \t\tload.put((delta > 1f) ? currentLoad : delta * currentLoad + (1f - delta) * load.latest);\n", "projectName": "libgdx.libgdx", "bugLineNum": 81, "bugNodeStartChar": 3076, "bugNodeLength": 15, "fixLineNum": 81, "fixNodeStartChar": 3076, "fixNodeLength": 17, "sourceBeforeFix": "time.put(delta)", "sourceAfterFix": "time.put(current)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "8998e8b7b968250096364d48006a5c8708531290", "fixCommitParentSHA1": "df7a8842394a86db56af50da65565cb58c7a2b8d", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/Texture.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/Texture.java b/gdx/src/com/badlogic/gdx/graphics/Texture.java\nindex 311683f..35c11a5 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/Texture.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/Texture.java\n@@ -127,7 +127,7 @@\n \t}\r\n \r\n \tpublic Texture (FileHandle file, Format format, boolean useMipMaps) {\r\n-\t\tif (file.name().contains(\".etc1\")) {\r\n+\t\tif (file.name().endsWith(\".etc1\")) {\r\n \t\t\tcreate(new ETC1TextureData(file, useMipMaps));\r\n \t\t} else {\r\n \t\t\tcreate(new FileTextureData(file, null, format, useMipMaps));\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 130, "bugNodeStartChar": 4612, "bugNodeLength": 29, "fixLineNum": 130, "fixNodeStartChar": 4483, "fixNodeLength": 29, "sourceBeforeFix": "file.name().contains(\".etc1\")", "sourceAfterFix": "file.name().endsWith(\".etc1\")"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "8998e8b7b968250096364d48006a5c8708531290", "fixCommitParentSHA1": "df7a8842394a86db56af50da65565cb58c7a2b8d", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/Texture.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/Texture.java b/gdx/src/com/badlogic/gdx/graphics/Texture.java\nindex 311683f..35c11a5 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/Texture.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/Texture.java\n@@ -127,7 +127,7 @@\n \t}\r\n \r\n \tpublic Texture (FileHandle file, Format format, boolean useMipMaps) {\r\n-\t\tif (file.name().contains(\".etc1\")) {\r\n+\t\tif (file.name().endsWith(\".etc1\")) {\r\n \t\t\tcreate(new ETC1TextureData(file, useMipMaps));\r\n \t\t} else {\r\n \t\t\tcreate(new FileTextureData(file, null, format, useMipMaps));\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 130, "bugNodeStartChar": 4612, "bugNodeLength": 29, "fixLineNum": 130, "fixNodeStartChar": 4483, "fixNodeLength": 29, "sourceBeforeFix": "file.name().contains(\".etc1\")", "sourceAfterFix": "file.name().endsWith(\".etc1\")"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "6b851cfa71f0ecc1c687d1c4be3b6dc07c1a8adf", "fixCommitParentSHA1": "4c12ff04366fd8aec66cc8e703180960848e5d1d", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/StringBuilder.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/StringBuilder.java b/gdx/src/com/badlogic/gdx/utils/StringBuilder.java\nindex db250b1..92f8a3f 100644\n--- a/gdx/src/com/badlogic/gdx/utils/StringBuilder.java\n+++ b/gdx/src/com/badlogic/gdx/utils/StringBuilder.java\n@@ -105,7 +105,7 @@\n \t\tif (newSize > chars.length) {\r\n \t\t\tenlargeBuffer(newSize);\r\n \t\t}\r\n-\t\tSystem.arraycopy(value, 0, value, length, value.length);\r\n+\t\tSystem.arraycopy(value, 0, chars, length, value.length);\r\n \t\tlength = newSize;\r\n \t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 108, "bugNodeStartChar": 3574, "bugNodeLength": 55, "fixLineNum": 108, "fixNodeStartChar": 3467, "fixNodeLength": 55, "sourceBeforeFix": "System.arraycopy(value,0,value,length,value.length)", "sourceAfterFix": "System.arraycopy(value,0,chars,length,value.length)"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "2b46aa85e6b2e6cc8738c25f12696ad5b904a6a6", "fixCommitParentSHA1": "9555b24a7865f2183c8b430371d28d04e3257a8d", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/BufferUtils.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/BufferUtils.java b/gdx/src/com/badlogic/gdx/utils/BufferUtils.java\nindex 391c422..b29ffc1 100644\n--- a/gdx/src/com/badlogic/gdx/utils/BufferUtils.java\n+++ b/gdx/src/com/badlogic/gdx/utils/BufferUtils.java\n@@ -301,7 +301,7 @@\n \t */\r\n \tpublic static long getUnsafeByteBufferAddress(ByteBuffer buffer) {\r\n \t\tsynchronized(unsafeBuffers) {\r\n-\t\t\tif (unsafeBuffers.contains(buffer, true))\r\n+\t\t\tif (!unsafeBuffers.contains(buffer, true))\r\n \t\t\t\treturn 0;\r\n \t\t}\r\n \t\treturn getByteBufferAddress(buffer);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 304, "bugNodeStartChar": 14054, "bugNodeLength": 36, "fixLineNum": 304, "fixNodeStartChar": 13751, "fixNodeLength": 37, "sourceBeforeFix": "unsafeBuffers.contains(buffer,true)", "sourceAfterFix": "!unsafeBuffers.contains(buffer,true)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "a96276ab5c62a694fd8cb0630aba97e903f1d719", "fixCommitParentSHA1": "c407c24e33e183000173c21827e9723dbe66b87f", "bugFilePath": "extensions/model-loaders/model-loaders/src/com/badlogic/gdx/graphics/g3d/test/SkeletonModelViewer.java", "fixPatch": "diff --git a/extensions/model-loaders/model-loaders/src/com/badlogic/gdx/graphics/g3d/test/SkeletonModelViewer.java b/extensions/model-loaders/model-loaders/src/com/badlogic/gdx/graphics/g3d/test/SkeletonModelViewer.java\nindex bc3ccf0..93a0d10 100644\n--- a/extensions/model-loaders/model-loaders/src/com/badlogic/gdx/graphics/g3d/test/SkeletonModelViewer.java\n+++ b/extensions/model-loaders/model-loaders/src/com/badlogic/gdx/graphics/g3d/test/SkeletonModelViewer.java\n@@ -75,7 +75,7 @@\n \t\tcam = new PerspectiveCamera(67, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());\r\n \t\tcam.position.set(bounds.getCenter().cpy().add(len, len, len));\r\n \t\tcam.lookAt(bounds.getCenter().x, bounds.getCenter().y, bounds.getCenter().z);\r\n-\t\tcam.near = 0.1f;\r\n+\t\tcam.near = 1f;\r\n \t\tcam.far = 1000;\r\n \r\n \t\trenderer = new ImmediateModeRenderer10();\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 78, "bugNodeStartChar": 3341, "bugNodeLength": 15, "fixLineNum": 78, "fixNodeStartChar": 3264, "fixNodeLength": 13, "sourceBeforeFix": "cam.near=0.1f", "sourceAfterFix": "cam.near=1f"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "d4ad535a861f0d63517c64b38ee310bfdeccd3d3", "fixCommitParentSHA1": "85a0e7e6a0fecb8fe1e70c35fa752870beb810a5", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java b/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\nindex 9b94e49..af7381c 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\n@@ -513,7 +513,7 @@\n \r\n \t/** Calls {@link #filledCircle(float, float, float, int)} by estimating the number of segments needed for a smooth circle. */\r\n \tpublic void filledCircle (float x, float y, float radius) {\r\n-\t\tfilledCircle(x, y, radius, (int)(4 * (float)Math.sqrt(radius)));\r\n+\t\tfilledCircle(x, y, radius, (int)(6 * (float)Math.cbrt(radius)));\r\n \t}\r\n \r\n \tpublic void filledCircle (float x, float y, float radius, int segments) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 516, "bugNodeStartChar": 19180, "bugNodeLength": 28, "fixLineNum": 516, "fixNodeStartChar": 18665, "fixNodeLength": 28, "sourceBeforeFix": "4 * (float)Math.sqrt(radius)", "sourceAfterFix": "6 * (float)Math.cbrt(radius)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "1c5101ae289f2ea00a00536966a9614f4e33d7a4", "fixCommitParentSHA1": "33e6144a8e62a077e46962f79fe33325c48026b4", "bugFilePath": "backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSInput.java", "fixPatch": "diff --git a/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSInput.java b/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSInput.java\nindex ecce1ad..62719d6 100644\n--- a/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSInput.java\n+++ b/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSInput.java\n@@ -308,7 +308,7 @@\n \t\t\t\t\tbreak;\r\n \t\t\t\t}\r\n \t\t\t}\r\n-\t\t\ttouchEventPool.free(touchEvents);\r\n+\t\t\ttouchEventPool.freeAll(touchEvents);\r\n \t\t\ttouchEvents.clear();\r\n \t\t}\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 311, "bugNodeStartChar": 7631, "bugNodeLength": 32, "fixLineNum": 311, "fixNodeStartChar": 7321, "fixNodeLength": 35, "sourceBeforeFix": "touchEventPool.free(touchEvents)", "sourceAfterFix": "touchEventPool.freeAll(touchEvents)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "1c5101ae289f2ea00a00536966a9614f4e33d7a4", "fixCommitParentSHA1": "33e6144a8e62a077e46962f79fe33325c48026b4", "bugFilePath": "backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSInput.java", "fixPatch": "diff --git a/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSInput.java b/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSInput.java\nindex ecce1ad..62719d6 100644\n--- a/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSInput.java\n+++ b/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSInput.java\n@@ -308,7 +308,7 @@\n \t\t\t\t\tbreak;\r\n \t\t\t\t}\r\n \t\t\t}\r\n-\t\t\ttouchEventPool.free(touchEvents);\r\n+\t\t\ttouchEventPool.freeAll(touchEvents);\r\n \t\t\ttouchEvents.clear();\r\n \t\t}\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 311, "bugNodeStartChar": 7631, "bugNodeLength": 32, "fixLineNum": 311, "fixNodeStartChar": 7321, "fixNodeLength": 35, "sourceBeforeFix": "touchEventPool.free(touchEvents)", "sourceAfterFix": "touchEventPool.freeAll(touchEvents)"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "01d1bff4eb9ad9fe86b15551847e8ffeaac80b5b", "fixCommitParentSHA1": "17f3e487688d66bcec99510e3f2b1d581d3e28de", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java\nindex 18812af..b693ca9 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java\n@@ -488,7 +488,7 @@\n \t\telse\r\n \t\t\ty -= (int)(maxY - visualAmountY);\r\n \r\n-\t\tif (scrollbarsOnTop && scrollX) {\r\n+\t\tif (!fadeScrollBars && scrollbarsOnTop && scrollX) {\r\n \t\t\tfloat scrollbarHeight = 0;\r\n \t\t\tif (style.hScrollKnob != null) scrollbarHeight = style.hScrollKnob.getMinHeight();\r\n \t\t\tif (style.hScroll != null) scrollbarHeight = Math.max(scrollbarHeight, style.hScroll.getMinHeight());\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 491, "bugNodeStartChar": 17833, "bugNodeLength": 26, "fixLineNum": 491, "fixNodeStartChar": 17343, "fixNodeLength": 45, "sourceBeforeFix": "scrollbarsOnTop && scrollX", "sourceAfterFix": "!fadeScrollBars && scrollbarsOnTop && scrollX"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "d85d31df6e42724baefea956d4c74ac62340601a", "fixCommitParentSHA1": "de0c4d4c37435ce0c7287cd6846dde492ca1c51c", "bugFilePath": "backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidAudio.java", "fixPatch": "diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidAudio.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidAudio.java\nindex f58bc57..b90a046 100644\n--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidAudio.java\n+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidAudio.java\n@@ -40,12 +40,12 @@\n  * \r\n  * @author mzechner */\r\n public final class AndroidAudio implements Audio {\r\n-\tprivate SoundPool soundPool;\r\n+\tprivate final SoundPool soundPool;\r\n \tprivate final AudioManager manager;\r\n \tprotected final List<AndroidMusic> musics = new ArrayList<AndroidMusic>();\r\n \r\n \tpublic AndroidAudio (Activity context, AndroidApplicationConfiguration config) {\r\n-\t\tsoundPool = new SoundPool(config.maxSimultaniousSounds, AudioManager.STREAM_MUSIC, 100);\r\n+\t\tsoundPool = new SoundPool(config.maxSimultaneousSounds, AudioManager.STREAM_MUSIC, 100);\r\n \t\tmanager = (AudioManager)context.getSystemService(Context.AUDIO_SERVICE);\r\n \t\tcontext.setVolumeControlStream(AudioManager.STREAM_MUSIC);\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 43, "bugNodeStartChar": 1607, "bugNodeLength": 28, "fixLineNum": 43, "fixNodeStartChar": 1565, "fixNodeLength": 34, "sourceBeforeFix": "2", "sourceAfterFix": "18"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "de0c4d4c37435ce0c7287cd6846dde492ca1c51c", "fixCommitParentSHA1": "b5c5096c49c439ddb97cd7253520f9485fe88f24", "bugFilePath": "gdx/src/com/badlogic/gdx/math/Intersector.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/Intersector.java b/gdx/src/com/badlogic/gdx/math/Intersector.java\nindex cb89080..47053d0 100644\n--- a/gdx/src/com/badlogic/gdx/math/Intersector.java\n+++ b/gdx/src/com/badlogic/gdx/math/Intersector.java\n@@ -699,7 +699,7 @@\n \t\t\t\t}\n \t\t\t}\n \n-\t\t\tif (!((min1 < min2 && max1 > min2) || (min2 < min1 && max2 > min1))) {\n+\t\t\tif (!((min1 <= min2 && max1 >= min2) || (min2 <= min1 && max2 >= min1))) {\n \t\t\t\treturn false;\n \t\t\t} else {\n \t\t\t\tfloat o = Math.min(max1, max2) - Math.max(min1, min2);\n@@ -764,7 +764,7 @@\n \t\t\t\t}\n \t\t\t}\n \n-\t\t\tif (!((min1 < min2 && max1 > min2) || (min2 < min1 && max2 > min1))) {\n+\t\t\tif (!((min1 <= min2 && max1 >= min2) || (min2 <= min1 && max2 >= min1))) {\n \t\t\t\treturn false;\n \t\t\t} else {\n \t\t\t\tfloat o = Math.min(max1, max2) - Math.max(min1, min2);\n", "projectName": "libgdx.libgdx", "bugLineNum": 702, "bugNodeStartChar": 24176, "bugNodeLength": 11, "fixLineNum": 702, "fixNodeStartChar": 24176, "fixNodeLength": 12, "sourceBeforeFix": "min1 < min2", "sourceAfterFix": "min1 <= min2"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "de0c4d4c37435ce0c7287cd6846dde492ca1c51c", "fixCommitParentSHA1": "b5c5096c49c439ddb97cd7253520f9485fe88f24", "bugFilePath": "gdx/src/com/badlogic/gdx/math/Intersector.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/Intersector.java b/gdx/src/com/badlogic/gdx/math/Intersector.java\nindex cb89080..47053d0 100644\n--- a/gdx/src/com/badlogic/gdx/math/Intersector.java\n+++ b/gdx/src/com/badlogic/gdx/math/Intersector.java\n@@ -699,7 +699,7 @@\n \t\t\t\t}\n \t\t\t}\n \n-\t\t\tif (!((min1 < min2 && max1 > min2) || (min2 < min1 && max2 > min1))) {\n+\t\t\tif (!((min1 <= min2 && max1 >= min2) || (min2 <= min1 && max2 >= min1))) {\n \t\t\t\treturn false;\n \t\t\t} else {\n \t\t\t\tfloat o = Math.min(max1, max2) - Math.max(min1, min2);\n@@ -764,7 +764,7 @@\n \t\t\t\t}\n \t\t\t}\n \n-\t\t\tif (!((min1 < min2 && max1 > min2) || (min2 < min1 && max2 > min1))) {\n+\t\t\tif (!((min1 <= min2 && max1 >= min2) || (min2 <= min1 && max2 >= min1))) {\n \t\t\t\treturn false;\n \t\t\t} else {\n \t\t\t\tfloat o = Math.min(max1, max2) - Math.max(min1, min2);\n", "projectName": "libgdx.libgdx", "bugLineNum": 767, "bugNodeStartChar": 25888, "bugNodeLength": 11, "fixLineNum": 767, "fixNodeStartChar": 25888, "fixNodeLength": 12, "sourceBeforeFix": "min1 < min2", "sourceAfterFix": "min1 <= min2"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "9de0ad01e11f059efcad774df859d335f37c7da0", "fixCommitParentSHA1": "b5c5096c49c439ddb97cd7253520f9485fe88f24", "bugFilePath": "backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidAudio.java", "fixPatch": "diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidAudio.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidAudio.java\nindex f58bc57..b90a046 100644\n--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidAudio.java\n+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidAudio.java\n@@ -40,12 +40,12 @@\n  * \r\n  * @author mzechner */\r\n public final class AndroidAudio implements Audio {\r\n-\tprivate SoundPool soundPool;\r\n+\tprivate final SoundPool soundPool;\r\n \tprivate final AudioManager manager;\r\n \tprotected final List<AndroidMusic> musics = new ArrayList<AndroidMusic>();\r\n \r\n \tpublic AndroidAudio (Activity context, AndroidApplicationConfiguration config) {\r\n-\t\tsoundPool = new SoundPool(config.maxSimultaniousSounds, AudioManager.STREAM_MUSIC, 100);\r\n+\t\tsoundPool = new SoundPool(config.maxSimultaneousSounds, AudioManager.STREAM_MUSIC, 100);\r\n \t\tmanager = (AudioManager)context.getSystemService(Context.AUDIO_SERVICE);\r\n \t\tcontext.setVolumeControlStream(AudioManager.STREAM_MUSIC);\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 43, "bugNodeStartChar": 1607, "bugNodeLength": 28, "fixLineNum": 43, "fixNodeStartChar": 1565, "fixNodeLength": 34, "sourceBeforeFix": "2", "sourceAfterFix": "18"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "0ee231215a264eca4b0f828416672632162ba65a", "fixCommitParentSHA1": "c8cff1fe6e5779b1c0fe2c316ce321b830813c96", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/OrthographicCamera.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/OrthographicCamera.java b/gdx/src/com/badlogic/gdx/graphics/OrthographicCamera.java\nindex 851e480..a8abbec 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/OrthographicCamera.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/OrthographicCamera.java\n@@ -100,7 +100,7 @@\n \t\tMatrix4 transform = new Matrix4();\r\n \t\tVector3 dir = new Vector3(-1, 0, 1).nor();\r\n \t\tfloat rotAngle = (float)Math.toDegrees(Math.asin(Math.tan(Math.toRadians(angle))));\r\n-\t\ttransform.setToRotation(new Vector3(1, 0, 1).nor(), angle);\r\n+\t\ttransform.setToRotation(new Vector3(1, 0, 1).nor(), rotAngle);\r\n \t\tdir.mul(transform).nor();\r\n \t\treturn dir;\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 103, "bugNodeStartChar": 3540, "bugNodeLength": 58, "fixLineNum": 103, "fixNodeStartChar": 3438, "fixNodeLength": 61, "sourceBeforeFix": "transform.setToRotation(new Vector3(1,0,1).nor(),angle)", "sourceAfterFix": "transform.setToRotation(new Vector3(1,0,1).nor(),rotAngle)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "d78e066362deca6a9112d9330524825539db447f", "fixCommitParentSHA1": "05d61eb7582ef7034a449abc3f84afb29e93ba57", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/utils/TiledDrawable.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/TiledDrawable.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/TiledDrawable.java\nindex a729c62..1b4d2ea 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/TiledDrawable.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/TiledDrawable.java\n@@ -22,7 +22,7 @@\n \r\n \tpublic void draw (SpriteBatch batch, float x, float y, float width, float height) {\r\n \t\tTextureRegion region = getRegion();\r\n-\t\tfloat regionWidth = region.getRegionWidth(), regionHeight = region.getRegionWidth();\r\n+\t\tfloat regionWidth = region.getRegionWidth(), regionHeight = region.getRegionHeight();\r\n \t\tfloat remainingX = width % regionWidth, remainingY = height % regionHeight;\r\n \t\tfloat startX = x, startY = y;\r\n \t\tfloat endX = x + width - remainingX, endY = y + height - remainingY;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 25, "bugNodeStartChar": 768, "bugNodeLength": 23, "fixLineNum": 25, "fixNodeStartChar": 744, "fixNodeLength": 24, "sourceBeforeFix": "region.getRegionWidth()", "sourceAfterFix": "region.getRegionHeight()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d78e066362deca6a9112d9330524825539db447f", "fixCommitParentSHA1": "05d61eb7582ef7034a449abc3f84afb29e93ba57", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/utils/TiledDrawable.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/TiledDrawable.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/TiledDrawable.java\nindex a729c62..1b4d2ea 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/TiledDrawable.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/TiledDrawable.java\n@@ -22,7 +22,7 @@\n \r\n \tpublic void draw (SpriteBatch batch, float x, float y, float width, float height) {\r\n \t\tTextureRegion region = getRegion();\r\n-\t\tfloat regionWidth = region.getRegionWidth(), regionHeight = region.getRegionWidth();\r\n+\t\tfloat regionWidth = region.getRegionWidth(), regionHeight = region.getRegionHeight();\r\n \t\tfloat remainingX = width % regionWidth, remainingY = height % regionHeight;\r\n \t\tfloat startX = x, startY = y;\r\n \t\tfloat endX = x + width - remainingX, endY = y + height - remainingY;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 25, "bugNodeStartChar": 768, "bugNodeLength": 23, "fixLineNum": 25, "fixNodeStartChar": 744, "fixNodeLength": 24, "sourceBeforeFix": "region.getRegionWidth()", "sourceAfterFix": "region.getRegionHeight()"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "40218e3f74aa53cf5d6bc18690f6a5d9a24f42dd", "fixCommitParentSHA1": "94ac820748fd5f9d4ef536622933cfc719905945", "bugFilePath": "gdx/src/com/badlogic/gdx/files/FileHandle.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/files/FileHandle.java b/gdx/src/com/badlogic/gdx/files/FileHandle.java\nindex ab42c90..71c9652 100644\n--- a/gdx/src/com/badlogic/gdx/files/FileHandle.java\n+++ b/gdx/src/com/badlogic/gdx/files/FileHandle.java\n@@ -222,7 +222,7 @@\n \t\t\t\tint count = input.read(buffer, position, buffer.length - position);\r\n \t\t\t\tif (count == -1) break;\r\n \t\t\t\tposition += count;\r\n-\t\t\t\tif (position == buffer.length) {\r\n+\t\t\t\tif (count == 0 && position == buffer.length) {\r\n \t\t\t\t\t// Grow buffer.\r\n \t\t\t\t\tbyte[] newBuffer = new byte[buffer.length * 2];\r\n \t\t\t\t\tSystem.arraycopy(buffer, 0, newBuffer, 0, position);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 225, "bugNodeStartChar": 8676, "bugNodeLength": 25, "fixLineNum": 225, "fixNodeStartChar": 8452, "fixNodeLength": 39, "sourceBeforeFix": "position == buffer.length", "sourceAfterFix": "count == 0 && position == buffer.length"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "2763f44d32286938fdd6c5afd58d4a69bc8bce8f", "fixCommitParentSHA1": "7a125ec13d5fb4391ec7e460a2c0e1d0be0a6842", "bugFilePath": "backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL11.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL11.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL11.java\nindex cd6b62a..99f4296 100644\n--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL11.java\n+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL11.java\n@@ -127,7 +127,7 @@\n \r\n \tpublic void glGenBuffers (int n, int[] buffers, int offset) {\r\n \t\tfor (int i = offset; i < offset + n; i++)\r\n-\t\t\tbuffers[offset] = GL15.glGenBuffers();\r\n+\t\t\tbuffers[i] = GL15.glGenBuffers();\r\n \t}\r\n \r\n \tpublic void glGenBuffers (int n, IntBuffer buffers) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 130, "bugNodeStartChar": 4535, "bugNodeLength": 15, "fixLineNum": 130, "fixNodeStartChar": 4406, "fixNodeLength": 10, "sourceBeforeFix": "buffers[offset]", "sourceAfterFix": "buffers[i]"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "ff779778bb4c3ded0c996f5b7c45c403c18ce2e3", "fixCommitParentSHA1": "306a7132ffbf093d5de5239d0f5fd9cc52ec6990", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java\nindex d935c99..e3b85d6 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java\n@@ -62,7 +62,7 @@\n \t * @param style the {@link SliderStyle} */\r\n \tpublic Slider (float min, float max, float steps, boolean vertical, SliderStyle style) {\r\n \t\tif (min > max) throw new IllegalArgumentException(\"min must be > max: \" + min + \" > \" + max);\r\n-\t\tif (steps < 0) throw new IllegalArgumentException(\"steps must be > 0: \" + steps);\r\n+\t\tif (steps <= 0) throw new IllegalArgumentException(\"steps must be > 0: \" + steps);\r\n \t\tsetStyle(style);\r\n \t\tthis.min = min;\r\n \t\tthis.max = max;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 65, "bugNodeStartChar": 3323, "bugNodeLength": 9, "fixLineNum": 65, "fixNodeStartChar": 3259, "fixNodeLength": 10, "sourceBeforeFix": "steps < 0", "sourceAfterFix": "steps <= 0"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "d3cf1e5dbb63ee6e35ef5d76e9f74ee06a83681c", "fixCommitParentSHA1": "7414b1757c0ef6048b80869f260af3701d2bfadd", "bugFilePath": "demos/metagun/metagun-desktop/src/com/mojang/metagun/screen/Screen.java", "fixPatch": "diff --git a/demos/metagun/metagun-desktop/src/com/mojang/metagun/screen/Screen.java b/demos/metagun/metagun-desktop/src/com/mojang/metagun/screen/Screen.java\nindex 3c4173c..54385f7 100644\n--- a/demos/metagun/metagun-desktop/src/com/mojang/metagun/screen/Screen.java\n+++ b/demos/metagun/metagun-desktop/src/com/mojang/metagun/screen/Screen.java\n@@ -36,7 +36,7 @@\n \tpublic void draw (TextureRegion region, int x, int y) {\r\n \t\tint width = region.getRegionWidth();\r\n \t\tif (width < 0) width = -width;\r\n-\t\tspriteBatch.draw(region, x, y, width, -region.getRegionHeight());\r\n+\t\tspriteBatch.draw(region, x, y, width, region.getRegionHeight());\r\n \t}\r\n \r\n \tpublic void drawString (String string, int x, int y) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 39, "bugNodeStartChar": 1122, "bugNodeLength": 25, "fixLineNum": 39, "fixNodeStartChar": 1084, "fixNodeLength": 24, "sourceBeforeFix": "-region.getRegionHeight()", "sourceAfterFix": "region.getRegionHeight()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "f7b2c3d92be930928a5e181fc81a851cee39166d", "fixCommitParentSHA1": "8083341af94d39e66fe676b8b312b4793548eccc", "bugFilePath": "backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSInput.java", "fixPatch": "diff --git a/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSInput.java b/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSInput.java\nindex aaf51f9..8e09a69 100644\n--- a/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSInput.java\n+++ b/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSInput.java\n@@ -256,7 +256,7 @@\n \t\t\t\t\t\tbreak;\r\n \t\t\t\t\tcase UITouchPhase.Moved:\r\n \t\t\t\t\tcase UITouchPhase.Stationary:\r\n-\t\t\t\t\t\tinputProcessor.touchDown(event.x, event.y, event.pointer, Buttons.LEFT);\r\n+\t\t\t\t\t\tinputProcessor.touchDragged(event.x, event.y, event.pointer);\r\n \t\t\t\t\t\tbreak;\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 259, "bugNodeStartChar": 5722, "bugNodeLength": 71, "fixLineNum": 259, "fixNodeStartChar": 5464, "fixNodeLength": 60, "sourceBeforeFix": "inputProcessor.touchDown(event.x,event.y,event.pointer,Buttons.LEFT)", "sourceAfterFix": "inputProcessor.touchDragged(event.x,event.y,event.pointer)"}, {"bugType": "SWAP_BOOLEAN_LITERAL", "fixCommitSHA1": "0dd6d34268482b3b1a72439b111e9dbbe605852f", "fixCommitParentSHA1": "24041b573d0cb157432276f19c2be1f83b954eb7", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/Array.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/Array.java b/gdx/src/com/badlogic/gdx/utils/Array.java\nindex 35d4178..d2df0b8 100644\n--- a/gdx/src/com/badlogic/gdx/utils/Array.java\n+++ b/gdx/src/com/badlogic/gdx/utils/Array.java\n@@ -64,7 +64,7 @@\n \r\n \t/** Creates an ordered array with {@link #items} of the specified type and a capacity of 16. */\r\n \tpublic Array (Class<T> arrayType) {\r\n-\t\tthis(false, 16, arrayType);\r\n+\t\tthis(true, 16, arrayType);\r\n \t}\r\n \r\n \t/** Creates a new array containing the elements in the specified array. The new array will have the same type of backing array\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 67, "bugNodeStartChar": 2771, "bugNodeLength": 27, "fixLineNum": 67, "fixNodeStartChar": 2705, "fixNodeLength": 26, "sourceBeforeFix": "this(false,16,arrayType); ", "sourceAfterFix": "this(true,16,arrayType); "}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "e4a9393a9957e7f6e114ec3aba69fd849e2e1dd5", "fixCommitParentSHA1": "23d47f3ca62459ca87cb77202249f3576aa28725", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g2d/Sprite.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/Sprite.java b/gdx/src/com/badlogic/gdx/graphics/g2d/Sprite.java\nindex fec8f42..309224d 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g2d/Sprite.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/Sprite.java\n@@ -528,7 +528,7 @@\n \t}\r\n \r\n \tpublic void setV (float v) {\r\n-\t\tsuper.setV(u);\r\n+\t\tsuper.setV(v);\r\n \t\tvertices[V2] = v;\r\n \t\tvertices[V3] = v;\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 531, "bugNodeStartChar": 17141, "bugNodeLength": 13, "fixLineNum": 531, "fixNodeStartChar": 16611, "fixNodeLength": 13, "sourceBeforeFix": "super.setV(u)", "sourceAfterFix": "super.setV(v)"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "719b463bcd6b7395933259ee4eeaae279f315cac", "fixCommitParentSHA1": "a356f5d144b5c5c09cd7d4fd47b0e0d14e4d880d", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java\nindex 755c28a..98ef69b 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java\n@@ -555,7 +555,7 @@\n \t\tif (ownsBatch) batch.dispose();\r\n \t}\r\n \r\n-\tstatic final class TouchFocus {\r\n+\tpublic static final class TouchFocus {\r\n \t\tstatic final Pool<TouchFocus> pool = new Pool<TouchFocus>(4, 16) {\r\n \t\t\tprotected TouchFocus newObject () {\r\n \t\t\t\treturn new TouchFocus();\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 558, "bugNodeStartChar": 21628, "bugNodeLength": 323, "fixLineNum": 558, "fixNodeStartChar": 21071, "fixNodeLength": 316, "sourceBeforeFix": "24", "sourceAfterFix": "25"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "eeaea8a5dad98864dd80eab1ed34ddf7875c9ccb", "fixCommitParentSHA1": "e8a386359dad04425357cbf5394b1e8fc397541d", "bugFilePath": "gdx/src/com/badlogic/gdx/math/Polygon.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/Polygon.java b/gdx/src/com/badlogic/gdx/math/Polygon.java\nindex a366da1..8823cf0 100644\n--- a/gdx/src/com/badlogic/gdx/math/Polygon.java\n+++ b/gdx/src/com/badlogic/gdx/math/Polygon.java\n@@ -38,7 +38,7 @@\n \r\n \t/** Returns vertices scaled, rotated, and offset by the polygon position. */\r\n \tpublic float[] getWorldVertices () {\r\n-\t\tif (!dirty) return localVertices;\r\n+\t\tif (!dirty) return worldVertices;\r\n \t\tdirty = false;\r\n \r\n \t\tfinal float[] localVertices = this.localVertices;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 41, "bugNodeStartChar": 1580, "bugNodeLength": 21, "fixLineNum": 41, "fixNodeStartChar": 1540, "fixNodeLength": 21, "sourceBeforeFix": "return localVertices; ", "sourceAfterFix": "return worldVertices; "}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "e6bf561b6532c12c8bb202ba7e03aa3f2e6b8a2b", "fixCommitParentSHA1": "9295871b96ca73c965e8994bb9d8b2e730bb1d02", "bugFilePath": "gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java b/gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java\nindex 66d6a2a..297e382 100644\n--- a/gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java\n+++ b/gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java\n@@ -47,7 +47,7 @@\n \t\ttextureParam.minFilter = TextureFilter.Linear;\r\n \t\ttextureParam.magFilter = TextureFilter.Linear;\r\n \t\tif (parameter == null)\r\n-\t\t\tdeps.add(new AssetDescriptor(Gdx.files.internal(fileName).nameWithoutExtension() + \".png\", Texture.class, textureParam));\r\n+\t\t\tdeps.add(new AssetDescriptor(Gdx.files.internal(fileName).pathWithoutExtension() + \".png\", Texture.class, textureParam));\r\n \t\telse\r\n \t\t\tdeps.add(new AssetDescriptor(parameter.texturePath, Texture.class, textureParam));\r\n \t\treturn deps;\r\n@@ -61,7 +61,7 @@\n \tpublic Skin loadSync (AssetManager manager, String fileName, SkinParameter parameter) {\r\n \t\tString texturePath;\r\n \t\tif (parameter == null)\r\n-\t\t\ttexturePath = Gdx.files.internal(fileName).nameWithoutExtension() + \".png\";\r\n+\t\t\ttexturePath = Gdx.files.internal(fileName).pathWithoutExtension() + \".png\";\r\n \t\telse\r\n \t\t\ttexturePath = parameter.texturePath;\r\n \t\tTexture texture = manager.get(texturePath, Texture.class);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 50, "bugNodeStartChar": 2294, "bugNodeLength": 51, "fixLineNum": 50, "fixNodeStartChar": 2245, "fixNodeLength": 51, "sourceBeforeFix": "Gdx.files.internal(fileName).nameWithoutExtension()", "sourceAfterFix": "Gdx.files.internal(fileName).pathWithoutExtension()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "e6bf561b6532c12c8bb202ba7e03aa3f2e6b8a2b", "fixCommitParentSHA1": "9295871b96ca73c965e8994bb9d8b2e730bb1d02", "bugFilePath": "gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java b/gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java\nindex 66d6a2a..297e382 100644\n--- a/gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java\n+++ b/gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java\n@@ -47,7 +47,7 @@\n \t\ttextureParam.minFilter = TextureFilter.Linear;\r\n \t\ttextureParam.magFilter = TextureFilter.Linear;\r\n \t\tif (parameter == null)\r\n-\t\t\tdeps.add(new AssetDescriptor(Gdx.files.internal(fileName).nameWithoutExtension() + \".png\", Texture.class, textureParam));\r\n+\t\t\tdeps.add(new AssetDescriptor(Gdx.files.internal(fileName).pathWithoutExtension() + \".png\", Texture.class, textureParam));\r\n \t\telse\r\n \t\t\tdeps.add(new AssetDescriptor(parameter.texturePath, Texture.class, textureParam));\r\n \t\treturn deps;\r\n@@ -61,7 +61,7 @@\n \tpublic Skin loadSync (AssetManager manager, String fileName, SkinParameter parameter) {\r\n \t\tString texturePath;\r\n \t\tif (parameter == null)\r\n-\t\t\ttexturePath = Gdx.files.internal(fileName).nameWithoutExtension() + \".png\";\r\n+\t\t\ttexturePath = Gdx.files.internal(fileName).pathWithoutExtension() + \".png\";\r\n \t\telse\r\n \t\t\ttexturePath = parameter.texturePath;\r\n \t\tTexture texture = manager.get(texturePath, Texture.class);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 50, "bugNodeStartChar": 2294, "bugNodeLength": 51, "fixLineNum": 50, "fixNodeStartChar": 2245, "fixNodeLength": 51, "sourceBeforeFix": "Gdx.files.internal(fileName).nameWithoutExtension()", "sourceAfterFix": "Gdx.files.internal(fileName).pathWithoutExtension()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "e6bf561b6532c12c8bb202ba7e03aa3f2e6b8a2b", "fixCommitParentSHA1": "9295871b96ca73c965e8994bb9d8b2e730bb1d02", "bugFilePath": "gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java b/gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java\nindex 66d6a2a..297e382 100644\n--- a/gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java\n+++ b/gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java\n@@ -47,7 +47,7 @@\n \t\ttextureParam.minFilter = TextureFilter.Linear;\r\n \t\ttextureParam.magFilter = TextureFilter.Linear;\r\n \t\tif (parameter == null)\r\n-\t\t\tdeps.add(new AssetDescriptor(Gdx.files.internal(fileName).nameWithoutExtension() + \".png\", Texture.class, textureParam));\r\n+\t\t\tdeps.add(new AssetDescriptor(Gdx.files.internal(fileName).pathWithoutExtension() + \".png\", Texture.class, textureParam));\r\n \t\telse\r\n \t\t\tdeps.add(new AssetDescriptor(parameter.texturePath, Texture.class, textureParam));\r\n \t\treturn deps;\r\n@@ -61,7 +61,7 @@\n \tpublic Skin loadSync (AssetManager manager, String fileName, SkinParameter parameter) {\r\n \t\tString texturePath;\r\n \t\tif (parameter == null)\r\n-\t\t\ttexturePath = Gdx.files.internal(fileName).nameWithoutExtension() + \".png\";\r\n+\t\t\ttexturePath = Gdx.files.internal(fileName).pathWithoutExtension() + \".png\";\r\n \t\telse\r\n \t\t\ttexturePath = parameter.texturePath;\r\n \t\tTexture texture = manager.get(texturePath, Texture.class);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 64, "bugNodeStartChar": 2782, "bugNodeLength": 51, "fixLineNum": 64, "fixNodeStartChar": 2719, "fixNodeLength": 51, "sourceBeforeFix": "Gdx.files.internal(fileName).nameWithoutExtension()", "sourceAfterFix": "Gdx.files.internal(fileName).pathWithoutExtension()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "e6bf561b6532c12c8bb202ba7e03aa3f2e6b8a2b", "fixCommitParentSHA1": "9295871b96ca73c965e8994bb9d8b2e730bb1d02", "bugFilePath": "gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java b/gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java\nindex 66d6a2a..297e382 100644\n--- a/gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java\n+++ b/gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java\n@@ -47,7 +47,7 @@\n \t\ttextureParam.minFilter = TextureFilter.Linear;\r\n \t\ttextureParam.magFilter = TextureFilter.Linear;\r\n \t\tif (parameter == null)\r\n-\t\t\tdeps.add(new AssetDescriptor(Gdx.files.internal(fileName).nameWithoutExtension() + \".png\", Texture.class, textureParam));\r\n+\t\t\tdeps.add(new AssetDescriptor(Gdx.files.internal(fileName).pathWithoutExtension() + \".png\", Texture.class, textureParam));\r\n \t\telse\r\n \t\t\tdeps.add(new AssetDescriptor(parameter.texturePath, Texture.class, textureParam));\r\n \t\treturn deps;\r\n@@ -61,7 +61,7 @@\n \tpublic Skin loadSync (AssetManager manager, String fileName, SkinParameter parameter) {\r\n \t\tString texturePath;\r\n \t\tif (parameter == null)\r\n-\t\t\ttexturePath = Gdx.files.internal(fileName).nameWithoutExtension() + \".png\";\r\n+\t\t\ttexturePath = Gdx.files.internal(fileName).pathWithoutExtension() + \".png\";\r\n \t\telse\r\n \t\t\ttexturePath = parameter.texturePath;\r\n \t\tTexture texture = manager.get(texturePath, Texture.class);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 64, "bugNodeStartChar": 2782, "bugNodeLength": 51, "fixLineNum": 64, "fixNodeStartChar": 2719, "fixNodeLength": 51, "sourceBeforeFix": "Gdx.files.internal(fileName).nameWithoutExtension()", "sourceAfterFix": "Gdx.files.internal(fileName).pathWithoutExtension()"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "10767134bdf5cc0aaa25f5ebb03903b485923b98", "fixCommitParentSHA1": "84e04896433c8c275e95de4ad054f0b0c88f0bf9", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java\nindex d37111b..4a47c94 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java\n@@ -364,7 +364,11 @@\n \t\treturn false;\r\n \t}\r\n \r\n-\tprivate void copy () {\r\n+\t/**\r\n+\t * Copies the contents of this TextField to the {@link Clipboard} implementation\r\n+\t * set on this TextField.\r\n+\t */\r\n+\tpublic void copy () {\r\n \t\tif (hasSelection) {\r\n \t\t\tint minIndex = Math.min(cursor, selectionStart);\r\n \t\t\tint maxIndex = Math.max(cursor, selectionStart);\r\n@@ -372,6 +376,10 @@\n \t\t}\r\n \t}\r\n \r\n+\t/**\r\n+\t * Pastes the content of the {@link Clipboard} implementation set on this Textfield\r\n+\t * to this TextField.\r\n+\t */\r\n \tprivate void paste () {\r\n \t\tString content = clipboard.getContents();\r\n \t\tif (content != null) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 367, "bugNodeStartChar": 12656, "bugNodeLength": 223, "fixLineNum": 367, "fixNodeStartChar": 12290, "fixNodeLength": 335, "sourceBeforeFix": "2", "sourceAfterFix": "1"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "e28fe72178d098dad70699cdc5722e13b2d837a7", "fixCommitParentSHA1": "713d3a23de69220c60b59779e3f3805ce6b63a3a", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFont.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFont.java b/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFont.java\nindex 13cfa60..6c53a07 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFont.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFont.java\n@@ -318,7 +318,7 @@\n \t\tthis.integer = integer;\r\n \t\tthis.data = data;\r\n \t\tload(data);\r\n-\t\townsTexture = region != null;\r\n+\t\townsTexture = region == null;\r\n \t}\r\n \r\n \tprivate void load (BitmapFontData data) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 321, "bugNodeStartChar": 13939, "bugNodeLength": 14, "fixLineNum": 321, "fixNodeStartChar": 13619, "fixNodeLength": 14, "sourceBeforeFix": "region != null", "sourceAfterFix": "region == null"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "e1a970bca924f6d9769efb4f5cdbcb269bf4ee09", "fixCommitParentSHA1": "7d51c111da4d377580b6189e71b8e3bb16c52b6d", "bugFilePath": "gdx/src/com/badlogic/gdx/math/Frustum.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/Frustum.java b/gdx/src/com/badlogic/gdx/math/Frustum.java\nindex 67a153b..190691d 100644\n--- a/gdx/src/com/badlogic/gdx/math/Frustum.java\n+++ b/gdx/src/com/badlogic/gdx/math/Frustum.java\n@@ -102,7 +102,7 @@\n \t * @param radius The radius of the sphere\r\n \t * @return Wheter the sphere is in the frustum */\r\n \tpublic boolean sphereInFrustumWithoutNearFar (Vector3 center, float radius) {\r\n-\t\tfor (int i = 0; i < planes.length; i++)\r\n+\t\tfor (int i = 2; i < planes.length; i++)\r\n \t\t\tif (planes[i].distance(center) < -radius) return false;\r\n \r\n \t\treturn true;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 105, "bugNodeStartChar": 4369, "bugNodeLength": 5, "fixLineNum": 105, "fixNodeStartChar": 4265, "fixNodeLength": 5, "sourceBeforeFix": "i=0", "sourceAfterFix": "i=2"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "e744648124fb8a2b80d3faa3954f87134fdb34e5", "fixCommitParentSHA1": "527fb23a5fa16164f103f50399730e3ba4c0d77f", "bugFilePath": "extensions/gdx-image/src/com/badlogic/gdx/graphics/g2d/Jpeg.java", "fixPatch": "diff --git a/extensions/gdx-image/src/com/badlogic/gdx/graphics/g2d/Jpeg.java b/extensions/gdx-image/src/com/badlogic/gdx/graphics/g2d/Jpeg.java\nindex af0b9ae..a62e092 100644\n--- a/extensions/gdx-image/src/com/badlogic/gdx/graphics/g2d/Jpeg.java\n+++ b/extensions/gdx-image/src/com/badlogic/gdx/graphics/g2d/Jpeg.java\n@@ -23,7 +23,7 @@\n \t/**\r\n \t * Reads a jpeg from the given file, throws a GdxRuntimeException in case something went wrong.\r\n \t */\r\n-\tpublic static Pixmap read(FileHandle file) {\r\n+\tpublic static synchronized Pixmap read(FileHandle file) {\r\n \t\tbyte[] bytes = file.readBytes();\r\n \t\tlong[] out = new long[4];\r\n \t\tByteBuffer pixels = read(bytes, 0, bytes.length, out);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 23, "bugNodeStartChar": 661, "bugNodeLength": 423, "fixLineNum": 23, "fixNodeStartChar": 639, "fixNodeLength": 427, "sourceBeforeFix": "9", "sourceAfterFix": "41"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "43b2fa49ca351c05c453c8cd0eec32ce6277c830", "fixCommitParentSHA1": "783fd9c0cca8da433e7eeb81d84b9c4cf07bf2b3", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\nindex f1f5e6a..b182ba1 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\n@@ -34,7 +34,7 @@\n public class Label extends Widget {\r\n \tprivate LabelStyle style;\r\n \tprivate final TextBounds bounds = new TextBounds();\r\n-\tprivate String text;\r\n+\tprivate CharSequence text;\r\n \tprivate BitmapFontCache cache;\r\n \tprivate float prefWidth, prefHeight;\r\n \tprivate int labelAlign = Align.LEFT;\r\n@@ -46,27 +46,27 @@\n \t\tthis(\"\", skin);\r\n \t}\r\n \r\n-\tpublic Label (String text, Skin skin) {\r\n+\tpublic Label (CharSequence text, Skin skin) {\r\n \t\tthis(text, skin.getStyle(LabelStyle.class), null);\r\n \t}\r\n \r\n \t/** Creates a label, using a {@link LabelStyle} that has a BitmapFont with the specified name from the skin and the specified\r\n \t * color. */\r\n-\tpublic Label (String text, String fontName, Color color, Skin skin) {\r\n+\tpublic Label (CharSequence text, String fontName, Color color, Skin skin) {\r\n \t\tthis(text, new LabelStyle(skin.getFont(fontName), color), null);\r\n \t}\r\n \r\n \t/** Creates a label, using a {@link LabelStyle} that has a BitmapFont with the specified name and the specified color from the\r\n \t * skin. */\r\n-\tpublic Label (String text, String fontName, String colorName, Skin skin) {\r\n+\tpublic Label (CharSequence text, String fontName, String colorName, Skin skin) {\r\n \t\tthis(text, new LabelStyle(skin.getFont(fontName), skin.getColor(colorName)), null);\r\n \t}\r\n \r\n-\tpublic Label (String text, LabelStyle style) {\r\n+\tpublic Label (CharSequence text, LabelStyle style) {\r\n \t\tthis(text, style, null);\r\n \t}\r\n \r\n-\tpublic Label (String text, LabelStyle style, String name) {\r\n+\tpublic Label (CharSequence text, LabelStyle style, String name) {\r\n \t\tsuper(name);\r\n \t\tif (text == null) text = \"\";\r\n \t\tthis.text = text;\r\n@@ -91,7 +91,7 @@\n \t\treturn style;\r\n \t}\r\n \r\n-\tpublic void setText (String text) {\r\n+\tpublic void setText (CharSequence text) {\r\n \t\tif (text == null) throw new IllegalArgumentException(\"text cannot be null.\");\r\n \t\tif (text.equals(this.text)) return;\r\n \t\tthis.text = text;\r\n@@ -99,7 +99,7 @@\n \t\tinvalidateHierarchy();\r\n \t}\r\n \r\n-\tpublic String getText () {\r\n+\tpublic CharSequence getText () {\r\n \t\treturn text;\r\n \t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 37, "bugNodeStartChar": 1682, "bugNodeLength": 20, "fixLineNum": 37, "fixNodeStartChar": 1646, "fixNodeLength": 26, "sourceBeforeFix": "private String text; ", "sourceAfterFix": "private CharSequence text; "}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "43b2fa49ca351c05c453c8cd0eec32ce6277c830", "fixCommitParentSHA1": "783fd9c0cca8da433e7eeb81d84b9c4cf07bf2b3", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\nindex f1f5e6a..b182ba1 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\n@@ -34,7 +34,7 @@\n public class Label extends Widget {\r\n \tprivate LabelStyle style;\r\n \tprivate final TextBounds bounds = new TextBounds();\r\n-\tprivate String text;\r\n+\tprivate CharSequence text;\r\n \tprivate BitmapFontCache cache;\r\n \tprivate float prefWidth, prefHeight;\r\n \tprivate int labelAlign = Align.LEFT;\r\n@@ -46,27 +46,27 @@\n \t\tthis(\"\", skin);\r\n \t}\r\n \r\n-\tpublic Label (String text, Skin skin) {\r\n+\tpublic Label (CharSequence text, Skin skin) {\r\n \t\tthis(text, skin.getStyle(LabelStyle.class), null);\r\n \t}\r\n \r\n \t/** Creates a label, using a {@link LabelStyle} that has a BitmapFont with the specified name from the skin and the specified\r\n \t * color. */\r\n-\tpublic Label (String text, String fontName, Color color, Skin skin) {\r\n+\tpublic Label (CharSequence text, String fontName, Color color, Skin skin) {\r\n \t\tthis(text, new LabelStyle(skin.getFont(fontName), color), null);\r\n \t}\r\n \r\n \t/** Creates a label, using a {@link LabelStyle} that has a BitmapFont with the specified name and the specified color from the\r\n \t * skin. */\r\n-\tpublic Label (String text, String fontName, String colorName, Skin skin) {\r\n+\tpublic Label (CharSequence text, String fontName, String colorName, Skin skin) {\r\n \t\tthis(text, new LabelStyle(skin.getFont(fontName), skin.getColor(colorName)), null);\r\n \t}\r\n \r\n-\tpublic Label (String text, LabelStyle style) {\r\n+\tpublic Label (CharSequence text, LabelStyle style) {\r\n \t\tthis(text, style, null);\r\n \t}\r\n \r\n-\tpublic Label (String text, LabelStyle style, String name) {\r\n+\tpublic Label (CharSequence text, LabelStyle style, String name) {\r\n \t\tsuper(name);\r\n \t\tif (text == null) text = \"\";\r\n \t\tthis.text = text;\r\n@@ -91,7 +91,7 @@\n \t\treturn style;\r\n \t}\r\n \r\n-\tpublic void setText (String text) {\r\n+\tpublic void setText (CharSequence text) {\r\n \t\tif (text == null) throw new IllegalArgumentException(\"text cannot be null.\");\r\n \t\tif (text.equals(this.text)) return;\r\n \t\tthis.text = text;\r\n@@ -99,7 +99,7 @@\n \t\tinvalidateHierarchy();\r\n \t}\r\n \r\n-\tpublic String getText () {\r\n+\tpublic CharSequence getText () {\r\n \t\treturn text;\r\n \t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 49, "bugNodeStartChar": 1992, "bugNodeLength": 11, "fixLineNum": 49, "fixNodeStartChar": 1944, "fixNodeLength": 17, "sourceBeforeFix": "String text", "sourceAfterFix": "CharSequence text"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "43b2fa49ca351c05c453c8cd0eec32ce6277c830", "fixCommitParentSHA1": "783fd9c0cca8da433e7eeb81d84b9c4cf07bf2b3", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\nindex f1f5e6a..b182ba1 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\n@@ -34,7 +34,7 @@\n public class Label extends Widget {\r\n \tprivate LabelStyle style;\r\n \tprivate final TextBounds bounds = new TextBounds();\r\n-\tprivate String text;\r\n+\tprivate CharSequence text;\r\n \tprivate BitmapFontCache cache;\r\n \tprivate float prefWidth, prefHeight;\r\n \tprivate int labelAlign = Align.LEFT;\r\n@@ -46,27 +46,27 @@\n \t\tthis(\"\", skin);\r\n \t}\r\n \r\n-\tpublic Label (String text, Skin skin) {\r\n+\tpublic Label (CharSequence text, Skin skin) {\r\n \t\tthis(text, skin.getStyle(LabelStyle.class), null);\r\n \t}\r\n \r\n \t/** Creates a label, using a {@link LabelStyle} that has a BitmapFont with the specified name from the skin and the specified\r\n \t * color. */\r\n-\tpublic Label (String text, String fontName, Color color, Skin skin) {\r\n+\tpublic Label (CharSequence text, String fontName, Color color, Skin skin) {\r\n \t\tthis(text, new LabelStyle(skin.getFont(fontName), color), null);\r\n \t}\r\n \r\n \t/** Creates a label, using a {@link LabelStyle} that has a BitmapFont with the specified name and the specified color from the\r\n \t * skin. */\r\n-\tpublic Label (String text, String fontName, String colorName, Skin skin) {\r\n+\tpublic Label (CharSequence text, String fontName, String colorName, Skin skin) {\r\n \t\tthis(text, new LabelStyle(skin.getFont(fontName), skin.getColor(colorName)), null);\r\n \t}\r\n \r\n-\tpublic Label (String text, LabelStyle style) {\r\n+\tpublic Label (CharSequence text, LabelStyle style) {\r\n \t\tthis(text, style, null);\r\n \t}\r\n \r\n-\tpublic Label (String text, LabelStyle style, String name) {\r\n+\tpublic Label (CharSequence text, LabelStyle style, String name) {\r\n \t\tsuper(name);\r\n \t\tif (text == null) text = \"\";\r\n \t\tthis.text = text;\r\n@@ -91,7 +91,7 @@\n \t\treturn style;\r\n \t}\r\n \r\n-\tpublic void setText (String text) {\r\n+\tpublic void setText (CharSequence text) {\r\n \t\tif (text == null) throw new IllegalArgumentException(\"text cannot be null.\");\r\n \t\tif (text.equals(this.text)) return;\r\n \t\tthis.text = text;\r\n@@ -99,7 +99,7 @@\n \t\tinvalidateHierarchy();\r\n \t}\r\n \r\n-\tpublic String getText () {\r\n+\tpublic CharSequence getText () {\r\n \t\treturn text;\r\n \t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 55, "bugNodeStartChar": 2237, "bugNodeLength": 11, "fixLineNum": 55, "fixNodeStartChar": 2183, "fixNodeLength": 17, "sourceBeforeFix": "String text", "sourceAfterFix": "CharSequence text"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "43b2fa49ca351c05c453c8cd0eec32ce6277c830", "fixCommitParentSHA1": "783fd9c0cca8da433e7eeb81d84b9c4cf07bf2b3", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\nindex f1f5e6a..b182ba1 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\n@@ -34,7 +34,7 @@\n public class Label extends Widget {\r\n \tprivate LabelStyle style;\r\n \tprivate final TextBounds bounds = new TextBounds();\r\n-\tprivate String text;\r\n+\tprivate CharSequence text;\r\n \tprivate BitmapFontCache cache;\r\n \tprivate float prefWidth, prefHeight;\r\n \tprivate int labelAlign = Align.LEFT;\r\n@@ -46,27 +46,27 @@\n \t\tthis(\"\", skin);\r\n \t}\r\n \r\n-\tpublic Label (String text, Skin skin) {\r\n+\tpublic Label (CharSequence text, Skin skin) {\r\n \t\tthis(text, skin.getStyle(LabelStyle.class), null);\r\n \t}\r\n \r\n \t/** Creates a label, using a {@link LabelStyle} that has a BitmapFont with the specified name from the skin and the specified\r\n \t * color. */\r\n-\tpublic Label (String text, String fontName, Color color, Skin skin) {\r\n+\tpublic Label (CharSequence text, String fontName, Color color, Skin skin) {\r\n \t\tthis(text, new LabelStyle(skin.getFont(fontName), color), null);\r\n \t}\r\n \r\n \t/** Creates a label, using a {@link LabelStyle} that has a BitmapFont with the specified name and the specified color from the\r\n \t * skin. */\r\n-\tpublic Label (String text, String fontName, String colorName, Skin skin) {\r\n+\tpublic Label (CharSequence text, String fontName, String colorName, Skin skin) {\r\n \t\tthis(text, new LabelStyle(skin.getFont(fontName), skin.getColor(colorName)), null);\r\n \t}\r\n \r\n-\tpublic Label (String text, LabelStyle style) {\r\n+\tpublic Label (CharSequence text, LabelStyle style) {\r\n \t\tthis(text, style, null);\r\n \t}\r\n \r\n-\tpublic Label (String text, LabelStyle style, String name) {\r\n+\tpublic Label (CharSequence text, LabelStyle style, String name) {\r\n \t\tsuper(name);\r\n \t\tif (text == null) text = \"\";\r\n \t\tthis.text = text;\r\n@@ -91,7 +91,7 @@\n \t\treturn style;\r\n \t}\r\n \r\n-\tpublic void setText (String text) {\r\n+\tpublic void setText (CharSequence text) {\r\n \t\tif (text == null) throw new IllegalArgumentException(\"text cannot be null.\");\r\n \t\tif (text.equals(this.text)) return;\r\n \t\tthis.text = text;\r\n@@ -99,7 +99,7 @@\n \t\tinvalidateHierarchy();\r\n \t}\r\n \r\n-\tpublic String getText () {\r\n+\tpublic CharSequence getText () {\r\n \t\treturn text;\r\n \t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 61, "bugNodeStartChar": 2526, "bugNodeLength": 11, "fixLineNum": 61, "fixNodeStartChar": 2466, "fixNodeLength": 17, "sourceBeforeFix": "String text", "sourceAfterFix": "CharSequence text"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "43b2fa49ca351c05c453c8cd0eec32ce6277c830", "fixCommitParentSHA1": "783fd9c0cca8da433e7eeb81d84b9c4cf07bf2b3", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\nindex f1f5e6a..b182ba1 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\n@@ -34,7 +34,7 @@\n public class Label extends Widget {\r\n \tprivate LabelStyle style;\r\n \tprivate final TextBounds bounds = new TextBounds();\r\n-\tprivate String text;\r\n+\tprivate CharSequence text;\r\n \tprivate BitmapFontCache cache;\r\n \tprivate float prefWidth, prefHeight;\r\n \tprivate int labelAlign = Align.LEFT;\r\n@@ -46,27 +46,27 @@\n \t\tthis(\"\", skin);\r\n \t}\r\n \r\n-\tpublic Label (String text, Skin skin) {\r\n+\tpublic Label (CharSequence text, Skin skin) {\r\n \t\tthis(text, skin.getStyle(LabelStyle.class), null);\r\n \t}\r\n \r\n \t/** Creates a label, using a {@link LabelStyle} that has a BitmapFont with the specified name from the skin and the specified\r\n \t * color. */\r\n-\tpublic Label (String text, String fontName, Color color, Skin skin) {\r\n+\tpublic Label (CharSequence text, String fontName, Color color, Skin skin) {\r\n \t\tthis(text, new LabelStyle(skin.getFont(fontName), color), null);\r\n \t}\r\n \r\n \t/** Creates a label, using a {@link LabelStyle} that has a BitmapFont with the specified name and the specified color from the\r\n \t * skin. */\r\n-\tpublic Label (String text, String fontName, String colorName, Skin skin) {\r\n+\tpublic Label (CharSequence text, String fontName, String colorName, Skin skin) {\r\n \t\tthis(text, new LabelStyle(skin.getFont(fontName), skin.getColor(colorName)), null);\r\n \t}\r\n \r\n-\tpublic Label (String text, LabelStyle style) {\r\n+\tpublic Label (CharSequence text, LabelStyle style) {\r\n \t\tthis(text, style, null);\r\n \t}\r\n \r\n-\tpublic Label (String text, LabelStyle style, String name) {\r\n+\tpublic Label (CharSequence text, LabelStyle style, String name) {\r\n \t\tsuper(name);\r\n \t\tif (text == null) text = \"\";\r\n \t\tthis.text = text;\r\n@@ -91,7 +91,7 @@\n \t\treturn style;\r\n \t}\r\n \r\n-\tpublic void setText (String text) {\r\n+\tpublic void setText (CharSequence text) {\r\n \t\tif (text == null) throw new IllegalArgumentException(\"text cannot be null.\");\r\n \t\tif (text.equals(this.text)) return;\r\n \t\tthis.text = text;\r\n@@ -99,7 +99,7 @@\n \t\tinvalidateHierarchy();\r\n \t}\r\n \r\n-\tpublic String getText () {\r\n+\tpublic CharSequence getText () {\r\n \t\treturn text;\r\n \t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 65, "bugNodeStartChar": 2696, "bugNodeLength": 11, "fixLineNum": 65, "fixNodeStartChar": 2632, "fixNodeLength": 17, "sourceBeforeFix": "String text", "sourceAfterFix": "CharSequence text"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "43b2fa49ca351c05c453c8cd0eec32ce6277c830", "fixCommitParentSHA1": "783fd9c0cca8da433e7eeb81d84b9c4cf07bf2b3", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\nindex f1f5e6a..b182ba1 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\n@@ -34,7 +34,7 @@\n public class Label extends Widget {\r\n \tprivate LabelStyle style;\r\n \tprivate final TextBounds bounds = new TextBounds();\r\n-\tprivate String text;\r\n+\tprivate CharSequence text;\r\n \tprivate BitmapFontCache cache;\r\n \tprivate float prefWidth, prefHeight;\r\n \tprivate int labelAlign = Align.LEFT;\r\n@@ -46,27 +46,27 @@\n \t\tthis(\"\", skin);\r\n \t}\r\n \r\n-\tpublic Label (String text, Skin skin) {\r\n+\tpublic Label (CharSequence text, Skin skin) {\r\n \t\tthis(text, skin.getStyle(LabelStyle.class), null);\r\n \t}\r\n \r\n \t/** Creates a label, using a {@link LabelStyle} that has a BitmapFont with the specified name from the skin and the specified\r\n \t * color. */\r\n-\tpublic Label (String text, String fontName, Color color, Skin skin) {\r\n+\tpublic Label (CharSequence text, String fontName, Color color, Skin skin) {\r\n \t\tthis(text, new LabelStyle(skin.getFont(fontName), color), null);\r\n \t}\r\n \r\n \t/** Creates a label, using a {@link LabelStyle} that has a BitmapFont with the specified name and the specified color from the\r\n \t * skin. */\r\n-\tpublic Label (String text, String fontName, String colorName, Skin skin) {\r\n+\tpublic Label (CharSequence text, String fontName, String colorName, Skin skin) {\r\n \t\tthis(text, new LabelStyle(skin.getFont(fontName), skin.getColor(colorName)), null);\r\n \t}\r\n \r\n-\tpublic Label (String text, LabelStyle style) {\r\n+\tpublic Label (CharSequence text, LabelStyle style) {\r\n \t\tthis(text, style, null);\r\n \t}\r\n \r\n-\tpublic Label (String text, LabelStyle style, String name) {\r\n+\tpublic Label (CharSequence text, LabelStyle style, String name) {\r\n \t\tsuper(name);\r\n \t\tif (text == null) text = \"\";\r\n \t\tthis.text = text;\r\n@@ -91,7 +91,7 @@\n \t\treturn style;\r\n \t}\r\n \r\n-\tpublic void setText (String text) {\r\n+\tpublic void setText (CharSequence text) {\r\n \t\tif (text == null) throw new IllegalArgumentException(\"text cannot be null.\");\r\n \t\tif (text.equals(this.text)) return;\r\n \t\tthis.text = text;\r\n@@ -99,7 +99,7 @@\n \t\tinvalidateHierarchy();\r\n \t}\r\n \r\n-\tpublic String getText () {\r\n+\tpublic CharSequence getText () {\r\n \t\treturn text;\r\n \t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 69, "bugNodeStartChar": 2779, "bugNodeLength": 11, "fixLineNum": 69, "fixNodeStartChar": 2711, "fixNodeLength": 17, "sourceBeforeFix": "String text", "sourceAfterFix": "CharSequence text"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "43b2fa49ca351c05c453c8cd0eec32ce6277c830", "fixCommitParentSHA1": "783fd9c0cca8da433e7eeb81d84b9c4cf07bf2b3", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\nindex f1f5e6a..b182ba1 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\n@@ -34,7 +34,7 @@\n public class Label extends Widget {\r\n \tprivate LabelStyle style;\r\n \tprivate final TextBounds bounds = new TextBounds();\r\n-\tprivate String text;\r\n+\tprivate CharSequence text;\r\n \tprivate BitmapFontCache cache;\r\n \tprivate float prefWidth, prefHeight;\r\n \tprivate int labelAlign = Align.LEFT;\r\n@@ -46,27 +46,27 @@\n \t\tthis(\"\", skin);\r\n \t}\r\n \r\n-\tpublic Label (String text, Skin skin) {\r\n+\tpublic Label (CharSequence text, Skin skin) {\r\n \t\tthis(text, skin.getStyle(LabelStyle.class), null);\r\n \t}\r\n \r\n \t/** Creates a label, using a {@link LabelStyle} that has a BitmapFont with the specified name from the skin and the specified\r\n \t * color. */\r\n-\tpublic Label (String text, String fontName, Color color, Skin skin) {\r\n+\tpublic Label (CharSequence text, String fontName, Color color, Skin skin) {\r\n \t\tthis(text, new LabelStyle(skin.getFont(fontName), color), null);\r\n \t}\r\n \r\n \t/** Creates a label, using a {@link LabelStyle} that has a BitmapFont with the specified name and the specified color from the\r\n \t * skin. */\r\n-\tpublic Label (String text, String fontName, String colorName, Skin skin) {\r\n+\tpublic Label (CharSequence text, String fontName, String colorName, Skin skin) {\r\n \t\tthis(text, new LabelStyle(skin.getFont(fontName), skin.getColor(colorName)), null);\r\n \t}\r\n \r\n-\tpublic Label (String text, LabelStyle style) {\r\n+\tpublic Label (CharSequence text, LabelStyle style) {\r\n \t\tthis(text, style, null);\r\n \t}\r\n \r\n-\tpublic Label (String text, LabelStyle style, String name) {\r\n+\tpublic Label (CharSequence text, LabelStyle style, String name) {\r\n \t\tsuper(name);\r\n \t\tif (text == null) text = \"\";\r\n \t\tthis.text = text;\r\n@@ -91,7 +91,7 @@\n \t\treturn style;\r\n \t}\r\n \r\n-\tpublic void setText (String text) {\r\n+\tpublic void setText (CharSequence text) {\r\n \t\tif (text == null) throw new IllegalArgumentException(\"text cannot be null.\");\r\n \t\tif (text.equals(this.text)) return;\r\n \t\tthis.text = text;\r\n@@ -99,7 +99,7 @@\n \t\tinvalidateHierarchy();\r\n \t}\r\n \r\n-\tpublic String getText () {\r\n+\tpublic CharSequence getText () {\r\n \t\treturn text;\r\n \t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 94, "bugNodeStartChar": 3598, "bugNodeLength": 11, "fixLineNum": 94, "fixNodeStartChar": 3505, "fixNodeLength": 17, "sourceBeforeFix": "String text", "sourceAfterFix": "CharSequence text"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "43b2fa49ca351c05c453c8cd0eec32ce6277c830", "fixCommitParentSHA1": "783fd9c0cca8da433e7eeb81d84b9c4cf07bf2b3", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\nindex f1f5e6a..b182ba1 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\n@@ -34,7 +34,7 @@\n public class Label extends Widget {\r\n \tprivate LabelStyle style;\r\n \tprivate final TextBounds bounds = new TextBounds();\r\n-\tprivate String text;\r\n+\tprivate CharSequence text;\r\n \tprivate BitmapFontCache cache;\r\n \tprivate float prefWidth, prefHeight;\r\n \tprivate int labelAlign = Align.LEFT;\r\n@@ -46,27 +46,27 @@\n \t\tthis(\"\", skin);\r\n \t}\r\n \r\n-\tpublic Label (String text, Skin skin) {\r\n+\tpublic Label (CharSequence text, Skin skin) {\r\n \t\tthis(text, skin.getStyle(LabelStyle.class), null);\r\n \t}\r\n \r\n \t/** Creates a label, using a {@link LabelStyle} that has a BitmapFont with the specified name from the skin and the specified\r\n \t * color. */\r\n-\tpublic Label (String text, String fontName, Color color, Skin skin) {\r\n+\tpublic Label (CharSequence text, String fontName, Color color, Skin skin) {\r\n \t\tthis(text, new LabelStyle(skin.getFont(fontName), color), null);\r\n \t}\r\n \r\n \t/** Creates a label, using a {@link LabelStyle} that has a BitmapFont with the specified name and the specified color from the\r\n \t * skin. */\r\n-\tpublic Label (String text, String fontName, String colorName, Skin skin) {\r\n+\tpublic Label (CharSequence text, String fontName, String colorName, Skin skin) {\r\n \t\tthis(text, new LabelStyle(skin.getFont(fontName), skin.getColor(colorName)), null);\r\n \t}\r\n \r\n-\tpublic Label (String text, LabelStyle style) {\r\n+\tpublic Label (CharSequence text, LabelStyle style) {\r\n \t\tthis(text, style, null);\r\n \t}\r\n \r\n-\tpublic Label (String text, LabelStyle style, String name) {\r\n+\tpublic Label (CharSequence text, LabelStyle style, String name) {\r\n \t\tsuper(name);\r\n \t\tif (text == null) text = \"\";\r\n \t\tthis.text = text;\r\n@@ -91,7 +91,7 @@\n \t\treturn style;\r\n \t}\r\n \r\n-\tpublic void setText (String text) {\r\n+\tpublic void setText (CharSequence text) {\r\n \t\tif (text == null) throw new IllegalArgumentException(\"text cannot be null.\");\r\n \t\tif (text.equals(this.text)) return;\r\n \t\tthis.text = text;\r\n@@ -99,7 +99,7 @@\n \t\tinvalidateHierarchy();\r\n \t}\r\n \r\n-\tpublic String getText () {\r\n+\tpublic CharSequence getText () {\r\n \t\treturn text;\r\n \t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 102, "bugNodeStartChar": 3808, "bugNodeLength": 46, "fixLineNum": 102, "fixNodeStartChar": 3707, "fixNodeLength": 50, "sourceBeforeFix": "public String getText(){   return text; } ", "sourceAfterFix": "public CharSequence getText(){   return text; } "}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "e3f3ae5f48a12ad28a8506302f1a440ed4e2fb17", "fixCommitParentSHA1": "61e0a8eba9e3d94ca2edc35796e8da663883bb58", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/glutils/ETC1.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/ETC1.java b/gdx/src/com/badlogic/gdx/graphics/glutils/ETC1.java\nindex 5db21f8..bcf85e1 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/glutils/ETC1.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/ETC1.java\n@@ -62,7 +62,7 @@\n \t\t\ttry {\r\n \t\t\t\tin = new DataInputStream(new BufferedInputStream(new GZIPInputStream(pkmFile.read())));\r\n \t\t\t\tint fileSize = in.readInt();\r\n-\t\t\t\tcompressedData = BufferUtils.newByteBuffer(fileSize);\r\n+\t\t\t\tcompressedData = BufferUtils.newUnsafeByteBuffer(fileSize);\r\n \t\t\t\tint readBytes = 0;\r\n \t\t\t\twhile ((readBytes = in.read(buffer)) != -1) {\r\n \t\t\t\t\tcompressedData.put(buffer, 0, readBytes);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 65, "bugNodeStartChar": 2586, "bugNodeLength": 35, "fixLineNum": 65, "fixNodeStartChar": 2522, "fixNodeLength": 41, "sourceBeforeFix": "BufferUtils.newByteBuffer(fileSize)", "sourceAfterFix": "BufferUtils.newUnsafeByteBuffer(fileSize)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "e3f3ae5f48a12ad28a8506302f1a440ed4e2fb17", "fixCommitParentSHA1": "61e0a8eba9e3d94ca2edc35796e8da663883bb58", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/glutils/ETC1.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/ETC1.java b/gdx/src/com/badlogic/gdx/graphics/glutils/ETC1.java\nindex 5db21f8..bcf85e1 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/glutils/ETC1.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/ETC1.java\n@@ -62,7 +62,7 @@\n \t\t\ttry {\r\n \t\t\t\tin = new DataInputStream(new BufferedInputStream(new GZIPInputStream(pkmFile.read())));\r\n \t\t\t\tint fileSize = in.readInt();\r\n-\t\t\t\tcompressedData = BufferUtils.newByteBuffer(fileSize);\r\n+\t\t\t\tcompressedData = BufferUtils.newUnsafeByteBuffer(fileSize);\r\n \t\t\t\tint readBytes = 0;\r\n \t\t\t\twhile ((readBytes = in.read(buffer)) != -1) {\r\n \t\t\t\t\tcompressedData.put(buffer, 0, readBytes);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 65, "bugNodeStartChar": 2586, "bugNodeLength": 35, "fixLineNum": 65, "fixNodeStartChar": 2522, "fixNodeLength": 41, "sourceBeforeFix": "BufferUtils.newByteBuffer(fileSize)", "sourceAfterFix": "BufferUtils.newUnsafeByteBuffer(fileSize)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "0efcd332f3fcc5c5ee7b93d5cc8e8df2ca024fb1", "fixCommitParentSHA1": "fbef43ca95617a93068852b688a6857d4f172193", "bugFilePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/BufferUtilsTest.java", "fixPatch": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/BufferUtilsTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/BufferUtilsTest.java\nindex 3e73199..285df10 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/BufferUtilsTest.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/BufferUtilsTest.java\n@@ -39,7 +39,7 @@\n \t@Override\r\n \tpublic void create () {\r\n \t\tByteBuffer bytebuffer = BufferUtils.newUnsafeByteBuffer(1000 * 1000);\r\n-\t\tBufferUtils.freeMemory(bytebuffer);\r\n+\t\tBufferUtils.disposeUnsafeByteBuffer(bytebuffer);\r\n \r\n \t\tByteBuffer bb = BufferUtils.newByteBuffer(8);\r\n \t\tCharBuffer cb = BufferUtils.newCharBuffer(8);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 42, "bugNodeStartChar": 1449, "bugNodeLength": 34, "fixLineNum": 42, "fixNodeStartChar": 1409, "fixNodeLength": 47, "sourceBeforeFix": "BufferUtils.freeMemory(bytebuffer)", "sourceAfterFix": "BufferUtils.disposeUnsafeByteBuffer(bytebuffer)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "0efcd332f3fcc5c5ee7b93d5cc8e8df2ca024fb1", "fixCommitParentSHA1": "fbef43ca95617a93068852b688a6857d4f172193", "bugFilePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/BufferUtilsTest.java", "fixPatch": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/BufferUtilsTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/BufferUtilsTest.java\nindex 3e73199..285df10 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/BufferUtilsTest.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/BufferUtilsTest.java\n@@ -39,7 +39,7 @@\n \t@Override\r\n \tpublic void create () {\r\n \t\tByteBuffer bytebuffer = BufferUtils.newUnsafeByteBuffer(1000 * 1000);\r\n-\t\tBufferUtils.freeMemory(bytebuffer);\r\n+\t\tBufferUtils.disposeUnsafeByteBuffer(bytebuffer);\r\n \r\n \t\tByteBuffer bb = BufferUtils.newByteBuffer(8);\r\n \t\tCharBuffer cb = BufferUtils.newCharBuffer(8);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 42, "bugNodeStartChar": 1449, "bugNodeLength": 34, "fixLineNum": 42, "fixNodeStartChar": 1409, "fixNodeLength": 47, "sourceBeforeFix": "BufferUtils.freeMemory(bytebuffer)", "sourceAfterFix": "BufferUtils.disposeUnsafeByteBuffer(bytebuffer)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d4e7640fe2f77e350582a12f86b5e46a0e02bb08", "fixCommitParentSHA1": "d58eb8d10d379fbda5abc2bed313757453847f43", "bugFilePath": "gdx/src/com/badlogic/gdx/files/FileHandle.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/files/FileHandle.java b/gdx/src/com/badlogic/gdx/files/FileHandle.java\nindex bfe5e92..5650a43 100644\n--- a/gdx/src/com/badlogic/gdx/files/FileHandle.java\n+++ b/gdx/src/com/badlogic/gdx/files/FileHandle.java\n@@ -115,7 +115,7 @@\n \t\t}\r\n \t\ttry {\r\n \t\t\treturn new FileInputStream(file());\r\n-\t\t} catch (FileNotFoundException ex) {\r\n+\t\t} catch (Exception ex) {\r\n \t\t\tif (file().isDirectory())\r\n \t\t\t\tthrow new GdxRuntimeException(\"Cannot open a stream to a directory: \" + file + \" (\" + type + \")\", ex);\r\n \t\t\tthrow new GdxRuntimeException(\"Error reading file: \" + file + \" (\" + type + \")\", ex);\r\n@@ -258,7 +258,7 @@\n \t\tparent().mkdirs();\r\n \t\ttry {\r\n \t\t\treturn new FileOutputStream(file(), append);\r\n-\t\t} catch (FileNotFoundException ex) {\r\n+\t\t} catch (Exception ex) {\r\n \t\t\tif (file().isDirectory())\r\n \t\t\t\tthrow new GdxRuntimeException(\"Cannot open a stream to a directory: \" + file + \" (\" + type + \")\", ex);\r\n \t\t\tthrow new GdxRuntimeException(\"Error writing file: \" + file + \" (\" + type + \")\", ex);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 118, "bugNodeStartChar": 4164, "bugNodeLength": 24, "fixLineNum": 118, "fixNodeStartChar": 4047, "fixNodeLength": 12, "sourceBeforeFix": "FileNotFoundException ex", "sourceAfterFix": "Exception ex"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d4e7640fe2f77e350582a12f86b5e46a0e02bb08", "fixCommitParentSHA1": "d58eb8d10d379fbda5abc2bed313757453847f43", "bugFilePath": "gdx/src/com/badlogic/gdx/files/FileHandle.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/files/FileHandle.java b/gdx/src/com/badlogic/gdx/files/FileHandle.java\nindex bfe5e92..5650a43 100644\n--- a/gdx/src/com/badlogic/gdx/files/FileHandle.java\n+++ b/gdx/src/com/badlogic/gdx/files/FileHandle.java\n@@ -115,7 +115,7 @@\n \t\t}\r\n \t\ttry {\r\n \t\t\treturn new FileInputStream(file());\r\n-\t\t} catch (FileNotFoundException ex) {\r\n+\t\t} catch (Exception ex) {\r\n \t\t\tif (file().isDirectory())\r\n \t\t\t\tthrow new GdxRuntimeException(\"Cannot open a stream to a directory: \" + file + \" (\" + type + \")\", ex);\r\n \t\t\tthrow new GdxRuntimeException(\"Error reading file: \" + file + \" (\" + type + \")\", ex);\r\n@@ -258,7 +258,7 @@\n \t\tparent().mkdirs();\r\n \t\ttry {\r\n \t\t\treturn new FileOutputStream(file(), append);\r\n-\t\t} catch (FileNotFoundException ex) {\r\n+\t\t} catch (Exception ex) {\r\n \t\t\tif (file().isDirectory())\r\n \t\t\t\tthrow new GdxRuntimeException(\"Cannot open a stream to a directory: \" + file + \" (\" + type + \")\", ex);\r\n \t\t\tthrow new GdxRuntimeException(\"Error writing file: \" + file + \" (\" + type + \")\", ex);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 261, "bugNodeStartChar": 9734, "bugNodeLength": 24, "fixLineNum": 261, "fixNodeStartChar": 9474, "fixNodeLength": 12, "sourceBeforeFix": "FileNotFoundException ex", "sourceAfterFix": "Exception ex"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "52ae94eb6fe9e481c8c6df3557257b352dd7d92f", "fixCommitParentSHA1": "d0c389885ebd485f82a00971e22e2efede0f3d72", "bugFilePath": "extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/NativeCodeGenerator.java", "fixPatch": "diff --git a/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/NativeCodeGenerator.java b/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/NativeCodeGenerator.java\nindex fb49cb0..a2b6428 100644\n--- a/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/NativeCodeGenerator.java\n+++ b/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/NativeCodeGenerator.java\n@@ -89,7 +89,7 @@\n \t\t\tmergeJavaAndCMethod(buffer, javaMethods.get(i), cMethods.get(i));\r\n \t\t\tbuffer.append(\"\\n\");\r\n \t\t}\r\n-\t\tcppFile.writeString(buffer.toString(), false);\r\n+\t\tcppFile.writeString(buffer.toString(), false, \"UTF-8\");\r\n \t}\r\n \t\r\n \tprivate void mergeJavaAndCMethod(StringBuffer buffer, JavaMethod javaMethod, CMethod cMethod) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 92, "bugNodeStartChar": 3362, "bugNodeLength": 45, "fixLineNum": 92, "fixNodeStartChar": 3271, "fixNodeLength": 54, "sourceBeforeFix": "cppFile.writeString(buffer.toString(),false)", "sourceAfterFix": "cppFile.writeString(buffer.toString(),false,\"UTF-8\")"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "e2cb9969ccab1d736e36c912a68d4bf20f640054", "fixCommitParentSHA1": "f696cf65933abcb1637afb21563da22bf3bef862", "bugFilePath": "gdx/src/com/badlogic/gdx/physics/box2d/joints/WheelJointDef.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/physics/box2d/joints/WheelJointDef.java b/gdx/src/com/badlogic/gdx/physics/box2d/joints/WheelJointDef.java\nindex 2895efa..03da566 100644\n--- a/gdx/src/com/badlogic/gdx/physics/box2d/joints/WheelJointDef.java\n+++ b/gdx/src/com/badlogic/gdx/physics/box2d/joints/WheelJointDef.java\n@@ -18,7 +18,7 @@\n \t\ttype = JointType.WheelJoint;\r\n \t}\r\n \t\r\n-\tvoid initialize(Body bodyA, Body bodyB, Vector2 anchor, Vector2 axis) {\r\n+\tpublic void initialize(Body bodyA, Body bodyB, Vector2 anchor, Vector2 axis) {\r\n \t\tthis.bodyA = bodyA;\r\n \t\tthis.bodyB = bodyB;\r\n \t\tlocalAnchorA.set(bodyA.getLocalPoint(anchor));\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 21, "bugNodeStartChar": 722, "bugNodeLength": 268, "fixLineNum": 21, "fixNodeStartChar": 702, "fixNodeLength": 269, "sourceBeforeFix": "0", "sourceAfterFix": "1"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "fc9291532ab7b35a24df2a673695598b5b65dff0", "fixCommitParentSHA1": "68d33369a29e0299799835ce68a87108d6f84812", "bugFilePath": "gdx/src/com/badlogic/gdx/math/Rectangle.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/Rectangle.java b/gdx/src/com/badlogic/gdx/math/Rectangle.java\nindex 6086c67..5c0cf3e 100644\n--- a/gdx/src/com/badlogic/gdx/math/Rectangle.java\n+++ b/gdx/src/com/badlogic/gdx/math/Rectangle.java\n@@ -101,8 +101,8 @@\n \t\tfloat ymin = rectangle.y;\r\n \t\tfloat ymax = ymin + rectangle.height;\r\n \r\n-\t\treturn ((xmin > x && xmin < x + width) || (xmax > x && xmax < x + width))\r\n-\t\t\t&& ((ymin > y && ymin < y + height) || (ymax > y && ymax < y + height));\r\n+\t\treturn ((xmin > x && xmin < x + width) && (xmax > x && xmax < x + width))\r\n+\t\t\t&& ((ymin > y && ymin < y + height) && (ymax > y && ymax < y + height));\r\n \t}\r\n \r\n \t/** @param rectangle the other {@link Rectangle}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 104, "bugNodeStartChar": 3120, "bugNodeLength": 64, "fixLineNum": 104, "fixNodeStartChar": 3017, "fixNodeLength": 64, "sourceBeforeFix": "(xmin > x && xmin < x + width) || (xmax > x && xmax < x + width)", "sourceAfterFix": "(xmin > x && xmin < x + width) && (xmax > x && xmax < x + width)"}, {"bugType": "SWAP_BOOLEAN_LITERAL", "fixCommitSHA1": "1176e8a1ba798ec3d6967b911f5d8f1c5f754691", "fixCommitParentSHA1": "bc3e4808f9bc056e4f6a46f67c17893a9b6c4f82", "bugFilePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/MD5Test.java", "fixPatch": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/MD5Test.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/MD5Test.java\nindex cec4db8..bb5f017 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/MD5Test.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/MD5Test.java\n@@ -43,7 +43,7 @@\n \t@Override\r\n \tpublic void create () {\r\n \t\tGdx.app.log(\"MD5 Test\", \"created\");\r\n-\t\tmodel = MD5Loader.loadModel(Gdx.files.internal(\"data/zfat.md5mesh\").read(), false);\r\n+\t\tmodel = MD5Loader.loadModel(Gdx.files.internal(\"data/zfat.md5mesh\").read(), true);\r\n \t\tanim = MD5Loader.loadAnimation(Gdx.files.internal(\"data/walk1.md5anim\").read());\r\n \t\tskeleton = new MD5Joints();\r\n \t\tskeleton.joints = new float[anim.frames[0].joints.length];\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 46, "bugNodeStartChar": 1836, "bugNodeLength": 74, "fixLineNum": 46, "fixNodeStartChar": 1791, "fixNodeLength": 73, "sourceBeforeFix": "MD5Loader.loadModel(Gdx.files.internal(\"data/zfat.md5mesh\").read(),false)", "sourceAfterFix": "MD5Loader.loadModel(Gdx.files.internal(\"data/zfat.md5mesh\").read(),true)"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "eabbe24abdfeb683bfadc7b1c21e466e25188fb5", "fixCommitParentSHA1": "eff28a186f0cdb96f9dae7879cc5632cc98893a2", "bugFilePath": "gdx/src/com/badlogic/gdx/assets/AssetManager.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/assets/AssetManager.java b/gdx/src/com/badlogic/gdx/assets/AssetManager.java\nindex 501d233..13b85e2 100644\n--- a/gdx/src/com/badlogic/gdx/assets/AssetManager.java\n+++ b/gdx/src/com/badlogic/gdx/assets/AssetManager.java\n@@ -204,7 +204,7 @@\n \t\t\t\tif (preloadQueue.size == 0) return true;\r\n \t\t\t\tnextTask();\r\n \t\t\t\t// second check if we tried to load an asset that's already loaded and the queue became empty.\r\n-\t\t\t\tif (preloadQueue.size == 0) return true;\r\n+\t\t\t\tif (preloadQueue.size == 0 || tasks.size() == 0) return true;\r\n \t\t\t}\r\n \t\t\treturn updateTask() && preloadQueue.size == 0;\r\n \t\t} catch (Throwable t) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 207, "bugNodeStartChar": 8302, "bugNodeLength": 22, "fixLineNum": 207, "fixNodeStartChar": 8097, "fixNodeLength": 43, "sourceBeforeFix": "preloadQueue.size == 0", "sourceAfterFix": "preloadQueue.size == 0 || tasks.size() == 0"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "eabbe24abdfeb683bfadc7b1c21e466e25188fb5", "fixCommitParentSHA1": "eff28a186f0cdb96f9dae7879cc5632cc98893a2", "bugFilePath": "gdx/src/com/badlogic/gdx/assets/AssetManager.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/assets/AssetManager.java b/gdx/src/com/badlogic/gdx/assets/AssetManager.java\nindex 501d233..13b85e2 100644\n--- a/gdx/src/com/badlogic/gdx/assets/AssetManager.java\n+++ b/gdx/src/com/badlogic/gdx/assets/AssetManager.java\n@@ -204,7 +204,7 @@\n \t\t\t\tif (preloadQueue.size == 0) return true;\r\n \t\t\t\tnextTask();\r\n \t\t\t\t// second check if we tried to load an asset that's already loaded and the queue became empty.\r\n-\t\t\t\tif (preloadQueue.size == 0) return true;\r\n+\t\t\t\tif (preloadQueue.size == 0 || tasks.size() == 0) return true;\r\n \t\t\t}\r\n \t\t\treturn updateTask() && preloadQueue.size == 0;\r\n \t\t} catch (Throwable t) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 207, "bugNodeStartChar": 8302, "bugNodeLength": 22, "fixLineNum": 207, "fixNodeStartChar": 8097, "fixNodeLength": 43, "sourceBeforeFix": "preloadQueue.size == 0", "sourceAfterFix": "preloadQueue.size == 0 || tasks.size() == 0"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "969f0110339763f523cbd41d2901b4fad75b3762", "fixCommitParentSHA1": "8049779a0f559d938dfb8259deb9d77acbed9dc1", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/glutils/IndexBufferObjectSubData.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/IndexBufferObjectSubData.java b/gdx/src/com/badlogic/gdx/graphics/glutils/IndexBufferObjectSubData.java\nindex 8a86c8c..e9ec82b 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/glutils/IndexBufferObjectSubData.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/IndexBufferObjectSubData.java\n@@ -150,7 +150,7 @@\n \tpublic void setIndices (short[] indices, int offset, int count) {\r\n \t\tisDirty = true;\r\n \t\tbuffer.clear();\r\n-\t\tbuffer.put(indices);\r\n+\t\tbuffer.put(indices, offset, count);\r\n \t\tbuffer.flip();\r\n \t\tbyteBuffer.position(0);\r\n \t\tbyteBuffer.limit(count << 1);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 153, "bugNodeStartChar": 5263, "bugNodeLength": 19, "fixLineNum": 153, "fixNodeStartChar": 5111, "fixNodeLength": 34, "sourceBeforeFix": "buffer.put(indices)", "sourceAfterFix": "buffer.put(indices,offset,count)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "8049779a0f559d938dfb8259deb9d77acbed9dc1", "fixCommitParentSHA1": "a2f3d407d4c468ff0c33f3996725f675983ee649", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/glutils/IndexBufferObject.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/IndexBufferObject.java b/gdx/src/com/badlogic/gdx/graphics/glutils/IndexBufferObject.java\nindex b6eec62..b758ac0 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/glutils/IndexBufferObject.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/IndexBufferObject.java\n@@ -139,12 +139,12 @@\n \t * \r\n \t * @param indices the vertex data\r\n \t * @param offset the offset to start copying the data from\r\n-\t * @param count the number of floats to copy\r\n+\t * @param count the number of shorts to copy\r\n \t */\r\n \tpublic void setIndices (short[] indices, int offset, int count) {\r\n \t\tisDirty = true;\r\n \t\tbuffer.clear();\r\n-\t\tbuffer.put(indices);\r\n+\t\tbuffer.put(indices, offset, count);\r\n \t\tbuffer.flip();\r\n \t\tbyteBuffer.position(0);\r\n \t\tbyteBuffer.limit(count << 1);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 147, "bugNodeStartChar": 4786, "bugNodeLength": 19, "fixLineNum": 147, "fixNodeStartChar": 4640, "fixNodeLength": 34, "sourceBeforeFix": "buffer.put(indices)", "sourceAfterFix": "buffer.put(indices,offset,count)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "3921b4761e32964f15705f0de5a40f080119d40e", "fixCommitParentSHA1": "0165b66fb4f1753491483cac0500c530e32b7180", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/actors/Image.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/actors/Image.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/actors/Image.java\nindex 183cc48..afd7fac 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/actors/Image.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/actors/Image.java\n@@ -48,7 +48,7 @@\n \t@Override protected void draw (SpriteBatch batch, float parentAlpha) {\r\n \t\tif (region.getTexture() != null) {\r\n \t\t\tbatch.setColor(color.r, color.g, color.b, color.a * parentAlpha);\r\n-\t\t\tif (scaleX == 0 && scaleY == 0 && rotation == 0)\r\n+\t\t\tif (scaleX == 1 && scaleY == 1 && rotation == 0)\r\n \t\t\t\tbatch.draw(region, x, y, width, height);\r\n \t\t\telse\r\n \t\t\t\tbatch.draw(region, x, y, originX, originY, width, height, scaleX, scaleY, rotation);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 51, "bugNodeStartChar": 1884, "bugNodeLength": 11, "fixLineNum": 51, "fixNodeStartChar": 1834, "fixNodeLength": 11, "sourceBeforeFix": "scaleX == 0", "sourceAfterFix": "scaleX == 1"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4e1cc538aaa75a9d0e9514effa6e3f3beeab3985", "fixCommitParentSHA1": "3fea6c956ceaa0edc638bcbcb04017774cfb31e5", "bugFilePath": "backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidFileHandle.java", "fixPatch": "diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidFileHandle.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidFileHandle.java\nindex f4c271f..5b615a8 100644\n--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidFileHandle.java\n+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidFileHandle.java\n@@ -95,7 +95,7 @@\n \t\t\t\tfor (int i = 0, n = handles.length; i < n; i++) {\r\n \t\t\t\t\tString path = relativePaths[i];\r\n \t\t\t\t\tif (!path.endsWith(suffix)) continue;\r\n-\t\t\t\t\thandles[i] = new AndroidFileHandle(assets, new File(file, path), type);\r\n+\t\t\t\t\thandles[count] = new AndroidFileHandle(assets, new File(file, path), type);\r\n \t\t\t\t\tcount++;\r\n \t\t\t\t}\r\n \t\t\t\tif (count < relativePaths.length) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 98, "bugNodeStartChar": 3213, "bugNodeLength": 10, "fixLineNum": 98, "fixNodeStartChar": 3116, "fixNodeLength": 14, "sourceBeforeFix": "handles[i]", "sourceAfterFix": "handles[count]"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "4e1cc538aaa75a9d0e9514effa6e3f3beeab3985", "fixCommitParentSHA1": "3fea6c956ceaa0edc638bcbcb04017774cfb31e5", "bugFilePath": "gdx/src/com/badlogic/gdx/files/FileHandle.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/files/FileHandle.java b/gdx/src/com/badlogic/gdx/files/FileHandle.java\nindex 91e009d..27c47a8 100644\n--- a/gdx/src/com/badlogic/gdx/files/FileHandle.java\n+++ b/gdx/src/com/badlogic/gdx/files/FileHandle.java\n@@ -188,7 +188,7 @@\n \t\tfor (int i = 0, n = relativePaths.length; i < n; i++) {\r\n \t\t\tString path = relativePaths[i];\r\n \t\t\tif (!path.endsWith(suffix)) continue;\r\n-\t\t\thandles[i] = child(path);\r\n+\t\t\thandles[count] = child(path);\r\n \t\t\tcount++;\r\n \t\t}\r\n \t\tif (count < relativePaths.length) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 191, "bugNodeStartChar": 7061, "bugNodeLength": 10, "fixLineNum": 191, "fixNodeStartChar": 6871, "fixNodeLength": 14, "sourceBeforeFix": "handles[i]", "sourceAfterFix": "handles[count]"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "aa153c05af20461798e8acaa4931174c752caff6", "fixCommitParentSHA1": "a595abd836ae1004e7bbdd05f1e5b19788815031", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/actors/Button.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/actors/Button.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/actors/Button.java\nindex 7c4edab..f92e898 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/actors/Button.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/actors/Button.java\n@@ -83,7 +83,7 @@\n \t\tTextureRegion region = pressed ? pressedRegion : unpressedRegion;\r\n \t\tbatch.setColor(color.r, color.g, color.b, color.a * parentAlpha);\r\n \t\tif (region.getTexture() != null) {\r\n-\t\t\tif (scaleX == 0 && scaleY == 0 && rotation == 0)\r\n+\t\t\tif (scaleX == 1 && scaleY == 1 && rotation == 0)\r\n \t\t\t\tbatch.draw(region, x, y, width, height);\r\n \t\t\telse\r\n \t\t\t\tbatch.draw(region, x, y, originX, originY, width, height, scaleX, scaleY, rotation);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 86, "bugNodeStartChar": 3050, "bugNodeLength": 11, "fixLineNum": 86, "fixNodeStartChar": 2965, "fixNodeLength": 11, "sourceBeforeFix": "scaleX == 0", "sourceAfterFix": "scaleX == 1"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "a595abd836ae1004e7bbdd05f1e5b19788815031", "fixCommitParentSHA1": "bab0962d622b1eb4dc249f78700bb8fdeac32634", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/OrthographicCamera.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/OrthographicCamera.java b/gdx/src/com/badlogic/gdx/graphics/OrthographicCamera.java\nindex 8d38575..d4a7f25 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/OrthographicCamera.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/OrthographicCamera.java\n@@ -57,6 +57,6 @@\n \t\tMatrix4.mul(combined.val, view.val);\r\n \t\tinvProjectionView.set(combined);\t\r\n \t\tMatrix4.inv(invProjectionView.val);\r\n-\t\tfrustum.update(combined);\r\n+\t\tfrustum.update(invProjectionView);\r\n \t}\r\n }\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 60, "bugNodeStartChar": 2137, "bugNodeLength": 24, "fixLineNum": 60, "fixNodeStartChar": 2078, "fixNodeLength": 33, "sourceBeforeFix": "frustum.update(combined)", "sourceAfterFix": "frustum.update(invProjectionView)"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "89bf3bfdc5ae8b7ab7b4564c9718201514bd260c", "fixCommitParentSHA1": "36610a10e2e4800a3243333e3483fd2f516781e1", "bugFilePath": "extensions/model-loaders/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonAnimation.java", "fixPatch": "diff --git a/extensions/model-loaders/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonAnimation.java b/extensions/model-loaders/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonAnimation.java\nindex 7d9475e..2037c43 100644\n--- a/extensions/model-loaders/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonAnimation.java\n+++ b/extensions/model-loaders/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonAnimation.java\n@@ -3,7 +3,7 @@\n import com.badlogic.gdx.graphics.g3d.model.Animation;\r\n \r\n public class SkeletonAnimation extends Animation {\r\n-\tpublic SkeletonKeyframe[][] perJointkeyFrames;\r\n+\tpublic final SkeletonKeyframe[][] perJointkeyFrames;\r\n \t\r\n \tpublic SkeletonAnimation(String name, float totalDuration, SkeletonKeyframe[][] perJointKeyFrames) {\r\n \t\tsuper(name, totalDuration);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 6, "bugNodeStartChar": 167, "bugNodeLength": 46, "fixLineNum": 6, "fixNodeStartChar": 162, "fixNodeLength": 52, "sourceBeforeFix": "1", "sourceAfterFix": "17"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "89bf3bfdc5ae8b7ab7b4564c9718201514bd260c", "fixCommitParentSHA1": "36610a10e2e4800a3243333e3483fd2f516781e1", "bugFilePath": "extensions/model-loaders/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonJoint.java", "fixPatch": "diff --git a/extensions/model-loaders/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonJoint.java b/extensions/model-loaders/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonJoint.java\nindex 8f23593..6335d8c 100644\n--- a/extensions/model-loaders/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonJoint.java\n+++ b/extensions/model-loaders/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonJoint.java\n@@ -10,7 +10,7 @@\n \tpublic int index;\r\n \tpublic int parentIndex;\r\n \tpublic SkeletonJoint parent;\r\n-\tpublic Array<SkeletonJoint> children = new Array<SkeletonJoint>(1);\r\n+\tpublic final Array<SkeletonJoint> children = new Array<SkeletonJoint>(1);\r\n \t\r\n \tpublic final Vector3 position = new Vector3();\t\r\n \tpublic final Quaternion rotation = new Quaternion(new Vector3(0, 1, 0), 0);\t\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 13, "bugNodeStartChar": 311, "bugNodeLength": 67, "fixLineNum": 13, "fixNodeStartChar": 299, "fixNodeLength": 73, "sourceBeforeFix": "1", "sourceAfterFix": "17"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "871a4d8777f3be998cac121365bdb483fb08b9e5", "fixCommitParentSHA1": "dcd706c7094ece4464a872334d9c8b6b89bc16ac", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/VertexAttributes.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/VertexAttributes.java b/gdx/src/com/badlogic/gdx/graphics/VertexAttributes.java\nindex ecc9af2..00cb3a0 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/VertexAttributes.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/VertexAttributes.java\n@@ -29,7 +29,7 @@\n \t * @author mzechner\r\n \t * \r\n \t */\r\n-\tpublic final class Usage {\r\n+\tpublic static final class Usage {\r\n \t\tpublic static final int Position = 0;\r\n \t\tpublic static final int Color = 1;\r\n \t\tpublic static final int ColorPacked = 5;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 26, "bugNodeStartChar": 1147, "bugNodeLength": 367, "fixLineNum": 26, "fixNodeStartChar": 1122, "fixNodeLength": 361, "sourceBeforeFix": "17", "sourceAfterFix": "25"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "24be4cdfe2a884863ae01bea386f7927120d88db", "fixCommitParentSHA1": "97eb2b9fdf606860cf28277ae909e39553946521", "bugFilePath": "gdx/src/com/badlogic/gdx/audio/analysis/AudioTools.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/audio/analysis/AudioTools.java b/gdx/src/com/badlogic/gdx/audio/analysis/AudioTools.java\nindex a16481a..4a925ea 100644\n--- a/gdx/src/com/badlogic/gdx/audio/analysis/AudioTools.java\n+++ b/gdx/src/com/badlogic/gdx/audio/analysis/AudioTools.java\n@@ -47,7 +47,7 @@\n \t * @param target the target buffer\r\n \t * @param numSamples the number of samples\r\n \t */\r\n-\tpublic static native void convertToShort (FloatBuffer source, FloatBuffer target, int numSamples);\r\n+\tpublic static native void convertToShort (FloatBuffer source, ShortBuffer target, int numSamples);\r\n \r\n \t/**\r\n \t * Converts the samples in source which are assumed to be interleaved left/right stereo samples to mono, writting the converted\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 50, "bugNodeStartChar": 2052, "bugNodeLength": 18, "fixLineNum": 50, "fixNodeStartChar": 2003, "fixNodeLength": 18, "sourceBeforeFix": "FloatBuffer target", "sourceAfterFix": "ShortBuffer target"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "f051bfd17154fe5974bd0af2b10e2926fe8191e8", "fixCommitParentSHA1": "2e4a5d3ae1d6885853ff3c3d059191564e3767da", "bugFilePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java", "fixPatch": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java\nindex 41c0338..d8ee8d1 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java\n@@ -208,7 +208,7 @@\n \t\t\t\t// get the world manifold from which we get the\r\n \t\t\t\t// contact points. A manifold can have 0, 1 or 2\r\n \t\t\t\t// contact points.\r\n-\t\t\t\tWorldManifold manifold = contact.GetWorldManifold();\r\n+\t\t\t\tWorldManifold manifold = contact.getWorldManifold();\r\n \t\t\t\tint numContactPoints = manifold.getNumberOfContactPoints();\r\n \t\t\t\tfor (int j = 0; j < numContactPoints; j++) {\r\n \t\t\t\t\tVector2 point = manifold.getPoints()[j];\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 211, "bugNodeStartChar": 8127, "bugNodeLength": 26, "fixLineNum": 211, "fixNodeStartChar": 7917, "fixNodeLength": 26, "sourceBeforeFix": "contact.GetWorldManifold()", "sourceAfterFix": "contact.getWorldManifold()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "f051bfd17154fe5974bd0af2b10e2926fe8191e8", "fixCommitParentSHA1": "2e4a5d3ae1d6885853ff3c3d059191564e3767da", "bugFilePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java", "fixPatch": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java\nindex 41c0338..d8ee8d1 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java\n@@ -208,7 +208,7 @@\n \t\t\t\t// get the world manifold from which we get the\r\n \t\t\t\t// contact points. A manifold can have 0, 1 or 2\r\n \t\t\t\t// contact points.\r\n-\t\t\t\tWorldManifold manifold = contact.GetWorldManifold();\r\n+\t\t\t\tWorldManifold manifold = contact.getWorldManifold();\r\n \t\t\t\tint numContactPoints = manifold.getNumberOfContactPoints();\r\n \t\t\t\tfor (int j = 0; j < numContactPoints; j++) {\r\n \t\t\t\t\tVector2 point = manifold.getPoints()[j];\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 211, "bugNodeStartChar": 8127, "bugNodeLength": 26, "fixLineNum": 211, "fixNodeStartChar": 7917, "fixNodeLength": 26, "sourceBeforeFix": "contact.GetWorldManifold()", "sourceAfterFix": "contact.getWorldManifold()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "d5a8271cd34c14e83c6b04a4435782dfd2a530ea", "fixCommitParentSHA1": "bb6ad058085d75473d72bb3452d5423cc98907cb", "bugFilePath": "gdx/src/com/badlogic/gdx/physics/box2d/World.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/physics/box2d/World.java b/gdx/src/com/badlogic/gdx/physics/box2d/World.java\nindex 7754a6f..14dbbc7 100644\n--- a/gdx/src/com/badlogic/gdx/physics/box2d/World.java\n+++ b/gdx/src/com/badlogic/gdx/physics/box2d/World.java\n@@ -526,7 +526,7 @@\n \r\n \tprivate void endContact (long contactAddr) {\r\n \t\tcontact.addr = contactAddr;\r\n-\t\tcontact.GetWorldManifold();\r\n+\t\tcontact.getWorldManifold();\r\n \t\tif (contactListener != null) contactListener.endContact(contact);\r\n \t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 529, "bugNodeStartChar": 21295, "bugNodeLength": 26, "fixLineNum": 529, "fixNodeStartChar": 20767, "fixNodeLength": 26, "sourceBeforeFix": "contact.GetWorldManifold()", "sourceAfterFix": "contact.getWorldManifold()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d5a8271cd34c14e83c6b04a4435782dfd2a530ea", "fixCommitParentSHA1": "bb6ad058085d75473d72bb3452d5423cc98907cb", "bugFilePath": "gdx/src/com/badlogic/gdx/physics/box2d/World.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/physics/box2d/World.java b/gdx/src/com/badlogic/gdx/physics/box2d/World.java\nindex 7754a6f..14dbbc7 100644\n--- a/gdx/src/com/badlogic/gdx/physics/box2d/World.java\n+++ b/gdx/src/com/badlogic/gdx/physics/box2d/World.java\n@@ -526,7 +526,7 @@\n \r\n \tprivate void endContact (long contactAddr) {\r\n \t\tcontact.addr = contactAddr;\r\n-\t\tcontact.GetWorldManifold();\r\n+\t\tcontact.getWorldManifold();\r\n \t\tif (contactListener != null) contactListener.endContact(contact);\r\n \t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 529, "bugNodeStartChar": 21295, "bugNodeLength": 26, "fixLineNum": 529, "fixNodeStartChar": 20767, "fixNodeLength": 26, "sourceBeforeFix": "contact.GetWorldManifold()", "sourceAfterFix": "contact.getWorldManifold()"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "172df327833aba5ce2c853bbc18b3826a5b83ee7", "fixCommitParentSHA1": "8b77c70d64c4f8847037afdaf96e5e833a94214c", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java b/gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java\nindex 4219475..9d1b1a1 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java\n@@ -89,7 +89,6 @@\n \t\t\t\telse if (pageImage == null) {\r\n \t\t\t\t\tFileHandle file = imagesDir.child(line);\r\n \r\n-\t\t\t\t\t// FIXME - Actually load in the requested format.\r\n \t\t\t\t\tFormat format = Format.valueOf(readValue(reader));\r\n \r\n \t\t\t\t\treadTuple(reader);\r\n@@ -108,7 +107,7 @@\n \t\t\t\t\t\trepeatY = Repeat;\r\n \t\t\t\t\t}\r\n \r\n-\t\t\t\t\tpageImage = new Texture(file, TextureFilter.isMipMap(min) || TextureFilter.isMipMap(max) ? true : false);\r\n+\t\t\t\t\tpageImage = new Texture(file, format, TextureFilter.isMipMap(min) || TextureFilter.isMipMap(max) ? true : false);\r\n \t\t\t\t\tpageImage.setFilter(min, max);\r\n \t\t\t\t\tpageImage.setWrap(repeatX, repeatY);\r\n \t\t\t\t\ttextures.add(pageImage);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 111, "bugNodeStartChar": 3916, "bugNodeLength": 92, "fixLineNum": 111, "fixNodeStartChar": 3806, "fixNodeLength": 100, "sourceBeforeFix": "new Texture(file,TextureFilter.isMipMap(min) || TextureFilter.isMipMap(max) ? true : false)", "sourceAfterFix": "new Texture(file,format,TextureFilter.isMipMap(min) || TextureFilter.isMipMap(max) ? true : false)"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "9cb9e88e6635a0eae34b6f035363da8d97b003fb", "fixCommitParentSHA1": "1c3fa618d03557ceda718dbd9d1d78713ca234d0", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/actors/Image.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/actors/Image.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/actors/Image.java\nindex e5ffd53..1f55225 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/actors/Image.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/actors/Image.java\n@@ -21,7 +21,7 @@\n import com.badlogic.gdx.scenes.scene2d.Actor;\r\n \r\n public class Image extends Actor {\r\n-\tpublic final TextureRegion region;\r\n+\tpublic TextureRegion region;\r\n \r\n \tpublic Image (String name) {\r\n \t\tsuper(name);\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 24, "bugNodeStartChar": 1056, "bugNodeLength": 34, "fixLineNum": 24, "fixNodeStartChar": 1033, "fixNodeLength": 28, "sourceBeforeFix": "17", "sourceAfterFix": "1"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "d825792ac494dd0257e0c2ec7acd60100ecfe700", "fixCommitParentSHA1": "0e4840bf36439eac9f09774a9c408a8c91438fe9", "bugFilePath": "backends/gdx-openal/src/com/badlogic/gdx/backends/openal/JavaSoundAudioDevice.java", "fixPatch": "diff --git a/backends/gdx-openal/src/com/badlogic/gdx/backends/openal/JavaSoundAudioDevice.java b/backends/gdx-openal/src/com/badlogic/gdx/backends/openal/JavaSoundAudioDevice.java\nindex 225376a..38d9c18 100644\n--- a/backends/gdx-openal/src/com/badlogic/gdx/backends/openal/JavaSoundAudioDevice.java\n+++ b/backends/gdx-openal/src/com/badlogic/gdx/backends/openal/JavaSoundAudioDevice.java\n@@ -72,7 +72,7 @@\n \t\t\tif (fValue > 1) fValue = 1;\r\n \t\t\tif (fValue < -1) fValue = -1;\r\n \t\t\tshort value = (short)(fValue * Short.MAX_VALUE);\r\n-\t\t\tbytes[j] = (byte)(value | 0xff);\r\n+\t\t\tbytes[j] = (byte)(value & 0xff);\r\n \t\t\tbytes[j + 1] = (byte)(value >> 8);\r\n \t\t}\r\n \r\n", "projectName": "libgdx.libgdx", "bugLineNum": 75, "bugNodeStartChar": 2590, "bugNodeLength": 12, "fixLineNum": 75, "fixNodeStartChar": 2516, "fixNodeLength": 12, "sourceBeforeFix": "value | 0xff", "sourceAfterFix": "value & 0xff"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "e4754241591a948b354f61953a998a63c96f79ac", "fixCommitParentSHA1": "ae92d90bc94df7ee226041e8b32e03771f0e9f7e", "bugFilePath": "demos/superjumper/superjumper/src/com/badlogicgames/superjumper/Settings.java", "fixPatch": "diff --git a/demos/superjumper/superjumper/src/com/badlogicgames/superjumper/Settings.java b/demos/superjumper/superjumper/src/com/badlogicgames/superjumper/Settings.java\nindex 2f95c62..5dcffd2 100644\n--- a/demos/superjumper/superjumper/src/com/badlogicgames/superjumper/Settings.java\n+++ b/demos/superjumper/superjumper/src/com/badlogicgames/superjumper/Settings.java\n@@ -22,7 +22,7 @@\n             for(int i = 0; i < 5; i++) {\r\n                 highscores[i] = Integer.parseInt(in.readLine());\r\n             }\r\n-        } catch (Exception e) {\r\n+        } catch (Throwable e) {\r\n             // :( It's ok we have defaults        \r\n         } finally {\r\n             try {\r\n@@ -42,7 +42,7 @@\n                 out.write(Integer.toString(highscores[i]));\r\n             }\r\n \r\n-        } catch (IOException e) {\r\n+        } catch (Throwable e) {\r\n         } finally {\r\n             try {\r\n                 if (out != null)\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 25, "bugNodeStartChar": 833, "bugNodeLength": 11, "fixLineNum": 25, "fixNodeStartChar": 809, "fixNodeLength": 11, "sourceBeforeFix": "Exception e", "sourceAfterFix": "Throwable e"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "e4754241591a948b354f61953a998a63c96f79ac", "fixCommitParentSHA1": "ae92d90bc94df7ee226041e8b32e03771f0e9f7e", "bugFilePath": "demos/superjumper/superjumper/src/com/badlogicgames/superjumper/Settings.java", "fixPatch": "diff --git a/demos/superjumper/superjumper/src/com/badlogicgames/superjumper/Settings.java b/demos/superjumper/superjumper/src/com/badlogicgames/superjumper/Settings.java\nindex 2f95c62..5dcffd2 100644\n--- a/demos/superjumper/superjumper/src/com/badlogicgames/superjumper/Settings.java\n+++ b/demos/superjumper/superjumper/src/com/badlogicgames/superjumper/Settings.java\n@@ -22,7 +22,7 @@\n             for(int i = 0; i < 5; i++) {\r\n                 highscores[i] = Integer.parseInt(in.readLine());\r\n             }\r\n-        } catch (Exception e) {\r\n+        } catch (Throwable e) {\r\n             // :( It's ok we have defaults        \r\n         } finally {\r\n             try {\r\n@@ -42,7 +42,7 @@\n                 out.write(Integer.toString(highscores[i]));\r\n             }\r\n \r\n-        } catch (IOException e) {\r\n+        } catch (Throwable e) {\r\n         } finally {\r\n             try {\r\n                 if (out != null)\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 45, "bugNodeStartChar": 1460, "bugNodeLength": 13, "fixLineNum": 45, "fixNodeStartChar": 1416, "fixNodeLength": 11, "sourceBeforeFix": "IOException e", "sourceAfterFix": "Throwable e"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "8cd252076648a5c848d6a85ae0d1405089a8d2c1", "fixCommitParentSHA1": "4a5549d1010b1e8a353404a769dd300789a9bae4", "bugFilePath": "gdx/src/com/badlogic/gdx/math/Matrix3.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/Matrix3.java b/gdx/src/com/badlogic/gdx/math/Matrix3.java\nindex 419e67f..0eee93c 100644\n--- a/gdx/src/com/badlogic/gdx/math/Matrix3.java\n+++ b/gdx/src/com/badlogic/gdx/math/Matrix3.java\n@@ -26,7 +26,7 @@\n public class Matrix3 implements Serializable {\t\r\n \tprivate static final long serialVersionUID = 7907569533774959788L;\r\n \tprivate final static float DEGREE_TO_RAD = (float)Math.PI / 180;\r\n-\tfloat[] vals = new float[9];\r\n+\tpublic float[] vals = new float[9];\r\n \r\n \tpublic Matrix3 () {\r\n \t\tidt();\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 29, "bugNodeStartChar": 1068, "bugNodeLength": 28, "fixLineNum": 29, "fixNodeStartChar": 1040, "fixNodeLength": 35, "sourceBeforeFix": "0", "sourceAfterFix": "1"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "a41179fbba2512dfa51a1057f5b32edbdba12c26", "fixCommitParentSHA1": "01c83632b4bb07cc3006b7b09764364a92cb5143", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/Pixmap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/Pixmap.java b/gdx/src/com/badlogic/gdx/graphics/Pixmap.java\nindex 738541d..f25cc79 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/Pixmap.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/Pixmap.java\n@@ -257,7 +257,7 @@\n \t * @param radius The radius in pixels\r\n \t */\r\n \tpublic void fillCircle (int x, int y, int radius) {\r\n-\t\tpixmap.drawCircle(x, y, radius, color);\r\n+\t\tpixmap.fillCircle(x, y, radius, color);\r\n \t}\r\n \r\n \t/**\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 260, "bugNodeStartChar": 9469, "bugNodeLength": 38, "fixLineNum": 260, "fixNodeStartChar": 9210, "fixNodeLength": 38, "sourceBeforeFix": "pixmap.drawCircle(x,y,radius,color)", "sourceAfterFix": "pixmap.fillCircle(x,y,radius,color)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "a41179fbba2512dfa51a1057f5b32edbdba12c26", "fixCommitParentSHA1": "01c83632b4bb07cc3006b7b09764364a92cb5143", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/Pixmap.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/Pixmap.java b/gdx/src/com/badlogic/gdx/graphics/Pixmap.java\nindex 738541d..f25cc79 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/Pixmap.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/Pixmap.java\n@@ -257,7 +257,7 @@\n \t * @param radius The radius in pixels\r\n \t */\r\n \tpublic void fillCircle (int x, int y, int radius) {\r\n-\t\tpixmap.drawCircle(x, y, radius, color);\r\n+\t\tpixmap.fillCircle(x, y, radius, color);\r\n \t}\r\n \r\n \t/**\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 260, "bugNodeStartChar": 9469, "bugNodeLength": 38, "fixLineNum": 260, "fixNodeStartChar": 9210, "fixNodeLength": 38, "sourceBeforeFix": "pixmap.drawCircle(x,y,radius,color)", "sourceAfterFix": "pixmap.fillCircle(x,y,radius,color)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "3a07232892047c06492835c5851f027744ebe998", "fixCommitParentSHA1": "7a7a4e3de8499ad7c258fba6430a5d674371ab60", "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/actions/ScaleTo.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/ScaleTo.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/ScaleTo.java\nindex bd68815..37cb2ca 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/ScaleTo.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/ScaleTo.java\n@@ -33,7 +33,7 @@\n \tprotected float deltaScaleX;\r\n \tprotected float deltaScaleY;\r\n \r\n-\tpublic static AnimationAction $ (float scaleX, float scaleY, float duration) {\r\n+\tpublic static ScaleTo $ (float scaleX, float scaleY, float duration) {\r\n \t\tScaleTo action = pool.obtain();\r\n \t\taction.scaleX = scaleX;\r\n \t\taction.scaleY = scaleY;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 36, "bugNodeStartChar": 1331, "bugNodeLength": 258, "fixLineNum": 36, "fixNodeStartChar": 1296, "fixNodeLength": 243, "sourceBeforeFix": "public static AnimationAction $(float scaleX,float scaleY,float duration){   ScaleTo action=pool.obtain();   action.scaleX=scaleX;   action.scaleY=scaleY;   action.duration=duration;   action.invDuration=1 / duration;   return action; } ", "sourceAfterFix": "public static ScaleTo $(float scaleX,float scaleY,float duration){   ScaleTo action=pool.obtain();   action.scaleX=scaleX;   action.scaleY=scaleY;   action.duration=duration;   action.invDuration=1 / duration;   return action; } "}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "dd80647fbf218880e5f8d72441d080b6c92778fa", "fixCommitParentSHA1": "495acc3d9ba679323261f90372e5ca6a6d4cc2fe", "bugFilePath": "backends/gdx-openal/src/com/badlogic/gdx/backends/openal/OggInputStream.java", "fixPatch": "diff --git a/backends/gdx-openal/src/com/badlogic/gdx/backends/openal/OggInputStream.java b/backends/gdx-openal/src/com/badlogic/gdx/backends/openal/OggInputStream.java\nindex 9ec64bf..2a42fcc 100644\n--- a/backends/gdx-openal/src/com/badlogic/gdx/backends/openal/OggInputStream.java\n+++ b/backends/gdx-openal/src/com/badlogic/gdx/backends/openal/OggInputStream.java\n@@ -168,7 +168,7 @@\n \t\ttry {\r\n \t\t\tbytes = input.read(buffer, index, 4096);\r\n \t\t} catch (Exception e) {\r\n-\t\t\tthrow new GdxRuntimeException(\"Failure reading Vorbis.\");\r\n+\t\t\tthrow new GdxRuntimeException(\"Failure reading Vorbis.\", e);\r\n \t\t}\r\n \t\tsyncState.wrote(bytes);\r\n \r\n@@ -252,7 +252,7 @@\n \t\t\ttry {\r\n \t\t\t\tbytes = input.read(buffer, index, 4096);\r\n \t\t\t} catch (Exception e) {\r\n-\t\t\t\tthrow new GdxRuntimeException(\"Failed to read Vorbis.\");\r\n+\t\t\t\tthrow new GdxRuntimeException(\"Failed to read Vorbis.\", e);\r\n \t\t\t}\r\n \t\t\tif (bytes == 0 && i < 2) {\r\n \t\t\t\tthrow new GdxRuntimeException(\"End of file before finding all Vorbis headers.\");\r\n@@ -393,7 +393,7 @@\n \t\t\t\t\t\ttry {\r\n \t\t\t\t\t\t\tbytes = input.read(buffer, index, 4096);\r\n \t\t\t\t\t\t} catch (Exception e) {\r\n-\t\t\t\t\t\t\tthrow new GdxRuntimeException(\"Error during Vorbis decoding.\");\r\n+\t\t\t\t\t\t\tthrow new GdxRuntimeException(\"Error during Vorbis decoding.\", e);\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t} else {\r\n \t\t\t\t\t\tbytes = 0;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 171, "bugNodeStartChar": 6111, "bugNodeLength": 50, "fixLineNum": 171, "fixNodeStartChar": 5941, "fixNodeLength": 53, "sourceBeforeFix": "new GdxRuntimeException(\"Failure reading Vorbis.\")", "sourceAfterFix": "new GdxRuntimeException(\"Failure reading Vorbis.\",e)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "dd80647fbf218880e5f8d72441d080b6c92778fa", "fixCommitParentSHA1": "495acc3d9ba679323261f90372e5ca6a6d4cc2fe", "bugFilePath": "backends/gdx-openal/src/com/badlogic/gdx/backends/openal/OggInputStream.java", "fixPatch": "diff --git a/backends/gdx-openal/src/com/badlogic/gdx/backends/openal/OggInputStream.java b/backends/gdx-openal/src/com/badlogic/gdx/backends/openal/OggInputStream.java\nindex 9ec64bf..2a42fcc 100644\n--- a/backends/gdx-openal/src/com/badlogic/gdx/backends/openal/OggInputStream.java\n+++ b/backends/gdx-openal/src/com/badlogic/gdx/backends/openal/OggInputStream.java\n@@ -168,7 +168,7 @@\n \t\ttry {\r\n \t\t\tbytes = input.read(buffer, index, 4096);\r\n \t\t} catch (Exception e) {\r\n-\t\t\tthrow new GdxRuntimeException(\"Failure reading Vorbis.\");\r\n+\t\t\tthrow new GdxRuntimeException(\"Failure reading Vorbis.\", e);\r\n \t\t}\r\n \t\tsyncState.wrote(bytes);\r\n \r\n@@ -252,7 +252,7 @@\n \t\t\ttry {\r\n \t\t\t\tbytes = input.read(buffer, index, 4096);\r\n \t\t\t} catch (Exception e) {\r\n-\t\t\t\tthrow new GdxRuntimeException(\"Failed to read Vorbis.\");\r\n+\t\t\t\tthrow new GdxRuntimeException(\"Failed to read Vorbis.\", e);\r\n \t\t\t}\r\n \t\t\tif (bytes == 0 && i < 2) {\r\n \t\t\t\tthrow new GdxRuntimeException(\"End of file before finding all Vorbis headers.\");\r\n@@ -393,7 +393,7 @@\n \t\t\t\t\t\ttry {\r\n \t\t\t\t\t\t\tbytes = input.read(buffer, index, 4096);\r\n \t\t\t\t\t\t} catch (Exception e) {\r\n-\t\t\t\t\t\t\tthrow new GdxRuntimeException(\"Error during Vorbis decoding.\");\r\n+\t\t\t\t\t\t\tthrow new GdxRuntimeException(\"Error during Vorbis decoding.\", e);\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t} else {\r\n \t\t\t\t\t\tbytes = 0;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 255, "bugNodeStartChar": 9147, "bugNodeLength": 49, "fixLineNum": 255, "fixNodeStartChar": 8893, "fixNodeLength": 52, "sourceBeforeFix": "new GdxRuntimeException(\"Failed to read Vorbis.\")", "sourceAfterFix": "new GdxRuntimeException(\"Failed to read Vorbis.\",e)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "dd80647fbf218880e5f8d72441d080b6c92778fa", "fixCommitParentSHA1": "495acc3d9ba679323261f90372e5ca6a6d4cc2fe", "bugFilePath": "backends/gdx-openal/src/com/badlogic/gdx/backends/openal/OggInputStream.java", "fixPatch": "diff --git a/backends/gdx-openal/src/com/badlogic/gdx/backends/openal/OggInputStream.java b/backends/gdx-openal/src/com/badlogic/gdx/backends/openal/OggInputStream.java\nindex 9ec64bf..2a42fcc 100644\n--- a/backends/gdx-openal/src/com/badlogic/gdx/backends/openal/OggInputStream.java\n+++ b/backends/gdx-openal/src/com/badlogic/gdx/backends/openal/OggInputStream.java\n@@ -168,7 +168,7 @@\n \t\ttry {\r\n \t\t\tbytes = input.read(buffer, index, 4096);\r\n \t\t} catch (Exception e) {\r\n-\t\t\tthrow new GdxRuntimeException(\"Failure reading Vorbis.\");\r\n+\t\t\tthrow new GdxRuntimeException(\"Failure reading Vorbis.\", e);\r\n \t\t}\r\n \t\tsyncState.wrote(bytes);\r\n \r\n@@ -252,7 +252,7 @@\n \t\t\ttry {\r\n \t\t\t\tbytes = input.read(buffer, index, 4096);\r\n \t\t\t} catch (Exception e) {\r\n-\t\t\t\tthrow new GdxRuntimeException(\"Failed to read Vorbis.\");\r\n+\t\t\t\tthrow new GdxRuntimeException(\"Failed to read Vorbis.\", e);\r\n \t\t\t}\r\n \t\t\tif (bytes == 0 && i < 2) {\r\n \t\t\t\tthrow new GdxRuntimeException(\"End of file before finding all Vorbis headers.\");\r\n@@ -393,7 +393,7 @@\n \t\t\t\t\t\ttry {\r\n \t\t\t\t\t\t\tbytes = input.read(buffer, index, 4096);\r\n \t\t\t\t\t\t} catch (Exception e) {\r\n-\t\t\t\t\t\t\tthrow new GdxRuntimeException(\"Error during Vorbis decoding.\");\r\n+\t\t\t\t\t\t\tthrow new GdxRuntimeException(\"Error during Vorbis decoding.\", e);\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t} else {\r\n \t\t\t\t\t\tbytes = 0;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 396, "bugNodeStartChar": 13568, "bugNodeLength": 56, "fixLineNum": 396, "fixNodeStartChar": 13173, "fixNodeLength": 59, "sourceBeforeFix": "new GdxRuntimeException(\"Error during Vorbis decoding.\")", "sourceAfterFix": "new GdxRuntimeException(\"Error during Vorbis decoding.\",e)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "bc3e1dce275070b794effd62dae6d4c352fdb83a", "fixCommitParentSHA1": "4d60f5138af1f2d68238d603a68ab2455d352c6c", "bugFilePath": "demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/GdxInvaders.java", "fixPatch": "diff --git a/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/GdxInvaders.java b/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/GdxInvaders.java\nindex 1e31a4a..ade6a19 100644\n--- a/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/GdxInvaders.java\n+++ b/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/GdxInvaders.java\n@@ -71,7 +71,7 @@\n \r\n \t@Override public void create () {\r\n \t\tif (!isInitialized) {\r\n-\t\t\tscreen = new GameOver(Gdx.app);\r\n+\t\t\tscreen = new MainMenu(Gdx.app);\r\n \t\t\tMusic music = Gdx.audio.newMusic(Gdx.files.getFileHandle(\"data/8.12.mp3\", FileType.Internal));\r\n \t\t\tmusic.setLooping(true);\r\n \t\t\tmusic.play();\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 74, "bugNodeStartChar": 2303, "bugNodeLength": 21, "fixLineNum": 74, "fixNodeStartChar": 2230, "fixNodeLength": 21, "sourceBeforeFix": "new GameOver(Gdx.app)", "sourceAfterFix": "new MainMenu(Gdx.app)"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "ca0e2b57ea886bbc07796745d077dc8773c93c5f", "fixCommitParentSHA1": "64f57a05e52ef8806b0ff58a8a99de372875b5c5", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/SpriteBatch.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/SpriteBatch.java b/gdx/src/com/badlogic/gdx/graphics/SpriteBatch.java\nindex 5dd600c..ba50be2 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/SpriteBatch.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/SpriteBatch.java\n@@ -85,7 +85,7 @@\n \r\n \tprivate ShaderProgram shader;\r\n \r\n-\tprivate float color = Color.WHITE.toFloatBits();\r\n+\tfloat color = Color.WHITE.toFloatBits();\r\n \tprivate Color tempColor = new Color(1, 1, 1, 1);\r\n \r\n \t/** number of render calls **/\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 88, "bugNodeStartChar": 3359, "bugNodeLength": 48, "fixLineNum": 88, "fixNodeStartChar": 3272, "fixNodeLength": 40, "sourceBeforeFix": "2", "sourceAfterFix": "0"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "336e603a61b89a1aac0225925081b96e0a6a38f7", "fixCommitParentSHA1": "d40c5d8c8f2b9c0eeee44ed1288763b25dcd5b1e", "bugFilePath": "gdx/src/com/badlogic/gdx/utils/MathUtils.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/MathUtils.java b/gdx/src/com/badlogic/gdx/utils/MathUtils.java\nindex 652e46d..df28be2 100644\n--- a/gdx/src/com/badlogic/gdx/utils/MathUtils.java\n+++ b/gdx/src/com/badlogic/gdx/utils/MathUtils.java\n@@ -161,7 +161,7 @@\n \r\n \tstatic private final int BIG_ENOUGH_INT = 16 * 1024;\r\n \tstatic private final double BIG_ENOUGH_FLOOR = BIG_ENOUGH_INT;\r\n-\tstatic private final double BIG_ENOUGH_CEIL = BIG_ENOUGH_INT + 0.5;\r\n+\tstatic private final double BIG_ENOUGH_CEIL = BIG_ENOUGH_INT + 0.99999999;\r\n \r\n \tstatic public int floor (float x) {\r\n \t\treturn (int)(x + BIG_ENOUGH_FLOOR) - BIG_ENOUGH_INT;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 164, "bugNodeStartChar": 5042, "bugNodeLength": 20, "fixLineNum": 164, "fixNodeStartChar": 4879, "fixNodeLength": 27, "sourceBeforeFix": "BIG_ENOUGH_INT + 0.5", "sourceAfterFix": "BIG_ENOUGH_INT + 0.99999999"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "71d2b3fff912e04fac92334165e85163ffa2a0ee", "fixCommitParentSHA1": "7c7a6511c33fb544042efdd9cfaecad611878d26", "bugFilePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/MD5Test.java", "fixPatch": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/MD5Test.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/MD5Test.java\nindex f79afbb..fe6039c 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/MD5Test.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/MD5Test.java\n@@ -39,12 +39,12 @@\n \r\n \t@Override public void create () {\r\n \t\tGdx.app.log(\"MD5 Test\", \"created\");\r\n-\t\tmodel = MD5Loader.loadModel(Gdx.files.internal(\"data/zfat.md5mesh\").read());\r\n+\t\tmodel = MD5Loader.loadModel(Gdx.files.internal(\"data/zfat.md5mesh\").read(), false);\r\n \t\tanim = MD5Loader.loadAnimation(Gdx.files.internal(\"data/walk1.md5anim\").read());\r\n \t\tskeleton = new MD5Joints();\r\n \t\tskeleton.joints = new float[anim.frames[0].joints.length];\r\n \t\tanimInfo = new MD5AnimationInfo(anim.frames.length, anim.secondsPerFrame);\r\n-\t\trenderer = new MD5Renderer(model, true);\r\n+\t\trenderer = new MD5Renderer(model, false, true);\r\n \t\trenderer.setSkeleton(model.baseSkeleton);\r\n \r\n \t\t// long start = System.nanoTime();\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 42, "bugNodeStartChar": 1700, "bugNodeLength": 67, "fixLineNum": 42, "fixNodeStartChar": 1659, "fixNodeLength": 74, "sourceBeforeFix": "MD5Loader.loadModel(Gdx.files.internal(\"data/zfat.md5mesh\").read())", "sourceAfterFix": "MD5Loader.loadModel(Gdx.files.internal(\"data/zfat.md5mesh\").read(),false)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "71d2b3fff912e04fac92334165e85163ffa2a0ee", "fixCommitParentSHA1": "7c7a6511c33fb544042efdd9cfaecad611878d26", "bugFilePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/MD5Test.java", "fixPatch": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/MD5Test.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/MD5Test.java\nindex f79afbb..fe6039c 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/MD5Test.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/MD5Test.java\n@@ -39,12 +39,12 @@\n \r\n \t@Override public void create () {\r\n \t\tGdx.app.log(\"MD5 Test\", \"created\");\r\n-\t\tmodel = MD5Loader.loadModel(Gdx.files.internal(\"data/zfat.md5mesh\").read());\r\n+\t\tmodel = MD5Loader.loadModel(Gdx.files.internal(\"data/zfat.md5mesh\").read(), false);\r\n \t\tanim = MD5Loader.loadAnimation(Gdx.files.internal(\"data/walk1.md5anim\").read());\r\n \t\tskeleton = new MD5Joints();\r\n \t\tskeleton.joints = new float[anim.frames[0].joints.length];\r\n \t\tanimInfo = new MD5AnimationInfo(anim.frames.length, anim.secondsPerFrame);\r\n-\t\trenderer = new MD5Renderer(model, true);\r\n+\t\trenderer = new MD5Renderer(model, false, true);\r\n \t\trenderer.setSkeleton(model.baseSkeleton);\r\n \r\n \t\t// long start = System.nanoTime();\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 47, "bugNodeStartChar": 2038, "bugNodeLength": 28, "fixLineNum": 47, "fixNodeStartChar": 1992, "fixNodeLength": 35, "sourceBeforeFix": "new MD5Renderer(model,true)", "sourceAfterFix": "new MD5Renderer(model,false,true)"}, {"bugType": "CHANGE_OPERAND", "fixCommitSHA1": "0e597ee397058f4b418d5509df27ffb332929ef1", "fixCommitParentSHA1": "87dcc715ccd517de4a168738c946526db897d0fd", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/Sprite.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/Sprite.java b/gdx/src/com/badlogic/gdx/graphics/Sprite.java\nindex 7a71032..223b1e5 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/Sprite.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/Sprite.java\n@@ -334,7 +334,7 @@\n \t\t\t\tfinal float localYSin = localY * sin;\r\n \t\t\t\tfinal float localX2Cos = localX2 * cos;\r\n \t\t\t\tfinal float localX2Sin = localX2 * sin;\r\n-\t\t\t\tfinal float localY2Cos = localX2 * cos;\r\n+\t\t\t\tfinal float localY2Cos = localY2 * cos;\r\n \t\t\t\tfinal float localY2Sin = localY2 * sin;\r\n \r\n \t\t\t\tfinal float x1 = localXCos - localYSin + worldOriginX;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 337, "bugNodeStartChar": 10850, "bugNodeLength": 13, "fixLineNum": 337, "fixNodeStartChar": 10514, "fixNodeLength": 13, "sourceBeforeFix": "localX2 * cos", "sourceAfterFix": "localY2 * cos"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "0e597ee397058f4b418d5509df27ffb332929ef1", "fixCommitParentSHA1": "87dcc715ccd517de4a168738c946526db897d0fd", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/Sprite.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/Sprite.java b/gdx/src/com/badlogic/gdx/graphics/Sprite.java\nindex 7a71032..223b1e5 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/Sprite.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/Sprite.java\n@@ -334,7 +334,7 @@\n \t\t\t\tfinal float localYSin = localY * sin;\r\n \t\t\t\tfinal float localX2Cos = localX2 * cos;\r\n \t\t\t\tfinal float localX2Sin = localX2 * sin;\r\n-\t\t\t\tfinal float localY2Cos = localX2 * cos;\r\n+\t\t\t\tfinal float localY2Cos = localY2 * cos;\r\n \t\t\t\tfinal float localY2Sin = localY2 * sin;\r\n \r\n \t\t\t\tfinal float x1 = localXCos - localYSin + worldOriginX;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 337, "bugNodeStartChar": 10850, "bugNodeLength": 13, "fixLineNum": 337, "fixNodeStartChar": 10514, "fixNodeLength": 13, "sourceBeforeFix": "localX2 * cos", "sourceAfterFix": "localY2 * cos"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "b8a86c4259cf3d058106ef9c0388a86fae42469f", "fixCommitParentSHA1": "1982e95061fe991f2a00979cf97a6edadce04833", "bugFilePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/TileTest.java", "fixPatch": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/TileTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/TileTest.java\nindex 1739621..1740101 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/TileTest.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/TileTest.java\n@@ -1,3 +1,15 @@\n+/*\r\n+ * Copyright 2010 Mario Zechner (contact@badlogicgames.com), Nathan Sweet (admin@esotericsoftware.com)\r\n+ * \r\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the\r\n+ * License. You may obtain a copy of the License at\r\n+ * \r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ * \r\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\"\r\n+ * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language\r\n+ * governing permissions and limitations under the License.\r\n+ */\r\n package com.badlogic.gdx.tests;\r\n \r\n import com.badlogic.gdx.Gdx;\r\n@@ -11,7 +23,7 @@\n import com.badlogic.gdx.tests.utils.GdxTest;\r\n \r\n public class TileTest extends GdxTest {\r\n-\tstatic final int LAYERS = 10;\r\n+\tstatic final int LAYERS = 5;\r\n \tstatic final int BLOCK_TILES = 25;\r\n \tstatic final int WIDTH = 15;\r\n \tstatic final int HEIGHT = 10;\r\n@@ -26,7 +38,7 @@\n \tpublic void create() {\r\n \t\tcam = new OrthographicCamera();\r\n \t\tcam.setViewport(480, 320);\r\n-\t\tcam.getPosition().set(WIDTH*32/2, 10*HEIGHT/2,0);\t\t\r\n+\t\tcam.getPosition().set(WIDTH*32/2, HEIGHT/2,0);\t\t\r\n \t\ttexture = Gdx.graphics.newTexture(Gdx.files.internal(\"data/tiles.png\"), TextureFilter.Nearest, TextureFilter.Nearest, TextureWrap.ClampToEdge, TextureWrap.ClampToEdge);\r\n \t\t\r\n \t\tfor(int i = 0; i < LAYERS; i++) {\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 14, "bugNodeStartChar": 509, "bugNodeLength": 11, "fixLineNum": 14, "fixNodeStartChar": 496, "fixNodeLength": 10, "sourceBeforeFix": "LAYERS=10", "sourceAfterFix": "LAYERS=5"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "338d4a036b25526d2e5bf53c5e49f56ccbbf356f", "fixCommitParentSHA1": "93c23047593c2b388b3689cc85e4d0ca9a71af29", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/SpriteCache.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/SpriteCache.java b/gdx/src/com/badlogic/gdx/graphics/SpriteCache.java\nindex 36a90f3..4a62d3c 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/SpriteCache.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/SpriteCache.java\n@@ -99,7 +99,7 @@\n \t */\r\n \tpublic void beginCache () {\r\n \t\tif (currentCache != null) throw new IllegalStateException(\"endCache must be called before begin.\");\r\n-\t\tcurrentCache = new Cache(caches.size(), mesh.getNumVertices() / 2 * 6);\r\n+\t\tcurrentCache = new Cache(caches.size(), mesh.getNumVertices() / 4 * 6);\r\n \t\tcaches.add(currentCache);\r\n \t\tmesh.getVerticesBuffer().compact();\r\n \t}\r\n@@ -536,7 +536,7 @@\n \t\tif (!drawing) throw new IllegalStateException(\"SpriteCache.begin must be called before draw.\");\r\n \r\n \t\tCache cache = caches.get(cacheID);\r\n-\t\toffset = offset * 12 + cache.offset;\r\n+\t\toffset = offset * 6 + cache.offset;\r\n \t\tlength *= 6;\r\n \t\tTexture[] textures = cache.textures;\r\n \t\tint[] counts = cache.counts;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 102, "bugNodeStartChar": 4562, "bugNodeLength": 25, "fixLineNum": 102, "fixNodeStartChar": 4461, "fixNodeLength": 25, "sourceBeforeFix": "mesh.getNumVertices() / 2", "sourceAfterFix": "mesh.getNumVertices() / 4"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "338d4a036b25526d2e5bf53c5e49f56ccbbf356f", "fixCommitParentSHA1": "93c23047593c2b388b3689cc85e4d0ca9a71af29", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/SpriteCache.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/SpriteCache.java b/gdx/src/com/badlogic/gdx/graphics/SpriteCache.java\nindex 36a90f3..4a62d3c 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/SpriteCache.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/SpriteCache.java\n@@ -99,7 +99,7 @@\n \t */\r\n \tpublic void beginCache () {\r\n \t\tif (currentCache != null) throw new IllegalStateException(\"endCache must be called before begin.\");\r\n-\t\tcurrentCache = new Cache(caches.size(), mesh.getNumVertices() / 2 * 6);\r\n+\t\tcurrentCache = new Cache(caches.size(), mesh.getNumVertices() / 4 * 6);\r\n \t\tcaches.add(currentCache);\r\n \t\tmesh.getVerticesBuffer().compact();\r\n \t}\r\n@@ -536,7 +536,7 @@\n \t\tif (!drawing) throw new IllegalStateException(\"SpriteCache.begin must be called before draw.\");\r\n \r\n \t\tCache cache = caches.get(cacheID);\r\n-\t\toffset = offset * 12 + cache.offset;\r\n+\t\toffset = offset * 6 + cache.offset;\r\n \t\tlength *= 6;\r\n \t\tTexture[] textures = cache.textures;\r\n \t\tint[] counts = cache.counts;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 539, "bugNodeStartChar": 16327, "bugNodeLength": 11, "fixLineNum": 539, "fixNodeStartChar": 15789, "fixNodeLength": 10, "sourceBeforeFix": "offset * 12", "sourceAfterFix": "offset * 6"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "213109c115e65588b265650eee80fad7652b2129", "fixCommitParentSHA1": "fae7683b0f4ab96e6c3fd95ee2d97bc51bc27693", "bugFilePath": "backends/gdx-backend-jogl/src/com/badlogic/gdx/backends/jogl/JoglAudio.java", "fixPatch": "diff --git a/backends/gdx-backend-jogl/src/com/badlogic/gdx/backends/jogl/JoglAudio.java b/backends/gdx-backend-jogl/src/com/badlogic/gdx/backends/jogl/JoglAudio.java\nindex 83241ad..eeddeb1 100644\n--- a/backends/gdx-backend-jogl/src/com/badlogic/gdx/backends/jogl/JoglAudio.java\n+++ b/backends/gdx-backend-jogl/src/com/badlogic/gdx/backends/jogl/JoglAudio.java\n@@ -121,7 +121,7 @@\n \t\ttry {\r\n \t\t\tJoglMusic music = new JoglMusic(((JoglFileHandle)file));\r\n \t\t\treturn music;\r\n-\t\t} catch (Exception e) {\r\n+\t\t} catch (Throwable e) {\r\n \t\t\tthrow new GdxRuntimeException(\"Couldn't create Music instance from file '\" + file + \"'\", e);\r\n \t\t}\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 124, "bugNodeStartChar": 3832, "bugNodeLength": 11, "fixLineNum": 124, "fixNodeStartChar": 3709, "fixNodeLength": 11, "sourceBeforeFix": "Exception e", "sourceAfterFix": "Throwable e"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "213109c115e65588b265650eee80fad7652b2129", "fixCommitParentSHA1": "fae7683b0f4ab96e6c3fd95ee2d97bc51bc27693", "bugFilePath": "backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglAudio.java", "fixPatch": "diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglAudio.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglAudio.java\nindex 3105e66..81312ec 100644\n--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglAudio.java\n+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglAudio.java\n@@ -115,7 +115,7 @@\n \t\ttry {\r\n \t\t\tLwjglMusic music = new LwjglMusic(((LwjglFileHandle)file));\r\n \t\t\treturn music;\r\n-\t\t} catch (Exception e) {\r\n+\t\t} catch (Throwable e) {\r\n \t\t\tthrow new GdxRuntimeException(\"Couldn't create Music instance from file '\" + file + \"'\", e);\r\n \t\t}\r\n \t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 118, "bugNodeStartChar": 3777, "bugNodeLength": 11, "fixLineNum": 118, "fixNodeStartChar": 3660, "fixNodeLength": 11, "sourceBeforeFix": "Exception e", "sourceAfterFix": "Throwable e"}, {"bugType": "SWAP_BOOLEAN_LITERAL", "fixCommitSHA1": "50c8665ef22bfba8cda58ba7266288212cdfb301", "fixCommitParentSHA1": "13805f5791d36481aa94f7e2d7ab0408ec7af451", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/glutils/VertexBufferObject.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/VertexBufferObject.java b/gdx/src/com/badlogic/gdx/graphics/glutils/VertexBufferObject.java\nindex 16be058..fc013a7 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/glutils/VertexBufferObject.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/VertexBufferObject.java\n@@ -64,12 +64,12 @@\n \t\tif( Gdx.app.getType() == ApplicationType.Android && Gdx.app.getVersion() < 5 ) {\r\n \t\t\tbyteBuffer = ByteBuffer.allocate(this.attributes.vertexSize * numVertices);\r\n \t\t\tbyteBuffer.order(ByteOrder.nativeOrder());\r\n-\t\t\tisDirect = true;\r\n+\t\t\tisDirect = false;\r\n \t\t}\r\n \t\telse {\r\n \t\t\tbyteBuffer = ByteBuffer.allocateDirect(this.attributes.vertexSize * numVertices);\r\n \t\t\tbyteBuffer.order(ByteOrder.nativeOrder());\r\n-\t\t\tisDirect = false;\r\n+\t\t\tisDirect = true;\r\n \t\t}\t\t\r\n \t\tbuffer = byteBuffer.asFloatBuffer();\r\n \t\tbufferHandle = createBufferObject();\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 67, "bugNodeStartChar": 2237, "bugNodeLength": 15, "fixLineNum": 67, "fixNodeStartChar": 2171, "fixNodeLength": 16, "sourceBeforeFix": "isDirect=true", "sourceAfterFix": "isDirect=false"}, {"bugType": "SWAP_BOOLEAN_LITERAL", "fixCommitSHA1": "50c8665ef22bfba8cda58ba7266288212cdfb301", "fixCommitParentSHA1": "13805f5791d36481aa94f7e2d7ab0408ec7af451", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/glutils/VertexBufferObject.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/VertexBufferObject.java b/gdx/src/com/badlogic/gdx/graphics/glutils/VertexBufferObject.java\nindex 16be058..fc013a7 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/glutils/VertexBufferObject.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/VertexBufferObject.java\n@@ -64,12 +64,12 @@\n \t\tif( Gdx.app.getType() == ApplicationType.Android && Gdx.app.getVersion() < 5 ) {\r\n \t\t\tbyteBuffer = ByteBuffer.allocate(this.attributes.vertexSize * numVertices);\r\n \t\t\tbyteBuffer.order(ByteOrder.nativeOrder());\r\n-\t\t\tisDirect = true;\r\n+\t\t\tisDirect = false;\r\n \t\t}\r\n \t\telse {\r\n \t\t\tbyteBuffer = ByteBuffer.allocateDirect(this.attributes.vertexSize * numVertices);\r\n \t\t\tbyteBuffer.order(ByteOrder.nativeOrder());\r\n-\t\t\tisDirect = false;\r\n+\t\t\tisDirect = true;\r\n \t\t}\t\t\r\n \t\tbuffer = byteBuffer.asFloatBuffer();\r\n \t\tbufferHandle = createBufferObject();\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 72, "bugNodeStartChar": 2406, "bugNodeLength": 16, "fixLineNum": 72, "fixNodeStartChar": 2335, "fixNodeLength": 15, "sourceBeforeFix": "isDirect=false", "sourceAfterFix": "isDirect=true"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "1a5b454c115a5c4ea1239834dd236d806ce0e949", "fixCommitParentSHA1": "56eeb2d4e618b1a4619d3b69f82b131b594efcd6", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/Sprite.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/Sprite.java b/gdx/src/com/badlogic/gdx/graphics/Sprite.java\nindex 6938ab8..ef4409f 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/Sprite.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/Sprite.java\n@@ -181,7 +181,7 @@\n \t */\r\n \tpublic void scrollTexture (float xAmount, float yAmount) {\r\n \t\tfloat[] vertices = this.vertices;\r\n-\t\tif (xAmount > 0) {\r\n+\t\tif (xAmount != 0) {\r\n \t\t\tfloat u = (vertices[U1] + xAmount) % 1;\r\n \t\t\tfloat u2 = u + width / texture.getWidth();\r\n \t\t\tvertices[U1] = u;\r\n@@ -189,7 +189,7 @@\n \t\t\tvertices[U3] = u2;\r\n \t\t\tvertices[U4] = u2;\r\n \t\t}\r\n-\t\tif (yAmount > 0) {\r\n+\t\tif (yAmount != 0) {\r\n \t\t\tfloat v = (vertices[V1] + yAmount) % 1;\r\n \t\t\tfloat v2 = v + height / texture.getHeight();\r\n \t\t\tvertices[V1] = v;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 184, "bugNodeStartChar": 5618, "bugNodeLength": 11, "fixLineNum": 184, "fixNodeStartChar": 5435, "fixNodeLength": 12, "sourceBeforeFix": "xAmount > 0", "sourceAfterFix": "xAmount != 0"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "1a5b454c115a5c4ea1239834dd236d806ce0e949", "fixCommitParentSHA1": "56eeb2d4e618b1a4619d3b69f82b131b594efcd6", "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/Sprite.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/Sprite.java b/gdx/src/com/badlogic/gdx/graphics/Sprite.java\nindex 6938ab8..ef4409f 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/Sprite.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/Sprite.java\n@@ -181,7 +181,7 @@\n \t */\r\n \tpublic void scrollTexture (float xAmount, float yAmount) {\r\n \t\tfloat[] vertices = this.vertices;\r\n-\t\tif (xAmount > 0) {\r\n+\t\tif (xAmount != 0) {\r\n \t\t\tfloat u = (vertices[U1] + xAmount) % 1;\r\n \t\t\tfloat u2 = u + width / texture.getWidth();\r\n \t\t\tvertices[U1] = u;\r\n@@ -189,7 +189,7 @@\n \t\t\tvertices[U3] = u2;\r\n \t\t\tvertices[U4] = u2;\r\n \t\t}\r\n-\t\tif (yAmount > 0) {\r\n+\t\tif (yAmount != 0) {\r\n \t\t\tfloat v = (vertices[V1] + yAmount) % 1;\r\n \t\t\tfloat v2 = v + height / texture.getHeight();\r\n \t\t\tvertices[V1] = v;\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 192, "bugNodeStartChar": 5826, "bugNodeLength": 11, "fixLineNum": 192, "fixNodeStartChar": 5635, "fixNodeLength": 12, "sourceBeforeFix": "yAmount > 0", "sourceAfterFix": "yAmount != 0"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "114211dc376cd85d1c97dde06cc7b347181314e1", "fixCommitParentSHA1": "06bc4f0fc48c8f98b5a6426af9de6882dbd06f16", "bugFilePath": "gdx-tests-android/src/com/badlogic/gdx/GDXTester.java", "fixPatch": "diff --git a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\nindex a554f46..dd972e9 100644\n--- a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n+++ b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n@@ -78,41 +78,41 @@\n \t\t\tintent = new Intent( this, LagTest.class );\r\n \t\tif( keyword.equals( items[14] ) )\r\n \t\t\tintent = new Intent( this, Pong.class );\r\n-\t\tif( keyword.equals( items[16] ) )\r\n+\t\tif( keyword.equals( items[15] ) )\r\n \t\t\tintent = new Intent( this, AudioDeviceTest.class );\r\n-\t\tif( keyword.equals( items[17] ) )\r\n+\t\tif( keyword.equals( items[16] ) )\r\n \t\t\tintent = new Intent( this, Mpg123Test.class );\r\n-\t\tif( keyword.equals( items[18] ) )\r\n+\t\tif( keyword.equals( items[17] ) )\r\n \t\t\tintent = new Intent( this, VorbisTest.class );\r\n-\t\tif( keyword.equals( items[19] ) )\r\n+\t\tif( keyword.equals( items[18] ) )\r\n \t\t\tintent = new Intent( this, PerformanceTest.class );\r\n-\t\tif( keyword.equals( items[20] ) )\r\n+\t\tif( keyword.equals( items[19] ) )\r\n \t\t\tintent = new Intent( this, MeshShaderTest.class );\r\n-\t\tif( keyword.equals( items[21] ) )\r\n+\t\tif( keyword.equals( items[20] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchTest.class );\r\n-\t\tif( keyword.equals( items[22] ) )\r\n+\t\tif( keyword.equals( items[21] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchShaderTest.class );\r\n-\t\tif( keyword.equals( items[23] ) )\r\n+\t\tif( keyword.equals( items[22] ) )\r\n \t\t\tintent = new Intent( this, FrameBufferTest.class );\r\n-\t\tif( keyword.equals( items[24] ) )\r\n+\t\tif( keyword.equals( items[23] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchRotationTest.class );\r\n-\t\tif( keyword.equals( items[25] ) )\r\n+\t\tif( keyword.equals( items[24] ) )\r\n \t\t\tintent = new Intent( this, Box2DTest.class );\r\n-\t\tif( keyword.equals( items[26] ) )\r\n+\t\tif( keyword.equals( items[25] ) )\r\n \t\t\tintent = new Intent( this, AudioRecorderTest.class );\r\n-\t\tif( keyword.equals( items[27] ) )\r\n+\t\tif( keyword.equals( items[26] ) )\r\n \t\t\tintent = new Intent( this, TestCollection.class );\r\n-\t\tif( keyword.equals( items[28] ) )\r\n+\t\tif( keyword.equals( items[27] ) )\r\n \t\t\tintent = new Intent( this, ResourcesTest.class );\r\n-\t\tif( keyword.equals( items[29] ) )\r\n+\t\tif( keyword.equals( items[28] ) )\r\n \t\t\tintent = new Intent( this, MD5Test.class );\r\n-\t\tif( keyword.equals( items[30] ) )\r\n+\t\tif( keyword.equals( items[29] ) )\r\n \t\t\tintent = new Intent( this, MicroBenchmarks.class );\r\n-\t\tif( keyword.equals( items[31] ) )\r\n+\t\tif( keyword.equals( items[30] ) )\r\n \t\t\tintent = new Intent( this, MultitouchTest.class );\r\n-\t\tif( keyword.equals( items[32] ) )\r\n+\t\tif( keyword.equals( items[31] ) )\r\n \t\t\tintent = new Intent( this, BufferUtilsTest.class );\r\n-\t\tif( keyword.equals( items[33] ) )\r\n+\t\tif( keyword.equals( items[32] ) )\r\n \t\t\tintent = new Intent( this, TerrainTest.class );\r\n \t\t\t\r\n \t\tstartActivity( intent );\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 81, "bugNodeStartChar": 3621, "bugNodeLength": 9, "fixLineNum": 81, "fixNodeStartChar": 3541, "fixNodeLength": 9, "sourceBeforeFix": "items[16]", "sourceAfterFix": "items[15]"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "114211dc376cd85d1c97dde06cc7b347181314e1", "fixCommitParentSHA1": "06bc4f0fc48c8f98b5a6426af9de6882dbd06f16", "bugFilePath": "gdx-tests-android/src/com/badlogic/gdx/GDXTester.java", "fixPatch": "diff --git a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\nindex a554f46..dd972e9 100644\n--- a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n+++ b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n@@ -78,41 +78,41 @@\n \t\t\tintent = new Intent( this, LagTest.class );\r\n \t\tif( keyword.equals( items[14] ) )\r\n \t\t\tintent = new Intent( this, Pong.class );\r\n-\t\tif( keyword.equals( items[16] ) )\r\n+\t\tif( keyword.equals( items[15] ) )\r\n \t\t\tintent = new Intent( this, AudioDeviceTest.class );\r\n-\t\tif( keyword.equals( items[17] ) )\r\n+\t\tif( keyword.equals( items[16] ) )\r\n \t\t\tintent = new Intent( this, Mpg123Test.class );\r\n-\t\tif( keyword.equals( items[18] ) )\r\n+\t\tif( keyword.equals( items[17] ) )\r\n \t\t\tintent = new Intent( this, VorbisTest.class );\r\n-\t\tif( keyword.equals( items[19] ) )\r\n+\t\tif( keyword.equals( items[18] ) )\r\n \t\t\tintent = new Intent( this, PerformanceTest.class );\r\n-\t\tif( keyword.equals( items[20] ) )\r\n+\t\tif( keyword.equals( items[19] ) )\r\n \t\t\tintent = new Intent( this, MeshShaderTest.class );\r\n-\t\tif( keyword.equals( items[21] ) )\r\n+\t\tif( keyword.equals( items[20] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchTest.class );\r\n-\t\tif( keyword.equals( items[22] ) )\r\n+\t\tif( keyword.equals( items[21] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchShaderTest.class );\r\n-\t\tif( keyword.equals( items[23] ) )\r\n+\t\tif( keyword.equals( items[22] ) )\r\n \t\t\tintent = new Intent( this, FrameBufferTest.class );\r\n-\t\tif( keyword.equals( items[24] ) )\r\n+\t\tif( keyword.equals( items[23] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchRotationTest.class );\r\n-\t\tif( keyword.equals( items[25] ) )\r\n+\t\tif( keyword.equals( items[24] ) )\r\n \t\t\tintent = new Intent( this, Box2DTest.class );\r\n-\t\tif( keyword.equals( items[26] ) )\r\n+\t\tif( keyword.equals( items[25] ) )\r\n \t\t\tintent = new Intent( this, AudioRecorderTest.class );\r\n-\t\tif( keyword.equals( items[27] ) )\r\n+\t\tif( keyword.equals( items[26] ) )\r\n \t\t\tintent = new Intent( this, TestCollection.class );\r\n-\t\tif( keyword.equals( items[28] ) )\r\n+\t\tif( keyword.equals( items[27] ) )\r\n \t\t\tintent = new Intent( this, ResourcesTest.class );\r\n-\t\tif( keyword.equals( items[29] ) )\r\n+\t\tif( keyword.equals( items[28] ) )\r\n \t\t\tintent = new Intent( this, MD5Test.class );\r\n-\t\tif( keyword.equals( items[30] ) )\r\n+\t\tif( keyword.equals( items[29] ) )\r\n \t\t\tintent = new Intent( this, MicroBenchmarks.class );\r\n-\t\tif( keyword.equals( items[31] ) )\r\n+\t\tif( keyword.equals( items[30] ) )\r\n \t\t\tintent = new Intent( this, MultitouchTest.class );\r\n-\t\tif( keyword.equals( items[32] ) )\r\n+\t\tif( keyword.equals( items[31] ) )\r\n \t\t\tintent = new Intent( this, BufferUtilsTest.class );\r\n-\t\tif( keyword.equals( items[33] ) )\r\n+\t\tif( keyword.equals( items[32] ) )\r\n \t\t\tintent = new Intent( this, TerrainTest.class );\r\n \t\t\t\r\n \t\tstartActivity( intent );\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 83, "bugNodeStartChar": 3714, "bugNodeLength": 9, "fixLineNum": 83, "fixNodeStartChar": 3632, "fixNodeLength": 9, "sourceBeforeFix": "items[17]", "sourceAfterFix": "items[16]"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "114211dc376cd85d1c97dde06cc7b347181314e1", "fixCommitParentSHA1": "06bc4f0fc48c8f98b5a6426af9de6882dbd06f16", "bugFilePath": "gdx-tests-android/src/com/badlogic/gdx/GDXTester.java", "fixPatch": "diff --git a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\nindex a554f46..dd972e9 100644\n--- a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n+++ b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n@@ -78,41 +78,41 @@\n \t\t\tintent = new Intent( this, LagTest.class );\r\n \t\tif( keyword.equals( items[14] ) )\r\n \t\t\tintent = new Intent( this, Pong.class );\r\n-\t\tif( keyword.equals( items[16] ) )\r\n+\t\tif( keyword.equals( items[15] ) )\r\n \t\t\tintent = new Intent( this, AudioDeviceTest.class );\r\n-\t\tif( keyword.equals( items[17] ) )\r\n+\t\tif( keyword.equals( items[16] ) )\r\n \t\t\tintent = new Intent( this, Mpg123Test.class );\r\n-\t\tif( keyword.equals( items[18] ) )\r\n+\t\tif( keyword.equals( items[17] ) )\r\n \t\t\tintent = new Intent( this, VorbisTest.class );\r\n-\t\tif( keyword.equals( items[19] ) )\r\n+\t\tif( keyword.equals( items[18] ) )\r\n \t\t\tintent = new Intent( this, PerformanceTest.class );\r\n-\t\tif( keyword.equals( items[20] ) )\r\n+\t\tif( keyword.equals( items[19] ) )\r\n \t\t\tintent = new Intent( this, MeshShaderTest.class );\r\n-\t\tif( keyword.equals( items[21] ) )\r\n+\t\tif( keyword.equals( items[20] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchTest.class );\r\n-\t\tif( keyword.equals( items[22] ) )\r\n+\t\tif( keyword.equals( items[21] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchShaderTest.class );\r\n-\t\tif( keyword.equals( items[23] ) )\r\n+\t\tif( keyword.equals( items[22] ) )\r\n \t\t\tintent = new Intent( this, FrameBufferTest.class );\r\n-\t\tif( keyword.equals( items[24] ) )\r\n+\t\tif( keyword.equals( items[23] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchRotationTest.class );\r\n-\t\tif( keyword.equals( items[25] ) )\r\n+\t\tif( keyword.equals( items[24] ) )\r\n \t\t\tintent = new Intent( this, Box2DTest.class );\r\n-\t\tif( keyword.equals( items[26] ) )\r\n+\t\tif( keyword.equals( items[25] ) )\r\n \t\t\tintent = new Intent( this, AudioRecorderTest.class );\r\n-\t\tif( keyword.equals( items[27] ) )\r\n+\t\tif( keyword.equals( items[26] ) )\r\n \t\t\tintent = new Intent( this, TestCollection.class );\r\n-\t\tif( keyword.equals( items[28] ) )\r\n+\t\tif( keyword.equals( items[27] ) )\r\n \t\t\tintent = new Intent( this, ResourcesTest.class );\r\n-\t\tif( keyword.equals( items[29] ) )\r\n+\t\tif( keyword.equals( items[28] ) )\r\n \t\t\tintent = new Intent( this, MD5Test.class );\r\n-\t\tif( keyword.equals( items[30] ) )\r\n+\t\tif( keyword.equals( items[29] ) )\r\n \t\t\tintent = new Intent( this, MicroBenchmarks.class );\r\n-\t\tif( keyword.equals( items[31] ) )\r\n+\t\tif( keyword.equals( items[30] ) )\r\n \t\t\tintent = new Intent( this, MultitouchTest.class );\r\n-\t\tif( keyword.equals( items[32] ) )\r\n+\t\tif( keyword.equals( items[31] ) )\r\n \t\t\tintent = new Intent( this, BufferUtilsTest.class );\r\n-\t\tif( keyword.equals( items[33] ) )\r\n+\t\tif( keyword.equals( items[32] ) )\r\n \t\t\tintent = new Intent( this, TerrainTest.class );\r\n \t\t\t\r\n \t\tstartActivity( intent );\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 85, "bugNodeStartChar": 3802, "bugNodeLength": 9, "fixLineNum": 85, "fixNodeStartChar": 3718, "fixNodeLength": 9, "sourceBeforeFix": "items[18]", "sourceAfterFix": "items[17]"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "114211dc376cd85d1c97dde06cc7b347181314e1", "fixCommitParentSHA1": "06bc4f0fc48c8f98b5a6426af9de6882dbd06f16", "bugFilePath": "gdx-tests-android/src/com/badlogic/gdx/GDXTester.java", "fixPatch": "diff --git a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\nindex a554f46..dd972e9 100644\n--- a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n+++ b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n@@ -78,41 +78,41 @@\n \t\t\tintent = new Intent( this, LagTest.class );\r\n \t\tif( keyword.equals( items[14] ) )\r\n \t\t\tintent = new Intent( this, Pong.class );\r\n-\t\tif( keyword.equals( items[16] ) )\r\n+\t\tif( keyword.equals( items[15] ) )\r\n \t\t\tintent = new Intent( this, AudioDeviceTest.class );\r\n-\t\tif( keyword.equals( items[17] ) )\r\n+\t\tif( keyword.equals( items[16] ) )\r\n \t\t\tintent = new Intent( this, Mpg123Test.class );\r\n-\t\tif( keyword.equals( items[18] ) )\r\n+\t\tif( keyword.equals( items[17] ) )\r\n \t\t\tintent = new Intent( this, VorbisTest.class );\r\n-\t\tif( keyword.equals( items[19] ) )\r\n+\t\tif( keyword.equals( items[18] ) )\r\n \t\t\tintent = new Intent( this, PerformanceTest.class );\r\n-\t\tif( keyword.equals( items[20] ) )\r\n+\t\tif( keyword.equals( items[19] ) )\r\n \t\t\tintent = new Intent( this, MeshShaderTest.class );\r\n-\t\tif( keyword.equals( items[21] ) )\r\n+\t\tif( keyword.equals( items[20] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchTest.class );\r\n-\t\tif( keyword.equals( items[22] ) )\r\n+\t\tif( keyword.equals( items[21] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchShaderTest.class );\r\n-\t\tif( keyword.equals( items[23] ) )\r\n+\t\tif( keyword.equals( items[22] ) )\r\n \t\t\tintent = new Intent( this, FrameBufferTest.class );\r\n-\t\tif( keyword.equals( items[24] ) )\r\n+\t\tif( keyword.equals( items[23] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchRotationTest.class );\r\n-\t\tif( keyword.equals( items[25] ) )\r\n+\t\tif( keyword.equals( items[24] ) )\r\n \t\t\tintent = new Intent( this, Box2DTest.class );\r\n-\t\tif( keyword.equals( items[26] ) )\r\n+\t\tif( keyword.equals( items[25] ) )\r\n \t\t\tintent = new Intent( this, AudioRecorderTest.class );\r\n-\t\tif( keyword.equals( items[27] ) )\r\n+\t\tif( keyword.equals( items[26] ) )\r\n \t\t\tintent = new Intent( this, TestCollection.class );\r\n-\t\tif( keyword.equals( items[28] ) )\r\n+\t\tif( keyword.equals( items[27] ) )\r\n \t\t\tintent = new Intent( this, ResourcesTest.class );\r\n-\t\tif( keyword.equals( items[29] ) )\r\n+\t\tif( keyword.equals( items[28] ) )\r\n \t\t\tintent = new Intent( this, MD5Test.class );\r\n-\t\tif( keyword.equals( items[30] ) )\r\n+\t\tif( keyword.equals( items[29] ) )\r\n \t\t\tintent = new Intent( this, MicroBenchmarks.class );\r\n-\t\tif( keyword.equals( items[31] ) )\r\n+\t\tif( keyword.equals( items[30] ) )\r\n \t\t\tintent = new Intent( this, MultitouchTest.class );\r\n-\t\tif( keyword.equals( items[32] ) )\r\n+\t\tif( keyword.equals( items[31] ) )\r\n \t\t\tintent = new Intent( this, BufferUtilsTest.class );\r\n-\t\tif( keyword.equals( items[33] ) )\r\n+\t\tif( keyword.equals( items[32] ) )\r\n \t\t\tintent = new Intent( this, TerrainTest.class );\r\n \t\t\t\r\n \t\tstartActivity( intent );\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 87, "bugNodeStartChar": 3890, "bugNodeLength": 9, "fixLineNum": 87, "fixNodeStartChar": 3804, "fixNodeLength": 9, "sourceBeforeFix": "items[19]", "sourceAfterFix": "items[18]"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "114211dc376cd85d1c97dde06cc7b347181314e1", "fixCommitParentSHA1": "06bc4f0fc48c8f98b5a6426af9de6882dbd06f16", "bugFilePath": "gdx-tests-android/src/com/badlogic/gdx/GDXTester.java", "fixPatch": "diff --git a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\nindex a554f46..dd972e9 100644\n--- a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n+++ b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n@@ -78,41 +78,41 @@\n \t\t\tintent = new Intent( this, LagTest.class );\r\n \t\tif( keyword.equals( items[14] ) )\r\n \t\t\tintent = new Intent( this, Pong.class );\r\n-\t\tif( keyword.equals( items[16] ) )\r\n+\t\tif( keyword.equals( items[15] ) )\r\n \t\t\tintent = new Intent( this, AudioDeviceTest.class );\r\n-\t\tif( keyword.equals( items[17] ) )\r\n+\t\tif( keyword.equals( items[16] ) )\r\n \t\t\tintent = new Intent( this, Mpg123Test.class );\r\n-\t\tif( keyword.equals( items[18] ) )\r\n+\t\tif( keyword.equals( items[17] ) )\r\n \t\t\tintent = new Intent( this, VorbisTest.class );\r\n-\t\tif( keyword.equals( items[19] ) )\r\n+\t\tif( keyword.equals( items[18] ) )\r\n \t\t\tintent = new Intent( this, PerformanceTest.class );\r\n-\t\tif( keyword.equals( items[20] ) )\r\n+\t\tif( keyword.equals( items[19] ) )\r\n \t\t\tintent = new Intent( this, MeshShaderTest.class );\r\n-\t\tif( keyword.equals( items[21] ) )\r\n+\t\tif( keyword.equals( items[20] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchTest.class );\r\n-\t\tif( keyword.equals( items[22] ) )\r\n+\t\tif( keyword.equals( items[21] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchShaderTest.class );\r\n-\t\tif( keyword.equals( items[23] ) )\r\n+\t\tif( keyword.equals( items[22] ) )\r\n \t\t\tintent = new Intent( this, FrameBufferTest.class );\r\n-\t\tif( keyword.equals( items[24] ) )\r\n+\t\tif( keyword.equals( items[23] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchRotationTest.class );\r\n-\t\tif( keyword.equals( items[25] ) )\r\n+\t\tif( keyword.equals( items[24] ) )\r\n \t\t\tintent = new Intent( this, Box2DTest.class );\r\n-\t\tif( keyword.equals( items[26] ) )\r\n+\t\tif( keyword.equals( items[25] ) )\r\n \t\t\tintent = new Intent( this, AudioRecorderTest.class );\r\n-\t\tif( keyword.equals( items[27] ) )\r\n+\t\tif( keyword.equals( items[26] ) )\r\n \t\t\tintent = new Intent( this, TestCollection.class );\r\n-\t\tif( keyword.equals( items[28] ) )\r\n+\t\tif( keyword.equals( items[27] ) )\r\n \t\t\tintent = new Intent( this, ResourcesTest.class );\r\n-\t\tif( keyword.equals( items[29] ) )\r\n+\t\tif( keyword.equals( items[28] ) )\r\n \t\t\tintent = new Intent( this, MD5Test.class );\r\n-\t\tif( keyword.equals( items[30] ) )\r\n+\t\tif( keyword.equals( items[29] ) )\r\n \t\t\tintent = new Intent( this, MicroBenchmarks.class );\r\n-\t\tif( keyword.equals( items[31] ) )\r\n+\t\tif( keyword.equals( items[30] ) )\r\n \t\t\tintent = new Intent( this, MultitouchTest.class );\r\n-\t\tif( keyword.equals( items[32] ) )\r\n+\t\tif( keyword.equals( items[31] ) )\r\n \t\t\tintent = new Intent( this, BufferUtilsTest.class );\r\n-\t\tif( keyword.equals( items[33] ) )\r\n+\t\tif( keyword.equals( items[32] ) )\r\n \t\t\tintent = new Intent( this, TerrainTest.class );\r\n \t\t\t\r\n \t\tstartActivity( intent );\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 89, "bugNodeStartChar": 3983, "bugNodeLength": 9, "fixLineNum": 89, "fixNodeStartChar": 3895, "fixNodeLength": 9, "sourceBeforeFix": "items[20]", "sourceAfterFix": "items[19]"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "114211dc376cd85d1c97dde06cc7b347181314e1", "fixCommitParentSHA1": "06bc4f0fc48c8f98b5a6426af9de6882dbd06f16", "bugFilePath": "gdx-tests-android/src/com/badlogic/gdx/GDXTester.java", "fixPatch": "diff --git a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\nindex a554f46..dd972e9 100644\n--- a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n+++ b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n@@ -78,41 +78,41 @@\n \t\t\tintent = new Intent( this, LagTest.class );\r\n \t\tif( keyword.equals( items[14] ) )\r\n \t\t\tintent = new Intent( this, Pong.class );\r\n-\t\tif( keyword.equals( items[16] ) )\r\n+\t\tif( keyword.equals( items[15] ) )\r\n \t\t\tintent = new Intent( this, AudioDeviceTest.class );\r\n-\t\tif( keyword.equals( items[17] ) )\r\n+\t\tif( keyword.equals( items[16] ) )\r\n \t\t\tintent = new Intent( this, Mpg123Test.class );\r\n-\t\tif( keyword.equals( items[18] ) )\r\n+\t\tif( keyword.equals( items[17] ) )\r\n \t\t\tintent = new Intent( this, VorbisTest.class );\r\n-\t\tif( keyword.equals( items[19] ) )\r\n+\t\tif( keyword.equals( items[18] ) )\r\n \t\t\tintent = new Intent( this, PerformanceTest.class );\r\n-\t\tif( keyword.equals( items[20] ) )\r\n+\t\tif( keyword.equals( items[19] ) )\r\n \t\t\tintent = new Intent( this, MeshShaderTest.class );\r\n-\t\tif( keyword.equals( items[21] ) )\r\n+\t\tif( keyword.equals( items[20] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchTest.class );\r\n-\t\tif( keyword.equals( items[22] ) )\r\n+\t\tif( keyword.equals( items[21] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchShaderTest.class );\r\n-\t\tif( keyword.equals( items[23] ) )\r\n+\t\tif( keyword.equals( items[22] ) )\r\n \t\t\tintent = new Intent( this, FrameBufferTest.class );\r\n-\t\tif( keyword.equals( items[24] ) )\r\n+\t\tif( keyword.equals( items[23] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchRotationTest.class );\r\n-\t\tif( keyword.equals( items[25] ) )\r\n+\t\tif( keyword.equals( items[24] ) )\r\n \t\t\tintent = new Intent( this, Box2DTest.class );\r\n-\t\tif( keyword.equals( items[26] ) )\r\n+\t\tif( keyword.equals( items[25] ) )\r\n \t\t\tintent = new Intent( this, AudioRecorderTest.class );\r\n-\t\tif( keyword.equals( items[27] ) )\r\n+\t\tif( keyword.equals( items[26] ) )\r\n \t\t\tintent = new Intent( this, TestCollection.class );\r\n-\t\tif( keyword.equals( items[28] ) )\r\n+\t\tif( keyword.equals( items[27] ) )\r\n \t\t\tintent = new Intent( this, ResourcesTest.class );\r\n-\t\tif( keyword.equals( items[29] ) )\r\n+\t\tif( keyword.equals( items[28] ) )\r\n \t\t\tintent = new Intent( this, MD5Test.class );\r\n-\t\tif( keyword.equals( items[30] ) )\r\n+\t\tif( keyword.equals( items[29] ) )\r\n \t\t\tintent = new Intent( this, MicroBenchmarks.class );\r\n-\t\tif( keyword.equals( items[31] ) )\r\n+\t\tif( keyword.equals( items[30] ) )\r\n \t\t\tintent = new Intent( this, MultitouchTest.class );\r\n-\t\tif( keyword.equals( items[32] ) )\r\n+\t\tif( keyword.equals( items[31] ) )\r\n \t\t\tintent = new Intent( this, BufferUtilsTest.class );\r\n-\t\tif( keyword.equals( items[33] ) )\r\n+\t\tif( keyword.equals( items[32] ) )\r\n \t\t\tintent = new Intent( this, TerrainTest.class );\r\n \t\t\t\r\n \t\tstartActivity( intent );\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 91, "bugNodeStartChar": 4075, "bugNodeLength": 9, "fixLineNum": 91, "fixNodeStartChar": 3985, "fixNodeLength": 9, "sourceBeforeFix": "items[21]", "sourceAfterFix": "items[20]"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "114211dc376cd85d1c97dde06cc7b347181314e1", "fixCommitParentSHA1": "06bc4f0fc48c8f98b5a6426af9de6882dbd06f16", "bugFilePath": "gdx-tests-android/src/com/badlogic/gdx/GDXTester.java", "fixPatch": "diff --git a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\nindex a554f46..dd972e9 100644\n--- a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n+++ b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n@@ -78,41 +78,41 @@\n \t\t\tintent = new Intent( this, LagTest.class );\r\n \t\tif( keyword.equals( items[14] ) )\r\n \t\t\tintent = new Intent( this, Pong.class );\r\n-\t\tif( keyword.equals( items[16] ) )\r\n+\t\tif( keyword.equals( items[15] ) )\r\n \t\t\tintent = new Intent( this, AudioDeviceTest.class );\r\n-\t\tif( keyword.equals( items[17] ) )\r\n+\t\tif( keyword.equals( items[16] ) )\r\n \t\t\tintent = new Intent( this, Mpg123Test.class );\r\n-\t\tif( keyword.equals( items[18] ) )\r\n+\t\tif( keyword.equals( items[17] ) )\r\n \t\t\tintent = new Intent( this, VorbisTest.class );\r\n-\t\tif( keyword.equals( items[19] ) )\r\n+\t\tif( keyword.equals( items[18] ) )\r\n \t\t\tintent = new Intent( this, PerformanceTest.class );\r\n-\t\tif( keyword.equals( items[20] ) )\r\n+\t\tif( keyword.equals( items[19] ) )\r\n \t\t\tintent = new Intent( this, MeshShaderTest.class );\r\n-\t\tif( keyword.equals( items[21] ) )\r\n+\t\tif( keyword.equals( items[20] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchTest.class );\r\n-\t\tif( keyword.equals( items[22] ) )\r\n+\t\tif( keyword.equals( items[21] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchShaderTest.class );\r\n-\t\tif( keyword.equals( items[23] ) )\r\n+\t\tif( keyword.equals( items[22] ) )\r\n \t\t\tintent = new Intent( this, FrameBufferTest.class );\r\n-\t\tif( keyword.equals( items[24] ) )\r\n+\t\tif( keyword.equals( items[23] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchRotationTest.class );\r\n-\t\tif( keyword.equals( items[25] ) )\r\n+\t\tif( keyword.equals( items[24] ) )\r\n \t\t\tintent = new Intent( this, Box2DTest.class );\r\n-\t\tif( keyword.equals( items[26] ) )\r\n+\t\tif( keyword.equals( items[25] ) )\r\n \t\t\tintent = new Intent( this, AudioRecorderTest.class );\r\n-\t\tif( keyword.equals( items[27] ) )\r\n+\t\tif( keyword.equals( items[26] ) )\r\n \t\t\tintent = new Intent( this, TestCollection.class );\r\n-\t\tif( keyword.equals( items[28] ) )\r\n+\t\tif( keyword.equals( items[27] ) )\r\n \t\t\tintent = new Intent( this, ResourcesTest.class );\r\n-\t\tif( keyword.equals( items[29] ) )\r\n+\t\tif( keyword.equals( items[28] ) )\r\n \t\t\tintent = new Intent( this, MD5Test.class );\r\n-\t\tif( keyword.equals( items[30] ) )\r\n+\t\tif( keyword.equals( items[29] ) )\r\n \t\t\tintent = new Intent( this, MicroBenchmarks.class );\r\n-\t\tif( keyword.equals( items[31] ) )\r\n+\t\tif( keyword.equals( items[30] ) )\r\n \t\t\tintent = new Intent( this, MultitouchTest.class );\r\n-\t\tif( keyword.equals( items[32] ) )\r\n+\t\tif( keyword.equals( items[31] ) )\r\n \t\t\tintent = new Intent( this, BufferUtilsTest.class );\r\n-\t\tif( keyword.equals( items[33] ) )\r\n+\t\tif( keyword.equals( items[32] ) )\r\n \t\t\tintent = new Intent( this, TerrainTest.class );\r\n \t\t\t\r\n \t\tstartActivity( intent );\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 93, "bugNodeStartChar": 4168, "bugNodeLength": 9, "fixLineNum": 93, "fixNodeStartChar": 4076, "fixNodeLength": 9, "sourceBeforeFix": "items[22]", "sourceAfterFix": "items[21]"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "114211dc376cd85d1c97dde06cc7b347181314e1", "fixCommitParentSHA1": "06bc4f0fc48c8f98b5a6426af9de6882dbd06f16", "bugFilePath": "gdx-tests-android/src/com/badlogic/gdx/GDXTester.java", "fixPatch": "diff --git a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\nindex a554f46..dd972e9 100644\n--- a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n+++ b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n@@ -78,41 +78,41 @@\n \t\t\tintent = new Intent( this, LagTest.class );\r\n \t\tif( keyword.equals( items[14] ) )\r\n \t\t\tintent = new Intent( this, Pong.class );\r\n-\t\tif( keyword.equals( items[16] ) )\r\n+\t\tif( keyword.equals( items[15] ) )\r\n \t\t\tintent = new Intent( this, AudioDeviceTest.class );\r\n-\t\tif( keyword.equals( items[17] ) )\r\n+\t\tif( keyword.equals( items[16] ) )\r\n \t\t\tintent = new Intent( this, Mpg123Test.class );\r\n-\t\tif( keyword.equals( items[18] ) )\r\n+\t\tif( keyword.equals( items[17] ) )\r\n \t\t\tintent = new Intent( this, VorbisTest.class );\r\n-\t\tif( keyword.equals( items[19] ) )\r\n+\t\tif( keyword.equals( items[18] ) )\r\n \t\t\tintent = new Intent( this, PerformanceTest.class );\r\n-\t\tif( keyword.equals( items[20] ) )\r\n+\t\tif( keyword.equals( items[19] ) )\r\n \t\t\tintent = new Intent( this, MeshShaderTest.class );\r\n-\t\tif( keyword.equals( items[21] ) )\r\n+\t\tif( keyword.equals( items[20] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchTest.class );\r\n-\t\tif( keyword.equals( items[22] ) )\r\n+\t\tif( keyword.equals( items[21] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchShaderTest.class );\r\n-\t\tif( keyword.equals( items[23] ) )\r\n+\t\tif( keyword.equals( items[22] ) )\r\n \t\t\tintent = new Intent( this, FrameBufferTest.class );\r\n-\t\tif( keyword.equals( items[24] ) )\r\n+\t\tif( keyword.equals( items[23] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchRotationTest.class );\r\n-\t\tif( keyword.equals( items[25] ) )\r\n+\t\tif( keyword.equals( items[24] ) )\r\n \t\t\tintent = new Intent( this, Box2DTest.class );\r\n-\t\tif( keyword.equals( items[26] ) )\r\n+\t\tif( keyword.equals( items[25] ) )\r\n \t\t\tintent = new Intent( this, AudioRecorderTest.class );\r\n-\t\tif( keyword.equals( items[27] ) )\r\n+\t\tif( keyword.equals( items[26] ) )\r\n \t\t\tintent = new Intent( this, TestCollection.class );\r\n-\t\tif( keyword.equals( items[28] ) )\r\n+\t\tif( keyword.equals( items[27] ) )\r\n \t\t\tintent = new Intent( this, ResourcesTest.class );\r\n-\t\tif( keyword.equals( items[29] ) )\r\n+\t\tif( keyword.equals( items[28] ) )\r\n \t\t\tintent = new Intent( this, MD5Test.class );\r\n-\t\tif( keyword.equals( items[30] ) )\r\n+\t\tif( keyword.equals( items[29] ) )\r\n \t\t\tintent = new Intent( this, MicroBenchmarks.class );\r\n-\t\tif( keyword.equals( items[31] ) )\r\n+\t\tif( keyword.equals( items[30] ) )\r\n \t\t\tintent = new Intent( this, MultitouchTest.class );\r\n-\t\tif( keyword.equals( items[32] ) )\r\n+\t\tif( keyword.equals( items[31] ) )\r\n \t\t\tintent = new Intent( this, BufferUtilsTest.class );\r\n-\t\tif( keyword.equals( items[33] ) )\r\n+\t\tif( keyword.equals( items[32] ) )\r\n \t\t\tintent = new Intent( this, TerrainTest.class );\r\n \t\t\t\r\n \t\tstartActivity( intent );\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 95, "bugNodeStartChar": 4267, "bugNodeLength": 9, "fixLineNum": 95, "fixNodeStartChar": 4173, "fixNodeLength": 9, "sourceBeforeFix": "items[23]", "sourceAfterFix": "items[22]"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "114211dc376cd85d1c97dde06cc7b347181314e1", "fixCommitParentSHA1": "06bc4f0fc48c8f98b5a6426af9de6882dbd06f16", "bugFilePath": "gdx-tests-android/src/com/badlogic/gdx/GDXTester.java", "fixPatch": "diff --git a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\nindex a554f46..dd972e9 100644\n--- a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n+++ b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n@@ -78,41 +78,41 @@\n \t\t\tintent = new Intent( this, LagTest.class );\r\n \t\tif( keyword.equals( items[14] ) )\r\n \t\t\tintent = new Intent( this, Pong.class );\r\n-\t\tif( keyword.equals( items[16] ) )\r\n+\t\tif( keyword.equals( items[15] ) )\r\n \t\t\tintent = new Intent( this, AudioDeviceTest.class );\r\n-\t\tif( keyword.equals( items[17] ) )\r\n+\t\tif( keyword.equals( items[16] ) )\r\n \t\t\tintent = new Intent( this, Mpg123Test.class );\r\n-\t\tif( keyword.equals( items[18] ) )\r\n+\t\tif( keyword.equals( items[17] ) )\r\n \t\t\tintent = new Intent( this, VorbisTest.class );\r\n-\t\tif( keyword.equals( items[19] ) )\r\n+\t\tif( keyword.equals( items[18] ) )\r\n \t\t\tintent = new Intent( this, PerformanceTest.class );\r\n-\t\tif( keyword.equals( items[20] ) )\r\n+\t\tif( keyword.equals( items[19] ) )\r\n \t\t\tintent = new Intent( this, MeshShaderTest.class );\r\n-\t\tif( keyword.equals( items[21] ) )\r\n+\t\tif( keyword.equals( items[20] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchTest.class );\r\n-\t\tif( keyword.equals( items[22] ) )\r\n+\t\tif( keyword.equals( items[21] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchShaderTest.class );\r\n-\t\tif( keyword.equals( items[23] ) )\r\n+\t\tif( keyword.equals( items[22] ) )\r\n \t\t\tintent = new Intent( this, FrameBufferTest.class );\r\n-\t\tif( keyword.equals( items[24] ) )\r\n+\t\tif( keyword.equals( items[23] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchRotationTest.class );\r\n-\t\tif( keyword.equals( items[25] ) )\r\n+\t\tif( keyword.equals( items[24] ) )\r\n \t\t\tintent = new Intent( this, Box2DTest.class );\r\n-\t\tif( keyword.equals( items[26] ) )\r\n+\t\tif( keyword.equals( items[25] ) )\r\n \t\t\tintent = new Intent( this, AudioRecorderTest.class );\r\n-\t\tif( keyword.equals( items[27] ) )\r\n+\t\tif( keyword.equals( items[26] ) )\r\n \t\t\tintent = new Intent( this, TestCollection.class );\r\n-\t\tif( keyword.equals( items[28] ) )\r\n+\t\tif( keyword.equals( items[27] ) )\r\n \t\t\tintent = new Intent( this, ResourcesTest.class );\r\n-\t\tif( keyword.equals( items[29] ) )\r\n+\t\tif( keyword.equals( items[28] ) )\r\n \t\t\tintent = new Intent( this, MD5Test.class );\r\n-\t\tif( keyword.equals( items[30] ) )\r\n+\t\tif( keyword.equals( items[29] ) )\r\n \t\t\tintent = new Intent( this, MicroBenchmarks.class );\r\n-\t\tif( keyword.equals( items[31] ) )\r\n+\t\tif( keyword.equals( items[30] ) )\r\n \t\t\tintent = new Intent( this, MultitouchTest.class );\r\n-\t\tif( keyword.equals( items[32] ) )\r\n+\t\tif( keyword.equals( items[31] ) )\r\n \t\t\tintent = new Intent( this, BufferUtilsTest.class );\r\n-\t\tif( keyword.equals( items[33] ) )\r\n+\t\tif( keyword.equals( items[32] ) )\r\n \t\t\tintent = new Intent( this, TerrainTest.class );\r\n \t\t\t\r\n \t\tstartActivity( intent );\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 97, "bugNodeStartChar": 4360, "bugNodeLength": 9, "fixLineNum": 97, "fixNodeStartChar": 4264, "fixNodeLength": 9, "sourceBeforeFix": "items[24]", "sourceAfterFix": "items[23]"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "114211dc376cd85d1c97dde06cc7b347181314e1", "fixCommitParentSHA1": "06bc4f0fc48c8f98b5a6426af9de6882dbd06f16", "bugFilePath": "gdx-tests-android/src/com/badlogic/gdx/GDXTester.java", "fixPatch": "diff --git a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\nindex a554f46..dd972e9 100644\n--- a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n+++ b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n@@ -78,41 +78,41 @@\n \t\t\tintent = new Intent( this, LagTest.class );\r\n \t\tif( keyword.equals( items[14] ) )\r\n \t\t\tintent = new Intent( this, Pong.class );\r\n-\t\tif( keyword.equals( items[16] ) )\r\n+\t\tif( keyword.equals( items[15] ) )\r\n \t\t\tintent = new Intent( this, AudioDeviceTest.class );\r\n-\t\tif( keyword.equals( items[17] ) )\r\n+\t\tif( keyword.equals( items[16] ) )\r\n \t\t\tintent = new Intent( this, Mpg123Test.class );\r\n-\t\tif( keyword.equals( items[18] ) )\r\n+\t\tif( keyword.equals( items[17] ) )\r\n \t\t\tintent = new Intent( this, VorbisTest.class );\r\n-\t\tif( keyword.equals( items[19] ) )\r\n+\t\tif( keyword.equals( items[18] ) )\r\n \t\t\tintent = new Intent( this, PerformanceTest.class );\r\n-\t\tif( keyword.equals( items[20] ) )\r\n+\t\tif( keyword.equals( items[19] ) )\r\n \t\t\tintent = new Intent( this, MeshShaderTest.class );\r\n-\t\tif( keyword.equals( items[21] ) )\r\n+\t\tif( keyword.equals( items[20] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchTest.class );\r\n-\t\tif( keyword.equals( items[22] ) )\r\n+\t\tif( keyword.equals( items[21] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchShaderTest.class );\r\n-\t\tif( keyword.equals( items[23] ) )\r\n+\t\tif( keyword.equals( items[22] ) )\r\n \t\t\tintent = new Intent( this, FrameBufferTest.class );\r\n-\t\tif( keyword.equals( items[24] ) )\r\n+\t\tif( keyword.equals( items[23] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchRotationTest.class );\r\n-\t\tif( keyword.equals( items[25] ) )\r\n+\t\tif( keyword.equals( items[24] ) )\r\n \t\t\tintent = new Intent( this, Box2DTest.class );\r\n-\t\tif( keyword.equals( items[26] ) )\r\n+\t\tif( keyword.equals( items[25] ) )\r\n \t\t\tintent = new Intent( this, AudioRecorderTest.class );\r\n-\t\tif( keyword.equals( items[27] ) )\r\n+\t\tif( keyword.equals( items[26] ) )\r\n \t\t\tintent = new Intent( this, TestCollection.class );\r\n-\t\tif( keyword.equals( items[28] ) )\r\n+\t\tif( keyword.equals( items[27] ) )\r\n \t\t\tintent = new Intent( this, ResourcesTest.class );\r\n-\t\tif( keyword.equals( items[29] ) )\r\n+\t\tif( keyword.equals( items[28] ) )\r\n \t\t\tintent = new Intent( this, MD5Test.class );\r\n-\t\tif( keyword.equals( items[30] ) )\r\n+\t\tif( keyword.equals( items[29] ) )\r\n \t\t\tintent = new Intent( this, MicroBenchmarks.class );\r\n-\t\tif( keyword.equals( items[31] ) )\r\n+\t\tif( keyword.equals( items[30] ) )\r\n \t\t\tintent = new Intent( this, MultitouchTest.class );\r\n-\t\tif( keyword.equals( items[32] ) )\r\n+\t\tif( keyword.equals( items[31] ) )\r\n \t\t\tintent = new Intent( this, BufferUtilsTest.class );\r\n-\t\tif( keyword.equals( items[33] ) )\r\n+\t\tif( keyword.equals( items[32] ) )\r\n \t\t\tintent = new Intent( this, TerrainTest.class );\r\n \t\t\t\r\n \t\tstartActivity( intent );\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 99, "bugNodeStartChar": 4461, "bugNodeLength": 9, "fixLineNum": 99, "fixNodeStartChar": 4363, "fixNodeLength": 9, "sourceBeforeFix": "items[25]", "sourceAfterFix": "items[24]"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "114211dc376cd85d1c97dde06cc7b347181314e1", "fixCommitParentSHA1": "06bc4f0fc48c8f98b5a6426af9de6882dbd06f16", "bugFilePath": "gdx-tests-android/src/com/badlogic/gdx/GDXTester.java", "fixPatch": "diff --git a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\nindex a554f46..dd972e9 100644\n--- a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n+++ b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n@@ -78,41 +78,41 @@\n \t\t\tintent = new Intent( this, LagTest.class );\r\n \t\tif( keyword.equals( items[14] ) )\r\n \t\t\tintent = new Intent( this, Pong.class );\r\n-\t\tif( keyword.equals( items[16] ) )\r\n+\t\tif( keyword.equals( items[15] ) )\r\n \t\t\tintent = new Intent( this, AudioDeviceTest.class );\r\n-\t\tif( keyword.equals( items[17] ) )\r\n+\t\tif( keyword.equals( items[16] ) )\r\n \t\t\tintent = new Intent( this, Mpg123Test.class );\r\n-\t\tif( keyword.equals( items[18] ) )\r\n+\t\tif( keyword.equals( items[17] ) )\r\n \t\t\tintent = new Intent( this, VorbisTest.class );\r\n-\t\tif( keyword.equals( items[19] ) )\r\n+\t\tif( keyword.equals( items[18] ) )\r\n \t\t\tintent = new Intent( this, PerformanceTest.class );\r\n-\t\tif( keyword.equals( items[20] ) )\r\n+\t\tif( keyword.equals( items[19] ) )\r\n \t\t\tintent = new Intent( this, MeshShaderTest.class );\r\n-\t\tif( keyword.equals( items[21] ) )\r\n+\t\tif( keyword.equals( items[20] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchTest.class );\r\n-\t\tif( keyword.equals( items[22] ) )\r\n+\t\tif( keyword.equals( items[21] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchShaderTest.class );\r\n-\t\tif( keyword.equals( items[23] ) )\r\n+\t\tif( keyword.equals( items[22] ) )\r\n \t\t\tintent = new Intent( this, FrameBufferTest.class );\r\n-\t\tif( keyword.equals( items[24] ) )\r\n+\t\tif( keyword.equals( items[23] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchRotationTest.class );\r\n-\t\tif( keyword.equals( items[25] ) )\r\n+\t\tif( keyword.equals( items[24] ) )\r\n \t\t\tintent = new Intent( this, Box2DTest.class );\r\n-\t\tif( keyword.equals( items[26] ) )\r\n+\t\tif( keyword.equals( items[25] ) )\r\n \t\t\tintent = new Intent( this, AudioRecorderTest.class );\r\n-\t\tif( keyword.equals( items[27] ) )\r\n+\t\tif( keyword.equals( items[26] ) )\r\n \t\t\tintent = new Intent( this, TestCollection.class );\r\n-\t\tif( keyword.equals( items[28] ) )\r\n+\t\tif( keyword.equals( items[27] ) )\r\n \t\t\tintent = new Intent( this, ResourcesTest.class );\r\n-\t\tif( keyword.equals( items[29] ) )\r\n+\t\tif( keyword.equals( items[28] ) )\r\n \t\t\tintent = new Intent( this, MD5Test.class );\r\n-\t\tif( keyword.equals( items[30] ) )\r\n+\t\tif( keyword.equals( items[29] ) )\r\n \t\t\tintent = new Intent( this, MicroBenchmarks.class );\r\n-\t\tif( keyword.equals( items[31] ) )\r\n+\t\tif( keyword.equals( items[30] ) )\r\n \t\t\tintent = new Intent( this, MultitouchTest.class );\r\n-\t\tif( keyword.equals( items[32] ) )\r\n+\t\tif( keyword.equals( items[31] ) )\r\n \t\t\tintent = new Intent( this, BufferUtilsTest.class );\r\n-\t\tif( keyword.equals( items[33] ) )\r\n+\t\tif( keyword.equals( items[32] ) )\r\n \t\t\tintent = new Intent( this, TerrainTest.class );\r\n \t\t\t\r\n \t\tstartActivity( intent );\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 101, "bugNodeStartChar": 4548, "bugNodeLength": 9, "fixLineNum": 101, "fixNodeStartChar": 4448, "fixNodeLength": 9, "sourceBeforeFix": "items[26]", "sourceAfterFix": "items[25]"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "114211dc376cd85d1c97dde06cc7b347181314e1", "fixCommitParentSHA1": "06bc4f0fc48c8f98b5a6426af9de6882dbd06f16", "bugFilePath": "gdx-tests-android/src/com/badlogic/gdx/GDXTester.java", "fixPatch": "diff --git a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\nindex a554f46..dd972e9 100644\n--- a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n+++ b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n@@ -78,41 +78,41 @@\n \t\t\tintent = new Intent( this, LagTest.class );\r\n \t\tif( keyword.equals( items[14] ) )\r\n \t\t\tintent = new Intent( this, Pong.class );\r\n-\t\tif( keyword.equals( items[16] ) )\r\n+\t\tif( keyword.equals( items[15] ) )\r\n \t\t\tintent = new Intent( this, AudioDeviceTest.class );\r\n-\t\tif( keyword.equals( items[17] ) )\r\n+\t\tif( keyword.equals( items[16] ) )\r\n \t\t\tintent = new Intent( this, Mpg123Test.class );\r\n-\t\tif( keyword.equals( items[18] ) )\r\n+\t\tif( keyword.equals( items[17] ) )\r\n \t\t\tintent = new Intent( this, VorbisTest.class );\r\n-\t\tif( keyword.equals( items[19] ) )\r\n+\t\tif( keyword.equals( items[18] ) )\r\n \t\t\tintent = new Intent( this, PerformanceTest.class );\r\n-\t\tif( keyword.equals( items[20] ) )\r\n+\t\tif( keyword.equals( items[19] ) )\r\n \t\t\tintent = new Intent( this, MeshShaderTest.class );\r\n-\t\tif( keyword.equals( items[21] ) )\r\n+\t\tif( keyword.equals( items[20] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchTest.class );\r\n-\t\tif( keyword.equals( items[22] ) )\r\n+\t\tif( keyword.equals( items[21] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchShaderTest.class );\r\n-\t\tif( keyword.equals( items[23] ) )\r\n+\t\tif( keyword.equals( items[22] ) )\r\n \t\t\tintent = new Intent( this, FrameBufferTest.class );\r\n-\t\tif( keyword.equals( items[24] ) )\r\n+\t\tif( keyword.equals( items[23] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchRotationTest.class );\r\n-\t\tif( keyword.equals( items[25] ) )\r\n+\t\tif( keyword.equals( items[24] ) )\r\n \t\t\tintent = new Intent( this, Box2DTest.class );\r\n-\t\tif( keyword.equals( items[26] ) )\r\n+\t\tif( keyword.equals( items[25] ) )\r\n \t\t\tintent = new Intent( this, AudioRecorderTest.class );\r\n-\t\tif( keyword.equals( items[27] ) )\r\n+\t\tif( keyword.equals( items[26] ) )\r\n \t\t\tintent = new Intent( this, TestCollection.class );\r\n-\t\tif( keyword.equals( items[28] ) )\r\n+\t\tif( keyword.equals( items[27] ) )\r\n \t\t\tintent = new Intent( this, ResourcesTest.class );\r\n-\t\tif( keyword.equals( items[29] ) )\r\n+\t\tif( keyword.equals( items[28] ) )\r\n \t\t\tintent = new Intent( this, MD5Test.class );\r\n-\t\tif( keyword.equals( items[30] ) )\r\n+\t\tif( keyword.equals( items[29] ) )\r\n \t\t\tintent = new Intent( this, MicroBenchmarks.class );\r\n-\t\tif( keyword.equals( items[31] ) )\r\n+\t\tif( keyword.equals( items[30] ) )\r\n \t\t\tintent = new Intent( this, MultitouchTest.class );\r\n-\t\tif( keyword.equals( items[32] ) )\r\n+\t\tif( keyword.equals( items[31] ) )\r\n \t\t\tintent = new Intent( this, BufferUtilsTest.class );\r\n-\t\tif( keyword.equals( items[33] ) )\r\n+\t\tif( keyword.equals( items[32] ) )\r\n \t\t\tintent = new Intent( this, TerrainTest.class );\r\n \t\t\t\r\n \t\tstartActivity( intent );\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 103, "bugNodeStartChar": 4643, "bugNodeLength": 9, "fixLineNum": 103, "fixNodeStartChar": 4541, "fixNodeLength": 9, "sourceBeforeFix": "items[27]", "sourceAfterFix": "items[26]"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "114211dc376cd85d1c97dde06cc7b347181314e1", "fixCommitParentSHA1": "06bc4f0fc48c8f98b5a6426af9de6882dbd06f16", "bugFilePath": "gdx-tests-android/src/com/badlogic/gdx/GDXTester.java", "fixPatch": "diff --git a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\nindex a554f46..dd972e9 100644\n--- a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n+++ b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n@@ -78,41 +78,41 @@\n \t\t\tintent = new Intent( this, LagTest.class );\r\n \t\tif( keyword.equals( items[14] ) )\r\n \t\t\tintent = new Intent( this, Pong.class );\r\n-\t\tif( keyword.equals( items[16] ) )\r\n+\t\tif( keyword.equals( items[15] ) )\r\n \t\t\tintent = new Intent( this, AudioDeviceTest.class );\r\n-\t\tif( keyword.equals( items[17] ) )\r\n+\t\tif( keyword.equals( items[16] ) )\r\n \t\t\tintent = new Intent( this, Mpg123Test.class );\r\n-\t\tif( keyword.equals( items[18] ) )\r\n+\t\tif( keyword.equals( items[17] ) )\r\n \t\t\tintent = new Intent( this, VorbisTest.class );\r\n-\t\tif( keyword.equals( items[19] ) )\r\n+\t\tif( keyword.equals( items[18] ) )\r\n \t\t\tintent = new Intent( this, PerformanceTest.class );\r\n-\t\tif( keyword.equals( items[20] ) )\r\n+\t\tif( keyword.equals( items[19] ) )\r\n \t\t\tintent = new Intent( this, MeshShaderTest.class );\r\n-\t\tif( keyword.equals( items[21] ) )\r\n+\t\tif( keyword.equals( items[20] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchTest.class );\r\n-\t\tif( keyword.equals( items[22] ) )\r\n+\t\tif( keyword.equals( items[21] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchShaderTest.class );\r\n-\t\tif( keyword.equals( items[23] ) )\r\n+\t\tif( keyword.equals( items[22] ) )\r\n \t\t\tintent = new Intent( this, FrameBufferTest.class );\r\n-\t\tif( keyword.equals( items[24] ) )\r\n+\t\tif( keyword.equals( items[23] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchRotationTest.class );\r\n-\t\tif( keyword.equals( items[25] ) )\r\n+\t\tif( keyword.equals( items[24] ) )\r\n \t\t\tintent = new Intent( this, Box2DTest.class );\r\n-\t\tif( keyword.equals( items[26] ) )\r\n+\t\tif( keyword.equals( items[25] ) )\r\n \t\t\tintent = new Intent( this, AudioRecorderTest.class );\r\n-\t\tif( keyword.equals( items[27] ) )\r\n+\t\tif( keyword.equals( items[26] ) )\r\n \t\t\tintent = new Intent( this, TestCollection.class );\r\n-\t\tif( keyword.equals( items[28] ) )\r\n+\t\tif( keyword.equals( items[27] ) )\r\n \t\t\tintent = new Intent( this, ResourcesTest.class );\r\n-\t\tif( keyword.equals( items[29] ) )\r\n+\t\tif( keyword.equals( items[28] ) )\r\n \t\t\tintent = new Intent( this, MD5Test.class );\r\n-\t\tif( keyword.equals( items[30] ) )\r\n+\t\tif( keyword.equals( items[29] ) )\r\n \t\t\tintent = new Intent( this, MicroBenchmarks.class );\r\n-\t\tif( keyword.equals( items[31] ) )\r\n+\t\tif( keyword.equals( items[30] ) )\r\n \t\t\tintent = new Intent( this, MultitouchTest.class );\r\n-\t\tif( keyword.equals( items[32] ) )\r\n+\t\tif( keyword.equals( items[31] ) )\r\n \t\t\tintent = new Intent( this, BufferUtilsTest.class );\r\n-\t\tif( keyword.equals( items[33] ) )\r\n+\t\tif( keyword.equals( items[32] ) )\r\n \t\t\tintent = new Intent( this, TerrainTest.class );\r\n \t\t\t\r\n \t\tstartActivity( intent );\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 105, "bugNodeStartChar": 4735, "bugNodeLength": 9, "fixLineNum": 105, "fixNodeStartChar": 4631, "fixNodeLength": 9, "sourceBeforeFix": "items[28]", "sourceAfterFix": "items[27]"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "114211dc376cd85d1c97dde06cc7b347181314e1", "fixCommitParentSHA1": "06bc4f0fc48c8f98b5a6426af9de6882dbd06f16", "bugFilePath": "gdx-tests-android/src/com/badlogic/gdx/GDXTester.java", "fixPatch": "diff --git a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\nindex a554f46..dd972e9 100644\n--- a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n+++ b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n@@ -78,41 +78,41 @@\n \t\t\tintent = new Intent( this, LagTest.class );\r\n \t\tif( keyword.equals( items[14] ) )\r\n \t\t\tintent = new Intent( this, Pong.class );\r\n-\t\tif( keyword.equals( items[16] ) )\r\n+\t\tif( keyword.equals( items[15] ) )\r\n \t\t\tintent = new Intent( this, AudioDeviceTest.class );\r\n-\t\tif( keyword.equals( items[17] ) )\r\n+\t\tif( keyword.equals( items[16] ) )\r\n \t\t\tintent = new Intent( this, Mpg123Test.class );\r\n-\t\tif( keyword.equals( items[18] ) )\r\n+\t\tif( keyword.equals( items[17] ) )\r\n \t\t\tintent = new Intent( this, VorbisTest.class );\r\n-\t\tif( keyword.equals( items[19] ) )\r\n+\t\tif( keyword.equals( items[18] ) )\r\n \t\t\tintent = new Intent( this, PerformanceTest.class );\r\n-\t\tif( keyword.equals( items[20] ) )\r\n+\t\tif( keyword.equals( items[19] ) )\r\n \t\t\tintent = new Intent( this, MeshShaderTest.class );\r\n-\t\tif( keyword.equals( items[21] ) )\r\n+\t\tif( keyword.equals( items[20] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchTest.class );\r\n-\t\tif( keyword.equals( items[22] ) )\r\n+\t\tif( keyword.equals( items[21] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchShaderTest.class );\r\n-\t\tif( keyword.equals( items[23] ) )\r\n+\t\tif( keyword.equals( items[22] ) )\r\n \t\t\tintent = new Intent( this, FrameBufferTest.class );\r\n-\t\tif( keyword.equals( items[24] ) )\r\n+\t\tif( keyword.equals( items[23] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchRotationTest.class );\r\n-\t\tif( keyword.equals( items[25] ) )\r\n+\t\tif( keyword.equals( items[24] ) )\r\n \t\t\tintent = new Intent( this, Box2DTest.class );\r\n-\t\tif( keyword.equals( items[26] ) )\r\n+\t\tif( keyword.equals( items[25] ) )\r\n \t\t\tintent = new Intent( this, AudioRecorderTest.class );\r\n-\t\tif( keyword.equals( items[27] ) )\r\n+\t\tif( keyword.equals( items[26] ) )\r\n \t\t\tintent = new Intent( this, TestCollection.class );\r\n-\t\tif( keyword.equals( items[28] ) )\r\n+\t\tif( keyword.equals( items[27] ) )\r\n \t\t\tintent = new Intent( this, ResourcesTest.class );\r\n-\t\tif( keyword.equals( items[29] ) )\r\n+\t\tif( keyword.equals( items[28] ) )\r\n \t\t\tintent = new Intent( this, MD5Test.class );\r\n-\t\tif( keyword.equals( items[30] ) )\r\n+\t\tif( keyword.equals( items[29] ) )\r\n \t\t\tintent = new Intent( this, MicroBenchmarks.class );\r\n-\t\tif( keyword.equals( items[31] ) )\r\n+\t\tif( keyword.equals( items[30] ) )\r\n \t\t\tintent = new Intent( this, MultitouchTest.class );\r\n-\t\tif( keyword.equals( items[32] ) )\r\n+\t\tif( keyword.equals( items[31] ) )\r\n \t\t\tintent = new Intent( this, BufferUtilsTest.class );\r\n-\t\tif( keyword.equals( items[33] ) )\r\n+\t\tif( keyword.equals( items[32] ) )\r\n \t\t\tintent = new Intent( this, TerrainTest.class );\r\n \t\t\t\r\n \t\tstartActivity( intent );\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 107, "bugNodeStartChar": 4826, "bugNodeLength": 9, "fixLineNum": 107, "fixNodeStartChar": 4720, "fixNodeLength": 9, "sourceBeforeFix": "items[29]", "sourceAfterFix": "items[28]"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "114211dc376cd85d1c97dde06cc7b347181314e1", "fixCommitParentSHA1": "06bc4f0fc48c8f98b5a6426af9de6882dbd06f16", "bugFilePath": "gdx-tests-android/src/com/badlogic/gdx/GDXTester.java", "fixPatch": "diff --git a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\nindex a554f46..dd972e9 100644\n--- a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n+++ b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n@@ -78,41 +78,41 @@\n \t\t\tintent = new Intent( this, LagTest.class );\r\n \t\tif( keyword.equals( items[14] ) )\r\n \t\t\tintent = new Intent( this, Pong.class );\r\n-\t\tif( keyword.equals( items[16] ) )\r\n+\t\tif( keyword.equals( items[15] ) )\r\n \t\t\tintent = new Intent( this, AudioDeviceTest.class );\r\n-\t\tif( keyword.equals( items[17] ) )\r\n+\t\tif( keyword.equals( items[16] ) )\r\n \t\t\tintent = new Intent( this, Mpg123Test.class );\r\n-\t\tif( keyword.equals( items[18] ) )\r\n+\t\tif( keyword.equals( items[17] ) )\r\n \t\t\tintent = new Intent( this, VorbisTest.class );\r\n-\t\tif( keyword.equals( items[19] ) )\r\n+\t\tif( keyword.equals( items[18] ) )\r\n \t\t\tintent = new Intent( this, PerformanceTest.class );\r\n-\t\tif( keyword.equals( items[20] ) )\r\n+\t\tif( keyword.equals( items[19] ) )\r\n \t\t\tintent = new Intent( this, MeshShaderTest.class );\r\n-\t\tif( keyword.equals( items[21] ) )\r\n+\t\tif( keyword.equals( items[20] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchTest.class );\r\n-\t\tif( keyword.equals( items[22] ) )\r\n+\t\tif( keyword.equals( items[21] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchShaderTest.class );\r\n-\t\tif( keyword.equals( items[23] ) )\r\n+\t\tif( keyword.equals( items[22] ) )\r\n \t\t\tintent = new Intent( this, FrameBufferTest.class );\r\n-\t\tif( keyword.equals( items[24] ) )\r\n+\t\tif( keyword.equals( items[23] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchRotationTest.class );\r\n-\t\tif( keyword.equals( items[25] ) )\r\n+\t\tif( keyword.equals( items[24] ) )\r\n \t\t\tintent = new Intent( this, Box2DTest.class );\r\n-\t\tif( keyword.equals( items[26] ) )\r\n+\t\tif( keyword.equals( items[25] ) )\r\n \t\t\tintent = new Intent( this, AudioRecorderTest.class );\r\n-\t\tif( keyword.equals( items[27] ) )\r\n+\t\tif( keyword.equals( items[26] ) )\r\n \t\t\tintent = new Intent( this, TestCollection.class );\r\n-\t\tif( keyword.equals( items[28] ) )\r\n+\t\tif( keyword.equals( items[27] ) )\r\n \t\t\tintent = new Intent( this, ResourcesTest.class );\r\n-\t\tif( keyword.equals( items[29] ) )\r\n+\t\tif( keyword.equals( items[28] ) )\r\n \t\t\tintent = new Intent( this, MD5Test.class );\r\n-\t\tif( keyword.equals( items[30] ) )\r\n+\t\tif( keyword.equals( items[29] ) )\r\n \t\t\tintent = new Intent( this, MicroBenchmarks.class );\r\n-\t\tif( keyword.equals( items[31] ) )\r\n+\t\tif( keyword.equals( items[30] ) )\r\n \t\t\tintent = new Intent( this, MultitouchTest.class );\r\n-\t\tif( keyword.equals( items[32] ) )\r\n+\t\tif( keyword.equals( items[31] ) )\r\n \t\t\tintent = new Intent( this, BufferUtilsTest.class );\r\n-\t\tif( keyword.equals( items[33] ) )\r\n+\t\tif( keyword.equals( items[32] ) )\r\n \t\t\tintent = new Intent( this, TerrainTest.class );\r\n \t\t\t\r\n \t\tstartActivity( intent );\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 109, "bugNodeStartChar": 4911, "bugNodeLength": 9, "fixLineNum": 109, "fixNodeStartChar": 4803, "fixNodeLength": 9, "sourceBeforeFix": "items[30]", "sourceAfterFix": "items[29]"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "114211dc376cd85d1c97dde06cc7b347181314e1", "fixCommitParentSHA1": "06bc4f0fc48c8f98b5a6426af9de6882dbd06f16", "bugFilePath": "gdx-tests-android/src/com/badlogic/gdx/GDXTester.java", "fixPatch": "diff --git a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\nindex a554f46..dd972e9 100644\n--- a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n+++ b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n@@ -78,41 +78,41 @@\n \t\t\tintent = new Intent( this, LagTest.class );\r\n \t\tif( keyword.equals( items[14] ) )\r\n \t\t\tintent = new Intent( this, Pong.class );\r\n-\t\tif( keyword.equals( items[16] ) )\r\n+\t\tif( keyword.equals( items[15] ) )\r\n \t\t\tintent = new Intent( this, AudioDeviceTest.class );\r\n-\t\tif( keyword.equals( items[17] ) )\r\n+\t\tif( keyword.equals( items[16] ) )\r\n \t\t\tintent = new Intent( this, Mpg123Test.class );\r\n-\t\tif( keyword.equals( items[18] ) )\r\n+\t\tif( keyword.equals( items[17] ) )\r\n \t\t\tintent = new Intent( this, VorbisTest.class );\r\n-\t\tif( keyword.equals( items[19] ) )\r\n+\t\tif( keyword.equals( items[18] ) )\r\n \t\t\tintent = new Intent( this, PerformanceTest.class );\r\n-\t\tif( keyword.equals( items[20] ) )\r\n+\t\tif( keyword.equals( items[19] ) )\r\n \t\t\tintent = new Intent( this, MeshShaderTest.class );\r\n-\t\tif( keyword.equals( items[21] ) )\r\n+\t\tif( keyword.equals( items[20] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchTest.class );\r\n-\t\tif( keyword.equals( items[22] ) )\r\n+\t\tif( keyword.equals( items[21] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchShaderTest.class );\r\n-\t\tif( keyword.equals( items[23] ) )\r\n+\t\tif( keyword.equals( items[22] ) )\r\n \t\t\tintent = new Intent( this, FrameBufferTest.class );\r\n-\t\tif( keyword.equals( items[24] ) )\r\n+\t\tif( keyword.equals( items[23] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchRotationTest.class );\r\n-\t\tif( keyword.equals( items[25] ) )\r\n+\t\tif( keyword.equals( items[24] ) )\r\n \t\t\tintent = new Intent( this, Box2DTest.class );\r\n-\t\tif( keyword.equals( items[26] ) )\r\n+\t\tif( keyword.equals( items[25] ) )\r\n \t\t\tintent = new Intent( this, AudioRecorderTest.class );\r\n-\t\tif( keyword.equals( items[27] ) )\r\n+\t\tif( keyword.equals( items[26] ) )\r\n \t\t\tintent = new Intent( this, TestCollection.class );\r\n-\t\tif( keyword.equals( items[28] ) )\r\n+\t\tif( keyword.equals( items[27] ) )\r\n \t\t\tintent = new Intent( this, ResourcesTest.class );\r\n-\t\tif( keyword.equals( items[29] ) )\r\n+\t\tif( keyword.equals( items[28] ) )\r\n \t\t\tintent = new Intent( this, MD5Test.class );\r\n-\t\tif( keyword.equals( items[30] ) )\r\n+\t\tif( keyword.equals( items[29] ) )\r\n \t\t\tintent = new Intent( this, MicroBenchmarks.class );\r\n-\t\tif( keyword.equals( items[31] ) )\r\n+\t\tif( keyword.equals( items[30] ) )\r\n \t\t\tintent = new Intent( this, MultitouchTest.class );\r\n-\t\tif( keyword.equals( items[32] ) )\r\n+\t\tif( keyword.equals( items[31] ) )\r\n \t\t\tintent = new Intent( this, BufferUtilsTest.class );\r\n-\t\tif( keyword.equals( items[33] ) )\r\n+\t\tif( keyword.equals( items[32] ) )\r\n \t\t\tintent = new Intent( this, TerrainTest.class );\r\n \t\t\t\r\n \t\tstartActivity( intent );\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 111, "bugNodeStartChar": 5004, "bugNodeLength": 9, "fixLineNum": 111, "fixNodeStartChar": 4894, "fixNodeLength": 9, "sourceBeforeFix": "items[31]", "sourceAfterFix": "items[30]"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "114211dc376cd85d1c97dde06cc7b347181314e1", "fixCommitParentSHA1": "06bc4f0fc48c8f98b5a6426af9de6882dbd06f16", "bugFilePath": "gdx-tests-android/src/com/badlogic/gdx/GDXTester.java", "fixPatch": "diff --git a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\nindex a554f46..dd972e9 100644\n--- a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n+++ b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n@@ -78,41 +78,41 @@\n \t\t\tintent = new Intent( this, LagTest.class );\r\n \t\tif( keyword.equals( items[14] ) )\r\n \t\t\tintent = new Intent( this, Pong.class );\r\n-\t\tif( keyword.equals( items[16] ) )\r\n+\t\tif( keyword.equals( items[15] ) )\r\n \t\t\tintent = new Intent( this, AudioDeviceTest.class );\r\n-\t\tif( keyword.equals( items[17] ) )\r\n+\t\tif( keyword.equals( items[16] ) )\r\n \t\t\tintent = new Intent( this, Mpg123Test.class );\r\n-\t\tif( keyword.equals( items[18] ) )\r\n+\t\tif( keyword.equals( items[17] ) )\r\n \t\t\tintent = new Intent( this, VorbisTest.class );\r\n-\t\tif( keyword.equals( items[19] ) )\r\n+\t\tif( keyword.equals( items[18] ) )\r\n \t\t\tintent = new Intent( this, PerformanceTest.class );\r\n-\t\tif( keyword.equals( items[20] ) )\r\n+\t\tif( keyword.equals( items[19] ) )\r\n \t\t\tintent = new Intent( this, MeshShaderTest.class );\r\n-\t\tif( keyword.equals( items[21] ) )\r\n+\t\tif( keyword.equals( items[20] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchTest.class );\r\n-\t\tif( keyword.equals( items[22] ) )\r\n+\t\tif( keyword.equals( items[21] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchShaderTest.class );\r\n-\t\tif( keyword.equals( items[23] ) )\r\n+\t\tif( keyword.equals( items[22] ) )\r\n \t\t\tintent = new Intent( this, FrameBufferTest.class );\r\n-\t\tif( keyword.equals( items[24] ) )\r\n+\t\tif( keyword.equals( items[23] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchRotationTest.class );\r\n-\t\tif( keyword.equals( items[25] ) )\r\n+\t\tif( keyword.equals( items[24] ) )\r\n \t\t\tintent = new Intent( this, Box2DTest.class );\r\n-\t\tif( keyword.equals( items[26] ) )\r\n+\t\tif( keyword.equals( items[25] ) )\r\n \t\t\tintent = new Intent( this, AudioRecorderTest.class );\r\n-\t\tif( keyword.equals( items[27] ) )\r\n+\t\tif( keyword.equals( items[26] ) )\r\n \t\t\tintent = new Intent( this, TestCollection.class );\r\n-\t\tif( keyword.equals( items[28] ) )\r\n+\t\tif( keyword.equals( items[27] ) )\r\n \t\t\tintent = new Intent( this, ResourcesTest.class );\r\n-\t\tif( keyword.equals( items[29] ) )\r\n+\t\tif( keyword.equals( items[28] ) )\r\n \t\t\tintent = new Intent( this, MD5Test.class );\r\n-\t\tif( keyword.equals( items[30] ) )\r\n+\t\tif( keyword.equals( items[29] ) )\r\n \t\t\tintent = new Intent( this, MicroBenchmarks.class );\r\n-\t\tif( keyword.equals( items[31] ) )\r\n+\t\tif( keyword.equals( items[30] ) )\r\n \t\t\tintent = new Intent( this, MultitouchTest.class );\r\n-\t\tif( keyword.equals( items[32] ) )\r\n+\t\tif( keyword.equals( items[31] ) )\r\n \t\t\tintent = new Intent( this, BufferUtilsTest.class );\r\n-\t\tif( keyword.equals( items[33] ) )\r\n+\t\tif( keyword.equals( items[32] ) )\r\n \t\t\tintent = new Intent( this, TerrainTest.class );\r\n \t\t\t\r\n \t\tstartActivity( intent );\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 113, "bugNodeStartChar": 5096, "bugNodeLength": 9, "fixLineNum": 113, "fixNodeStartChar": 4984, "fixNodeLength": 9, "sourceBeforeFix": "items[32]", "sourceAfterFix": "items[31]"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "114211dc376cd85d1c97dde06cc7b347181314e1", "fixCommitParentSHA1": "06bc4f0fc48c8f98b5a6426af9de6882dbd06f16", "bugFilePath": "gdx-tests-android/src/com/badlogic/gdx/GDXTester.java", "fixPatch": "diff --git a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\nindex a554f46..dd972e9 100644\n--- a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n+++ b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n@@ -78,41 +78,41 @@\n \t\t\tintent = new Intent( this, LagTest.class );\r\n \t\tif( keyword.equals( items[14] ) )\r\n \t\t\tintent = new Intent( this, Pong.class );\r\n-\t\tif( keyword.equals( items[16] ) )\r\n+\t\tif( keyword.equals( items[15] ) )\r\n \t\t\tintent = new Intent( this, AudioDeviceTest.class );\r\n-\t\tif( keyword.equals( items[17] ) )\r\n+\t\tif( keyword.equals( items[16] ) )\r\n \t\t\tintent = new Intent( this, Mpg123Test.class );\r\n-\t\tif( keyword.equals( items[18] ) )\r\n+\t\tif( keyword.equals( items[17] ) )\r\n \t\t\tintent = new Intent( this, VorbisTest.class );\r\n-\t\tif( keyword.equals( items[19] ) )\r\n+\t\tif( keyword.equals( items[18] ) )\r\n \t\t\tintent = new Intent( this, PerformanceTest.class );\r\n-\t\tif( keyword.equals( items[20] ) )\r\n+\t\tif( keyword.equals( items[19] ) )\r\n \t\t\tintent = new Intent( this, MeshShaderTest.class );\r\n-\t\tif( keyword.equals( items[21] ) )\r\n+\t\tif( keyword.equals( items[20] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchTest.class );\r\n-\t\tif( keyword.equals( items[22] ) )\r\n+\t\tif( keyword.equals( items[21] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchShaderTest.class );\r\n-\t\tif( keyword.equals( items[23] ) )\r\n+\t\tif( keyword.equals( items[22] ) )\r\n \t\t\tintent = new Intent( this, FrameBufferTest.class );\r\n-\t\tif( keyword.equals( items[24] ) )\r\n+\t\tif( keyword.equals( items[23] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchRotationTest.class );\r\n-\t\tif( keyword.equals( items[25] ) )\r\n+\t\tif( keyword.equals( items[24] ) )\r\n \t\t\tintent = new Intent( this, Box2DTest.class );\r\n-\t\tif( keyword.equals( items[26] ) )\r\n+\t\tif( keyword.equals( items[25] ) )\r\n \t\t\tintent = new Intent( this, AudioRecorderTest.class );\r\n-\t\tif( keyword.equals( items[27] ) )\r\n+\t\tif( keyword.equals( items[26] ) )\r\n \t\t\tintent = new Intent( this, TestCollection.class );\r\n-\t\tif( keyword.equals( items[28] ) )\r\n+\t\tif( keyword.equals( items[27] ) )\r\n \t\t\tintent = new Intent( this, ResourcesTest.class );\r\n-\t\tif( keyword.equals( items[29] ) )\r\n+\t\tif( keyword.equals( items[28] ) )\r\n \t\t\tintent = new Intent( this, MD5Test.class );\r\n-\t\tif( keyword.equals( items[30] ) )\r\n+\t\tif( keyword.equals( items[29] ) )\r\n \t\t\tintent = new Intent( this, MicroBenchmarks.class );\r\n-\t\tif( keyword.equals( items[31] ) )\r\n+\t\tif( keyword.equals( items[30] ) )\r\n \t\t\tintent = new Intent( this, MultitouchTest.class );\r\n-\t\tif( keyword.equals( items[32] ) )\r\n+\t\tif( keyword.equals( items[31] ) )\r\n \t\t\tintent = new Intent( this, BufferUtilsTest.class );\r\n-\t\tif( keyword.equals( items[33] ) )\r\n+\t\tif( keyword.equals( items[32] ) )\r\n \t\t\tintent = new Intent( this, TerrainTest.class );\r\n \t\t\t\r\n \t\tstartActivity( intent );\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 115, "bugNodeStartChar": 5189, "bugNodeLength": 9, "fixLineNum": 115, "fixNodeStartChar": 5075, "fixNodeLength": 9, "sourceBeforeFix": "items[33]", "sourceAfterFix": "items[32]"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "1f0ad1b1b10c4fe0bd0e721a813419d8de092b7a", "fixCommitParentSHA1": "febe9af92ea9c5b2e924788628b928bda8c7d1d8", "bugFilePath": "gdx-backend-desktop/src/com/badlogic/gdx/backends/desktop/JoglGL10.java", "fixPatch": "diff --git a/gdx-backend-desktop/src/com/badlogic/gdx/backends/desktop/JoglGL10.java b/gdx-backend-desktop/src/com/badlogic/gdx/backends/desktop/JoglGL10.java\nindex bd06ee4..6852610 100644\n--- a/gdx-backend-desktop/src/com/badlogic/gdx/backends/desktop/JoglGL10.java\n+++ b/gdx-backend-desktop/src/com/badlogic/gdx/backends/desktop/JoglGL10.java\n@@ -46,21 +46,21 @@\n \tpublic JoglGL10( javax.media.opengl.GL gl )\r\n \t{\r\n \t\tthis.gl = gl;\r\n-\t\tByteBuffer buffer = ByteBuffer.allocateDirect( 200000 * 4 * 4 );\t\t\r\n+\t\tByteBuffer buffer = ByteBuffer.allocateDirect( 20000 * 4 * 4 );\t\t\r\n \t\tbuffer.order(ByteOrder.nativeOrder());\r\n \t\tcolorBuffer = buffer.asFloatBuffer();\r\n \t\t\r\n-\t\tbuffer = ByteBuffer.allocateDirect( 200000 * 4 * 3 );\r\n+\t\tbuffer = ByteBuffer.allocateDirect( 20000 * 4 * 3 );\r\n \t\tbuffer.order(ByteOrder.nativeOrder());\r\n \t\tnormalBuffer = buffer.asFloatBuffer();\r\n \t\t\r\n-\t\tbuffer = ByteBuffer.allocateDirect( 200000 * 4 * 4 );\r\n+\t\tbuffer = ByteBuffer.allocateDirect( 20000 * 4 * 4 );\r\n \t\tbuffer.order(ByteOrder.nativeOrder());\r\n \t\tvertexBuffer = buffer.asFloatBuffer();\r\n \t\t\r\n \t\tfor( int i = 0; i < texCoordBuffer.length; i++ )\r\n \t\t{\r\n-\t\t\tbuffer = ByteBuffer.allocateDirect( 200000 * 4 * 4 );\r\n+\t\t\tbuffer = ByteBuffer.allocateDirect( 20000 * 4 * 4 );\r\n \t\t\tbuffer.order(ByteOrder.nativeOrder());\t\t\r\n \t\t\ttexCoordBuffer[i] = buffer.asFloatBuffer();\r\n \t\t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 49, "bugNodeStartChar": 1706, "bugNodeLength": 14, "fixLineNum": 49, "fixNodeStartChar": 1658, "fixNodeLength": 13, "sourceBeforeFix": "200000 * 4 * 4", "sourceAfterFix": "20000 * 4 * 4"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "1f0ad1b1b10c4fe0bd0e721a813419d8de092b7a", "fixCommitParentSHA1": "febe9af92ea9c5b2e924788628b928bda8c7d1d8", "bugFilePath": "gdx-backend-desktop/src/com/badlogic/gdx/backends/desktop/JoglGL10.java", "fixPatch": "diff --git a/gdx-backend-desktop/src/com/badlogic/gdx/backends/desktop/JoglGL10.java b/gdx-backend-desktop/src/com/badlogic/gdx/backends/desktop/JoglGL10.java\nindex bd06ee4..6852610 100644\n--- a/gdx-backend-desktop/src/com/badlogic/gdx/backends/desktop/JoglGL10.java\n+++ b/gdx-backend-desktop/src/com/badlogic/gdx/backends/desktop/JoglGL10.java\n@@ -46,21 +46,21 @@\n \tpublic JoglGL10( javax.media.opengl.GL gl )\r\n \t{\r\n \t\tthis.gl = gl;\r\n-\t\tByteBuffer buffer = ByteBuffer.allocateDirect( 200000 * 4 * 4 );\t\t\r\n+\t\tByteBuffer buffer = ByteBuffer.allocateDirect( 20000 * 4 * 4 );\t\t\r\n \t\tbuffer.order(ByteOrder.nativeOrder());\r\n \t\tcolorBuffer = buffer.asFloatBuffer();\r\n \t\t\r\n-\t\tbuffer = ByteBuffer.allocateDirect( 200000 * 4 * 3 );\r\n+\t\tbuffer = ByteBuffer.allocateDirect( 20000 * 4 * 3 );\r\n \t\tbuffer.order(ByteOrder.nativeOrder());\r\n \t\tnormalBuffer = buffer.asFloatBuffer();\r\n \t\t\r\n-\t\tbuffer = ByteBuffer.allocateDirect( 200000 * 4 * 4 );\r\n+\t\tbuffer = ByteBuffer.allocateDirect( 20000 * 4 * 4 );\r\n \t\tbuffer.order(ByteOrder.nativeOrder());\r\n \t\tvertexBuffer = buffer.asFloatBuffer();\r\n \t\t\r\n \t\tfor( int i = 0; i < texCoordBuffer.length; i++ )\r\n \t\t{\r\n-\t\t\tbuffer = ByteBuffer.allocateDirect( 200000 * 4 * 4 );\r\n+\t\t\tbuffer = ByteBuffer.allocateDirect( 20000 * 4 * 4 );\r\n \t\t\tbuffer.order(ByteOrder.nativeOrder());\t\t\r\n \t\t\ttexCoordBuffer[i] = buffer.asFloatBuffer();\r\n \t\t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 53, "bugNodeStartChar": 1852, "bugNodeLength": 14, "fixLineNum": 53, "fixNodeStartChar": 1800, "fixNodeLength": 13, "sourceBeforeFix": "200000 * 4 * 3", "sourceAfterFix": "20000 * 4 * 3"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "1f0ad1b1b10c4fe0bd0e721a813419d8de092b7a", "fixCommitParentSHA1": "febe9af92ea9c5b2e924788628b928bda8c7d1d8", "bugFilePath": "gdx-backend-desktop/src/com/badlogic/gdx/backends/desktop/JoglGL10.java", "fixPatch": "diff --git a/gdx-backend-desktop/src/com/badlogic/gdx/backends/desktop/JoglGL10.java b/gdx-backend-desktop/src/com/badlogic/gdx/backends/desktop/JoglGL10.java\nindex bd06ee4..6852610 100644\n--- a/gdx-backend-desktop/src/com/badlogic/gdx/backends/desktop/JoglGL10.java\n+++ b/gdx-backend-desktop/src/com/badlogic/gdx/backends/desktop/JoglGL10.java\n@@ -46,21 +46,21 @@\n \tpublic JoglGL10( javax.media.opengl.GL gl )\r\n \t{\r\n \t\tthis.gl = gl;\r\n-\t\tByteBuffer buffer = ByteBuffer.allocateDirect( 200000 * 4 * 4 );\t\t\r\n+\t\tByteBuffer buffer = ByteBuffer.allocateDirect( 20000 * 4 * 4 );\t\t\r\n \t\tbuffer.order(ByteOrder.nativeOrder());\r\n \t\tcolorBuffer = buffer.asFloatBuffer();\r\n \t\t\r\n-\t\tbuffer = ByteBuffer.allocateDirect( 200000 * 4 * 3 );\r\n+\t\tbuffer = ByteBuffer.allocateDirect( 20000 * 4 * 3 );\r\n \t\tbuffer.order(ByteOrder.nativeOrder());\r\n \t\tnormalBuffer = buffer.asFloatBuffer();\r\n \t\t\r\n-\t\tbuffer = ByteBuffer.allocateDirect( 200000 * 4 * 4 );\r\n+\t\tbuffer = ByteBuffer.allocateDirect( 20000 * 4 * 4 );\r\n \t\tbuffer.order(ByteOrder.nativeOrder());\r\n \t\tvertexBuffer = buffer.asFloatBuffer();\r\n \t\t\r\n \t\tfor( int i = 0; i < texCoordBuffer.length; i++ )\r\n \t\t{\r\n-\t\t\tbuffer = ByteBuffer.allocateDirect( 200000 * 4 * 4 );\r\n+\t\t\tbuffer = ByteBuffer.allocateDirect( 20000 * 4 * 4 );\r\n \t\t\tbuffer.order(ByteOrder.nativeOrder());\t\t\r\n \t\t\ttexCoordBuffer[i] = buffer.asFloatBuffer();\r\n \t\t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 57, "bugNodeStartChar": 1997, "bugNodeLength": 14, "fixLineNum": 57, "fixNodeStartChar": 1941, "fixNodeLength": 13, "sourceBeforeFix": "200000 * 4 * 4", "sourceAfterFix": "20000 * 4 * 4"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "1f0ad1b1b10c4fe0bd0e721a813419d8de092b7a", "fixCommitParentSHA1": "febe9af92ea9c5b2e924788628b928bda8c7d1d8", "bugFilePath": "gdx-backend-desktop/src/com/badlogic/gdx/backends/desktop/JoglGL10.java", "fixPatch": "diff --git a/gdx-backend-desktop/src/com/badlogic/gdx/backends/desktop/JoglGL10.java b/gdx-backend-desktop/src/com/badlogic/gdx/backends/desktop/JoglGL10.java\nindex bd06ee4..6852610 100644\n--- a/gdx-backend-desktop/src/com/badlogic/gdx/backends/desktop/JoglGL10.java\n+++ b/gdx-backend-desktop/src/com/badlogic/gdx/backends/desktop/JoglGL10.java\n@@ -46,21 +46,21 @@\n \tpublic JoglGL10( javax.media.opengl.GL gl )\r\n \t{\r\n \t\tthis.gl = gl;\r\n-\t\tByteBuffer buffer = ByteBuffer.allocateDirect( 200000 * 4 * 4 );\t\t\r\n+\t\tByteBuffer buffer = ByteBuffer.allocateDirect( 20000 * 4 * 4 );\t\t\r\n \t\tbuffer.order(ByteOrder.nativeOrder());\r\n \t\tcolorBuffer = buffer.asFloatBuffer();\r\n \t\t\r\n-\t\tbuffer = ByteBuffer.allocateDirect( 200000 * 4 * 3 );\r\n+\t\tbuffer = ByteBuffer.allocateDirect( 20000 * 4 * 3 );\r\n \t\tbuffer.order(ByteOrder.nativeOrder());\r\n \t\tnormalBuffer = buffer.asFloatBuffer();\r\n \t\t\r\n-\t\tbuffer = ByteBuffer.allocateDirect( 200000 * 4 * 4 );\r\n+\t\tbuffer = ByteBuffer.allocateDirect( 20000 * 4 * 4 );\r\n \t\tbuffer.order(ByteOrder.nativeOrder());\r\n \t\tvertexBuffer = buffer.asFloatBuffer();\r\n \t\t\r\n \t\tfor( int i = 0; i < texCoordBuffer.length; i++ )\r\n \t\t{\r\n-\t\t\tbuffer = ByteBuffer.allocateDirect( 200000 * 4 * 4 );\r\n+\t\t\tbuffer = ByteBuffer.allocateDirect( 20000 * 4 * 4 );\r\n \t\t\tbuffer.order(ByteOrder.nativeOrder());\t\t\r\n \t\t\ttexCoordBuffer[i] = buffer.asFloatBuffer();\r\n \t\t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 63, "bugNodeStartChar": 2200, "bugNodeLength": 14, "fixLineNum": 63, "fixNodeStartChar": 2138, "fixNodeLength": 13, "sourceBeforeFix": "200000 * 4 * 4", "sourceAfterFix": "20000 * 4 * 4"}, {"bugType": "OVERLOAD_METHOD_DELETED_ARGS", "fixCommitSHA1": "febe9af92ea9c5b2e924788628b928bda8c7d1d8", "fixCommitParentSHA1": "6e651219af1e256c8d8aad8c0b7e8b1dbbd5dd43", "bugFilePath": "gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java", "fixPatch": "diff --git a/gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java b/gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java\nindex eb0c80c..00f1d48 100644\n--- a/gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java\n+++ b/gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java\n@@ -175,7 +175,7 @@\n \t\t// matrices\r\n \t\tGL10 gl = app.getGraphics().getGL10();\r\n \t\tgl.glClear( GL10.GL_COLOR_BUFFER_BIT );\r\n-\t\tcamera.setMatrices( app.getGraphics() );\r\n+\t\tcamera.setMatrices( );\r\n \t\t\r\n \t\t// next we render the ground body\r\n \t\trenderBox( gl, groundBody, 50, 1 );\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 178, "bugNodeStartChar": 6521, "bugNodeLength": 39, "fixLineNum": 178, "fixNodeStartChar": 6344, "fixNodeLength": 21, "sourceBeforeFix": "camera.setMatrices(app.getGraphics())", "sourceAfterFix": "camera.setMatrices()"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "94fe91293c283842805aac48ee545ab6fce24f20", "fixCommitParentSHA1": "586d01201b88df742b68579f3710ecfea252a0f6", "bugFilePath": "gdx/src/com/badlogic/gdx/physics/box2d/joints/PrismaticJointDef.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/physics/box2d/joints/PrismaticJointDef.java b/gdx/src/com/badlogic/gdx/physics/box2d/joints/PrismaticJointDef.java\nindex 7205b20..38bbe4d 100644\n--- a/gdx/src/com/badlogic/gdx/physics/box2d/joints/PrismaticJointDef.java\n+++ b/gdx/src/com/badlogic/gdx/physics/box2d/joints/PrismaticJointDef.java\n@@ -63,7 +63,7 @@\n \t/**\r\n \t *  The local translation axis in body1.\r\n \t */\r\n-\tpublic final Vector2 localAxis1 = new Vector2( );\r\n+\tpublic final Vector2 localAxis1 = new Vector2(1, 0);\r\n \r\n \t/**\r\n \t *  The constrained angle between the bodies: body2_angle - body1_angle.\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 66, "bugNodeStartChar": 2425, "bugNodeLength": 14, "fixLineNum": 66, "fixNodeStartChar": 2360, "fixNodeLength": 17, "sourceBeforeFix": "new Vector2()", "sourceAfterFix": "new Vector2(1,0)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "5d379423cb8f460bf7e84ec0f6c290dba044fb23", "fixCommitParentSHA1": "cb7593b12659b81371a00a027f2a8342c1066020", "bugFilePath": "gdx-tests/src/com/badlogic/gdx/tests/AudioRecorderTest.java", "fixPatch": "diff --git a/gdx-tests/src/com/badlogic/gdx/tests/AudioRecorderTest.java b/gdx-tests/src/com/badlogic/gdx/tests/AudioRecorderTest.java\nindex 298dae9..876b2da 100644\n--- a/gdx-tests/src/com/badlogic/gdx/tests/AudioRecorderTest.java\n+++ b/gdx-tests/src/com/badlogic/gdx/tests/AudioRecorderTest.java\n@@ -83,6 +83,6 @@\n \tpublic void resume(Application app) \r\n \t{\r\n \t\tdevice = app.getAudio().newAudioDevice(true);\r\n-\t\trecorder = app.getAudio().newAudioRecoder( 22050, true );\t\t\r\n+\t\trecorder = app.getAudio().newAudioRecoder( 44100, true );\t\t\r\n \t}\t\r\n }\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 86, "bugNodeStartChar": 2115, "bugNodeLength": 45, "fixLineNum": 86, "fixNodeStartChar": 2030, "fixNodeLength": 45, "sourceBeforeFix": "app.getAudio().newAudioRecoder(22050,true)", "sourceAfterFix": "app.getAudio().newAudioRecoder(44100,true)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "4bbd778f2b32c39e6f141485b1ca8294390d7046", "fixCommitParentSHA1": "7f206d650b8f5e2b3e6742a328b06f99abf23d59", "bugFilePath": "gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java", "fixPatch": "diff --git a/gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java b/gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java\nindex dda57d8..7aa0716 100644\n--- a/gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java\n+++ b/gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java\n@@ -54,7 +54,7 @@\n \t\tcam.setMatrices(app.getGraphics());\t\r\n \t\t\t\t\r\n \t\tlong s = System.nanoTime();\r\n-\t\tworld.step( app.getGraphics().getDeltaTime(), 8, 3 );\r\n+\t\tworld.step( app.getGraphics().getDeltaTime(), 1, 1 );\r\n \t\tfloat updateTime = (System.nanoTime()-s)/1000000000.0f;\r\n \t\t\r\n \t\tfor( int i = 0; i < boxes.size(); i++ )\t\t\t\t\r\n@@ -122,7 +122,7 @@\n \t\tground.createFixture( groundBox, 1 );\r\n \t\tgroundBox.dispose();\r\n \t\t\r\n-\t\tfor( int i = 0; i < 20; i++ )\r\n+\t\tfor( int i = 0; i < 100; i++ )\r\n \t\t{\t\t\t\r\n \t\t\tboxes.add(createBox( ));\r\n \t\t}\t\t\t\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 125, "bugNodeStartChar": 3711, "bugNodeLength": 6, "fixLineNum": 125, "fixNodeStartChar": 3587, "fixNodeLength": 7, "sourceBeforeFix": "i < 20", "sourceAfterFix": "i < 100"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "7b41ab127c0b80c9ce3bf1cb4cd7ca56c2d9bdcd", "fixCommitParentSHA1": "0b98aed8701228e883eeb5c816cd75b43f707ed4", "bugFilePath": "gdx/src/com/badlogic/gdx/tests/TextTest.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/tests/TextTest.java b/gdx/src/com/badlogic/gdx/tests/TextTest.java\nindex 8361cf5..15775fc 100644\n--- a/gdx/src/com/badlogic/gdx/tests/TextTest.java\n+++ b/gdx/src/com/badlogic/gdx/tests/TextTest.java\n@@ -31,7 +31,7 @@\n \t\tif( text == null )\r\n \t\t{\r\n \t\t\tcam = new OrthographicCamera();\t\t\r\n-\t\t\tfont = app.getGraphics().newFont( app.getFiles().getInternalFileHandle( \"data/arial.ttf\"), 12, FontStyle.Plain, true );\r\n+\t\t\tfont = app.getGraphics().newFont( app.getFiles().getInternalFileHandle( \"data/arial.ttf\"), 11, FontStyle.Plain, true );\r\n \t\t\ttext = font.newText( );\r\n \t\t\ttext.setText( \"This is a test\\nIt is a multline text!\\nyes really!11!111one\" );\r\n \t\t\ttext.setHorizontalAlign( HorizontalAlign.Center );\t\t\t\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 34, "bugNodeStartChar": 1007, "bugNodeLength": 111, "fixLineNum": 34, "fixNodeStartChar": 974, "fixNodeLength": 111, "sourceBeforeFix": "app.getGraphics().newFont(app.getFiles().getInternalFileHandle(\"data/arial.ttf\"),12,FontStyle.Plain,true)", "sourceAfterFix": "app.getGraphics().newFont(app.getFiles().getInternalFileHandle(\"data/arial.ttf\"),11,FontStyle.Plain,true)"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "bab56d4e4c643aa2c447fb61a7532fcf41130864", "fixCommitParentSHA1": "6b0b467a791370bdb583901355ddaa31bdf2de9c", "bugFilePath": "gdx/src/com/badlogic/gdx/backends/desktop/JoglGraphics.java", "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/backends/desktop/JoglGraphics.java b/gdx/src/com/badlogic/gdx/backends/desktop/JoglGraphics.java\nindex 0ae3c84..dac4d51 100644\n--- a/gdx/src/com/badlogic/gdx/backends/desktop/JoglGraphics.java\n+++ b/gdx/src/com/badlogic/gdx/backends/desktop/JoglGraphics.java\n@@ -224,7 +224,7 @@\n \t\t}\r\n \t\telse\r\n \t\t{\r\n-\t\t\tif( minor < 5 )\r\n+\t\t\tif( major == 1 && minor < 5 )\r\n \t\t\t{\r\n \t\t\t\tgl10 = new JoglGL10( graphicPanel.getGL() );\r\n \t\t\t}\r\n", "projectName": "libgdx.libgdx", "bugLineNum": 227, "bugNodeStartChar": 5900, "bugNodeLength": 9, "fixLineNum": 227, "fixNodeStartChar": 5674, "fixNodeLength": 23, "sourceBeforeFix": "minor < 5", "sourceAfterFix": "major == 1 && minor < 5"}]