[{"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "fd6c6fa57f73fcbf3472b66a648648a710f1f050", "fixCommitParentSHA1": "1a6c9fe31767e23f4daf9de2148735347a572890", "bugFilePath": "value/src/it/functional/src/test/java/com/google/auto/value/AutoValueTest.java", "fixPatch": "diff --git a/value/src/it/functional/src/test/java/com/google/auto/value/AutoValueTest.java b/value/src/it/functional/src/test/java/com/google/auto/value/AutoValueTest.java\nindex fbd378a..b2ed4be 100644\n--- a/value/src/it/functional/src/test/java/com/google/auto/value/AutoValueTest.java\n+++ b/value/src/it/functional/src/test/java/com/google/auto/value/AutoValueTest.java\n@@ -2189,13 +2189,13 @@\n   public abstract static class BuilderWithCopyingSetters<T extends Number> {\n     public abstract ImmutableSet<? extends T> things();\n \n-    public abstract ImmutableList<String> strings();\n+    public abstract ImmutableList<Number> numbers();\n \n     public abstract ImmutableMap<String, T> map();\n \n     public static <T extends Number> Builder<T> builder(T value) {\n       return new AutoValue_AutoValueTest_BuilderWithCopyingSetters.Builder<T>()\n-          .setStrings(ImmutableSet.of(\"foo\", \"bar\"))\n+          .setNumbers(ImmutableSet.of(17, 23.0))\n           .setMap(Collections.singletonMap(\"foo\", value));\n     }\n \n@@ -2207,7 +2207,7 @@\n \n       Builder<T> setThings(T... things);\n \n-      Builder<T> setStrings(Collection<String> strings);\n+      Builder<T> setNumbers(Collection<? extends Number> strings);\n \n       Builder<T> setMap(Map<String, T> map);\n \n@@ -2221,7 +2221,7 @@\n \n     BuilderWithCopyingSetters<Integer> a = builder.setThings(ImmutableSet.of(1, 2)).build();\n     assertEquals(ImmutableSet.of(1, 2), a.things());\n-    assertEquals(ImmutableList.of(\"foo\", \"bar\"), a.strings());\n+    assertEquals(ImmutableList.of(17, 23.0), a.numbers());\n     assertEquals(ImmutableMap.of(\"foo\", 23), a.map());\n \n     BuilderWithCopyingSetters<Integer> b = builder.setThings(Arrays.asList(1, 2)).build();\n", "projectName": "google.auto", "bugLineNum": 2192, "bugNodeStartChar": 70341, "bugNodeLength": 21, "fixLineNum": 2192, "fixNodeStartChar": 70341, "fixNodeLength": 21, "sourceBeforeFix": "ImmutableList<String>", "sourceAfterFix": "ImmutableList<Number>"}, {"bugType": "SWAP_ARGUMENTS", "fixCommitSHA1": "0a8470b78e9a173775de0f3ab10fba81e3da106f", "fixCommitParentSHA1": "cd04524bf004fc3a26e1ba57d8dfb44e121a66c2", "bugFilePath": "value/src/it/functional/src/test/java/com/google/auto/value/AutoValueTest.java", "fixPatch": "diff --git a/value/src/it/functional/src/test/java/com/google/auto/value/AutoValueTest.java b/value/src/it/functional/src/test/java/com/google/auto/value/AutoValueTest.java\nindex 333e6ec..94d2e9e 100644\n--- a/value/src/it/functional/src/test/java/com/google/auto/value/AutoValueTest.java\n+++ b/value/src/it/functional/src/test/java/com/google/auto/value/AutoValueTest.java\n@@ -1032,7 +1032,7 @@\n       for (int j = 0; j < versions.length; j++) {\n         int actual = Integer.signum(versions[i].compareTo(versions[j]));\n         int expected = Integer.signum(i - j);\n-        assertEquals(actual, expected);\n+        assertEquals(expected, actual);\n       }\n     }\n   }\n", "projectName": "google.auto", "bugLineNum": 1035, "bugNodeStartChar": 35529, "bugNodeLength": 30, "fixLineNum": 1035, "fixNodeStartChar": 35529, "fixNodeLength": 30, "sourceBeforeFix": "assertEquals(actual,expected)", "sourceAfterFix": "assertEquals(expected,actual)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "e92a6bead67118685a3f2247b7cdb17ee4f2549d", "fixCommitParentSHA1": "416881849b4fa44cea6236f934426ac763ba5537", "bugFilePath": "value/src/test/java/com/google/auto/value/processor/CompilationTest.java", "fixPatch": "diff --git a/value/src/test/java/com/google/auto/value/processor/CompilationTest.java b/value/src/test/java/com/google/auto/value/processor/CompilationTest.java\nindex 45bea31..50b8d6b 100644\n--- a/value/src/test/java/com/google/auto/value/processor/CompilationTest.java\n+++ b/value/src/test/java/com/google/auto/value/processor/CompilationTest.java\n@@ -959,7 +959,7 @@\n         \"}\");\n     assertAbout(javaSources())\n         .that(ImmutableList.of(javaFileObject, nestedJavaFileObject))\n-        .withCompilerOptions(\"-Xlint:-processing\")\n+        .withCompilerOptions(\"-Xlint:-processing\", \"-implicit:none\")\n         .processedWith(new AutoValueProcessor())\n         .compilesWithoutWarnings()\n         .and()\n", "projectName": "google.auto", "bugLineNum": 960, "bugNodeStartChar": 35491, "bugNodeLength": 147, "fixLineNum": 960, "fixNodeStartChar": 35491, "fixNodeLength": 165, "sourceBeforeFix": "assertAbout(javaSources()).that(ImmutableList.of(javaFileObject,nestedJavaFileObject)).withCompilerOptions(\"-Xlint:-processing\")", "sourceAfterFix": "assertAbout(javaSources()).that(ImmutableList.of(javaFileObject,nestedJavaFileObject)).withCompilerOptions(\"-Xlint:-processing\",\"-implicit:none\")"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "c0637a44dab4b0fddd4c2e0b9794db9864ecb580", "fixCommitParentSHA1": "d71ec14e1b2dc5e64f8beca406b6a09fdee23abc", "bugFilePath": "common/src/main/java/com/google/auto/common/MoreTypes.java", "fixPatch": "diff --git a/common/src/main/java/com/google/auto/common/MoreTypes.java b/common/src/main/java/com/google/auto/common/MoreTypes.java\nindex d0f40a9..1319092 100644\n--- a/common/src/main/java/com/google/auto/common/MoreTypes.java\n+++ b/common/src/main/java/com/google/auto/common/MoreTypes.java\n@@ -738,7 +738,7 @@\n    * Returns a {@link WildcardType} if the {@link TypeMirror} represents a wildcard type or throws\n    * an {@link IllegalArgumentException}.\n    */\n-  public static WildcardType asWildcard(WildcardType maybeWildcardType) {\n+  public static WildcardType asWildcard(TypeMirror maybeWildcardType) {\n     return maybeWildcardType.accept(WildcardTypeVisitor.INSTANCE, null);\n   }\n \n", "projectName": "google.auto", "bugLineNum": 741, "bugNodeStartChar": 27137, "bugNodeLength": 30, "fixLineNum": 741, "fixNodeStartChar": 27137, "fixNodeLength": 28, "sourceBeforeFix": "WildcardType maybeWildcardType", "sourceAfterFix": "TypeMirror maybeWildcardType"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "3df3be852c308ed68fc81c1e44eb5714aafcf0bf", "fixCommitParentSHA1": "354de8addd8f75baaeb51784b1b3c5b146eb7d8b", "bugFilePath": "value/src/main/java/com/google/auto/value/processor/escapevelocity/ReferenceNode.java", "fixPatch": "diff --git a/value/src/main/java/com/google/auto/value/processor/escapevelocity/ReferenceNode.java b/value/src/main/java/com/google/auto/value/processor/escapevelocity/ReferenceNode.java\nindex 987adec..e32234a 100644\n--- a/value/src/main/java/com/google/auto/value/processor/escapevelocity/ReferenceNode.java\n+++ b/value/src/main/java/com/google/auto/value/processor/escapevelocity/ReferenceNode.java\n@@ -413,7 +413,7 @@\n       String pkg = packageNameOf(c);\n       Object module = CLASS_GET_MODULE_METHOD.invoke(c);\n       return (Boolean) MODULE_IS_EXPORTED_METHOD.invoke(module, pkg);\n-    } catch (ReflectiveOperationException e) {\n+    } catch (Exception e) {\n       return false;\n     }\n   }\n@@ -428,7 +428,7 @@\n       classGetModuleMethod = Class.class.getMethod(\"getModule\");\n       Class<?> moduleClass = classGetModuleMethod.getReturnType();\n       moduleIsExportedMethod = moduleClass.getMethod(\"isExported\", String.class);\n-    } catch (ReflectiveOperationException e) {\n+    } catch (Exception e) {\n       classGetModuleMethod = null;\n       moduleIsExportedMethod = null;\n     }\n", "projectName": "google.auto", "bugLineNum": 416, "bugNodeStartChar": 16037, "bugNodeLength": 30, "fixLineNum": 416, "fixNodeStartChar": 16037, "fixNodeLength": 11, "sourceBeforeFix": "ReflectiveOperationException e", "sourceAfterFix": "Exception e"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "3df3be852c308ed68fc81c1e44eb5714aafcf0bf", "fixCommitParentSHA1": "354de8addd8f75baaeb51784b1b3c5b146eb7d8b", "bugFilePath": "value/src/main/java/com/google/auto/value/processor/escapevelocity/ReferenceNode.java", "fixPatch": "diff --git a/value/src/main/java/com/google/auto/value/processor/escapevelocity/ReferenceNode.java b/value/src/main/java/com/google/auto/value/processor/escapevelocity/ReferenceNode.java\nindex 987adec..e32234a 100644\n--- a/value/src/main/java/com/google/auto/value/processor/escapevelocity/ReferenceNode.java\n+++ b/value/src/main/java/com/google/auto/value/processor/escapevelocity/ReferenceNode.java\n@@ -413,7 +413,7 @@\n       String pkg = packageNameOf(c);\n       Object module = CLASS_GET_MODULE_METHOD.invoke(c);\n       return (Boolean) MODULE_IS_EXPORTED_METHOD.invoke(module, pkg);\n-    } catch (ReflectiveOperationException e) {\n+    } catch (Exception e) {\n       return false;\n     }\n   }\n@@ -428,7 +428,7 @@\n       classGetModuleMethod = Class.class.getMethod(\"getModule\");\n       Class<?> moduleClass = classGetModuleMethod.getReturnType();\n       moduleIsExportedMethod = moduleClass.getMethod(\"isExported\", String.class);\n-    } catch (ReflectiveOperationException e) {\n+    } catch (Exception e) {\n       classGetModuleMethod = null;\n       moduleIsExportedMethod = null;\n     }\n", "projectName": "google.auto", "bugLineNum": 431, "bugNodeStartChar": 16531, "bugNodeLength": 30, "fixLineNum": 431, "fixNodeStartChar": 16531, "fixNodeLength": 11, "sourceBeforeFix": "ReflectiveOperationException e", "sourceAfterFix": "Exception e"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "6352f8d96cac2c1611af8094a1d728a6141d981c", "fixCommitParentSHA1": "068717fc50a415f649b6f352f669c545fc46edad", "bugFilePath": "value/src/main/java/com/google/auto/value/processor/AutoValueProcessor.java", "fixPatch": "diff --git a/value/src/main/java/com/google/auto/value/processor/AutoValueProcessor.java b/value/src/main/java/com/google/auto/value/processor/AutoValueProcessor.java\nindex 4ac945a..b0f3dc9 100644\n--- a/value/src/main/java/com/google/auto/value/processor/AutoValueProcessor.java\n+++ b/value/src/main/java/com/google/auto/value/processor/AutoValueProcessor.java\n@@ -380,8 +380,9 @@\n           + \" interface; try using @AutoAnnotation instead\", type);\n     }\n \n-    ImmutableSet<ExecutableElement> methods = getLocalAndInheritedMethods(type, processingEnv.getElementUtils());\n-    ImmutableSet<ExecutableElement> methodsToImplement = methodsToImplement(methods);\n+    ImmutableSet<ExecutableElement> methods =\n+        getLocalAndInheritedMethods(type, processingEnv.getElementUtils());\n+    ImmutableSet<ExecutableElement> methodsToImplement = methodsToImplement(type, methods);\n \n     String fqExtClass = TypeSimplifier.classNameOf(type);\n     List<AutoValueExtension> appliedExtensions = new ArrayList<AutoValueExtension>();\n", "projectName": "google.auto", "bugLineNum": 384, "bugNodeStartChar": 14569, "bugNodeLength": 27, "fixLineNum": 385, "fixNodeStartChar": 14577, "fixNodeLength": 33, "sourceBeforeFix": "methodsToImplement(methods)", "sourceAfterFix": "methodsToImplement(type,methods)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "6352f8d96cac2c1611af8094a1d728a6141d981c", "fixCommitParentSHA1": "068717fc50a415f649b6f352f669c545fc46edad", "bugFilePath": "value/src/main/java/com/google/auto/value/processor/AutoValueProcessor.java", "fixPatch": "diff --git a/value/src/main/java/com/google/auto/value/processor/AutoValueProcessor.java b/value/src/main/java/com/google/auto/value/processor/AutoValueProcessor.java\nindex 4ac945a..b0f3dc9 100644\n--- a/value/src/main/java/com/google/auto/value/processor/AutoValueProcessor.java\n+++ b/value/src/main/java/com/google/auto/value/processor/AutoValueProcessor.java\n@@ -380,8 +380,9 @@\n           + \" interface; try using @AutoAnnotation instead\", type);\n     }\n \n-    ImmutableSet<ExecutableElement> methods = getLocalAndInheritedMethods(type, processingEnv.getElementUtils());\n-    ImmutableSet<ExecutableElement> methodsToImplement = methodsToImplement(methods);\n+    ImmutableSet<ExecutableElement> methods =\n+        getLocalAndInheritedMethods(type, processingEnv.getElementUtils());\n+    ImmutableSet<ExecutableElement> methodsToImplement = methodsToImplement(type, methods);\n \n     String fqExtClass = TypeSimplifier.classNameOf(type);\n     List<AutoValueExtension> appliedExtensions = new ArrayList<AutoValueExtension>();\n", "projectName": "google.auto", "bugLineNum": 384, "bugNodeStartChar": 14569, "bugNodeLength": 27, "fixLineNum": 385, "fixNodeStartChar": 14577, "fixNodeLength": 33, "sourceBeforeFix": "methodsToImplement(methods)", "sourceAfterFix": "methodsToImplement(type,methods)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "0b3f7b13bf8c9eac4a0b9835152fd15859258978", "fixCommitParentSHA1": "a6df0407f41358da1ffb65cb698ba1868dc8a6e5", "bugFilePath": "value/src/main/java/com/google/auto/value/processor/AutoValueProcessor.java", "fixPatch": "diff --git a/value/src/main/java/com/google/auto/value/processor/AutoValueProcessor.java b/value/src/main/java/com/google/auto/value/processor/AutoValueProcessor.java\nindex 4ac945a..b0f3dc9 100644\n--- a/value/src/main/java/com/google/auto/value/processor/AutoValueProcessor.java\n+++ b/value/src/main/java/com/google/auto/value/processor/AutoValueProcessor.java\n@@ -380,8 +380,9 @@\n           + \" interface; try using @AutoAnnotation instead\", type);\n     }\n \n-    ImmutableSet<ExecutableElement> methods = getLocalAndInheritedMethods(type, processingEnv.getElementUtils());\n-    ImmutableSet<ExecutableElement> methodsToImplement = methodsToImplement(methods);\n+    ImmutableSet<ExecutableElement> methods =\n+        getLocalAndInheritedMethods(type, processingEnv.getElementUtils());\n+    ImmutableSet<ExecutableElement> methodsToImplement = methodsToImplement(type, methods);\n \n     String fqExtClass = TypeSimplifier.classNameOf(type);\n     List<AutoValueExtension> appliedExtensions = new ArrayList<AutoValueExtension>();\n", "projectName": "google.auto", "bugLineNum": 384, "bugNodeStartChar": 14569, "bugNodeLength": 27, "fixLineNum": 385, "fixNodeStartChar": 14577, "fixNodeLength": 33, "sourceBeforeFix": "methodsToImplement(methods)", "sourceAfterFix": "methodsToImplement(type,methods)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "0b3f7b13bf8c9eac4a0b9835152fd15859258978", "fixCommitParentSHA1": "a6df0407f41358da1ffb65cb698ba1868dc8a6e5", "bugFilePath": "value/src/main/java/com/google/auto/value/processor/AutoValueProcessor.java", "fixPatch": "diff --git a/value/src/main/java/com/google/auto/value/processor/AutoValueProcessor.java b/value/src/main/java/com/google/auto/value/processor/AutoValueProcessor.java\nindex 4ac945a..b0f3dc9 100644\n--- a/value/src/main/java/com/google/auto/value/processor/AutoValueProcessor.java\n+++ b/value/src/main/java/com/google/auto/value/processor/AutoValueProcessor.java\n@@ -380,8 +380,9 @@\n           + \" interface; try using @AutoAnnotation instead\", type);\n     }\n \n-    ImmutableSet<ExecutableElement> methods = getLocalAndInheritedMethods(type, processingEnv.getElementUtils());\n-    ImmutableSet<ExecutableElement> methodsToImplement = methodsToImplement(methods);\n+    ImmutableSet<ExecutableElement> methods =\n+        getLocalAndInheritedMethods(type, processingEnv.getElementUtils());\n+    ImmutableSet<ExecutableElement> methodsToImplement = methodsToImplement(type, methods);\n \n     String fqExtClass = TypeSimplifier.classNameOf(type);\n     List<AutoValueExtension> appliedExtensions = new ArrayList<AutoValueExtension>();\n", "projectName": "google.auto", "bugLineNum": 384, "bugNodeStartChar": 14569, "bugNodeLength": 27, "fixLineNum": 385, "fixNodeStartChar": 14577, "fixNodeLength": 33, "sourceBeforeFix": "methodsToImplement(methods)", "sourceAfterFix": "methodsToImplement(type,methods)"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "9c9dc0b7973cadf42086027afc7b47387ebed73f", "fixCommitParentSHA1": "b069c4c7ca0a2f3420c70b66e1c271e0ec1a0a68", "bugFilePath": "factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java", "fixPatch": "diff --git a/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java b/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java\nindex 2f1006a..ad4e911 100644\n--- a/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java\n+++ b/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java\n@@ -70,7 +70,7 @@\n   @Override\n   public synchronized void init(ProcessingEnvironment processingEnv) {\n     super.init(processingEnv);\n-    Dagger_AutoFactoryProcessorComponent.builder()\n+    DaggerAutoFactoryProcessorComponent.builder()\n         .processorModule(new ProcessorModule(processingEnv))\n         .build()\n         .injectProcessor(this);\n", "projectName": "google.auto", "bugLineNum": 73, "bugNodeStartChar": 2674, "bugNodeLength": 46, "fixLineNum": 73, "fixNodeStartChar": 2674, "fixNodeLength": 45, "sourceBeforeFix": "Dagger_AutoFactoryProcessorComponent.builder()", "sourceAfterFix": "DaggerAutoFactoryProcessorComponent.builder()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "9c9dc0b7973cadf42086027afc7b47387ebed73f", "fixCommitParentSHA1": "b069c4c7ca0a2f3420c70b66e1c271e0ec1a0a68", "bugFilePath": "factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java", "fixPatch": "diff --git a/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java b/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java\nindex 2f1006a..ad4e911 100644\n--- a/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java\n+++ b/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java\n@@ -70,7 +70,7 @@\n   @Override\n   public synchronized void init(ProcessingEnvironment processingEnv) {\n     super.init(processingEnv);\n-    Dagger_AutoFactoryProcessorComponent.builder()\n+    DaggerAutoFactoryProcessorComponent.builder()\n         .processorModule(new ProcessorModule(processingEnv))\n         .build()\n         .injectProcessor(this);\n", "projectName": "google.auto", "bugLineNum": 73, "bugNodeStartChar": 2674, "bugNodeLength": 46, "fixLineNum": 73, "fixNodeStartChar": 2674, "fixNodeLength": 45, "sourceBeforeFix": "Dagger_AutoFactoryProcessorComponent.builder()", "sourceAfterFix": "DaggerAutoFactoryProcessorComponent.builder()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "dbd841562137595e365ccf2ad1524ecfdee958c9", "fixCommitParentSHA1": "7a86ce9f50025df73cb31bc8561430f85b04d713", "bugFilePath": "factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java", "fixPatch": "diff --git a/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java b/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java\nindex d9a3a7b..9c20e8c 100644\n--- a/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java\n+++ b/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java\n@@ -94,7 +94,7 @@\n \n     ImmutableListMultimap.Builder<String, FactoryMethodDescriptor> indexedMethods =\n         ImmutableListMultimap.builder();\n-    ImmutableSet.Builder<ImplemetationMethodDescriptor> implemetationMethodDescriptors =\n+    ImmutableSet.Builder<ImplementationMethodDescriptor> implementationMethodDescriptors =\n         ImmutableSet.builder();\n     for (Element element : roundEnv.getElementsAnnotatedWith(AutoFactory.class)) {\n       Optional<AutoFactoryDeclaration> declaration = declarationFactory.createIfValid(element);\n@@ -106,7 +106,7 @@\n           if (supertypeMethod.getModifiers().contains(Modifier.ABSTRACT)) {\n             ExecutableType methodType = Elements2.getExecutableElementAsMemberOf(\n                 types, supertypeMethod, extendingType);\n-            implemetationMethodDescriptors.add(new ImplemetationMethodDescriptor.Builder()\n+            implementationMethodDescriptors.add(new ImplementationMethodDescriptor.Builder()\n                 .name(supertypeMethod.getSimpleName().toString())\n                 .returnType(getAnnotatedType(element).getQualifiedName().toString())\n                 .publicMethod()\n@@ -122,7 +122,7 @@\n             if (interfaceMethod.getModifiers().contains(Modifier.ABSTRACT)) {\n               ExecutableType methodType = Elements2.getExecutableElementAsMemberOf(\n                   types, interfaceMethod, implementingType);\n-              implemetationMethodDescriptors.add(new ImplemetationMethodDescriptor.Builder()\n+              implementationMethodDescriptors.add(new ImplementationMethodDescriptor.Builder()\n                   .name(interfaceMethod.getSimpleName().toString())\n                   .returnType(getAnnotatedType(element).getQualifiedName().toString())\n                   .publicMethod()\n@@ -165,7 +165,7 @@\n                 publicType,\n                 ImmutableSet.copyOf(entry.getValue()),\n                 // TODO(gak): this needs to be indexed too\n-                implemetationMethodDescriptors.build()));\n+                implementationMethodDescriptors.build()));\n       } catch (IOException e) {\n         messager.printMessage(Kind.ERROR, \"failed\");\n       }\n", "projectName": "google.auto", "bugLineNum": 97, "bugNodeStartChar": 3535, "bugNodeLength": 51, "fixLineNum": 97, "fixNodeStartChar": 3535, "fixNodeLength": 52, "sourceBeforeFix": "ImmutableSet.Builder<ImplemetationMethodDescriptor>", "sourceAfterFix": "ImmutableSet.Builder<ImplementationMethodDescriptor>"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "dbd841562137595e365ccf2ad1524ecfdee958c9", "fixCommitParentSHA1": "7a86ce9f50025df73cb31bc8561430f85b04d713", "bugFilePath": "factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java", "fixPatch": "diff --git a/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java b/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java\nindex d9a3a7b..9c20e8c 100644\n--- a/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java\n+++ b/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java\n@@ -94,7 +94,7 @@\n \n     ImmutableListMultimap.Builder<String, FactoryMethodDescriptor> indexedMethods =\n         ImmutableListMultimap.builder();\n-    ImmutableSet.Builder<ImplemetationMethodDescriptor> implemetationMethodDescriptors =\n+    ImmutableSet.Builder<ImplementationMethodDescriptor> implementationMethodDescriptors =\n         ImmutableSet.builder();\n     for (Element element : roundEnv.getElementsAnnotatedWith(AutoFactory.class)) {\n       Optional<AutoFactoryDeclaration> declaration = declarationFactory.createIfValid(element);\n@@ -106,7 +106,7 @@\n           if (supertypeMethod.getModifiers().contains(Modifier.ABSTRACT)) {\n             ExecutableType methodType = Elements2.getExecutableElementAsMemberOf(\n                 types, supertypeMethod, extendingType);\n-            implemetationMethodDescriptors.add(new ImplemetationMethodDescriptor.Builder()\n+            implementationMethodDescriptors.add(new ImplementationMethodDescriptor.Builder()\n                 .name(supertypeMethod.getSimpleName().toString())\n                 .returnType(getAnnotatedType(element).getQualifiedName().toString())\n                 .publicMethod()\n@@ -122,7 +122,7 @@\n             if (interfaceMethod.getModifiers().contains(Modifier.ABSTRACT)) {\n               ExecutableType methodType = Elements2.getExecutableElementAsMemberOf(\n                   types, interfaceMethod, implementingType);\n-              implemetationMethodDescriptors.add(new ImplemetationMethodDescriptor.Builder()\n+              implementationMethodDescriptors.add(new ImplementationMethodDescriptor.Builder()\n                   .name(interfaceMethod.getSimpleName().toString())\n                   .returnType(getAnnotatedType(element).getQualifiedName().toString())\n                   .publicMethod()\n@@ -165,7 +165,7 @@\n                 publicType,\n                 ImmutableSet.copyOf(entry.getValue()),\n                 // TODO(gak): this needs to be indexed too\n-                implemetationMethodDescriptors.build()));\n+                implementationMethodDescriptors.build()));\n       } catch (IOException e) {\n         messager.printMessage(Kind.ERROR, \"failed\");\n       }\n", "projectName": "google.auto", "bugLineNum": 168, "bugNodeStartChar": 7357, "bugNodeLength": 38, "fixLineNum": 168, "fixNodeStartChar": 7357, "fixNodeLength": 39, "sourceBeforeFix": "implemetationMethodDescriptors.build()", "sourceAfterFix": "implementationMethodDescriptors.build()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "dbd841562137595e365ccf2ad1524ecfdee958c9", "fixCommitParentSHA1": "7a86ce9f50025df73cb31bc8561430f85b04d713", "bugFilePath": "factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java", "fixPatch": "diff --git a/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java b/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java\nindex d9a3a7b..9c20e8c 100644\n--- a/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java\n+++ b/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java\n@@ -94,7 +94,7 @@\n \n     ImmutableListMultimap.Builder<String, FactoryMethodDescriptor> indexedMethods =\n         ImmutableListMultimap.builder();\n-    ImmutableSet.Builder<ImplemetationMethodDescriptor> implemetationMethodDescriptors =\n+    ImmutableSet.Builder<ImplementationMethodDescriptor> implementationMethodDescriptors =\n         ImmutableSet.builder();\n     for (Element element : roundEnv.getElementsAnnotatedWith(AutoFactory.class)) {\n       Optional<AutoFactoryDeclaration> declaration = declarationFactory.createIfValid(element);\n@@ -106,7 +106,7 @@\n           if (supertypeMethod.getModifiers().contains(Modifier.ABSTRACT)) {\n             ExecutableType methodType = Elements2.getExecutableElementAsMemberOf(\n                 types, supertypeMethod, extendingType);\n-            implemetationMethodDescriptors.add(new ImplemetationMethodDescriptor.Builder()\n+            implementationMethodDescriptors.add(new ImplementationMethodDescriptor.Builder()\n                 .name(supertypeMethod.getSimpleName().toString())\n                 .returnType(getAnnotatedType(element).getQualifiedName().toString())\n                 .publicMethod()\n@@ -122,7 +122,7 @@\n             if (interfaceMethod.getModifiers().contains(Modifier.ABSTRACT)) {\n               ExecutableType methodType = Elements2.getExecutableElementAsMemberOf(\n                   types, interfaceMethod, implementingType);\n-              implemetationMethodDescriptors.add(new ImplemetationMethodDescriptor.Builder()\n+              implementationMethodDescriptors.add(new ImplementationMethodDescriptor.Builder()\n                   .name(interfaceMethod.getSimpleName().toString())\n                   .returnType(getAnnotatedType(element).getQualifiedName().toString())\n                   .publicMethod()\n@@ -165,7 +165,7 @@\n                 publicType,\n                 ImmutableSet.copyOf(entry.getValue()),\n                 // TODO(gak): this needs to be indexed too\n-                implemetationMethodDescriptors.build()));\n+                implementationMethodDescriptors.build()));\n       } catch (IOException e) {\n         messager.printMessage(Kind.ERROR, \"failed\");\n       }\n", "projectName": "google.auto", "bugLineNum": 168, "bugNodeStartChar": 7357, "bugNodeLength": 38, "fixLineNum": 168, "fixNodeStartChar": 7357, "fixNodeLength": 39, "sourceBeforeFix": "implemetationMethodDescriptors.build()", "sourceAfterFix": "implementationMethodDescriptors.build()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "dbd841562137595e365ccf2ad1524ecfdee958c9", "fixCommitParentSHA1": "7a86ce9f50025df73cb31bc8561430f85b04d713", "bugFilePath": "factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java", "fixPatch": "diff --git a/factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java b/factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java\nindex c3649f2..230f452 100644\n--- a/factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java\n+++ b/factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java\n@@ -45,12 +45,12 @@\n   private final ImmutableSortedSet<String> implementingTypes;\n   private final boolean publicType;\n   private final ImmutableSet<FactoryMethodDescriptor> methodDescriptors;\n-  private final ImmutableSet<ImplemetationMethodDescriptor> implementationMethodDescriptors;\n+  private final ImmutableSet<ImplementationMethodDescriptor> implementationMethodDescriptors;\n   private final ImmutableMap<Key, String> providerNames;\n \n   FactoryDescriptor(String name, String extendingType, ImmutableSortedSet<String> implementingTypes,\n       boolean publicType, ImmutableSet<FactoryMethodDescriptor> methodDescriptors,\n-      ImmutableSet<ImplemetationMethodDescriptor> implementationMethodDescriptors) {\n+      ImmutableSet<ImplementationMethodDescriptor> implementationMethodDescriptors) {\n     this.name = checkNotNull(name);\n     this.extendingType = checkNotNull(extendingType);\n     this.implementingTypes = checkNotNull(implementingTypes);\n@@ -101,7 +101,7 @@\n     return methodDescriptors;\n   }\n \n-  ImmutableSet<ImplemetationMethodDescriptor> implementationMethodDescriptors() {\n+  ImmutableSet<ImplementationMethodDescriptor> implementationMethodDescriptors() {\n     return implementationMethodDescriptors;\n   }\n \n", "projectName": "google.auto", "bugLineNum": 48, "bugNodeStartChar": 1619, "bugNodeLength": 43, "fixLineNum": 48, "fixNodeStartChar": 1619, "fixNodeLength": 44, "sourceBeforeFix": "ImmutableSet<ImplemetationMethodDescriptor>", "sourceAfterFix": "ImmutableSet<ImplementationMethodDescriptor>"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "dbd841562137595e365ccf2ad1524ecfdee958c9", "fixCommitParentSHA1": "7a86ce9f50025df73cb31bc8561430f85b04d713", "bugFilePath": "factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java", "fixPatch": "diff --git a/factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java b/factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java\nindex c3649f2..230f452 100644\n--- a/factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java\n+++ b/factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java\n@@ -45,12 +45,12 @@\n   private final ImmutableSortedSet<String> implementingTypes;\n   private final boolean publicType;\n   private final ImmutableSet<FactoryMethodDescriptor> methodDescriptors;\n-  private final ImmutableSet<ImplemetationMethodDescriptor> implementationMethodDescriptors;\n+  private final ImmutableSet<ImplementationMethodDescriptor> implementationMethodDescriptors;\n   private final ImmutableMap<Key, String> providerNames;\n \n   FactoryDescriptor(String name, String extendingType, ImmutableSortedSet<String> implementingTypes,\n       boolean publicType, ImmutableSet<FactoryMethodDescriptor> methodDescriptors,\n-      ImmutableSet<ImplemetationMethodDescriptor> implementationMethodDescriptors) {\n+      ImmutableSet<ImplementationMethodDescriptor> implementationMethodDescriptors) {\n     this.name = checkNotNull(name);\n     this.extendingType = checkNotNull(extendingType);\n     this.implementingTypes = checkNotNull(implementingTypes);\n@@ -101,7 +101,7 @@\n     return methodDescriptors;\n   }\n \n-  ImmutableSet<ImplemetationMethodDescriptor> implementationMethodDescriptors() {\n+  ImmutableSet<ImplementationMethodDescriptor> implementationMethodDescriptors() {\n     return implementationMethodDescriptors;\n   }\n \n", "projectName": "google.auto", "bugLineNum": 53, "bugNodeStartChar": 1944, "bugNodeLength": 43, "fixLineNum": 53, "fixNodeStartChar": 1944, "fixNodeLength": 44, "sourceBeforeFix": "ImmutableSet<ImplemetationMethodDescriptor>", "sourceAfterFix": "ImmutableSet<ImplementationMethodDescriptor>"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "dbd841562137595e365ccf2ad1524ecfdee958c9", "fixCommitParentSHA1": "7a86ce9f50025df73cb31bc8561430f85b04d713", "bugFilePath": "factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java", "fixPatch": "diff --git a/factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java b/factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java\nindex c3649f2..230f452 100644\n--- a/factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java\n+++ b/factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java\n@@ -45,12 +45,12 @@\n   private final ImmutableSortedSet<String> implementingTypes;\n   private final boolean publicType;\n   private final ImmutableSet<FactoryMethodDescriptor> methodDescriptors;\n-  private final ImmutableSet<ImplemetationMethodDescriptor> implementationMethodDescriptors;\n+  private final ImmutableSet<ImplementationMethodDescriptor> implementationMethodDescriptors;\n   private final ImmutableMap<Key, String> providerNames;\n \n   FactoryDescriptor(String name, String extendingType, ImmutableSortedSet<String> implementingTypes,\n       boolean publicType, ImmutableSet<FactoryMethodDescriptor> methodDescriptors,\n-      ImmutableSet<ImplemetationMethodDescriptor> implementationMethodDescriptors) {\n+      ImmutableSet<ImplementationMethodDescriptor> implementationMethodDescriptors) {\n     this.name = checkNotNull(name);\n     this.extendingType = checkNotNull(extendingType);\n     this.implementingTypes = checkNotNull(implementingTypes);\n@@ -101,7 +101,7 @@\n     return methodDescriptors;\n   }\n \n-  ImmutableSet<ImplemetationMethodDescriptor> implementationMethodDescriptors() {\n+  ImmutableSet<ImplementationMethodDescriptor> implementationMethodDescriptors() {\n     return implementationMethodDescriptors;\n   }\n \n", "projectName": "google.auto", "bugLineNum": 104, "bugNodeStartChar": 3675, "bugNodeLength": 43, "fixLineNum": 104, "fixNodeStartChar": 3675, "fixNodeLength": 44, "sourceBeforeFix": "ImmutableSet<ImplemetationMethodDescriptor>", "sourceAfterFix": "ImmutableSet<ImplementationMethodDescriptor>"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "dbd841562137595e365ccf2ad1524ecfdee958c9", "fixCommitParentSHA1": "7a86ce9f50025df73cb31bc8561430f85b04d713", "bugFilePath": "factory/src/main/java/com/google/auto/factory/processor/FactoryWriter.java", "fixPatch": "diff --git a/factory/src/main/java/com/google/auto/factory/processor/FactoryWriter.java b/factory/src/main/java/com/google/auto/factory/processor/FactoryWriter.java\nindex 9ef5286..b2014f6 100644\n--- a/factory/src/main/java/com/google/auto/factory/processor/FactoryWriter.java\n+++ b/factory/src/main/java/com/google/auto/factory/processor/FactoryWriter.java\n@@ -131,7 +131,7 @@\n       writer.endMethod();\n     }\n \n-    for (ImplemetationMethodDescriptor methodDescriptor\n+    for (ImplementationMethodDescriptor methodDescriptor\n         : descriptor.implementationMethodDescriptors()) {\n       writer.emitAnnotation(Override.class);\n       writer.beginMethod(methodDescriptor.returnType(), methodDescriptor.name(),\n", "projectName": "google.auto", "bugLineNum": 134, "bugNodeStartChar": 5460, "bugNodeLength": 46, "fixLineNum": 134, "fixNodeStartChar": 5460, "fixNodeLength": 47, "sourceBeforeFix": "ImplemetationMethodDescriptor methodDescriptor", "sourceAfterFix": "ImplementationMethodDescriptor methodDescriptor"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "a421ca3133ddf727a147e87455a5511444d8d4bb", "fixCommitParentSHA1": "7a86ce9f50025df73cb31bc8561430f85b04d713", "bugFilePath": "factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java", "fixPatch": "diff --git a/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java b/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java\nindex d9a3a7b..9c20e8c 100644\n--- a/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java\n+++ b/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java\n@@ -94,7 +94,7 @@\n \n     ImmutableListMultimap.Builder<String, FactoryMethodDescriptor> indexedMethods =\n         ImmutableListMultimap.builder();\n-    ImmutableSet.Builder<ImplemetationMethodDescriptor> implemetationMethodDescriptors =\n+    ImmutableSet.Builder<ImplementationMethodDescriptor> implementationMethodDescriptors =\n         ImmutableSet.builder();\n     for (Element element : roundEnv.getElementsAnnotatedWith(AutoFactory.class)) {\n       Optional<AutoFactoryDeclaration> declaration = declarationFactory.createIfValid(element);\n@@ -106,7 +106,7 @@\n           if (supertypeMethod.getModifiers().contains(Modifier.ABSTRACT)) {\n             ExecutableType methodType = Elements2.getExecutableElementAsMemberOf(\n                 types, supertypeMethod, extendingType);\n-            implemetationMethodDescriptors.add(new ImplemetationMethodDescriptor.Builder()\n+            implementationMethodDescriptors.add(new ImplementationMethodDescriptor.Builder()\n                 .name(supertypeMethod.getSimpleName().toString())\n                 .returnType(getAnnotatedType(element).getQualifiedName().toString())\n                 .publicMethod()\n@@ -122,7 +122,7 @@\n             if (interfaceMethod.getModifiers().contains(Modifier.ABSTRACT)) {\n               ExecutableType methodType = Elements2.getExecutableElementAsMemberOf(\n                   types, interfaceMethod, implementingType);\n-              implemetationMethodDescriptors.add(new ImplemetationMethodDescriptor.Builder()\n+              implementationMethodDescriptors.add(new ImplementationMethodDescriptor.Builder()\n                   .name(interfaceMethod.getSimpleName().toString())\n                   .returnType(getAnnotatedType(element).getQualifiedName().toString())\n                   .publicMethod()\n@@ -165,7 +165,7 @@\n                 publicType,\n                 ImmutableSet.copyOf(entry.getValue()),\n                 // TODO(gak): this needs to be indexed too\n-                implemetationMethodDescriptors.build()));\n+                implementationMethodDescriptors.build()));\n       } catch (IOException e) {\n         messager.printMessage(Kind.ERROR, \"failed\");\n       }\n", "projectName": "google.auto", "bugLineNum": 97, "bugNodeStartChar": 3535, "bugNodeLength": 51, "fixLineNum": 97, "fixNodeStartChar": 3535, "fixNodeLength": 52, "sourceBeforeFix": "ImmutableSet.Builder<ImplemetationMethodDescriptor>", "sourceAfterFix": "ImmutableSet.Builder<ImplementationMethodDescriptor>"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "a421ca3133ddf727a147e87455a5511444d8d4bb", "fixCommitParentSHA1": "7a86ce9f50025df73cb31bc8561430f85b04d713", "bugFilePath": "factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java", "fixPatch": "diff --git a/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java b/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java\nindex d9a3a7b..9c20e8c 100644\n--- a/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java\n+++ b/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java\n@@ -94,7 +94,7 @@\n \n     ImmutableListMultimap.Builder<String, FactoryMethodDescriptor> indexedMethods =\n         ImmutableListMultimap.builder();\n-    ImmutableSet.Builder<ImplemetationMethodDescriptor> implemetationMethodDescriptors =\n+    ImmutableSet.Builder<ImplementationMethodDescriptor> implementationMethodDescriptors =\n         ImmutableSet.builder();\n     for (Element element : roundEnv.getElementsAnnotatedWith(AutoFactory.class)) {\n       Optional<AutoFactoryDeclaration> declaration = declarationFactory.createIfValid(element);\n@@ -106,7 +106,7 @@\n           if (supertypeMethod.getModifiers().contains(Modifier.ABSTRACT)) {\n             ExecutableType methodType = Elements2.getExecutableElementAsMemberOf(\n                 types, supertypeMethod, extendingType);\n-            implemetationMethodDescriptors.add(new ImplemetationMethodDescriptor.Builder()\n+            implementationMethodDescriptors.add(new ImplementationMethodDescriptor.Builder()\n                 .name(supertypeMethod.getSimpleName().toString())\n                 .returnType(getAnnotatedType(element).getQualifiedName().toString())\n                 .publicMethod()\n@@ -122,7 +122,7 @@\n             if (interfaceMethod.getModifiers().contains(Modifier.ABSTRACT)) {\n               ExecutableType methodType = Elements2.getExecutableElementAsMemberOf(\n                   types, interfaceMethod, implementingType);\n-              implemetationMethodDescriptors.add(new ImplemetationMethodDescriptor.Builder()\n+              implementationMethodDescriptors.add(new ImplementationMethodDescriptor.Builder()\n                   .name(interfaceMethod.getSimpleName().toString())\n                   .returnType(getAnnotatedType(element).getQualifiedName().toString())\n                   .publicMethod()\n@@ -165,7 +165,7 @@\n                 publicType,\n                 ImmutableSet.copyOf(entry.getValue()),\n                 // TODO(gak): this needs to be indexed too\n-                implemetationMethodDescriptors.build()));\n+                implementationMethodDescriptors.build()));\n       } catch (IOException e) {\n         messager.printMessage(Kind.ERROR, \"failed\");\n       }\n", "projectName": "google.auto", "bugLineNum": 168, "bugNodeStartChar": 7357, "bugNodeLength": 38, "fixLineNum": 168, "fixNodeStartChar": 7357, "fixNodeLength": 39, "sourceBeforeFix": "implemetationMethodDescriptors.build()", "sourceAfterFix": "implementationMethodDescriptors.build()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "a421ca3133ddf727a147e87455a5511444d8d4bb", "fixCommitParentSHA1": "7a86ce9f50025df73cb31bc8561430f85b04d713", "bugFilePath": "factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java", "fixPatch": "diff --git a/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java b/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java\nindex d9a3a7b..9c20e8c 100644\n--- a/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java\n+++ b/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java\n@@ -94,7 +94,7 @@\n \n     ImmutableListMultimap.Builder<String, FactoryMethodDescriptor> indexedMethods =\n         ImmutableListMultimap.builder();\n-    ImmutableSet.Builder<ImplemetationMethodDescriptor> implemetationMethodDescriptors =\n+    ImmutableSet.Builder<ImplementationMethodDescriptor> implementationMethodDescriptors =\n         ImmutableSet.builder();\n     for (Element element : roundEnv.getElementsAnnotatedWith(AutoFactory.class)) {\n       Optional<AutoFactoryDeclaration> declaration = declarationFactory.createIfValid(element);\n@@ -106,7 +106,7 @@\n           if (supertypeMethod.getModifiers().contains(Modifier.ABSTRACT)) {\n             ExecutableType methodType = Elements2.getExecutableElementAsMemberOf(\n                 types, supertypeMethod, extendingType);\n-            implemetationMethodDescriptors.add(new ImplemetationMethodDescriptor.Builder()\n+            implementationMethodDescriptors.add(new ImplementationMethodDescriptor.Builder()\n                 .name(supertypeMethod.getSimpleName().toString())\n                 .returnType(getAnnotatedType(element).getQualifiedName().toString())\n                 .publicMethod()\n@@ -122,7 +122,7 @@\n             if (interfaceMethod.getModifiers().contains(Modifier.ABSTRACT)) {\n               ExecutableType methodType = Elements2.getExecutableElementAsMemberOf(\n                   types, interfaceMethod, implementingType);\n-              implemetationMethodDescriptors.add(new ImplemetationMethodDescriptor.Builder()\n+              implementationMethodDescriptors.add(new ImplementationMethodDescriptor.Builder()\n                   .name(interfaceMethod.getSimpleName().toString())\n                   .returnType(getAnnotatedType(element).getQualifiedName().toString())\n                   .publicMethod()\n@@ -165,7 +165,7 @@\n                 publicType,\n                 ImmutableSet.copyOf(entry.getValue()),\n                 // TODO(gak): this needs to be indexed too\n-                implemetationMethodDescriptors.build()));\n+                implementationMethodDescriptors.build()));\n       } catch (IOException e) {\n         messager.printMessage(Kind.ERROR, \"failed\");\n       }\n", "projectName": "google.auto", "bugLineNum": 168, "bugNodeStartChar": 7357, "bugNodeLength": 38, "fixLineNum": 168, "fixNodeStartChar": 7357, "fixNodeLength": 39, "sourceBeforeFix": "implemetationMethodDescriptors.build()", "sourceAfterFix": "implementationMethodDescriptors.build()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "a421ca3133ddf727a147e87455a5511444d8d4bb", "fixCommitParentSHA1": "7a86ce9f50025df73cb31bc8561430f85b04d713", "bugFilePath": "factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java", "fixPatch": "diff --git a/factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java b/factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java\nindex c3649f2..230f452 100644\n--- a/factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java\n+++ b/factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java\n@@ -45,12 +45,12 @@\n   private final ImmutableSortedSet<String> implementingTypes;\n   private final boolean publicType;\n   private final ImmutableSet<FactoryMethodDescriptor> methodDescriptors;\n-  private final ImmutableSet<ImplemetationMethodDescriptor> implementationMethodDescriptors;\n+  private final ImmutableSet<ImplementationMethodDescriptor> implementationMethodDescriptors;\n   private final ImmutableMap<Key, String> providerNames;\n \n   FactoryDescriptor(String name, String extendingType, ImmutableSortedSet<String> implementingTypes,\n       boolean publicType, ImmutableSet<FactoryMethodDescriptor> methodDescriptors,\n-      ImmutableSet<ImplemetationMethodDescriptor> implementationMethodDescriptors) {\n+      ImmutableSet<ImplementationMethodDescriptor> implementationMethodDescriptors) {\n     this.name = checkNotNull(name);\n     this.extendingType = checkNotNull(extendingType);\n     this.implementingTypes = checkNotNull(implementingTypes);\n@@ -101,7 +101,7 @@\n     return methodDescriptors;\n   }\n \n-  ImmutableSet<ImplemetationMethodDescriptor> implementationMethodDescriptors() {\n+  ImmutableSet<ImplementationMethodDescriptor> implementationMethodDescriptors() {\n     return implementationMethodDescriptors;\n   }\n \n", "projectName": "google.auto", "bugLineNum": 48, "bugNodeStartChar": 1619, "bugNodeLength": 43, "fixLineNum": 48, "fixNodeStartChar": 1619, "fixNodeLength": 44, "sourceBeforeFix": "ImmutableSet<ImplemetationMethodDescriptor>", "sourceAfterFix": "ImmutableSet<ImplementationMethodDescriptor>"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "a421ca3133ddf727a147e87455a5511444d8d4bb", "fixCommitParentSHA1": "7a86ce9f50025df73cb31bc8561430f85b04d713", "bugFilePath": "factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java", "fixPatch": "diff --git a/factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java b/factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java\nindex c3649f2..230f452 100644\n--- a/factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java\n+++ b/factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java\n@@ -45,12 +45,12 @@\n   private final ImmutableSortedSet<String> implementingTypes;\n   private final boolean publicType;\n   private final ImmutableSet<FactoryMethodDescriptor> methodDescriptors;\n-  private final ImmutableSet<ImplemetationMethodDescriptor> implementationMethodDescriptors;\n+  private final ImmutableSet<ImplementationMethodDescriptor> implementationMethodDescriptors;\n   private final ImmutableMap<Key, String> providerNames;\n \n   FactoryDescriptor(String name, String extendingType, ImmutableSortedSet<String> implementingTypes,\n       boolean publicType, ImmutableSet<FactoryMethodDescriptor> methodDescriptors,\n-      ImmutableSet<ImplemetationMethodDescriptor> implementationMethodDescriptors) {\n+      ImmutableSet<ImplementationMethodDescriptor> implementationMethodDescriptors) {\n     this.name = checkNotNull(name);\n     this.extendingType = checkNotNull(extendingType);\n     this.implementingTypes = checkNotNull(implementingTypes);\n@@ -101,7 +101,7 @@\n     return methodDescriptors;\n   }\n \n-  ImmutableSet<ImplemetationMethodDescriptor> implementationMethodDescriptors() {\n+  ImmutableSet<ImplementationMethodDescriptor> implementationMethodDescriptors() {\n     return implementationMethodDescriptors;\n   }\n \n", "projectName": "google.auto", "bugLineNum": 53, "bugNodeStartChar": 1944, "bugNodeLength": 43, "fixLineNum": 53, "fixNodeStartChar": 1944, "fixNodeLength": 44, "sourceBeforeFix": "ImmutableSet<ImplemetationMethodDescriptor>", "sourceAfterFix": "ImmutableSet<ImplementationMethodDescriptor>"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "a421ca3133ddf727a147e87455a5511444d8d4bb", "fixCommitParentSHA1": "7a86ce9f50025df73cb31bc8561430f85b04d713", "bugFilePath": "factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java", "fixPatch": "diff --git a/factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java b/factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java\nindex c3649f2..230f452 100644\n--- a/factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java\n+++ b/factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java\n@@ -45,12 +45,12 @@\n   private final ImmutableSortedSet<String> implementingTypes;\n   private final boolean publicType;\n   private final ImmutableSet<FactoryMethodDescriptor> methodDescriptors;\n-  private final ImmutableSet<ImplemetationMethodDescriptor> implementationMethodDescriptors;\n+  private final ImmutableSet<ImplementationMethodDescriptor> implementationMethodDescriptors;\n   private final ImmutableMap<Key, String> providerNames;\n \n   FactoryDescriptor(String name, String extendingType, ImmutableSortedSet<String> implementingTypes,\n       boolean publicType, ImmutableSet<FactoryMethodDescriptor> methodDescriptors,\n-      ImmutableSet<ImplemetationMethodDescriptor> implementationMethodDescriptors) {\n+      ImmutableSet<ImplementationMethodDescriptor> implementationMethodDescriptors) {\n     this.name = checkNotNull(name);\n     this.extendingType = checkNotNull(extendingType);\n     this.implementingTypes = checkNotNull(implementingTypes);\n@@ -101,7 +101,7 @@\n     return methodDescriptors;\n   }\n \n-  ImmutableSet<ImplemetationMethodDescriptor> implementationMethodDescriptors() {\n+  ImmutableSet<ImplementationMethodDescriptor> implementationMethodDescriptors() {\n     return implementationMethodDescriptors;\n   }\n \n", "projectName": "google.auto", "bugLineNum": 104, "bugNodeStartChar": 3675, "bugNodeLength": 43, "fixLineNum": 104, "fixNodeStartChar": 3675, "fixNodeLength": 44, "sourceBeforeFix": "ImmutableSet<ImplemetationMethodDescriptor>", "sourceAfterFix": "ImmutableSet<ImplementationMethodDescriptor>"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "a421ca3133ddf727a147e87455a5511444d8d4bb", "fixCommitParentSHA1": "7a86ce9f50025df73cb31bc8561430f85b04d713", "bugFilePath": "factory/src/main/java/com/google/auto/factory/processor/FactoryWriter.java", "fixPatch": "diff --git a/factory/src/main/java/com/google/auto/factory/processor/FactoryWriter.java b/factory/src/main/java/com/google/auto/factory/processor/FactoryWriter.java\nindex 9ef5286..b2014f6 100644\n--- a/factory/src/main/java/com/google/auto/factory/processor/FactoryWriter.java\n+++ b/factory/src/main/java/com/google/auto/factory/processor/FactoryWriter.java\n@@ -131,7 +131,7 @@\n       writer.endMethod();\n     }\n \n-    for (ImplemetationMethodDescriptor methodDescriptor\n+    for (ImplementationMethodDescriptor methodDescriptor\n         : descriptor.implementationMethodDescriptors()) {\n       writer.emitAnnotation(Override.class);\n       writer.beginMethod(methodDescriptor.returnType(), methodDescriptor.name(),\n", "projectName": "google.auto", "bugLineNum": 134, "bugNodeStartChar": 5460, "bugNodeLength": 46, "fixLineNum": 134, "fixNodeStartChar": 5460, "fixNodeLength": 47, "sourceBeforeFix": "ImplemetationMethodDescriptor methodDescriptor", "sourceAfterFix": "ImplementationMethodDescriptor methodDescriptor"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "399623fe9ee40f9e692d8b31e58c59f0641aecdd", "fixCommitParentSHA1": "77280a624e4fbec76acadb0474c044560867d77a", "bugFilePath": "factory/src/test/java/com/google/auto/factory/processor/AutoFactoryProcessorTest.java", "fixPatch": "diff --git a/factory/src/test/java/com/google/auto/factory/processor/AutoFactoryProcessorTest.java b/factory/src/test/java/com/google/auto/factory/processor/AutoFactoryProcessorTest.java\nindex 68167c8..0ccbd43 100644\n--- a/factory/src/test/java/com/google/auto/factory/processor/AutoFactoryProcessorTest.java\n+++ b/factory/src/test/java/com/google/auto/factory/processor/AutoFactoryProcessorTest.java\n@@ -129,7 +129,7 @@\n             .processedWith(new AutoFactoryProcessor())\n             .failsToCompile()\n             .withErrorContaining(\"AutoFactory does not support generic types\")\n-                .in(file).onLine(6).atColumn(14);\n+                .in(file).onLine(21).atColumn(14);\n   }\n \n   @Test public void providedButNoAutoFactory() {\n", "projectName": "google.auto", "bugLineNum": 127, "bugNodeStartChar": 5121, "bugNodeLength": 250, "fixLineNum": 127, "fixNodeStartChar": 5121, "fixNodeLength": 251, "sourceBeforeFix": "ASSERT.about(javaSource()).that(file).processedWith(new AutoFactoryProcessor()).failsToCompile().withErrorContaining(\"AutoFactory does not support generic types\").in(file).onLine(6)", "sourceAfterFix": "ASSERT.about(javaSource()).that(file).processedWith(new AutoFactoryProcessor()).failsToCompile().withErrorContaining(\"AutoFactory does not support generic types\").in(file).onLine(21)"}]