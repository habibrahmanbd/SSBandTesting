[
  {
    "bugType": "CHANGE_UNARY_OPERATOR",
    "fixCommitSHA1": "2a9203f8bfcc8e7425f9fb94ce04b2dd2c4c0577",
    "fixCommitParentSHA1": "6682d768a61f19741f012c93b1e687f8e6031ad5",
    "bugFilePath": "core/src/main/java/dagger/internal/FailoverLoader.java",
    "fixPatch": "diff --git a/core/src/main/java/dagger/internal/FailoverLoader.java b/core/src/main/java/dagger/internal/FailoverLoader.java\nindex 52f923e..4b14af2 100644\n--- a/core/src/main/java/dagger/internal/FailoverLoader.java\n+++ b/core/src/main/java/dagger/internal/FailoverLoader.java\n@@ -51,7 +51,7 @@\n           // A null classloader is the system classloader.\n           classLoader = (classLoader != null) ? classLoader : ClassLoader.getSystemClassLoader();\n           Class<?> type = classLoader.loadClass(className);\n-          if (!type.isInterface()) {\n+          if (type.isInterface()) {\n             return null; // Short-circuit since we can't build reflective bindings for interfaces.\n           }\n           return ReflectiveAtInjectBinding.create(type, mustHaveInjections);\n",
    "projectName": "square.dagger",
    "bugLineNum": 54,
    "bugNodeStartChar": 2173,
    "bugNodeLength": 19,
    "fixLineNum": 54,
    "fixNodeStartChar": 2173,
    "fixNodeLength": 18,
    "sourceBeforeFix": "!type.isInterface()",
    "sourceAfterFix": "type.isInterface()"
  }
]