[{"bugType": "SWAP_ARGUMENTS", "fixCommitSHA1": "3dc8cce254982eab456409ab5e41084ac5351c2c", "fixCommitParentSHA1": "a81c5e2eca15af2e08acf777d7a582c44d7f9b6d", "bugFilePath": "src/test/java/org/junit/tests/experimental/AssumptionTest.java", "fixPatch": "diff --git a/src/test/java/org/junit/tests/experimental/AssumptionTest.java b/src/test/java/org/junit/tests/experimental/AssumptionTest.java\nindex a115df2..4b9f69a 100644\n--- a/src/test/java/org/junit/tests/experimental/AssumptionTest.java\n+++ b/src/test/java/org/junit/tests/experimental/AssumptionTest.java\n@@ -270,7 +270,7 @@\n         final List<Failure> failures =\n                 runAndGetAssumptionFailures(HasFailingAssumptionWithMessage.class);\n \n-        assertEquals(failures.size(), 1);\n+        assertEquals(1, failures.size());\n         assertTrue(failures.get(0).getMessage().contains(message));\n     }\n \n", "projectName": "junit-team.junit", "bugLineNum": 273, "bugNodeStartChar": 7677, "bugNodeLength": 32, "fixLineNum": 273, "fixNodeStartChar": 7677, "fixNodeLength": 32, "sourceBeforeFix": "assertEquals(failures.size(),1)", "sourceAfterFix": "assertEquals(1,failures.size())"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "3a5772dab5ce8f3b2879a19009357d425e84400e", "fixCommitParentSHA1": "ad9972ba5d135d1c5673f0773cb7027f7823feb5", "bugFilePath": "src/main/java/org/junit/rules/Stopwatch.java", "fixPatch": "diff --git a/src/main/java/org/junit/rules/Stopwatch.java b/src/main/java/org/junit/rules/Stopwatch.java\nindex 5d34e7f..6900a48 100644\n--- a/src/main/java/org/junit/rules/Stopwatch.java\n+++ b/src/main/java/org/junit/rules/Stopwatch.java\n@@ -76,7 +76,7 @@\n  * @author tibor17\n  * @since 4.12\n  */\n-public abstract class Stopwatch implements TestRule {\n+public class Stopwatch implements TestRule {\n     private final Clock clock;\n     private volatile long startNanos;\n     private volatile long endNanos;\n", "projectName": "junit-team.junit", "bugLineNum": 9, "bugNodeStartChar": 191, "bugNodeLength": 5076, "fixLineNum": 9, "fixNodeStartChar": 191, "fixNodeLength": 5067, "sourceBeforeFix": "1025", "sourceAfterFix": "1"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "7eef2314cb78d41def996cdd80c5a56c94a993f3", "fixCommitParentSHA1": "fba19ba73a93dcc2d18942b3cf4992ce010afdb2", "bugFilePath": "src/test/java/org/junit/tests/running/methods/TimeoutTest.java", "fixPatch": "diff --git a/src/test/java/org/junit/tests/running/methods/TimeoutTest.java b/src/test/java/org/junit/tests/running/methods/TimeoutTest.java\nindex 15efcd2..2cf7b95 100644\n--- a/src/test/java/org/junit/tests/running/methods/TimeoutTest.java\n+++ b/src/test/java/org/junit/tests/running/methods/TimeoutTest.java\n@@ -172,7 +172,7 @@\n                 if (fStall)\n                     for (; ; ) ;   \n                 try {\n-                    Thread.sleep (50);\n+                    Thread.sleep (500);\n                 } catch (InterruptedException e) {\n                 }\n             }\n", "projectName": "junit-team.junit", "bugLineNum": 175, "bugNodeStartChar": 5912, "bugNodeLength": 17, "fixLineNum": 175, "fixNodeStartChar": 5912, "fixNodeLength": 18, "sourceBeforeFix": "Thread.sleep(50)", "sourceAfterFix": "Thread.sleep(500)"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "74cab2dc9b8c32482d2c86a66a0dd9318930b4bc", "fixCommitParentSHA1": "15c6048229bd16c4bfdd80b23f37357a58226d20", "bugFilePath": "src/main/java/org/junit/experimental/categories/CategoryFilterFactory.java", "fixPatch": "diff --git a/src/main/java/org/junit/experimental/categories/CategoryFilterFactory.java b/src/main/java/org/junit/experimental/categories/CategoryFilterFactory.java\nindex 0f6266b..3df5aca 100644\n--- a/src/main/java/org/junit/experimental/categories/CategoryFilterFactory.java\n+++ b/src/main/java/org/junit/experimental/categories/CategoryFilterFactory.java\n@@ -8,7 +8,10 @@\n import org.junit.runner.FilterFactoryParams;\n import org.junit.runner.manipulation.Filter;\n \n-abstract class CategoryFilterFactory extends FilterFactory {\n+/**\r\n+ * Implementation of FilterFactory for Category filtering.\r\n+ */\r\n+public abstract class CategoryFilterFactory extends FilterFactory {\r\n     @Override\n     public FilterFactoryParams parseArgs(String args) throws FilterNotCreatedException {\n         try {\n", "projectName": "junit-team.junit", "bugLineNum": 11, "bugNodeStartChar": 263, "bugNodeLength": 1356, "fixLineNum": 11, "fixNodeStartChar": 263, "fixNodeLength": 1430, "sourceBeforeFix": "1024", "sourceAfterFix": "1025"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "2918286bf4a010c9ac8eadffb958ff10fb41ad62", "fixCommitParentSHA1": "08719e9b61d07c17b6a4f599ecd2cd1a1519120a", "bugFilePath": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "fixPatch": "diff --git a/src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java b/src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java\nindex b4499e7..09c8fd5 100644\n--- a/src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java\n+++ b/src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java\n@@ -49,7 +49,7 @@\n  * @since 4.5\n  */\n public class BlockJUnit4ClassRunner extends ParentRunner<FrameworkMethod> {\n-    private ConcurrentHashMap<FrameworkMethod, Description> fMethodDescriptions = new ConcurrentHashMap<FrameworkMethod, Description>();\n+    private final ConcurrentHashMap<FrameworkMethod, Description> fMethodDescriptions = new ConcurrentHashMap<FrameworkMethod, Description>();\n     /**\n      * Creates a BlockJUnit4ClassRunner to run {@code klass}\n      *\n@@ -80,7 +80,7 @@\n         if (description == null) {\n             description = Description.createTestDescription(getTestClass().getJavaClass(),\n                     testName(method), method.getAnnotations());\n-            fMethodDescriptions.put(method, description);\n+            fMethodDescriptions.putIfAbsent(method, description);\n         }\n \n         return description;\n", "projectName": "junit-team.junit", "bugLineNum": 52, "bugNodeStartChar": 2074, "bugNodeLength": 132, "fixLineNum": 52, "fixNodeStartChar": 2074, "fixNodeLength": 138, "sourceBeforeFix": "2", "sourceAfterFix": "18"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "2918286bf4a010c9ac8eadffb958ff10fb41ad62", "fixCommitParentSHA1": "08719e9b61d07c17b6a4f599ecd2cd1a1519120a", "bugFilePath": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "fixPatch": "diff --git a/src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java b/src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java\nindex b4499e7..09c8fd5 100644\n--- a/src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java\n+++ b/src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java\n@@ -49,7 +49,7 @@\n  * @since 4.5\n  */\n public class BlockJUnit4ClassRunner extends ParentRunner<FrameworkMethod> {\n-    private ConcurrentHashMap<FrameworkMethod, Description> fMethodDescriptions = new ConcurrentHashMap<FrameworkMethod, Description>();\n+    private final ConcurrentHashMap<FrameworkMethod, Description> fMethodDescriptions = new ConcurrentHashMap<FrameworkMethod, Description>();\n     /**\n      * Creates a BlockJUnit4ClassRunner to run {@code klass}\n      *\n@@ -80,7 +80,7 @@\n         if (description == null) {\n             description = Description.createTestDescription(getTestClass().getJavaClass(),\n                     testName(method), method.getAnnotations());\n-            fMethodDescriptions.put(method, description);\n+            fMethodDescriptions.putIfAbsent(method, description);\n         }\n \n         return description;\n", "projectName": "junit-team.junit", "bugLineNum": 83, "bugNodeStartChar": 3230, "bugNodeLength": 44, "fixLineNum": 83, "fixNodeStartChar": 3230, "fixNodeLength": 52, "sourceBeforeFix": "fMethodDescriptions.put(method,description)", "sourceAfterFix": "fMethodDescriptions.putIfAbsent(method,description)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "2918286bf4a010c9ac8eadffb958ff10fb41ad62", "fixCommitParentSHA1": "08719e9b61d07c17b6a4f599ecd2cd1a1519120a", "bugFilePath": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "fixPatch": "diff --git a/src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java b/src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java\nindex b4499e7..09c8fd5 100644\n--- a/src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java\n+++ b/src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java\n@@ -49,7 +49,7 @@\n  * @since 4.5\n  */\n public class BlockJUnit4ClassRunner extends ParentRunner<FrameworkMethod> {\n-    private ConcurrentHashMap<FrameworkMethod, Description> fMethodDescriptions = new ConcurrentHashMap<FrameworkMethod, Description>();\n+    private final ConcurrentHashMap<FrameworkMethod, Description> fMethodDescriptions = new ConcurrentHashMap<FrameworkMethod, Description>();\n     /**\n      * Creates a BlockJUnit4ClassRunner to run {@code klass}\n      *\n@@ -80,7 +80,7 @@\n         if (description == null) {\n             description = Description.createTestDescription(getTestClass().getJavaClass(),\n                     testName(method), method.getAnnotations());\n-            fMethodDescriptions.put(method, description);\n+            fMethodDescriptions.putIfAbsent(method, description);\n         }\n \n         return description;\n", "projectName": "junit-team.junit", "bugLineNum": 83, "bugNodeStartChar": 3230, "bugNodeLength": 44, "fixLineNum": 83, "fixNodeStartChar": 3230, "fixNodeLength": 52, "sourceBeforeFix": "fMethodDescriptions.put(method,description)", "sourceAfterFix": "fMethodDescriptions.putIfAbsent(method,description)"}, {"bugType": "OVERLOAD_METHOD_DELETED_ARGS", "fixCommitSHA1": "ef8206551c0ec51f70ec25e7371333dc5c8d99b1", "fixCommitParentSHA1": "b943f97e8c2108dafa66ebab73519a6bfb90db8d", "bugFilePath": "src/main/java/junit/framework/TestSuite.java", "fixPatch": "diff --git a/src/main/java/junit/framework/TestSuite.java b/src/main/java/junit/framework/TestSuite.java\nindex e2acc9d..0c629da 100644\n--- a/src/main/java/junit/framework/TestSuite.java\n+++ b/src/main/java/junit/framework/TestSuite.java\n@@ -87,7 +87,7 @@\n         } catch (NoSuchMethodException e) {\n             // fall through\n         }\n-        return theClass.getConstructor(new Class[0]);\n+        return theClass.getConstructor();\n     }\n \n     /**\n", "projectName": "junit-team.junit", "bugLineNum": 90, "bugNodeStartChar": 3131, "bugNodeLength": 37, "fixLineNum": 90, "fixNodeStartChar": 3131, "fixNodeLength": 25, "sourceBeforeFix": "theClass.getConstructor(new Class[0])", "sourceAfterFix": "theClass.getConstructor()"}, {"bugType": "OVERLOAD_METHOD_DELETED_ARGS", "fixCommitSHA1": "ef8206551c0ec51f70ec25e7371333dc5c8d99b1", "fixCommitParentSHA1": "b943f97e8c2108dafa66ebab73519a6bfb90db8d", "bugFilePath": "src/main/java/junit/runner/BaseTestRunner.java", "fixPatch": "diff --git a/src/main/java/junit/runner/BaseTestRunner.java b/src/main/java/junit/runner/BaseTestRunner.java\nindex 48e62a0..ced137e 100644\n--- a/src/main/java/junit/runner/BaseTestRunner.java\n+++ b/src/main/java/junit/runner/BaseTestRunner.java\n@@ -111,7 +111,7 @@\n         }\n         Method suiteMethod = null;\n         try {\n-            suiteMethod = testClass.getMethod(SUITE_METHODNAME, new Class[0]);\n+            suiteMethod = testClass.getMethod(SUITE_METHODNAME);\n         } catch (Exception e) {\n             // try to extract a test suite automatically\n             clearStatus();\n@@ -123,7 +123,7 @@\n         }\n         Test test = null;\n         try {\n-            test = (Test) suiteMethod.invoke(null, (Object[]) new Class[0]); // static method\n+            test = (Test) suiteMethod.invoke(null); // static method\n             if (test == null) {\n                 return test;\n             }\n", "projectName": "junit-team.junit", "bugLineNum": 114, "bugNodeStartChar": 3419, "bugNodeLength": 51, "fixLineNum": 114, "fixNodeStartChar": 3419, "fixNodeLength": 37, "sourceBeforeFix": "testClass.getMethod(SUITE_METHODNAME,new Class[0])", "sourceAfterFix": "testClass.getMethod(SUITE_METHODNAME)"}, {"bugType": "OVERLOAD_METHOD_DELETED_ARGS", "fixCommitSHA1": "ef8206551c0ec51f70ec25e7371333dc5c8d99b1", "fixCommitParentSHA1": "b943f97e8c2108dafa66ebab73519a6bfb90db8d", "bugFilePath": "src/main/java/junit/runner/BaseTestRunner.java", "fixPatch": "diff --git a/src/main/java/junit/runner/BaseTestRunner.java b/src/main/java/junit/runner/BaseTestRunner.java\nindex 48e62a0..ced137e 100644\n--- a/src/main/java/junit/runner/BaseTestRunner.java\n+++ b/src/main/java/junit/runner/BaseTestRunner.java\n@@ -111,7 +111,7 @@\n         }\n         Method suiteMethod = null;\n         try {\n-            suiteMethod = testClass.getMethod(SUITE_METHODNAME, new Class[0]);\n+            suiteMethod = testClass.getMethod(SUITE_METHODNAME);\n         } catch (Exception e) {\n             // try to extract a test suite automatically\n             clearStatus();\n@@ -123,7 +123,7 @@\n         }\n         Test test = null;\n         try {\n-            test = (Test) suiteMethod.invoke(null, (Object[]) new Class[0]); // static method\n+            test = (Test) suiteMethod.invoke(null); // static method\n             if (test == null) {\n                 return test;\n             }\n", "projectName": "junit-team.junit", "bugLineNum": 126, "bugNodeStartChar": 3862, "bugNodeLength": 49, "fixLineNum": 126, "fixNodeStartChar": 3862, "fixNodeLength": 24, "sourceBeforeFix": "suiteMethod.invoke(null,(Object[])new Class[0])", "sourceAfterFix": "suiteMethod.invoke(null)"}, {"bugType": "OVERLOAD_METHOD_DELETED_ARGS", "fixCommitSHA1": "e81be4536f5156b105fff4b7328fc3e4e7a24931", "fixCommitParentSHA1": "b943f97e8c2108dafa66ebab73519a6bfb90db8d", "bugFilePath": "src/main/java/junit/framework/TestSuite.java", "fixPatch": "diff --git a/src/main/java/junit/framework/TestSuite.java b/src/main/java/junit/framework/TestSuite.java\nindex e2acc9d..0c629da 100644\n--- a/src/main/java/junit/framework/TestSuite.java\n+++ b/src/main/java/junit/framework/TestSuite.java\n@@ -87,7 +87,7 @@\n         } catch (NoSuchMethodException e) {\n             // fall through\n         }\n-        return theClass.getConstructor(new Class[0]);\n+        return theClass.getConstructor();\n     }\n \n     /**\n", "projectName": "junit-team.junit", "bugLineNum": 90, "bugNodeStartChar": 3131, "bugNodeLength": 37, "fixLineNum": 90, "fixNodeStartChar": 3131, "fixNodeLength": 25, "sourceBeforeFix": "theClass.getConstructor(new Class[0])", "sourceAfterFix": "theClass.getConstructor()"}, {"bugType": "OVERLOAD_METHOD_DELETED_ARGS", "fixCommitSHA1": "e81be4536f5156b105fff4b7328fc3e4e7a24931", "fixCommitParentSHA1": "b943f97e8c2108dafa66ebab73519a6bfb90db8d", "bugFilePath": "src/main/java/junit/runner/BaseTestRunner.java", "fixPatch": "diff --git a/src/main/java/junit/runner/BaseTestRunner.java b/src/main/java/junit/runner/BaseTestRunner.java\nindex 48e62a0..ced137e 100644\n--- a/src/main/java/junit/runner/BaseTestRunner.java\n+++ b/src/main/java/junit/runner/BaseTestRunner.java\n@@ -111,7 +111,7 @@\n         }\n         Method suiteMethod = null;\n         try {\n-            suiteMethod = testClass.getMethod(SUITE_METHODNAME, new Class[0]);\n+            suiteMethod = testClass.getMethod(SUITE_METHODNAME);\n         } catch (Exception e) {\n             // try to extract a test suite automatically\n             clearStatus();\n@@ -123,7 +123,7 @@\n         }\n         Test test = null;\n         try {\n-            test = (Test) suiteMethod.invoke(null, (Object[]) new Class[0]); // static method\n+            test = (Test) suiteMethod.invoke(null); // static method\n             if (test == null) {\n                 return test;\n             }\n", "projectName": "junit-team.junit", "bugLineNum": 114, "bugNodeStartChar": 3419, "bugNodeLength": 51, "fixLineNum": 114, "fixNodeStartChar": 3419, "fixNodeLength": 37, "sourceBeforeFix": "testClass.getMethod(SUITE_METHODNAME,new Class[0])", "sourceAfterFix": "testClass.getMethod(SUITE_METHODNAME)"}, {"bugType": "OVERLOAD_METHOD_DELETED_ARGS", "fixCommitSHA1": "e81be4536f5156b105fff4b7328fc3e4e7a24931", "fixCommitParentSHA1": "b943f97e8c2108dafa66ebab73519a6bfb90db8d", "bugFilePath": "src/main/java/junit/runner/BaseTestRunner.java", "fixPatch": "diff --git a/src/main/java/junit/runner/BaseTestRunner.java b/src/main/java/junit/runner/BaseTestRunner.java\nindex 48e62a0..ced137e 100644\n--- a/src/main/java/junit/runner/BaseTestRunner.java\n+++ b/src/main/java/junit/runner/BaseTestRunner.java\n@@ -111,7 +111,7 @@\n         }\n         Method suiteMethod = null;\n         try {\n-            suiteMethod = testClass.getMethod(SUITE_METHODNAME, new Class[0]);\n+            suiteMethod = testClass.getMethod(SUITE_METHODNAME);\n         } catch (Exception e) {\n             // try to extract a test suite automatically\n             clearStatus();\n@@ -123,7 +123,7 @@\n         }\n         Test test = null;\n         try {\n-            test = (Test) suiteMethod.invoke(null, (Object[]) new Class[0]); // static method\n+            test = (Test) suiteMethod.invoke(null); // static method\n             if (test == null) {\n                 return test;\n             }\n", "projectName": "junit-team.junit", "bugLineNum": 126, "bugNodeStartChar": 3862, "bugNodeLength": 49, "fixLineNum": 126, "fixNodeStartChar": 3862, "fixNodeLength": 24, "sourceBeforeFix": "suiteMethod.invoke(null,(Object[])new Class[0])", "sourceAfterFix": "suiteMethod.invoke(null)"}, {"bugType": "SWAP_ARGUMENTS", "fixCommitSHA1": "067ed0a9c50964ebaca5b413684cc56339c5c23f", "fixCommitParentSHA1": "1b7312e99b3a273b57752132dadcdb8efdf61b51", "bugFilePath": "src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java", "fixPatch": "diff --git a/src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java b/src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java\nindex 4c5df33..35630e2 100644\n--- a/src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java\n+++ b/src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java\n@@ -105,9 +105,9 @@\n         @Test\n         public void duration() throws InterruptedException {\n             Thread.sleep(300L);\n-            assertEquals(fStopwatch.runtime(MILLISECONDS), 300d, 100d);\n+            assertEquals(300d, fStopwatch.runtime(MILLISECONDS), 100d);\n             Thread.sleep(500L);\n-            assertEquals(fStopwatch.runtime(MILLISECONDS), 800d, 250d);\n+            assertEquals(800d, fStopwatch.runtime(MILLISECONDS), 250d);\n         }\n     }\n \n", "projectName": "junit-team.junit", "bugLineNum": 108, "bugNodeStartChar": 3320, "bugNodeLength": 58, "fixLineNum": 108, "fixNodeStartChar": 3320, "fixNodeLength": 58, "sourceBeforeFix": "assertEquals(fStopwatch.runtime(MILLISECONDS),300d,100d)", "sourceAfterFix": "assertEquals(300d,fStopwatch.runtime(MILLISECONDS),100d)"}, {"bugType": "SWAP_ARGUMENTS", "fixCommitSHA1": "067ed0a9c50964ebaca5b413684cc56339c5c23f", "fixCommitParentSHA1": "1b7312e99b3a273b57752132dadcdb8efdf61b51", "bugFilePath": "src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java", "fixPatch": "diff --git a/src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java b/src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java\nindex 4c5df33..35630e2 100644\n--- a/src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java\n+++ b/src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java\n@@ -105,9 +105,9 @@\n         @Test\n         public void duration() throws InterruptedException {\n             Thread.sleep(300L);\n-            assertEquals(fStopwatch.runtime(MILLISECONDS), 300d, 100d);\n+            assertEquals(300d, fStopwatch.runtime(MILLISECONDS), 100d);\n             Thread.sleep(500L);\n-            assertEquals(fStopwatch.runtime(MILLISECONDS), 800d, 250d);\n+            assertEquals(800d, fStopwatch.runtime(MILLISECONDS), 250d);\n         }\n     }\n \n", "projectName": "junit-team.junit", "bugLineNum": 110, "bugNodeStartChar": 3424, "bugNodeLength": 58, "fixLineNum": 110, "fixNodeStartChar": 3424, "fixNodeLength": 58, "sourceBeforeFix": "assertEquals(fStopwatch.runtime(MILLISECONDS),800d,250d)", "sourceAfterFix": "assertEquals(800d,fStopwatch.runtime(MILLISECONDS),250d)"}, {"bugType": "SWAP_ARGUMENTS", "fixCommitSHA1": "103f204ada7363675fcd4a1e2e0a41030a15a9ae", "fixCommitParentSHA1": "1b7312e99b3a273b57752132dadcdb8efdf61b51", "bugFilePath": "src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java", "fixPatch": "diff --git a/src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java b/src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java\nindex 4c5df33..35630e2 100644\n--- a/src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java\n+++ b/src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java\n@@ -105,9 +105,9 @@\n         @Test\n         public void duration() throws InterruptedException {\n             Thread.sleep(300L);\n-            assertEquals(fStopwatch.runtime(MILLISECONDS), 300d, 100d);\n+            assertEquals(300d, fStopwatch.runtime(MILLISECONDS), 100d);\n             Thread.sleep(500L);\n-            assertEquals(fStopwatch.runtime(MILLISECONDS), 800d, 250d);\n+            assertEquals(800d, fStopwatch.runtime(MILLISECONDS), 250d);\n         }\n     }\n \n", "projectName": "junit-team.junit", "bugLineNum": 108, "bugNodeStartChar": 3320, "bugNodeLength": 58, "fixLineNum": 108, "fixNodeStartChar": 3320, "fixNodeLength": 58, "sourceBeforeFix": "assertEquals(fStopwatch.runtime(MILLISECONDS),300d,100d)", "sourceAfterFix": "assertEquals(300d,fStopwatch.runtime(MILLISECONDS),100d)"}, {"bugType": "SWAP_ARGUMENTS", "fixCommitSHA1": "103f204ada7363675fcd4a1e2e0a41030a15a9ae", "fixCommitParentSHA1": "1b7312e99b3a273b57752132dadcdb8efdf61b51", "bugFilePath": "src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java", "fixPatch": "diff --git a/src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java b/src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java\nindex 4c5df33..35630e2 100644\n--- a/src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java\n+++ b/src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java\n@@ -105,9 +105,9 @@\n         @Test\n         public void duration() throws InterruptedException {\n             Thread.sleep(300L);\n-            assertEquals(fStopwatch.runtime(MILLISECONDS), 300d, 100d);\n+            assertEquals(300d, fStopwatch.runtime(MILLISECONDS), 100d);\n             Thread.sleep(500L);\n-            assertEquals(fStopwatch.runtime(MILLISECONDS), 800d, 250d);\n+            assertEquals(800d, fStopwatch.runtime(MILLISECONDS), 250d);\n         }\n     }\n \n", "projectName": "junit-team.junit", "bugLineNum": 110, "bugNodeStartChar": 3424, "bugNodeLength": 58, "fixLineNum": 110, "fixNodeStartChar": 3424, "fixNodeLength": 58, "sourceBeforeFix": "assertEquals(fStopwatch.runtime(MILLISECONDS),800d,250d)", "sourceAfterFix": "assertEquals(800d,fStopwatch.runtime(MILLISECONDS),250d)"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "cac8c34ac61668aa269366408e613ac0ed5db729", "fixCommitParentSHA1": "28938e9c677dd4cf343ec4fcca9a668b5e930324", "bugFilePath": "src/test/java/org/junit/internal/MethodSorterTest.java", "fixPatch": "diff --git a/src/test/java/org/junit/internal/MethodSorterTest.java b/src/test/java/org/junit/internal/MethodSorterTest.java\nindex ad4996b..56d83fb 100644\n--- a/src/test/java/org/junit/internal/MethodSorterTest.java\n+++ b/src/test/java/org/junit/internal/MethodSorterTest.java\n@@ -17,7 +17,7 @@\n     private static final String DELTA= \"void delta()\";\n     private static final String EPSILON= \"void epsilon()\";\n     \n-    private static class Dummy {\n+    static class Dummy {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -25,10 +25,10 @@\n         void delta() {}\n         void epsilon() {}\n     }\n-    private static class Super {\n+    static class Super {\n         void testOne() {}\n     }\n-    private static class Sub extends Super {\n+    static class Sub extends Super {\n         void testTwo() {}\n     }\n     \n@@ -48,7 +48,7 @@\n     }\n     \n     @FixMethodOrder(MethodSorters.DEFAULT)\n-    private static class DummySortWithDefault {\n+    static class DummySortWithDefault {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -63,7 +63,7 @@\n     }\n     \n     @FixMethodOrder(MethodSorters.JVM)\n-    private static class DummySortJvm {\n+    static class DummySortJvm {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -80,7 +80,7 @@\n     }\n \n     @FixMethodOrder(MethodSorters.NAME_ASCENDING)\n-    private static class DummySortWithNameAsc {\n+    static class DummySortWithNameAsc {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n", "projectName": "junit-team.junit", "bugLineNum": 20, "bugNodeStartChar": 658, "bugNodeLength": 244, "fixLineNum": 20, "fixNodeStartChar": 658, "fixNodeLength": 236, "sourceBeforeFix": "10", "sourceAfterFix": "8"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "cac8c34ac61668aa269366408e613ac0ed5db729", "fixCommitParentSHA1": "28938e9c677dd4cf343ec4fcca9a668b5e930324", "bugFilePath": "src/test/java/org/junit/internal/MethodSorterTest.java", "fixPatch": "diff --git a/src/test/java/org/junit/internal/MethodSorterTest.java b/src/test/java/org/junit/internal/MethodSorterTest.java\nindex ad4996b..56d83fb 100644\n--- a/src/test/java/org/junit/internal/MethodSorterTest.java\n+++ b/src/test/java/org/junit/internal/MethodSorterTest.java\n@@ -17,7 +17,7 @@\n     private static final String DELTA= \"void delta()\";\n     private static final String EPSILON= \"void epsilon()\";\n     \n-    private static class Dummy {\n+    static class Dummy {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -25,10 +25,10 @@\n         void delta() {}\n         void epsilon() {}\n     }\n-    private static class Super {\n+    static class Super {\n         void testOne() {}\n     }\n-    private static class Sub extends Super {\n+    static class Sub extends Super {\n         void testTwo() {}\n     }\n     \n@@ -48,7 +48,7 @@\n     }\n     \n     @FixMethodOrder(MethodSorters.DEFAULT)\n-    private static class DummySortWithDefault {\n+    static class DummySortWithDefault {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -63,7 +63,7 @@\n     }\n     \n     @FixMethodOrder(MethodSorters.JVM)\n-    private static class DummySortJvm {\n+    static class DummySortJvm {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -80,7 +80,7 @@\n     }\n \n     @FixMethodOrder(MethodSorters.NAME_ASCENDING)\n-    private static class DummySortWithNameAsc {\n+    static class DummySortWithNameAsc {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n", "projectName": "junit-team.junit", "bugLineNum": 28, "bugNodeStartChar": 907, "bugNodeLength": 60, "fixLineNum": 28, "fixNodeStartChar": 907, "fixNodeLength": 52, "sourceBeforeFix": "10", "sourceAfterFix": "8"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "cac8c34ac61668aa269366408e613ac0ed5db729", "fixCommitParentSHA1": "28938e9c677dd4cf343ec4fcca9a668b5e930324", "bugFilePath": "src/test/java/org/junit/internal/MethodSorterTest.java", "fixPatch": "diff --git a/src/test/java/org/junit/internal/MethodSorterTest.java b/src/test/java/org/junit/internal/MethodSorterTest.java\nindex ad4996b..56d83fb 100644\n--- a/src/test/java/org/junit/internal/MethodSorterTest.java\n+++ b/src/test/java/org/junit/internal/MethodSorterTest.java\n@@ -17,7 +17,7 @@\n     private static final String DELTA= \"void delta()\";\n     private static final String EPSILON= \"void epsilon()\";\n     \n-    private static class Dummy {\n+    static class Dummy {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -25,10 +25,10 @@\n         void delta() {}\n         void epsilon() {}\n     }\n-    private static class Super {\n+    static class Super {\n         void testOne() {}\n     }\n-    private static class Sub extends Super {\n+    static class Sub extends Super {\n         void testTwo() {}\n     }\n     \n@@ -48,7 +48,7 @@\n     }\n     \n     @FixMethodOrder(MethodSorters.DEFAULT)\n-    private static class DummySortWithDefault {\n+    static class DummySortWithDefault {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -63,7 +63,7 @@\n     }\n     \n     @FixMethodOrder(MethodSorters.JVM)\n-    private static class DummySortJvm {\n+    static class DummySortJvm {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -80,7 +80,7 @@\n     }\n \n     @FixMethodOrder(MethodSorters.NAME_ASCENDING)\n-    private static class DummySortWithNameAsc {\n+    static class DummySortWithNameAsc {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n", "projectName": "junit-team.junit", "bugLineNum": 31, "bugNodeStartChar": 972, "bugNodeLength": 72, "fixLineNum": 31, "fixNodeStartChar": 972, "fixNodeLength": 64, "sourceBeforeFix": "10", "sourceAfterFix": "8"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "cac8c34ac61668aa269366408e613ac0ed5db729", "fixCommitParentSHA1": "28938e9c677dd4cf343ec4fcca9a668b5e930324", "bugFilePath": "src/test/java/org/junit/internal/MethodSorterTest.java", "fixPatch": "diff --git a/src/test/java/org/junit/internal/MethodSorterTest.java b/src/test/java/org/junit/internal/MethodSorterTest.java\nindex ad4996b..56d83fb 100644\n--- a/src/test/java/org/junit/internal/MethodSorterTest.java\n+++ b/src/test/java/org/junit/internal/MethodSorterTest.java\n@@ -17,7 +17,7 @@\n     private static final String DELTA= \"void delta()\";\n     private static final String EPSILON= \"void epsilon()\";\n     \n-    private static class Dummy {\n+    static class Dummy {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -25,10 +25,10 @@\n         void delta() {}\n         void epsilon() {}\n     }\n-    private static class Super {\n+    static class Super {\n         void testOne() {}\n     }\n-    private static class Sub extends Super {\n+    static class Sub extends Super {\n         void testTwo() {}\n     }\n     \n@@ -48,7 +48,7 @@\n     }\n     \n     @FixMethodOrder(MethodSorters.DEFAULT)\n-    private static class DummySortWithDefault {\n+    static class DummySortWithDefault {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -63,7 +63,7 @@\n     }\n     \n     @FixMethodOrder(MethodSorters.JVM)\n-    private static class DummySortJvm {\n+    static class DummySortJvm {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -80,7 +80,7 @@\n     }\n \n     @FixMethodOrder(MethodSorters.NAME_ASCENDING)\n-    private static class DummySortWithNameAsc {\n+    static class DummySortWithNameAsc {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n", "projectName": "junit-team.junit", "bugLineNum": 50, "bugNodeStartChar": 1742, "bugNodeLength": 302, "fixLineNum": 50, "fixNodeStartChar": 1742, "fixNodeLength": 294, "sourceBeforeFix": "10", "sourceAfterFix": "8"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "cac8c34ac61668aa269366408e613ac0ed5db729", "fixCommitParentSHA1": "28938e9c677dd4cf343ec4fcca9a668b5e930324", "bugFilePath": "src/test/java/org/junit/internal/MethodSorterTest.java", "fixPatch": "diff --git a/src/test/java/org/junit/internal/MethodSorterTest.java b/src/test/java/org/junit/internal/MethodSorterTest.java\nindex ad4996b..56d83fb 100644\n--- a/src/test/java/org/junit/internal/MethodSorterTest.java\n+++ b/src/test/java/org/junit/internal/MethodSorterTest.java\n@@ -17,7 +17,7 @@\n     private static final String DELTA= \"void delta()\";\n     private static final String EPSILON= \"void epsilon()\";\n     \n-    private static class Dummy {\n+    static class Dummy {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -25,10 +25,10 @@\n         void delta() {}\n         void epsilon() {}\n     }\n-    private static class Super {\n+    static class Super {\n         void testOne() {}\n     }\n-    private static class Sub extends Super {\n+    static class Sub extends Super {\n         void testTwo() {}\n     }\n     \n@@ -48,7 +48,7 @@\n     }\n     \n     @FixMethodOrder(MethodSorters.DEFAULT)\n-    private static class DummySortWithDefault {\n+    static class DummySortWithDefault {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -63,7 +63,7 @@\n     }\n     \n     @FixMethodOrder(MethodSorters.JVM)\n-    private static class DummySortJvm {\n+    static class DummySortJvm {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -80,7 +80,7 @@\n     }\n \n     @FixMethodOrder(MethodSorters.NAME_ASCENDING)\n-    private static class DummySortWithNameAsc {\n+    static class DummySortWithNameAsc {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n", "projectName": "junit-team.junit", "bugLineNum": 65, "bugNodeStartChar": 2308, "bugNodeLength": 290, "fixLineNum": 65, "fixNodeStartChar": 2308, "fixNodeLength": 282, "sourceBeforeFix": "10", "sourceAfterFix": "8"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "cac8c34ac61668aa269366408e613ac0ed5db729", "fixCommitParentSHA1": "28938e9c677dd4cf343ec4fcca9a668b5e930324", "bugFilePath": "src/test/java/org/junit/internal/MethodSorterTest.java", "fixPatch": "diff --git a/src/test/java/org/junit/internal/MethodSorterTest.java b/src/test/java/org/junit/internal/MethodSorterTest.java\nindex ad4996b..56d83fb 100644\n--- a/src/test/java/org/junit/internal/MethodSorterTest.java\n+++ b/src/test/java/org/junit/internal/MethodSorterTest.java\n@@ -17,7 +17,7 @@\n     private static final String DELTA= \"void delta()\";\n     private static final String EPSILON= \"void epsilon()\";\n     \n-    private static class Dummy {\n+    static class Dummy {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -25,10 +25,10 @@\n         void delta() {}\n         void epsilon() {}\n     }\n-    private static class Super {\n+    static class Super {\n         void testOne() {}\n     }\n-    private static class Sub extends Super {\n+    static class Sub extends Super {\n         void testTwo() {}\n     }\n     \n@@ -48,7 +48,7 @@\n     }\n     \n     @FixMethodOrder(MethodSorters.DEFAULT)\n-    private static class DummySortWithDefault {\n+    static class DummySortWithDefault {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -63,7 +63,7 @@\n     }\n     \n     @FixMethodOrder(MethodSorters.JVM)\n-    private static class DummySortJvm {\n+    static class DummySortJvm {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -80,7 +80,7 @@\n     }\n \n     @FixMethodOrder(MethodSorters.NAME_ASCENDING)\n-    private static class DummySortWithNameAsc {\n+    static class DummySortWithNameAsc {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n", "projectName": "junit-team.junit", "bugLineNum": 82, "bugNodeStartChar": 2820, "bugNodeLength": 309, "fixLineNum": 82, "fixNodeStartChar": 2820, "fixNodeLength": 301, "sourceBeforeFix": "10", "sourceAfterFix": "8"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "014f2410e81ed3ecc6b82fbac49ab345aab6e90f", "fixCommitParentSHA1": "28938e9c677dd4cf343ec4fcca9a668b5e930324", "bugFilePath": "src/test/java/org/junit/internal/MethodSorterTest.java", "fixPatch": "diff --git a/src/test/java/org/junit/internal/MethodSorterTest.java b/src/test/java/org/junit/internal/MethodSorterTest.java\nindex ad4996b..56d83fb 100644\n--- a/src/test/java/org/junit/internal/MethodSorterTest.java\n+++ b/src/test/java/org/junit/internal/MethodSorterTest.java\n@@ -17,7 +17,7 @@\n     private static final String DELTA= \"void delta()\";\n     private static final String EPSILON= \"void epsilon()\";\n     \n-    private static class Dummy {\n+    static class Dummy {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -25,10 +25,10 @@\n         void delta() {}\n         void epsilon() {}\n     }\n-    private static class Super {\n+    static class Super {\n         void testOne() {}\n     }\n-    private static class Sub extends Super {\n+    static class Sub extends Super {\n         void testTwo() {}\n     }\n     \n@@ -48,7 +48,7 @@\n     }\n     \n     @FixMethodOrder(MethodSorters.DEFAULT)\n-    private static class DummySortWithDefault {\n+    static class DummySortWithDefault {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -63,7 +63,7 @@\n     }\n     \n     @FixMethodOrder(MethodSorters.JVM)\n-    private static class DummySortJvm {\n+    static class DummySortJvm {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -80,7 +80,7 @@\n     }\n \n     @FixMethodOrder(MethodSorters.NAME_ASCENDING)\n-    private static class DummySortWithNameAsc {\n+    static class DummySortWithNameAsc {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n", "projectName": "junit-team.junit", "bugLineNum": 20, "bugNodeStartChar": 658, "bugNodeLength": 244, "fixLineNum": 20, "fixNodeStartChar": 658, "fixNodeLength": 236, "sourceBeforeFix": "10", "sourceAfterFix": "8"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "014f2410e81ed3ecc6b82fbac49ab345aab6e90f", "fixCommitParentSHA1": "28938e9c677dd4cf343ec4fcca9a668b5e930324", "bugFilePath": "src/test/java/org/junit/internal/MethodSorterTest.java", "fixPatch": "diff --git a/src/test/java/org/junit/internal/MethodSorterTest.java b/src/test/java/org/junit/internal/MethodSorterTest.java\nindex ad4996b..56d83fb 100644\n--- a/src/test/java/org/junit/internal/MethodSorterTest.java\n+++ b/src/test/java/org/junit/internal/MethodSorterTest.java\n@@ -17,7 +17,7 @@\n     private static final String DELTA= \"void delta()\";\n     private static final String EPSILON= \"void epsilon()\";\n     \n-    private static class Dummy {\n+    static class Dummy {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -25,10 +25,10 @@\n         void delta() {}\n         void epsilon() {}\n     }\n-    private static class Super {\n+    static class Super {\n         void testOne() {}\n     }\n-    private static class Sub extends Super {\n+    static class Sub extends Super {\n         void testTwo() {}\n     }\n     \n@@ -48,7 +48,7 @@\n     }\n     \n     @FixMethodOrder(MethodSorters.DEFAULT)\n-    private static class DummySortWithDefault {\n+    static class DummySortWithDefault {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -63,7 +63,7 @@\n     }\n     \n     @FixMethodOrder(MethodSorters.JVM)\n-    private static class DummySortJvm {\n+    static class DummySortJvm {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -80,7 +80,7 @@\n     }\n \n     @FixMethodOrder(MethodSorters.NAME_ASCENDING)\n-    private static class DummySortWithNameAsc {\n+    static class DummySortWithNameAsc {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n", "projectName": "junit-team.junit", "bugLineNum": 28, "bugNodeStartChar": 907, "bugNodeLength": 60, "fixLineNum": 28, "fixNodeStartChar": 907, "fixNodeLength": 52, "sourceBeforeFix": "10", "sourceAfterFix": "8"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "014f2410e81ed3ecc6b82fbac49ab345aab6e90f", "fixCommitParentSHA1": "28938e9c677dd4cf343ec4fcca9a668b5e930324", "bugFilePath": "src/test/java/org/junit/internal/MethodSorterTest.java", "fixPatch": "diff --git a/src/test/java/org/junit/internal/MethodSorterTest.java b/src/test/java/org/junit/internal/MethodSorterTest.java\nindex ad4996b..56d83fb 100644\n--- a/src/test/java/org/junit/internal/MethodSorterTest.java\n+++ b/src/test/java/org/junit/internal/MethodSorterTest.java\n@@ -17,7 +17,7 @@\n     private static final String DELTA= \"void delta()\";\n     private static final String EPSILON= \"void epsilon()\";\n     \n-    private static class Dummy {\n+    static class Dummy {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -25,10 +25,10 @@\n         void delta() {}\n         void epsilon() {}\n     }\n-    private static class Super {\n+    static class Super {\n         void testOne() {}\n     }\n-    private static class Sub extends Super {\n+    static class Sub extends Super {\n         void testTwo() {}\n     }\n     \n@@ -48,7 +48,7 @@\n     }\n     \n     @FixMethodOrder(MethodSorters.DEFAULT)\n-    private static class DummySortWithDefault {\n+    static class DummySortWithDefault {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -63,7 +63,7 @@\n     }\n     \n     @FixMethodOrder(MethodSorters.JVM)\n-    private static class DummySortJvm {\n+    static class DummySortJvm {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -80,7 +80,7 @@\n     }\n \n     @FixMethodOrder(MethodSorters.NAME_ASCENDING)\n-    private static class DummySortWithNameAsc {\n+    static class DummySortWithNameAsc {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n", "projectName": "junit-team.junit", "bugLineNum": 31, "bugNodeStartChar": 972, "bugNodeLength": 72, "fixLineNum": 31, "fixNodeStartChar": 972, "fixNodeLength": 64, "sourceBeforeFix": "10", "sourceAfterFix": "8"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "014f2410e81ed3ecc6b82fbac49ab345aab6e90f", "fixCommitParentSHA1": "28938e9c677dd4cf343ec4fcca9a668b5e930324", "bugFilePath": "src/test/java/org/junit/internal/MethodSorterTest.java", "fixPatch": "diff --git a/src/test/java/org/junit/internal/MethodSorterTest.java b/src/test/java/org/junit/internal/MethodSorterTest.java\nindex ad4996b..56d83fb 100644\n--- a/src/test/java/org/junit/internal/MethodSorterTest.java\n+++ b/src/test/java/org/junit/internal/MethodSorterTest.java\n@@ -17,7 +17,7 @@\n     private static final String DELTA= \"void delta()\";\n     private static final String EPSILON= \"void epsilon()\";\n     \n-    private static class Dummy {\n+    static class Dummy {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -25,10 +25,10 @@\n         void delta() {}\n         void epsilon() {}\n     }\n-    private static class Super {\n+    static class Super {\n         void testOne() {}\n     }\n-    private static class Sub extends Super {\n+    static class Sub extends Super {\n         void testTwo() {}\n     }\n     \n@@ -48,7 +48,7 @@\n     }\n     \n     @FixMethodOrder(MethodSorters.DEFAULT)\n-    private static class DummySortWithDefault {\n+    static class DummySortWithDefault {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -63,7 +63,7 @@\n     }\n     \n     @FixMethodOrder(MethodSorters.JVM)\n-    private static class DummySortJvm {\n+    static class DummySortJvm {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -80,7 +80,7 @@\n     }\n \n     @FixMethodOrder(MethodSorters.NAME_ASCENDING)\n-    private static class DummySortWithNameAsc {\n+    static class DummySortWithNameAsc {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n", "projectName": "junit-team.junit", "bugLineNum": 50, "bugNodeStartChar": 1742, "bugNodeLength": 302, "fixLineNum": 50, "fixNodeStartChar": 1742, "fixNodeLength": 294, "sourceBeforeFix": "10", "sourceAfterFix": "8"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "014f2410e81ed3ecc6b82fbac49ab345aab6e90f", "fixCommitParentSHA1": "28938e9c677dd4cf343ec4fcca9a668b5e930324", "bugFilePath": "src/test/java/org/junit/internal/MethodSorterTest.java", "fixPatch": "diff --git a/src/test/java/org/junit/internal/MethodSorterTest.java b/src/test/java/org/junit/internal/MethodSorterTest.java\nindex ad4996b..56d83fb 100644\n--- a/src/test/java/org/junit/internal/MethodSorterTest.java\n+++ b/src/test/java/org/junit/internal/MethodSorterTest.java\n@@ -17,7 +17,7 @@\n     private static final String DELTA= \"void delta()\";\n     private static final String EPSILON= \"void epsilon()\";\n     \n-    private static class Dummy {\n+    static class Dummy {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -25,10 +25,10 @@\n         void delta() {}\n         void epsilon() {}\n     }\n-    private static class Super {\n+    static class Super {\n         void testOne() {}\n     }\n-    private static class Sub extends Super {\n+    static class Sub extends Super {\n         void testTwo() {}\n     }\n     \n@@ -48,7 +48,7 @@\n     }\n     \n     @FixMethodOrder(MethodSorters.DEFAULT)\n-    private static class DummySortWithDefault {\n+    static class DummySortWithDefault {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -63,7 +63,7 @@\n     }\n     \n     @FixMethodOrder(MethodSorters.JVM)\n-    private static class DummySortJvm {\n+    static class DummySortJvm {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -80,7 +80,7 @@\n     }\n \n     @FixMethodOrder(MethodSorters.NAME_ASCENDING)\n-    private static class DummySortWithNameAsc {\n+    static class DummySortWithNameAsc {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n", "projectName": "junit-team.junit", "bugLineNum": 65, "bugNodeStartChar": 2308, "bugNodeLength": 290, "fixLineNum": 65, "fixNodeStartChar": 2308, "fixNodeLength": 282, "sourceBeforeFix": "10", "sourceAfterFix": "8"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "014f2410e81ed3ecc6b82fbac49ab345aab6e90f", "fixCommitParentSHA1": "28938e9c677dd4cf343ec4fcca9a668b5e930324", "bugFilePath": "src/test/java/org/junit/internal/MethodSorterTest.java", "fixPatch": "diff --git a/src/test/java/org/junit/internal/MethodSorterTest.java b/src/test/java/org/junit/internal/MethodSorterTest.java\nindex ad4996b..56d83fb 100644\n--- a/src/test/java/org/junit/internal/MethodSorterTest.java\n+++ b/src/test/java/org/junit/internal/MethodSorterTest.java\n@@ -17,7 +17,7 @@\n     private static final String DELTA= \"void delta()\";\n     private static final String EPSILON= \"void epsilon()\";\n     \n-    private static class Dummy {\n+    static class Dummy {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -25,10 +25,10 @@\n         void delta() {}\n         void epsilon() {}\n     }\n-    private static class Super {\n+    static class Super {\n         void testOne() {}\n     }\n-    private static class Sub extends Super {\n+    static class Sub extends Super {\n         void testTwo() {}\n     }\n     \n@@ -48,7 +48,7 @@\n     }\n     \n     @FixMethodOrder(MethodSorters.DEFAULT)\n-    private static class DummySortWithDefault {\n+    static class DummySortWithDefault {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -63,7 +63,7 @@\n     }\n     \n     @FixMethodOrder(MethodSorters.JVM)\n-    private static class DummySortJvm {\n+    static class DummySortJvm {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n@@ -80,7 +80,7 @@\n     }\n \n     @FixMethodOrder(MethodSorters.NAME_ASCENDING)\n-    private static class DummySortWithNameAsc {\n+    static class DummySortWithNameAsc {\n         Object alpha(int i, double d, Thread t) {return null;}\n         void beta(int[][] x) {}\n         int gamma() {return 0;}\n", "projectName": "junit-team.junit", "bugLineNum": 82, "bugNodeStartChar": 2820, "bugNodeLength": 309, "fixLineNum": 82, "fixNodeStartChar": 2820, "fixNodeLength": 301, "sourceBeforeFix": "10", "sourceAfterFix": "8"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "1081d8964ee521042a0bf4db9f33be33b3f99991", "fixCommitParentSHA1": "99c4e59a2c01c215c9c1fe26a5b1a80f429d8ba1", "bugFilePath": "src/main/java/org/junit/rules/Verifier.java", "fixPatch": "diff --git a/src/main/java/org/junit/rules/Verifier.java b/src/main/java/org/junit/rules/Verifier.java\nindex 8bc5032..25b3ccd 100644\n--- a/src/main/java/org/junit/rules/Verifier.java\n+++ b/src/main/java/org/junit/rules/Verifier.java\n@@ -25,7 +25,7 @@\n  *     }\n  * </pre>\n  */\n-public class Verifier implements TestRule {\n+public abstract class Verifier implements TestRule {\n \tpublic Statement apply(final Statement base, Description description) {\n \t\treturn new Statement() {\n \t\t\t@Override\n", "projectName": "junit-team.junit", "bugLineNum": 6, "bugNodeStartChar": 106, "bugNodeLength": 1054, "fixLineNum": 6, "fixNodeStartChar": 106, "fixNodeLength": 1063, "sourceBeforeFix": "1", "sourceAfterFix": "1025"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "80d4bc3616b1024b627a968b18d03b86516de69b", "fixCommitParentSHA1": "99c4e59a2c01c215c9c1fe26a5b1a80f429d8ba1", "bugFilePath": "src/main/java/org/junit/rules/Verifier.java", "fixPatch": "diff --git a/src/main/java/org/junit/rules/Verifier.java b/src/main/java/org/junit/rules/Verifier.java\nindex 8bc5032..25b3ccd 100644\n--- a/src/main/java/org/junit/rules/Verifier.java\n+++ b/src/main/java/org/junit/rules/Verifier.java\n@@ -25,7 +25,7 @@\n  *     }\n  * </pre>\n  */\n-public class Verifier implements TestRule {\n+public abstract class Verifier implements TestRule {\n \tpublic Statement apply(final Statement base, Description description) {\n \t\treturn new Statement() {\n \t\t\t@Override\n", "projectName": "junit-team.junit", "bugLineNum": 6, "bugNodeStartChar": 106, "bugNodeLength": 1054, "fixLineNum": 6, "fixNodeStartChar": 106, "fixNodeLength": 1063, "sourceBeforeFix": "1", "sourceAfterFix": "1025"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "b1068dc55c95d1000e07b71d3a9d9a2fd26bfff9", "fixCommitParentSHA1": "1cec456a2c5638818959856eb3cef98743cbe08b", "bugFilePath": "src/main/java/org/junit/runner/Description.java", "fixPatch": "diff --git a/src/main/java/org/junit/runner/Description.java b/src/main/java/org/junit/runner/Description.java\nindex 191dfc1..7cbd254 100644\n--- a/src/main/java/org/junit/runner/Description.java\n+++ b/src/main/java/org/junit/runner/Description.java\n@@ -207,7 +207,7 @@\n \t\tif (name == null)\n \t\t\treturn null;\n \t\ttry {\n-\t\t\treturn Class.forName(name);\n+\t\t\treturn Class.forName(name, false, getClass().getClassLoader());\n \t\t} catch (ClassNotFoundException e) {\n \t\t\treturn null;\n \t\t}\n", "projectName": "junit-team.junit", "bugLineNum": 210, "bugNodeStartChar": 6740, "bugNodeLength": 19, "fixLineNum": 210, "fixNodeStartChar": 6740, "fixNodeLength": 55, "sourceBeforeFix": "Class.forName(name)", "sourceAfterFix": "Class.forName(name,false,getClass().getClassLoader())"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "eb307fa6f37ac8ec695b2f556e543969503418f5", "fixCommitParentSHA1": "45a44647e7306262162e1346b750c3209019f2e1", "bugFilePath": "src/main/java/org/junit/runner/Description.java", "fixPatch": "diff --git a/src/main/java/org/junit/runner/Description.java b/src/main/java/org/junit/runner/Description.java\nindex b3083d5..b90df7f 100644\n--- a/src/main/java/org/junit/runner/Description.java\n+++ b/src/main/java/org/junit/runner/Description.java\n@@ -204,7 +204,7 @@\n \t\tif (name == null)\n \t\t\treturn null;\n \t\ttry {\n-\t\t\treturn Class.forName(name);\n+\t\t\treturn Class.forName(name, false, getClass().getClassLoader());\n \t\t} catch (ClassNotFoundException e) {\n \t\t\treturn null;\n \t\t}\n", "projectName": "junit-team.junit", "bugLineNum": 207, "bugNodeStartChar": 6602, "bugNodeLength": 19, "fixLineNum": 207, "fixNodeStartChar": 6602, "fixNodeLength": 55, "sourceBeforeFix": "Class.forName(name)", "sourceAfterFix": "Class.forName(name,false,getClass().getClassLoader())"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "e857122bff2a9774c4f44df4a7d531b902e406df", "fixCommitParentSHA1": "0128bff582b2d10bffff9ff497c3e6f697958b83", "bugFilePath": "src/main/java/org/junit/rules/TestWatcher.java", "fixPatch": "diff --git a/src/main/java/org/junit/rules/TestWatcher.java b/src/main/java/org/junit/rules/TestWatcher.java\nindex 1435c83..35811bc 100644\n--- a/src/main/java/org/junit/rules/TestWatcher.java\n+++ b/src/main/java/org/junit/rules/TestWatcher.java\n@@ -36,7 +36,7 @@\n  * }\n  * </pre>\n  */\n-public class TestWatcher extends TestRule {\n+public abstract class TestWatcher extends TestRule {\n \t@Override\n \tprotected Statement apply(final Statement base, final Description description) {\n \t\treturn new Statement() {\n", "projectName": "junit-team.junit", "bugLineNum": 6, "bugNodeStartChar": 106, "bugNodeLength": 1748, "fixLineNum": 6, "fixNodeStartChar": 106, "fixNodeLength": 1757, "sourceBeforeFix": "1", "sourceAfterFix": "1025"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "3b75d00dafe4851195ddcd2f8810a18a55e43514", "fixCommitParentSHA1": "521fdb5aae536bd5055f6d0e4f09c5a7bdb5799f", "bugFilePath": "src/org/junit/internal/runners/TestClass.java", "fixPatch": "diff --git a/src/org/junit/internal/runners/TestClass.java b/src/org/junit/internal/runners/TestClass.java\nindex 1cf2f92..a6e9617 100644\n--- a/src/org/junit/internal/runners/TestClass.java\n+++ b/src/org/junit/internal/runners/TestClass.java\n@@ -23,11 +23,11 @@\n \t\treturn getAnnotatedMethods(Test.class);\n \t}\n \n-\tpublic List<Method> getBefores() {\n+\tList<Method> getBefores() {\n \t\treturn getAnnotatedMethods(BeforeClass.class);\n \t}\n \n-\tpublic List<Method> getAfters() {\n+\tList<Method> getAfters() {\n \t\treturn getAnnotatedMethods(AfterClass.class);\n \t}\n \t\n", "projectName": "junit-team.junit", "bugLineNum": 26, "bugNodeStartChar": 534, "bugNodeLength": 86, "fixLineNum": 26, "fixNodeStartChar": 534, "fixNodeLength": 79, "sourceBeforeFix": "1", "sourceAfterFix": "0"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "3b75d00dafe4851195ddcd2f8810a18a55e43514", "fixCommitParentSHA1": "521fdb5aae536bd5055f6d0e4f09c5a7bdb5799f", "bugFilePath": "src/org/junit/internal/runners/TestClass.java", "fixPatch": "diff --git a/src/org/junit/internal/runners/TestClass.java b/src/org/junit/internal/runners/TestClass.java\nindex 1cf2f92..a6e9617 100644\n--- a/src/org/junit/internal/runners/TestClass.java\n+++ b/src/org/junit/internal/runners/TestClass.java\n@@ -23,11 +23,11 @@\n \t\treturn getAnnotatedMethods(Test.class);\n \t}\n \n-\tpublic List<Method> getBefores() {\n+\tList<Method> getBefores() {\n \t\treturn getAnnotatedMethods(BeforeClass.class);\n \t}\n \n-\tpublic List<Method> getAfters() {\n+\tList<Method> getAfters() {\n \t\treturn getAnnotatedMethods(AfterClass.class);\n \t}\n \t\n", "projectName": "junit-team.junit", "bugLineNum": 30, "bugNodeStartChar": 623, "bugNodeLength": 84, "fixLineNum": 30, "fixNodeStartChar": 623, "fixNodeLength": 77, "sourceBeforeFix": "1", "sourceAfterFix": "0"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "ece77fa477a6d322bb5b37c7e2367f4c4dfbf9f3", "fixCommitParentSHA1": "22faf2f277960760eb373563891dcd129ece8cb6", "bugFilePath": "junit/runner/BaseTestRunner.java", "fixPatch": "diff --git a/junit/runner/BaseTestRunner.java b/junit/runner/BaseTestRunner.java\nindex d3fe31c..edfcb89 100644\n--- a/junit/runner/BaseTestRunner.java\n+++ b/junit/runner/BaseTestRunner.java\n@@ -56,14 +56,15 @@\n \tpublic static void savePreferences() throws IOException {\n \t\tFileOutputStream fos= new FileOutputStream(getPreferencesFile());\n \t\ttry {\n-\t\t\tgetPreferences().store(fos, \"\");\n+\t\t\t// calling of the deprecated save method to enable compiling under 1.1.7\n+\t\t\tgetPreferences().save(fos, \"\");\n \t\t} finally {\n \t\t\tfos.close();\n \t\t}\n \t}\n \n \tpublic static void setPreference(String key, String value) {\n-\t\tgetPreferences().setProperty(key, value);\n+\t\tgetPreferences().put(key, value);\n \t}\n \n \tpublic synchronized void endTest(Test test) {\n", "projectName": "junit-team.junit", "bugLineNum": 59, "bugNodeStartChar": 1602, "bugNodeLength": 31, "fixLineNum": 60, "fixNodeStartChar": 1678, "fixNodeLength": 30, "sourceBeforeFix": "getPreferences().store(fos,\"\")", "sourceAfterFix": "getPreferences().save(fos,\"\")"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "ece77fa477a6d322bb5b37c7e2367f4c4dfbf9f3", "fixCommitParentSHA1": "22faf2f277960760eb373563891dcd129ece8cb6", "bugFilePath": "junit/runner/BaseTestRunner.java", "fixPatch": "diff --git a/junit/runner/BaseTestRunner.java b/junit/runner/BaseTestRunner.java\nindex d3fe31c..edfcb89 100644\n--- a/junit/runner/BaseTestRunner.java\n+++ b/junit/runner/BaseTestRunner.java\n@@ -56,14 +56,15 @@\n \tpublic static void savePreferences() throws IOException {\n \t\tFileOutputStream fos= new FileOutputStream(getPreferencesFile());\n \t\ttry {\n-\t\t\tgetPreferences().store(fos, \"\");\n+\t\t\t// calling of the deprecated save method to enable compiling under 1.1.7\n+\t\t\tgetPreferences().save(fos, \"\");\n \t\t} finally {\n \t\t\tfos.close();\n \t\t}\n \t}\n \n \tpublic static void setPreference(String key, String value) {\n-\t\tgetPreferences().setProperty(key, value);\n+\t\tgetPreferences().put(key, value);\n \t}\n \n \tpublic synchronized void endTest(Test test) {\n", "projectName": "junit-team.junit", "bugLineNum": 59, "bugNodeStartChar": 1602, "bugNodeLength": 31, "fixLineNum": 60, "fixNodeStartChar": 1678, "fixNodeLength": 30, "sourceBeforeFix": "getPreferences().store(fos,\"\")", "sourceAfterFix": "getPreferences().save(fos,\"\")"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "ece77fa477a6d322bb5b37c7e2367f4c4dfbf9f3", "fixCommitParentSHA1": "22faf2f277960760eb373563891dcd129ece8cb6", "bugFilePath": "junit/runner/BaseTestRunner.java", "fixPatch": "diff --git a/junit/runner/BaseTestRunner.java b/junit/runner/BaseTestRunner.java\nindex d3fe31c..edfcb89 100644\n--- a/junit/runner/BaseTestRunner.java\n+++ b/junit/runner/BaseTestRunner.java\n@@ -56,14 +56,15 @@\n \tpublic static void savePreferences() throws IOException {\n \t\tFileOutputStream fos= new FileOutputStream(getPreferencesFile());\n \t\ttry {\n-\t\t\tgetPreferences().store(fos, \"\");\n+\t\t\t// calling of the deprecated save method to enable compiling under 1.1.7\n+\t\t\tgetPreferences().save(fos, \"\");\n \t\t} finally {\n \t\t\tfos.close();\n \t\t}\n \t}\n \n \tpublic static void setPreference(String key, String value) {\n-\t\tgetPreferences().setProperty(key, value);\n+\t\tgetPreferences().put(key, value);\n \t}\n \n \tpublic synchronized void endTest(Test test) {\n", "projectName": "junit-team.junit", "bugLineNum": 66, "bugNodeStartChar": 1737, "bugNodeLength": 40, "fixLineNum": 66, "fixNodeStartChar": 1737, "fixNodeLength": 32, "sourceBeforeFix": "getPreferences().setProperty(key,value)", "sourceAfterFix": "getPreferences().put(key,value)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "ece77fa477a6d322bb5b37c7e2367f4c4dfbf9f3", "fixCommitParentSHA1": "22faf2f277960760eb373563891dcd129ece8cb6", "bugFilePath": "junit/runner/BaseTestRunner.java", "fixPatch": "diff --git a/junit/runner/BaseTestRunner.java b/junit/runner/BaseTestRunner.java\nindex d3fe31c..edfcb89 100644\n--- a/junit/runner/BaseTestRunner.java\n+++ b/junit/runner/BaseTestRunner.java\n@@ -56,14 +56,15 @@\n \tpublic static void savePreferences() throws IOException {\n \t\tFileOutputStream fos= new FileOutputStream(getPreferencesFile());\n \t\ttry {\n-\t\t\tgetPreferences().store(fos, \"\");\n+\t\t\t// calling of the deprecated save method to enable compiling under 1.1.7\n+\t\t\tgetPreferences().save(fos, \"\");\n \t\t} finally {\n \t\t\tfos.close();\n \t\t}\n \t}\n \n \tpublic static void setPreference(String key, String value) {\n-\t\tgetPreferences().setProperty(key, value);\n+\t\tgetPreferences().put(key, value);\n \t}\n \n \tpublic synchronized void endTest(Test test) {\n", "projectName": "junit-team.junit", "bugLineNum": 66, "bugNodeStartChar": 1737, "bugNodeLength": 40, "fixLineNum": 66, "fixNodeStartChar": 1737, "fixNodeLength": 32, "sourceBeforeFix": "getPreferences().setProperty(key,value)", "sourceAfterFix": "getPreferences().put(key,value)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "ece77fa477a6d322bb5b37c7e2367f4c4dfbf9f3", "fixCommitParentSHA1": "22faf2f277960760eb373563891dcd129ece8cb6", "bugFilePath": "junit/swingui/DefaultFailureDetailView.java", "fixPatch": "diff --git a/junit/swingui/DefaultFailureDetailView.java b/junit/swingui/DefaultFailureDetailView.java\nindex e676b95..51e79c7 100644\n--- a/junit/swingui/DefaultFailureDetailView.java\n+++ b/junit/swingui/DefaultFailureDetailView.java\n@@ -48,7 +48,7 @@\n \t\t\tfLines.removeAllElements();\n      \t\tStringTokenizer st= new StringTokenizer(trace, \"\\n\\r\", false);\n \t    \twhile (st.hasMoreTokens()) \n- \t\t\t\tfLines.add(st.nextToken());\n+ \t\t\t\tfLines.addElement(st.nextToken());\n \t\t}\n \t}\n \t\n", "projectName": "junit-team.junit", "bugLineNum": 51, "bugNodeStartChar": 1249, "bugNodeLength": 26, "fixLineNum": 51, "fixNodeStartChar": 1249, "fixNodeLength": 33, "sourceBeforeFix": "fLines.add(st.nextToken())", "sourceAfterFix": "fLines.addElement(st.nextToken())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "ece77fa477a6d322bb5b37c7e2367f4c4dfbf9f3", "fixCommitParentSHA1": "22faf2f277960760eb373563891dcd129ece8cb6", "bugFilePath": "junit/swingui/DefaultFailureDetailView.java", "fixPatch": "diff --git a/junit/swingui/DefaultFailureDetailView.java b/junit/swingui/DefaultFailureDetailView.java\nindex e676b95..51e79c7 100644\n--- a/junit/swingui/DefaultFailureDetailView.java\n+++ b/junit/swingui/DefaultFailureDetailView.java\n@@ -48,7 +48,7 @@\n \t\t\tfLines.removeAllElements();\n      \t\tStringTokenizer st= new StringTokenizer(trace, \"\\n\\r\", false);\n \t    \twhile (st.hasMoreTokens()) \n- \t\t\t\tfLines.add(st.nextToken());\n+ \t\t\t\tfLines.addElement(st.nextToken());\n \t\t}\n \t}\n \t\n", "projectName": "junit-team.junit", "bugLineNum": 51, "bugNodeStartChar": 1249, "bugNodeLength": 26, "fixLineNum": 51, "fixNodeStartChar": 1249, "fixNodeLength": 33, "sourceBeforeFix": "fLines.add(st.nextToken())", "sourceAfterFix": "fLines.addElement(st.nextToken())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "7ab8d5e4fc2a796e0e4f4fd337fa5d15d07b0993", "fixCommitParentSHA1": "858fe281c8412ea60f24b6862b0bd5f75058624a", "bugFilePath": "junit/tests/runner/TextFeedbackTest.java", "fixPatch": "diff --git a/junit/tests/runner/TextFeedbackTest.java b/junit/tests/runner/TextFeedbackTest.java\nindex 232143c..a6f7f4f 100644\n--- a/junit/tests/runner/TextFeedbackTest.java\n+++ b/junit/tests/runner/TextFeedbackTest.java\n@@ -79,7 +79,7 @@\n \t\n \tpublic void testError() {\n \t\tString expected= expected(new String[]{\".E\", \"Time: 0\", \"Errors here\", \"\", \"FAILURES!!!\", \"Tests run: 1,  Failures: 0,  Errors: 1\", \"\"});\n-\t\tResultPrinter printer= new ResultPrinter(new PrintStream(output)) {\n+\t\tResultPrinter printer= new TestResultPrinter(new PrintStream(output)) {\n \t\t\tpublic void printErrors(TestResult result) {\n \t\t\t\tgetWriter().println(\"Errors here\");\n \t\t\t}\n", "projectName": "junit-team.junit", "bugLineNum": 82, "bugNodeStartChar": 2641, "bugNodeLength": 141, "fixLineNum": 82, "fixNodeStartChar": 2641, "fixNodeLength": 145, "sourceBeforeFix": "new ResultPrinter(new PrintStream(output)){   public void printErrors(  TestResult result){     getWriter().println(\"Errors here\");   } } ", "sourceAfterFix": "new TestResultPrinter(new PrintStream(output)){   public void printErrors(  TestResult result){     getWriter().println(\"Errors here\");   } } "}]