[
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "4acec50c8afb95544b08a6dbdda743264af69909",
    "fixCommitParentSHA1": "d56eaa8ac9e8eaab69e42124ae82bd7de42b8d74",
    "bugFilePath": "dubbo-registry/dubbo-registry-consul/src/main/java/org/apache/dubbo/registry/consul/ConsulRegistry.java",
    "fixPatch": "diff --git a/dubbo-registry/dubbo-registry-consul/src/main/java/org/apache/dubbo/registry/consul/ConsulRegistry.java b/dubbo-registry/dubbo-registry-consul/src/main/java/org/apache/dubbo/registry/consul/ConsulRegistry.java\nindex e4832ac..2a8bc1c 100644\n--- a/dubbo-registry/dubbo-registry-consul/src/main/java/org/apache/dubbo/registry/consul/ConsulRegistry.java\n+++ b/dubbo-registry/dubbo-registry-consul/src/main/java/org/apache/dubbo/registry/consul/ConsulRegistry.java\n@@ -275,7 +275,7 @@\n         service.setAddress(url.getHost());\n         service.setPort(url.getPort());\n         service.setId(buildId(url));\n-        service.setName(url.getServiceInterface());\n+        service.setName(url.getServiceKey());\n         service.setCheck(buildCheck(url));\n         service.setTags(buildTags(url));\n         service.setMeta(Collections.singletonMap(URL_META_KEY, url.toFullString()));\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 278,
    "bugNodeStartChar": 10393,
    "bugNodeLength": 25,
    "fixLineNum": 278,
    "fixNodeStartChar": 10393,
    "fixNodeLength": 19,
    "sourceBeforeFix": "url.getServiceInterface()",
    "sourceAfterFix": "url.getServiceKey()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "4acec50c8afb95544b08a6dbdda743264af69909",
    "fixCommitParentSHA1": "d56eaa8ac9e8eaab69e42124ae82bd7de42b8d74",
    "bugFilePath": "dubbo-registry/dubbo-registry-consul/src/main/java/org/apache/dubbo/registry/consul/ConsulRegistry.java",
    "fixPatch": "diff --git a/dubbo-registry/dubbo-registry-consul/src/main/java/org/apache/dubbo/registry/consul/ConsulRegistry.java b/dubbo-registry/dubbo-registry-consul/src/main/java/org/apache/dubbo/registry/consul/ConsulRegistry.java\nindex e4832ac..2a8bc1c 100644\n--- a/dubbo-registry/dubbo-registry-consul/src/main/java/org/apache/dubbo/registry/consul/ConsulRegistry.java\n+++ b/dubbo-registry/dubbo-registry-consul/src/main/java/org/apache/dubbo/registry/consul/ConsulRegistry.java\n@@ -275,7 +275,7 @@\n         service.setAddress(url.getHost());\n         service.setPort(url.getPort());\n         service.setId(buildId(url));\n-        service.setName(url.getServiceInterface());\n+        service.setName(url.getServiceKey());\n         service.setCheck(buildCheck(url));\n         service.setTags(buildTags(url));\n         service.setMeta(Collections.singletonMap(URL_META_KEY, url.toFullString()));\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 278,
    "bugNodeStartChar": 10393,
    "bugNodeLength": 25,
    "fixLineNum": 278,
    "fixNodeStartChar": 10393,
    "fixNodeLength": 19,
    "sourceBeforeFix": "url.getServiceInterface()",
    "sourceAfterFix": "url.getServiceKey()"
  },
  {
    "bugType": "CHANGE_OPERATOR",
    "fixCommitSHA1": "5eec017be7b418a11c714ca945b891067b5cdaeb",
    "fixCommitParentSHA1": "ddd7e43d172b5153758413ab1ea55e5fcac64323",
    "bugFilePath": "dubbo-common/src/main/java/org/apache/dubbo/common/extension/support/ActivateComparator.java",
    "fixPatch": "diff --git a/dubbo-common/src/main/java/org/apache/dubbo/common/extension/support/ActivateComparator.java b/dubbo-common/src/main/java/org/apache/dubbo/common/extension/support/ActivateComparator.java\nindex 5dcedc3..1114804 100644\n--- a/dubbo-common/src/main/java/org/apache/dubbo/common/extension/support/ActivateComparator.java\n+++ b/dubbo-common/src/main/java/org/apache/dubbo/common/extension/support/ActivateComparator.java\n@@ -82,7 +82,7 @@\n     }\r\n \r\n     private Class<?> findSpi(Class clazz) {\r\n-        if (clazz.getInterfaces().length <= 0) {\r\n+        if (clazz.getInterfaces().length == 0) {\r\n             return null;\r\n         }\r\n \r\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 85,
    "bugNodeStartChar": 2951,
    "bugNodeLength": 33,
    "fixLineNum": 85,
    "fixNodeStartChar": 2867,
    "fixNodeLength": 33,
    "sourceBeforeFix": "clazz.getInterfaces().length <= 0",
    "sourceAfterFix": "clazz.getInterfaces().length == 0"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "cfba520104517b1570bce131808f3977b17326dc",
    "fixCommitParentSHA1": "60ca9f4826ebb84ff41737c2ba2b60484eedc0f9",
    "bugFilePath": "dubbo-rpc/dubbo-rpc-dubbo/src/main/java/org/apache/dubbo/rpc/protocol/dubbo/DubboInvoker.java",
    "fixPatch": "diff --git a/dubbo-rpc/dubbo-rpc-dubbo/src/main/java/org/apache/dubbo/rpc/protocol/dubbo/DubboInvoker.java b/dubbo-rpc/dubbo-rpc-dubbo/src/main/java/org/apache/dubbo/rpc/protocol/dubbo/DubboInvoker.java\nindex ece7149..3fed73f 100644\n--- a/dubbo-rpc/dubbo-rpc-dubbo/src/main/java/org/apache/dubbo/rpc/protocol/dubbo/DubboInvoker.java\n+++ b/dubbo-rpc/dubbo-rpc-dubbo/src/main/java/org/apache/dubbo/rpc/protocol/dubbo/DubboInvoker.java\n@@ -87,7 +87,7 @@\n         }\n         try {\n             boolean isOneway = RpcUtils.isOneway(getUrl(), invocation);\n-            int timeout = getUrl().getMethodParameter(methodName, TIMEOUT_KEY, DEFAULT_TIMEOUT);\n+            int timeout = getUrl().getMethodPositiveParameter(methodName, TIMEOUT_KEY, DEFAULT_TIMEOUT);\n             if (isOneway) {\n                 boolean isSent = getUrl().getMethodParameter(methodName, Constants.SENT_KEY, false);\n                 currentClient.send(inv, isSent);\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 90,
    "bugNodeStartChar": 3742,
    "bugNodeLength": 69,
    "fixLineNum": 90,
    "fixNodeStartChar": 3742,
    "fixNodeLength": 77,
    "sourceBeforeFix": "getUrl().getMethodParameter(methodName,TIMEOUT_KEY,DEFAULT_TIMEOUT)",
    "sourceAfterFix": "getUrl().getMethodPositiveParameter(methodName,TIMEOUT_KEY,DEFAULT_TIMEOUT)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "cfba520104517b1570bce131808f3977b17326dc",
    "fixCommitParentSHA1": "60ca9f4826ebb84ff41737c2ba2b60484eedc0f9",
    "bugFilePath": "dubbo-rpc/dubbo-rpc-dubbo/src/main/java/org/apache/dubbo/rpc/protocol/dubbo/DubboInvoker.java",
    "fixPatch": "diff --git a/dubbo-rpc/dubbo-rpc-dubbo/src/main/java/org/apache/dubbo/rpc/protocol/dubbo/DubboInvoker.java b/dubbo-rpc/dubbo-rpc-dubbo/src/main/java/org/apache/dubbo/rpc/protocol/dubbo/DubboInvoker.java\nindex ece7149..3fed73f 100644\n--- a/dubbo-rpc/dubbo-rpc-dubbo/src/main/java/org/apache/dubbo/rpc/protocol/dubbo/DubboInvoker.java\n+++ b/dubbo-rpc/dubbo-rpc-dubbo/src/main/java/org/apache/dubbo/rpc/protocol/dubbo/DubboInvoker.java\n@@ -87,7 +87,7 @@\n         }\n         try {\n             boolean isOneway = RpcUtils.isOneway(getUrl(), invocation);\n-            int timeout = getUrl().getMethodParameter(methodName, TIMEOUT_KEY, DEFAULT_TIMEOUT);\n+            int timeout = getUrl().getMethodPositiveParameter(methodName, TIMEOUT_KEY, DEFAULT_TIMEOUT);\n             if (isOneway) {\n                 boolean isSent = getUrl().getMethodParameter(methodName, Constants.SENT_KEY, false);\n                 currentClient.send(inv, isSent);\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 90,
    "bugNodeStartChar": 3742,
    "bugNodeLength": 69,
    "fixLineNum": 90,
    "fixNodeStartChar": 3742,
    "fixNodeLength": 77,
    "sourceBeforeFix": "getUrl().getMethodParameter(methodName,TIMEOUT_KEY,DEFAULT_TIMEOUT)",
    "sourceAfterFix": "getUrl().getMethodPositiveParameter(methodName,TIMEOUT_KEY,DEFAULT_TIMEOUT)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "3acf5b8af129f58b31bcdae876ce4c73f520e161",
    "fixCommitParentSHA1": "76d65620f1daca9526111dc106909baecbbff5a5",
    "bugFilePath": "dubbo-common/src/main/java/org/apache/dubbo/common/URL.java",
    "fixPatch": "diff --git a/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java b/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java\nindex 106bebc..2935387 100644\n--- a/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java\n+++ b/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java\n@@ -1168,7 +1168,7 @@\n             map.put(USERNAME_KEY, username);\r\n         }\r\n         if (password != null) {\r\n-            map.put(USERNAME_KEY, password);\r\n+            map.put(PASSWORD_KEY, password);\r\n         }\r\n         if (host != null) {\r\n             map.put(HOST_KEY, host);\r\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 1171,
    "bugNodeStartChar": 39692,
    "bugNodeLength": 31,
    "fixLineNum": 1171,
    "fixNodeStartChar": 38522,
    "fixNodeLength": 31,
    "sourceBeforeFix": "map.put(USERNAME_KEY,password)",
    "sourceAfterFix": "map.put(PASSWORD_KEY,password)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "0c2232f3917eba133a8b9afe0808375a2dc4dc64",
    "fixCommitParentSHA1": "2cfc2b322fa830816076de07a62992dc8c4f5d4c",
    "bugFilePath": "dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java",
    "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java b/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java\nindex 464087e..7ba4a63 100644\n--- a/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java\n+++ b/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java\n@@ -78,7 +78,7 @@\n \n             @Override\n             protected void initChannel(Channel ch) throws Exception {\n-                int heartbeatInterval = UrlUtils.getIdleTimeout(getUrl());\n+                int heartbeatInterval = UrlUtils.getHeartbeat(getUrl());\n                 NettyCodecAdapter adapter = new NettyCodecAdapter(getCodec(), getUrl(), NettyClient.this);\n                 ch.pipeline()//.addLast(\"logging\",new LoggingHandler(LogLevel.INFO))//for debug\n                         .addLast(\"decoder\", adapter.getDecoder())\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 81,
    "bugNodeStartChar": 3411,
    "bugNodeLength": 33,
    "fixLineNum": 81,
    "fixNodeStartChar": 3411,
    "fixNodeLength": 31,
    "sourceBeforeFix": "UrlUtils.getIdleTimeout(getUrl())",
    "sourceAfterFix": "UrlUtils.getHeartbeat(getUrl())"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "0c2232f3917eba133a8b9afe0808375a2dc4dc64",
    "fixCommitParentSHA1": "2cfc2b322fa830816076de07a62992dc8c4f5d4c",
    "bugFilePath": "dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java",
    "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java b/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java\nindex 464087e..7ba4a63 100644\n--- a/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java\n+++ b/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java\n@@ -78,7 +78,7 @@\n \n             @Override\n             protected void initChannel(Channel ch) throws Exception {\n-                int heartbeatInterval = UrlUtils.getIdleTimeout(getUrl());\n+                int heartbeatInterval = UrlUtils.getHeartbeat(getUrl());\n                 NettyCodecAdapter adapter = new NettyCodecAdapter(getCodec(), getUrl(), NettyClient.this);\n                 ch.pipeline()//.addLast(\"logging\",new LoggingHandler(LogLevel.INFO))//for debug\n                         .addLast(\"decoder\", adapter.getDecoder())\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 81,
    "bugNodeStartChar": 3411,
    "bugNodeLength": 33,
    "fixLineNum": 81,
    "fixNodeStartChar": 3411,
    "fixNodeLength": 31,
    "sourceBeforeFix": "UrlUtils.getIdleTimeout(getUrl())",
    "sourceAfterFix": "UrlUtils.getHeartbeat(getUrl())"
  },
  {
    "bugType": "SWAP_BOOLEAN_LITERAL",
    "fixCommitSHA1": "05a98f3214d35ba13978bc88988d5a83864b8cd7",
    "fixCommitParentSHA1": "e89b3f2728248242e38e70627d761be776ef03ec",
    "bugFilePath": "dubbo-compatible/src/main/java/com/alibaba/dubbo/config/annotation/Reference.java",
    "fixPatch": "diff --git a/dubbo-compatible/src/main/java/com/alibaba/dubbo/config/annotation/Reference.java b/dubbo-compatible/src/main/java/com/alibaba/dubbo/config/annotation/Reference.java\nindex 4c1ca97..c8f25b3 100644\n--- a/dubbo-compatible/src/main/java/com/alibaba/dubbo/config/annotation/Reference.java\n+++ b/dubbo-compatible/src/main/java/com/alibaba/dubbo/config/annotation/Reference.java\n@@ -43,7 +43,7 @@\n \n     boolean generic() default false;\n \n-    boolean injvm() default false;\n+    boolean injvm() default true;\n \n     boolean check() default true;\n \n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 46,
    "bugNodeStartChar": 1482,
    "bugNodeLength": 30,
    "fixLineNum": 46,
    "fixNodeStartChar": 1482,
    "fixNodeLength": 29,
    "sourceBeforeFix": "boolean injvm() default false; ",
    "sourceAfterFix": "boolean injvm() default true; "
  },
  {
    "bugType": "CHANGE_UNARY_OPERATOR",
    "fixCommitSHA1": "9031a4c20455ba16a63233f10783a55915afcd9b",
    "fixCommitParentSHA1": "813fed53e8da58beb48bae9ed602f133abb3f747",
    "bugFilePath": "dubbo-registry/dubbo-registry-redis/src/main/java/org/apache/dubbo/registry/redis/RedisRegistry.java",
    "fixPatch": "diff --git a/dubbo-registry/dubbo-registry-redis/src/main/java/org/apache/dubbo/registry/redis/RedisRegistry.java b/dubbo-registry/dubbo-registry-redis/src/main/java/org/apache/dubbo/registry/redis/RedisRegistry.java\nindex aa1f04e..5e4f899 100644\n--- a/dubbo-registry/dubbo-registry-redis/src/main/java/org/apache/dubbo/registry/redis/RedisRegistry.java\n+++ b/dubbo-registry/dubbo-registry-redis/src/main/java/org/apache/dubbo/registry/redis/RedisRegistry.java\n@@ -564,7 +564,7 @@\n                                     jedis = jedisPool.getResource();\r\n                                     try {\r\n                                         if (service.endsWith(Constants.ANY_VALUE)) {\r\n-                                            if (!first) {\r\n+                                            if (first) {\r\n                                                 first = false;\r\n                                                 Set<String> keys = jedis.keys(service);\r\n                                                 if (CollectionUtils.isNotEmpty(keys)) {\r\n@@ -576,7 +576,7 @@\n                                             }\r\n                                             jedis.psubscribe(new NotifySub(jedisPool), service); // blocking\r\n                                         } else {\r\n-                                            if (!first) {\r\n+                                            if (first) {\r\n                                                 first = false;\r\n                                                 doNotify(jedis, service);\r\n                                                 resetSkip();\r\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 567,
    "bugNodeStartChar": 23749,
    "bugNodeLength": 6,
    "fixLineNum": 567,
    "fixNodeStartChar": 23183,
    "fixNodeLength": 5,
    "sourceBeforeFix": "!first",
    "sourceAfterFix": "first"
  },
  {
    "bugType": "CHANGE_UNARY_OPERATOR",
    "fixCommitSHA1": "9031a4c20455ba16a63233f10783a55915afcd9b",
    "fixCommitParentSHA1": "813fed53e8da58beb48bae9ed602f133abb3f747",
    "bugFilePath": "dubbo-registry/dubbo-registry-redis/src/main/java/org/apache/dubbo/registry/redis/RedisRegistry.java",
    "fixPatch": "diff --git a/dubbo-registry/dubbo-registry-redis/src/main/java/org/apache/dubbo/registry/redis/RedisRegistry.java b/dubbo-registry/dubbo-registry-redis/src/main/java/org/apache/dubbo/registry/redis/RedisRegistry.java\nindex aa1f04e..5e4f899 100644\n--- a/dubbo-registry/dubbo-registry-redis/src/main/java/org/apache/dubbo/registry/redis/RedisRegistry.java\n+++ b/dubbo-registry/dubbo-registry-redis/src/main/java/org/apache/dubbo/registry/redis/RedisRegistry.java\n@@ -564,7 +564,7 @@\n                                     jedis = jedisPool.getResource();\r\n                                     try {\r\n                                         if (service.endsWith(Constants.ANY_VALUE)) {\r\n-                                            if (!first) {\r\n+                                            if (first) {\r\n                                                 first = false;\r\n                                                 Set<String> keys = jedis.keys(service);\r\n                                                 if (CollectionUtils.isNotEmpty(keys)) {\r\n@@ -576,7 +576,7 @@\n                                             }\r\n                                             jedis.psubscribe(new NotifySub(jedisPool), service); // blocking\r\n                                         } else {\r\n-                                            if (!first) {\r\n+                                            if (first) {\r\n                                                 first = false;\r\n                                                 doNotify(jedis, service);\r\n                                                 resetSkip();\r\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 579,
    "bugNodeStartChar": 24579,
    "bugNodeLength": 6,
    "fixLineNum": 579,
    "fixNodeStartChar": 24001,
    "fixNodeLength": 5,
    "sourceBeforeFix": "!first",
    "sourceAfterFix": "first"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "6f28ff45833cfc51d1e2ee2ccfa723613128125d",
    "fixCommitParentSHA1": "cad253a0d745204c617df007cd8239305a53173f",
    "bugFilePath": "dubbo-common/src/main/java/org/apache/dubbo/common/URL.java",
    "fixPatch": "diff --git a/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java b/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java\nindex 31ac91e..7809140 100644\n--- a/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java\n+++ b/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java\n@@ -349,7 +349,7 @@\n \r\n     public String getAuthority() {\r\n         if (StringUtils.isEmpty(username)\r\n-                && StringUtils.isEmpty(parameter)) {\r\n+                && StringUtils.isEmpty(password)) {\r\n             return null;\r\n         }\r\n         return (username == null ? \"\" : username)\r\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 352,
    "bugNodeStartChar": 13069,
    "bugNodeLength": 30,
    "fixLineNum": 352,
    "fixNodeStartChar": 12718,
    "fixNodeLength": 29,
    "sourceBeforeFix": "StringUtils.isEmpty(parameter)",
    "sourceAfterFix": "StringUtils.isEmpty(password)"
  },
  {
    "bugType": "SWAP_ARGUMENTS",
    "fixCommitSHA1": "b757e19f494cf8bdd18ed9bd7672733e7e41f2d6",
    "fixCommitParentSHA1": "caac0b573c8f87d0147983c149d5f7d96db2b20c",
    "bugFilePath": "dubbo-remoting/dubbo-remoting-netty/src/main/java/org/apache/dubbo/remoting/transport/netty/NettyBackedChannelBuffer.java",
    "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-netty/src/main/java/org/apache/dubbo/remoting/transport/netty/NettyBackedChannelBuffer.java b/dubbo-remoting/dubbo-remoting-netty/src/main/java/org/apache/dubbo/remoting/transport/netty/NettyBackedChannelBuffer.java\nindex 3bd911f..51c697c 100644\n--- a/dubbo-remoting/dubbo-remoting-netty/src/main/java/org/apache/dubbo/remoting/transport/netty/NettyBackedChannelBuffer.java\n+++ b/dubbo-remoting/dubbo-remoting-netty/src/main/java/org/apache/dubbo/remoting/transport/netty/NettyBackedChannelBuffer.java\n@@ -119,7 +119,7 @@\n         // careful\n         byte[] data = new byte[length];\n         buffer.getBytes(srcIndex, data, 0, length);\n-        setBytes(0, data, index, length);\n+        setBytes(index, data, 0, length);\n     }\n \n \n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 122,
    "bugNodeStartChar": 3401,
    "bugNodeLength": 32,
    "fixLineNum": 122,
    "fixNodeStartChar": 3401,
    "fixNodeLength": 32,
    "sourceBeforeFix": "setBytes(0,data,index,length)",
    "sourceAfterFix": "setBytes(index,data,0,length)"
  },
  {
    "bugType": "SWAP_ARGUMENTS",
    "fixCommitSHA1": "b757e19f494cf8bdd18ed9bd7672733e7e41f2d6",
    "fixCommitParentSHA1": "caac0b573c8f87d0147983c149d5f7d96db2b20c",
    "bugFilePath": "dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyBackedChannelBuffer.java",
    "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyBackedChannelBuffer.java b/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyBackedChannelBuffer.java\nindex c6e0c6d..2c00e94 100644\n--- a/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyBackedChannelBuffer.java\n+++ b/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyBackedChannelBuffer.java\n@@ -118,7 +118,7 @@\n         // careful\n         byte[] data = new byte[length];\n         buffer.getBytes(srcIndex, data, 0, length);\n-        setBytes(0, data, index, length);\n+        setBytes(index, data, 0, length);\n     }\n \n     \n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 121,
    "bugNodeStartChar": 3305,
    "bugNodeLength": 32,
    "fixLineNum": 121,
    "fixNodeStartChar": 3305,
    "fixNodeLength": 32,
    "sourceBeforeFix": "setBytes(0,data,index,length)",
    "sourceAfterFix": "setBytes(index,data,0,length)"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "faf398371059c02edcd4e83998cc0fc73935114a",
    "fixCommitParentSHA1": "21a608c8ba580e6ae8aee66d733bd950243862df",
    "bugFilePath": "dubbo-metadata-report/dubbo-metadata-report-api/src/main/java/org/apache/dubbo/metadata/integration/MetadataReportService.java",
    "fixPatch": "diff --git a/dubbo-metadata-report/dubbo-metadata-report-api/src/main/java/org/apache/dubbo/metadata/integration/MetadataReportService.java b/dubbo-metadata-report/dubbo-metadata-report-api/src/main/java/org/apache/dubbo/metadata/integration/MetadataReportService.java\nindex d0dfa73..c457950 100644\n--- a/dubbo-metadata-report/dubbo-metadata-report-api/src/main/java/org/apache/dubbo/metadata/integration/MetadataReportService.java\n+++ b/dubbo-metadata-report/dubbo-metadata-report-api/src/main/java/org/apache/dubbo/metadata/integration/MetadataReportService.java\n@@ -38,7 +38,7 @@\n \n     protected final Logger logger = LoggerFactory.getLogger(getClass());\n \n-    private static MetadataReportService metadataReportService;\n+    private static volatile MetadataReportService metadataReportService;\n     private static Object lock = new Object();\n \n     private MetadataReportFactory metadataReportFactory = ExtensionLoader.getExtensionLoader(MetadataReportFactory.class).getAdaptiveExtension();\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 41,
    "bugNodeStartChar": 1679,
    "bugNodeLength": 59,
    "fixLineNum": 41,
    "fixNodeStartChar": 1679,
    "fixNodeLength": 68,
    "sourceBeforeFix": "10",
    "sourceAfterFix": "74"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "faf398371059c02edcd4e83998cc0fc73935114a",
    "fixCommitParentSHA1": "21a608c8ba580e6ae8aee66d733bd950243862df",
    "bugFilePath": "dubbo-metadata-report/dubbo-metadata-report-api/src/main/java/org/apache/dubbo/metadata/support/AbstractMetadataReport.java",
    "fixPatch": "diff --git a/dubbo-metadata-report/dubbo-metadata-report-api/src/main/java/org/apache/dubbo/metadata/support/AbstractMetadataReport.java b/dubbo-metadata-report/dubbo-metadata-report-api/src/main/java/org/apache/dubbo/metadata/support/AbstractMetadataReport.java\nindex bedb085..f1bff8a 100644\n--- a/dubbo-metadata-report/dubbo-metadata-report-api/src/main/java/org/apache/dubbo/metadata/support/AbstractMetadataReport.java\n+++ b/dubbo-metadata-report/dubbo-metadata-report-api/src/main/java/org/apache/dubbo/metadata/support/AbstractMetadataReport.java\n@@ -357,7 +357,7 @@\n         protected final Logger logger = LoggerFactory.getLogger(getClass());\n \n         final ScheduledExecutorService retryExecutor = Executors.newScheduledThreadPool(0, new NamedThreadFactory(\"DubboRegistryFailedRetryTimer\", true));\n-        ScheduledFuture retryScheduledFuture;\n+        volatile ScheduledFuture retryScheduledFuture;\n         AtomicInteger retryCounter = new AtomicInteger(0);\n         // retry task schedule period\n         long retryPeriod;\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 360,
    "bugNodeStartChar": 14867,
    "bugNodeLength": 37,
    "fixLineNum": 360,
    "fixNodeStartChar": 14867,
    "fixNodeLength": 46,
    "sourceBeforeFix": "0",
    "sourceAfterFix": "64"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "bcb6eeec1d978d6d572ebec875d34dc64aeb5121",
    "fixCommitParentSHA1": "cb599135f99d20372d1c227814326df8995b37fc",
    "bugFilePath": "dubbo-common/src/main/java/org/apache/dubbo/common/URL.java",
    "fixPatch": "diff --git a/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java b/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java\nindex cee9c86..63cee6f 100644\n--- a/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java\n+++ b/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java\n@@ -727,7 +727,7 @@\n         String methodKey = method + \".\" + key;\r\n         Number n = getNumbers().get(methodKey);\r\n         if (n != null) {\r\n-            return n.intValue();\r\n+            return n.doubleValue();\r\n         }\r\n         String value = getMethodParameter(method, key);\r\n         if (StringUtils.isEmpty(value)) {\r\n@@ -742,7 +742,7 @@\n         String methodKey = method + \".\" + key;\r\n         Number n = getNumbers().get(methodKey);\r\n         if (n != null) {\r\n-            return n.intValue();\r\n+            return n.floatValue();\r\n         }\r\n         String value = getMethodParameter(method, key);\r\n         if (StringUtils.isEmpty(value)) {\r\n@@ -757,7 +757,7 @@\n         String methodKey = method + \".\" + key;\r\n         Number n = getNumbers().get(methodKey);\r\n         if (n != null) {\r\n-            return n.intValue();\r\n+            return n.longValue();\r\n         }\r\n         String value = getMethodParameter(method, key);\r\n         if (StringUtils.isEmpty(value)) {\r\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 730,
    "bugNodeStartChar": 24746,
    "bugNodeLength": 12,
    "fixLineNum": 730,
    "fixNodeStartChar": 24017,
    "fixNodeLength": 15,
    "sourceBeforeFix": "n.intValue()",
    "sourceAfterFix": "n.doubleValue()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "bcb6eeec1d978d6d572ebec875d34dc64aeb5121",
    "fixCommitParentSHA1": "cb599135f99d20372d1c227814326df8995b37fc",
    "bugFilePath": "dubbo-common/src/main/java/org/apache/dubbo/common/URL.java",
    "fixPatch": "diff --git a/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java b/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java\nindex cee9c86..63cee6f 100644\n--- a/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java\n+++ b/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java\n@@ -727,7 +727,7 @@\n         String methodKey = method + \".\" + key;\r\n         Number n = getNumbers().get(methodKey);\r\n         if (n != null) {\r\n-            return n.intValue();\r\n+            return n.doubleValue();\r\n         }\r\n         String value = getMethodParameter(method, key);\r\n         if (StringUtils.isEmpty(value)) {\r\n@@ -742,7 +742,7 @@\n         String methodKey = method + \".\" + key;\r\n         Number n = getNumbers().get(methodKey);\r\n         if (n != null) {\r\n-            return n.intValue();\r\n+            return n.floatValue();\r\n         }\r\n         String value = getMethodParameter(method, key);\r\n         if (StringUtils.isEmpty(value)) {\r\n@@ -757,7 +757,7 @@\n         String methodKey = method + \".\" + key;\r\n         Number n = getNumbers().get(methodKey);\r\n         if (n != null) {\r\n-            return n.intValue();\r\n+            return n.longValue();\r\n         }\r\n         String value = getMethodParameter(method, key);\r\n         if (StringUtils.isEmpty(value)) {\r\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 730,
    "bugNodeStartChar": 24746,
    "bugNodeLength": 12,
    "fixLineNum": 730,
    "fixNodeStartChar": 24017,
    "fixNodeLength": 15,
    "sourceBeforeFix": "n.intValue()",
    "sourceAfterFix": "n.doubleValue()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "bcb6eeec1d978d6d572ebec875d34dc64aeb5121",
    "fixCommitParentSHA1": "cb599135f99d20372d1c227814326df8995b37fc",
    "bugFilePath": "dubbo-common/src/main/java/org/apache/dubbo/common/URL.java",
    "fixPatch": "diff --git a/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java b/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java\nindex cee9c86..63cee6f 100644\n--- a/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java\n+++ b/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java\n@@ -727,7 +727,7 @@\n         String methodKey = method + \".\" + key;\r\n         Number n = getNumbers().get(methodKey);\r\n         if (n != null) {\r\n-            return n.intValue();\r\n+            return n.doubleValue();\r\n         }\r\n         String value = getMethodParameter(method, key);\r\n         if (StringUtils.isEmpty(value)) {\r\n@@ -742,7 +742,7 @@\n         String methodKey = method + \".\" + key;\r\n         Number n = getNumbers().get(methodKey);\r\n         if (n != null) {\r\n-            return n.intValue();\r\n+            return n.floatValue();\r\n         }\r\n         String value = getMethodParameter(method, key);\r\n         if (StringUtils.isEmpty(value)) {\r\n@@ -757,7 +757,7 @@\n         String methodKey = method + \".\" + key;\r\n         Number n = getNumbers().get(methodKey);\r\n         if (n != null) {\r\n-            return n.intValue();\r\n+            return n.longValue();\r\n         }\r\n         String value = getMethodParameter(method, key);\r\n         if (StringUtils.isEmpty(value)) {\r\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 745,
    "bugNodeStartChar": 25261,
    "bugNodeLength": 12,
    "fixLineNum": 745,
    "fixNodeStartChar": 24517,
    "fixNodeLength": 14,
    "sourceBeforeFix": "n.intValue()",
    "sourceAfterFix": "n.floatValue()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "bcb6eeec1d978d6d572ebec875d34dc64aeb5121",
    "fixCommitParentSHA1": "cb599135f99d20372d1c227814326df8995b37fc",
    "bugFilePath": "dubbo-common/src/main/java/org/apache/dubbo/common/URL.java",
    "fixPatch": "diff --git a/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java b/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java\nindex cee9c86..63cee6f 100644\n--- a/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java\n+++ b/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java\n@@ -727,7 +727,7 @@\n         String methodKey = method + \".\" + key;\r\n         Number n = getNumbers().get(methodKey);\r\n         if (n != null) {\r\n-            return n.intValue();\r\n+            return n.doubleValue();\r\n         }\r\n         String value = getMethodParameter(method, key);\r\n         if (StringUtils.isEmpty(value)) {\r\n@@ -742,7 +742,7 @@\n         String methodKey = method + \".\" + key;\r\n         Number n = getNumbers().get(methodKey);\r\n         if (n != null) {\r\n-            return n.intValue();\r\n+            return n.floatValue();\r\n         }\r\n         String value = getMethodParameter(method, key);\r\n         if (StringUtils.isEmpty(value)) {\r\n@@ -757,7 +757,7 @@\n         String methodKey = method + \".\" + key;\r\n         Number n = getNumbers().get(methodKey);\r\n         if (n != null) {\r\n-            return n.intValue();\r\n+            return n.longValue();\r\n         }\r\n         String value = getMethodParameter(method, key);\r\n         if (StringUtils.isEmpty(value)) {\r\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 745,
    "bugNodeStartChar": 25261,
    "bugNodeLength": 12,
    "fixLineNum": 745,
    "fixNodeStartChar": 24517,
    "fixNodeLength": 14,
    "sourceBeforeFix": "n.intValue()",
    "sourceAfterFix": "n.floatValue()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "bcb6eeec1d978d6d572ebec875d34dc64aeb5121",
    "fixCommitParentSHA1": "cb599135f99d20372d1c227814326df8995b37fc",
    "bugFilePath": "dubbo-common/src/main/java/org/apache/dubbo/common/URL.java",
    "fixPatch": "diff --git a/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java b/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java\nindex cee9c86..63cee6f 100644\n--- a/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java\n+++ b/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java\n@@ -727,7 +727,7 @@\n         String methodKey = method + \".\" + key;\r\n         Number n = getNumbers().get(methodKey);\r\n         if (n != null) {\r\n-            return n.intValue();\r\n+            return n.doubleValue();\r\n         }\r\n         String value = getMethodParameter(method, key);\r\n         if (StringUtils.isEmpty(value)) {\r\n@@ -742,7 +742,7 @@\n         String methodKey = method + \".\" + key;\r\n         Number n = getNumbers().get(methodKey);\r\n         if (n != null) {\r\n-            return n.intValue();\r\n+            return n.floatValue();\r\n         }\r\n         String value = getMethodParameter(method, key);\r\n         if (StringUtils.isEmpty(value)) {\r\n@@ -757,7 +757,7 @@\n         String methodKey = method + \".\" + key;\r\n         Number n = getNumbers().get(methodKey);\r\n         if (n != null) {\r\n-            return n.intValue();\r\n+            return n.longValue();\r\n         }\r\n         String value = getMethodParameter(method, key);\r\n         if (StringUtils.isEmpty(value)) {\r\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 760,
    "bugNodeStartChar": 25771,
    "bugNodeLength": 12,
    "fixLineNum": 760,
    "fixNodeStartChar": 25012,
    "fixNodeLength": 13,
    "sourceBeforeFix": "n.intValue()",
    "sourceAfterFix": "n.longValue()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "bcb6eeec1d978d6d572ebec875d34dc64aeb5121",
    "fixCommitParentSHA1": "cb599135f99d20372d1c227814326df8995b37fc",
    "bugFilePath": "dubbo-common/src/main/java/org/apache/dubbo/common/URL.java",
    "fixPatch": "diff --git a/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java b/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java\nindex cee9c86..63cee6f 100644\n--- a/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java\n+++ b/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java\n@@ -727,7 +727,7 @@\n         String methodKey = method + \".\" + key;\r\n         Number n = getNumbers().get(methodKey);\r\n         if (n != null) {\r\n-            return n.intValue();\r\n+            return n.doubleValue();\r\n         }\r\n         String value = getMethodParameter(method, key);\r\n         if (StringUtils.isEmpty(value)) {\r\n@@ -742,7 +742,7 @@\n         String methodKey = method + \".\" + key;\r\n         Number n = getNumbers().get(methodKey);\r\n         if (n != null) {\r\n-            return n.intValue();\r\n+            return n.floatValue();\r\n         }\r\n         String value = getMethodParameter(method, key);\r\n         if (StringUtils.isEmpty(value)) {\r\n@@ -757,7 +757,7 @@\n         String methodKey = method + \".\" + key;\r\n         Number n = getNumbers().get(methodKey);\r\n         if (n != null) {\r\n-            return n.intValue();\r\n+            return n.longValue();\r\n         }\r\n         String value = getMethodParameter(method, key);\r\n         if (StringUtils.isEmpty(value)) {\r\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 760,
    "bugNodeStartChar": 25771,
    "bugNodeLength": 12,
    "fixLineNum": 760,
    "fixNodeStartChar": 25012,
    "fixNodeLength": 13,
    "sourceBeforeFix": "n.intValue()",
    "sourceAfterFix": "n.longValue()"
  },
  {
    "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
    "fixCommitSHA1": "5c2293d770a717694d0cedf4ebf9c9b2223571d0",
    "fixCommitParentSHA1": "275635e5b7f97e5c2130b18b81197907b5f027af",
    "bugFilePath": "dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/file/FileRouterEngineTest.java",
    "fixPatch": "diff --git a/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/file/FileRouterEngineTest.java b/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/file/FileRouterEngineTest.java\nindex 83a1424..95a50a0 100644\n--- a/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/file/FileRouterEngineTest.java\n+++ b/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/file/FileRouterEngineTest.java\n@@ -160,7 +160,7 @@\n \n     private void initDic(URL url) {\n         dic = new StaticDirectory<>(url, invokers);\n-        dic.buildRouterChain(invokers);\n+        dic.buildRouterChain();\n         dic.getRouterChain().setResidentRouters(Arrays.asList(routerFactory.getRouter(url)));\n     }\n \n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 163,
    "bugNodeStartChar": 6339,
    "bugNodeLength": 30,
    "fixLineNum": 163,
    "fixNodeStartChar": 6339,
    "fixNodeLength": 22,
    "sourceBeforeFix": "dic.buildRouterChain(invokers)",
    "sourceAfterFix": "dic.buildRouterChain()"
  },
  {
    "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
    "fixCommitSHA1": "5c2293d770a717694d0cedf4ebf9c9b2223571d0",
    "fixCommitParentSHA1": "275635e5b7f97e5c2130b18b81197907b5f027af",
    "bugFilePath": "dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/AbstractClusterInvokerTest.java",
    "fixPatch": "diff --git a/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/AbstractClusterInvokerTest.java b/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/AbstractClusterInvokerTest.java\nindex 655e649..0cbe5a3 100644\n--- a/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/AbstractClusterInvokerTest.java\n+++ b/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/AbstractClusterInvokerTest.java\n@@ -455,7 +455,7 @@\n     }\n \n     private void initDic() {\n-        dic.buildRouterChain(invokers);\n+        dic.buildRouterChain();\n     }\n \n     @Test()\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 458,
    "bugNodeStartChar": 18270,
    "bugNodeLength": 30,
    "fixLineNum": 458,
    "fixNodeStartChar": 18270,
    "fixNodeLength": 22,
    "sourceBeforeFix": "dic.buildRouterChain(invokers)",
    "sourceAfterFix": "dic.buildRouterChain()"
  },
  {
    "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
    "fixCommitSHA1": "5c2293d770a717694d0cedf4ebf9c9b2223571d0",
    "fixCommitParentSHA1": "275635e5b7f97e5c2130b18b81197907b5f027af",
    "bugFilePath": "dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/wrapper/MockClusterInvokerTest.java",
    "fixPatch": "diff --git a/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/wrapper/MockClusterInvokerTest.java b/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/wrapper/MockClusterInvokerTest.java\nindex cf5c8a0..f305f91 100644\n--- a/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/wrapper/MockClusterInvokerTest.java\n+++ b/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/wrapper/MockClusterInvokerTest.java\n@@ -652,7 +652,7 @@\n         }\r\n \r\n         StaticDirectory<IHelloService> dic = new StaticDirectory<IHelloService>(durl, invokers, null);\r\n-        dic.buildRouterChain(invokers);\r\n+        dic.buildRouterChain();\r\n         AbstractClusterInvoker<IHelloService> cluster = new AbstractClusterInvoker(dic) {\r\n             @Override\r\n             protected Result doInvoke(Invocation invocation, List invokers, LoadBalance loadbalance)\r\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 655,
    "bugNodeStartChar": 28804,
    "bugNodeLength": 30,
    "fixLineNum": 655,
    "fixNodeStartChar": 28150,
    "fixNodeLength": 22,
    "sourceBeforeFix": "dic.buildRouterChain(invokers)",
    "sourceAfterFix": "dic.buildRouterChain()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "47213f461b632379d5107e9ad73d3c222adadeb4",
    "fixCommitParentSHA1": "455943f4606caf88f6c1627e83c745d92f29813b",
    "bugFilePath": "dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/directory/StaticDirectory.java",
    "fixPatch": "diff --git a/dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/directory/StaticDirectory.java b/dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/directory/StaticDirectory.java\nindex 4794b12..e35a404 100644\n--- a/dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/directory/StaticDirectory.java\n+++ b/dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/directory/StaticDirectory.java\n@@ -85,9 +85,9 @@\n         invokers.clear();\r\n     }\r\n \r\n-    public void buildRouterChain(List<Invoker<T>> groupInvokers) {\r\n+    public void buildRouterChain() {\r\n         RouterChain<T> routerChain = RouterChain.buildChain(getUrl());\r\n-        routerChain.notifyFullInvokers(groupInvokers, getUrl());\r\n+        routerChain.notifyFullInvokers(invokers, getUrl());\r\n         this.setRouterChain(routerChain);\r\n     }\r\n \r\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 90,
    "bugNodeStartChar": 3018,
    "bugNodeLength": 55,
    "fixLineNum": 90,
    "fixNodeStartChar": 2929,
    "fixNodeLength": 50,
    "sourceBeforeFix": "routerChain.notifyFullInvokers(groupInvokers,getUrl())",
    "sourceAfterFix": "routerChain.notifyFullInvokers(invokers,getUrl())"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "b8c3e8445524a78fda3e7823893a4ef8415d7fa3",
    "fixCommitParentSHA1": "227a1699ac041b9e99e31ba3dfcff5d2307ee77b",
    "bugFilePath": "dubbo-config/dubbo-config-spring/src/main/java/org/apache/dubbo/config/spring/util/PropertySourcesUtils.java",
    "fixPatch": "diff --git a/dubbo-config/dubbo-config-spring/src/main/java/org/apache/dubbo/config/spring/util/PropertySourcesUtils.java b/dubbo-config/dubbo-config-spring/src/main/java/org/apache/dubbo/config/spring/util/PropertySourcesUtils.java\nindex b613787..28d43fc 100644\n--- a/dubbo-config/dubbo-config-spring/src/main/java/org/apache/dubbo/config/spring/util/PropertySourcesUtils.java\n+++ b/dubbo-config/dubbo-config-spring/src/main/java/org/apache/dubbo/config/spring/util/PropertySourcesUtils.java\n@@ -55,7 +55,7 @@\n                     if (name.startsWith(normalizedPrefix)) {\n                         String subName = name.substring(normalizedPrefix.length());\n                         String value = propertyResolver.getProperty(name);\n-                        subProperties.put(subName, value);\n+                        subProperties.putIfAbsent(subName, value);\n                     }\n                 }\n             }\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 58,
    "bugNodeStartChar": 3156,
    "bugNodeLength": 33,
    "fixLineNum": 58,
    "fixNodeStartChar": 3156,
    "fixNodeLength": 41,
    "sourceBeforeFix": "subProperties.put(subName,value)",
    "sourceAfterFix": "subProperties.putIfAbsent(subName,value)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "b8c3e8445524a78fda3e7823893a4ef8415d7fa3",
    "fixCommitParentSHA1": "227a1699ac041b9e99e31ba3dfcff5d2307ee77b",
    "bugFilePath": "dubbo-config/dubbo-config-spring/src/main/java/org/apache/dubbo/config/spring/util/PropertySourcesUtils.java",
    "fixPatch": "diff --git a/dubbo-config/dubbo-config-spring/src/main/java/org/apache/dubbo/config/spring/util/PropertySourcesUtils.java b/dubbo-config/dubbo-config-spring/src/main/java/org/apache/dubbo/config/spring/util/PropertySourcesUtils.java\nindex b613787..28d43fc 100644\n--- a/dubbo-config/dubbo-config-spring/src/main/java/org/apache/dubbo/config/spring/util/PropertySourcesUtils.java\n+++ b/dubbo-config/dubbo-config-spring/src/main/java/org/apache/dubbo/config/spring/util/PropertySourcesUtils.java\n@@ -55,7 +55,7 @@\n                     if (name.startsWith(normalizedPrefix)) {\n                         String subName = name.substring(normalizedPrefix.length());\n                         String value = propertyResolver.getProperty(name);\n-                        subProperties.put(subName, value);\n+                        subProperties.putIfAbsent(subName, value);\n                     }\n                 }\n             }\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 58,
    "bugNodeStartChar": 3156,
    "bugNodeLength": 33,
    "fixLineNum": 58,
    "fixNodeStartChar": 3156,
    "fixNodeLength": 41,
    "sourceBeforeFix": "subProperties.put(subName,value)",
    "sourceAfterFix": "subProperties.putIfAbsent(subName,value)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "e0bd630e8adb61a9085a2cc3eb1302fcba9a47fd",
    "fixCommitParentSHA1": "85eb412d86166f21b59b5a308f521f5aa5bc9991",
    "bugFilePath": "dubbo-metadata-report/dubbo-metadata-report-api/src/test/java/org/apache/dubbo/metadata/integration/MetadataReportServiceTest.java",
    "fixPatch": "diff --git a/dubbo-metadata-report/dubbo-metadata-report-api/src/test/java/org/apache/dubbo/metadata/integration/MetadataReportServiceTest.java b/dubbo-metadata-report/dubbo-metadata-report-api/src/test/java/org/apache/dubbo/metadata/integration/MetadataReportServiceTest.java\nindex 343c910..ffd35d0 100644\n--- a/dubbo-metadata-report/dubbo-metadata-report-api/src/test/java/org/apache/dubbo/metadata/integration/MetadataReportServiceTest.java\n+++ b/dubbo-metadata-report/dubbo-metadata-report-api/src/test/java/org/apache/dubbo/metadata/integration/MetadataReportServiceTest.java\n@@ -78,7 +78,7 @@\n \n         URL publishUrl = URL.valueOf(\"dubbo://\" + NetUtils.getLocalAddress().getHostName() + \":4444/org.apache.dubbo.TestService?version=1.0.3&application=vicpubp&interface=org.apache.dubbo.metadata.integration.InterfaceNameTestService\");\n         metadataReportService1.publishProvider(publishUrl);\n-        Thread.sleep(100);\n+        Thread.sleep(300);\n \n         Assert.assertTrue(metadataReportService1.metadataReport instanceof JTestMetadataReport4Test);\n \n@@ -98,7 +98,7 @@\n \n         URL publishUrl = URL.valueOf(\"dubbo://\" + NetUtils.getLocalAddress().getHostName() + \":4444/org.apache.dubbo.TestService?version=1.0.x&application=vicpubconsumer&side=consumer\");\n         metadataReportService1.publishConsumer(publishUrl);\n-        Thread.sleep(100);\n+        Thread.sleep(300);\n \n         Assert.assertTrue(metadataReportService1.metadataReport instanceof JTestMetadataReport4Test);\n \n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 81,
    "bugNodeStartChar": 3185,
    "bugNodeLength": 17,
    "fixLineNum": 81,
    "fixNodeStartChar": 3185,
    "fixNodeLength": 17,
    "sourceBeforeFix": "Thread.sleep(100)",
    "sourceAfterFix": "Thread.sleep(300)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "e0bd630e8adb61a9085a2cc3eb1302fcba9a47fd",
    "fixCommitParentSHA1": "85eb412d86166f21b59b5a308f521f5aa5bc9991",
    "bugFilePath": "dubbo-metadata-report/dubbo-metadata-report-api/src/test/java/org/apache/dubbo/metadata/integration/MetadataReportServiceTest.java",
    "fixPatch": "diff --git a/dubbo-metadata-report/dubbo-metadata-report-api/src/test/java/org/apache/dubbo/metadata/integration/MetadataReportServiceTest.java b/dubbo-metadata-report/dubbo-metadata-report-api/src/test/java/org/apache/dubbo/metadata/integration/MetadataReportServiceTest.java\nindex 343c910..ffd35d0 100644\n--- a/dubbo-metadata-report/dubbo-metadata-report-api/src/test/java/org/apache/dubbo/metadata/integration/MetadataReportServiceTest.java\n+++ b/dubbo-metadata-report/dubbo-metadata-report-api/src/test/java/org/apache/dubbo/metadata/integration/MetadataReportServiceTest.java\n@@ -78,7 +78,7 @@\n \n         URL publishUrl = URL.valueOf(\"dubbo://\" + NetUtils.getLocalAddress().getHostName() + \":4444/org.apache.dubbo.TestService?version=1.0.3&application=vicpubp&interface=org.apache.dubbo.metadata.integration.InterfaceNameTestService\");\n         metadataReportService1.publishProvider(publishUrl);\n-        Thread.sleep(100);\n+        Thread.sleep(300);\n \n         Assert.assertTrue(metadataReportService1.metadataReport instanceof JTestMetadataReport4Test);\n \n@@ -98,7 +98,7 @@\n \n         URL publishUrl = URL.valueOf(\"dubbo://\" + NetUtils.getLocalAddress().getHostName() + \":4444/org.apache.dubbo.TestService?version=1.0.x&application=vicpubconsumer&side=consumer\");\n         metadataReportService1.publishConsumer(publishUrl);\n-        Thread.sleep(100);\n+        Thread.sleep(300);\n \n         Assert.assertTrue(metadataReportService1.metadataReport instanceof JTestMetadataReport4Test);\n \n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 101,
    "bugNodeStartChar": 4405,
    "bugNodeLength": 17,
    "fixLineNum": 101,
    "fixNodeStartChar": 4405,
    "fixNodeLength": 17,
    "sourceBeforeFix": "Thread.sleep(100)",
    "sourceAfterFix": "Thread.sleep(300)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8abd59029e7c0bc0973b492fd84a386b26661bc7",
    "fixCommitParentSHA1": "d8ed9fe97cd10f64b7e2ffbf8d36c7a198b6f23b",
    "bugFilePath": "dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/AbstractClient.java",
    "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/AbstractClient.java b/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/AbstractClient.java\nindex a945586..477fa71 100644\n--- a/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/AbstractClient.java\n+++ b/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/AbstractClient.java\n@@ -276,7 +276,7 @@\n             if (!isConnected()) {\n                 throw new RemotingException(this, \"Failed connect to server \" + getRemoteAddress() + \" from \" + getClass().getSimpleName() + \" \"\n                         + NetUtils.getLocalHost() + \" using dubbo version \" + Version.getVersion()\n-                        + \", cause: Connect wait timeout: \" + getTimeout() + \"ms.\");\n+                        + \", cause: Connect wait timeout: \" + getConnectTimeout() + \"ms.\");\n             } else {\n                 if (logger.isInfoEnabled()) {\n                     logger.info(\"Successed connect to server \" + getRemoteAddress() + \" from \" + getClass().getSimpleName() + \" \"\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 279,
    "bugNodeStartChar": 11935,
    "bugNodeLength": 12,
    "fixLineNum": 279,
    "fixNodeStartChar": 11935,
    "fixNodeLength": 19,
    "sourceBeforeFix": "getTimeout()",
    "sourceAfterFix": "getConnectTimeout()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8abd59029e7c0bc0973b492fd84a386b26661bc7",
    "fixCommitParentSHA1": "d8ed9fe97cd10f64b7e2ffbf8d36c7a198b6f23b",
    "bugFilePath": "dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/AbstractClient.java",
    "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/AbstractClient.java b/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/AbstractClient.java\nindex a945586..477fa71 100644\n--- a/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/AbstractClient.java\n+++ b/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/AbstractClient.java\n@@ -276,7 +276,7 @@\n             if (!isConnected()) {\n                 throw new RemotingException(this, \"Failed connect to server \" + getRemoteAddress() + \" from \" + getClass().getSimpleName() + \" \"\n                         + NetUtils.getLocalHost() + \" using dubbo version \" + Version.getVersion()\n-                        + \", cause: Connect wait timeout: \" + getTimeout() + \"ms.\");\n+                        + \", cause: Connect wait timeout: \" + getConnectTimeout() + \"ms.\");\n             } else {\n                 if (logger.isInfoEnabled()) {\n                     logger.info(\"Successed connect to server \" + getRemoteAddress() + \" from \" + getClass().getSimpleName() + \" \"\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 279,
    "bugNodeStartChar": 11935,
    "bugNodeLength": 12,
    "fixLineNum": 279,
    "fixNodeStartChar": 11935,
    "fixNodeLength": 19,
    "sourceBeforeFix": "getTimeout()",
    "sourceAfterFix": "getConnectTimeout()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8abd59029e7c0bc0973b492fd84a386b26661bc7",
    "fixCommitParentSHA1": "d8ed9fe97cd10f64b7e2ffbf8d36c7a198b6f23b",
    "bugFilePath": "dubbo-remoting/dubbo-remoting-grizzly/src/main/java/org/apache/dubbo/remoting/transport/grizzly/GrizzlyClient.java",
    "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-grizzly/src/main/java/org/apache/dubbo/remoting/transport/grizzly/GrizzlyClient.java b/dubbo-remoting/dubbo-remoting-grizzly/src/main/java/org/apache/dubbo/remoting/transport/grizzly/GrizzlyClient.java\nindex 30f47b8..2753d21 100644\n--- a/dubbo-remoting/dubbo-remoting-grizzly/src/main/java/org/apache/dubbo/remoting/transport/grizzly/GrizzlyClient.java\n+++ b/dubbo-remoting/dubbo-remoting-grizzly/src/main/java/org/apache/dubbo/remoting/transport/grizzly/GrizzlyClient.java\n@@ -66,7 +66,7 @@\n                 .setMaxPoolSize(Integer.MAX_VALUE)\r\n                 .setKeepAliveTime(60L, TimeUnit.SECONDS);\r\n         builder.setTcpNoDelay(true).setKeepAlive(true)\r\n-                .setConnectionTimeout(getTimeout())\r\n+                .setConnectionTimeout(getConnectTimeout())\r\n                 .setIOStrategy(SameThreadIOStrategy.getInstance());\r\n         transport = builder.build();\r\n         transport.setProcessor(filterChainBuilder.build());\r\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 69,
    "bugNodeStartChar": 2998,
    "bugNodeLength": 12,
    "fixLineNum": 69,
    "fixNodeStartChar": 2930,
    "fixNodeLength": 19,
    "sourceBeforeFix": "getTimeout()",
    "sourceAfterFix": "getConnectTimeout()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8abd59029e7c0bc0973b492fd84a386b26661bc7",
    "fixCommitParentSHA1": "d8ed9fe97cd10f64b7e2ffbf8d36c7a198b6f23b",
    "bugFilePath": "dubbo-remoting/dubbo-remoting-grizzly/src/main/java/org/apache/dubbo/remoting/transport/grizzly/GrizzlyClient.java",
    "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-grizzly/src/main/java/org/apache/dubbo/remoting/transport/grizzly/GrizzlyClient.java b/dubbo-remoting/dubbo-remoting-grizzly/src/main/java/org/apache/dubbo/remoting/transport/grizzly/GrizzlyClient.java\nindex 30f47b8..2753d21 100644\n--- a/dubbo-remoting/dubbo-remoting-grizzly/src/main/java/org/apache/dubbo/remoting/transport/grizzly/GrizzlyClient.java\n+++ b/dubbo-remoting/dubbo-remoting-grizzly/src/main/java/org/apache/dubbo/remoting/transport/grizzly/GrizzlyClient.java\n@@ -66,7 +66,7 @@\n                 .setMaxPoolSize(Integer.MAX_VALUE)\r\n                 .setKeepAliveTime(60L, TimeUnit.SECONDS);\r\n         builder.setTcpNoDelay(true).setKeepAlive(true)\r\n-                .setConnectionTimeout(getTimeout())\r\n+                .setConnectionTimeout(getConnectTimeout())\r\n                 .setIOStrategy(SameThreadIOStrategy.getInstance());\r\n         transport = builder.build();\r\n         transport.setProcessor(filterChainBuilder.build());\r\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 69,
    "bugNodeStartChar": 2998,
    "bugNodeLength": 12,
    "fixLineNum": 69,
    "fixNodeStartChar": 2930,
    "fixNodeLength": 19,
    "sourceBeforeFix": "getTimeout()",
    "sourceAfterFix": "getConnectTimeout()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8abd59029e7c0bc0973b492fd84a386b26661bc7",
    "fixCommitParentSHA1": "d8ed9fe97cd10f64b7e2ffbf8d36c7a198b6f23b",
    "bugFilePath": "dubbo-remoting/dubbo-remoting-mina/src/main/java/org/apache/dubbo/remoting/transport/mina/MinaClient.java",
    "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-mina/src/main/java/org/apache/dubbo/remoting/transport/mina/MinaClient.java b/dubbo-remoting/dubbo-remoting-mina/src/main/java/org/apache/dubbo/remoting/transport/mina/MinaClient.java\nindex 552becd..23296f7 100644\n--- a/dubbo-remoting/dubbo-remoting-mina/src/main/java/org/apache/dubbo/remoting/transport/mina/MinaClient.java\n+++ b/dubbo-remoting/dubbo-remoting-mina/src/main/java/org/apache/dubbo/remoting/transport/mina/MinaClient.java\n@@ -78,7 +78,7 @@\n             cfg.setThreadModel(ThreadModel.MANUAL);\n             cfg.getSessionConfig().setTcpNoDelay(true);\n             cfg.getSessionConfig().setKeepAlive(true);\n-            int timeout = getTimeout();\n+            int timeout = getConnectTimeout();\n             cfg.setConnectTimeout(timeout < 1000 ? 1 : timeout / 1000);\n             // set codec.\n             connector.getFilterChain().addLast(\"codec\", new ProtocolCodecFilter(new MinaCodecAdapter(getCodec(), getUrl(), this)));\n@@ -135,10 +135,10 @@\n             }\n         });\n         try {\n-            finish.await(getTimeout(), TimeUnit.MILLISECONDS);\n+            finish.await(getConnectTimeout(), TimeUnit.MILLISECONDS);\n         } catch (InterruptedException e) {\n             throw new RemotingException(this, \"client(url: \" + getUrl() + \") failed to connect to server \" + getRemoteAddress() + \" client-side timeout \"\n-                    + getTimeout() + \"ms (elapsed: \" + (System.currentTimeMillis() - start)\n+                    + getConnectTimeout() + \"ms (elapsed: \" + (System.currentTimeMillis() - start)\n                     + \"ms) from netty client \" + NetUtils.getLocalHost() + \" using dubbo version \"\n                     + Version.getVersion() + \", cause: \" + e.getMessage(), e);\n         }\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 81,
    "bugNodeStartChar": 3361,
    "bugNodeLength": 12,
    "fixLineNum": 81,
    "fixNodeStartChar": 3361,
    "fixNodeLength": 19,
    "sourceBeforeFix": "getTimeout()",
    "sourceAfterFix": "getConnectTimeout()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8abd59029e7c0bc0973b492fd84a386b26661bc7",
    "fixCommitParentSHA1": "d8ed9fe97cd10f64b7e2ffbf8d36c7a198b6f23b",
    "bugFilePath": "dubbo-remoting/dubbo-remoting-mina/src/main/java/org/apache/dubbo/remoting/transport/mina/MinaClient.java",
    "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-mina/src/main/java/org/apache/dubbo/remoting/transport/mina/MinaClient.java b/dubbo-remoting/dubbo-remoting-mina/src/main/java/org/apache/dubbo/remoting/transport/mina/MinaClient.java\nindex 552becd..23296f7 100644\n--- a/dubbo-remoting/dubbo-remoting-mina/src/main/java/org/apache/dubbo/remoting/transport/mina/MinaClient.java\n+++ b/dubbo-remoting/dubbo-remoting-mina/src/main/java/org/apache/dubbo/remoting/transport/mina/MinaClient.java\n@@ -78,7 +78,7 @@\n             cfg.setThreadModel(ThreadModel.MANUAL);\n             cfg.getSessionConfig().setTcpNoDelay(true);\n             cfg.getSessionConfig().setKeepAlive(true);\n-            int timeout = getTimeout();\n+            int timeout = getConnectTimeout();\n             cfg.setConnectTimeout(timeout < 1000 ? 1 : timeout / 1000);\n             // set codec.\n             connector.getFilterChain().addLast(\"codec\", new ProtocolCodecFilter(new MinaCodecAdapter(getCodec(), getUrl(), this)));\n@@ -135,10 +135,10 @@\n             }\n         });\n         try {\n-            finish.await(getTimeout(), TimeUnit.MILLISECONDS);\n+            finish.await(getConnectTimeout(), TimeUnit.MILLISECONDS);\n         } catch (InterruptedException e) {\n             throw new RemotingException(this, \"client(url: \" + getUrl() + \") failed to connect to server \" + getRemoteAddress() + \" client-side timeout \"\n-                    + getTimeout() + \"ms (elapsed: \" + (System.currentTimeMillis() - start)\n+                    + getConnectTimeout() + \"ms (elapsed: \" + (System.currentTimeMillis() - start)\n                     + \"ms) from netty client \" + NetUtils.getLocalHost() + \" using dubbo version \"\n                     + Version.getVersion() + \", cause: \" + e.getMessage(), e);\n         }\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 81,
    "bugNodeStartChar": 3361,
    "bugNodeLength": 12,
    "fixLineNum": 81,
    "fixNodeStartChar": 3361,
    "fixNodeLength": 19,
    "sourceBeforeFix": "getTimeout()",
    "sourceAfterFix": "getConnectTimeout()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8abd59029e7c0bc0973b492fd84a386b26661bc7",
    "fixCommitParentSHA1": "d8ed9fe97cd10f64b7e2ffbf8d36c7a198b6f23b",
    "bugFilePath": "dubbo-remoting/dubbo-remoting-mina/src/main/java/org/apache/dubbo/remoting/transport/mina/MinaClient.java",
    "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-mina/src/main/java/org/apache/dubbo/remoting/transport/mina/MinaClient.java b/dubbo-remoting/dubbo-remoting-mina/src/main/java/org/apache/dubbo/remoting/transport/mina/MinaClient.java\nindex 552becd..23296f7 100644\n--- a/dubbo-remoting/dubbo-remoting-mina/src/main/java/org/apache/dubbo/remoting/transport/mina/MinaClient.java\n+++ b/dubbo-remoting/dubbo-remoting-mina/src/main/java/org/apache/dubbo/remoting/transport/mina/MinaClient.java\n@@ -78,7 +78,7 @@\n             cfg.setThreadModel(ThreadModel.MANUAL);\n             cfg.getSessionConfig().setTcpNoDelay(true);\n             cfg.getSessionConfig().setKeepAlive(true);\n-            int timeout = getTimeout();\n+            int timeout = getConnectTimeout();\n             cfg.setConnectTimeout(timeout < 1000 ? 1 : timeout / 1000);\n             // set codec.\n             connector.getFilterChain().addLast(\"codec\", new ProtocolCodecFilter(new MinaCodecAdapter(getCodec(), getUrl(), this)));\n@@ -135,10 +135,10 @@\n             }\n         });\n         try {\n-            finish.await(getTimeout(), TimeUnit.MILLISECONDS);\n+            finish.await(getConnectTimeout(), TimeUnit.MILLISECONDS);\n         } catch (InterruptedException e) {\n             throw new RemotingException(this, \"client(url: \" + getUrl() + \") failed to connect to server \" + getRemoteAddress() + \" client-side timeout \"\n-                    + getTimeout() + \"ms (elapsed: \" + (System.currentTimeMillis() - start)\n+                    + getConnectTimeout() + \"ms (elapsed: \" + (System.currentTimeMillis() - start)\n                     + \"ms) from netty client \" + NetUtils.getLocalHost() + \" using dubbo version \"\n                     + Version.getVersion() + \", cause: \" + e.getMessage(), e);\n         }\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 138,
    "bugNodeStartChar": 6192,
    "bugNodeLength": 12,
    "fixLineNum": 138,
    "fixNodeStartChar": 6192,
    "fixNodeLength": 19,
    "sourceBeforeFix": "getTimeout()",
    "sourceAfterFix": "getConnectTimeout()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8abd59029e7c0bc0973b492fd84a386b26661bc7",
    "fixCommitParentSHA1": "d8ed9fe97cd10f64b7e2ffbf8d36c7a198b6f23b",
    "bugFilePath": "dubbo-remoting/dubbo-remoting-mina/src/main/java/org/apache/dubbo/remoting/transport/mina/MinaClient.java",
    "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-mina/src/main/java/org/apache/dubbo/remoting/transport/mina/MinaClient.java b/dubbo-remoting/dubbo-remoting-mina/src/main/java/org/apache/dubbo/remoting/transport/mina/MinaClient.java\nindex 552becd..23296f7 100644\n--- a/dubbo-remoting/dubbo-remoting-mina/src/main/java/org/apache/dubbo/remoting/transport/mina/MinaClient.java\n+++ b/dubbo-remoting/dubbo-remoting-mina/src/main/java/org/apache/dubbo/remoting/transport/mina/MinaClient.java\n@@ -78,7 +78,7 @@\n             cfg.setThreadModel(ThreadModel.MANUAL);\n             cfg.getSessionConfig().setTcpNoDelay(true);\n             cfg.getSessionConfig().setKeepAlive(true);\n-            int timeout = getTimeout();\n+            int timeout = getConnectTimeout();\n             cfg.setConnectTimeout(timeout < 1000 ? 1 : timeout / 1000);\n             // set codec.\n             connector.getFilterChain().addLast(\"codec\", new ProtocolCodecFilter(new MinaCodecAdapter(getCodec(), getUrl(), this)));\n@@ -135,10 +135,10 @@\n             }\n         });\n         try {\n-            finish.await(getTimeout(), TimeUnit.MILLISECONDS);\n+            finish.await(getConnectTimeout(), TimeUnit.MILLISECONDS);\n         } catch (InterruptedException e) {\n             throw new RemotingException(this, \"client(url: \" + getUrl() + \") failed to connect to server \" + getRemoteAddress() + \" client-side timeout \"\n-                    + getTimeout() + \"ms (elapsed: \" + (System.currentTimeMillis() - start)\n+                    + getConnectTimeout() + \"ms (elapsed: \" + (System.currentTimeMillis() - start)\n                     + \"ms) from netty client \" + NetUtils.getLocalHost() + \" using dubbo version \"\n                     + Version.getVersion() + \", cause: \" + e.getMessage(), e);\n         }\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 138,
    "bugNodeStartChar": 6192,
    "bugNodeLength": 12,
    "fixLineNum": 138,
    "fixNodeStartChar": 6192,
    "fixNodeLength": 19,
    "sourceBeforeFix": "getTimeout()",
    "sourceAfterFix": "getConnectTimeout()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8abd59029e7c0bc0973b492fd84a386b26661bc7",
    "fixCommitParentSHA1": "d8ed9fe97cd10f64b7e2ffbf8d36c7a198b6f23b",
    "bugFilePath": "dubbo-remoting/dubbo-remoting-mina/src/main/java/org/apache/dubbo/remoting/transport/mina/MinaClient.java",
    "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-mina/src/main/java/org/apache/dubbo/remoting/transport/mina/MinaClient.java b/dubbo-remoting/dubbo-remoting-mina/src/main/java/org/apache/dubbo/remoting/transport/mina/MinaClient.java\nindex 552becd..23296f7 100644\n--- a/dubbo-remoting/dubbo-remoting-mina/src/main/java/org/apache/dubbo/remoting/transport/mina/MinaClient.java\n+++ b/dubbo-remoting/dubbo-remoting-mina/src/main/java/org/apache/dubbo/remoting/transport/mina/MinaClient.java\n@@ -78,7 +78,7 @@\n             cfg.setThreadModel(ThreadModel.MANUAL);\n             cfg.getSessionConfig().setTcpNoDelay(true);\n             cfg.getSessionConfig().setKeepAlive(true);\n-            int timeout = getTimeout();\n+            int timeout = getConnectTimeout();\n             cfg.setConnectTimeout(timeout < 1000 ? 1 : timeout / 1000);\n             // set codec.\n             connector.getFilterChain().addLast(\"codec\", new ProtocolCodecFilter(new MinaCodecAdapter(getCodec(), getUrl(), this)));\n@@ -135,10 +135,10 @@\n             }\n         });\n         try {\n-            finish.await(getTimeout(), TimeUnit.MILLISECONDS);\n+            finish.await(getConnectTimeout(), TimeUnit.MILLISECONDS);\n         } catch (InterruptedException e) {\n             throw new RemotingException(this, \"client(url: \" + getUrl() + \") failed to connect to server \" + getRemoteAddress() + \" client-side timeout \"\n-                    + getTimeout() + \"ms (elapsed: \" + (System.currentTimeMillis() - start)\n+                    + getConnectTimeout() + \"ms (elapsed: \" + (System.currentTimeMillis() - start)\n                     + \"ms) from netty client \" + NetUtils.getLocalHost() + \" using dubbo version \"\n                     + Version.getVersion() + \", cause: \" + e.getMessage(), e);\n         }\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 141,
    "bugNodeStartChar": 6449,
    "bugNodeLength": 12,
    "fixLineNum": 141,
    "fixNodeStartChar": 6449,
    "fixNodeLength": 19,
    "sourceBeforeFix": "getTimeout()",
    "sourceAfterFix": "getConnectTimeout()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8abd59029e7c0bc0973b492fd84a386b26661bc7",
    "fixCommitParentSHA1": "d8ed9fe97cd10f64b7e2ffbf8d36c7a198b6f23b",
    "bugFilePath": "dubbo-remoting/dubbo-remoting-mina/src/main/java/org/apache/dubbo/remoting/transport/mina/MinaClient.java",
    "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-mina/src/main/java/org/apache/dubbo/remoting/transport/mina/MinaClient.java b/dubbo-remoting/dubbo-remoting-mina/src/main/java/org/apache/dubbo/remoting/transport/mina/MinaClient.java\nindex 552becd..23296f7 100644\n--- a/dubbo-remoting/dubbo-remoting-mina/src/main/java/org/apache/dubbo/remoting/transport/mina/MinaClient.java\n+++ b/dubbo-remoting/dubbo-remoting-mina/src/main/java/org/apache/dubbo/remoting/transport/mina/MinaClient.java\n@@ -78,7 +78,7 @@\n             cfg.setThreadModel(ThreadModel.MANUAL);\n             cfg.getSessionConfig().setTcpNoDelay(true);\n             cfg.getSessionConfig().setKeepAlive(true);\n-            int timeout = getTimeout();\n+            int timeout = getConnectTimeout();\n             cfg.setConnectTimeout(timeout < 1000 ? 1 : timeout / 1000);\n             // set codec.\n             connector.getFilterChain().addLast(\"codec\", new ProtocolCodecFilter(new MinaCodecAdapter(getCodec(), getUrl(), this)));\n@@ -135,10 +135,10 @@\n             }\n         });\n         try {\n-            finish.await(getTimeout(), TimeUnit.MILLISECONDS);\n+            finish.await(getConnectTimeout(), TimeUnit.MILLISECONDS);\n         } catch (InterruptedException e) {\n             throw new RemotingException(this, \"client(url: \" + getUrl() + \") failed to connect to server \" + getRemoteAddress() + \" client-side timeout \"\n-                    + getTimeout() + \"ms (elapsed: \" + (System.currentTimeMillis() - start)\n+                    + getConnectTimeout() + \"ms (elapsed: \" + (System.currentTimeMillis() - start)\n                     + \"ms) from netty client \" + NetUtils.getLocalHost() + \" using dubbo version \"\n                     + Version.getVersion() + \", cause: \" + e.getMessage(), e);\n         }\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 141,
    "bugNodeStartChar": 6449,
    "bugNodeLength": 12,
    "fixLineNum": 141,
    "fixNodeStartChar": 6449,
    "fixNodeLength": 19,
    "sourceBeforeFix": "getTimeout()",
    "sourceAfterFix": "getConnectTimeout()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8abd59029e7c0bc0973b492fd84a386b26661bc7",
    "fixCommitParentSHA1": "d8ed9fe97cd10f64b7e2ffbf8d36c7a198b6f23b",
    "bugFilePath": "dubbo-remoting/dubbo-remoting-netty/src/main/java/org/apache/dubbo/remoting/transport/netty/NettyClient.java",
    "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-netty/src/main/java/org/apache/dubbo/remoting/transport/netty/NettyClient.java b/dubbo-remoting/dubbo-remoting-netty/src/main/java/org/apache/dubbo/remoting/transport/netty/NettyClient.java\nindex a91aa58..574402f 100644\n--- a/dubbo-remoting/dubbo-remoting-netty/src/main/java/org/apache/dubbo/remoting/transport/netty/NettyClient.java\n+++ b/dubbo-remoting/dubbo-remoting-netty/src/main/java/org/apache/dubbo/remoting/transport/netty/NettyClient.java\n@@ -67,7 +67,7 @@\n         // @see org.jboss.netty.channel.socket.SocketChannelConfig\r\n         bootstrap.setOption(\"keepAlive\", true);\r\n         bootstrap.setOption(\"tcpNoDelay\", true);\r\n-        bootstrap.setOption(\"connectTimeoutMillis\", getTimeout());\r\n+        bootstrap.setOption(\"connectTimeoutMillis\", getConnectTimeout());\r\n         final NettyHandler nettyHandler = new NettyHandler(getUrl(), this);\r\n         bootstrap.setPipelineFactory(new ChannelPipelineFactory() {\r\n             @Override\r\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 70,
    "bugNodeStartChar": 3155,
    "bugNodeLength": 12,
    "fixLineNum": 70,
    "fixNodeStartChar": 3086,
    "fixNodeLength": 19,
    "sourceBeforeFix": "getTimeout()",
    "sourceAfterFix": "getConnectTimeout()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8abd59029e7c0bc0973b492fd84a386b26661bc7",
    "fixCommitParentSHA1": "d8ed9fe97cd10f64b7e2ffbf8d36c7a198b6f23b",
    "bugFilePath": "dubbo-remoting/dubbo-remoting-netty/src/main/java/org/apache/dubbo/remoting/transport/netty/NettyClient.java",
    "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-netty/src/main/java/org/apache/dubbo/remoting/transport/netty/NettyClient.java b/dubbo-remoting/dubbo-remoting-netty/src/main/java/org/apache/dubbo/remoting/transport/netty/NettyClient.java\nindex a91aa58..574402f 100644\n--- a/dubbo-remoting/dubbo-remoting-netty/src/main/java/org/apache/dubbo/remoting/transport/netty/NettyClient.java\n+++ b/dubbo-remoting/dubbo-remoting-netty/src/main/java/org/apache/dubbo/remoting/transport/netty/NettyClient.java\n@@ -67,7 +67,7 @@\n         // @see org.jboss.netty.channel.socket.SocketChannelConfig\r\n         bootstrap.setOption(\"keepAlive\", true);\r\n         bootstrap.setOption(\"tcpNoDelay\", true);\r\n-        bootstrap.setOption(\"connectTimeoutMillis\", getTimeout());\r\n+        bootstrap.setOption(\"connectTimeoutMillis\", getConnectTimeout());\r\n         final NettyHandler nettyHandler = new NettyHandler(getUrl(), this);\r\n         bootstrap.setPipelineFactory(new ChannelPipelineFactory() {\r\n             @Override\r\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 70,
    "bugNodeStartChar": 3155,
    "bugNodeLength": 12,
    "fixLineNum": 70,
    "fixNodeStartChar": 3086,
    "fixNodeLength": 19,
    "sourceBeforeFix": "getTimeout()",
    "sourceAfterFix": "getConnectTimeout()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8abd59029e7c0bc0973b492fd84a386b26661bc7",
    "fixCommitParentSHA1": "d8ed9fe97cd10f64b7e2ffbf8d36c7a198b6f23b",
    "bugFilePath": "dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java",
    "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java b/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java\nindex 48e669c..19b56ae 100644\n--- a/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java\n+++ b/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java\n@@ -66,10 +66,10 @@\n                 //.option(ChannelOption.CONNECT_TIMEOUT_MILLIS, getTimeout())\n                 .channel(NioSocketChannel.class);\n \n-        if (getTimeout() < 3000) {\n+        if (getConnectTimeout() < 3000) {\n             bootstrap.option(ChannelOption.CONNECT_TIMEOUT_MILLIS, 3000);\n         } else {\n-            bootstrap.option(ChannelOption.CONNECT_TIMEOUT_MILLIS, getTimeout());\n+            bootstrap.option(ChannelOption.CONNECT_TIMEOUT_MILLIS, getConnectTimeout());\n         }\n \n         bootstrap.handler(new ChannelInitializer() {\n@@ -90,7 +90,7 @@\n         long start = System.currentTimeMillis();\n         ChannelFuture future = bootstrap.connect(getConnectAddress());\n         try {\n-            boolean ret = future.awaitUninterruptibly(3000, TimeUnit.MILLISECONDS);\n+            boolean ret = future.awaitUninterruptibly(getConnectTimeout(), TimeUnit.MILLISECONDS);\n \n             if (ret && future.isSuccess()) {\n                 Channel newChannel = future.channel();\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 69,
    "bugNodeStartChar": 2887,
    "bugNodeLength": 12,
    "fixLineNum": 69,
    "fixNodeStartChar": 2887,
    "fixNodeLength": 19,
    "sourceBeforeFix": "getTimeout()",
    "sourceAfterFix": "getConnectTimeout()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8abd59029e7c0bc0973b492fd84a386b26661bc7",
    "fixCommitParentSHA1": "d8ed9fe97cd10f64b7e2ffbf8d36c7a198b6f23b",
    "bugFilePath": "dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java",
    "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java b/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java\nindex 48e669c..19b56ae 100644\n--- a/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java\n+++ b/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java\n@@ -66,10 +66,10 @@\n                 //.option(ChannelOption.CONNECT_TIMEOUT_MILLIS, getTimeout())\n                 .channel(NioSocketChannel.class);\n \n-        if (getTimeout() < 3000) {\n+        if (getConnectTimeout() < 3000) {\n             bootstrap.option(ChannelOption.CONNECT_TIMEOUT_MILLIS, 3000);\n         } else {\n-            bootstrap.option(ChannelOption.CONNECT_TIMEOUT_MILLIS, getTimeout());\n+            bootstrap.option(ChannelOption.CONNECT_TIMEOUT_MILLIS, getConnectTimeout());\n         }\n \n         bootstrap.handler(new ChannelInitializer() {\n@@ -90,7 +90,7 @@\n         long start = System.currentTimeMillis();\n         ChannelFuture future = bootstrap.connect(getConnectAddress());\n         try {\n-            boolean ret = future.awaitUninterruptibly(3000, TimeUnit.MILLISECONDS);\n+            boolean ret = future.awaitUninterruptibly(getConnectTimeout(), TimeUnit.MILLISECONDS);\n \n             if (ret && future.isSuccess()) {\n                 Channel newChannel = future.channel();\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 69,
    "bugNodeStartChar": 2887,
    "bugNodeLength": 12,
    "fixLineNum": 69,
    "fixNodeStartChar": 2887,
    "fixNodeLength": 19,
    "sourceBeforeFix": "getTimeout()",
    "sourceAfterFix": "getConnectTimeout()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8abd59029e7c0bc0973b492fd84a386b26661bc7",
    "fixCommitParentSHA1": "d8ed9fe97cd10f64b7e2ffbf8d36c7a198b6f23b",
    "bugFilePath": "dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java",
    "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java b/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java\nindex 48e669c..19b56ae 100644\n--- a/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java\n+++ b/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java\n@@ -66,10 +66,10 @@\n                 //.option(ChannelOption.CONNECT_TIMEOUT_MILLIS, getTimeout())\n                 .channel(NioSocketChannel.class);\n \n-        if (getTimeout() < 3000) {\n+        if (getConnectTimeout() < 3000) {\n             bootstrap.option(ChannelOption.CONNECT_TIMEOUT_MILLIS, 3000);\n         } else {\n-            bootstrap.option(ChannelOption.CONNECT_TIMEOUT_MILLIS, getTimeout());\n+            bootstrap.option(ChannelOption.CONNECT_TIMEOUT_MILLIS, getConnectTimeout());\n         }\n \n         bootstrap.handler(new ChannelInitializer() {\n@@ -90,7 +90,7 @@\n         long start = System.currentTimeMillis();\n         ChannelFuture future = bootstrap.connect(getConnectAddress());\n         try {\n-            boolean ret = future.awaitUninterruptibly(3000, TimeUnit.MILLISECONDS);\n+            boolean ret = future.awaitUninterruptibly(getConnectTimeout(), TimeUnit.MILLISECONDS);\n \n             if (ret && future.isSuccess()) {\n                 Channel newChannel = future.channel();\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 72,
    "bugNodeStartChar": 3068,
    "bugNodeLength": 12,
    "fixLineNum": 72,
    "fixNodeStartChar": 3068,
    "fixNodeLength": 19,
    "sourceBeforeFix": "getTimeout()",
    "sourceAfterFix": "getConnectTimeout()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8abd59029e7c0bc0973b492fd84a386b26661bc7",
    "fixCommitParentSHA1": "d8ed9fe97cd10f64b7e2ffbf8d36c7a198b6f23b",
    "bugFilePath": "dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java",
    "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java b/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java\nindex 48e669c..19b56ae 100644\n--- a/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java\n+++ b/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java\n@@ -66,10 +66,10 @@\n                 //.option(ChannelOption.CONNECT_TIMEOUT_MILLIS, getTimeout())\n                 .channel(NioSocketChannel.class);\n \n-        if (getTimeout() < 3000) {\n+        if (getConnectTimeout() < 3000) {\n             bootstrap.option(ChannelOption.CONNECT_TIMEOUT_MILLIS, 3000);\n         } else {\n-            bootstrap.option(ChannelOption.CONNECT_TIMEOUT_MILLIS, getTimeout());\n+            bootstrap.option(ChannelOption.CONNECT_TIMEOUT_MILLIS, getConnectTimeout());\n         }\n \n         bootstrap.handler(new ChannelInitializer() {\n@@ -90,7 +90,7 @@\n         long start = System.currentTimeMillis();\n         ChannelFuture future = bootstrap.connect(getConnectAddress());\n         try {\n-            boolean ret = future.awaitUninterruptibly(3000, TimeUnit.MILLISECONDS);\n+            boolean ret = future.awaitUninterruptibly(getConnectTimeout(), TimeUnit.MILLISECONDS);\n \n             if (ret && future.isSuccess()) {\n                 Channel newChannel = future.channel();\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 72,
    "bugNodeStartChar": 3068,
    "bugNodeLength": 12,
    "fixLineNum": 72,
    "fixNodeStartChar": 3068,
    "fixNodeLength": 19,
    "sourceBeforeFix": "getTimeout()",
    "sourceAfterFix": "getConnectTimeout()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "040343b917a3989fe6fba30a6deddb8974a68bb5",
    "fixCommitParentSHA1": "6edfb1da28d7bc880682e7c8c4748a7053afb429",
    "bugFilePath": "dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/support/AbstractRegistryFactory.java",
    "fixPatch": "diff --git a/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/support/AbstractRegistryFactory.java b/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/support/AbstractRegistryFactory.java\nindex 4c83ea3..8347d9a 100644\n--- a/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/support/AbstractRegistryFactory.java\n+++ b/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/support/AbstractRegistryFactory.java\n@@ -85,7 +85,7 @@\n         url = url.setPath(RegistryService.class.getName())\r\n                 .addParameter(Constants.INTERFACE_KEY, RegistryService.class.getName())\r\n                 .removeParameters(Constants.EXPORT_KEY, Constants.REFER_KEY);\r\n-        String key = url.toServiceString();\r\n+        String key = url.toServiceStringWithoutResolving();\r\n         // Lock the registry access process to ensure a single instance of the registry\r\n         LOCK.lock();\r\n         try {\r\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 88,
    "bugNodeStartChar": 3264,
    "bugNodeLength": 21,
    "fixLineNum": 88,
    "fixNodeStartChar": 3177,
    "fixNodeLength": 37,
    "sourceBeforeFix": "url.toServiceString()",
    "sourceAfterFix": "url.toServiceStringWithoutResolving()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "040343b917a3989fe6fba30a6deddb8974a68bb5",
    "fixCommitParentSHA1": "6edfb1da28d7bc880682e7c8c4748a7053afb429",
    "bugFilePath": "dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/support/AbstractRegistryFactory.java",
    "fixPatch": "diff --git a/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/support/AbstractRegistryFactory.java b/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/support/AbstractRegistryFactory.java\nindex 4c83ea3..8347d9a 100644\n--- a/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/support/AbstractRegistryFactory.java\n+++ b/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/support/AbstractRegistryFactory.java\n@@ -85,7 +85,7 @@\n         url = url.setPath(RegistryService.class.getName())\r\n                 .addParameter(Constants.INTERFACE_KEY, RegistryService.class.getName())\r\n                 .removeParameters(Constants.EXPORT_KEY, Constants.REFER_KEY);\r\n-        String key = url.toServiceString();\r\n+        String key = url.toServiceStringWithoutResolving();\r\n         // Lock the registry access process to ensure a single instance of the registry\r\n         LOCK.lock();\r\n         try {\r\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 88,
    "bugNodeStartChar": 3264,
    "bugNodeLength": 21,
    "fixLineNum": 88,
    "fixNodeStartChar": 3177,
    "fixNodeLength": 37,
    "sourceBeforeFix": "url.toServiceString()",
    "sourceAfterFix": "url.toServiceStringWithoutResolving()"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "cd7ba294b22a9b392030fe5c6ee06247fc7868c1",
    "fixCommitParentSHA1": "00b718cbb214d82f6781c82b18c0c5c605940b98",
    "bugFilePath": "dubbo-common/src/main/java/org/apache/dubbo/common/utils/ConfigUtils.java",
    "fixPatch": "diff --git a/dubbo-common/src/main/java/org/apache/dubbo/common/utils/ConfigUtils.java b/dubbo-common/src/main/java/org/apache/dubbo/common/utils/ConfigUtils.java\nindex f112ec2..436cf8f 100644\n--- a/dubbo-common/src/main/java/org/apache/dubbo/common/utils/ConfigUtils.java\n+++ b/dubbo-common/src/main/java/org/apache/dubbo/common/utils/ConfigUtils.java\n@@ -217,7 +217,8 @@\n      */\r\n     public static Properties loadProperties(String fileName, boolean allowMultiFile, boolean optional) {\r\n         Properties properties = new Properties();\r\n-        if (fileName.startsWith(\"/\")) {\r\n+        // add scene judgement in windows environment Fix 2557\r\n+        if (fileName.startsWith(\"/\") || fileName.matches(\"^[A-z]:\\\\\\\\\\\\S+$\")) {\r\n             try {\r\n                 FileInputStream input = new FileInputStream(fileName);\r\n                 try {\r\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 220,
    "bugNodeStartChar": 8484,
    "bugNodeLength": 24,
    "fixLineNum": 221,
    "fixNodeStartChar": 8328,
    "fixNodeLength": 64,
    "sourceBeforeFix": "fileName.startsWith(\"/\")",
    "sourceAfterFix": "fileName.startsWith(\"/\") || fileName.matches(\"^[A-z]:\\\\\\\\\\\\S+$\")"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "49f1caa69fb438d1fc9c8413da4a5bb517a63600",
    "fixCommitParentSHA1": "e37319d3eaeeec9cf0d4b2c331e5c43b089eecf4",
    "bugFilePath": "dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/ZKTools.java",
    "fixPatch": "diff --git a/dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/ZKTools.java b/dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/ZKTools.java\nindex 1072e31..e310349 100644\n--- a/dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/ZKTools.java\n+++ b/dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/ZKTools.java\n@@ -43,7 +43,7 @@\n                 new ExponentialBackoffRetry(1000, 3));\n         client.start();\n \n-        testConsumerConfig();\n+        testProviderConfig();\n //        testPathCache();\n //        testTreeCache();\n //        testCuratorListener();\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 46,
    "bugNodeStartChar": 1862,
    "bugNodeLength": 20,
    "fixLineNum": 46,
    "fixNodeStartChar": 1862,
    "fixNodeLength": 20,
    "sourceBeforeFix": "testConsumerConfig()",
    "sourceAfterFix": "testProviderConfig()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "49f1caa69fb438d1fc9c8413da4a5bb517a63600",
    "fixCommitParentSHA1": "e37319d3eaeeec9cf0d4b2c331e5c43b089eecf4",
    "bugFilePath": "dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/ZKTools.java",
    "fixPatch": "diff --git a/dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/ZKTools.java b/dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/ZKTools.java\nindex 1072e31..e310349 100644\n--- a/dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/ZKTools.java\n+++ b/dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/ZKTools.java\n@@ -43,7 +43,7 @@\n                 new ExponentialBackoffRetry(1000, 3));\n         client.start();\n \n-        testConsumerConfig();\n+        testProviderConfig();\n //        testPathCache();\n //        testTreeCache();\n //        testCuratorListener();\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 46,
    "bugNodeStartChar": 1862,
    "bugNodeLength": 20,
    "fixLineNum": 46,
    "fixNodeStartChar": 1862,
    "fixNodeLength": 20,
    "sourceBeforeFix": "testConsumerConfig()",
    "sourceAfterFix": "testProviderConfig()"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "4ef7f28d367d8f2066871575ab6d2d985f8f8928",
    "fixCommitParentSHA1": "507f5bfc2967442a5b40b2f535c9f17cd5519ef0",
    "bugFilePath": "dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/router/InvokerTreeCache.java",
    "fixPatch": "diff --git a/dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/router/InvokerTreeCache.java b/dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/router/InvokerTreeCache.java\nindex 7a497a3..5ce835b 100644\n--- a/dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/router/InvokerTreeCache.java\n+++ b/dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/router/InvokerTreeCache.java\n@@ -31,7 +31,7 @@\n  */\n public class InvokerTreeCache<T> {\n \n-    TreeNode<T> tree;\n+    private TreeNode<T> tree;\n \n     public TreeNode buildTree() {\n         tree = new TreeNode<>();\n@@ -43,7 +43,7 @@\n \n     public List<Invoker<T>> getInvokers(TreeNode<T> node, URL url, Invocation invocation) {\n         // We have reached the leaf node.\n-        if (node.getChildren() == null || node.getChildren().size() == 0) {\n+        if (node.isLeaf()) {\n             return node.getInvokers();\n         }\n \n@@ -102,7 +102,7 @@\n             String forceKey = \"force.\" + failoverNode.getConditionKey();\n             if (Boolean.valueOf(invocation.getAttachment(forceKey, url.getParameter(forceKey, \"false\")))) {\n                 /**\n-                 * This may mistakely return empty list for runtime routers\n+                 * This may mistakenly return empty list for runtime routers\n                  * see {@link org.apache.dubbo.rpc.cluster.router.tag.TagRouter.getKey()} for the workaround.\n                  */\n                 return Collections.emptyList();\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 34,
    "bugNodeStartChar": 1213,
    "bugNodeLength": 17,
    "fixLineNum": 34,
    "fixNodeStartChar": 1213,
    "fixNodeLength": 25,
    "sourceBeforeFix": "0",
    "sourceAfterFix": "2"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "f2188d334cf2e91dbd62f84aeba025186738f4ea",
    "fixCommitParentSHA1": "f364a44fa21c90120749de4335ce1cee4215536d",
    "bugFilePath": "dubbo-compatible/src/main/java/com/alibaba/dubbo/config/annotation/Reference.java",
    "fixPatch": "diff --git a/dubbo-compatible/src/main/java/com/alibaba/dubbo/config/annotation/Reference.java b/dubbo-compatible/src/main/java/com/alibaba/dubbo/config/annotation/Reference.java\nindex 450170a..4c1ca97 100644\n--- a/dubbo-compatible/src/main/java/com/alibaba/dubbo/config/annotation/Reference.java\n+++ b/dubbo-compatible/src/main/java/com/alibaba/dubbo/config/annotation/Reference.java\n@@ -75,7 +75,7 @@\n \n     String layer() default \"\";\n \n-    int retries() default 0;\n+    int retries() default 2;\n \n     String loadbalance() default \"\";\n \n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 78,
    "bugNodeStartChar": 2038,
    "bugNodeLength": 24,
    "fixLineNum": 78,
    "fixNodeStartChar": 2038,
    "fixNodeLength": 24,
    "sourceBeforeFix": "int retries() default 0; ",
    "sourceAfterFix": "int retries() default 2; "
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "f2188d334cf2e91dbd62f84aeba025186738f4ea",
    "fixCommitParentSHA1": "f364a44fa21c90120749de4335ce1cee4215536d",
    "bugFilePath": "dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/annotation/Reference.java",
    "fixPatch": "diff --git a/dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/annotation/Reference.java b/dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/annotation/Reference.java\nindex 3a2fe03..63e2cd5 100644\n--- a/dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/annotation/Reference.java\n+++ b/dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/annotation/Reference.java\n@@ -164,7 +164,7 @@\n      *\r\n      * @see Constants#DEFAULT_RETRIES\r\n      */\r\n-    int retries() default 0;\r\n+    int retries() default 2;\r\n \r\n     /**\r\n      * Load balance strategy, legal values include: random, roundrobin, leastactive\r\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 162,
    "bugNodeStartChar": 4705,
    "bugNodeLength": 128,
    "fixLineNum": 162,
    "fixNodeStartChar": 4544,
    "fixNodeLength": 123,
    "sourceBeforeFix": "/**   * Service invocation retry times  * @see Constants#DEFAULT_RETRIES  */ int retries() default 0; ",
    "sourceAfterFix": "/**   * Service invocation retry times  * @see Constants#DEFAULT_RETRIES  */ int retries() default 2; "
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "f2188d334cf2e91dbd62f84aeba025186738f4ea",
    "fixCommitParentSHA1": "f364a44fa21c90120749de4335ce1cee4215536d",
    "bugFilePath": "dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/beans/factory/annotation/AnnotationPropertyValuesAdapterTest.java",
    "fixPatch": "diff --git a/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/beans/factory/annotation/AnnotationPropertyValuesAdapterTest.java b/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/beans/factory/annotation/AnnotationPropertyValuesAdapterTest.java\nindex d5889fa..94148e6 100644\n--- a/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/beans/factory/annotation/AnnotationPropertyValuesAdapterTest.java\n+++ b/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/beans/factory/annotation/AnnotationPropertyValuesAdapterTest.java\n@@ -113,7 +113,7 @@\n         Assert.assertEquals(\"ondisconnect\", referenceBean.getOndisconnect());\n         Assert.assertEquals(\"owner\", referenceBean.getOwner());\n         Assert.assertEquals(\"layer\", referenceBean.getLayer());\n-        Assert.assertEquals(Integer.valueOf(2), referenceBean.getRetries());\n+        Assert.assertEquals(Integer.valueOf(1), referenceBean.getRetries());\n         Assert.assertEquals(\"random\", referenceBean.getLoadbalance());\n         Assert.assertEquals(true, referenceBean.isAsync());\n         Assert.assertEquals(Integer.valueOf(1), referenceBean.getActives());\n@@ -147,7 +147,7 @@\n                 check = false, init = true, lazy = true, stubevent = true,\n                 reconnect = \"reconnect\", sticky = true, proxy = \"javassist\", stub = \"stub\",\n                 cluster = \"failover\", connections = 1, callbacks = 1, onconnect = \"onconnect\",\n-                ondisconnect = \"ondisconnect\", owner = \"owner\", layer = \"layer\", retries = 2,\n+                ondisconnect = \"ondisconnect\", owner = \"owner\", layer = \"layer\", retries = 1,\n                 loadbalance = \"random\", async = true, actives = 1, sent = true,\n                 mock = \"mock\", validation = \"validation\", timeout = 2, cache = \"cache\",\n                 filter = {\"default\", \"default\"}, listener = {\"default\", \"default\"}, parameters = {\"key1\", \"value1\"}, application = \"application\",\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 116,
    "bugNodeStartChar": 4899,
    "bugNodeLength": 18,
    "fixLineNum": 116,
    "fixNodeStartChar": 4899,
    "fixNodeLength": 18,
    "sourceBeforeFix": "Integer.valueOf(2)",
    "sourceAfterFix": "Integer.valueOf(1)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "f2188d334cf2e91dbd62f84aeba025186738f4ea",
    "fixCommitParentSHA1": "f364a44fa21c90120749de4335ce1cee4215536d",
    "bugFilePath": "dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/beans/factory/annotation/AnnotationPropertyValuesAdapterTest.java",
    "fixPatch": "diff --git a/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/beans/factory/annotation/AnnotationPropertyValuesAdapterTest.java b/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/beans/factory/annotation/AnnotationPropertyValuesAdapterTest.java\nindex d5889fa..94148e6 100644\n--- a/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/beans/factory/annotation/AnnotationPropertyValuesAdapterTest.java\n+++ b/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/beans/factory/annotation/AnnotationPropertyValuesAdapterTest.java\n@@ -113,7 +113,7 @@\n         Assert.assertEquals(\"ondisconnect\", referenceBean.getOndisconnect());\n         Assert.assertEquals(\"owner\", referenceBean.getOwner());\n         Assert.assertEquals(\"layer\", referenceBean.getLayer());\n-        Assert.assertEquals(Integer.valueOf(2), referenceBean.getRetries());\n+        Assert.assertEquals(Integer.valueOf(1), referenceBean.getRetries());\n         Assert.assertEquals(\"random\", referenceBean.getLoadbalance());\n         Assert.assertEquals(true, referenceBean.isAsync());\n         Assert.assertEquals(Integer.valueOf(1), referenceBean.getActives());\n@@ -147,7 +147,7 @@\n                 check = false, init = true, lazy = true, stubevent = true,\n                 reconnect = \"reconnect\", sticky = true, proxy = \"javassist\", stub = \"stub\",\n                 cluster = \"failover\", connections = 1, callbacks = 1, onconnect = \"onconnect\",\n-                ondisconnect = \"ondisconnect\", owner = \"owner\", layer = \"layer\", retries = 2,\n+                ondisconnect = \"ondisconnect\", owner = \"owner\", layer = \"layer\", retries = 1,\n                 loadbalance = \"random\", async = true, actives = 1, sent = true,\n                 mock = \"mock\", validation = \"validation\", timeout = 2, cache = \"cache\",\n                 filter = {\"default\", \"default\"}, listener = {\"default\", \"default\"}, parameters = {\"key1\", \"value1\"}, application = \"application\",\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 150,
    "bugNodeStartChar": 6885,
    "bugNodeLength": 11,
    "fixLineNum": 150,
    "fixNodeStartChar": 6885,
    "fixNodeLength": 11,
    "sourceBeforeFix": "retries=2",
    "sourceAfterFix": "retries=1"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "42ba20ed43331f0e3e1c4a4ea75fcb34f564b796",
    "fixCommitParentSHA1": "7df5eb6a3b2da91f8b13a6c8eb36ea47f43f87ba",
    "bugFilePath": "dubbo-rpc/dubbo-rpc-api/src/main/java/com/alibaba/dubbo/rpc/protocol/AbstractInvoker.java",
    "fixPatch": "diff --git a/dubbo-rpc/dubbo-rpc-api/src/main/java/com/alibaba/dubbo/rpc/protocol/AbstractInvoker.java b/dubbo-rpc/dubbo-rpc-api/src/main/java/com/alibaba/dubbo/rpc/protocol/AbstractInvoker.java\nindex eee7db4..2d8c8d9 100644\n--- a/dubbo-rpc/dubbo-rpc-api/src/main/java/com/alibaba/dubbo/rpc/protocol/AbstractInvoker.java\n+++ b/dubbo-rpc/dubbo-rpc-api/src/main/java/com/alibaba/dubbo/rpc/protocol/AbstractInvoker.java\n@@ -136,7 +136,14 @@\n         }\n         Map<String, String> context = RpcContext.getContext().getAttachments();\n         if (context != null) {\n-            invocation.addAttachmentsIfAbsent(context);\n+            /**\n+             * invocation.addAttachmentsIfAbsent(context){@link RpcInvocation#addAttachmentsIfAbsent(Map)}should not be used here,\n+             * because the {@link RpcContext#setAttachment(String, String)} is passed in the Filter when the call is triggered\n+             * by the built-in retry mechanism of the Dubbo. The attachment to update RpcContext will no longer work, which is\n+             * a mistake in most cases (for example, through Filter to RpcContext output traceId and spanId and other information).\n+             * yizhenqiang 20180310\n+             */\n+            invocation.addAttachments(context);\n         }\n         if (getUrl().getMethodParameter(invocation.getMethodName(), Constants.ASYNC_KEY, false)) {\n             invocation.setAttachment(Constants.ASYNC_KEY, Boolean.TRUE.toString());\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 139,
    "bugNodeStartChar": 4584,
    "bugNodeLength": 42,
    "fixLineNum": 146,
    "fixNodeStartChar": 5169,
    "fixNodeLength": 34,
    "sourceBeforeFix": "invocation.addAttachmentsIfAbsent(context)",
    "sourceAfterFix": "invocation.addAttachments(context)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "42ba20ed43331f0e3e1c4a4ea75fcb34f564b796",
    "fixCommitParentSHA1": "7df5eb6a3b2da91f8b13a6c8eb36ea47f43f87ba",
    "bugFilePath": "dubbo-rpc/dubbo-rpc-api/src/main/java/com/alibaba/dubbo/rpc/protocol/AbstractInvoker.java",
    "fixPatch": "diff --git a/dubbo-rpc/dubbo-rpc-api/src/main/java/com/alibaba/dubbo/rpc/protocol/AbstractInvoker.java b/dubbo-rpc/dubbo-rpc-api/src/main/java/com/alibaba/dubbo/rpc/protocol/AbstractInvoker.java\nindex eee7db4..2d8c8d9 100644\n--- a/dubbo-rpc/dubbo-rpc-api/src/main/java/com/alibaba/dubbo/rpc/protocol/AbstractInvoker.java\n+++ b/dubbo-rpc/dubbo-rpc-api/src/main/java/com/alibaba/dubbo/rpc/protocol/AbstractInvoker.java\n@@ -136,7 +136,14 @@\n         }\n         Map<String, String> context = RpcContext.getContext().getAttachments();\n         if (context != null) {\n-            invocation.addAttachmentsIfAbsent(context);\n+            /**\n+             * invocation.addAttachmentsIfAbsent(context){@link RpcInvocation#addAttachmentsIfAbsent(Map)}should not be used here,\n+             * because the {@link RpcContext#setAttachment(String, String)} is passed in the Filter when the call is triggered\n+             * by the built-in retry mechanism of the Dubbo. The attachment to update RpcContext will no longer work, which is\n+             * a mistake in most cases (for example, through Filter to RpcContext output traceId and spanId and other information).\n+             * yizhenqiang 20180310\n+             */\n+            invocation.addAttachments(context);\n         }\n         if (getUrl().getMethodParameter(invocation.getMethodName(), Constants.ASYNC_KEY, false)) {\n             invocation.setAttachment(Constants.ASYNC_KEY, Boolean.TRUE.toString());\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 139,
    "bugNodeStartChar": 4584,
    "bugNodeLength": 42,
    "fixLineNum": 146,
    "fixNodeStartChar": 5169,
    "fixNodeLength": 34,
    "sourceBeforeFix": "invocation.addAttachmentsIfAbsent(context)",
    "sourceAfterFix": "invocation.addAttachments(context)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "e20618a66fbe8106e1f1c813dec7c09d11a1ebb7",
    "fixCommitParentSHA1": "2d7e18242f74ff66be81b3c35e68e5b5fb5fe95f",
    "bugFilePath": "dubbo-test/dubbo-test-examples/src/main/java/com/alibaba/dubbo/examples/annotation/AnnotationProvider.java",
    "fixPatch": "diff --git a/dubbo-test/dubbo-test-examples/src/main/java/com/alibaba/dubbo/examples/annotation/AnnotationProvider.java b/dubbo-test/dubbo-test-examples/src/main/java/com/alibaba/dubbo/examples/annotation/AnnotationProvider.java\nindex 4f5d520..e705925 100644\n--- a/dubbo-test/dubbo-test-examples/src/main/java/com/alibaba/dubbo/examples/annotation/AnnotationProvider.java\n+++ b/dubbo-test/dubbo-test-examples/src/main/java/com/alibaba/dubbo/examples/annotation/AnnotationProvider.java\n@@ -36,14 +36,13 @@\n     }\r\n \r\n     @Configuration\r\n-    @EnableDubbo(scanBasePackages = \"com.alibaba.dubbo.examples.annotation.impl\", multipleConfig = true)\r\n+    @EnableDubbo(scanBasePackages = \"com.alibaba.dubbo.examples.annotation.impl\")\r\n     @PropertySource(\"classpath:/com/alibaba/dubbo/examples/annotation/dubbo-provider.properties\")\r\n-//    @ComponentScan(value = {\"com.alibaba.dubbo.examples.annotation.impl\"})\r\n     static public class ProviderConfiguration {\r\n         @Bean\r\n         public ProviderConfig providerConfig() {\r\n             ProviderConfig providerConfig = new ProviderConfig();\r\n-            providerConfig.setTimeout(1000);\r\n+            providerConfig.setTimeout(5000);\r\n             return providerConfig;\r\n         }\r\n     }\r\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 46,
    "bugNodeStartChar": 2063,
    "bugNodeLength": 31,
    "fixLineNum": 46,
    "fixNodeStartChar": 2018,
    "fixNodeLength": 31,
    "sourceBeforeFix": "providerConfig.setTimeout(1000)",
    "sourceAfterFix": "providerConfig.setTimeout(5000)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "0592e84a3c07b4451e81d2eecc0c51af384858d2",
    "fixCommitParentSHA1": "04c93e8b98250230c4d22423372acd1c29e2c770",
    "bugFilePath": "dubbo-common/src/main/java/com/alibaba/dubbo/common/utils/ExecutorUtil.java",
    "fixPatch": "diff --git a/dubbo-common/src/main/java/com/alibaba/dubbo/common/utils/ExecutorUtil.java b/dubbo-common/src/main/java/com/alibaba/dubbo/common/utils/ExecutorUtil.java\nindex 19d581f..6b07cc8 100644\n--- a/dubbo-common/src/main/java/com/alibaba/dubbo/common/utils/ExecutorUtil.java\n+++ b/dubbo-common/src/main/java/com/alibaba/dubbo/common/utils/ExecutorUtil.java\n@@ -34,9 +34,9 @@\n             new LinkedBlockingQueue<Runnable>(100),\n             new NamedThreadFactory(\"Close-ExecutorService-Timer\", true));\n \n-    public static boolean isShutdown(Executor executor) {\n+    public static boolean isTerminated(Executor executor) {\n         if (executor instanceof ExecutorService) {\n-            if (((ExecutorService) executor).isShutdown()) {\n+            if (((ExecutorService) executor).isTerminated()) {\n                 return true;\n             }\n         }\n@@ -44,7 +44,7 @@\n     }\n \n     public static void gracefulShutdown(Executor executor, int timeout) {\n-        if (!(executor instanceof ExecutorService) || isShutdown(executor)) {\n+        if (!(executor instanceof ExecutorService) || isTerminated(executor)) {\n             return;\n         }\n         final ExecutorService es = (ExecutorService) executor;\n@@ -63,13 +63,13 @@\n             es.shutdownNow();\n             Thread.currentThread().interrupt();\n         }\n-        if (!isShutdown(es)) {\n+        if (!isTerminated(es)) {\n             newThreadToCloseExecutor(es);\n         }\n     }\n \n     public static void shutdownNow(Executor executor, final int timeout) {\n-        if (!(executor instanceof ExecutorService) || isShutdown(executor)) {\n+        if (!(executor instanceof ExecutorService) || isTerminated(executor)) {\n             return;\n         }\n         final ExecutorService es = (ExecutorService) executor;\n@@ -85,13 +85,13 @@\n         } catch (InterruptedException ex) {\n             Thread.currentThread().interrupt();\n         }\n-        if (!isShutdown(es)) {\n+        if (!isTerminated(es)) {\n             newThreadToCloseExecutor(es);\n         }\n     }\n \n     private static void newThreadToCloseExecutor(final ExecutorService es) {\n-        if (!isShutdown(es)) {\n+        if (!isTerminated(es)) {\n             shutdownExecutor.execute(new Runnable() {\n                 @Override\n                 public void run() {\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 39,
    "bugNodeStartChar": 1741,
    "bugNodeLength": 41,
    "fixLineNum": 39,
    "fixNodeStartChar": 1741,
    "fixNodeLength": 43,
    "sourceBeforeFix": "((ExecutorService)executor).isShutdown()",
    "sourceAfterFix": "((ExecutorService)executor).isTerminated()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "0592e84a3c07b4451e81d2eecc0c51af384858d2",
    "fixCommitParentSHA1": "04c93e8b98250230c4d22423372acd1c29e2c770",
    "bugFilePath": "dubbo-common/src/main/java/com/alibaba/dubbo/common/utils/ExecutorUtil.java",
    "fixPatch": "diff --git a/dubbo-common/src/main/java/com/alibaba/dubbo/common/utils/ExecutorUtil.java b/dubbo-common/src/main/java/com/alibaba/dubbo/common/utils/ExecutorUtil.java\nindex 19d581f..6b07cc8 100644\n--- a/dubbo-common/src/main/java/com/alibaba/dubbo/common/utils/ExecutorUtil.java\n+++ b/dubbo-common/src/main/java/com/alibaba/dubbo/common/utils/ExecutorUtil.java\n@@ -34,9 +34,9 @@\n             new LinkedBlockingQueue<Runnable>(100),\n             new NamedThreadFactory(\"Close-ExecutorService-Timer\", true));\n \n-    public static boolean isShutdown(Executor executor) {\n+    public static boolean isTerminated(Executor executor) {\n         if (executor instanceof ExecutorService) {\n-            if (((ExecutorService) executor).isShutdown()) {\n+            if (((ExecutorService) executor).isTerminated()) {\n                 return true;\n             }\n         }\n@@ -44,7 +44,7 @@\n     }\n \n     public static void gracefulShutdown(Executor executor, int timeout) {\n-        if (!(executor instanceof ExecutorService) || isShutdown(executor)) {\n+        if (!(executor instanceof ExecutorService) || isTerminated(executor)) {\n             return;\n         }\n         final ExecutorService es = (ExecutorService) executor;\n@@ -63,13 +63,13 @@\n             es.shutdownNow();\n             Thread.currentThread().interrupt();\n         }\n-        if (!isShutdown(es)) {\n+        if (!isTerminated(es)) {\n             newThreadToCloseExecutor(es);\n         }\n     }\n \n     public static void shutdownNow(Executor executor, final int timeout) {\n-        if (!(executor instanceof ExecutorService) || isShutdown(executor)) {\n+        if (!(executor instanceof ExecutorService) || isTerminated(executor)) {\n             return;\n         }\n         final ExecutorService es = (ExecutorService) executor;\n@@ -85,13 +85,13 @@\n         } catch (InterruptedException ex) {\n             Thread.currentThread().interrupt();\n         }\n-        if (!isShutdown(es)) {\n+        if (!isTerminated(es)) {\n             newThreadToCloseExecutor(es);\n         }\n     }\n \n     private static void newThreadToCloseExecutor(final ExecutorService es) {\n-        if (!isShutdown(es)) {\n+        if (!isTerminated(es)) {\n             shutdownExecutor.execute(new Runnable() {\n                 @Override\n                 public void run() {\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 39,
    "bugNodeStartChar": 1741,
    "bugNodeLength": 41,
    "fixLineNum": 39,
    "fixNodeStartChar": 1741,
    "fixNodeLength": 43,
    "sourceBeforeFix": "((ExecutorService)executor).isShutdown()",
    "sourceAfterFix": "((ExecutorService)executor).isTerminated()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "d80a42cc69d16d3cb3391ba9f5ec2cc64436839f",
    "fixCommitParentSHA1": "c25d462ff48c725440393da801e8c614df600248",
    "bugFilePath": "dubbo-cluster/src/main/java/com/alibaba/dubbo/rpc/cluster/support/wrapper/MockClusterInvoker.java",
    "fixPatch": "diff --git a/dubbo-cluster/src/main/java/com/alibaba/dubbo/rpc/cluster/support/wrapper/MockClusterInvoker.java b/dubbo-cluster/src/main/java/com/alibaba/dubbo/rpc/cluster/support/wrapper/MockClusterInvoker.java\nindex 0a038c7..0269c2b 100644\n--- a/dubbo-cluster/src/main/java/com/alibaba/dubbo/rpc/cluster/support/wrapper/MockClusterInvoker.java\n+++ b/dubbo-cluster/src/main/java/com/alibaba/dubbo/rpc/cluster/support/wrapper/MockClusterInvoker.java\n@@ -83,7 +83,7 @@\n                     throw e;\r\n                 } else {\r\n                     if (logger.isWarnEnabled()) {\r\n-                        logger.info(\"fail-mock: \" + invocation.getMethodName() + \" fail-mock enabled , url : \" + directory.getUrl(), e);\r\n+                        logger.warn(\"fail-mock: \" + invocation.getMethodName() + \" fail-mock enabled , url : \" + directory.getUrl(), e);\r\n                     }\r\n                     result = doMockInvoke(invocation, e);\r\n                 }\r\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 86,
    "bugNodeStartChar": 3253,
    "bugNodeLength": 111,
    "fixLineNum": 86,
    "fixNodeStartChar": 3168,
    "fixNodeLength": 111,
    "sourceBeforeFix": "logger.info(\"fail-mock: \" + invocation.getMethodName() + \" fail-mock enabled , url : \"+ directory.getUrl(),e)",
    "sourceAfterFix": "logger.warn(\"fail-mock: \" + invocation.getMethodName() + \" fail-mock enabled , url : \"+ directory.getUrl(),e)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "d80a42cc69d16d3cb3391ba9f5ec2cc64436839f",
    "fixCommitParentSHA1": "c25d462ff48c725440393da801e8c614df600248",
    "bugFilePath": "dubbo-cluster/src/main/java/com/alibaba/dubbo/rpc/cluster/support/wrapper/MockClusterInvoker.java",
    "fixPatch": "diff --git a/dubbo-cluster/src/main/java/com/alibaba/dubbo/rpc/cluster/support/wrapper/MockClusterInvoker.java b/dubbo-cluster/src/main/java/com/alibaba/dubbo/rpc/cluster/support/wrapper/MockClusterInvoker.java\nindex 0a038c7..0269c2b 100644\n--- a/dubbo-cluster/src/main/java/com/alibaba/dubbo/rpc/cluster/support/wrapper/MockClusterInvoker.java\n+++ b/dubbo-cluster/src/main/java/com/alibaba/dubbo/rpc/cluster/support/wrapper/MockClusterInvoker.java\n@@ -83,7 +83,7 @@\n                     throw e;\r\n                 } else {\r\n                     if (logger.isWarnEnabled()) {\r\n-                        logger.info(\"fail-mock: \" + invocation.getMethodName() + \" fail-mock enabled , url : \" + directory.getUrl(), e);\r\n+                        logger.warn(\"fail-mock: \" + invocation.getMethodName() + \" fail-mock enabled , url : \" + directory.getUrl(), e);\r\n                     }\r\n                     result = doMockInvoke(invocation, e);\r\n                 }\r\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 86,
    "bugNodeStartChar": 3253,
    "bugNodeLength": 111,
    "fixLineNum": 86,
    "fixNodeStartChar": 3168,
    "fixNodeLength": 111,
    "sourceBeforeFix": "logger.info(\"fail-mock: \" + invocation.getMethodName() + \" fail-mock enabled , url : \"+ directory.getUrl(),e)",
    "sourceAfterFix": "logger.warn(\"fail-mock: \" + invocation.getMethodName() + \" fail-mock enabled , url : \"+ directory.getUrl(),e)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "38eb6222bddaf49c3c9ae73ddef0cfe4ff5efa48",
    "fixCommitParentSHA1": "c24917392a0f2b6868215a33bf4091d20f90d53a",
    "bugFilePath": "dubbo-common/src/test/java/com/alibaba/dubbo/common/URLTest.java",
    "fixPatch": "diff --git a/dubbo-common/src/test/java/com/alibaba/dubbo/common/URLTest.java b/dubbo-common/src/test/java/com/alibaba/dubbo/common/URLTest.java\nindex 9f37f45..a670c3c 100644\n--- a/dubbo-common/src/test/java/com/alibaba/dubbo/common/URLTest.java\n+++ b/dubbo-common/src/test/java/com/alibaba/dubbo/common/URLTest.java\n@@ -43,7 +43,7 @@\n         assertNull(url.getUsername());\r\n         assertNull(url.getPassword());\r\n         assertNull(url.getHost());\r\n-        assertEquals(12, url.getPort());\r\n+        assertEquals(0, url.getPort());\r\n         assertEquals(\"context/path\", url.getPath());\r\n         assertEquals(2, url.getParameters().size());\r\n         assertEquals(\"1.0.0\", url.getParameter(\"version\"));\r\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 46,
    "bugNodeStartChar": 1751,
    "bugNodeLength": 31,
    "fixLineNum": 46,
    "fixNodeStartChar": 1706,
    "fixNodeLength": 30,
    "sourceBeforeFix": "assertEquals(12,url.getPort())",
    "sourceAfterFix": "assertEquals(0,url.getPort())"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "38eb6222bddaf49c3c9ae73ddef0cfe4ff5efa48",
    "fixCommitParentSHA1": "c24917392a0f2b6868215a33bf4091d20f90d53a",
    "bugFilePath": "dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java",
    "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java b/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java\nindex ac0802b..0f36da4 100644\n--- a/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java\n+++ b/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java\n@@ -119,7 +119,7 @@\n \n     @Test\n     public void test_Decode_Error_Length() throws IOException {\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -135,7 +135,7 @@\n     @Test\n     public void test_Decode_Error_Response_Object() throws IOException {\n         //00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n         //bad object\n@@ -208,7 +208,7 @@\n     @Test\n     public void test_Decode_Return_Request_Event_Object() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xff, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -223,7 +223,7 @@\n     @Test\n     public void test_Decode_Return_Request_Event_String() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xff, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         String event = Request.READONLY_EVENT;\n         byte[] request = getRequestBytes(event, header);\n \n@@ -238,7 +238,7 @@\n     @Test\n     public void test_Decode_Return_Request_Heartbeat_Object() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xff, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         byte[] request = getRequestBytes(null, header);\n         Request obj = (Request) decode(request);\n         Assert.assertEquals(null, obj.getData());\n@@ -251,7 +251,7 @@\n     @Test\n     public void test_Decode_Return_Request_Object() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xdf, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -266,7 +266,7 @@\n     @Test\n     public void test_Decode_Error_Request_Object() throws IOException {\n         //00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xdf, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n         //bad object\n@@ -281,7 +281,7 @@\n     @Test\n     public void test_Header_Response_NoSerializationFlag() throws IOException {\n         //00000010-response/oneway/hearbeat=false/noset |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -294,7 +294,7 @@\n     @Test\n     public void test_Header_Response_Heartbeat() throws IOException {\n         //00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 122,
    "bugNodeStartChar": 4620,
    "bugNodeLength": 69,
    "fixLineNum": 122,
    "fixNodeStartChar": 4620,
    "fixNodeLength": 69,
    "sourceBeforeFix": "{MAGIC_HIGH,MAGIC_LOW,0x20,20,0,0,0,0,0,0,0,0,0,0,0,0}",
    "sourceAfterFix": "{MAGIC_HIGH,MAGIC_LOW,0x02,20,0,0,0,0,0,0,0,0,0,0,0,0}"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "38eb6222bddaf49c3c9ae73ddef0cfe4ff5efa48",
    "fixCommitParentSHA1": "c24917392a0f2b6868215a33bf4091d20f90d53a",
    "bugFilePath": "dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java",
    "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java b/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java\nindex ac0802b..0f36da4 100644\n--- a/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java\n+++ b/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java\n@@ -119,7 +119,7 @@\n \n     @Test\n     public void test_Decode_Error_Length() throws IOException {\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -135,7 +135,7 @@\n     @Test\n     public void test_Decode_Error_Response_Object() throws IOException {\n         //00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n         //bad object\n@@ -208,7 +208,7 @@\n     @Test\n     public void test_Decode_Return_Request_Event_Object() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xff, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -223,7 +223,7 @@\n     @Test\n     public void test_Decode_Return_Request_Event_String() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xff, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         String event = Request.READONLY_EVENT;\n         byte[] request = getRequestBytes(event, header);\n \n@@ -238,7 +238,7 @@\n     @Test\n     public void test_Decode_Return_Request_Heartbeat_Object() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xff, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         byte[] request = getRequestBytes(null, header);\n         Request obj = (Request) decode(request);\n         Assert.assertEquals(null, obj.getData());\n@@ -251,7 +251,7 @@\n     @Test\n     public void test_Decode_Return_Request_Object() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xdf, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -266,7 +266,7 @@\n     @Test\n     public void test_Decode_Error_Request_Object() throws IOException {\n         //00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xdf, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n         //bad object\n@@ -281,7 +281,7 @@\n     @Test\n     public void test_Header_Response_NoSerializationFlag() throws IOException {\n         //00000010-response/oneway/hearbeat=false/noset |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -294,7 +294,7 @@\n     @Test\n     public void test_Header_Response_Heartbeat() throws IOException {\n         //00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 138,
    "bugNodeStartChar": 5393,
    "bugNodeLength": 69,
    "fixLineNum": 138,
    "fixNodeStartChar": 5393,
    "fixNodeLength": 69,
    "sourceBeforeFix": "{MAGIC_HIGH,MAGIC_LOW,0x20,20,0,0,0,0,0,0,0,0,0,0,0,0}",
    "sourceAfterFix": "{MAGIC_HIGH,MAGIC_LOW,0x02,20,0,0,0,0,0,0,0,0,0,0,0,0}"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "38eb6222bddaf49c3c9ae73ddef0cfe4ff5efa48",
    "fixCommitParentSHA1": "c24917392a0f2b6868215a33bf4091d20f90d53a",
    "bugFilePath": "dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java",
    "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java b/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java\nindex ac0802b..0f36da4 100644\n--- a/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java\n+++ b/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java\n@@ -119,7 +119,7 @@\n \n     @Test\n     public void test_Decode_Error_Length() throws IOException {\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -135,7 +135,7 @@\n     @Test\n     public void test_Decode_Error_Response_Object() throws IOException {\n         //00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n         //bad object\n@@ -208,7 +208,7 @@\n     @Test\n     public void test_Decode_Return_Request_Event_Object() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xff, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -223,7 +223,7 @@\n     @Test\n     public void test_Decode_Return_Request_Event_String() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xff, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         String event = Request.READONLY_EVENT;\n         byte[] request = getRequestBytes(event, header);\n \n@@ -238,7 +238,7 @@\n     @Test\n     public void test_Decode_Return_Request_Heartbeat_Object() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xff, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         byte[] request = getRequestBytes(null, header);\n         Request obj = (Request) decode(request);\n         Assert.assertEquals(null, obj.getData());\n@@ -251,7 +251,7 @@\n     @Test\n     public void test_Decode_Return_Request_Object() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xdf, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -266,7 +266,7 @@\n     @Test\n     public void test_Decode_Error_Request_Object() throws IOException {\n         //00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xdf, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n         //bad object\n@@ -281,7 +281,7 @@\n     @Test\n     public void test_Header_Response_NoSerializationFlag() throws IOException {\n         //00000010-response/oneway/hearbeat=false/noset |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -294,7 +294,7 @@\n     @Test\n     public void test_Header_Response_Heartbeat() throws IOException {\n         //00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 211,
    "bugNodeStartChar": 8975,
    "bugNodeLength": 11,
    "fixLineNum": 211,
    "fixNodeStartChar": 8975,
    "fixNodeLength": 11,
    "sourceBeforeFix": "(byte)0xff",
    "sourceAfterFix": "(byte)0xe2"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "38eb6222bddaf49c3c9ae73ddef0cfe4ff5efa48",
    "fixCommitParentSHA1": "c24917392a0f2b6868215a33bf4091d20f90d53a",
    "bugFilePath": "dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java",
    "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java b/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java\nindex ac0802b..0f36da4 100644\n--- a/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java\n+++ b/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java\n@@ -119,7 +119,7 @@\n \n     @Test\n     public void test_Decode_Error_Length() throws IOException {\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -135,7 +135,7 @@\n     @Test\n     public void test_Decode_Error_Response_Object() throws IOException {\n         //00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n         //bad object\n@@ -208,7 +208,7 @@\n     @Test\n     public void test_Decode_Return_Request_Event_Object() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xff, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -223,7 +223,7 @@\n     @Test\n     public void test_Decode_Return_Request_Event_String() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xff, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         String event = Request.READONLY_EVENT;\n         byte[] request = getRequestBytes(event, header);\n \n@@ -238,7 +238,7 @@\n     @Test\n     public void test_Decode_Return_Request_Heartbeat_Object() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xff, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         byte[] request = getRequestBytes(null, header);\n         Request obj = (Request) decode(request);\n         Assert.assertEquals(null, obj.getData());\n@@ -251,7 +251,7 @@\n     @Test\n     public void test_Decode_Return_Request_Object() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xdf, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -266,7 +266,7 @@\n     @Test\n     public void test_Decode_Error_Request_Object() throws IOException {\n         //00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xdf, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n         //bad object\n@@ -281,7 +281,7 @@\n     @Test\n     public void test_Header_Response_NoSerializationFlag() throws IOException {\n         //00000010-response/oneway/hearbeat=false/noset |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -294,7 +294,7 @@\n     @Test\n     public void test_Header_Response_Heartbeat() throws IOException {\n         //00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 226,
    "bugNodeStartChar": 9617,
    "bugNodeLength": 11,
    "fixLineNum": 226,
    "fixNodeStartChar": 9617,
    "fixNodeLength": 11,
    "sourceBeforeFix": "(byte)0xff",
    "sourceAfterFix": "(byte)0xe2"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "38eb6222bddaf49c3c9ae73ddef0cfe4ff5efa48",
    "fixCommitParentSHA1": "c24917392a0f2b6868215a33bf4091d20f90d53a",
    "bugFilePath": "dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java",
    "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java b/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java\nindex ac0802b..0f36da4 100644\n--- a/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java\n+++ b/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java\n@@ -119,7 +119,7 @@\n \n     @Test\n     public void test_Decode_Error_Length() throws IOException {\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -135,7 +135,7 @@\n     @Test\n     public void test_Decode_Error_Response_Object() throws IOException {\n         //00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n         //bad object\n@@ -208,7 +208,7 @@\n     @Test\n     public void test_Decode_Return_Request_Event_Object() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xff, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -223,7 +223,7 @@\n     @Test\n     public void test_Decode_Return_Request_Event_String() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xff, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         String event = Request.READONLY_EVENT;\n         byte[] request = getRequestBytes(event, header);\n \n@@ -238,7 +238,7 @@\n     @Test\n     public void test_Decode_Return_Request_Heartbeat_Object() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xff, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         byte[] request = getRequestBytes(null, header);\n         Request obj = (Request) decode(request);\n         Assert.assertEquals(null, obj.getData());\n@@ -251,7 +251,7 @@\n     @Test\n     public void test_Decode_Return_Request_Object() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xdf, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -266,7 +266,7 @@\n     @Test\n     public void test_Decode_Error_Request_Object() throws IOException {\n         //00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xdf, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n         //bad object\n@@ -281,7 +281,7 @@\n     @Test\n     public void test_Header_Response_NoSerializationFlag() throws IOException {\n         //00000010-response/oneway/hearbeat=false/noset |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -294,7 +294,7 @@\n     @Test\n     public void test_Header_Response_Heartbeat() throws IOException {\n         //00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 241,
    "bugNodeStartChar": 10270,
    "bugNodeLength": 11,
    "fixLineNum": 241,
    "fixNodeStartChar": 10270,
    "fixNodeLength": 11,
    "sourceBeforeFix": "(byte)0xff",
    "sourceAfterFix": "(byte)0xe2"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "38eb6222bddaf49c3c9ae73ddef0cfe4ff5efa48",
    "fixCommitParentSHA1": "c24917392a0f2b6868215a33bf4091d20f90d53a",
    "bugFilePath": "dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java",
    "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java b/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java\nindex ac0802b..0f36da4 100644\n--- a/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java\n+++ b/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java\n@@ -119,7 +119,7 @@\n \n     @Test\n     public void test_Decode_Error_Length() throws IOException {\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -135,7 +135,7 @@\n     @Test\n     public void test_Decode_Error_Response_Object() throws IOException {\n         //00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n         //bad object\n@@ -208,7 +208,7 @@\n     @Test\n     public void test_Decode_Return_Request_Event_Object() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xff, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -223,7 +223,7 @@\n     @Test\n     public void test_Decode_Return_Request_Event_String() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xff, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         String event = Request.READONLY_EVENT;\n         byte[] request = getRequestBytes(event, header);\n \n@@ -238,7 +238,7 @@\n     @Test\n     public void test_Decode_Return_Request_Heartbeat_Object() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xff, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         byte[] request = getRequestBytes(null, header);\n         Request obj = (Request) decode(request);\n         Assert.assertEquals(null, obj.getData());\n@@ -251,7 +251,7 @@\n     @Test\n     public void test_Decode_Return_Request_Object() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xdf, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -266,7 +266,7 @@\n     @Test\n     public void test_Decode_Error_Request_Object() throws IOException {\n         //00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xdf, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n         //bad object\n@@ -281,7 +281,7 @@\n     @Test\n     public void test_Header_Response_NoSerializationFlag() throws IOException {\n         //00000010-response/oneway/hearbeat=false/noset |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -294,7 +294,7 @@\n     @Test\n     public void test_Header_Response_Heartbeat() throws IOException {\n         //00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 254,
    "bugNodeStartChar": 10867,
    "bugNodeLength": 11,
    "fixLineNum": 254,
    "fixNodeStartChar": 10867,
    "fixNodeLength": 11,
    "sourceBeforeFix": "(byte)0xdf",
    "sourceAfterFix": "(byte)0xe2"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "38eb6222bddaf49c3c9ae73ddef0cfe4ff5efa48",
    "fixCommitParentSHA1": "c24917392a0f2b6868215a33bf4091d20f90d53a",
    "bugFilePath": "dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java",
    "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java b/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java\nindex ac0802b..0f36da4 100644\n--- a/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java\n+++ b/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java\n@@ -119,7 +119,7 @@\n \n     @Test\n     public void test_Decode_Error_Length() throws IOException {\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -135,7 +135,7 @@\n     @Test\n     public void test_Decode_Error_Response_Object() throws IOException {\n         //00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n         //bad object\n@@ -208,7 +208,7 @@\n     @Test\n     public void test_Decode_Return_Request_Event_Object() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xff, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -223,7 +223,7 @@\n     @Test\n     public void test_Decode_Return_Request_Event_String() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xff, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         String event = Request.READONLY_EVENT;\n         byte[] request = getRequestBytes(event, header);\n \n@@ -238,7 +238,7 @@\n     @Test\n     public void test_Decode_Return_Request_Heartbeat_Object() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xff, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         byte[] request = getRequestBytes(null, header);\n         Request obj = (Request) decode(request);\n         Assert.assertEquals(null, obj.getData());\n@@ -251,7 +251,7 @@\n     @Test\n     public void test_Decode_Return_Request_Object() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xdf, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -266,7 +266,7 @@\n     @Test\n     public void test_Decode_Error_Request_Object() throws IOException {\n         //00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xdf, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n         //bad object\n@@ -281,7 +281,7 @@\n     @Test\n     public void test_Header_Response_NoSerializationFlag() throws IOException {\n         //00000010-response/oneway/hearbeat=false/noset |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -294,7 +294,7 @@\n     @Test\n     public void test_Header_Response_Heartbeat() throws IOException {\n         //00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 269,
    "bugNodeStartChar": 11537,
    "bugNodeLength": 11,
    "fixLineNum": 269,
    "fixNodeStartChar": 11537,
    "fixNodeLength": 11,
    "sourceBeforeFix": "(byte)0xdf",
    "sourceAfterFix": "(byte)0xe2"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "38eb6222bddaf49c3c9ae73ddef0cfe4ff5efa48",
    "fixCommitParentSHA1": "c24917392a0f2b6868215a33bf4091d20f90d53a",
    "bugFilePath": "dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java",
    "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java b/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java\nindex ac0802b..0f36da4 100644\n--- a/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java\n+++ b/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java\n@@ -119,7 +119,7 @@\n \n     @Test\n     public void test_Decode_Error_Length() throws IOException {\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -135,7 +135,7 @@\n     @Test\n     public void test_Decode_Error_Response_Object() throws IOException {\n         //00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n         //bad object\n@@ -208,7 +208,7 @@\n     @Test\n     public void test_Decode_Return_Request_Event_Object() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xff, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -223,7 +223,7 @@\n     @Test\n     public void test_Decode_Return_Request_Event_String() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xff, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         String event = Request.READONLY_EVENT;\n         byte[] request = getRequestBytes(event, header);\n \n@@ -238,7 +238,7 @@\n     @Test\n     public void test_Decode_Return_Request_Heartbeat_Object() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xff, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         byte[] request = getRequestBytes(null, header);\n         Request obj = (Request) decode(request);\n         Assert.assertEquals(null, obj.getData());\n@@ -251,7 +251,7 @@\n     @Test\n     public void test_Decode_Return_Request_Object() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xdf, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -266,7 +266,7 @@\n     @Test\n     public void test_Decode_Error_Request_Object() throws IOException {\n         //00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xdf, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n         //bad object\n@@ -281,7 +281,7 @@\n     @Test\n     public void test_Header_Response_NoSerializationFlag() throws IOException {\n         //00000010-response/oneway/hearbeat=false/noset |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -294,7 +294,7 @@\n     @Test\n     public void test_Header_Response_Heartbeat() throws IOException {\n         //00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 297,
    "bugNodeStartChar": 12799,
    "bugNodeLength": 69,
    "fixLineNum": 297,
    "fixNodeStartChar": 12799,
    "fixNodeLength": 69,
    "sourceBeforeFix": "{MAGIC_HIGH,MAGIC_LOW,0x20,20,0,0,0,0,0,0,0,0,0,0,0,0}",
    "sourceAfterFix": "{MAGIC_HIGH,MAGIC_LOW,0x02,20,0,0,0,0,0,0,0,0,0,0,0,0}"
  },
  {
    "bugType": "CHANGE_OPERATOR",
    "fixCommitSHA1": "b309f792f8b5ebfea16b4cc13720e35306d94b38",
    "fixCommitParentSHA1": "64e0fa51e0966ced631146484be7fca94213f04e",
    "bugFilePath": "dubbo-admin/src/main/java/com/alibaba/dubbo/governance/web/governance/module/screen/Providers.java",
    "fixPatch": "diff --git a/dubbo-admin/src/main/java/com/alibaba/dubbo/governance/web/governance/module/screen/Providers.java b/dubbo-admin/src/main/java/com/alibaba/dubbo/governance/web/governance/module/screen/Providers.java\nindex 3dfa20c..d8356c2 100644\n--- a/dubbo-admin/src/main/java/com/alibaba/dubbo/governance/web/governance/module/screen/Providers.java\n+++ b/dubbo-admin/src/main/java/com/alibaba/dubbo/governance/web/governance/module/screen/Providers.java\n@@ -130,7 +130,7 @@\n      */\n     private Map<String, Set<String>> getServiceAppMap(List<Provider> providers) {\n         Map<String, Set<String>> serviceAppMap = new HashMap<String, Set<String>>();\n-        if (providers != null && providers.size() >= 0) {\n+        if (providers != null && providers.size() > 0) {\n             for (Provider provider : providers) {\n                 Set<String> appSet;\n                 String service = provider.getService();\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 133,
    "bugNodeStartChar": 5347,
    "bugNodeLength": 21,
    "fixLineNum": 133,
    "fixNodeStartChar": 5347,
    "fixNodeLength": 20,
    "sourceBeforeFix": "providers.size() >= 0",
    "sourceAfterFix": "providers.size() > 0"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "cae7c4cee89d2a11e957ae153eb9d5e567a0170a",
    "fixCommitParentSHA1": "1e76aeeb8fd81537af4bc4b1e329fb6a7ee9c9aa",
    "bugFilePath": "dubbo-filter/dubbo-filter-validation/src/main/java/com/alibaba/dubbo/validation/support/jvalidation/JValidator.java",
    "fixPatch": "diff --git a/dubbo-filter/dubbo-filter-validation/src/main/java/com/alibaba/dubbo/validation/support/jvalidation/JValidator.java b/dubbo-filter/dubbo-filter-validation/src/main/java/com/alibaba/dubbo/validation/support/jvalidation/JValidator.java\nindex e92ad65..8d607ed 100644\n--- a/dubbo-filter/dubbo-filter-validation/src/main/java/com/alibaba/dubbo/validation/support/jvalidation/JValidator.java\n+++ b/dubbo-filter/dubbo-filter-validation/src/main/java/com/alibaba/dubbo/validation/support/jvalidation/JValidator.java\n@@ -150,7 +150,7 @@\n                     ctField.getFieldInfo().addAttribute(attribute);\r\n                     ctClass.addField(ctField);\r\n                 }\r\n-                parameterClass = ctClass.toClass();\r\n+                parameterClass = ctClass.toClass(clazz.getClassLoader(), null);\r\n             }\r\n             Object parameterBean = parameterClass.newInstance();\r\n             for (int i = 0; i < args.length; i++) {\r\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 153,
    "bugNodeStartChar": 7341,
    "bugNodeLength": 17,
    "fixLineNum": 153,
    "fixNodeStartChar": 7189,
    "fixNodeLength": 45,
    "sourceBeforeFix": "ctClass.toClass()",
    "sourceAfterFix": "ctClass.toClass(clazz.getClassLoader(),null)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "a9b27a843588d61921e7f75182fa737a1402cf05",
    "fixCommitParentSHA1": "1e4fd56c04a459052b2ca63ef4318aa40bfdb8b8",
    "bugFilePath": "dubbo-admin/src/main/java/com/alibaba/dubbo/governance/service/impl/OverrideServiceImpl.java",
    "fixPatch": "diff --git a/dubbo-admin/src/main/java/com/alibaba/dubbo/governance/service/impl/OverrideServiceImpl.java b/dubbo-admin/src/main/java/com/alibaba/dubbo/governance/service/impl/OverrideServiceImpl.java\nindex 386aa8d..e7bb310 100644\n--- a/dubbo-admin/src/main/java/com/alibaba/dubbo/governance/service/impl/OverrideServiceImpl.java\n+++ b/dubbo-admin/src/main/java/com/alibaba/dubbo/governance/service/impl/OverrideServiceImpl.java\n@@ -75,7 +75,7 @@\n             return;\n         }\n \n-        URL newOverride = oldOverride.removeParameter(\"enabled\");\n+        URL newOverride = oldOverride.addParameter(\"enabled\", \"enabled\");\n         registryService.unregister(oldOverride);\n         registryService.register(newOverride);\n \n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 78,
    "bugNodeStartChar": 2515,
    "bugNodeLength": 38,
    "fixLineNum": 78,
    "fixNodeStartChar": 2515,
    "fixNodeLength": 46,
    "sourceBeforeFix": "oldOverride.removeParameter(\"enabled\")",
    "sourceAfterFix": "oldOverride.addParameter(\"enabled\",\"enabled\")"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "3472e0bcc8c2c5a36630359fd89170fdae74d253",
    "fixCommitParentSHA1": "0e25749c02c374e370c25ef9bdb5f2bbc6f3f6e6",
    "bugFilePath": "dubbo-rpc/dubbo-rpc-default/src/main/java/com/alibaba/dubbo/rpc/protocol/dubbo/telnet/InvokeTelnetHandler.java",
    "fixPatch": "diff --git a/dubbo-rpc/dubbo-rpc-default/src/main/java/com/alibaba/dubbo/rpc/protocol/dubbo/telnet/InvokeTelnetHandler.java b/dubbo-rpc/dubbo-rpc-default/src/main/java/com/alibaba/dubbo/rpc/protocol/dubbo/telnet/InvokeTelnetHandler.java\nindex 1f1124b..50a6c76 100644\n--- a/dubbo-rpc/dubbo-rpc-default/src/main/java/com/alibaba/dubbo/rpc/protocol/dubbo/telnet/InvokeTelnetHandler.java\n+++ b/dubbo-rpc/dubbo-rpc-default/src/main/java/com/alibaba/dubbo/rpc/protocol/dubbo/telnet/InvokeTelnetHandler.java\n@@ -136,7 +136,7 @@\n         if (invoker != null) {\r\n             if (invokeMethod != null) {\r\n                 try {\r\n-                    Object[] array = PojoUtils.realize(list.toArray(), invokeMethod.getParameterTypes());\r\n+                    Object[] array = PojoUtils.realize(list.toArray(), invokeMethod.getParameterTypes(), invokeMethod.getGenericParameterTypes());\r\n                     RpcContext.getContext().setLocalAddress(channel.getLocalAddress()).setRemoteAddress(channel.getRemoteAddress());\r\n                     long start = System.currentTimeMillis();\r\n                     Object result = invoker.invoke(new RpcInvocation(invokeMethod, array)).recreate();\r\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 139,
    "bugNodeStartChar": 5844,
    "bugNodeLength": 67,
    "fixLineNum": 139,
    "fixNodeStartChar": 5706,
    "fixNodeLength": 108,
    "sourceBeforeFix": "PojoUtils.realize(list.toArray(),invokeMethod.getParameterTypes())",
    "sourceAfterFix": "PojoUtils.realize(list.toArray(),invokeMethod.getParameterTypes(),invokeMethod.getGenericParameterTypes())"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "14c8d88232c52fca5768d7b056c688def78f4208",
    "fixCommitParentSHA1": "45040ca87f7c5e18a5f6073ebe9056911c46d478",
    "bugFilePath": "dubbo-config/dubbo-config-api/src/main/java/com/alibaba/dubbo/config/AbstractConfig.java",
    "fixPatch": "diff --git a/dubbo-config/dubbo-config-api/src/main/java/com/alibaba/dubbo/config/AbstractConfig.java b/dubbo-config/dubbo-config-api/src/main/java/com/alibaba/dubbo/config/AbstractConfig.java\nindex 5d6ae8a..5e449ff 100644\n--- a/dubbo-config/dubbo-config-api/src/main/java/com/alibaba/dubbo/config/AbstractConfig.java\n+++ b/dubbo-config/dubbo-config-api/src/main/java/com/alibaba/dubbo/config/AbstractConfig.java\n@@ -44,7 +44,7 @@\n \r\n     protected static final Logger logger = LoggerFactory.getLogger(AbstractConfig.class);\r\n     private static final long serialVersionUID = 4267533505537413570L;\r\n-    private static final int MAX_LENGTH = 100;\r\n+    private static final int MAX_LENGTH = 200;\r\n \r\n     private static final int MAX_PATH_LENGTH = 200;\r\n \r\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 47,
    "bugNodeStartChar": 1722,
    "bugNodeLength": 16,
    "fixLineNum": 47,
    "fixNodeStartChar": 1676,
    "fixNodeLength": 16,
    "sourceBeforeFix": "MAX_LENGTH=100",
    "sourceAfterFix": "MAX_LENGTH=200"
  },
  {
    "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
    "fixCommitSHA1": "2e658dd3e4784aa8404511e0a631a2cffd58545a",
    "fixCommitParentSHA1": "d0e41e8733d0837653e5b2281f6d4b9f9508c2c1",
    "bugFilePath": "dubbo-common/src/main/java/com/alibaba/dubbo/common/serialize/support/dubbo/Builder.java",
    "fixPatch": "diff --git a/dubbo-common/src/main/java/com/alibaba/dubbo/common/serialize/support/dubbo/Builder.java b/dubbo-common/src/main/java/com/alibaba/dubbo/common/serialize/support/dubbo/Builder.java\nindex 0104af6..f606058 100644\n--- a/dubbo-common/src/main/java/com/alibaba/dubbo/common/serialize/support/dubbo/Builder.java\n+++ b/dubbo-common/src/main/java/com/alibaba/dubbo/common/serialize/support/dubbo/Builder.java\n@@ -983,7 +983,7 @@\n                 t = t.getSuperclass();\n                 if (t == null)\n                     throw new RuntimeException(\"Can not found Constructor?\");\n-                cs = c.getDeclaredConstructors();\n+                cs = t.getDeclaredConstructors();\n             }\n             while (cs.length == 0);\n         }\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 986,
    "bugNodeStartChar": 37145,
    "bugNodeLength": 27,
    "fixLineNum": 986,
    "fixNodeStartChar": 37145,
    "fixNodeLength": 27,
    "sourceBeforeFix": "c.getDeclaredConstructors()",
    "sourceAfterFix": "t.getDeclaredConstructors()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "2e658dd3e4784aa8404511e0a631a2cffd58545a",
    "fixCommitParentSHA1": "d0e41e8733d0837653e5b2281f6d4b9f9508c2c1",
    "bugFilePath": "dubbo-common/src/main/java/com/alibaba/dubbo/common/serialize/support/dubbo/Builder.java",
    "fixPatch": "diff --git a/dubbo-common/src/main/java/com/alibaba/dubbo/common/serialize/support/dubbo/Builder.java b/dubbo-common/src/main/java/com/alibaba/dubbo/common/serialize/support/dubbo/Builder.java\nindex 0104af6..f606058 100644\n--- a/dubbo-common/src/main/java/com/alibaba/dubbo/common/serialize/support/dubbo/Builder.java\n+++ b/dubbo-common/src/main/java/com/alibaba/dubbo/common/serialize/support/dubbo/Builder.java\n@@ -983,7 +983,7 @@\n                 t = t.getSuperclass();\n                 if (t == null)\n                     throw new RuntimeException(\"Can not found Constructor?\");\n-                cs = c.getDeclaredConstructors();\n+                cs = t.getDeclaredConstructors();\n             }\n             while (cs.length == 0);\n         }\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 986,
    "bugNodeStartChar": 37145,
    "bugNodeLength": 27,
    "fixLineNum": 986,
    "fixNodeStartChar": 37145,
    "fixNodeLength": 27,
    "sourceBeforeFix": "c.getDeclaredConstructors()",
    "sourceAfterFix": "t.getDeclaredConstructors()"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "49fbd32cd858759febfc166c20a2883a7d1b2df8",
    "fixCommitParentSHA1": "70cad53ff7a956b59bdfc44f2a80aa7979ee9c6f",
    "bugFilePath": "dubbo-registry/src/main/java/com/alibaba/dubbo/registry/support/RegistryDirectory.java",
    "fixPatch": "diff --git a/dubbo-registry/src/main/java/com/alibaba/dubbo/registry/support/RegistryDirectory.java b/dubbo-registry/src/main/java/com/alibaba/dubbo/registry/support/RegistryDirectory.java\nindex 013f5be..65f243e 100644\n--- a/dubbo-registry/src/main/java/com/alibaba/dubbo/registry/support/RegistryDirectory.java\n+++ b/dubbo-registry/src/main/java/com/alibaba/dubbo/registry/support/RegistryDirectory.java\n@@ -104,7 +104,7 @@\n         this.serviceKey = url.getServiceKey();\r\n         this.queryMap = StringUtils.parseQueryString(url.getParameterAndDecoded(RpcConstants.REFER_KEY));\r\n         this.directoryUrl = url.removeParameter(RpcConstants.REFER_KEY).addParameters(queryMap);\r\n-        String group = directoryUrl.getParameter( Constants.GROUP_KEY );\r\n+        String group = directoryUrl.getParameter( Constants.GROUP_KEY, \"\" );\r\n         this.multiGroup = \"*\".equals(group) || group.contains( \",\" );\r\n     }\r\n \r\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 107,
    "bugNodeStartChar": 4242,
    "bugNodeLength": 48,
    "fixLineNum": 107,
    "fixNodeStartChar": 4136,
    "fixNodeLength": 52,
    "sourceBeforeFix": "directoryUrl.getParameter(Constants.GROUP_KEY)",
    "sourceAfterFix": "directoryUrl.getParameter(Constants.GROUP_KEY,\"\")"
  },
  {
    "bugType": "CHANGE_UNARY_OPERATOR",
    "fixCommitSHA1": "e8fe993bb02c2db455a8636cf2dd861e79fee7d2",
    "fixCommitParentSHA1": "099d639bc9ce1cb387d2e3db36fd1fde1ef45e49",
    "bugFilePath": "dubbo-config/src/main/java/com/alibaba/dubbo/config/ServiceConfig.java",
    "fixPatch": "diff --git a/dubbo-config/src/main/java/com/alibaba/dubbo/config/ServiceConfig.java b/dubbo-config/src/main/java/com/alibaba/dubbo/config/ServiceConfig.java\nindex 528ac61..0c050b2 100644\n--- a/dubbo-config/src/main/java/com/alibaba/dubbo/config/ServiceConfig.java\n+++ b/dubbo-config/src/main/java/com/alibaba/dubbo/config/ServiceConfig.java\n@@ -250,7 +250,7 @@\n     }\r\n \r\n     public synchronized void unexport() {\r\n-        if (exported) {\r\n+        if (!exported) {\r\n             throw new IllegalStateException(\"No exported!\");\r\n         }\r\n         if (unexported) {\r\n",
    "projectName": "alibaba.dubbo",
    "bugLineNum": 253,
    "bugNodeStartChar": 9814,
    "bugNodeLength": 8,
    "fixLineNum": 253,
    "fixNodeStartChar": 9562,
    "fixNodeLength": 9,
    "sourceBeforeFix": "exported",
    "sourceAfterFix": "!exported"
  }
]