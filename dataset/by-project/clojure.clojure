[{"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "ce033a15d08bba9cfff373badab1bfe5aba24d1c", "fixCommitParentSHA1": "7c45fe6815254c722f350ef8bbc53a0caf757907", "bugFilePath": "src/jvm/clojure/lang/LongRange.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/LongRange.java b/src/jvm/clojure/lang/LongRange.java\nindex 125fa45..c956157 100644\n--- a/src/jvm/clojure/lang/LongRange.java\n+++ b/src/jvm/clojure/lang/LongRange.java\n@@ -156,9 +156,9 @@\n }\n \n public int absCount(long start, long end, long step) {\n-    double c = (end - start) / step;\n+    double c = (double) (end - start) / step;\n     int ic = (int) c;\n-    if(c < ic)\n+    if(c > ic)\n         return ic + 1;\n     else\n         return ic;\n", "projectName": "clojure.clojure", "bugLineNum": 161, "bugNodeStartChar": 4534, "bugNodeLength": 6, "fixLineNum": 161, "fixNodeStartChar": 4534, "fixNodeLength": 6, "sourceBeforeFix": "c < ic", "sourceAfterFix": "c > ic"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "f81170d3787c250ba3871577e77446dde5e98882", "fixCommitParentSHA1": "1c80e879c5613282117da0ba367ec182d651d034", "bugFilePath": "src/jvm/clojure/lang/Numbers.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/Numbers.java b/src/jvm/clojure/lang/Numbers.java\nindex b89ee0e..6912e62 100644\n--- a/src/jvm/clojure/lang/Numbers.java\n+++ b/src/jvm/clojure/lang/Numbers.java\n@@ -1493,7 +1493,7 @@\n     return clearBit(x,bitOpsCast(y));\n }\n static public long clearBit(long x, long n){\n-    return x & (1L << n);\n+    return x & ~(1L << n);\n }\n \n static public long setBit(Object x, Object y){\n", "projectName": "clojure.clojure", "bugLineNum": 1496, "bugNodeStartChar": 33794, "bugNodeLength": 9, "fixLineNum": 1496, "fixNodeStartChar": 33794, "fixNodeLength": 10, "sourceBeforeFix": "(1L << n)", "sourceAfterFix": "~(1L << n)"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "2230a91829f39b72973e6fecf275d9c664911ca0", "fixCommitParentSHA1": "0456649282c4e3f298a5c75af2f979b8001e977a", "bugFilePath": "src/jvm/clojure/lang/Compiler.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/Compiler.java b/src/jvm/clojure/lang/Compiler.java\nindex bc19538..1eaa9e8 100644\n--- a/src/jvm/clojure/lang/Compiler.java\n+++ b/src/jvm/clojure/lang/Compiler.java\n@@ -5774,7 +5774,7 @@\n \tcatch(Throwable e)\n \t\t{\n \t\tif(!(e instanceof CompilerException))\n-\t\t\tthrow new CompilerException((String) SOURCE.deref(), (Integer) LINE.deref(), e);\n+\t\t\tthrow new CompilerException((String) SOURCE_PATH.deref(), (Integer) LINE.deref(), e);\n \t\telse\n \t\t\tthrow (CompilerException) e;\n \t\t}\n@@ -5947,7 +5947,7 @@\n \tcatch(Throwable e)\n \t\t{\n \t\tif(!(e instanceof CompilerException))\n-\t\t\tthrow new CompilerException((String) SOURCE.deref(), (Integer) LINE.deref(), e);\n+\t\t\tthrow new CompilerException((String) SOURCE_PATH.deref(), (Integer) LINE.deref(), e);\n \t\telse\n \t\t\tthrow (CompilerException) e;\n \t\t}\n@@ -6434,7 +6434,7 @@\n \t\t}\n \tcatch(LispReader.ReaderException e)\n \t\t{\n-\t\tthrow new CompilerException(sourceName, e.line, e.getCause());\n+\t\tthrow new CompilerException(sourcePath, e.line, e.getCause());\n \t\t}\n \tfinally\n \t\t{\n@@ -6653,7 +6653,7 @@\n \t\t}\n \tcatch(LispReader.ReaderException e)\n \t\t{\n-\t\tthrow new CompilerException(sourceName, e.line, e.getCause());\n+\t\tthrow new CompilerException(sourcePath, e.line, e.getCause());\n \t\t}\n \tfinally\n \t\t{\n", "projectName": "clojure.clojure", "bugLineNum": 5777, "bugNodeStartChar": 173039, "bugNodeLength": 14, "fixLineNum": 5777, "fixNodeStartChar": 173039, "fixNodeLength": 19, "sourceBeforeFix": "SOURCE.deref()", "sourceAfterFix": "SOURCE_PATH.deref()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "2230a91829f39b72973e6fecf275d9c664911ca0", "fixCommitParentSHA1": "0456649282c4e3f298a5c75af2f979b8001e977a", "bugFilePath": "src/jvm/clojure/lang/Compiler.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/Compiler.java b/src/jvm/clojure/lang/Compiler.java\nindex bc19538..1eaa9e8 100644\n--- a/src/jvm/clojure/lang/Compiler.java\n+++ b/src/jvm/clojure/lang/Compiler.java\n@@ -5774,7 +5774,7 @@\n \tcatch(Throwable e)\n \t\t{\n \t\tif(!(e instanceof CompilerException))\n-\t\t\tthrow new CompilerException((String) SOURCE.deref(), (Integer) LINE.deref(), e);\n+\t\t\tthrow new CompilerException((String) SOURCE_PATH.deref(), (Integer) LINE.deref(), e);\n \t\telse\n \t\t\tthrow (CompilerException) e;\n \t\t}\n@@ -5947,7 +5947,7 @@\n \tcatch(Throwable e)\n \t\t{\n \t\tif(!(e instanceof CompilerException))\n-\t\t\tthrow new CompilerException((String) SOURCE.deref(), (Integer) LINE.deref(), e);\n+\t\t\tthrow new CompilerException((String) SOURCE_PATH.deref(), (Integer) LINE.deref(), e);\n \t\telse\n \t\t\tthrow (CompilerException) e;\n \t\t}\n@@ -6434,7 +6434,7 @@\n \t\t}\n \tcatch(LispReader.ReaderException e)\n \t\t{\n-\t\tthrow new CompilerException(sourceName, e.line, e.getCause());\n+\t\tthrow new CompilerException(sourcePath, e.line, e.getCause());\n \t\t}\n \tfinally\n \t\t{\n@@ -6653,7 +6653,7 @@\n \t\t}\n \tcatch(LispReader.ReaderException e)\n \t\t{\n-\t\tthrow new CompilerException(sourceName, e.line, e.getCause());\n+\t\tthrow new CompilerException(sourcePath, e.line, e.getCause());\n \t\t}\n \tfinally\n \t\t{\n", "projectName": "clojure.clojure", "bugLineNum": 5777, "bugNodeStartChar": 173039, "bugNodeLength": 14, "fixLineNum": 5777, "fixNodeStartChar": 173039, "fixNodeLength": 19, "sourceBeforeFix": "SOURCE.deref()", "sourceAfterFix": "SOURCE_PATH.deref()"}, {"bugType": "CHANGE_CALLER_IN_FUNCTION_CALL", "fixCommitSHA1": "2230a91829f39b72973e6fecf275d9c664911ca0", "fixCommitParentSHA1": "0456649282c4e3f298a5c75af2f979b8001e977a", "bugFilePath": "src/jvm/clojure/lang/Compiler.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/Compiler.java b/src/jvm/clojure/lang/Compiler.java\nindex bc19538..1eaa9e8 100644\n--- a/src/jvm/clojure/lang/Compiler.java\n+++ b/src/jvm/clojure/lang/Compiler.java\n@@ -5774,7 +5774,7 @@\n \tcatch(Throwable e)\n \t\t{\n \t\tif(!(e instanceof CompilerException))\n-\t\t\tthrow new CompilerException((String) SOURCE.deref(), (Integer) LINE.deref(), e);\n+\t\t\tthrow new CompilerException((String) SOURCE_PATH.deref(), (Integer) LINE.deref(), e);\n \t\telse\n \t\t\tthrow (CompilerException) e;\n \t\t}\n@@ -5947,7 +5947,7 @@\n \tcatch(Throwable e)\n \t\t{\n \t\tif(!(e instanceof CompilerException))\n-\t\t\tthrow new CompilerException((String) SOURCE.deref(), (Integer) LINE.deref(), e);\n+\t\t\tthrow new CompilerException((String) SOURCE_PATH.deref(), (Integer) LINE.deref(), e);\n \t\telse\n \t\t\tthrow (CompilerException) e;\n \t\t}\n@@ -6434,7 +6434,7 @@\n \t\t}\n \tcatch(LispReader.ReaderException e)\n \t\t{\n-\t\tthrow new CompilerException(sourceName, e.line, e.getCause());\n+\t\tthrow new CompilerException(sourcePath, e.line, e.getCause());\n \t\t}\n \tfinally\n \t\t{\n@@ -6653,7 +6653,7 @@\n \t\t}\n \tcatch(LispReader.ReaderException e)\n \t\t{\n-\t\tthrow new CompilerException(sourceName, e.line, e.getCause());\n+\t\tthrow new CompilerException(sourcePath, e.line, e.getCause());\n \t\t}\n \tfinally\n \t\t{\n", "projectName": "clojure.clojure", "bugLineNum": 5950, "bugNodeStartChar": 178032, "bugNodeLength": 14, "fixLineNum": 5950, "fixNodeStartChar": 178032, "fixNodeLength": 19, "sourceBeforeFix": "SOURCE.deref()", "sourceAfterFix": "SOURCE_PATH.deref()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "2230a91829f39b72973e6fecf275d9c664911ca0", "fixCommitParentSHA1": "0456649282c4e3f298a5c75af2f979b8001e977a", "bugFilePath": "src/jvm/clojure/lang/Compiler.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/Compiler.java b/src/jvm/clojure/lang/Compiler.java\nindex bc19538..1eaa9e8 100644\n--- a/src/jvm/clojure/lang/Compiler.java\n+++ b/src/jvm/clojure/lang/Compiler.java\n@@ -5774,7 +5774,7 @@\n \tcatch(Throwable e)\n \t\t{\n \t\tif(!(e instanceof CompilerException))\n-\t\t\tthrow new CompilerException((String) SOURCE.deref(), (Integer) LINE.deref(), e);\n+\t\t\tthrow new CompilerException((String) SOURCE_PATH.deref(), (Integer) LINE.deref(), e);\n \t\telse\n \t\t\tthrow (CompilerException) e;\n \t\t}\n@@ -5947,7 +5947,7 @@\n \tcatch(Throwable e)\n \t\t{\n \t\tif(!(e instanceof CompilerException))\n-\t\t\tthrow new CompilerException((String) SOURCE.deref(), (Integer) LINE.deref(), e);\n+\t\t\tthrow new CompilerException((String) SOURCE_PATH.deref(), (Integer) LINE.deref(), e);\n \t\telse\n \t\t\tthrow (CompilerException) e;\n \t\t}\n@@ -6434,7 +6434,7 @@\n \t\t}\n \tcatch(LispReader.ReaderException e)\n \t\t{\n-\t\tthrow new CompilerException(sourceName, e.line, e.getCause());\n+\t\tthrow new CompilerException(sourcePath, e.line, e.getCause());\n \t\t}\n \tfinally\n \t\t{\n@@ -6653,7 +6653,7 @@\n \t\t}\n \tcatch(LispReader.ReaderException e)\n \t\t{\n-\t\tthrow new CompilerException(sourceName, e.line, e.getCause());\n+\t\tthrow new CompilerException(sourcePath, e.line, e.getCause());\n \t\t}\n \tfinally\n \t\t{\n", "projectName": "clojure.clojure", "bugLineNum": 5950, "bugNodeStartChar": 178032, "bugNodeLength": 14, "fixLineNum": 5950, "fixNodeStartChar": 178032, "fixNodeLength": 19, "sourceBeforeFix": "SOURCE.deref()", "sourceAfterFix": "SOURCE_PATH.deref()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "2230a91829f39b72973e6fecf275d9c664911ca0", "fixCommitParentSHA1": "0456649282c4e3f298a5c75af2f979b8001e977a", "bugFilePath": "src/jvm/clojure/lang/Compiler.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/Compiler.java b/src/jvm/clojure/lang/Compiler.java\nindex bc19538..1eaa9e8 100644\n--- a/src/jvm/clojure/lang/Compiler.java\n+++ b/src/jvm/clojure/lang/Compiler.java\n@@ -5774,7 +5774,7 @@\n \tcatch(Throwable e)\n \t\t{\n \t\tif(!(e instanceof CompilerException))\n-\t\t\tthrow new CompilerException((String) SOURCE.deref(), (Integer) LINE.deref(), e);\n+\t\t\tthrow new CompilerException((String) SOURCE_PATH.deref(), (Integer) LINE.deref(), e);\n \t\telse\n \t\t\tthrow (CompilerException) e;\n \t\t}\n@@ -5947,7 +5947,7 @@\n \tcatch(Throwable e)\n \t\t{\n \t\tif(!(e instanceof CompilerException))\n-\t\t\tthrow new CompilerException((String) SOURCE.deref(), (Integer) LINE.deref(), e);\n+\t\t\tthrow new CompilerException((String) SOURCE_PATH.deref(), (Integer) LINE.deref(), e);\n \t\telse\n \t\t\tthrow (CompilerException) e;\n \t\t}\n@@ -6434,7 +6434,7 @@\n \t\t}\n \tcatch(LispReader.ReaderException e)\n \t\t{\n-\t\tthrow new CompilerException(sourceName, e.line, e.getCause());\n+\t\tthrow new CompilerException(sourcePath, e.line, e.getCause());\n \t\t}\n \tfinally\n \t\t{\n@@ -6653,7 +6653,7 @@\n \t\t}\n \tcatch(LispReader.ReaderException e)\n \t\t{\n-\t\tthrow new CompilerException(sourceName, e.line, e.getCause());\n+\t\tthrow new CompilerException(sourcePath, e.line, e.getCause());\n \t\t}\n \tfinally\n \t\t{\n", "projectName": "clojure.clojure", "bugLineNum": 6437, "bugNodeStartChar": 190666, "bugNodeLength": 55, "fixLineNum": 6437, "fixNodeStartChar": 190666, "fixNodeLength": 55, "sourceBeforeFix": "new CompilerException(sourceName,e.line,e.getCause())", "sourceAfterFix": "new CompilerException(sourcePath,e.line,e.getCause())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "2230a91829f39b72973e6fecf275d9c664911ca0", "fixCommitParentSHA1": "0456649282c4e3f298a5c75af2f979b8001e977a", "bugFilePath": "src/jvm/clojure/lang/Compiler.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/Compiler.java b/src/jvm/clojure/lang/Compiler.java\nindex bc19538..1eaa9e8 100644\n--- a/src/jvm/clojure/lang/Compiler.java\n+++ b/src/jvm/clojure/lang/Compiler.java\n@@ -5774,7 +5774,7 @@\n \tcatch(Throwable e)\n \t\t{\n \t\tif(!(e instanceof CompilerException))\n-\t\t\tthrow new CompilerException((String) SOURCE.deref(), (Integer) LINE.deref(), e);\n+\t\t\tthrow new CompilerException((String) SOURCE_PATH.deref(), (Integer) LINE.deref(), e);\n \t\telse\n \t\t\tthrow (CompilerException) e;\n \t\t}\n@@ -5947,7 +5947,7 @@\n \tcatch(Throwable e)\n \t\t{\n \t\tif(!(e instanceof CompilerException))\n-\t\t\tthrow new CompilerException((String) SOURCE.deref(), (Integer) LINE.deref(), e);\n+\t\t\tthrow new CompilerException((String) SOURCE_PATH.deref(), (Integer) LINE.deref(), e);\n \t\telse\n \t\t\tthrow (CompilerException) e;\n \t\t}\n@@ -6434,7 +6434,7 @@\n \t\t}\n \tcatch(LispReader.ReaderException e)\n \t\t{\n-\t\tthrow new CompilerException(sourceName, e.line, e.getCause());\n+\t\tthrow new CompilerException(sourcePath, e.line, e.getCause());\n \t\t}\n \tfinally\n \t\t{\n@@ -6653,7 +6653,7 @@\n \t\t}\n \tcatch(LispReader.ReaderException e)\n \t\t{\n-\t\tthrow new CompilerException(sourceName, e.line, e.getCause());\n+\t\tthrow new CompilerException(sourcePath, e.line, e.getCause());\n \t\t}\n \tfinally\n \t\t{\n", "projectName": "clojure.clojure", "bugLineNum": 6656, "bugNodeStartChar": 197692, "bugNodeLength": 55, "fixLineNum": 6656, "fixNodeStartChar": 197692, "fixNodeLength": 55, "sourceBeforeFix": "new CompilerException(sourceName,e.line,e.getCause())", "sourceAfterFix": "new CompilerException(sourcePath,e.line,e.getCause())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "8b849574ca1186c65124b43da8de6be6bace3f96", "fixCommitParentSHA1": "863decce5f38c8cde9882a0e172cbfe469f05743", "bugFilePath": "src/jvm/clojure/lang/Util.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/Util.java b/src/jvm/clojure/lang/Util.java\nindex eb94bfb..a3306db 100644\n--- a/src/jvm/clojure/lang/Util.java\n+++ b/src/jvm/clojure/lang/Util.java\n@@ -35,6 +35,7 @@\n \treturn k1 != null && k1.equals(k2);\n }\n \n+//*\n static public boolean equals(long x, long y){\n \treturn x == y;\n }\n@@ -44,20 +45,21 @@\n }\n \n static public boolean equals(long x, Object y){\n-\treturn equals((Object)x,y);\n+\treturn equals(Numbers.num(x),y);\n }\n \n static public boolean equals(Object x, long y){\n-\treturn equals(x,(Object)y);\n+\treturn equals(x,Numbers.num(y));\n }\n \n static public boolean equals(double x, Object y){\n-\treturn equals((Object)x,y);\n+\treturn equals((Double)x,y);\n }\n \n static public boolean equals(Object x, double y){\n-\treturn equals(x,(Object)y);\n+\treturn equals(x,(Double)y);\n }\n+//*/\n \n static public boolean identical(Object k1, Object k2){\n \treturn k1 == k2;\n", "projectName": "clojure.clojure", "bugLineNum": 55, "bugNodeStartChar": 1422, "bugNodeLength": 9, "fixLineNum": 55, "fixNodeStartChar": 1422, "fixNodeLength": 9, "sourceBeforeFix": "(Object)x", "sourceAfterFix": "(Double)x"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "8b849574ca1186c65124b43da8de6be6bace3f96", "fixCommitParentSHA1": "863decce5f38c8cde9882a0e172cbfe469f05743", "bugFilePath": "src/jvm/clojure/lang/Util.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/Util.java b/src/jvm/clojure/lang/Util.java\nindex eb94bfb..a3306db 100644\n--- a/src/jvm/clojure/lang/Util.java\n+++ b/src/jvm/clojure/lang/Util.java\n@@ -35,6 +35,7 @@\n \treturn k1 != null && k1.equals(k2);\n }\n \n+//*\n static public boolean equals(long x, long y){\n \treturn x == y;\n }\n@@ -44,20 +45,21 @@\n }\n \n static public boolean equals(long x, Object y){\n-\treturn equals((Object)x,y);\n+\treturn equals(Numbers.num(x),y);\n }\n \n static public boolean equals(Object x, long y){\n-\treturn equals(x,(Object)y);\n+\treturn equals(x,Numbers.num(y));\n }\n \n static public boolean equals(double x, Object y){\n-\treturn equals((Object)x,y);\n+\treturn equals((Double)x,y);\n }\n \n static public boolean equals(Object x, double y){\n-\treturn equals(x,(Object)y);\n+\treturn equals(x,(Double)y);\n }\n+//*/\n \n static public boolean identical(Object k1, Object k2){\n \treturn k1 == k2;\n", "projectName": "clojure.clojure", "bugLineNum": 59, "bugNodeStartChar": 1506, "bugNodeLength": 9, "fixLineNum": 59, "fixNodeStartChar": 1506, "fixNodeLength": 9, "sourceBeforeFix": "(Object)y", "sourceAfterFix": "(Double)y"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "d910b3d997e1c40528aab2212fe356a8598bb738", "fixCommitParentSHA1": "0ba40a260162330836b97f6d1bf3466404a63b55", "bugFilePath": "src/jvm/clojure/lang/RT.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RT.java b/src/jvm/clojure/lang/RT.java\nindex a5da74a..277e62b 100644\n--- a/src/jvm/clojure/lang/RT.java\n+++ b/src/jvm/clojure/lang/RT.java\n@@ -476,7 +476,7 @@\n \telse {\n \t\tClass c = coll.getClass();\n \t\tClass sc = c.getSuperclass();\n-\t\tthrow new IllegalArgumentException(\"Don't know how to create ISeq from: \" + c.getSimpleName());\n+\t\tthrow new IllegalArgumentException(\"Don't know how to create ISeq from: \" + c.getName());\n \t}\n }\n \n", "projectName": "clojure.clojure", "bugLineNum": 479, "bugNodeStartChar": 21347, "bugNodeLength": 17, "fixLineNum": 479, "fixNodeStartChar": 21347, "fixNodeLength": 11, "sourceBeforeFix": "c.getSimpleName()", "sourceAfterFix": "c.getName()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "d910b3d997e1c40528aab2212fe356a8598bb738", "fixCommitParentSHA1": "0ba40a260162330836b97f6d1bf3466404a63b55", "bugFilePath": "src/jvm/clojure/lang/RT.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RT.java b/src/jvm/clojure/lang/RT.java\nindex a5da74a..277e62b 100644\n--- a/src/jvm/clojure/lang/RT.java\n+++ b/src/jvm/clojure/lang/RT.java\n@@ -476,7 +476,7 @@\n \telse {\n \t\tClass c = coll.getClass();\n \t\tClass sc = c.getSuperclass();\n-\t\tthrow new IllegalArgumentException(\"Don't know how to create ISeq from: \" + c.getSimpleName());\n+\t\tthrow new IllegalArgumentException(\"Don't know how to create ISeq from: \" + c.getName());\n \t}\n }\n \n", "projectName": "clojure.clojure", "bugLineNum": 479, "bugNodeStartChar": 21347, "bugNodeLength": 17, "fixLineNum": 479, "fixNodeStartChar": 21347, "fixNodeLength": 11, "sourceBeforeFix": "c.getSimpleName()", "sourceAfterFix": "c.getName()"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "2f3d7d336122ca4f0c3961d92bbe0d05a4ec8316", "fixCommitParentSHA1": "040f083efc16dd830a4508a35a04465e3e5677d3", "bugFilePath": "src/jvm/clojure/lang/Symbol.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/Symbol.java b/src/jvm/clojure/lang/Symbol.java\nindex dac4a48..001043d 100644\n--- a/src/jvm/clojure/lang/Symbol.java\n+++ b/src/jvm/clojure/lang/Symbol.java\n@@ -42,7 +42,7 @@\n \n static public Symbol intern(String nsname){\n \tint i = nsname.lastIndexOf('/');\n-\tif(i == -1)\n+\tif(i == -1 || nsname.equals(\"/\"))\n \t\treturn new Symbol(null, nsname.intern());\n \telse\n \t\treturn new Symbol(nsname.substring(0, i).intern(), nsname.substring(i + 1).intern());\n", "projectName": "clojure.clojure", "bugLineNum": 45, "bugNodeStartChar": 1150, "bugNodeLength": 7, "fixLineNum": 45, "fixNodeStartChar": 1150, "fixNodeLength": 29, "sourceBeforeFix": "i == -1", "sourceAfterFix": "i == -1 || nsname.equals(\"/\")"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "2f3d7d336122ca4f0c3961d92bbe0d05a4ec8316", "fixCommitParentSHA1": "040f083efc16dd830a4508a35a04465e3e5677d3", "bugFilePath": "src/jvm/clojure/lang/Symbol.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/Symbol.java b/src/jvm/clojure/lang/Symbol.java\nindex dac4a48..001043d 100644\n--- a/src/jvm/clojure/lang/Symbol.java\n+++ b/src/jvm/clojure/lang/Symbol.java\n@@ -42,7 +42,7 @@\n \n static public Symbol intern(String nsname){\n \tint i = nsname.lastIndexOf('/');\n-\tif(i == -1)\n+\tif(i == -1 || nsname.equals(\"/\"))\n \t\treturn new Symbol(null, nsname.intern());\n \telse\n \t\treturn new Symbol(nsname.substring(0, i).intern(), nsname.substring(i + 1).intern());\n", "projectName": "clojure.clojure", "bugLineNum": 45, "bugNodeStartChar": 1150, "bugNodeLength": 7, "fixLineNum": 45, "fixNodeStartChar": 1150, "fixNodeLength": 29, "sourceBeforeFix": "i == -1", "sourceAfterFix": "i == -1 || nsname.equals(\"/\")"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "270185aba54cef1d8ce59ec347b5623f2e502afe", "fixCommitParentSHA1": "2474dad2a56b32527bb6ee10545ee3de476bc583", "bugFilePath": "src/jvm/clojure/lang/Numbers.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/Numbers.java b/src/jvm/clojure/lang/Numbers.java\nindex 043f9ae..8d5fd85 100644\n--- a/src/jvm/clojure/lang/Numbers.java\n+++ b/src/jvm/clojure/lang/Numbers.java\n@@ -1436,7 +1436,7 @@\n \t\telse\n \t\t\t{\n \t\t\tISeq s = RT.seq(sizeOrSeq);\n-\t\t\tint size = s.count();\n+\t\t\tint size = RT.count(s);\n \t\t\tfloat[] ret = new float[size];\n \t\t\tfor(int i = 0; i < size && s != null; i++, s = s.next())\n \t\t\t\tret[i] = ((Number) s.first()).floatValue();\n@@ -1467,7 +1467,7 @@\n \telse\n \t\t{\n \t\tISeq s = RT.seq(sizeOrSeq);\n-\t\tint size = s.count();\n+\t\tint size = RT.count(s);\n \t\tdouble[] ret = new double[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.next())\n \t\t\tret[i] = ((Number) s.first()).doubleValue();\n@@ -1498,7 +1498,7 @@\n \telse\n \t\t{\n \t\tISeq s = RT.seq(sizeOrSeq);\n-\t\tint size = s.count();\n+\t\tint size = RT.count(s);\n \t\tint[] ret = new int[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.next())\n \t\t\tret[i] = ((Number) s.first()).intValue();\n@@ -1529,7 +1529,7 @@\n \telse\n \t\t{\n \t\tISeq s = RT.seq(sizeOrSeq);\n-\t\tint size = s.count();\n+\t\tint size = RT.count(s);\n \t\tlong[] ret = new long[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.next())\n \t\t\tret[i] = ((Number) s.first()).longValue();\n", "projectName": "clojure.clojure", "bugLineNum": 1439, "bugNodeStartChar": 31374, "bugNodeLength": 9, "fixLineNum": 1439, "fixNodeStartChar": 31374, "fixNodeLength": 11, "sourceBeforeFix": "s.count()", "sourceAfterFix": "RT.count(s)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "270185aba54cef1d8ce59ec347b5623f2e502afe", "fixCommitParentSHA1": "2474dad2a56b32527bb6ee10545ee3de476bc583", "bugFilePath": "src/jvm/clojure/lang/Numbers.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/Numbers.java b/src/jvm/clojure/lang/Numbers.java\nindex 043f9ae..8d5fd85 100644\n--- a/src/jvm/clojure/lang/Numbers.java\n+++ b/src/jvm/clojure/lang/Numbers.java\n@@ -1436,7 +1436,7 @@\n \t\telse\n \t\t\t{\n \t\t\tISeq s = RT.seq(sizeOrSeq);\n-\t\t\tint size = s.count();\n+\t\t\tint size = RT.count(s);\n \t\t\tfloat[] ret = new float[size];\n \t\t\tfor(int i = 0; i < size && s != null; i++, s = s.next())\n \t\t\t\tret[i] = ((Number) s.first()).floatValue();\n@@ -1467,7 +1467,7 @@\n \telse\n \t\t{\n \t\tISeq s = RT.seq(sizeOrSeq);\n-\t\tint size = s.count();\n+\t\tint size = RT.count(s);\n \t\tdouble[] ret = new double[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.next())\n \t\t\tret[i] = ((Number) s.first()).doubleValue();\n@@ -1498,7 +1498,7 @@\n \telse\n \t\t{\n \t\tISeq s = RT.seq(sizeOrSeq);\n-\t\tint size = s.count();\n+\t\tint size = RT.count(s);\n \t\tint[] ret = new int[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.next())\n \t\t\tret[i] = ((Number) s.first()).intValue();\n@@ -1529,7 +1529,7 @@\n \telse\n \t\t{\n \t\tISeq s = RT.seq(sizeOrSeq);\n-\t\tint size = s.count();\n+\t\tint size = RT.count(s);\n \t\tlong[] ret = new long[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.next())\n \t\t\tret[i] = ((Number) s.first()).longValue();\n", "projectName": "clojure.clojure", "bugLineNum": 1470, "bugNodeStartChar": 32135, "bugNodeLength": 9, "fixLineNum": 1470, "fixNodeStartChar": 32135, "fixNodeLength": 11, "sourceBeforeFix": "s.count()", "sourceAfterFix": "RT.count(s)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "270185aba54cef1d8ce59ec347b5623f2e502afe", "fixCommitParentSHA1": "2474dad2a56b32527bb6ee10545ee3de476bc583", "bugFilePath": "src/jvm/clojure/lang/Numbers.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/Numbers.java b/src/jvm/clojure/lang/Numbers.java\nindex 043f9ae..8d5fd85 100644\n--- a/src/jvm/clojure/lang/Numbers.java\n+++ b/src/jvm/clojure/lang/Numbers.java\n@@ -1436,7 +1436,7 @@\n \t\telse\n \t\t\t{\n \t\t\tISeq s = RT.seq(sizeOrSeq);\n-\t\t\tint size = s.count();\n+\t\t\tint size = RT.count(s);\n \t\t\tfloat[] ret = new float[size];\n \t\t\tfor(int i = 0; i < size && s != null; i++, s = s.next())\n \t\t\t\tret[i] = ((Number) s.first()).floatValue();\n@@ -1467,7 +1467,7 @@\n \telse\n \t\t{\n \t\tISeq s = RT.seq(sizeOrSeq);\n-\t\tint size = s.count();\n+\t\tint size = RT.count(s);\n \t\tdouble[] ret = new double[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.next())\n \t\t\tret[i] = ((Number) s.first()).doubleValue();\n@@ -1498,7 +1498,7 @@\n \telse\n \t\t{\n \t\tISeq s = RT.seq(sizeOrSeq);\n-\t\tint size = s.count();\n+\t\tint size = RT.count(s);\n \t\tint[] ret = new int[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.next())\n \t\t\tret[i] = ((Number) s.first()).intValue();\n@@ -1529,7 +1529,7 @@\n \telse\n \t\t{\n \t\tISeq s = RT.seq(sizeOrSeq);\n-\t\tint size = s.count();\n+\t\tint size = RT.count(s);\n \t\tlong[] ret = new long[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.next())\n \t\t\tret[i] = ((Number) s.first()).longValue();\n", "projectName": "clojure.clojure", "bugLineNum": 1501, "bugNodeStartChar": 32863, "bugNodeLength": 9, "fixLineNum": 1501, "fixNodeStartChar": 32863, "fixNodeLength": 11, "sourceBeforeFix": "s.count()", "sourceAfterFix": "RT.count(s)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "270185aba54cef1d8ce59ec347b5623f2e502afe", "fixCommitParentSHA1": "2474dad2a56b32527bb6ee10545ee3de476bc583", "bugFilePath": "src/jvm/clojure/lang/Numbers.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/Numbers.java b/src/jvm/clojure/lang/Numbers.java\nindex 043f9ae..8d5fd85 100644\n--- a/src/jvm/clojure/lang/Numbers.java\n+++ b/src/jvm/clojure/lang/Numbers.java\n@@ -1436,7 +1436,7 @@\n \t\telse\n \t\t\t{\n \t\t\tISeq s = RT.seq(sizeOrSeq);\n-\t\t\tint size = s.count();\n+\t\t\tint size = RT.count(s);\n \t\t\tfloat[] ret = new float[size];\n \t\t\tfor(int i = 0; i < size && s != null; i++, s = s.next())\n \t\t\t\tret[i] = ((Number) s.first()).floatValue();\n@@ -1467,7 +1467,7 @@\n \telse\n \t\t{\n \t\tISeq s = RT.seq(sizeOrSeq);\n-\t\tint size = s.count();\n+\t\tint size = RT.count(s);\n \t\tdouble[] ret = new double[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.next())\n \t\t\tret[i] = ((Number) s.first()).doubleValue();\n@@ -1498,7 +1498,7 @@\n \telse\n \t\t{\n \t\tISeq s = RT.seq(sizeOrSeq);\n-\t\tint size = s.count();\n+\t\tint size = RT.count(s);\n \t\tint[] ret = new int[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.next())\n \t\t\tret[i] = ((Number) s.first()).intValue();\n@@ -1529,7 +1529,7 @@\n \telse\n \t\t{\n \t\tISeq s = RT.seq(sizeOrSeq);\n-\t\tint size = s.count();\n+\t\tint size = RT.count(s);\n \t\tlong[] ret = new long[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.next())\n \t\t\tret[i] = ((Number) s.first()).longValue();\n", "projectName": "clojure.clojure", "bugLineNum": 1532, "bugNodeStartChar": 33592, "bugNodeLength": 9, "fixLineNum": 1532, "fixNodeStartChar": 33592, "fixNodeLength": 11, "sourceBeforeFix": "s.count()", "sourceAfterFix": "RT.count(s)"}, {"bugType": "SWAP_ARGUMENTS", "fixCommitSHA1": "2cf6eb9e746ab1c610460badf4f99f1ee19bf0b3", "fixCommitParentSHA1": "56d70e433a66087c720e82a67e6460fae1169862", "bugFilePath": "src/jvm/clojure/lang/PersistentHashMap.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/PersistentHashMap.java b/src/jvm/clojure/lang/PersistentHashMap.java\nindex bd44af8..3fbabca 100644\n--- a/src/jvm/clojure/lang/PersistentHashMap.java\n+++ b/src/jvm/clojure/lang/PersistentHashMap.java\n@@ -770,7 +770,7 @@\n \tprivate HashCollisionNode ensureEditable(AtomicReference<Thread> edit){\n \t\tif(this.edit == edit)\n \t\t\treturn this;\n-\t\treturn new HashCollisionNode(edit, count, hash, array);\n+\t\treturn new HashCollisionNode(edit, hash, count, array);\n \t}\n \n \tprivate HashCollisionNode ensureEditable(AtomicReference<Thread> edit, int count, Object[] array){\n@@ -778,7 +778,7 @@\n \t\t\tthis.array = array;\n \t\t\treturn this;\n \t\t}\n-\t\treturn new HashCollisionNode(edit, count, hash, array);\n+\t\treturn new HashCollisionNode(edit, hash, count, array);\n \t}\n \n \tprivate HashCollisionNode editAndSet(AtomicReference<Thread> edit, int i, Object a) {\n", "projectName": "clojure.clojure", "bugLineNum": 773, "bugNodeStartChar": 21963, "bugNodeLength": 47, "fixLineNum": 773, "fixNodeStartChar": 21963, "fixNodeLength": 47, "sourceBeforeFix": "new HashCollisionNode(edit,count,hash,array)", "sourceAfterFix": "new HashCollisionNode(edit,hash,count,array)"}, {"bugType": "SWAP_ARGUMENTS", "fixCommitSHA1": "2cf6eb9e746ab1c610460badf4f99f1ee19bf0b3", "fixCommitParentSHA1": "56d70e433a66087c720e82a67e6460fae1169862", "bugFilePath": "src/jvm/clojure/lang/PersistentHashMap.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/PersistentHashMap.java b/src/jvm/clojure/lang/PersistentHashMap.java\nindex bd44af8..3fbabca 100644\n--- a/src/jvm/clojure/lang/PersistentHashMap.java\n+++ b/src/jvm/clojure/lang/PersistentHashMap.java\n@@ -770,7 +770,7 @@\n \tprivate HashCollisionNode ensureEditable(AtomicReference<Thread> edit){\n \t\tif(this.edit == edit)\n \t\t\treturn this;\n-\t\treturn new HashCollisionNode(edit, count, hash, array);\n+\t\treturn new HashCollisionNode(edit, hash, count, array);\n \t}\n \n \tprivate HashCollisionNode ensureEditable(AtomicReference<Thread> edit, int count, Object[] array){\n@@ -778,7 +778,7 @@\n \t\t\tthis.array = array;\n \t\t\treturn this;\n \t\t}\n-\t\treturn new HashCollisionNode(edit, count, hash, array);\n+\t\treturn new HashCollisionNode(edit, hash, count, array);\n \t}\n \n \tprivate HashCollisionNode editAndSet(AtomicReference<Thread> edit, int i, Object a) {\n", "projectName": "clojure.clojure", "bugLineNum": 781, "bugNodeStartChar": 22194, "bugNodeLength": 47, "fixLineNum": 781, "fixNodeStartChar": 22194, "fixNodeLength": 47, "sourceBeforeFix": "new HashCollisionNode(edit,count,hash,array)", "sourceAfterFix": "new HashCollisionNode(edit,hash,count,array)"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "0bd86ba81d15584b0e12ce6d783e41bcd916b95f", "fixCommitParentSHA1": "126253e94fbd01feefdfc44f69815e15e066a879", "bugFilePath": "src/jvm/clojure/lang/Compiler.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/Compiler.java b/src/jvm/clojure/lang/Compiler.java\nindex 6b76eb4..6f1e88f 100644\n--- a/src/jvm/clojure/lang/Compiler.java\n+++ b/src/jvm/clojure/lang/Compiler.java\n@@ -1026,7 +1026,7 @@\n static Class maybePrimitiveType(Expr e){\n \ttry\n \t\t{\n-\t\tif(e instanceof MaybePrimitiveExpr && e.hasJavaClass())\n+\t\tif(e instanceof MaybePrimitiveExpr && e.hasJavaClass() && ((MaybePrimitiveExpr)e).canEmitPrimitive())\n \t\t\t{\n \t\t\tClass c = e.getJavaClass();\n \t\t\tif(Util.isPrimitive(c))\n@@ -2135,8 +2135,7 @@\n \n \t\ttry\n \t\t\t{\n-\t\t\tif(testExpr instanceof MaybePrimitiveExpr && testExpr.hasJavaClass() &&\n-\t\t\t   testExpr.getJavaClass() == boolean.class)\n+\t\t\tif(maybePrimitiveType(testExpr) == boolean.class)\n \t\t\t\t{\n \t\t\t\t((MaybePrimitiveExpr) testExpr).emitUnboxed(C.EXPRESSION, objx, gen);\n \t\t\t\tgen.ifZCmp(gen.EQ, falseLabel);\n", "projectName": "clojure.clojure", "bugLineNum": 1029, "bugNodeStartChar": 32047, "bugNodeLength": 51, "fixLineNum": 1029, "fixNodeStartChar": 32047, "fixNodeLength": 97, "sourceBeforeFix": "e instanceof MaybePrimitiveExpr && e.hasJavaClass()", "sourceAfterFix": "e instanceof MaybePrimitiveExpr && e.hasJavaClass() && ((MaybePrimitiveExpr)e).canEmitPrimitive()"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "c4a5cd208aef54ae5b292fa41c4880017315e553", "fixCommitParentSHA1": "88cb2692219dfba415e2e6c631077e0d0e8a7699", "bugFilePath": "src/jvm/clojure/lang/Compiler.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/Compiler.java b/src/jvm/clojure/lang/Compiler.java\nindex cb14d96..9d744d7 100644\n--- a/src/jvm/clojure/lang/Compiler.java\n+++ b/src/jvm/clojure/lang/Compiler.java\n@@ -971,7 +971,7 @@\n \tpublic void emitAssign(C context, FnExpr fn, GeneratorAdapter gen,\n \t                       Expr val){\n \t\tgen.visitLineNumber(line, gen.mark());\n-\t\tif(targetClass != null)\n+\t\tif(targetClass != null && field != null)\n \t\t\t{\n \t\t\ttarget.emit(C.EXPRESSION, fn, gen);\n \t\t\tgen.checkCast(Type.getType(targetClass));\n", "projectName": "clojure.clojure", "bugLineNum": 974, "bugNodeStartChar": 30251, "bugNodeLength": 19, "fixLineNum": 974, "fixNodeStartChar": 30251, "fixNodeLength": 36, "sourceBeforeFix": "targetClass != null", "sourceAfterFix": "targetClass != null && field != null"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "53ec9af4fd879482a6b8e04cff029d5db9634870", "fixCommitParentSHA1": "49022384daa01c2e0de497703a99627b748fd985", "bugFilePath": "src/jvm/clojure/lang/LispReader.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/LispReader.java b/src/jvm/clojure/lang/LispReader.java\nindex dc8be57..d4d03f8 100644\n--- a/src/jvm/clojure/lang/LispReader.java\n+++ b/src/jvm/clojure/lang/LispReader.java\n@@ -684,7 +684,7 @@\n \t\telse\r\n \t\t\tret = RT.list(Compiler.QUOTE, form);\r\n \r\n-\t\tif(form instanceof IObj && ((IObj) form).meta() != null)\r\n+\t\tif(form instanceof IObj && !(form instanceof Var) && ((IObj) form).meta() != null)\r\n \t\t\t{\r\n \t\t\t//filter line numbers\r\n \t\t\tIPersistentMap newMeta = ((IObj) form).meta().without(RT.LINE_KEY);\r\n", "projectName": "clojure.clojure", "bugLineNum": 687, "bugNodeStartChar": 19151, "bugNodeLength": 52, "fixLineNum": 687, "fixNodeStartChar": 18465, "fixNodeLength": 78, "sourceBeforeFix": "form instanceof IObj && ((IObj)form).meta() != null", "sourceAfterFix": "form instanceof IObj && !(form instanceof Var) && ((IObj)form).meta() != null"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "ede290d6bafc2d01786e0b9551b7eaf4ea313959", "fixCommitParentSHA1": "eba20b3dcc401fb4c873afc5948cc92fbcb00097", "bugFilePath": "src/jvm/clojure/lang/APersistentMap.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/APersistentMap.java b/src/jvm/clojure/lang/APersistentMap.java\nindex 7df6986..b112d98 100644\n--- a/src/jvm/clojure/lang/APersistentMap.java\n+++ b/src/jvm/clojure/lang/APersistentMap.java\n@@ -205,7 +205,7 @@\n \t\t\t{\r\n \t\t\ta[i] = s.first();\r\n \t\t\t}\r\n-\t\tif(a.length >= count())\r\n+\t\tif(a.length > count())\r\n \t\t\ta[count()] = null;\r\n \t\treturn a;\r\n \t\t}\r\n", "projectName": "clojure.clojure", "bugLineNum": 208, "bugNodeStartChar": 4377, "bugNodeLength": 19, "fixLineNum": 208, "fixNodeStartChar": 4170, "fixNodeLength": 18, "sourceBeforeFix": "a.length >= count()", "sourceAfterFix": "a.length > count()"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "ede290d6bafc2d01786e0b9551b7eaf4ea313959", "fixCommitParentSHA1": "eba20b3dcc401fb4c873afc5948cc92fbcb00097", "bugFilePath": "src/jvm/clojure/lang/APersistentSet.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/APersistentSet.java b/src/jvm/clojure/lang/APersistentSet.java\nindex d40ff98..7cf94c3 100644\n--- a/src/jvm/clojure/lang/APersistentSet.java\n+++ b/src/jvm/clojure/lang/APersistentSet.java\n@@ -121,7 +121,7 @@\n \t\t\t{\n \t\t\ta[i] = s.first();\n \t\t\t}\n-\t\tif(a.length >= count())\n+\t\tif(a.length > count())\n \t\t\ta[count()] = null;\n \t\treturn a;\n \t\t}\n", "projectName": "clojure.clojure", "bugLineNum": 124, "bugNodeStartChar": 2521, "bugNodeLength": 19, "fixLineNum": 124, "fixNodeStartChar": 2521, "fixNodeLength": 18, "sourceBeforeFix": "a.length >= count()", "sourceAfterFix": "a.length > count()"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "ede290d6bafc2d01786e0b9551b7eaf4ea313959", "fixCommitParentSHA1": "eba20b3dcc401fb4c873afc5948cc92fbcb00097", "bugFilePath": "src/jvm/clojure/lang/APersistentVector.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/APersistentVector.java b/src/jvm/clojure/lang/APersistentVector.java\nindex d0ae351..54f6834 100644\n--- a/src/jvm/clojure/lang/APersistentVector.java\n+++ b/src/jvm/clojure/lang/APersistentVector.java\n@@ -287,7 +287,7 @@\n \t\t\t{\n \t\t\ta[i] = s.first();\n \t\t\t}\n-\t\tif(a.length >= count())\n+\t\tif(a.length > count())\n \t\t\ta[count()] = null;\n \t\treturn a;\n \t\t}\n", "projectName": "clojure.clojure", "bugLineNum": 290, "bugNodeStartChar": 5576, "bugNodeLength": 19, "fixLineNum": 290, "fixNodeStartChar": 5576, "fixNodeLength": 18, "sourceBeforeFix": "a.length >= count()", "sourceAfterFix": "a.length > count()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "eba20b3dcc401fb4c873afc5948cc92fbcb00097", "fixCommitParentSHA1": "c81e2a431edcbda8f7287418bc91f75a9e195a3a", "bugFilePath": "src/jvm/clojure/lang/Numbers.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/Numbers.java b/src/jvm/clojure/lang/Numbers.java\nindex 5f56ab5..47bac98 100644\n--- a/src/jvm/clojure/lang/Numbers.java\n+++ b/src/jvm/clojure/lang/Numbers.java\n@@ -1277,7 +1277,7 @@\n \t\t\tint size = s.count();\n \t\t\tfloat[] ret = new float[size];\n \t\t\tfor(int i = 0; i < size && s != null; i++, s = s.rest())\n-\t\t\t\tret[i] = ((Number) s.first()).intValue();\n+\t\t\t\tret[i] = ((Number) s.first()).floatValue();\n \t\t\treturn ret;\n \t\t\t}\n \t}\n@@ -1308,7 +1308,7 @@\n \t\tint size = s.count();\n \t\tdouble[] ret = new double[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.rest())\n-\t\t\tret[i] = ((Number) s.first()).intValue();\n+\t\t\tret[i] = ((Number) s.first()).doubleValue();\n \t\treturn ret;\n \t\t}\n }\n@@ -1370,7 +1370,7 @@\n \t\tint size = s.count();\n \t\tlong[] ret = new long[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.rest())\n-\t\t\tret[i] = ((Number) s.first()).intValue();\n+\t\t\tret[i] = ((Number) s.first()).longValue();\n \t\treturn ret;\n \t\t}\n }\n", "projectName": "clojure.clojure", "bugLineNum": 1280, "bugNodeStartChar": 28461, "bugNodeLength": 31, "fixLineNum": 1280, "fixNodeStartChar": 28461, "fixNodeLength": 33, "sourceBeforeFix": "((Number)s.first()).intValue()", "sourceAfterFix": "((Number)s.first()).floatValue()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "eba20b3dcc401fb4c873afc5948cc92fbcb00097", "fixCommitParentSHA1": "c81e2a431edcbda8f7287418bc91f75a9e195a3a", "bugFilePath": "src/jvm/clojure/lang/Numbers.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/Numbers.java b/src/jvm/clojure/lang/Numbers.java\nindex 5f56ab5..47bac98 100644\n--- a/src/jvm/clojure/lang/Numbers.java\n+++ b/src/jvm/clojure/lang/Numbers.java\n@@ -1277,7 +1277,7 @@\n \t\t\tint size = s.count();\n \t\t\tfloat[] ret = new float[size];\n \t\t\tfor(int i = 0; i < size && s != null; i++, s = s.rest())\n-\t\t\t\tret[i] = ((Number) s.first()).intValue();\n+\t\t\t\tret[i] = ((Number) s.first()).floatValue();\n \t\t\treturn ret;\n \t\t\t}\n \t}\n@@ -1308,7 +1308,7 @@\n \t\tint size = s.count();\n \t\tdouble[] ret = new double[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.rest())\n-\t\t\tret[i] = ((Number) s.first()).intValue();\n+\t\t\tret[i] = ((Number) s.first()).doubleValue();\n \t\treturn ret;\n \t\t}\n }\n@@ -1370,7 +1370,7 @@\n \t\tint size = s.count();\n \t\tlong[] ret = new long[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.rest())\n-\t\t\tret[i] = ((Number) s.first()).intValue();\n+\t\t\tret[i] = ((Number) s.first()).longValue();\n \t\treturn ret;\n \t\t}\n }\n", "projectName": "clojure.clojure", "bugLineNum": 1280, "bugNodeStartChar": 28461, "bugNodeLength": 31, "fixLineNum": 1280, "fixNodeStartChar": 28461, "fixNodeLength": 33, "sourceBeforeFix": "((Number)s.first()).intValue()", "sourceAfterFix": "((Number)s.first()).floatValue()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "eba20b3dcc401fb4c873afc5948cc92fbcb00097", "fixCommitParentSHA1": "c81e2a431edcbda8f7287418bc91f75a9e195a3a", "bugFilePath": "src/jvm/clojure/lang/Numbers.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/Numbers.java b/src/jvm/clojure/lang/Numbers.java\nindex 5f56ab5..47bac98 100644\n--- a/src/jvm/clojure/lang/Numbers.java\n+++ b/src/jvm/clojure/lang/Numbers.java\n@@ -1277,7 +1277,7 @@\n \t\t\tint size = s.count();\n \t\t\tfloat[] ret = new float[size];\n \t\t\tfor(int i = 0; i < size && s != null; i++, s = s.rest())\n-\t\t\t\tret[i] = ((Number) s.first()).intValue();\n+\t\t\t\tret[i] = ((Number) s.first()).floatValue();\n \t\t\treturn ret;\n \t\t\t}\n \t}\n@@ -1308,7 +1308,7 @@\n \t\tint size = s.count();\n \t\tdouble[] ret = new double[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.rest())\n-\t\t\tret[i] = ((Number) s.first()).intValue();\n+\t\t\tret[i] = ((Number) s.first()).doubleValue();\n \t\treturn ret;\n \t\t}\n }\n@@ -1370,7 +1370,7 @@\n \t\tint size = s.count();\n \t\tlong[] ret = new long[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.rest())\n-\t\t\tret[i] = ((Number) s.first()).intValue();\n+\t\t\tret[i] = ((Number) s.first()).longValue();\n \t\treturn ret;\n \t\t}\n }\n", "projectName": "clojure.clojure", "bugLineNum": 1311, "bugNodeStartChar": 29219, "bugNodeLength": 31, "fixLineNum": 1311, "fixNodeStartChar": 29219, "fixNodeLength": 34, "sourceBeforeFix": "((Number)s.first()).intValue()", "sourceAfterFix": "((Number)s.first()).doubleValue()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "eba20b3dcc401fb4c873afc5948cc92fbcb00097", "fixCommitParentSHA1": "c81e2a431edcbda8f7287418bc91f75a9e195a3a", "bugFilePath": "src/jvm/clojure/lang/Numbers.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/Numbers.java b/src/jvm/clojure/lang/Numbers.java\nindex 5f56ab5..47bac98 100644\n--- a/src/jvm/clojure/lang/Numbers.java\n+++ b/src/jvm/clojure/lang/Numbers.java\n@@ -1277,7 +1277,7 @@\n \t\t\tint size = s.count();\n \t\t\tfloat[] ret = new float[size];\n \t\t\tfor(int i = 0; i < size && s != null; i++, s = s.rest())\n-\t\t\t\tret[i] = ((Number) s.first()).intValue();\n+\t\t\t\tret[i] = ((Number) s.first()).floatValue();\n \t\t\treturn ret;\n \t\t\t}\n \t}\n@@ -1308,7 +1308,7 @@\n \t\tint size = s.count();\n \t\tdouble[] ret = new double[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.rest())\n-\t\t\tret[i] = ((Number) s.first()).intValue();\n+\t\t\tret[i] = ((Number) s.first()).doubleValue();\n \t\treturn ret;\n \t\t}\n }\n@@ -1370,7 +1370,7 @@\n \t\tint size = s.count();\n \t\tlong[] ret = new long[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.rest())\n-\t\t\tret[i] = ((Number) s.first()).intValue();\n+\t\t\tret[i] = ((Number) s.first()).longValue();\n \t\treturn ret;\n \t\t}\n }\n", "projectName": "clojure.clojure", "bugLineNum": 1311, "bugNodeStartChar": 29219, "bugNodeLength": 31, "fixLineNum": 1311, "fixNodeStartChar": 29219, "fixNodeLength": 34, "sourceBeforeFix": "((Number)s.first()).intValue()", "sourceAfterFix": "((Number)s.first()).doubleValue()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "eba20b3dcc401fb4c873afc5948cc92fbcb00097", "fixCommitParentSHA1": "c81e2a431edcbda8f7287418bc91f75a9e195a3a", "bugFilePath": "src/jvm/clojure/lang/Numbers.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/Numbers.java b/src/jvm/clojure/lang/Numbers.java\nindex 5f56ab5..47bac98 100644\n--- a/src/jvm/clojure/lang/Numbers.java\n+++ b/src/jvm/clojure/lang/Numbers.java\n@@ -1277,7 +1277,7 @@\n \t\t\tint size = s.count();\n \t\t\tfloat[] ret = new float[size];\n \t\t\tfor(int i = 0; i < size && s != null; i++, s = s.rest())\n-\t\t\t\tret[i] = ((Number) s.first()).intValue();\n+\t\t\t\tret[i] = ((Number) s.first()).floatValue();\n \t\t\treturn ret;\n \t\t\t}\n \t}\n@@ -1308,7 +1308,7 @@\n \t\tint size = s.count();\n \t\tdouble[] ret = new double[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.rest())\n-\t\t\tret[i] = ((Number) s.first()).intValue();\n+\t\t\tret[i] = ((Number) s.first()).doubleValue();\n \t\treturn ret;\n \t\t}\n }\n@@ -1370,7 +1370,7 @@\n \t\tint size = s.count();\n \t\tlong[] ret = new long[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.rest())\n-\t\t\tret[i] = ((Number) s.first()).intValue();\n+\t\t\tret[i] = ((Number) s.first()).longValue();\n \t\treturn ret;\n \t\t}\n }\n", "projectName": "clojure.clojure", "bugLineNum": 1373, "bugNodeStartChar": 30669, "bugNodeLength": 31, "fixLineNum": 1373, "fixNodeStartChar": 30669, "fixNodeLength": 32, "sourceBeforeFix": "((Number)s.first()).intValue()", "sourceAfterFix": "((Number)s.first()).longValue()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "eba20b3dcc401fb4c873afc5948cc92fbcb00097", "fixCommitParentSHA1": "c81e2a431edcbda8f7287418bc91f75a9e195a3a", "bugFilePath": "src/jvm/clojure/lang/Numbers.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/Numbers.java b/src/jvm/clojure/lang/Numbers.java\nindex 5f56ab5..47bac98 100644\n--- a/src/jvm/clojure/lang/Numbers.java\n+++ b/src/jvm/clojure/lang/Numbers.java\n@@ -1277,7 +1277,7 @@\n \t\t\tint size = s.count();\n \t\t\tfloat[] ret = new float[size];\n \t\t\tfor(int i = 0; i < size && s != null; i++, s = s.rest())\n-\t\t\t\tret[i] = ((Number) s.first()).intValue();\n+\t\t\t\tret[i] = ((Number) s.first()).floatValue();\n \t\t\treturn ret;\n \t\t\t}\n \t}\n@@ -1308,7 +1308,7 @@\n \t\tint size = s.count();\n \t\tdouble[] ret = new double[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.rest())\n-\t\t\tret[i] = ((Number) s.first()).intValue();\n+\t\t\tret[i] = ((Number) s.first()).doubleValue();\n \t\treturn ret;\n \t\t}\n }\n@@ -1370,7 +1370,7 @@\n \t\tint size = s.count();\n \t\tlong[] ret = new long[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.rest())\n-\t\t\tret[i] = ((Number) s.first()).intValue();\n+\t\t\tret[i] = ((Number) s.first()).longValue();\n \t\treturn ret;\n \t\t}\n }\n", "projectName": "clojure.clojure", "bugLineNum": 1373, "bugNodeStartChar": 30669, "bugNodeLength": 31, "fixLineNum": 1373, "fixNodeStartChar": 30669, "fixNodeLength": 32, "sourceBeforeFix": "((Number)s.first()).intValue()", "sourceAfterFix": "((Number)s.first()).longValue()"}, {"bugType": "LESS_SPECIFIC_IF", "fixCommitSHA1": "cf098f8998b7869dfc180b9fccb65ae6a8a9e70e", "fixCommitParentSHA1": "ea72ff9b02a3736e0dc78ce694c76a5a3d73d6b3", "bugFilePath": "src/jvm/clojure/lang/RT.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RT.java b/src/jvm/clojure/lang/RT.java\nindex e743228..eb0368f 100644\n--- a/src/jvm/clojure/lang/RT.java\n+++ b/src/jvm/clojure/lang/RT.java\n@@ -941,7 +941,7 @@\n \t\t}\n \tif(x == null)\n \t\tw.write(\"nil\");\n-\telse if(x instanceof ISeq)\n+\telse if(x instanceof ISeq || x instanceof IPersistentList)\n \t\t{\n \t\tw.write('(');\n \t\tprintInnerSeq(seq(x), w);\n", "projectName": "clojure.clojure", "bugLineNum": 944, "bugNodeStartChar": 29666, "bugNodeLength": 17, "fixLineNum": 944, "fixNodeStartChar": 29666, "fixNodeLength": 49, "sourceBeforeFix": "x instanceof ISeq", "sourceAfterFix": "x instanceof ISeq || x instanceof IPersistentList"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "c06e4e53bf344a1687eb80ce12a8894cf4b2dbf2", "fixCommitParentSHA1": "ab789fc2a395d19c1a8670765578fcda736e121c", "bugFilePath": "src/jvm/clojure/lang/Compiler.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/Compiler.java b/src/jvm/clojure/lang/Compiler.java\nindex a3542ee..ef7a519 100644\n--- a/src/jvm/clojure/lang/Compiler.java\n+++ b/src/jvm/clojure/lang/Compiler.java\n@@ -799,7 +799,7 @@\n \n \tpublic void emit(C context, FnExpr fn, GeneratorAdapter gen){\n \t\tgen.visitLineNumber(line, gen.mark());\n-\t\tif(targetClass != null)\n+\t\tif(targetClass != null && field != null)\n \t\t\t{\n \t\t\tif(context != C.STATEMENT)\n \t\t\t\t{\n", "projectName": "clojure.clojure", "bugLineNum": 802, "bugNodeStartChar": 24371, "bugNodeLength": 19, "fixLineNum": 802, "fixNodeStartChar": 24371, "fixNodeLength": 36, "sourceBeforeFix": "targetClass != null", "sourceAfterFix": "targetClass != null && field != null"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "1f4466a7a54f26f78f47d4fa3f5b6e6d786aefcc", "fixCommitParentSHA1": "ddbc5777098d58296d52ee2872f8a79e72f48ff8", "bugFilePath": "src/jvm/clojure/lang/Compiler.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/Compiler.java b/src/jvm/clojure/lang/Compiler.java\nindex dacdf0f..c1df153 100644\n--- a/src/jvm/clojure/lang/Compiler.java\n+++ b/src/jvm/clojure/lang/Compiler.java\n@@ -2951,12 +2951,13 @@\n \t}\n \n \tvoid emitClearLocals(GeneratorAdapter gen){\n-\t\tfor(int i = 0; i < numParams(); i++)\n+\t\tfor(int i = 1; i < numParams()+1; i++)\n \t\t\t{\n \t\t\tif(!localsUsedInCatchFinally.contains(i))\n \t\t\t\t{\n \t\t\t\tgen.visitInsn(Opcodes.ACONST_NULL);\n-\t\t\t\tgen.storeArg(i);\n+\t\t\t\tgen.visitVarInsn(OBJECT_TYPE.getOpcode(Opcodes.ISTORE), i);\n+//\t\t\t\tgen.storeArg(i);\n \t\t\t\t}\n \t\t\t}\n \t\tfor(int i = numParams() + 1; i < maxLocal + 1; i++)\n", "projectName": "clojure.clojure", "bugLineNum": 2954, "bugNodeStartChar": 86896, "bugNodeLength": 5, "fixLineNum": 2954, "fixNodeStartChar": 86896, "fixNodeLength": 5, "sourceBeforeFix": "i=0", "sourceAfterFix": "i=1"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "8352100cc39e3bf451341eff335e40db930c2aa7", "fixCommitParentSHA1": "33f3a467e9b445fa70bd58c84a614d77335947c2", "bugFilePath": "src/jvm/clojure/lang/RT.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RT.java b/src/jvm/clojure/lang/RT.java\nindex cb72373..3053b57 100644\n--- a/src/jvm/clojure/lang/RT.java\n+++ b/src/jvm/clojure/lang/RT.java\n@@ -441,7 +441,7 @@\n \telse if(key instanceof Number && (coll instanceof String || coll.getClass().isArray()))\n \t\t{\n \t\tint n = ((Number) key).intValue();\n-\t\tif(n < count(coll))\n+\t\tif(n >= 0 && n < count(coll))\n \t\t\treturn nth(coll, n);\n \t\treturn null;\n \t\t}\n", "projectName": "clojure.clojure", "bugLineNum": 444, "bugNodeStartChar": 17079, "bugNodeLength": 15, "fixLineNum": 444, "fixNodeStartChar": 17079, "fixNodeLength": 25, "sourceBeforeFix": "n < count(coll)", "sourceAfterFix": "n >= 0 && n < count(coll)"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "1fa64dabf0f071a37fb9df6ff4a6575a2da21be5", "fixCommitParentSHA1": "19449a772787d94dee4bb31f9b5081e934e79d90", "bugFilePath": "src/jvm/clojure/lang/ASeq.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/ASeq.java b/src/jvm/clojure/lang/ASeq.java\nindex 67e2b77..d19c890 100644\n--- a/src/jvm/clojure/lang/ASeq.java\n+++ b/src/jvm/clojure/lang/ASeq.java\n@@ -124,7 +124,7 @@\n \t\t\t{\r\n \t\t\ta[i] = s.first();\r\n \t\t\t}\r\n-\t\tif(a.length >= count())\r\n+\t\tif(a.length > count())\r\n \t\t\ta[count()] = null;\r\n \t\treturn a;\r\n \t\t}\r\n", "projectName": "clojure.clojure", "bugLineNum": 127, "bugNodeStartChar": 2557, "bugNodeLength": 19, "fixLineNum": 127, "fixNodeStartChar": 2431, "fixNodeLength": 18, "sourceBeforeFix": "a.length >= count()", "sourceAfterFix": "a.length > count()"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "0a71511afb0e94f9b3413ff670953a42be97eeb8", "fixCommitParentSHA1": "2fd70293876dc3713cb9deb1c3e1f237336c6b62", "bugFilePath": "src/jvm/clojure/lang/ProxyHandler.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/ProxyHandler.java b/src/jvm/clojure/lang/ProxyHandler.java\nindex 2e67d5b..832deef 100644\n--- a/src/jvm/clojure/lang/ProxyHandler.java\n+++ b/src/jvm/clojure/lang/ProxyHandler.java\n@@ -48,7 +48,7 @@\n \t\t\treturn ((Number) ret).floatValue();\n \t\telse if(rt == Double.TYPE)\n \t\t\treturn ((Number) ret).doubleValue();\n-\t\telse if(rt == Boolean.TYPE)\n+\t\telse if(rt == Boolean.TYPE && !(ret instanceof Boolean))\n \t\t\treturn ret == null ? Boolean.FALSE : Boolean.TRUE;\n \t\telse if(rt == Byte.TYPE)\n \t\t\treturn (byte) ((Number) ret).intValue();\n", "projectName": "clojure.clojure", "bugLineNum": 51, "bugNodeStartChar": 1468, "bugNodeLength": 18, "fixLineNum": 51, "fixNodeStartChar": 1468, "fixNodeLength": 47, "sourceBeforeFix": "rt == Boolean.TYPE", "sourceAfterFix": "rt == Boolean.TYPE && !(ret instanceof Boolean)"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "742bf71003d62c9d41881aa7c59740993a749243", "fixCommitParentSHA1": "7e0466d0699b23a6da4557597d3489eb9c54a36b", "bugFilePath": "src/jvm/clojure/lang/PersistentVector.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/PersistentVector.java b/src/jvm/clojure/lang/PersistentVector.java\nindex 4e93dc9..3910d11 100644\n--- a/src/jvm/clojure/lang/PersistentVector.java\n+++ b/src/jvm/clojure/lang/PersistentVector.java\n@@ -324,7 +324,7 @@\n \t\t{\n \t\treturn (PersistentVector) EMPTY.withMeta(meta());\n \t\t}\n-\tif(newroot.length == 1)\n+\tif(shift > 0 && newroot.length == 1)\n \t\t{\n \t\tnewroot = (Object[]) newroot[0];\n \t\tnewshift -= 5;\n", "projectName": "clojure.clojure", "bugLineNum": 327, "bugNodeStartChar": 6579, "bugNodeLength": 19, "fixLineNum": 327, "fixNodeStartChar": 6579, "fixNodeLength": 32, "sourceBeforeFix": "newroot.length == 1", "sourceAfterFix": "shift > 0 && newroot.length == 1"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 142, "bugNodeStartChar": 5908, "bugNodeLength": 12, "fixLineNum": 142, "fixNodeStartChar": 5767, "fixNodeLength": 14, "sourceBeforeFix": "invoke(args)", "sourceAfterFix": "doInvoke(args)"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 142, "bugNodeStartChar": 5908, "bugNodeLength": 12, "fixLineNum": 142, "fixNodeStartChar": 5767, "fixNodeLength": 14, "sourceBeforeFix": "invoke(args)", "sourceAfterFix": "doInvoke(args)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 144, "bugNodeStartChar": 5944, "bugNodeLength": 40, "fixLineNum": 144, "fixNodeStartChar": 5801, "fixNodeLength": 41, "sourceBeforeFix": "invoke(args.first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),args.rest())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 144, "bugNodeStartChar": 5944, "bugNodeLength": 40, "fixLineNum": 144, "fixNodeStartChar": 5801, "fixNodeLength": 41, "sourceBeforeFix": "invoke(args.first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),args.rest())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 147, "bugNodeStartChar": 6008, "bugNodeLength": 77, "fixLineNum": 147, "fixNodeStartChar": 5862, "fixNodeLength": 77, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 147, "bugNodeStartChar": 6008, "bugNodeLength": 77, "fixLineNum": 147, "fixNodeStartChar": 5862, "fixNodeLength": 77, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 151, "bugNodeStartChar": 6109, "bugNodeLength": 114, "fixLineNum": 151, "fixNodeStartChar": 5959, "fixNodeLength": 113, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 151, "bugNodeStartChar": 6109, "bugNodeLength": 114, "fixLineNum": 151, "fixNodeStartChar": 5959, "fixNodeLength": 113, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 156, "bugNodeStartChar": 6247, "bugNodeLength": 151, "fixLineNum": 156, "fixNodeStartChar": 6092, "fixNodeLength": 149, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 156, "bugNodeStartChar": 6247, "bugNodeLength": 151, "fixLineNum": 156, "fixNodeStartChar": 6092, "fixNodeLength": 149, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 162, "bugNodeStartChar": 6422, "bugNodeLength": 188, "fixLineNum": 162, "fixNodeStartChar": 6261, "fixNodeLength": 185, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 162, "bugNodeStartChar": 6422, "bugNodeLength": 188, "fixLineNum": 162, "fixNodeStartChar": 6261, "fixNodeLength": 185, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 169, "bugNodeStartChar": 6634, "bugNodeLength": 225, "fixLineNum": 169, "fixNodeStartChar": 6466, "fixNodeLength": 221, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 169, "bugNodeStartChar": 6634, "bugNodeLength": 225, "fixLineNum": 169, "fixNodeStartChar": 6466, "fixNodeLength": 221, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 177, "bugNodeStartChar": 6883, "bugNodeLength": 262, "fixLineNum": 177, "fixNodeStartChar": 6707, "fixNodeLength": 257, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 177, "bugNodeStartChar": 6883, "bugNodeLength": 262, "fixLineNum": 177, "fixNodeStartChar": 6707, "fixNodeLength": 257, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 186, "bugNodeStartChar": 7169, "bugNodeLength": 299, "fixLineNum": 186, "fixNodeStartChar": 6984, "fixNodeLength": 293, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 186, "bugNodeStartChar": 7169, "bugNodeLength": 299, "fixLineNum": 186, "fixNodeStartChar": 6984, "fixNodeLength": 293, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 196, "bugNodeStartChar": 7492, "bugNodeLength": 336, "fixLineNum": 196, "fixNodeStartChar": 7297, "fixNodeLength": 329, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 196, "bugNodeStartChar": 7492, "bugNodeLength": 336, "fixLineNum": 196, "fixNodeStartChar": 7297, "fixNodeLength": 329, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 207, "bugNodeStartChar": 7853, "bugNodeLength": 373, "fixLineNum": 207, "fixNodeStartChar": 7647, "fixNodeLength": 365, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 207, "bugNodeStartChar": 7853, "bugNodeLength": 373, "fixLineNum": 207, "fixNodeStartChar": 7647, "fixNodeLength": 365, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 219, "bugNodeStartChar": 8251, "bugNodeLength": 410, "fixLineNum": 219, "fixNodeStartChar": 8033, "fixNodeLength": 401, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 219, "bugNodeStartChar": 8251, "bugNodeLength": 410, "fixLineNum": 219, "fixNodeStartChar": 8033, "fixNodeLength": 401, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 232, "bugNodeStartChar": 8686, "bugNodeLength": 447, "fixLineNum": 232, "fixNodeStartChar": 8455, "fixNodeLength": 437, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 232, "bugNodeStartChar": 8686, "bugNodeLength": 447, "fixLineNum": 232, "fixNodeStartChar": 8455, "fixNodeLength": 437, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 246, "bugNodeStartChar": 9158, "bugNodeLength": 484, "fixLineNum": 246, "fixNodeStartChar": 8913, "fixNodeLength": 473, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 246, "bugNodeStartChar": 9158, "bugNodeLength": 484, "fixLineNum": 246, "fixNodeStartChar": 8913, "fixNodeLength": 473, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 261, "bugNodeStartChar": 9667, "bugNodeLength": 521, "fixLineNum": 261, "fixNodeStartChar": 9407, "fixNodeLength": 509, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 261, "bugNodeStartChar": 9667, "bugNodeLength": 521, "fixLineNum": 261, "fixNodeStartChar": 9407, "fixNodeLength": 509, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 277, "bugNodeStartChar": 10213, "bugNodeLength": 558, "fixLineNum": 277, "fixNodeStartChar": 9937, "fixNodeLength": 545, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 277, "bugNodeStartChar": 10213, "bugNodeLength": 558, "fixLineNum": 277, "fixNodeStartChar": 9937, "fixNodeLength": 545, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 294, "bugNodeStartChar": 10796, "bugNodeLength": 595, "fixLineNum": 294, "fixNodeStartChar": 10503, "fixNodeLength": 581, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 294, "bugNodeStartChar": 10796, "bugNodeLength": 595, "fixLineNum": 294, "fixNodeStartChar": 10503, "fixNodeLength": 581, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 312, "bugNodeStartChar": 11416, "bugNodeLength": 632, "fixLineNum": 312, "fixNodeStartChar": 11105, "fixNodeLength": 617, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 312, "bugNodeStartChar": 11416, "bugNodeLength": 632, "fixLineNum": 312, "fixNodeStartChar": 11105, "fixNodeLength": 617, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 331, "bugNodeStartChar": 12073, "bugNodeLength": 669, "fixLineNum": 331, "fixNodeStartChar": 11743, "fixNodeLength": 653, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 331, "bugNodeStartChar": 12073, "bugNodeLength": 669, "fixLineNum": 331, "fixNodeStartChar": 11743, "fixNodeLength": 653, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 351, "bugNodeStartChar": 12767, "bugNodeLength": 706, "fixLineNum": 351, "fixNodeStartChar": 12417, "fixNodeLength": 689, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 351, "bugNodeStartChar": 12767, "bugNodeLength": 706, "fixLineNum": 351, "fixNodeStartChar": 12417, "fixNodeLength": 689, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 372, "bugNodeStartChar": 13498, "bugNodeLength": 743, "fixLineNum": 372, "fixNodeStartChar": 13127, "fixNodeLength": 725, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913", "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf", "bugFilePath": "src/jvm/clojure/lang/RestFn.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n", "projectName": "clojure.clojure", "bugLineNum": 372, "bugNodeStartChar": 13498, "bugNodeLength": 743, "fixLineNum": 372, "fixNodeStartChar": 13127, "fixNodeLength": 725, "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())", "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "dda99609dbe5b3ef9a831b570c99ee79530f4d0a", "fixCommitParentSHA1": "f1a5eef2542f5b40778cfb317273b4d6006d3bd4", "bugFilePath": "src/jvm/clojure/lang/Module.java", "fixPatch": "diff --git a/src/jvm/clojure/lang/Module.java b/src/jvm/clojure/lang/Module.java\nindex c99f9c2..0c28aab 100644\n--- a/src/jvm/clojure/lang/Module.java\n+++ b/src/jvm/clojure/lang/Module.java\n@@ -47,7 +47,7 @@\n }\n \n public static TRef intern(String moduleName, String name) throws Exception{\n-\tModule module = findModule(name);\n+\tModule module = findModule(moduleName);\n \tif(module == null)\n \t\tthrow new Exception(String.format(\"Module %s not found\", moduleName));\n \treturn module.intern(name);\n", "projectName": "clojure.clojure", "bugLineNum": 50, "bugNodeStartChar": 1320, "bugNodeLength": 16, "fixLineNum": 50, "fixNodeStartChar": 1320, "fixNodeLength": 22, "sourceBeforeFix": "findModule(name)", "sourceAfterFix": "findModule(moduleName)"}]