[{"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "6d280d1048ed2df18f962ed852b1b863621aaa81", "fixCommitParentSHA1": "cf4db1625dcb230d19fb78f78ca3cc1ad742d4aa", "bugFilePath": "client-adapter/common/src/main/java/com/alibaba/otter/canal/client/adapter/support/JdbcTypeUtil.java", "fixPatch": "diff --git a/client-adapter/common/src/main/java/com/alibaba/otter/canal/client/adapter/support/JdbcTypeUtil.java b/client-adapter/common/src/main/java/com/alibaba/otter/canal/client/adapter/support/JdbcTypeUtil.java\nindex 77e2241..ebcb4ec 100644\n--- a/client-adapter/common/src/main/java/com/alibaba/otter/canal/client/adapter/support/JdbcTypeUtil.java\n+++ b/client-adapter/common/src/main/java/com/alibaba/otter/canal/client/adapter/support/JdbcTypeUtil.java\n@@ -76,7 +76,7 @@\n                || \"TEXT\".equalsIgnoreCase(columnType) || \"TINYTEXT\".equalsIgnoreCase(columnType);\n     }\n \n-    public static Object typeConvert(String columnName, String value, int sqlType, String mysqlType) {\n+    public static Object typeConvert(String tableName ,String columnName, String value, int sqlType, String mysqlType) {\n         if (value == null\n             || (value.equals(\"\") && !(isText(mysqlType) || sqlType == Types.CHAR || sqlType == Types.VARCHAR || sqlType == Types.LONGVARCHAR))) {\n             return null;\n@@ -161,7 +161,7 @@\n             }\n             return res;\n         } catch (Exception e) {\n-            logger.error(\"table: {} column: {}, failed convert type {} to {}\", columnName, value, sqlType);\n+            logger.error(\"table: {} column: {}, failed convert type {} to {}\", tableName, columnName, value, sqlType);\n             return value;\n         }\n     }\n", "projectName": "alibaba.canal", "bugLineNum": 164, "bugNodeStartChar": 5672, "bugNodeLength": 94, "fixLineNum": 164, "fixNodeStartChar": 5672, "fixNodeLength": 105, "sourceBeforeFix": "logger.error(\"table: {} column: {}, failed convert type {} to {}\",columnName,value,sqlType)", "sourceAfterFix": "logger.error(\"table: {} column: {}, failed convert type {} to {}\",tableName,columnName,value,sqlType)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "078673c6a9215520e1d2a0b098e1df040720abf0", "fixCommitParentSHA1": "7dab5ac6c2490b5451b1d004e33e75320a467a59", "bugFilePath": "client-adapter/common/src/main/java/com/alibaba/otter/canal/client/adapter/support/JdbcTypeUtil.java", "fixPatch": "diff --git a/client-adapter/common/src/main/java/com/alibaba/otter/canal/client/adapter/support/JdbcTypeUtil.java b/client-adapter/common/src/main/java/com/alibaba/otter/canal/client/adapter/support/JdbcTypeUtil.java\nindex 77e2241..ebcb4ec 100644\n--- a/client-adapter/common/src/main/java/com/alibaba/otter/canal/client/adapter/support/JdbcTypeUtil.java\n+++ b/client-adapter/common/src/main/java/com/alibaba/otter/canal/client/adapter/support/JdbcTypeUtil.java\n@@ -76,7 +76,7 @@\n                || \"TEXT\".equalsIgnoreCase(columnType) || \"TINYTEXT\".equalsIgnoreCase(columnType);\n     }\n \n-    public static Object typeConvert(String columnName, String value, int sqlType, String mysqlType) {\n+    public static Object typeConvert(String tableName ,String columnName, String value, int sqlType, String mysqlType) {\n         if (value == null\n             || (value.equals(\"\") && !(isText(mysqlType) || sqlType == Types.CHAR || sqlType == Types.VARCHAR || sqlType == Types.LONGVARCHAR))) {\n             return null;\n@@ -161,7 +161,7 @@\n             }\n             return res;\n         } catch (Exception e) {\n-            logger.error(\"table: {} column: {}, failed convert type {} to {}\", columnName, value, sqlType);\n+            logger.error(\"table: {} column: {}, failed convert type {} to {}\", tableName, columnName, value, sqlType);\n             return value;\n         }\n     }\n", "projectName": "alibaba.canal", "bugLineNum": 164, "bugNodeStartChar": 5672, "bugNodeLength": 94, "fixLineNum": 164, "fixNodeStartChar": 5672, "fixNodeLength": 105, "sourceBeforeFix": "logger.error(\"table: {} column: {}, failed convert type {} to {}\",columnName,value,sqlType)", "sourceAfterFix": "logger.error(\"table: {} column: {}, failed convert type {} to {}\",tableName,columnName,value,sqlType)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "4bd91a10792b8d27f7807665718795bb551ad89b", "fixCommitParentSHA1": "05ad671cc16f77e0980d63320212e78f7fff331d", "bugFilePath": "client-adapter/hbase/src/main/java/com/alibaba/otter/canal/client/adapter/hbase/HbaseAdapter.java", "fixPatch": "diff --git a/client-adapter/hbase/src/main/java/com/alibaba/otter/canal/client/adapter/hbase/HbaseAdapter.java b/client-adapter/hbase/src/main/java/com/alibaba/otter/canal/client/adapter/hbase/HbaseAdapter.java\nindex c307aec..66af5f5 100644\n--- a/client-adapter/hbase/src/main/java/com/alibaba/otter/canal/client/adapter/hbase/HbaseAdapter.java\n+++ b/client-adapter/hbase/src/main/java/com/alibaba/otter/canal/client/adapter/hbase/HbaseAdapter.java\n@@ -96,7 +96,7 @@\n             hbaseSyncService = new HbaseSyncService(hbaseTemplate);\n \n             configMonitor = new HbaseConfigMonitor();\n-            configMonitor.init(this);\n+            configMonitor.init(this, envProperties);\n         } catch (Exception e) {\n             throw new RuntimeException(e);\n         }\n", "projectName": "alibaba.canal", "bugLineNum": 99, "bugNodeStartChar": 4531, "bugNodeLength": 24, "fixLineNum": 99, "fixNodeStartChar": 4531, "fixNodeLength": 39, "sourceBeforeFix": "configMonitor.init(this)", "sourceAfterFix": "configMonitor.init(this,envProperties)"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "c66b6a0f0f3eba00529ca81d9392805767c361e3", "fixCommitParentSHA1": "b348260288bd43724f1fc1f01728914a6730f9e7", "bugFilePath": "dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/CharsetConversion.java", "fixPatch": "diff --git a/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/CharsetConversion.java b/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/CharsetConversion.java\nindex 01ef43c..725abe6 100644\n--- a/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/CharsetConversion.java\n+++ b/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/CharsetConversion.java\n@@ -32,7 +32,7 @@\n     }\r\n \r\n     // Character set data used in lookups. The array will be sparse.\r\n-    static final Entry[] entries = new Entry[0xff];\r\n+    static final Entry[] entries = new Entry[2048];\r\n \r\n     static Entry getEntry(final int id) {\r\n         if (id >= 0 && id < entries.length) {\r\n@@ -95,7 +95,7 @@\n         putEntry(34, \"cp1250\", \"cp1250_czech_cs\", \"Cp1250\");\r\n         putEntry(35, \"ucs2\", \"ucs2_general_ci\", \"UnicodeBig\");\r\n         putEntry(36, \"cp866\", \"cp866_general_ci\", \"Cp866\");\r\n-        putEntry(37, \"keybcs2\", \"keybcs2_general_ci\", \"Cp895\");\r\n+        putEntry(37, \"keybcs2\", \"keybcs2_general_ci\", \"Cp852\");\r\n         putEntry(38, \"macce\", \"macce_general_ci\", \"MacCentralEurope\");\r\n         putEntry(39, \"macroman\", \"macroman_general_ci\", \"MacRoman\");\r\n         putEntry(40, \"cp852\", \"cp852_general_ci\", \"Cp852\");\r\n@@ -129,7 +129,7 @@\n         putEntry(70, \"greek\", \"greek_bin\", \"ISO8859_7\");\r\n         putEntry(71, \"hebrew\", \"hebrew_bin\", \"ISO8859_8\");\r\n         putEntry(72, \"hp8\", \"hp8_bin\", \"US-ASCII\");\r\n-        putEntry(73, \"keybcs2\", \"keybcs2_bin\", \"Cp895\");\r\n+        putEntry(73, \"keybcs2\", \"keybcs2_bin\", \"Cp852\");\r\n         putEntry(74, \"koi8r\", \"koi8r_bin\", \"KOI8_R\");\r\n         putEntry(75, \"koi8u\", \"koi8u_bin\", \"KOI8_U\");\r\n         putEntry(77, \"latin2\", \"latin2_bin\", \"ISO8859_2\");\r\n", "projectName": "alibaba.canal", "bugLineNum": 35, "bugNodeStartChar": 1117, "bugNodeLength": 15, "fixLineNum": 35, "fixNodeStartChar": 1083, "fixNodeLength": 15, "sourceBeforeFix": "new Entry[0xff]", "sourceAfterFix": "new Entry[2048]"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "0523b68c26c5ef2b715966cb6d28d18a73d61a9f", "fixCommitParentSHA1": "995a33a645b7da18a92854e51c0c2b65b24d1977", "bugFilePath": "parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/MemoryTableMeta.java", "fixPatch": "diff --git a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/MemoryTableMeta.java b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/MemoryTableMeta.java\nindex dcd490f..0a0f631 100644\n--- a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/MemoryTableMeta.java\n+++ b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/MemoryTableMeta.java\n@@ -74,7 +74,11 @@\n             try {\n                 // druid\u6682\u65f6flush privileges\u8bed\u6cd5\u89e3\u6790\u6709\u95ee\u9898\n                 if (!StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), \"flush\")\n-                    && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), \"grant\")) {\n+                    && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), \"grant\")\n+                    && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), \"create user\")\n+                    && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), \"drop user\")\n+                    && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), \"create database\")\n+                    && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), \"drop database\")) {\n                     repository.console(ddl);\n                 }\n             } catch (Throwable e) {\n", "projectName": "alibaba.canal", "bugLineNum": 76, "bugNodeStartChar": 2980, "bugNodeLength": 154, "fixLineNum": 76, "fixNodeStartChar": 2980, "fixNodeLength": 538, "sourceBeforeFix": "!StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),\"flush\") && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),\"grant\")", "sourceAfterFix": "!StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),\"flush\") && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),\"grant\") && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),\"create user\")&& !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),\"drop user\")&& !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),\"create database\")&& !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),\"drop database\")"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "29f03bf398ae0dcaf4a2ce26a243332192c05443", "fixCommitParentSHA1": "ec235f3efd395d43b0fc84ecf27234400c6073ca", "bugFilePath": "store/src/main/java/com/alibaba/otter/canal/store/model/Event.java", "fixPatch": "diff --git a/store/src/main/java/com/alibaba/otter/canal/store/model/Event.java b/store/src/main/java/com/alibaba/otter/canal/store/model/Event.java\nindex edb4dd2..db1618e 100644\n--- a/store/src/main/java/com/alibaba/otter/canal/store/model/Event.java\n+++ b/store/src/main/java/com/alibaba/otter/canal/store/model/Event.java\n@@ -71,8 +71,8 @@\n             this.rawLength = rawEntry.size();\n         } else {\n             this.entry = entry;\n-            // \u6309\u71673\u500d\u7684event length\u9884\u4f30\n-            this.rawLength = entry.getHeader().getEventLength() * 3;\n+            // \u6309\u71676\u500d\u7684event length\u9884\u4f30\n+            this.rawLength = entry.getHeader().getEventLength() * 6;\n         }\n     }\n \n", "projectName": "alibaba.canal", "bugLineNum": 75, "bugNodeStartChar": 2612, "bugNodeLength": 38, "fixLineNum": 75, "fixNodeStartChar": 2612, "fixNodeLength": 38, "sourceBeforeFix": "entry.getHeader().getEventLength() * 3", "sourceAfterFix": "entry.getHeader().getEventLength() * 6"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "041225c3f286c8fb8bf59cb5fa2f686ea7903ade", "fixCommitParentSHA1": "a8d708ea1b271e9a03d7a96408e7db17c42b2586", "bugFilePath": "parse/src/main/java/com/alibaba/otter/canal/parse/inbound/AbstractEventParser.java", "fixPatch": "diff --git a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/AbstractEventParser.java b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/AbstractEventParser.java\nindex 8902c05..4d5cf7e 100644\n--- a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/AbstractEventParser.java\n+++ b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/AbstractEventParser.java\n@@ -417,7 +417,7 @@\n     }\r\n \r\n     protected LogPosition buildLastTransactionPosition(List<CanalEntry.Entry> entries) { // \u521d\u59cb\u5316\u4e00\u4e0b\r\n-        for (int i = entries.size() - 1; i > 0; i--) {\r\n+        for (int i = entries.size() - 1; i >= 0; i--) {\r\n             CanalEntry.Entry entry = entries.get(i);\r\n             if (entry.getEntryType() == CanalEntry.EntryType.TRANSACTIONEND) {// \u5c3d\u91cf\u8bb0\u5f55\u4e00\u4e2a\u4e8b\u52a1\u505a\u4e3aposition\r\n                 return buildLastPosition(entry);\r\n", "projectName": "alibaba.canal", "bugLineNum": 420, "bugNodeStartChar": 20717, "bugNodeLength": 5, "fixLineNum": 420, "fixNodeStartChar": 20298, "fixNodeLength": 6, "sourceBeforeFix": "i > 0", "sourceAfterFix": "i >= 0"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "2278340c7b8453e2521bad6bed0b4a82017d47b0", "fixCommitParentSHA1": "8f2e2b9ccdbf294ae8d9c54715cc5dcec434f624", "bugFilePath": "parse/src/main/java/com/alibaba/otter/canal/parse/inbound/AbstractEventParser.java", "fixPatch": "diff --git a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/AbstractEventParser.java b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/AbstractEventParser.java\nindex 8902c05..4d5cf7e 100644\n--- a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/AbstractEventParser.java\n+++ b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/AbstractEventParser.java\n@@ -417,7 +417,7 @@\n     }\r\n \r\n     protected LogPosition buildLastTransactionPosition(List<CanalEntry.Entry> entries) { // \u521d\u59cb\u5316\u4e00\u4e0b\r\n-        for (int i = entries.size() - 1; i > 0; i--) {\r\n+        for (int i = entries.size() - 1; i >= 0; i--) {\r\n             CanalEntry.Entry entry = entries.get(i);\r\n             if (entry.getEntryType() == CanalEntry.EntryType.TRANSACTIONEND) {// \u5c3d\u91cf\u8bb0\u5f55\u4e00\u4e2a\u4e8b\u52a1\u505a\u4e3aposition\r\n                 return buildLastPosition(entry);\r\n", "projectName": "alibaba.canal", "bugLineNum": 420, "bugNodeStartChar": 20717, "bugNodeLength": 5, "fixLineNum": 420, "fixNodeStartChar": 20298, "fixNodeLength": 6, "sourceBeforeFix": "i > 0", "sourceAfterFix": "i >= 0"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "359aa1a0740d2b47d6ebdc70377b9fbdfa42c5df", "fixCommitParentSHA1": "6ff57f53f8169caa1202a1d63caca0c699a6ae2b", "bugFilePath": "dbsync/src/test/java/com/taobao/tddl/dbsync/binlog/BaseLogFetcherTest.java", "fixPatch": "diff --git a/dbsync/src/test/java/com/taobao/tddl/dbsync/binlog/BaseLogFetcherTest.java b/dbsync/src/test/java/com/taobao/tddl/dbsync/binlog/BaseLogFetcherTest.java\nindex d0c6746..27ecf3d 100644\n--- a/dbsync/src/test/java/com/taobao/tddl/dbsync/binlog/BaseLogFetcherTest.java\n+++ b/dbsync/src/test/java/com/taobao/tddl/dbsync/binlog/BaseLogFetcherTest.java\n@@ -68,7 +68,7 @@\n                     // update\u9700\u8981\u5904\u7406before/after\n                     System.out.println(\"-------> before\");\n                     parseOneRow(event, buffer, columns, false);\n-                    if (!buffer.nextOneRow(changeColumns)) {\n+                    if (!buffer.nextOneRow(changeColumns, true)) {\n                         break;\n                     }\n                     System.out.println(\"-------> after\");\n@@ -97,7 +97,7 @@\n             }\n \n             ColumnInfo info = columnInfo[i];\n-            buffer.nextValue(info.type, info.meta);\n+            buffer.nextValue(null , i ,info.type, info.meta);\n \n             if (buffer.isNull()) {\n                 //\n", "projectName": "alibaba.canal", "bugLineNum": 71, "bugNodeStartChar": 3554, "bugNodeLength": 32, "fixLineNum": 71, "fixNodeStartChar": 3554, "fixNodeLength": 38, "sourceBeforeFix": "buffer.nextOneRow(changeColumns)", "sourceAfterFix": "buffer.nextOneRow(changeColumns,true)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "359aa1a0740d2b47d6ebdc70377b9fbdfa42c5df", "fixCommitParentSHA1": "6ff57f53f8169caa1202a1d63caca0c699a6ae2b", "bugFilePath": "dbsync/src/test/java/com/taobao/tddl/dbsync/binlog/BaseLogFetcherTest.java", "fixPatch": "diff --git a/dbsync/src/test/java/com/taobao/tddl/dbsync/binlog/BaseLogFetcherTest.java b/dbsync/src/test/java/com/taobao/tddl/dbsync/binlog/BaseLogFetcherTest.java\nindex d0c6746..27ecf3d 100644\n--- a/dbsync/src/test/java/com/taobao/tddl/dbsync/binlog/BaseLogFetcherTest.java\n+++ b/dbsync/src/test/java/com/taobao/tddl/dbsync/binlog/BaseLogFetcherTest.java\n@@ -68,7 +68,7 @@\n                     // update\u9700\u8981\u5904\u7406before/after\n                     System.out.println(\"-------> before\");\n                     parseOneRow(event, buffer, columns, false);\n-                    if (!buffer.nextOneRow(changeColumns)) {\n+                    if (!buffer.nextOneRow(changeColumns, true)) {\n                         break;\n                     }\n                     System.out.println(\"-------> after\");\n@@ -97,7 +97,7 @@\n             }\n \n             ColumnInfo info = columnInfo[i];\n-            buffer.nextValue(info.type, info.meta);\n+            buffer.nextValue(null , i ,info.type, info.meta);\n \n             if (buffer.isNull()) {\n                 //\n", "projectName": "alibaba.canal", "bugLineNum": 100, "bugNodeStartChar": 4632, "bugNodeLength": 38, "fixLineNum": 100, "fixNodeStartChar": 4632, "fixNodeLength": 48, "sourceBeforeFix": "buffer.nextValue(info.type,info.meta)", "sourceAfterFix": "buffer.nextValue(null,i,info.type,info.meta)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "1e2cf9d47636b382fe1c76f8d00e9e641699603a", "fixCommitParentSHA1": "2d930894ffc944af6d62bffe60118a7a0c98d3e8", "bugFilePath": "dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/RowsLogBuffer.java", "fixPatch": "diff --git a/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/RowsLogBuffer.java b/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/RowsLogBuffer.java\nindex 9fe2282..8cd5733 100644\n--- a/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/RowsLogBuffer.java\n+++ b/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/RowsLogBuffer.java\n@@ -367,7 +367,7 @@\n                     // \u8f6c\u5316\u4e3aunsign long\r\n                     switch (len) {\r\n                         case 1:\r\n-                            value = buffer.getInt8();\r\n+                            value = buffer.getUint8();\r\n                             break;\r\n                         case 2:\r\n                             value = buffer.getBeUint16();\r\n", "projectName": "alibaba.canal", "bugLineNum": 370, "bugNodeStartChar": 13082, "bugNodeLength": 16, "fixLineNum": 370, "fixNodeStartChar": 12713, "fixNodeLength": 17, "sourceBeforeFix": "buffer.getInt8()", "sourceAfterFix": "buffer.getUint8()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "1e2cf9d47636b382fe1c76f8d00e9e641699603a", "fixCommitParentSHA1": "2d930894ffc944af6d62bffe60118a7a0c98d3e8", "bugFilePath": "dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/RowsLogBuffer.java", "fixPatch": "diff --git a/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/RowsLogBuffer.java b/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/RowsLogBuffer.java\nindex 9fe2282..8cd5733 100644\n--- a/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/RowsLogBuffer.java\n+++ b/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/RowsLogBuffer.java\n@@ -367,7 +367,7 @@\n                     // \u8f6c\u5316\u4e3aunsign long\r\n                     switch (len) {\r\n                         case 1:\r\n-                            value = buffer.getInt8();\r\n+                            value = buffer.getUint8();\r\n                             break;\r\n                         case 2:\r\n                             value = buffer.getBeUint16();\r\n", "projectName": "alibaba.canal", "bugLineNum": 370, "bugNodeStartChar": 13082, "bugNodeLength": 16, "fixLineNum": 370, "fixNodeStartChar": 12713, "fixNodeLength": 17, "sourceBeforeFix": "buffer.getInt8()", "sourceAfterFix": "buffer.getUint8()"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "575dd59c7893e6a41f8b0da6b9f5a107580d40d0", "fixCommitParentSHA1": "c75c24808664ede8faadabd082b7a191f3c232fd", "bugFilePath": "dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/RowsLogBuffer.java", "fixPatch": "diff --git a/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/RowsLogBuffer.java b/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/RowsLogBuffer.java\nindex c1b96c3..9fe2282 100644\n--- a/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/RowsLogBuffer.java\n+++ b/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/RowsLogBuffer.java\n@@ -859,7 +859,7 @@\n                     // \u8f6c\u5316\u4e3aunsign long\r\n                     switch (len) {\r\n                         case 1:\r\n-                            value = buffer.getInt8();\r\n+                            value = buffer.getUint8();\r\n                             break;\r\n                         case 2:\r\n                             value = buffer.getUint16();\r\n", "projectName": "alibaba.canal", "bugLineNum": 862, "bugNodeStartChar": 35373, "bugNodeLength": 16, "fixLineNum": 862, "fixNodeStartChar": 34512, "fixNodeLength": 17, "sourceBeforeFix": "buffer.getInt8()", "sourceAfterFix": "buffer.getUint8()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "575dd59c7893e6a41f8b0da6b9f5a107580d40d0", "fixCommitParentSHA1": "c75c24808664ede8faadabd082b7a191f3c232fd", "bugFilePath": "dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/RowsLogBuffer.java", "fixPatch": "diff --git a/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/RowsLogBuffer.java b/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/RowsLogBuffer.java\nindex c1b96c3..9fe2282 100644\n--- a/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/RowsLogBuffer.java\n+++ b/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/event/RowsLogBuffer.java\n@@ -859,7 +859,7 @@\n                     // \u8f6c\u5316\u4e3aunsign long\r\n                     switch (len) {\r\n                         case 1:\r\n-                            value = buffer.getInt8();\r\n+                            value = buffer.getUint8();\r\n                             break;\r\n                         case 2:\r\n                             value = buffer.getUint16();\r\n", "projectName": "alibaba.canal", "bugLineNum": 862, "bugNodeStartChar": 35373, "bugNodeLength": 16, "fixLineNum": 862, "fixNodeStartChar": 34512, "fixNodeLength": 17, "sourceBeforeFix": "buffer.getInt8()", "sourceAfterFix": "buffer.getUint8()"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "47ac10ca185ef128ccdd055cb83fea5def7428c3", "fixCommitParentSHA1": "d4a70d5eea5f6baa5e88529de851136e0675725b", "bugFilePath": "store/src/main/java/com/alibaba/otter/canal/store/memory/MemoryEventStoreWithBuffer.java", "fixPatch": "diff --git a/store/src/main/java/com/alibaba/otter/canal/store/memory/MemoryEventStoreWithBuffer.java b/store/src/main/java/com/alibaba/otter/canal/store/memory/MemoryEventStoreWithBuffer.java\nindex fb74d5f..6c6d08f 100644\n--- a/store/src/main/java/com/alibaba/otter/canal/store/memory/MemoryEventStoreWithBuffer.java\n+++ b/store/src/main/java/com/alibaba/otter/canal/store/memory/MemoryEventStoreWithBuffer.java\n@@ -435,7 +435,7 @@\n                     if (batchMode.isMemSize()) {\n                         ackMemSize.addAndGet(memsize);\n                         // \u5c1d\u8bd5\u6e05\u7a7abuffer\u4e2d\u7684\u5185\u5b58\uff0c\u5c06ack\u4e4b\u524d\u7684\u5185\u5b58\u5168\u90e8\u91ca\u653e\u6389\n-                        for (long index = sequence + 1; index <= next; index++) {\n+                        for (long index = sequence + 1; index < next; index++) {\n                             entries[getIndex(index)] = null;// \u8bbe\u7f6e\u4e3anull\n                         }\n                     }\n", "projectName": "alibaba.canal", "bugLineNum": 438, "bugNodeStartChar": 16498, "bugNodeLength": 13, "fixLineNum": 438, "fixNodeStartChar": 16498, "fixNodeLength": 12, "sourceBeforeFix": "index <= next", "sourceAfterFix": "index < next"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "41eef9a090e49f4b0efc537d0c158e590316ccd6", "fixCommitParentSHA1": "9ae6c0c8639b9df9417506e9184f827914c7453a", "bugFilePath": "parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java", "fixPatch": "diff --git a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java\nindex 67332cf..b299165 100644\n--- a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java\n+++ b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java\n@@ -267,7 +267,8 @@\n \n             Header header = createHeader(binlogFileName, event.getHeader(), schemaName, tableName, type);\n             RowChange.Builder rowChangeBuider = RowChange.newBuilder();\n-            if (type != EventType.QUERY) {\n+            if (type != EventType.QUERY && type != EventType.INSERT && type != EventType.UPDATE\n+                && type != EventType.DELETE) {\n                 rowChangeBuider.setIsDdl(true);\n             }\n             rowChangeBuider.setSql(queryString);\n", "projectName": "alibaba.canal", "bugLineNum": 270, "bugNodeStartChar": 13728, "bugNodeLength": 23, "fixLineNum": 270, "fixNodeStartChar": 13728, "fixNodeLength": 123, "sourceBeforeFix": "type != EventType.QUERY", "sourceAfterFix": "type != EventType.QUERY && type != EventType.INSERT && type != EventType.UPDATE && type != EventType.DELETE"}, {"bugType": "CHANGE_OPERATOR", "fixCommitSHA1": "9ae6c0c8639b9df9417506e9184f827914c7453a", "fixCommitParentSHA1": "5f47809c8ea82af3eae651310dc1286fd1e0720d", "bugFilePath": "parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlEventParser.java", "fixPatch": "diff --git a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlEventParser.java b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlEventParser.java\nindex 2efab0e..6c2b9d4 100644\n--- a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlEventParser.java\n+++ b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlEventParser.java\n@@ -763,7 +763,7 @@\n                         }\n \n                         if (StringUtils.equals(endPosition.getJournalName(), logfilename)\n-                            && endPosition.getPosition() < logfileoffset) {\n+                            && endPosition.getPosition() <= logfileoffset) {\n                             return false;\n                         }\n \n", "projectName": "alibaba.canal", "bugLineNum": 766, "bugNodeStartChar": 35955, "bugNodeLength": 41, "fixLineNum": 766, "fixNodeStartChar": 35955, "fixNodeLength": 42, "sourceBeforeFix": "endPosition.getPosition() < logfileoffset", "sourceAfterFix": "endPosition.getPosition() <= logfileoffset"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "7eb6fb3e8a263dee9fc93ce004900e665485914f", "fixCommitParentSHA1": "70e6bdde02288cccbebdb51c0bc52898c6c8ee1a", "bugFilePath": "instance/manager/src/main/java/com/alibaba/otter/canal/instance/manager/CanalInstanceWithManager.java", "fixPatch": "diff --git a/instance/manager/src/main/java/com/alibaba/otter/canal/instance/manager/CanalInstanceWithManager.java b/instance/manager/src/main/java/com/alibaba/otter/canal/instance/manager/CanalInstanceWithManager.java\nindex 5319616..bca5ba1 100644\n--- a/instance/manager/src/main/java/com/alibaba/otter/canal/instance/manager/CanalInstanceWithManager.java\n+++ b/instance/manager/src/main/java/com/alibaba/otter/canal/instance/manager/CanalInstanceWithManager.java\n@@ -263,7 +263,7 @@\n                 mysqlEventParser.setMasterPosition(masterPosition);\n \n                 if (parameters.getPositions().size() > 1) {\n-                    EntryPosition standbyPosition = JsonUtils.unmarshalFromString(parameters.getPositions().get(0),\n+                    EntryPosition standbyPosition = JsonUtils.unmarshalFromString(parameters.getPositions().get(1),\n                         EntryPosition.class);\n                     mysqlEventParser.setStandbyPosition(standbyPosition);\n                 }\n", "projectName": "alibaba.canal", "bugLineNum": 266, "bugNodeStartChar": 12889, "bugNodeLength": 32, "fixLineNum": 266, "fixNodeStartChar": 12889, "fixNodeLength": 32, "sourceBeforeFix": "parameters.getPositions().get(0)", "sourceAfterFix": "parameters.getPositions().get(1)"}, {"bugType": "OVERLOAD_METHOD_DELETED_ARGS", "fixCommitSHA1": "511734c3d8ba29a071dbcb05bb49bb4be457fefb", "fixCommitParentSHA1": "af002f4e243051f396d670e868f6f842898abb82", "bugFilePath": "driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/socket/BioSocketChannel.java", "fixPatch": "diff --git a/driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/socket/BioSocketChannel.java b/driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/socket/BioSocketChannel.java\nindex 65b55ed..4a272fd 100644\n--- a/driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/socket/BioSocketChannel.java\n+++ b/driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/socket/BioSocketChannel.java\n@@ -56,7 +56,7 @@\n                 }\n             } catch (SocketTimeoutException te) {\n                 if (Thread.interrupted()) {\n-                    throw new ClosedByInterruptException(\"Interrupted while reading.\");\n+                    throw new ClosedByInterruptException();\n                 }\n             }\n         }\n", "projectName": "alibaba.canal", "bugLineNum": 59, "bugNodeStartChar": 1838, "bugNodeLength": 60, "fixLineNum": 59, "fixNodeStartChar": 1838, "fixNodeLength": 32, "sourceBeforeFix": "new ClosedByInterruptException(\"Interrupted while reading.\")", "sourceAfterFix": "new ClosedByInterruptException()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "9316a3df6d4e885e8b0344d7a90e07308e48c123", "fixCommitParentSHA1": "2d31e6bf9199d4f324dd659143272e822e1c48c6", "bugFilePath": "parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/TableMetaCache.java", "fixPatch": "diff --git a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/TableMetaCache.java b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/TableMetaCache.java\nindex 10e0e26..cc1e579 100644\n--- a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/TableMetaCache.java\n+++ b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/TableMetaCache.java\n@@ -53,7 +53,7 @@\n                 public TableMeta load(String name) throws Exception {\n                     try {\n                         return getTableMetaByDB(name);\n-                    } catch (CanalParseException e) {\n+                    } catch (Throwable e) {\n                         // \u5c1d\u8bd5\u505a\u4e00\u6b21retry\u64cd\u4f5c\n                         try {\n                             connection.reconnect();\n", "projectName": "alibaba.canal", "bugLineNum": 56, "bugNodeStartChar": 2393, "bugNodeLength": 21, "fixLineNum": 56, "fixNodeStartChar": 2393, "fixNodeLength": 11, "sourceBeforeFix": "CanalParseException e", "sourceAfterFix": "Throwable e"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "a3b9f6f1ebb21dd528effcceba2ac207f40b15e8", "fixCommitParentSHA1": "2dc019709b661828a56b6f1111b4701d8890d527", "bugFilePath": "parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/ddl/DruidDdlParser.java", "fixPatch": "diff --git a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/ddl/DruidDdlParser.java b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/ddl/DruidDdlParser.java\nindex 958dc73..64ddc72 100644\n--- a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/ddl/DruidDdlParser.java\n+++ b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/ddl/DruidDdlParser.java\n@@ -187,7 +187,7 @@\n     }\n \n     public static String unescapeName(String name) {\n-        if (name.length() > 2) {\n+        if (name != null && name.length() > 2) {\n             char c0 = name.charAt(0);\n             char x0 = name.charAt(name.length() - 1);\n             if ((c0 == '\"' && x0 == '\"') || (c0 == '`' && x0 == '`')) {\n@@ -199,7 +199,7 @@\n     }\n \n     public static String unescapeQuotaName(String name) {\n-        if (name.length() > 2) {\n+        if (name != null && name.length() > 2) {\n             char c0 = name.charAt(0);\n             char x0 = name.charAt(name.length() - 1);\n             if (c0 == '\\'' && x0 == '\\'') {\n", "projectName": "alibaba.canal", "bugLineNum": 190, "bugNodeStartChar": 10326, "bugNodeLength": 17, "fixLineNum": 190, "fixNodeStartChar": 10326, "fixNodeLength": 33, "sourceBeforeFix": "name.length() > 2", "sourceAfterFix": "name != null && name.length() > 2"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "a3b9f6f1ebb21dd528effcceba2ac207f40b15e8", "fixCommitParentSHA1": "2dc019709b661828a56b6f1111b4701d8890d527", "bugFilePath": "parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/ddl/DruidDdlParser.java", "fixPatch": "diff --git a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/ddl/DruidDdlParser.java b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/ddl/DruidDdlParser.java\nindex 958dc73..64ddc72 100644\n--- a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/ddl/DruidDdlParser.java\n+++ b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/ddl/DruidDdlParser.java\n@@ -187,7 +187,7 @@\n     }\n \n     public static String unescapeName(String name) {\n-        if (name.length() > 2) {\n+        if (name != null && name.length() > 2) {\n             char c0 = name.charAt(0);\n             char x0 = name.charAt(name.length() - 1);\n             if ((c0 == '\"' && x0 == '\"') || (c0 == '`' && x0 == '`')) {\n@@ -199,7 +199,7 @@\n     }\n \n     public static String unescapeQuotaName(String name) {\n-        if (name.length() > 2) {\n+        if (name != null && name.length() > 2) {\n             char c0 = name.charAt(0);\n             char x0 = name.charAt(name.length() - 1);\n             if (c0 == '\\'' && x0 == '\\'') {\n", "projectName": "alibaba.canal", "bugLineNum": 202, "bugNodeStartChar": 10695, "bugNodeLength": 17, "fixLineNum": 202, "fixNodeStartChar": 10695, "fixNodeLength": 33, "sourceBeforeFix": "name.length() > 2", "sourceAfterFix": "name != null && name.length() > 2"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "73627df082ff499af4ca1c482f79e304905007eb", "fixCommitParentSHA1": "2eb05b5934c6108b60b3f84816054b95db3e3a79", "bugFilePath": "dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/JsonConversion.java", "fixPatch": "diff --git a/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/JsonConversion.java b/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/JsonConversion.java\nindex b4b1ad7..251e458 100644\n--- a/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/JsonConversion.java\n+++ b/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/JsonConversion.java\n@@ -52,23 +52,24 @@\n     public static final int  VALUE_ENTRY_SIZE_SMALL  = (1 + SMALL_OFFSET_SIZE);\n     public static final int  VALUE_ENTRY_SIZE_LARGE  = (1 + LARGE_OFFSET_SIZE);\n \n-    public static Json_Value parse_value(int type, LogBuffer buffer, long len) {\n+    public static Json_Value parse_value(int type, LogBuffer buffer, long len, String charsetName) {\n         buffer = buffer.duplicate(buffer.position(), (int) len);\n         switch (type) {\n             case JSONB_TYPE_SMALL_OBJECT:\n-                return parse_array_or_object(Json_enum_type.OBJECT, buffer, len, false);\n+                return parse_array_or_object(Json_enum_type.OBJECT, buffer, len, false, charsetName);\n             case JSONB_TYPE_LARGE_OBJECT:\n-                return parse_array_or_object(Json_enum_type.OBJECT, buffer, len, true);\n+                return parse_array_or_object(Json_enum_type.OBJECT, buffer, len, true, charsetName);\n             case JSONB_TYPE_SMALL_ARRAY:\n-                return parse_array_or_object(Json_enum_type.ARRAY, buffer, len, false);\n+                return parse_array_or_object(Json_enum_type.ARRAY, buffer, len, false, charsetName);\n             case JSONB_TYPE_LARGE_ARRAY:\n-                return parse_array_or_object(Json_enum_type.ARRAY, buffer, len, true);\n+                return parse_array_or_object(Json_enum_type.ARRAY, buffer, len, true, charsetName);\n             default:\n-                return parse_scalar(type, buffer, len);\n+                return parse_scalar(type, buffer, len, charsetName);\n         }\n     }\n \n-    private static Json_Value parse_array_or_object(Json_enum_type type, LogBuffer buffer, long len, boolean large) {\n+    private static Json_Value parse_array_or_object(Json_enum_type type, LogBuffer buffer, long len, boolean large,\n+                                                    String charsetName) {\n         long offset_size = large ? LARGE_OFFSET_SIZE : SMALL_OFFSET_SIZE;\n         if (len < 2 * offset_size) {\n             throw new IllegalArgumentException(\"illegal json data\");\n@@ -95,7 +96,7 @@\n         return large ? buffer.getUint32() : buffer.getUint16();\n     }\n \n-    private static Json_Value parse_scalar(int type, LogBuffer buffer, long len) {\n+    private static Json_Value parse_scalar(int type, LogBuffer buffer, long len, String charsetName) {\n         switch (type) {\n             case JSONB_TYPE_LITERAL:\n                 /* purecov: inspected */\n@@ -146,12 +147,12 @@\n                     }\n                 }\n \n-                if (str_len == 0 || len < n + str_len) {\n+                if (len < n + str_len) {\n                     throw new IllegalArgumentException(\"illegal json data\");\n                 }\n                 return new Json_Value(Json_enum_type.STRING, buffer.rewind()\n                     .forward((int) n)\n-                    .getFixString((int) str_len));\n+                    .getFixString((int) str_len, charsetName));\n             case JSONB_TYPE_OPAQUE:\n                 /*\n                  * There should always be at least one byte, which tells the\n@@ -237,7 +238,7 @@\n             this.m_large = large;\n         }\n \n-        public String key(int i) {\n+        public String key(int i, String charsetName) {\n             m_data.rewind();\n             int offset_size = m_large ? LARGE_OFFSET_SIZE : SMALL_OFFSET_SIZE;\n             int key_entry_size = m_large ? KEY_ENTRY_SIZE_LARGE : KEY_ENTRY_SIZE_SMALL;\n@@ -250,10 +251,10 @@\n             // entry, always two\n             // bytes.\n             long key_length = m_data.getUint16();\n-            return m_data.rewind().forward((int) key_offset).getFixString((int) key_length);\n+            return m_data.rewind().forward((int) key_offset).getFixString((int) key_length, charsetName);\n         }\n \n-        public Json_Value element(int i) {\n+        public Json_Value element(int i, String charsetName) {\n             m_data.rewind();\n             int offset_size = m_large ? LARGE_OFFSET_SIZE : SMALL_OFFSET_SIZE;\n             int key_entry_size = m_large ? KEY_ENTRY_SIZE_LARGE : KEY_ENTRY_SIZE_SMALL;\n@@ -266,13 +267,13 @@\n             int type = m_data.forward(entry_offset).getUint8();\n             if (type == JSONB_TYPE_INT16 || type == JSONB_TYPE_UINT16 || type == JSONB_TYPE_LITERAL\n                 || (m_large && (type == JSONB_TYPE_INT32 || type == JSONB_TYPE_UINT32))) {\n-                return parse_scalar(type, m_data, value_entry_size - 1);\n+                return parse_scalar(type, m_data, value_entry_size - 1, charsetName);\n             }\n             int value_offset = (int) read_offset_or_size(m_data, m_large);\n-            return parse_value(type, m_data.rewind().forward(value_offset), (int) m_length - value_offset);\n+            return parse_value(type, m_data.rewind().forward(value_offset), (int) m_length - value_offset, charsetName);\n         }\n \n-        public StringBuilder toJsonString(StringBuilder buf) {\n+        public StringBuilder toJsonString(StringBuilder buf, String charsetName) {\n             switch (m_type) {\n                 case OBJECT:\n                     buf.append(\"{\");\n@@ -280,9 +281,9 @@\n                         if (i > 0) {\n                             buf.append(\", \");\n                         }\n-                        buf.append('\"').append(key(i)).append('\"');\n+                        buf.append('\"').append(key(i, charsetName)).append('\"');\n                         buf.append(\": \");\n-                        element(i).toJsonString(buf);\n+                        element(i, charsetName).toJsonString(buf, charsetName);\n                     }\n                     buf.append(\"}\");\n                     break;\n@@ -292,7 +293,7 @@\n                         if (i > 0) {\n                             buf.append(\", \");\n                         }\n-                        element(i).toJsonString(buf);\n+                        element(i, charsetName).toJsonString(buf, charsetName);\n                     }\n                     buf.append(\"]\");\n                     break;\n@@ -361,7 +362,7 @@\n                         }\n                         buf.append('\"').append(text).append('\"');\n                     } else {\n-                        text = m_data.getFixString((int) m_length);\n+                        text = m_data.getFixString((int) m_length, charsetName);\n                         buf.append('\"').append(text).append('\"');\n                     }\n \n", "projectName": "alibaba.canal", "bugLineNum": 152, "bugNodeStartChar": 7033, "bugNodeLength": 102, "fixLineNum": 152, "fixNodeStartChar": 7033, "fixNodeLength": 115, "sourceBeforeFix": "buffer.rewind().forward((int)n).getFixString((int)str_len)", "sourceAfterFix": "buffer.rewind().forward((int)n).getFixString((int)str_len,charsetName)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "73627df082ff499af4ca1c482f79e304905007eb", "fixCommitParentSHA1": "2eb05b5934c6108b60b3f84816054b95db3e3a79", "bugFilePath": "dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/JsonConversion.java", "fixPatch": "diff --git a/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/JsonConversion.java b/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/JsonConversion.java\nindex b4b1ad7..251e458 100644\n--- a/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/JsonConversion.java\n+++ b/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/JsonConversion.java\n@@ -52,23 +52,24 @@\n     public static final int  VALUE_ENTRY_SIZE_SMALL  = (1 + SMALL_OFFSET_SIZE);\n     public static final int  VALUE_ENTRY_SIZE_LARGE  = (1 + LARGE_OFFSET_SIZE);\n \n-    public static Json_Value parse_value(int type, LogBuffer buffer, long len) {\n+    public static Json_Value parse_value(int type, LogBuffer buffer, long len, String charsetName) {\n         buffer = buffer.duplicate(buffer.position(), (int) len);\n         switch (type) {\n             case JSONB_TYPE_SMALL_OBJECT:\n-                return parse_array_or_object(Json_enum_type.OBJECT, buffer, len, false);\n+                return parse_array_or_object(Json_enum_type.OBJECT, buffer, len, false, charsetName);\n             case JSONB_TYPE_LARGE_OBJECT:\n-                return parse_array_or_object(Json_enum_type.OBJECT, buffer, len, true);\n+                return parse_array_or_object(Json_enum_type.OBJECT, buffer, len, true, charsetName);\n             case JSONB_TYPE_SMALL_ARRAY:\n-                return parse_array_or_object(Json_enum_type.ARRAY, buffer, len, false);\n+                return parse_array_or_object(Json_enum_type.ARRAY, buffer, len, false, charsetName);\n             case JSONB_TYPE_LARGE_ARRAY:\n-                return parse_array_or_object(Json_enum_type.ARRAY, buffer, len, true);\n+                return parse_array_or_object(Json_enum_type.ARRAY, buffer, len, true, charsetName);\n             default:\n-                return parse_scalar(type, buffer, len);\n+                return parse_scalar(type, buffer, len, charsetName);\n         }\n     }\n \n-    private static Json_Value parse_array_or_object(Json_enum_type type, LogBuffer buffer, long len, boolean large) {\n+    private static Json_Value parse_array_or_object(Json_enum_type type, LogBuffer buffer, long len, boolean large,\n+                                                    String charsetName) {\n         long offset_size = large ? LARGE_OFFSET_SIZE : SMALL_OFFSET_SIZE;\n         if (len < 2 * offset_size) {\n             throw new IllegalArgumentException(\"illegal json data\");\n@@ -95,7 +96,7 @@\n         return large ? buffer.getUint32() : buffer.getUint16();\n     }\n \n-    private static Json_Value parse_scalar(int type, LogBuffer buffer, long len) {\n+    private static Json_Value parse_scalar(int type, LogBuffer buffer, long len, String charsetName) {\n         switch (type) {\n             case JSONB_TYPE_LITERAL:\n                 /* purecov: inspected */\n@@ -146,12 +147,12 @@\n                     }\n                 }\n \n-                if (str_len == 0 || len < n + str_len) {\n+                if (len < n + str_len) {\n                     throw new IllegalArgumentException(\"illegal json data\");\n                 }\n                 return new Json_Value(Json_enum_type.STRING, buffer.rewind()\n                     .forward((int) n)\n-                    .getFixString((int) str_len));\n+                    .getFixString((int) str_len, charsetName));\n             case JSONB_TYPE_OPAQUE:\n                 /*\n                  * There should always be at least one byte, which tells the\n@@ -237,7 +238,7 @@\n             this.m_large = large;\n         }\n \n-        public String key(int i) {\n+        public String key(int i, String charsetName) {\n             m_data.rewind();\n             int offset_size = m_large ? LARGE_OFFSET_SIZE : SMALL_OFFSET_SIZE;\n             int key_entry_size = m_large ? KEY_ENTRY_SIZE_LARGE : KEY_ENTRY_SIZE_SMALL;\n@@ -250,10 +251,10 @@\n             // entry, always two\n             // bytes.\n             long key_length = m_data.getUint16();\n-            return m_data.rewind().forward((int) key_offset).getFixString((int) key_length);\n+            return m_data.rewind().forward((int) key_offset).getFixString((int) key_length, charsetName);\n         }\n \n-        public Json_Value element(int i) {\n+        public Json_Value element(int i, String charsetName) {\n             m_data.rewind();\n             int offset_size = m_large ? LARGE_OFFSET_SIZE : SMALL_OFFSET_SIZE;\n             int key_entry_size = m_large ? KEY_ENTRY_SIZE_LARGE : KEY_ENTRY_SIZE_SMALL;\n@@ -266,13 +267,13 @@\n             int type = m_data.forward(entry_offset).getUint8();\n             if (type == JSONB_TYPE_INT16 || type == JSONB_TYPE_UINT16 || type == JSONB_TYPE_LITERAL\n                 || (m_large && (type == JSONB_TYPE_INT32 || type == JSONB_TYPE_UINT32))) {\n-                return parse_scalar(type, m_data, value_entry_size - 1);\n+                return parse_scalar(type, m_data, value_entry_size - 1, charsetName);\n             }\n             int value_offset = (int) read_offset_or_size(m_data, m_large);\n-            return parse_value(type, m_data.rewind().forward(value_offset), (int) m_length - value_offset);\n+            return parse_value(type, m_data.rewind().forward(value_offset), (int) m_length - value_offset, charsetName);\n         }\n \n-        public StringBuilder toJsonString(StringBuilder buf) {\n+        public StringBuilder toJsonString(StringBuilder buf, String charsetName) {\n             switch (m_type) {\n                 case OBJECT:\n                     buf.append(\"{\");\n@@ -280,9 +281,9 @@\n                         if (i > 0) {\n                             buf.append(\", \");\n                         }\n-                        buf.append('\"').append(key(i)).append('\"');\n+                        buf.append('\"').append(key(i, charsetName)).append('\"');\n                         buf.append(\": \");\n-                        element(i).toJsonString(buf);\n+                        element(i, charsetName).toJsonString(buf, charsetName);\n                     }\n                     buf.append(\"}\");\n                     break;\n@@ -292,7 +293,7 @@\n                         if (i > 0) {\n                             buf.append(\", \");\n                         }\n-                        element(i).toJsonString(buf);\n+                        element(i, charsetName).toJsonString(buf, charsetName);\n                     }\n                     buf.append(\"]\");\n                     break;\n@@ -361,7 +362,7 @@\n                         }\n                         buf.append('\"').append(text).append('\"');\n                     } else {\n-                        text = m_data.getFixString((int) m_length);\n+                        text = m_data.getFixString((int) m_length, charsetName);\n                         buf.append('\"').append(text).append('\"');\n                     }\n \n", "projectName": "alibaba.canal", "bugLineNum": 253, "bugNodeStartChar": 10970, "bugNodeLength": 72, "fixLineNum": 253, "fixNodeStartChar": 10970, "fixNodeLength": 85, "sourceBeforeFix": "m_data.rewind().forward((int)key_offset).getFixString((int)key_length)", "sourceAfterFix": "m_data.rewind().forward((int)key_offset).getFixString((int)key_length,charsetName)"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "73627df082ff499af4ca1c482f79e304905007eb", "fixCommitParentSHA1": "2eb05b5934c6108b60b3f84816054b95db3e3a79", "bugFilePath": "dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/JsonConversion.java", "fixPatch": "diff --git a/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/JsonConversion.java b/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/JsonConversion.java\nindex b4b1ad7..251e458 100644\n--- a/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/JsonConversion.java\n+++ b/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/JsonConversion.java\n@@ -52,23 +52,24 @@\n     public static final int  VALUE_ENTRY_SIZE_SMALL  = (1 + SMALL_OFFSET_SIZE);\n     public static final int  VALUE_ENTRY_SIZE_LARGE  = (1 + LARGE_OFFSET_SIZE);\n \n-    public static Json_Value parse_value(int type, LogBuffer buffer, long len) {\n+    public static Json_Value parse_value(int type, LogBuffer buffer, long len, String charsetName) {\n         buffer = buffer.duplicate(buffer.position(), (int) len);\n         switch (type) {\n             case JSONB_TYPE_SMALL_OBJECT:\n-                return parse_array_or_object(Json_enum_type.OBJECT, buffer, len, false);\n+                return parse_array_or_object(Json_enum_type.OBJECT, buffer, len, false, charsetName);\n             case JSONB_TYPE_LARGE_OBJECT:\n-                return parse_array_or_object(Json_enum_type.OBJECT, buffer, len, true);\n+                return parse_array_or_object(Json_enum_type.OBJECT, buffer, len, true, charsetName);\n             case JSONB_TYPE_SMALL_ARRAY:\n-                return parse_array_or_object(Json_enum_type.ARRAY, buffer, len, false);\n+                return parse_array_or_object(Json_enum_type.ARRAY, buffer, len, false, charsetName);\n             case JSONB_TYPE_LARGE_ARRAY:\n-                return parse_array_or_object(Json_enum_type.ARRAY, buffer, len, true);\n+                return parse_array_or_object(Json_enum_type.ARRAY, buffer, len, true, charsetName);\n             default:\n-                return parse_scalar(type, buffer, len);\n+                return parse_scalar(type, buffer, len, charsetName);\n         }\n     }\n \n-    private static Json_Value parse_array_or_object(Json_enum_type type, LogBuffer buffer, long len, boolean large) {\n+    private static Json_Value parse_array_or_object(Json_enum_type type, LogBuffer buffer, long len, boolean large,\n+                                                    String charsetName) {\n         long offset_size = large ? LARGE_OFFSET_SIZE : SMALL_OFFSET_SIZE;\n         if (len < 2 * offset_size) {\n             throw new IllegalArgumentException(\"illegal json data\");\n@@ -95,7 +96,7 @@\n         return large ? buffer.getUint32() : buffer.getUint16();\n     }\n \n-    private static Json_Value parse_scalar(int type, LogBuffer buffer, long len) {\n+    private static Json_Value parse_scalar(int type, LogBuffer buffer, long len, String charsetName) {\n         switch (type) {\n             case JSONB_TYPE_LITERAL:\n                 /* purecov: inspected */\n@@ -146,12 +147,12 @@\n                     }\n                 }\n \n-                if (str_len == 0 || len < n + str_len) {\n+                if (len < n + str_len) {\n                     throw new IllegalArgumentException(\"illegal json data\");\n                 }\n                 return new Json_Value(Json_enum_type.STRING, buffer.rewind()\n                     .forward((int) n)\n-                    .getFixString((int) str_len));\n+                    .getFixString((int) str_len, charsetName));\n             case JSONB_TYPE_OPAQUE:\n                 /*\n                  * There should always be at least one byte, which tells the\n@@ -237,7 +238,7 @@\n             this.m_large = large;\n         }\n \n-        public String key(int i) {\n+        public String key(int i, String charsetName) {\n             m_data.rewind();\n             int offset_size = m_large ? LARGE_OFFSET_SIZE : SMALL_OFFSET_SIZE;\n             int key_entry_size = m_large ? KEY_ENTRY_SIZE_LARGE : KEY_ENTRY_SIZE_SMALL;\n@@ -250,10 +251,10 @@\n             // entry, always two\n             // bytes.\n             long key_length = m_data.getUint16();\n-            return m_data.rewind().forward((int) key_offset).getFixString((int) key_length);\n+            return m_data.rewind().forward((int) key_offset).getFixString((int) key_length, charsetName);\n         }\n \n-        public Json_Value element(int i) {\n+        public Json_Value element(int i, String charsetName) {\n             m_data.rewind();\n             int offset_size = m_large ? LARGE_OFFSET_SIZE : SMALL_OFFSET_SIZE;\n             int key_entry_size = m_large ? KEY_ENTRY_SIZE_LARGE : KEY_ENTRY_SIZE_SMALL;\n@@ -266,13 +267,13 @@\n             int type = m_data.forward(entry_offset).getUint8();\n             if (type == JSONB_TYPE_INT16 || type == JSONB_TYPE_UINT16 || type == JSONB_TYPE_LITERAL\n                 || (m_large && (type == JSONB_TYPE_INT32 || type == JSONB_TYPE_UINT32))) {\n-                return parse_scalar(type, m_data, value_entry_size - 1);\n+                return parse_scalar(type, m_data, value_entry_size - 1, charsetName);\n             }\n             int value_offset = (int) read_offset_or_size(m_data, m_large);\n-            return parse_value(type, m_data.rewind().forward(value_offset), (int) m_length - value_offset);\n+            return parse_value(type, m_data.rewind().forward(value_offset), (int) m_length - value_offset, charsetName);\n         }\n \n-        public StringBuilder toJsonString(StringBuilder buf) {\n+        public StringBuilder toJsonString(StringBuilder buf, String charsetName) {\n             switch (m_type) {\n                 case OBJECT:\n                     buf.append(\"{\");\n@@ -280,9 +281,9 @@\n                         if (i > 0) {\n                             buf.append(\", \");\n                         }\n-                        buf.append('\"').append(key(i)).append('\"');\n+                        buf.append('\"').append(key(i, charsetName)).append('\"');\n                         buf.append(\": \");\n-                        element(i).toJsonString(buf);\n+                        element(i, charsetName).toJsonString(buf, charsetName);\n                     }\n                     buf.append(\"}\");\n                     break;\n@@ -292,7 +293,7 @@\n                         if (i > 0) {\n                             buf.append(\", \");\n                         }\n-                        element(i).toJsonString(buf);\n+                        element(i, charsetName).toJsonString(buf, charsetName);\n                     }\n                     buf.append(\"]\");\n                     break;\n@@ -361,7 +362,7 @@\n                         }\n                         buf.append('\"').append(text).append('\"');\n                     } else {\n-                        text = m_data.getFixString((int) m_length);\n+                        text = m_data.getFixString((int) m_length, charsetName);\n                         buf.append('\"').append(text).append('\"');\n                     }\n \n", "projectName": "alibaba.canal", "bugLineNum": 364, "bugNodeStartChar": 16578, "bugNodeLength": 35, "fixLineNum": 364, "fixNodeStartChar": 16578, "fixNodeLength": 48, "sourceBeforeFix": "m_data.getFixString((int)m_length)", "sourceAfterFix": "m_data.getFixString((int)m_length,charsetName)"}, {"bugType": "ADD_THROWS_EXCEPTION", "fixCommitSHA1": "20d8ac67dc04e9e0c4484af769b156bcd75ef00b", "fixCommitParentSHA1": "19a56fb77e3e67366382edade55376e7cce80009", "bugFilePath": "driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlQueryExecutor.java", "fixPatch": "diff --git a/driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlQueryExecutor.java b/driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlQueryExecutor.java\nindex 2285329..3a79ad2 100644\n--- a/driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlQueryExecutor.java\n+++ b/driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlQueryExecutor.java\n@@ -24,9 +24,9 @@\n \r\n     private SocketChannel channel;\r\n \r\n-    public MysqlQueryExecutor(MysqlConnector connector){\r\n+    public MysqlQueryExecutor(MysqlConnector connector) throws IOException{\r\n         if (!connector.isConnected()) {\r\n-            throw new RuntimeException(\"should execute connector.connect() first\");\r\n+            throw new IOException(\"should execute connector.connect() first\");\r\n         }\r\n \r\n         this.channel = connector.getChannel();\r\n", "projectName": "alibaba.canal", "bugLineNum": 27, "bugNodeStartChar": 1039, "bugNodeLength": 246, "fixLineNum": 27, "fixNodeStartChar": 1013, "fixNodeLength": 259, "sourceBeforeFix": "1", "sourceAfterFix": "1"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "20d8ac67dc04e9e0c4484af769b156bcd75ef00b", "fixCommitParentSHA1": "19a56fb77e3e67366382edade55376e7cce80009", "bugFilePath": "driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlQueryExecutor.java", "fixPatch": "diff --git a/driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlQueryExecutor.java b/driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlQueryExecutor.java\nindex 2285329..3a79ad2 100644\n--- a/driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlQueryExecutor.java\n+++ b/driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlQueryExecutor.java\n@@ -24,9 +24,9 @@\n \r\n     private SocketChannel channel;\r\n \r\n-    public MysqlQueryExecutor(MysqlConnector connector){\r\n+    public MysqlQueryExecutor(MysqlConnector connector) throws IOException{\r\n         if (!connector.isConnected()) {\r\n-            throw new RuntimeException(\"should execute connector.connect() first\");\r\n+            throw new IOException(\"should execute connector.connect() first\");\r\n         }\r\n \r\n         this.channel = connector.getChannel();\r\n", "projectName": "alibaba.canal", "bugLineNum": 29, "bugNodeStartChar": 1152, "bugNodeLength": 64, "fixLineNum": 29, "fixNodeStartChar": 1124, "fixNodeLength": 59, "sourceBeforeFix": "new RuntimeException(\"should execute connector.connect() first\")", "sourceAfterFix": "new IOException(\"should execute connector.connect() first\")"}, {"bugType": "ADD_THROWS_EXCEPTION", "fixCommitSHA1": "20d8ac67dc04e9e0c4484af769b156bcd75ef00b", "fixCommitParentSHA1": "19a56fb77e3e67366382edade55376e7cce80009", "bugFilePath": "driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlUpdateExecutor.java", "fixPatch": "diff --git a/driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlUpdateExecutor.java b/driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlUpdateExecutor.java\nindex 0b6c11c..f2f072c 100644\n--- a/driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlUpdateExecutor.java\n+++ b/driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlUpdateExecutor.java\n@@ -23,9 +23,9 @@\n \r\n     private SocketChannel       channel;\r\n \r\n-    public MysqlUpdateExecutor(MysqlConnector connector){\r\n+    public MysqlUpdateExecutor(MysqlConnector connector) throws IOException{\r\n         if (!connector.isConnected()) {\r\n-            throw new RuntimeException(\"should execute connector.connect() first\");\r\n+            throw new IOException(\"should execute connector.connect() first\");\r\n         }\r\n \r\n         this.channel = connector.getChannel();\r\n", "projectName": "alibaba.canal", "bugLineNum": 26, "bugNodeStartChar": 821, "bugNodeLength": 247, "fixLineNum": 26, "fixNodeStartChar": 796, "fixNodeLength": 260, "sourceBeforeFix": "1", "sourceAfterFix": "1"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "20d8ac67dc04e9e0c4484af769b156bcd75ef00b", "fixCommitParentSHA1": "19a56fb77e3e67366382edade55376e7cce80009", "bugFilePath": "driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlUpdateExecutor.java", "fixPatch": "diff --git a/driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlUpdateExecutor.java b/driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlUpdateExecutor.java\nindex 0b6c11c..f2f072c 100644\n--- a/driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlUpdateExecutor.java\n+++ b/driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlUpdateExecutor.java\n@@ -23,9 +23,9 @@\n \r\n     private SocketChannel       channel;\r\n \r\n-    public MysqlUpdateExecutor(MysqlConnector connector){\r\n+    public MysqlUpdateExecutor(MysqlConnector connector) throws IOException{\r\n         if (!connector.isConnected()) {\r\n-            throw new RuntimeException(\"should execute connector.connect() first\");\r\n+            throw new IOException(\"should execute connector.connect() first\");\r\n         }\r\n \r\n         this.channel = connector.getChannel();\r\n", "projectName": "alibaba.canal", "bugLineNum": 28, "bugNodeStartChar": 935, "bugNodeLength": 64, "fixLineNum": 28, "fixNodeStartChar": 908, "fixNodeLength": 59, "sourceBeforeFix": "new RuntimeException(\"should execute connector.connect() first\")", "sourceAfterFix": "new IOException(\"should execute connector.connect() first\")"}, {"bugType": "MORE_SPECIFIC_IF", "fixCommitSHA1": "db4fc68a550a2a6c42ddc91e7302eca985e9a468", "fixCommitParentSHA1": "eef58005d9cf5f3035ccfcf2915770e9610aa29d", "bugFilePath": "parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlEventParser.java", "fixPatch": "diff --git a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlEventParser.java b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlEventParser.java\nindex 7060f26..9b7b152 100644\n--- a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlEventParser.java\n+++ b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlEventParser.java\n@@ -182,7 +182,7 @@\n     protected void stopHeartBeat() {\n         TimerTask heartBeatTimerTask = this.heartBeatTimerTask;\n         super.stopHeartBeat();\n-        if (heartBeatTimerTask != null) {\n+        if (heartBeatTimerTask != null && heartBeatTimerTask instanceof MysqlDetectingTimeTask) {\n             MysqlConnection mysqlConnection = ((MysqlDetectingTimeTask) heartBeatTimerTask).getMysqlConnection();\n             try {\n                 mysqlConnection.disconnect();\n", "projectName": "alibaba.canal", "bugLineNum": 185, "bugNodeStartChar": 7636, "bugNodeLength": 26, "fixLineNum": 185, "fixNodeStartChar": 7636, "fixNodeLength": 82, "sourceBeforeFix": "heartBeatTimerTask != null", "sourceAfterFix": "heartBeatTimerTask != null && heartBeatTimerTask instanceof MysqlDetectingTimeTask"}, {"bugType": "CHANGE_NUMERAL", "fixCommitSHA1": "69170f58df0250e43066e4b56e038fced05f2268", "fixCommitParentSHA1": "c3e38e50e269adafdd38a48c63a1740cde304c67", "bugFilePath": "parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlEventParser.java", "fixPatch": "diff --git a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlEventParser.java b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlEventParser.java\nindex dc480e3..5644651 100644\n--- a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlEventParser.java\n+++ b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/MysqlEventParser.java\n@@ -68,7 +68,7 @@\n \n     // update by yishun.chen,\u7279\u6b8a\u5f02\u5e38\u5904\u7406\u53c2\u6570\n     private int                dumpErrorCount                    = 0;        // binlogDump\u5931\u8d25\u5f02\u5e38\u8ba1\u6570\n-    private int                dumpErrorCountThreshold           = 3;        // binlogDump\u5931\u8d25\u5f02\u5e38\u8ba1\u6570\u9600\u503c\n+    private int                dumpErrorCountThreshold           = 2;        // binlogDump\u5931\u8d25\u5f02\u5e38\u8ba1\u6570\u9600\u503c\n \n     protected ErosaConnection buildErosaConnection() {\n         return buildMysqlConnection(this.runningInfo);\n@@ -395,7 +395,8 @@\n                     // binlog\u5b9a\u4f4d\u4f4d\u70b9\u5931\u8d25,\u53ef\u80fd\u6709\u4e24\u4e2a\u539f\u56e0:\n                     // 1. binlog\u4f4d\u70b9\u88ab\u5220\u9664\n                     // 2.vip\u6a21\u5f0f\u7684mysql,\u53d1\u751f\u4e86\u4e3b\u5907\u5207\u6362,\u5224\u65ad\u4e00\u4e0bserverId\u662f\u5426\u53d8\u5316,\u9488\u5bf9\u8fd9\u79cd\u6a21\u5f0f\u53ef\u4ee5\u53d1\u8d77\u4e00\u6b21\u57fa\u4e8e\u65f6\u95f4\u6233\u67e5\u627e\u5408\u9002\u7684binlog\u4f4d\u70b9\n-                    boolean case2 = standbyInfo == null && logPosition.getPostion().getServerId() != null\n+                    boolean case2 = (standbyInfo.getAddress() == null)\n+                                    && logPosition.getPostion().getServerId() != null\n                                     && !logPosition.getPostion().getServerId().equals(findServerId(mysqlConnection));\n                     if (case2) {\n                         long timestamp = logPosition.getPostion().getTimestamp();\n", "projectName": "alibaba.canal", "bugLineNum": 71, "bugNodeStartChar": 3495, "bugNodeLength": 37, "fixLineNum": 71, "fixNodeStartChar": 3495, "fixNodeLength": 37, "sourceBeforeFix": "dumpErrorCountThreshold=3", "sourceAfterFix": "dumpErrorCountThreshold=2"}, {"bugType": "OVERLOAD_METHOD_DELETED_ARGS", "fixCommitSHA1": "f1a1cb26cc382a11d148ae68a0c0f1e26f262085", "fixCommitParentSHA1": "4f1e3bafe734cba3b27183fb4853686719c2e641", "bugFilePath": "client/src/main/java/com/alibaba/otter/canal/client/CanalConnectors.java", "fixPatch": "diff --git a/client/src/main/java/com/alibaba/otter/canal/client/CanalConnectors.java b/client/src/main/java/com/alibaba/otter/canal/client/CanalConnectors.java\nindex de0aa2e..391b21d 100644\n--- a/client/src/main/java/com/alibaba/otter/canal/client/CanalConnectors.java\n+++ b/client/src/main/java/com/alibaba/otter/canal/client/CanalConnectors.java\n@@ -28,7 +28,7 @@\n      */\n     public static CanalConnector newSingleConnector(SocketAddress address, String destination, String username,\n                                                     String password) {\n-        SimpleCanalConnector canalConnector = new SimpleCanalConnector(address, username, password, destination, null);\n+        SimpleCanalConnector canalConnector = new SimpleCanalConnector(address, username, password, destination);\n         canalConnector.setSoTimeout(30 * 1000);\n         return canalConnector;\n     }\n", "projectName": "alibaba.canal", "bugLineNum": 31, "bugNodeStartChar": 936, "bugNodeLength": 72, "fixLineNum": 31, "fixNodeStartChar": 936, "fixNodeLength": 66, "sourceBeforeFix": "new SimpleCanalConnector(address,username,password,destination,null)", "sourceAfterFix": "new SimpleCanalConnector(address,username,password,destination)"}, {"bugType": "DIFFERENT_METHOD_SAME_ARGS", "fixCommitSHA1": "533c5cb8f6bda878779fffb1a4adc792f62a81a7", "fixCommitParentSHA1": "5932e1e31f5ca4566fca5f93acfddf29614a3422", "bugFilePath": "parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java", "fixPatch": "diff --git a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java\nindex 37ea0d0..e066dd9 100644\n--- a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java\n+++ b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java\n@@ -350,7 +350,7 @@\n             rowChangeBuider.setEventType(eventType);\n             RowsLogBuffer buffer = event.getRowsBuf(charset.name());\n             BitSet columns = event.getColumns();\n-            BitSet changeColumns = event.getColumns();\n+            BitSet changeColumns = event.getChangeColumns();\n             boolean tableError = false;\n             TableMeta tableMeta = null;\n             if (tableMetaCache != null) {// \u5165\u9519\u5b58\u5728table meta cache\n@@ -380,7 +380,7 @@\n                         break;\n                     }\n \n-                    tableError |= parseOneRow(rowDataBuilder, event, buffer, event.getChangeColumns(), true, tableMeta);\n+                    tableError |= parseOneRow(rowDataBuilder, event, buffer, changeColumns, true, tableMeta);\n                 }\n \n                 rowChangeBuider.addRowDatas(rowDataBuilder.build());\n", "projectName": "alibaba.canal", "bugLineNum": 353, "bugNodeStartChar": 16448, "bugNodeLength": 18, "fixLineNum": 353, "fixNodeStartChar": 16448, "fixNodeLength": 24, "sourceBeforeFix": "event.getColumns()", "sourceAfterFix": "event.getChangeColumns()"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "533c5cb8f6bda878779fffb1a4adc792f62a81a7", "fixCommitParentSHA1": "5932e1e31f5ca4566fca5f93acfddf29614a3422", "bugFilePath": "parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java", "fixPatch": "diff --git a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java\nindex 37ea0d0..e066dd9 100644\n--- a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java\n+++ b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java\n@@ -350,7 +350,7 @@\n             rowChangeBuider.setEventType(eventType);\n             RowsLogBuffer buffer = event.getRowsBuf(charset.name());\n             BitSet columns = event.getColumns();\n-            BitSet changeColumns = event.getColumns();\n+            BitSet changeColumns = event.getChangeColumns();\n             boolean tableError = false;\n             TableMeta tableMeta = null;\n             if (tableMetaCache != null) {// \u5165\u9519\u5b58\u5728table meta cache\n@@ -380,7 +380,7 @@\n                         break;\n                     }\n \n-                    tableError |= parseOneRow(rowDataBuilder, event, buffer, event.getChangeColumns(), true, tableMeta);\n+                    tableError |= parseOneRow(rowDataBuilder, event, buffer, changeColumns, true, tableMeta);\n                 }\n \n                 rowChangeBuider.addRowDatas(rowDataBuilder.build());\n", "projectName": "alibaba.canal", "bugLineNum": 353, "bugNodeStartChar": 16448, "bugNodeLength": 18, "fixLineNum": 353, "fixNodeStartChar": 16448, "fixNodeLength": 24, "sourceBeforeFix": "event.getColumns()", "sourceAfterFix": "event.getChangeColumns()"}]