[{"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "e61590899577224e5a5d52b1435d710f6034edaf", "fixCommitParentSHA1": "75afd4a28bc48ddfcecc4a2a10b1b3d951d24d05", "bugFilePath": "scribejava-core/src/main/java/com/github/scribejava/core/builder/api/DefaultApi20.java", "fixPatch": "diff --git a/scribejava-core/src/main/java/com/github/scribejava/core/builder/api/DefaultApi20.java b/scribejava-core/src/main/java/com/github/scribejava/core/builder/api/DefaultApi20.java\nindex 8a4d611..8c69ce2 100644\n--- a/scribejava-core/src/main/java/com/github/scribejava/core/builder/api/DefaultApi20.java\n+++ b/scribejava-core/src/main/java/com/github/scribejava/core/builder/api/DefaultApi20.java\n@@ -125,7 +125,7 @@\n     @Deprecated\n     public OAuth20Service createService(String apiKey, String apiSecret, String callback, String defaultScope,\n             String responseType, String userAgent, HttpClientConfig httpClientConfig, HttpClient httpClient) {\n-        return createService(apiKey, apiSecret, callback, defaultScope, responseType, userAgent, httpClientConfig,\n+        return createService(apiKey, apiSecret, callback, defaultScope, responseType, null, userAgent, httpClientConfig,\n                 httpClient);\n     }\n \n", "projectName": "scribejava.scribejava", "bugLineNum": 128, "bugNodeStartChar": 4912, "bugNodeLength": 127, "fixLineNum": 128, "fixNodeStartChar": 4912, "fixNodeLength": 133, "sourceBeforeFix": "createService(apiKey,apiSecret,callback,defaultScope,responseType,userAgent,httpClientConfig,httpClient)", "sourceAfterFix": "createService(apiKey,apiSecret,callback,defaultScope,responseType,null,userAgent,httpClientConfig,httpClient)"}, {"bugType": "SWAP_ARGUMENTS", "fixCommitSHA1": "c2023397cf81452d755a5401fe95b1d47dbde48a", "fixCommitParentSHA1": "5d9939034fe7bce54ba6d40f5e8e6d5d98b0fe39", "bugFilePath": "scribejava-httpclient-okhttp/src/main/java/com/github/scribejava/httpclient/okhttp/OkHttpHttpClient.java", "fixPatch": "diff --git a/scribejava-httpclient-okhttp/src/main/java/com/github/scribejava/httpclient/okhttp/OkHttpHttpClient.java b/scribejava-httpclient-okhttp/src/main/java/com/github/scribejava/httpclient/okhttp/OkHttpHttpClient.java\nindex 4f3e7e4..67df4b0 100644\n--- a/scribejava-httpclient-okhttp/src/main/java/com/github/scribejava/httpclient/okhttp/OkHttpHttpClient.java\n+++ b/scribejava-httpclient-okhttp/src/main/java/com/github/scribejava/httpclient/okhttp/OkHttpHttpClient.java\n@@ -165,19 +165,19 @@\n         BYTE_ARRAY {\n             @Override\n             RequestBody createBody(MediaType mediaType, Object bodyContents) {\n-                return RequestBody.create(mediaType, (byte[]) bodyContents);\n+                return RequestBody.create((byte[]) bodyContents, mediaType);\n             }\n         },\n         STRING {\n             @Override\n             RequestBody createBody(MediaType mediaType, Object bodyContents) {\n-                return RequestBody.create(mediaType, (String) bodyContents);\n+                return RequestBody.create((String) bodyContents, mediaType);\n             }\n         },\n         FILE {\n             @Override\n             RequestBody createBody(MediaType mediaType, Object bodyContents) {\n-                return RequestBody.create(mediaType, (File) bodyContents);\n+                return RequestBody.create((File) bodyContents, mediaType);\n             }\n         };\n \n", "projectName": "scribejava.scribejava", "bugLineNum": 168, "bugNodeStartChar": 7045, "bugNodeLength": 52, "fixLineNum": 168, "fixNodeStartChar": 7045, "fixNodeLength": 52, "sourceBeforeFix": "RequestBody.create(mediaType,(byte[])bodyContents)", "sourceAfterFix": "RequestBody.create((byte[])bodyContents,mediaType)"}, {"bugType": "SWAP_ARGUMENTS", "fixCommitSHA1": "c2023397cf81452d755a5401fe95b1d47dbde48a", "fixCommitParentSHA1": "5d9939034fe7bce54ba6d40f5e8e6d5d98b0fe39", "bugFilePath": "scribejava-httpclient-okhttp/src/main/java/com/github/scribejava/httpclient/okhttp/OkHttpHttpClient.java", "fixPatch": "diff --git a/scribejava-httpclient-okhttp/src/main/java/com/github/scribejava/httpclient/okhttp/OkHttpHttpClient.java b/scribejava-httpclient-okhttp/src/main/java/com/github/scribejava/httpclient/okhttp/OkHttpHttpClient.java\nindex 4f3e7e4..67df4b0 100644\n--- a/scribejava-httpclient-okhttp/src/main/java/com/github/scribejava/httpclient/okhttp/OkHttpHttpClient.java\n+++ b/scribejava-httpclient-okhttp/src/main/java/com/github/scribejava/httpclient/okhttp/OkHttpHttpClient.java\n@@ -165,19 +165,19 @@\n         BYTE_ARRAY {\n             @Override\n             RequestBody createBody(MediaType mediaType, Object bodyContents) {\n-                return RequestBody.create(mediaType, (byte[]) bodyContents);\n+                return RequestBody.create((byte[]) bodyContents, mediaType);\n             }\n         },\n         STRING {\n             @Override\n             RequestBody createBody(MediaType mediaType, Object bodyContents) {\n-                return RequestBody.create(mediaType, (String) bodyContents);\n+                return RequestBody.create((String) bodyContents, mediaType);\n             }\n         },\n         FILE {\n             @Override\n             RequestBody createBody(MediaType mediaType, Object bodyContents) {\n-                return RequestBody.create(mediaType, (File) bodyContents);\n+                return RequestBody.create((File) bodyContents, mediaType);\n             }\n         };\n \n", "projectName": "scribejava.scribejava", "bugLineNum": 174, "bugNodeStartChar": 7265, "bugNodeLength": 52, "fixLineNum": 174, "fixNodeStartChar": 7265, "fixNodeLength": 52, "sourceBeforeFix": "RequestBody.create(mediaType,(String)bodyContents)", "sourceAfterFix": "RequestBody.create((String)bodyContents,mediaType)"}, {"bugType": "SWAP_ARGUMENTS", "fixCommitSHA1": "c2023397cf81452d755a5401fe95b1d47dbde48a", "fixCommitParentSHA1": "5d9939034fe7bce54ba6d40f5e8e6d5d98b0fe39", "bugFilePath": "scribejava-httpclient-okhttp/src/main/java/com/github/scribejava/httpclient/okhttp/OkHttpHttpClient.java", "fixPatch": "diff --git a/scribejava-httpclient-okhttp/src/main/java/com/github/scribejava/httpclient/okhttp/OkHttpHttpClient.java b/scribejava-httpclient-okhttp/src/main/java/com/github/scribejava/httpclient/okhttp/OkHttpHttpClient.java\nindex 4f3e7e4..67df4b0 100644\n--- a/scribejava-httpclient-okhttp/src/main/java/com/github/scribejava/httpclient/okhttp/OkHttpHttpClient.java\n+++ b/scribejava-httpclient-okhttp/src/main/java/com/github/scribejava/httpclient/okhttp/OkHttpHttpClient.java\n@@ -165,19 +165,19 @@\n         BYTE_ARRAY {\n             @Override\n             RequestBody createBody(MediaType mediaType, Object bodyContents) {\n-                return RequestBody.create(mediaType, (byte[]) bodyContents);\n+                return RequestBody.create((byte[]) bodyContents, mediaType);\n             }\n         },\n         STRING {\n             @Override\n             RequestBody createBody(MediaType mediaType, Object bodyContents) {\n-                return RequestBody.create(mediaType, (String) bodyContents);\n+                return RequestBody.create((String) bodyContents, mediaType);\n             }\n         },\n         FILE {\n             @Override\n             RequestBody createBody(MediaType mediaType, Object bodyContents) {\n-                return RequestBody.create(mediaType, (File) bodyContents);\n+                return RequestBody.create((File) bodyContents, mediaType);\n             }\n         };\n \n", "projectName": "scribejava.scribejava", "bugLineNum": 180, "bugNodeStartChar": 7483, "bugNodeLength": 50, "fixLineNum": 180, "fixNodeStartChar": 7483, "fixNodeLength": 50, "sourceBeforeFix": "RequestBody.create(mediaType,(File)bodyContents)", "sourceAfterFix": "RequestBody.create((File)bodyContents,mediaType)"}, {"bugType": "SWAP_ARGUMENTS", "fixCommitSHA1": "c2023397cf81452d755a5401fe95b1d47dbde48a", "fixCommitParentSHA1": "5d9939034fe7bce54ba6d40f5e8e6d5d98b0fe39", "bugFilePath": "scribejava-httpclient-okhttp/src/test/java/com/github/scribejava/httpclient/okhttp/OAuthAsyncCompletionHandlerTest.java", "fixPatch": "diff --git a/scribejava-httpclient-okhttp/src/test/java/com/github/scribejava/httpclient/okhttp/OAuthAsyncCompletionHandlerTest.java b/scribejava-httpclient-okhttp/src/test/java/com/github/scribejava/httpclient/okhttp/OAuthAsyncCompletionHandlerTest.java\nindex 645c455..93d3c01 100644\n--- a/scribejava-httpclient-okhttp/src/test/java/com/github/scribejava/httpclient/okhttp/OAuthAsyncCompletionHandlerTest.java\n+++ b/scribejava-httpclient-okhttp/src/test/java/com/github/scribejava/httpclient/okhttp/OAuthAsyncCompletionHandlerTest.java\n@@ -78,7 +78,7 @@\n                 .protocol(Protocol.HTTP_1_1)\n                 .code(200)\n                 .message(\"ok\")\n-                .body(ResponseBody.create(MediaType.get(\"text/plain\"), new byte[0]))\n+                .body(ResponseBody.create(new byte[0], MediaType.get(\"text/plain\")))\n                 .build();\n         handler.onResponse(call, response);\n         assertNotNull(callback.getResponse());\n@@ -98,7 +98,7 @@\n                 .protocol(Protocol.HTTP_1_1)\n                 .code(200)\n                 .message(\"ok\")\n-                .body(ResponseBody.create(MediaType.get(\"text/plain\"), new byte[0]))\n+                .body(ResponseBody.create(new byte[0], MediaType.get(\"text/plain\")))\n                 .build();\n         handler.onResponse(call, response);\n         assertNull(callback.getResponse());\n@@ -124,7 +124,7 @@\n                 .protocol(Protocol.HTTP_1_1)\n                 .code(200)\n                 .message(\"ok\")\n-                .body(ResponseBody.create(MediaType.get(\"text/plain\"), new byte[0]))\n+                .body(ResponseBody.create(new byte[0], MediaType.get(\"text/plain\")))\n                 .build();\n         handler.onResponse(call, response);\n         assertNull(callback.getResponse());\n", "projectName": "scribejava.scribejava", "bugLineNum": 81, "bugNodeStartChar": 2582, "bugNodeLength": 61, "fixLineNum": 81, "fixNodeStartChar": 2582, "fixNodeLength": 61, "sourceBeforeFix": "ResponseBody.create(MediaType.get(\"text/plain\"),new byte[0])", "sourceAfterFix": "ResponseBody.create(new byte[0],MediaType.get(\"text/plain\"))"}, {"bugType": "SWAP_ARGUMENTS", "fixCommitSHA1": "c2023397cf81452d755a5401fe95b1d47dbde48a", "fixCommitParentSHA1": "5d9939034fe7bce54ba6d40f5e8e6d5d98b0fe39", "bugFilePath": "scribejava-httpclient-okhttp/src/test/java/com/github/scribejava/httpclient/okhttp/OAuthAsyncCompletionHandlerTest.java", "fixPatch": "diff --git a/scribejava-httpclient-okhttp/src/test/java/com/github/scribejava/httpclient/okhttp/OAuthAsyncCompletionHandlerTest.java b/scribejava-httpclient-okhttp/src/test/java/com/github/scribejava/httpclient/okhttp/OAuthAsyncCompletionHandlerTest.java\nindex 645c455..93d3c01 100644\n--- a/scribejava-httpclient-okhttp/src/test/java/com/github/scribejava/httpclient/okhttp/OAuthAsyncCompletionHandlerTest.java\n+++ b/scribejava-httpclient-okhttp/src/test/java/com/github/scribejava/httpclient/okhttp/OAuthAsyncCompletionHandlerTest.java\n@@ -78,7 +78,7 @@\n                 .protocol(Protocol.HTTP_1_1)\n                 .code(200)\n                 .message(\"ok\")\n-                .body(ResponseBody.create(MediaType.get(\"text/plain\"), new byte[0]))\n+                .body(ResponseBody.create(new byte[0], MediaType.get(\"text/plain\")))\n                 .build();\n         handler.onResponse(call, response);\n         assertNotNull(callback.getResponse());\n@@ -98,7 +98,7 @@\n                 .protocol(Protocol.HTTP_1_1)\n                 .code(200)\n                 .message(\"ok\")\n-                .body(ResponseBody.create(MediaType.get(\"text/plain\"), new byte[0]))\n+                .body(ResponseBody.create(new byte[0], MediaType.get(\"text/plain\")))\n                 .build();\n         handler.onResponse(call, response);\n         assertNull(callback.getResponse());\n@@ -124,7 +124,7 @@\n                 .protocol(Protocol.HTTP_1_1)\n                 .code(200)\n                 .message(\"ok\")\n-                .body(ResponseBody.create(MediaType.get(\"text/plain\"), new byte[0]))\n+                .body(ResponseBody.create(new byte[0], MediaType.get(\"text/plain\")))\n                 .build();\n         handler.onResponse(call, response);\n         assertNull(callback.getResponse());\n", "projectName": "scribejava.scribejava", "bugLineNum": 101, "bugNodeStartChar": 3430, "bugNodeLength": 61, "fixLineNum": 101, "fixNodeStartChar": 3430, "fixNodeLength": 61, "sourceBeforeFix": "ResponseBody.create(MediaType.get(\"text/plain\"),new byte[0])", "sourceAfterFix": "ResponseBody.create(new byte[0],MediaType.get(\"text/plain\"))"}, {"bugType": "SWAP_ARGUMENTS", "fixCommitSHA1": "c2023397cf81452d755a5401fe95b1d47dbde48a", "fixCommitParentSHA1": "5d9939034fe7bce54ba6d40f5e8e6d5d98b0fe39", "bugFilePath": "scribejava-httpclient-okhttp/src/test/java/com/github/scribejava/httpclient/okhttp/OAuthAsyncCompletionHandlerTest.java", "fixPatch": "diff --git a/scribejava-httpclient-okhttp/src/test/java/com/github/scribejava/httpclient/okhttp/OAuthAsyncCompletionHandlerTest.java b/scribejava-httpclient-okhttp/src/test/java/com/github/scribejava/httpclient/okhttp/OAuthAsyncCompletionHandlerTest.java\nindex 645c455..93d3c01 100644\n--- a/scribejava-httpclient-okhttp/src/test/java/com/github/scribejava/httpclient/okhttp/OAuthAsyncCompletionHandlerTest.java\n+++ b/scribejava-httpclient-okhttp/src/test/java/com/github/scribejava/httpclient/okhttp/OAuthAsyncCompletionHandlerTest.java\n@@ -78,7 +78,7 @@\n                 .protocol(Protocol.HTTP_1_1)\n                 .code(200)\n                 .message(\"ok\")\n-                .body(ResponseBody.create(MediaType.get(\"text/plain\"), new byte[0]))\n+                .body(ResponseBody.create(new byte[0], MediaType.get(\"text/plain\")))\n                 .build();\n         handler.onResponse(call, response);\n         assertNotNull(callback.getResponse());\n@@ -98,7 +98,7 @@\n                 .protocol(Protocol.HTTP_1_1)\n                 .code(200)\n                 .message(\"ok\")\n-                .body(ResponseBody.create(MediaType.get(\"text/plain\"), new byte[0]))\n+                .body(ResponseBody.create(new byte[0], MediaType.get(\"text/plain\")))\n                 .build();\n         handler.onResponse(call, response);\n         assertNull(callback.getResponse());\n@@ -124,7 +124,7 @@\n                 .protocol(Protocol.HTTP_1_1)\n                 .code(200)\n                 .message(\"ok\")\n-                .body(ResponseBody.create(MediaType.get(\"text/plain\"), new byte[0]))\n+                .body(ResponseBody.create(new byte[0], MediaType.get(\"text/plain\")))\n                 .build();\n         handler.onResponse(call, response);\n         assertNull(callback.getResponse());\n", "projectName": "scribejava.scribejava", "bugLineNum": 127, "bugNodeStartChar": 4441, "bugNodeLength": 61, "fixLineNum": 127, "fixNodeStartChar": 4441, "fixNodeLength": 61, "sourceBeforeFix": "ResponseBody.create(MediaType.get(\"text/plain\"),new byte[0])", "sourceAfterFix": "ResponseBody.create(new byte[0],MediaType.get(\"text/plain\"))"}, {"bugType": "CHANGE_IDENTIFIER", "fixCommitSHA1": "cee1ed39f39cb5fd403db3986d2412d6cab7da0c", "fixCommitParentSHA1": "6e6c5502827bb2910002ff3f08fcbd4b60f27047", "bugFilePath": "scribejava-apis/src/test/java/com/github/scribejava/apis/examples/Box20Example.java", "fixPatch": "diff --git a/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/Box20Example.java b/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/Box20Example.java\nindex 9fd966a..cc5adff 100644\n--- a/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/Box20Example.java\n+++ b/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/Box20Example.java\n@@ -24,7 +24,7 @@\n     public static void main(String... args) throws IOException {\n         //Replace these with your client id and secret\n         final String clientId = \"your client id\";\n-        final string clientSecret = \"your client secret\";\n+        final String clientSecret = \"your client secret\";\n         final String secretState = \"secret\" + new Random().nextInt(999_999);\n         final OAuth20Service service = new ServiceBuilder()\n                 .apiKey(clientId)\n", "projectName": "scribejava.scribejava", "bugLineNum": 27, "bugNodeStartChar": 950, "bugNodeLength": 49, "fixLineNum": 27, "fixNodeStartChar": 950, "fixNodeLength": 49, "sourceBeforeFix": "final string clientSecret=\"your client secret\"; ", "sourceAfterFix": "final String clientSecret=\"your client secret\"; "}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "6df23c1262ef16b539af7b0ac18d1da7bafbc694", "fixCommitParentSHA1": "8049d61fd5716fce82f5f41ac1bd0a94e1425f8b", "bugFilePath": "scribejava-core/src/main/java/com/github/scribejava/core/extractors/AccessTokenExtractor.java", "fixPatch": "diff --git a/scribejava-core/src/main/java/com/github/scribejava/core/extractors/AccessTokenExtractor.java b/scribejava-core/src/main/java/com/github/scribejava/core/extractors/AccessTokenExtractor.java\nindex dcf7b16..ec14ca2 100644\n--- a/scribejava-core/src/main/java/com/github/scribejava/core/extractors/AccessTokenExtractor.java\n+++ b/scribejava-core/src/main/java/com/github/scribejava/core/extractors/AccessTokenExtractor.java\n@@ -15,5 +15,5 @@\n      * @param response the contents of the response\n      * @return OAuth access token\n      */\n-    public Token extract(String response);\n+    Token extract(String response);\n }\n", "projectName": "scribejava.scribejava", "bugLineNum": 12, "bugNodeStartChar": 248, "bugNodeLength": 218, "fixLineNum": 12, "fixNodeStartChar": 248, "fixNodeLength": 211, "sourceBeforeFix": "1", "sourceAfterFix": "0"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "6df23c1262ef16b539af7b0ac18d1da7bafbc694", "fixCommitParentSHA1": "8049d61fd5716fce82f5f41ac1bd0a94e1425f8b", "bugFilePath": "scribejava-core/src/main/java/com/github/scribejava/core/extractors/RequestTokenExtractor.java", "fixPatch": "diff --git a/scribejava-core/src/main/java/com/github/scribejava/core/extractors/RequestTokenExtractor.java b/scribejava-core/src/main/java/com/github/scribejava/core/extractors/RequestTokenExtractor.java\nindex bc05471..bc518c6 100644\n--- a/scribejava-core/src/main/java/com/github/scribejava/core/extractors/RequestTokenExtractor.java\n+++ b/scribejava-core/src/main/java/com/github/scribejava/core/extractors/RequestTokenExtractor.java\n@@ -15,5 +15,5 @@\n      * @param response the contents of the response\n      * @return OAuth access token\n      */\n-    public Token extract(String response);\n+    Token extract(String response);\n }\n", "projectName": "scribejava.scribejava", "bugLineNum": 12, "bugNodeStartChar": 249, "bugNodeLength": 219, "fixLineNum": 12, "fixNodeStartChar": 249, "fixNodeLength": 212, "sourceBeforeFix": "1", "sourceAfterFix": "0"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "6df23c1262ef16b539af7b0ac18d1da7bafbc694", "fixCommitParentSHA1": "8049d61fd5716fce82f5f41ac1bd0a94e1425f8b", "bugFilePath": "scribejava-core/src/main/java/com/github/scribejava/core/services/TimestampService.java", "fixPatch": "diff --git a/scribejava-core/src/main/java/com/github/scribejava/core/services/TimestampService.java b/scribejava-core/src/main/java/com/github/scribejava/core/services/TimestampService.java\nindex fca170c..42e97fc 100644\n--- a/scribejava-core/src/main/java/com/github/scribejava/core/services/TimestampService.java\n+++ b/scribejava-core/src/main/java/com/github/scribejava/core/services/TimestampService.java\n@@ -14,12 +14,12 @@\n      *\n      * @return timestamp\n      */\n-    public String getTimestampInSeconds();\n+    String getTimestampInSeconds();\n \n     /**\n      * Returns a nonce (unique value for each request)\n      *\n      * @return nonce\n      */\n-    public String getNonce();\n+    String getNonce();\n }\n", "projectName": "scribejava.scribejava", "bugLineNum": 12, "bugNodeStartChar": 210, "bugNodeLength": 137, "fixLineNum": 12, "fixNodeStartChar": 210, "fixNodeLength": 130, "sourceBeforeFix": "1", "sourceAfterFix": "0"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "6df23c1262ef16b539af7b0ac18d1da7bafbc694", "fixCommitParentSHA1": "8049d61fd5716fce82f5f41ac1bd0a94e1425f8b", "bugFilePath": "scribejava-core/src/main/java/com/github/scribejava/core/services/TimestampService.java", "fixPatch": "diff --git a/scribejava-core/src/main/java/com/github/scribejava/core/services/TimestampService.java b/scribejava-core/src/main/java/com/github/scribejava/core/services/TimestampService.java\nindex fca170c..42e97fc 100644\n--- a/scribejava-core/src/main/java/com/github/scribejava/core/services/TimestampService.java\n+++ b/scribejava-core/src/main/java/com/github/scribejava/core/services/TimestampService.java\n@@ -14,12 +14,12 @@\n      *\n      * @return timestamp\n      */\n-    public String getTimestampInSeconds();\n+    String getTimestampInSeconds();\n \n     /**\n      * Returns a nonce (unique value for each request)\n      *\n      * @return nonce\n      */\n-    public String getNonce();\n+    String getNonce();\n }\n", "projectName": "scribejava.scribejava", "bugLineNum": 19, "bugNodeStartChar": 353, "bugNodeLength": 124, "fixLineNum": 19, "fixNodeStartChar": 353, "fixNodeLength": 117, "sourceBeforeFix": "1", "sourceAfterFix": "0"}, {"bugType": "CHANGE_MODIFIER", "fixCommitSHA1": "c652becda0968455eb91a6eed511c161ae77388b", "fixCommitParentSHA1": "f2da2b1d16db198dde187ed6f77997d7cdcbdcdb", "bugFilePath": "scribejava-core/src/test/java/com/github/scribejava/core/services/RSASha1SignatureServiceTest.java", "fixPatch": "diff --git a/scribejava-core/src/test/java/com/github/scribejava/core/services/RSASha1SignatureServiceTest.java b/scribejava-core/src/test/java/com/github/scribejava/core/services/RSASha1SignatureServiceTest.java\nindex f5e4d65..8adfdb8 100644\n--- a/scribejava-core/src/test/java/com/github/scribejava/core/services/RSASha1SignatureServiceTest.java\n+++ b/scribejava-core/src/test/java/com/github/scribejava/core/services/RSASha1SignatureServiceTest.java\n@@ -9,7 +9,7 @@\n \n public class RSASha1SignatureServiceTest {\n \n-    RSASha1SignatureService service = new RSASha1SignatureService(getPrivateKey());\n+    private RSASha1SignatureService service = new RSASha1SignatureService(getPrivateKey());\n \n     @Test\n     public void shouldReturnSignatureMethodString() {\n", "projectName": "scribejava.scribejava", "bugLineNum": 12, "bugNodeStartChar": 317, "bugNodeLength": 79, "fixLineNum": 12, "fixNodeStartChar": 317, "fixNodeLength": 87, "sourceBeforeFix": "0", "sourceAfterFix": "2"}, {"bugType": "OVERLOAD_METHOD_MORE_ARGS", "fixCommitSHA1": "0abe7f80d4de8dba25b23c848c8ed1a5683f3193", "fixCommitParentSHA1": "592b1b5fdd5fafe79f4c086468ba563a86c0facb", "bugFilePath": "src/main/java/org/scribe/builder/api/FacebookApi.java", "fixPatch": "diff --git a/src/main/java/org/scribe/builder/api/FacebookApi.java b/src/main/java/org/scribe/builder/api/FacebookApi.java\nindex 60be476..d85ff3b 100644\n--- a/src/main/java/org/scribe/builder/api/FacebookApi.java\n+++ b/src/main/java/org/scribe/builder/api/FacebookApi.java\n@@ -24,7 +24,7 @@\n     // Append scope if present\n     if(config.hasScope())\n     {\n-     return String.format(SCOPED_AUTHORIZE_URL, formURLEncode(config.getCallback()), formURLEncode(config.getScope())); \n+     return String.format(SCOPED_AUTHORIZE_URL, config.getApiKey(), formURLEncode(config.getCallback()), formURLEncode(config.getScope())); \n     }\n     else\n     {\n", "projectName": "scribejava.scribejava", "bugLineNum": 27, "bugNodeStartChar": 775, "bugNodeLength": 106, "fixLineNum": 27, "fixNodeStartChar": 775, "fixNodeLength": 126, "sourceBeforeFix": "String.format(SCOPED_AUTHORIZE_URL,formURLEncode(config.getCallback()),formURLEncode(config.getScope()))", "sourceAfterFix": "String.format(SCOPED_AUTHORIZE_URL,config.getApiKey(),formURLEncode(config.getCallback()),formURLEncode(config.getScope()))"}, {"bugType": "CHANGE_UNARY_OPERATOR", "fixCommitSHA1": "874e959e0940032af2b854bc32e6fcf7e86f8bd5", "fixCommitParentSHA1": "545867ca1ded62f15be8ef88067988494a60b967", "bugFilePath": "src/main/java/org/scribe/model/OAuthRequest.java", "fixPatch": "diff --git a/src/main/java/org/scribe/model/OAuthRequest.java b/src/main/java/org/scribe/model/OAuthRequest.java\nindex a712ae9..ec7f023 100644\n--- a/src/main/java/org/scribe/model/OAuthRequest.java\n+++ b/src/main/java/org/scribe/model/OAuthRequest.java\n@@ -41,7 +41,7 @@\n \n   private String checkKey(String key)\n   {\n-    if (!key.startsWith(OAUTH_PREFIX) || key.equals(OAuthConstants.SCOPE))\n+    if (!key.startsWith(OAUTH_PREFIX) || !key.equals(OAuthConstants.SCOPE))\n     {\n       throw new IllegalArgumentException(String.format(\"OAuth parameters must either be %s or start with '%s'\", OAuthConstants.SCOPE, OAUTH_PREFIX));\n     } else\n", "projectName": "scribejava.scribejava", "bugLineNum": 44, "bugNodeStartChar": 998, "bugNodeLength": 32, "fixLineNum": 44, "fixNodeStartChar": 998, "fixNodeLength": 33, "sourceBeforeFix": "key.equals(OAuthConstants.SCOPE)", "sourceAfterFix": "!key.equals(OAuthConstants.SCOPE)"}]