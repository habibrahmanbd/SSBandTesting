[
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "eec1460009e1fd3016f6332303da7dbf70bd35e4",
    "fixCommitParentSHA1": "e7eb6a13bc00130ab87ee8d8809273256287d178",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/system/processing/DBProcessingStatusService.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/system/processing/DBProcessingStatusService.java b/graylog2-server/src/main/java/org/graylog2/system/processing/DBProcessingStatusService.java\nindex cf41374..3e6d3bf 100644\n--- a/graylog2-server/src/main/java/org/graylog2/system/processing/DBProcessingStatusService.java\n+++ b/graylog2-server/src/main/java/org/graylog2/system/processing/DBProcessingStatusService.java\n@@ -70,9 +70,12 @@\n                 mapper.get());\n \n         db.createIndex(new BasicDBObject(ProcessingStatusDto.FIELD_NODE_ID, 1), new BasicDBObject(\"unique\", true));\n+        // Use a custom index name to avoid the automatically generated index name which will be pretty long and\n+        // might cause errors due to the 127 character index name limit. (e.g. when using a long database name)\n+        // See: https://github.com/Graylog2/graylog2-server/issues/6322\n         db.createIndex(new BasicDBObject(FIELD_UPDATED_AT, 1)\n                 .append(FIELD_UNCOMMITTED_ENTRIES, 1)\n-                .append(FIELD_WRITTEN_MESSAGES_1M, 1));\n+                .append(FIELD_WRITTEN_MESSAGES_1M, 1), new BasicDBObject(\"name\", \"compound_0\"));\n     }\n \n     /**\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 73,
    "bugNodeStartChar": 3351,
    "bugNodeLength": 162,
    "fixLineNum": 73,
    "fixNodeStartChar": 3351,
    "fixNodeLength": 203,
    "sourceBeforeFix": "db.createIndex(new BasicDBObject(FIELD_UPDATED_AT,1).append(FIELD_UNCOMMITTED_ENTRIES,1).append(FIELD_WRITTEN_MESSAGES_1M,1))",
    "sourceAfterFix": "db.createIndex(new BasicDBObject(FIELD_UPDATED_AT,1).append(FIELD_UNCOMMITTED_ENTRIES,1).append(FIELD_WRITTEN_MESSAGES_1M,1),new BasicDBObject(\"name\",\"compound_0\"))"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "4bf80610fd2a67d952312e808edebdb74ebc26bb",
    "fixCommitParentSHA1": "ad1161d2401102f04ba1381f5ce4fb0aab209d0d",
    "bugFilePath": "enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java",
    "fixPatch": "diff --git a/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java b/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java\nindex 233d696..c468cdc 100644\n--- a/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java\n+++ b/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java\n@@ -167,7 +167,7 @@\n         final PaginatedList<TestDTO> page1 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 1, 2);\n \n         assertThat(page1.pagination().getCount()).isEqualTo(2);\n-        assertThat(page1.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page1.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page1.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello2\", \"hello3\");\n@@ -175,7 +175,7 @@\n         final PaginatedList<TestDTO> page2 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 2, 2);\n \n         assertThat(page2.pagination().getCount()).isEqualTo(2);\n-        assertThat(page2.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page2.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page2.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello4\", \"hello5\");\n@@ -183,7 +183,7 @@\n         final PaginatedList<TestDTO> page3 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 3, 2);\n \n         assertThat(page3.pagination().getCount()).isEqualTo(1);\n-        assertThat(page3.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page3.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page3.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello6\");\n@@ -191,7 +191,7 @@\n         final PaginatedList<TestDTO> page4 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 2, 4);\n \n         assertThat(page4.pagination().getCount()).isEqualTo(1);\n-        assertThat(page4.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page4.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page4.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello6\");\n@@ -199,7 +199,7 @@\n         final PaginatedList<TestDTO> page1reverse = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.desc(\"title\"), 1, 2);\n \n         assertThat(page1reverse.pagination().getCount()).isEqualTo(2);\n-        assertThat(page1reverse.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page1reverse.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page1reverse.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello6\", \"hello5\");\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 170,
    "bugNodeStartChar": 6094,
    "bugNodeLength": 60,
    "fixLineNum": 170,
    "fixNodeStartChar": 6094,
    "fixNodeLength": 60,
    "sourceBeforeFix": "assertThat(page1.pagination().getGlobalTotal()).isEqualTo(7)",
    "sourceAfterFix": "assertThat(page1.pagination().getGlobalTotal()).isEqualTo(5)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "4bf80610fd2a67d952312e808edebdb74ebc26bb",
    "fixCommitParentSHA1": "ad1161d2401102f04ba1381f5ce4fb0aab209d0d",
    "bugFilePath": "enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java",
    "fixPatch": "diff --git a/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java b/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java\nindex 233d696..c468cdc 100644\n--- a/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java\n+++ b/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java\n@@ -167,7 +167,7 @@\n         final PaginatedList<TestDTO> page1 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 1, 2);\n \n         assertThat(page1.pagination().getCount()).isEqualTo(2);\n-        assertThat(page1.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page1.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page1.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello2\", \"hello3\");\n@@ -175,7 +175,7 @@\n         final PaginatedList<TestDTO> page2 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 2, 2);\n \n         assertThat(page2.pagination().getCount()).isEqualTo(2);\n-        assertThat(page2.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page2.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page2.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello4\", \"hello5\");\n@@ -183,7 +183,7 @@\n         final PaginatedList<TestDTO> page3 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 3, 2);\n \n         assertThat(page3.pagination().getCount()).isEqualTo(1);\n-        assertThat(page3.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page3.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page3.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello6\");\n@@ -191,7 +191,7 @@\n         final PaginatedList<TestDTO> page4 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 2, 4);\n \n         assertThat(page4.pagination().getCount()).isEqualTo(1);\n-        assertThat(page4.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page4.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page4.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello6\");\n@@ -199,7 +199,7 @@\n         final PaginatedList<TestDTO> page1reverse = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.desc(\"title\"), 1, 2);\n \n         assertThat(page1reverse.pagination().getCount()).isEqualTo(2);\n-        assertThat(page1reverse.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page1reverse.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page1reverse.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello6\", \"hello5\");\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 178,
    "bugNodeStartChar": 6502,
    "bugNodeLength": 60,
    "fixLineNum": 178,
    "fixNodeStartChar": 6502,
    "fixNodeLength": 60,
    "sourceBeforeFix": "assertThat(page2.pagination().getGlobalTotal()).isEqualTo(7)",
    "sourceAfterFix": "assertThat(page2.pagination().getGlobalTotal()).isEqualTo(5)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "4bf80610fd2a67d952312e808edebdb74ebc26bb",
    "fixCommitParentSHA1": "ad1161d2401102f04ba1381f5ce4fb0aab209d0d",
    "bugFilePath": "enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java",
    "fixPatch": "diff --git a/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java b/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java\nindex 233d696..c468cdc 100644\n--- a/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java\n+++ b/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java\n@@ -167,7 +167,7 @@\n         final PaginatedList<TestDTO> page1 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 1, 2);\n \n         assertThat(page1.pagination().getCount()).isEqualTo(2);\n-        assertThat(page1.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page1.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page1.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello2\", \"hello3\");\n@@ -175,7 +175,7 @@\n         final PaginatedList<TestDTO> page2 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 2, 2);\n \n         assertThat(page2.pagination().getCount()).isEqualTo(2);\n-        assertThat(page2.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page2.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page2.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello4\", \"hello5\");\n@@ -183,7 +183,7 @@\n         final PaginatedList<TestDTO> page3 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 3, 2);\n \n         assertThat(page3.pagination().getCount()).isEqualTo(1);\n-        assertThat(page3.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page3.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page3.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello6\");\n@@ -191,7 +191,7 @@\n         final PaginatedList<TestDTO> page4 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 2, 4);\n \n         assertThat(page4.pagination().getCount()).isEqualTo(1);\n-        assertThat(page4.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page4.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page4.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello6\");\n@@ -199,7 +199,7 @@\n         final PaginatedList<TestDTO> page1reverse = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.desc(\"title\"), 1, 2);\n \n         assertThat(page1reverse.pagination().getCount()).isEqualTo(2);\n-        assertThat(page1reverse.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page1reverse.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page1reverse.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello6\", \"hello5\");\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 186,
    "bugNodeStartChar": 6910,
    "bugNodeLength": 60,
    "fixLineNum": 186,
    "fixNodeStartChar": 6910,
    "fixNodeLength": 60,
    "sourceBeforeFix": "assertThat(page3.pagination().getGlobalTotal()).isEqualTo(7)",
    "sourceAfterFix": "assertThat(page3.pagination().getGlobalTotal()).isEqualTo(5)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "4bf80610fd2a67d952312e808edebdb74ebc26bb",
    "fixCommitParentSHA1": "ad1161d2401102f04ba1381f5ce4fb0aab209d0d",
    "bugFilePath": "enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java",
    "fixPatch": "diff --git a/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java b/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java\nindex 233d696..c468cdc 100644\n--- a/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java\n+++ b/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java\n@@ -167,7 +167,7 @@\n         final PaginatedList<TestDTO> page1 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 1, 2);\n \n         assertThat(page1.pagination().getCount()).isEqualTo(2);\n-        assertThat(page1.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page1.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page1.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello2\", \"hello3\");\n@@ -175,7 +175,7 @@\n         final PaginatedList<TestDTO> page2 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 2, 2);\n \n         assertThat(page2.pagination().getCount()).isEqualTo(2);\n-        assertThat(page2.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page2.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page2.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello4\", \"hello5\");\n@@ -183,7 +183,7 @@\n         final PaginatedList<TestDTO> page3 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 3, 2);\n \n         assertThat(page3.pagination().getCount()).isEqualTo(1);\n-        assertThat(page3.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page3.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page3.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello6\");\n@@ -191,7 +191,7 @@\n         final PaginatedList<TestDTO> page4 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 2, 4);\n \n         assertThat(page4.pagination().getCount()).isEqualTo(1);\n-        assertThat(page4.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page4.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page4.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello6\");\n@@ -199,7 +199,7 @@\n         final PaginatedList<TestDTO> page1reverse = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.desc(\"title\"), 1, 2);\n \n         assertThat(page1reverse.pagination().getCount()).isEqualTo(2);\n-        assertThat(page1reverse.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page1reverse.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page1reverse.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello6\", \"hello5\");\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 194,
    "bugNodeStartChar": 7308,
    "bugNodeLength": 60,
    "fixLineNum": 194,
    "fixNodeStartChar": 7308,
    "fixNodeLength": 60,
    "sourceBeforeFix": "assertThat(page4.pagination().getGlobalTotal()).isEqualTo(7)",
    "sourceAfterFix": "assertThat(page4.pagination().getGlobalTotal()).isEqualTo(5)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "4bf80610fd2a67d952312e808edebdb74ebc26bb",
    "fixCommitParentSHA1": "ad1161d2401102f04ba1381f5ce4fb0aab209d0d",
    "bugFilePath": "enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java",
    "fixPatch": "diff --git a/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java b/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java\nindex 233d696..c468cdc 100644\n--- a/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java\n+++ b/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java\n@@ -167,7 +167,7 @@\n         final PaginatedList<TestDTO> page1 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 1, 2);\n \n         assertThat(page1.pagination().getCount()).isEqualTo(2);\n-        assertThat(page1.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page1.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page1.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello2\", \"hello3\");\n@@ -175,7 +175,7 @@\n         final PaginatedList<TestDTO> page2 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 2, 2);\n \n         assertThat(page2.pagination().getCount()).isEqualTo(2);\n-        assertThat(page2.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page2.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page2.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello4\", \"hello5\");\n@@ -183,7 +183,7 @@\n         final PaginatedList<TestDTO> page3 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 3, 2);\n \n         assertThat(page3.pagination().getCount()).isEqualTo(1);\n-        assertThat(page3.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page3.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page3.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello6\");\n@@ -191,7 +191,7 @@\n         final PaginatedList<TestDTO> page4 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 2, 4);\n \n         assertThat(page4.pagination().getCount()).isEqualTo(1);\n-        assertThat(page4.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page4.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page4.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello6\");\n@@ -199,7 +199,7 @@\n         final PaginatedList<TestDTO> page1reverse = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.desc(\"title\"), 1, 2);\n \n         assertThat(page1reverse.pagination().getCount()).isEqualTo(2);\n-        assertThat(page1reverse.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page1reverse.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page1reverse.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello6\", \"hello5\");\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 202,
    "bugNodeStartChar": 7721,
    "bugNodeLength": 67,
    "fixLineNum": 202,
    "fixNodeStartChar": 7721,
    "fixNodeLength": 67,
    "sourceBeforeFix": "assertThat(page1reverse.pagination().getGlobalTotal()).isEqualTo(7)",
    "sourceAfterFix": "assertThat(page1reverse.pagination().getGlobalTotal()).isEqualTo(5)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "bae6d2b5316f553f39e1f3497b594b121d0bcac0",
    "fixCommitParentSHA1": "ce180c69ea8968e2fe3c6d472bacbd6d7b783c6b",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog/plugins/sidecar/rest/responses/RegistrationResponse.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog/plugins/sidecar/rest/responses/RegistrationResponse.java b/graylog2-server/src/main/java/org/graylog/plugins/sidecar/rest/responses/RegistrationResponse.java\nindex ac919d6..604b2a0 100644\n--- a/graylog2-server/src/main/java/org/graylog/plugins/sidecar/rest/responses/RegistrationResponse.java\n+++ b/graylog2-server/src/main/java/org/graylog/plugins/sidecar/rest/responses/RegistrationResponse.java\n@@ -31,28 +31,28 @@\n @AutoValue\n @JsonAutoDetect\n public abstract class RegistrationResponse {\n-    @JsonProperty\n-    public abstract SidecarRegistrationConfiguration collectorRegistrationConfiguration();\n+    @JsonProperty(\"configuration\")\n+    public abstract SidecarRegistrationConfiguration configuration();\n \n-    @JsonProperty\n+    @JsonProperty(\"configuration_override\")\n     public abstract boolean configurationOverride();\n \n-    @JsonProperty\n+    @JsonProperty(\"actions\")\n     @Nullable\n     public abstract List<CollectorAction> actions();\n \n-    @JsonProperty\n+    @JsonProperty(\"assignments\")\n     @Nullable\n     public abstract List<ConfigurationAssignment> assignments();\n \n     @JsonCreator\n     public static RegistrationResponse create(\n-            @JsonProperty(\"configuration\") SidecarRegistrationConfiguration sidecarRegistrationConfiguration,\n+            @JsonProperty(\"configuration\") SidecarRegistrationConfiguration configuration,\n             @JsonProperty(\"configuration_override\") boolean configurationOverride,\n             @JsonProperty(\"actions\") @Nullable List<CollectorAction> actions,\n             @JsonProperty(\"assignments\") @Nullable List<ConfigurationAssignment> assignments) {\n         return new AutoValue_RegistrationResponse(\n-                sidecarRegistrationConfiguration,\n+                configuration,\n                 configurationOverride,\n                 actions,\n                 assignments);\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 54,
    "bugNodeStartChar": 2094,
    "bugNodeLength": 178,
    "fixLineNum": 54,
    "fixNodeStartChar": 2094,
    "fixNodeLength": 159,
    "sourceBeforeFix": "new AutoValue_RegistrationResponse(sidecarRegistrationConfiguration,configurationOverride,actions,assignments)",
    "sourceAfterFix": "new AutoValue_RegistrationResponse(configuration,configurationOverride,actions,assignments)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "b41f59551faa21da8ba0af219341eec4bc976d8b",
    "fixCommitParentSHA1": "52a086cdaa8241636e66597a33643256be2e2597",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/lookup/adapters/DSVHTTPDataAdapter.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/lookup/adapters/DSVHTTPDataAdapter.java b/graylog2-server/src/main/java/org/graylog2/lookup/adapters/DSVHTTPDataAdapter.java\nindex 47337c4..eb6ef3e 100644\n--- a/graylog2-server/src/main/java/org/graylog2/lookup/adapters/DSVHTTPDataAdapter.java\n+++ b/graylog2-server/src/main/java/org/graylog2/lookup/adapters/DSVHTTPDataAdapter.java\n@@ -170,8 +170,8 @@\n                     .lineSeparator(\"\\n\")\n                     .quotechar(\"\\\"\")\n                     .ignorechar(\"#\")\n-                    .keyColumn(1)\n-                    .valueColumn(2)\n+                    .keyColumn(0)\n+                    .valueColumn(1)\n                     .refreshInterval(60)\n                     .caseInsensitiveLookup(false)\n                     .checkPresenceOnly(false)\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 166,
    "bugNodeStartChar": 6429,
    "bugNodeLength": 310,
    "fixLineNum": 166,
    "fixNodeStartChar": 6429,
    "fixNodeLength": 310,
    "sourceBeforeFix": "DSVHTTPDataAdapter.Config.builder().type(NAME).url(\"https://example.org/table.csv\").separator(\",\").lineSeparator(\"\\n\").quotechar(\"\\\"\").ignorechar(\"#\").keyColumn(1)",
    "sourceAfterFix": "DSVHTTPDataAdapter.Config.builder().type(NAME).url(\"https://example.org/table.csv\").separator(\",\").lineSeparator(\"\\n\").quotechar(\"\\\"\").ignorechar(\"#\").keyColumn(0)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "87a90ece4b3028d43e53a09af504efba07945eb9",
    "fixCommitParentSHA1": "77d03b0c8d038ccc98e95d1a4afe585b89fc6570",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/cluster/NodeImpl.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/cluster/NodeImpl.java b/graylog2-server/src/main/java/org/graylog2/cluster/NodeImpl.java\nindex 903f552..190cf9b 100644\n--- a/graylog2-server/src/main/java/org/graylog2/cluster/NodeImpl.java\n+++ b/graylog2-server/src/main/java/org/graylog2/cluster/NodeImpl.java\n@@ -58,7 +58,7 @@\n \n     @Override\n     public DateTime getLastSeen() {\n-        return new DateTime(((Integer) fields.get(\"last_seen\")) * 1000L, DateTimeZone.UTC);\n+        return new DateTime(((Integer) fields.getOrDefault(\"last_seen\", 0)) * 1000L, DateTimeZone.UTC);\n     }\n \n     @Override\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 61,
    "bugNodeStartChar": 1850,
    "bugNodeLength": 23,
    "fixLineNum": 61,
    "fixNodeStartChar": 1850,
    "fixNodeLength": 35,
    "sourceBeforeFix": "fields.get(\"last_seen\")",
    "sourceAfterFix": "fields.getOrDefault(\"last_seen\",0)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "b29b1031e0b70c79278d36990443b57a5f9d64ab",
    "fixCommitParentSHA1": "12db518ad225535ddc33407f89015baa54dc1b89",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/indexer/indices/Indices.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/indexer/indices/Indices.java b/graylog2-server/src/main/java/org/graylog2/indexer/indices/Indices.java\nindex ca08bae..241a2cb 100644\n--- a/graylog2-server/src/main/java/org/graylog2/indexer/indices/Indices.java\n+++ b/graylog2-server/src/main/java/org/graylog2/indexer/indices/Indices.java\n@@ -571,7 +571,7 @@\n                 .path(\"primaries\")\n                 .path(\"store\")\n                 .path(\"size_in_bytes\");\n-        return Optional.of(sizeInBytes).filter(JsonNode::isLong).map(JsonNode::asLong);\n+        return Optional.of(sizeInBytes).filter(JsonNode::isNumber).map(JsonNode::asLong);\n     }\n \n     public Set<IndexStatistics> getIndicesStats(final IndexSet indexSet) {\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 574,
    "bugNodeStartChar": 25824,
    "bugNodeLength": 16,
    "fixLineNum": 574,
    "fixNodeStartChar": 25824,
    "fixNodeLength": 18,
    "sourceBeforeFix": "JsonNode::isLong",
    "sourceAfterFix": "JsonNode::isNumber"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "35cea152ff0eebc0dbcefb4873155962c8fb960a",
    "fixCommitParentSHA1": "9680bec7a434892e8d646c247a26698b294b2974",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/plugin/inputs/transports/NettyTransport.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/plugin/inputs/transports/NettyTransport.java b/graylog2-server/src/main/java/org/graylog2/plugin/inputs/transports/NettyTransport.java\nindex ce40b75..c031ee9 100644\n--- a/graylog2-server/src/main/java/org/graylog2/plugin/inputs/transports/NettyTransport.java\n+++ b/graylog2-server/src/main/java/org/graylog2/plugin/inputs/transports/NettyTransport.java\n@@ -305,7 +305,7 @@\n                 final ChannelBuffer completeMessage = result.getMessage();\n                 if (completeMessage != null) {\n                     log.debug(\"Message aggregation completion, forwarding {}\", completeMessage);\n-                    fireMessageReceived(ctx, completeMessage);\n+                    fireMessageReceived(ctx, completeMessage, e.getRemoteAddress());\n                 } else if (result.isValid()) {\n                     log.debug(\"More chunks necessary to complete this message\");\n                 } else {\n@@ -314,7 +314,7 @@\n                 }\n             } else {\n                 log.debug(\"Could not handle netty message {}, sending further upstream.\", e);\n-                fireMessageReceived(ctx, message);\n+                fireMessageReceived(ctx, message, e.getRemoteAddress());\n             }\n         }\n     }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 308,
    "bugNodeStartChar": 13419,
    "bugNodeLength": 41,
    "fixLineNum": 308,
    "fixNodeStartChar": 13419,
    "fixNodeLength": 63,
    "sourceBeforeFix": "fireMessageReceived(ctx,completeMessage)",
    "sourceAfterFix": "fireMessageReceived(ctx,completeMessage,e.getRemoteAddress())"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "35cea152ff0eebc0dbcefb4873155962c8fb960a",
    "fixCommitParentSHA1": "9680bec7a434892e8d646c247a26698b294b2974",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/plugin/inputs/transports/NettyTransport.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/plugin/inputs/transports/NettyTransport.java b/graylog2-server/src/main/java/org/graylog2/plugin/inputs/transports/NettyTransport.java\nindex ce40b75..c031ee9 100644\n--- a/graylog2-server/src/main/java/org/graylog2/plugin/inputs/transports/NettyTransport.java\n+++ b/graylog2-server/src/main/java/org/graylog2/plugin/inputs/transports/NettyTransport.java\n@@ -305,7 +305,7 @@\n                 final ChannelBuffer completeMessage = result.getMessage();\n                 if (completeMessage != null) {\n                     log.debug(\"Message aggregation completion, forwarding {}\", completeMessage);\n-                    fireMessageReceived(ctx, completeMessage);\n+                    fireMessageReceived(ctx, completeMessage, e.getRemoteAddress());\n                 } else if (result.isValid()) {\n                     log.debug(\"More chunks necessary to complete this message\");\n                 } else {\n@@ -314,7 +314,7 @@\n                 }\n             } else {\n                 log.debug(\"Could not handle netty message {}, sending further upstream.\", e);\n-                fireMessageReceived(ctx, message);\n+                fireMessageReceived(ctx, message, e.getRemoteAddress());\n             }\n         }\n     }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 317,
    "bugNodeStartChar": 13888,
    "bugNodeLength": 33,
    "fixLineNum": 317,
    "fixNodeStartChar": 13888,
    "fixNodeLength": 55,
    "sourceBeforeFix": "fireMessageReceived(ctx,message)",
    "sourceAfterFix": "fireMessageReceived(ctx,message,e.getRemoteAddress())"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "ffdbddae1854ebb628466d7c5ec5248f1a9b5459",
    "fixCommitParentSHA1": "a35011a8ea55c8467cf0caace05686f29784216e",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/users/UserImpl.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/users/UserImpl.java b/graylog2-server/src/main/java/org/graylog2/users/UserImpl.java\nindex dba58f8..9f6e4ed 100644\n--- a/graylog2-server/src/main/java/org/graylog2/users/UserImpl.java\n+++ b/graylog2-server/src/main/java/org/graylog2/users/UserImpl.java\n@@ -180,7 +180,7 @@\n         final List<String> perms = Lists.newArrayList(permissions);\n         // Do not store the dynamic user self edit permissions\n         perms.removeAll(this.permissions.userSelfEditPermissions(getName()));\n-        fields.put(PERMISSIONS, permissions);\n+        fields.put(PERMISSIONS, perms);\n     }\n \n     @Override\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 183,
    "bugNodeStartChar": 6866,
    "bugNodeLength": 36,
    "fixLineNum": 183,
    "fixNodeStartChar": 6866,
    "fixNodeLength": 30,
    "sourceBeforeFix": "fields.put(PERMISSIONS,permissions)",
    "sourceAfterFix": "fields.put(PERMISSIONS,perms)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "2fd21d4ed2cf9215c30b5c3a6c3bf4c34087cde9",
    "fixCommitParentSHA1": "9e401e648f11f30e4e584009b70a536affcd643f",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/system/stats/mongo/MongoProbe.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/system/stats/mongo/MongoProbe.java b/graylog2-server/src/main/java/org/graylog2/system/stats/mongo/MongoProbe.java\nindex be769b5..276b096 100644\n--- a/graylog2-server/src/main/java/org/graylog2/system/stats/mongo/MongoProbe.java\n+++ b/graylog2-server/src/main/java/org/graylog2/system/stats/mongo/MongoProbe.java\n@@ -210,7 +210,7 @@\n                     memoryMap.getInt(\"virtual\"),\n                     memoryMap.getBoolean(\"supported\"),\n                     memoryMap.getInt(\"mapped\"),\n-                    memoryMap.getInt(\"mappedWithJournal\")\n+                    memoryMap.getInt(\"mappedWithJournal\", -1)\n             );\n \n             final BasicDBObject storageEngineMap = (BasicDBObject) serverStatusResult.get(\"storageEngine\");\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 213,
    "bugNodeStartChar": 9290,
    "bugNodeLength": 37,
    "fixLineNum": 213,
    "fixNodeStartChar": 9290,
    "fixNodeLength": 41,
    "sourceBeforeFix": "memoryMap.getInt(\"mappedWithJournal\")",
    "sourceAfterFix": "memoryMap.getInt(\"mappedWithJournal\",-1)"
  },
  {
    "bugType": "SWAP_BOOLEAN_LITERAL",
    "fixCommitSHA1": "1607670a97fbdef587850a0fb848a9cee96a52fc",
    "fixCommitParentSHA1": "27b260af11b306e5ce3c974f262f68c69c21a13e",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/plugin/BaseConfiguration.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/plugin/BaseConfiguration.java b/graylog2-server/src/main/java/org/graylog2/plugin/BaseConfiguration.java\nindex 1492364..f68676d 100644\n--- a/graylog2-server/src/main/java/org/graylog2/plugin/BaseConfiguration.java\n+++ b/graylog2-server/src/main/java/org/graylog2/plugin/BaseConfiguration.java\n@@ -71,7 +71,7 @@\n     private boolean restEnableCors = true;\n \n     @Parameter(value = \"rest_enable_gzip\")\n-    private boolean restEnableGzip = false;\n+    private boolean restEnableGzip = true;\n \n     @Parameter(value = \"rest_max_initial_line_length\", required = true, validator = PositiveIntegerValidator.class)\n     private int restMaxInitialLineLength = 4096;\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 74,
    "bugNodeStartChar": 3107,
    "bugNodeLength": 22,
    "fixLineNum": 74,
    "fixNodeStartChar": 3107,
    "fixNodeLength": 21,
    "sourceBeforeFix": "restEnableGzip=false",
    "sourceAfterFix": "restEnableGzip=true"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "7efab8ecbdc082c324799aa7e25490a8e0e5520b",
    "fixCommitParentSHA1": "90a110b8d4fb6b75ba64e873e7cdac31edbddacf",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/cluster/ClusterConfigServiceImpl.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/cluster/ClusterConfigServiceImpl.java b/graylog2-server/src/main/java/org/graylog2/cluster/ClusterConfigServiceImpl.java\nindex feb2a7d..7b3bd69 100644\n--- a/graylog2-server/src/main/java/org/graylog2/cluster/ClusterConfigServiceImpl.java\n+++ b/graylog2-server/src/main/java/org/graylog2/cluster/ClusterConfigServiceImpl.java\n@@ -93,7 +93,7 @@\n         try {\n             return objectMapper.convertValue(payload, type);\n         } catch (IllegalArgumentException e) {\n-            LOG.debug(\"Error while deserializing payload\", e);\n+            LOG.error(\"Error while deserializing payload\", e);\n             return null;\n         }\n     }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 96,
    "bugNodeStartChar": 4165,
    "bugNodeLength": 49,
    "fixLineNum": 96,
    "fixNodeStartChar": 4165,
    "fixNodeLength": 49,
    "sourceBeforeFix": "LOG.debug(\"Error while deserializing payload\",e)",
    "sourceAfterFix": "LOG.error(\"Error while deserializing payload\",e)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "7efab8ecbdc082c324799aa7e25490a8e0e5520b",
    "fixCommitParentSHA1": "90a110b8d4fb6b75ba64e873e7cdac31edbddacf",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/cluster/ClusterConfigServiceImpl.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/cluster/ClusterConfigServiceImpl.java b/graylog2-server/src/main/java/org/graylog2/cluster/ClusterConfigServiceImpl.java\nindex feb2a7d..7b3bd69 100644\n--- a/graylog2-server/src/main/java/org/graylog2/cluster/ClusterConfigServiceImpl.java\n+++ b/graylog2-server/src/main/java/org/graylog2/cluster/ClusterConfigServiceImpl.java\n@@ -93,7 +93,7 @@\n         try {\n             return objectMapper.convertValue(payload, type);\n         } catch (IllegalArgumentException e) {\n-            LOG.debug(\"Error while deserializing payload\", e);\n+            LOG.error(\"Error while deserializing payload\", e);\n             return null;\n         }\n     }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 96,
    "bugNodeStartChar": 4165,
    "bugNodeLength": 49,
    "fixLineNum": 96,
    "fixNodeStartChar": 4165,
    "fixNodeLength": 49,
    "sourceBeforeFix": "LOG.debug(\"Error while deserializing payload\",e)",
    "sourceAfterFix": "LOG.error(\"Error while deserializing payload\",e)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "08605e65c92ff529290b534ee2de50117953362d",
    "fixCommitParentSHA1": "55a4ef74a6c43efb990a3573c21dd9ed6b0e163e",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/shared/journal/KafkaJournal.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/shared/journal/KafkaJournal.java b/graylog2-server/src/main/java/org/graylog2/shared/journal/KafkaJournal.java\nindex 88777e5..1713cf5 100644\n--- a/graylog2-server/src/main/java/org/graylog2/shared/journal/KafkaJournal.java\n+++ b/graylog2-server/src/main/java/org/graylog2/shared/journal/KafkaJournal.java\n@@ -432,7 +432,7 @@\n             final long logStartOffset = getLogStartOffset();\n \n             if (readOffset < logStartOffset) {\n-                LOG.error(\n+                LOG.info(\n                         \"Read offset {} before start of log at {}, starting to read from the beginning of the journal.\",\n                         readOffset,\n                         logStartOffset);\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 435,
    "bugNodeStartChar": 20583,
    "bugNodeLength": 207,
    "fixLineNum": 435,
    "fixNodeStartChar": 20583,
    "fixNodeLength": 206,
    "sourceBeforeFix": "LOG.error(\"Read offset {} before start of log at {}, starting to read from the beginning of the journal.\",readOffset,logStartOffset)",
    "sourceAfterFix": "LOG.info(\"Read offset {} before start of log at {}, starting to read from the beginning of the journal.\",readOffset,logStartOffset)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "08605e65c92ff529290b534ee2de50117953362d",
    "fixCommitParentSHA1": "55a4ef74a6c43efb990a3573c21dd9ed6b0e163e",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/shared/journal/KafkaJournal.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/shared/journal/KafkaJournal.java b/graylog2-server/src/main/java/org/graylog2/shared/journal/KafkaJournal.java\nindex 88777e5..1713cf5 100644\n--- a/graylog2-server/src/main/java/org/graylog2/shared/journal/KafkaJournal.java\n+++ b/graylog2-server/src/main/java/org/graylog2/shared/journal/KafkaJournal.java\n@@ -432,7 +432,7 @@\n             final long logStartOffset = getLogStartOffset();\n \n             if (readOffset < logStartOffset) {\n-                LOG.error(\n+                LOG.info(\n                         \"Read offset {} before start of log at {}, starting to read from the beginning of the journal.\",\n                         readOffset,\n                         logStartOffset);\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 435,
    "bugNodeStartChar": 20583,
    "bugNodeLength": 207,
    "fixLineNum": 435,
    "fixNodeStartChar": 20583,
    "fixNodeLength": 206,
    "sourceBeforeFix": "LOG.error(\"Read offset {} before start of log at {}, starting to read from the beginning of the journal.\",readOffset,logStartOffset)",
    "sourceAfterFix": "LOG.info(\"Read offset {} before start of log at {}, starting to read from the beginning of the journal.\",readOffset,logStartOffset)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "f56f7b22d4475a3b14077865f72ef95224916c18",
    "fixCommitParentSHA1": "48cc2bf0e8a70de59c75e598af8487d3f311b597",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/shared/security/RestPermissions.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/shared/security/RestPermissions.java b/graylog2-server/src/main/java/org/graylog2/shared/security/RestPermissions.java\nindex e2636c4..8943904 100644\n--- a/graylog2-server/src/main/java/org/graylog2/shared/security/RestPermissions.java\n+++ b/graylog2-server/src/main/java/org/graylog2/shared/security/RestPermissions.java\n@@ -235,7 +235,8 @@\n             THROUGHPUT_READ,\n             SAVEDSEARCHES_CREATE,\n             SAVEDSEARCHES_EDIT,\n-            SAVEDSEARCHES_READ\n+            SAVEDSEARCHES_READ,\n+            CLUSTER_CONFIG_ENTRY_READ\n     ).build();\n \n     protected static final Set<Permission> READER_BASE_PERMISSIONS = PERMISSIONS.stream()\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 224,
    "bugNodeStartChar": 12202,
    "bugNodeLength": 442,
    "fixLineNum": 224,
    "fixNodeStartChar": 12202,
    "fixNodeLength": 481,
    "sourceBeforeFix": "ImmutableSet.<String>builder().add(BUFFERS_READ,FIELDNAMES_READ,INDEXERCLUSTER_READ,INPUTS_READ,JOURNAL_READ,JVMSTATS_READ,MESSAGECOUNT_READ,MESSAGES_READ,METRICS_READ,SYSTEM_READ,THROUGHPUT_READ,SAVEDSEARCHES_CREATE,SAVEDSEARCHES_EDIT,SAVEDSEARCHES_READ)",
    "sourceAfterFix": "ImmutableSet.<String>builder().add(BUFFERS_READ,FIELDNAMES_READ,INDEXERCLUSTER_READ,INPUTS_READ,JOURNAL_READ,JVMSTATS_READ,MESSAGECOUNT_READ,MESSAGES_READ,METRICS_READ,SYSTEM_READ,THROUGHPUT_READ,SAVEDSEARCHES_CREATE,SAVEDSEARCHES_EDIT,SAVEDSEARCHES_READ,CLUSTER_CONFIG_ENTRY_READ)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "7600f7af2ff10b7726557816e86d5af9190cf606",
    "fixCommitParentSHA1": "819eb50be36d4fad2cd2a63d21decfe4436c682c",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/shared/rest/resources/ProxiedResource.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/shared/rest/resources/ProxiedResource.java b/graylog2-server/src/main/java/org/graylog2/shared/rest/resources/ProxiedResource.java\nindex 9d6b10d..af6eed2 100644\n--- a/graylog2-server/src/main/java/org/graylog2/shared/rest/resources/ProxiedResource.java\n+++ b/graylog2-server/src/main/java/org/graylog2/shared/rest/resources/ProxiedResource.java\n@@ -54,22 +54,22 @@\n         }\n     }\n \n-    protected <T, K> Map<String, Optional<K>> getForAllNodes(Function<T, Call<K>> fn, Function<String, Optional<T>> interfaceProvider) {\n+    protected <RemoteInterfaceType, RemoteCallResponseType> Map<String, Optional<RemoteCallResponseType>> getForAllNodes(Function<RemoteInterfaceType,Call<RemoteCallResponseType>> fn, Function<String, Optional<RemoteInterfaceType>> interfaceProvider) {\n         return getForAllNodes(fn, interfaceProvider, Function.identity());\n     }\n \n-    protected <T, K, L> Map<String, Optional<K>> getForAllNodes(Function<T, Call<L>> fn, Function<String, Optional<T>> interfaceProvider, Function<L, K> transformer) {\n+    protected <RemoteInterfaceType, FinalResponseType, RemoteCallResponseType> Map<String, Optional<FinalResponseType>> getForAllNodes(Function<RemoteInterfaceType, Call<RemoteCallResponseType>> fn, Function<String, Optional<RemoteInterfaceType>> interfaceProvider, Function<RemoteCallResponseType, FinalResponseType> transformer) {\n         return this.nodeService.allActive()\n             .entrySet()\n             .stream()\n             .collect(Collectors.toMap(Map.Entry::getKey, entry -> {\n-                final Optional<T> remoteInterface = interfaceProvider.apply(entry.getKey());\n+                final Optional<RemoteInterfaceType> remoteInterface = interfaceProvider.apply(entry.getKey());\n                 if (!remoteInterface.isPresent()) {\n                     return Optional.empty();\n                 }\n-                final Call<L> call = fn.apply(remoteInterface.get());\n+                final Call<RemoteCallResponseType> call = fn.apply(remoteInterface.get());\n                 try {\n-                    final Response<L> response = call.execute();\n+                    final Response<RemoteCallResponseType> response = call.execute();\n                     if (response.isSuccess()) {\n                         return Optional.of(transformer.apply(response.body()));\n                     } else {\n@@ -83,7 +83,7 @@\n             }));\n     }\n \n-    protected <T> Function<String, Optional<T>> createRemoteInterfaceProvider(Class<T> interfaceClass) {\n+    protected <RemoteInterfaceType> Function<String, Optional<RemoteInterfaceType>> createRemoteInterfaceProvider(Class<RemoteInterfaceType> interfaceClass) {\n         return (nodeId) -> {\n             try {\n                 final Node targetNode = nodeService.byNodeId(nodeId);\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 66,
    "bugNodeStartChar": 2695,
    "bugNodeLength": 11,
    "fixLineNum": 66,
    "fixNodeStartChar": 2695,
    "fixNodeLength": 29,
    "sourceBeforeFix": "Optional<T>",
    "sourceAfterFix": "Optional<RemoteInterfaceType>"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "7600f7af2ff10b7726557816e86d5af9190cf606",
    "fixCommitParentSHA1": "819eb50be36d4fad2cd2a63d21decfe4436c682c",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/shared/rest/resources/ProxiedResource.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/shared/rest/resources/ProxiedResource.java b/graylog2-server/src/main/java/org/graylog2/shared/rest/resources/ProxiedResource.java\nindex 9d6b10d..af6eed2 100644\n--- a/graylog2-server/src/main/java/org/graylog2/shared/rest/resources/ProxiedResource.java\n+++ b/graylog2-server/src/main/java/org/graylog2/shared/rest/resources/ProxiedResource.java\n@@ -54,22 +54,22 @@\n         }\n     }\n \n-    protected <T, K> Map<String, Optional<K>> getForAllNodes(Function<T, Call<K>> fn, Function<String, Optional<T>> interfaceProvider) {\n+    protected <RemoteInterfaceType, RemoteCallResponseType> Map<String, Optional<RemoteCallResponseType>> getForAllNodes(Function<RemoteInterfaceType,Call<RemoteCallResponseType>> fn, Function<String, Optional<RemoteInterfaceType>> interfaceProvider) {\n         return getForAllNodes(fn, interfaceProvider, Function.identity());\n     }\n \n-    protected <T, K, L> Map<String, Optional<K>> getForAllNodes(Function<T, Call<L>> fn, Function<String, Optional<T>> interfaceProvider, Function<L, K> transformer) {\n+    protected <RemoteInterfaceType, FinalResponseType, RemoteCallResponseType> Map<String, Optional<FinalResponseType>> getForAllNodes(Function<RemoteInterfaceType, Call<RemoteCallResponseType>> fn, Function<String, Optional<RemoteInterfaceType>> interfaceProvider, Function<RemoteCallResponseType, FinalResponseType> transformer) {\n         return this.nodeService.allActive()\n             .entrySet()\n             .stream()\n             .collect(Collectors.toMap(Map.Entry::getKey, entry -> {\n-                final Optional<T> remoteInterface = interfaceProvider.apply(entry.getKey());\n+                final Optional<RemoteInterfaceType> remoteInterface = interfaceProvider.apply(entry.getKey());\n                 if (!remoteInterface.isPresent()) {\n                     return Optional.empty();\n                 }\n-                final Call<L> call = fn.apply(remoteInterface.get());\n+                final Call<RemoteCallResponseType> call = fn.apply(remoteInterface.get());\n                 try {\n-                    final Response<L> response = call.execute();\n+                    final Response<RemoteCallResponseType> response = call.execute();\n                     if (response.isSuccess()) {\n                         return Optional.of(transformer.apply(response.body()));\n                     } else {\n@@ -83,7 +83,7 @@\n             }));\n     }\n \n-    protected <T> Function<String, Optional<T>> createRemoteInterfaceProvider(Class<T> interfaceClass) {\n+    protected <RemoteInterfaceType> Function<String, Optional<RemoteInterfaceType>> createRemoteInterfaceProvider(Class<RemoteInterfaceType> interfaceClass) {\n         return (nodeId) -> {\n             try {\n                 final Node targetNode = nodeService.byNodeId(nodeId);\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 70,
    "bugNodeStartChar": 2903,
    "bugNodeLength": 7,
    "fixLineNum": 70,
    "fixNodeStartChar": 2903,
    "fixNodeLength": 28,
    "sourceBeforeFix": "Call<L>",
    "sourceAfterFix": "Call<RemoteCallResponseType>"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "7600f7af2ff10b7726557816e86d5af9190cf606",
    "fixCommitParentSHA1": "819eb50be36d4fad2cd2a63d21decfe4436c682c",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/shared/rest/resources/ProxiedResource.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/shared/rest/resources/ProxiedResource.java b/graylog2-server/src/main/java/org/graylog2/shared/rest/resources/ProxiedResource.java\nindex 9d6b10d..af6eed2 100644\n--- a/graylog2-server/src/main/java/org/graylog2/shared/rest/resources/ProxiedResource.java\n+++ b/graylog2-server/src/main/java/org/graylog2/shared/rest/resources/ProxiedResource.java\n@@ -54,22 +54,22 @@\n         }\n     }\n \n-    protected <T, K> Map<String, Optional<K>> getForAllNodes(Function<T, Call<K>> fn, Function<String, Optional<T>> interfaceProvider) {\n+    protected <RemoteInterfaceType, RemoteCallResponseType> Map<String, Optional<RemoteCallResponseType>> getForAllNodes(Function<RemoteInterfaceType,Call<RemoteCallResponseType>> fn, Function<String, Optional<RemoteInterfaceType>> interfaceProvider) {\n         return getForAllNodes(fn, interfaceProvider, Function.identity());\n     }\n \n-    protected <T, K, L> Map<String, Optional<K>> getForAllNodes(Function<T, Call<L>> fn, Function<String, Optional<T>> interfaceProvider, Function<L, K> transformer) {\n+    protected <RemoteInterfaceType, FinalResponseType, RemoteCallResponseType> Map<String, Optional<FinalResponseType>> getForAllNodes(Function<RemoteInterfaceType, Call<RemoteCallResponseType>> fn, Function<String, Optional<RemoteInterfaceType>> interfaceProvider, Function<RemoteCallResponseType, FinalResponseType> transformer) {\n         return this.nodeService.allActive()\n             .entrySet()\n             .stream()\n             .collect(Collectors.toMap(Map.Entry::getKey, entry -> {\n-                final Optional<T> remoteInterface = interfaceProvider.apply(entry.getKey());\n+                final Optional<RemoteInterfaceType> remoteInterface = interfaceProvider.apply(entry.getKey());\n                 if (!remoteInterface.isPresent()) {\n                     return Optional.empty();\n                 }\n-                final Call<L> call = fn.apply(remoteInterface.get());\n+                final Call<RemoteCallResponseType> call = fn.apply(remoteInterface.get());\n                 try {\n-                    final Response<L> response = call.execute();\n+                    final Response<RemoteCallResponseType> response = call.execute();\n                     if (response.isSuccess()) {\n                         return Optional.of(transformer.apply(response.body()));\n                     } else {\n@@ -83,7 +83,7 @@\n             }));\n     }\n \n-    protected <T> Function<String, Optional<T>> createRemoteInterfaceProvider(Class<T> interfaceClass) {\n+    protected <RemoteInterfaceType> Function<String, Optional<RemoteInterfaceType>> createRemoteInterfaceProvider(Class<RemoteInterfaceType> interfaceClass) {\n         return (nodeId) -> {\n             try {\n                 final Node targetNode = nodeService.byNodeId(nodeId);\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 72,
    "bugNodeStartChar": 2999,
    "bugNodeLength": 11,
    "fixLineNum": 72,
    "fixNodeStartChar": 2999,
    "fixNodeLength": 32,
    "sourceBeforeFix": "Response<L>",
    "sourceAfterFix": "Response<RemoteCallResponseType>"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "7600f7af2ff10b7726557816e86d5af9190cf606",
    "fixCommitParentSHA1": "819eb50be36d4fad2cd2a63d21decfe4436c682c",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/shared/rest/resources/ProxiedResource.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/shared/rest/resources/ProxiedResource.java b/graylog2-server/src/main/java/org/graylog2/shared/rest/resources/ProxiedResource.java\nindex 9d6b10d..af6eed2 100644\n--- a/graylog2-server/src/main/java/org/graylog2/shared/rest/resources/ProxiedResource.java\n+++ b/graylog2-server/src/main/java/org/graylog2/shared/rest/resources/ProxiedResource.java\n@@ -54,22 +54,22 @@\n         }\n     }\n \n-    protected <T, K> Map<String, Optional<K>> getForAllNodes(Function<T, Call<K>> fn, Function<String, Optional<T>> interfaceProvider) {\n+    protected <RemoteInterfaceType, RemoteCallResponseType> Map<String, Optional<RemoteCallResponseType>> getForAllNodes(Function<RemoteInterfaceType,Call<RemoteCallResponseType>> fn, Function<String, Optional<RemoteInterfaceType>> interfaceProvider) {\n         return getForAllNodes(fn, interfaceProvider, Function.identity());\n     }\n \n-    protected <T, K, L> Map<String, Optional<K>> getForAllNodes(Function<T, Call<L>> fn, Function<String, Optional<T>> interfaceProvider, Function<L, K> transformer) {\n+    protected <RemoteInterfaceType, FinalResponseType, RemoteCallResponseType> Map<String, Optional<FinalResponseType>> getForAllNodes(Function<RemoteInterfaceType, Call<RemoteCallResponseType>> fn, Function<String, Optional<RemoteInterfaceType>> interfaceProvider, Function<RemoteCallResponseType, FinalResponseType> transformer) {\n         return this.nodeService.allActive()\n             .entrySet()\n             .stream()\n             .collect(Collectors.toMap(Map.Entry::getKey, entry -> {\n-                final Optional<T> remoteInterface = interfaceProvider.apply(entry.getKey());\n+                final Optional<RemoteInterfaceType> remoteInterface = interfaceProvider.apply(entry.getKey());\n                 if (!remoteInterface.isPresent()) {\n                     return Optional.empty();\n                 }\n-                final Call<L> call = fn.apply(remoteInterface.get());\n+                final Call<RemoteCallResponseType> call = fn.apply(remoteInterface.get());\n                 try {\n-                    final Response<L> response = call.execute();\n+                    final Response<RemoteCallResponseType> response = call.execute();\n                     if (response.isSuccess()) {\n                         return Optional.of(transformer.apply(response.body()));\n                     } else {\n@@ -83,7 +83,7 @@\n             }));\n     }\n \n-    protected <T> Function<String, Optional<T>> createRemoteInterfaceProvider(Class<T> interfaceClass) {\n+    protected <RemoteInterfaceType> Function<String, Optional<RemoteInterfaceType>> createRemoteInterfaceProvider(Class<RemoteInterfaceType> interfaceClass) {\n         return (nodeId) -> {\n             try {\n                 final Node targetNode = nodeService.byNodeId(nodeId);\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 86,
    "bugNodeStartChar": 3709,
    "bugNodeLength": 1,
    "fixLineNum": 86,
    "fixNodeStartChar": 3709,
    "fixNodeLength": 19,
    "sourceBeforeFix": "T",
    "sourceAfterFix": "RemoteInterfaceType"
  },
  {
    "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
    "fixCommitSHA1": "eedb0efcba41f3ac52a6ee72792e37718340db88",
    "fixCommitParentSHA1": "79faa0d7c0317574a0129abf62c81275c4d97cbe",
    "bugFilePath": "graylog2-server/src/test/java/org/graylog2/dashboards/DashboardServiceImplTest.java",
    "fixPatch": "diff --git a/graylog2-server/src/test/java/org/graylog2/dashboards/DashboardServiceImplTest.java b/graylog2-server/src/test/java/org/graylog2/dashboards/DashboardServiceImplTest.java\nindex 3baa30d..d078cf7 100644\n--- a/graylog2-server/src/test/java/org/graylog2/dashboards/DashboardServiceImplTest.java\n+++ b/graylog2-server/src/test/java/org/graylog2/dashboards/DashboardServiceImplTest.java\n@@ -60,7 +60,7 @@\n \n     @Before\n     public void setUpService() throws Exception {\n-        this.dashboardService = new DashboardServiceImpl(mongoRule.getMongoConnection(), metricRegistry, searches, dashboardWidgetCreator);\n+        this.dashboardService = new DashboardServiceImpl(mongoRule.getMongoConnection(), dashboardWidgetCreator);\n     }\n \n     @Test\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 63,
    "bugNodeStartChar": 2166,
    "bugNodeLength": 106,
    "fixLineNum": 63,
    "fixNodeStartChar": 2166,
    "fixNodeLength": 80,
    "sourceBeforeFix": "new DashboardServiceImpl(mongoRule.getMongoConnection(),metricRegistry,searches,dashboardWidgetCreator)",
    "sourceAfterFix": "new DashboardServiceImpl(mongoRule.getMongoConnection(),dashboardWidgetCreator)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "eedb0efcba41f3ac52a6ee72792e37718340db88",
    "fixCommitParentSHA1": "79faa0d7c0317574a0129abf62c81275c4d97cbe",
    "bugFilePath": "graylog2-server/src/test/java/org/graylog2/dashboards/DashboardServiceImplTest.java",
    "fixPatch": "diff --git a/graylog2-server/src/test/java/org/graylog2/dashboards/DashboardServiceImplTest.java b/graylog2-server/src/test/java/org/graylog2/dashboards/DashboardServiceImplTest.java\nindex 3baa30d..d078cf7 100644\n--- a/graylog2-server/src/test/java/org/graylog2/dashboards/DashboardServiceImplTest.java\n+++ b/graylog2-server/src/test/java/org/graylog2/dashboards/DashboardServiceImplTest.java\n@@ -60,7 +60,7 @@\n \n     @Before\n     public void setUpService() throws Exception {\n-        this.dashboardService = new DashboardServiceImpl(mongoRule.getMongoConnection(), metricRegistry, searches, dashboardWidgetCreator);\n+        this.dashboardService = new DashboardServiceImpl(mongoRule.getMongoConnection(), dashboardWidgetCreator);\n     }\n \n     @Test\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 63,
    "bugNodeStartChar": 2166,
    "bugNodeLength": 106,
    "fixLineNum": 63,
    "fixNodeStartChar": 2166,
    "fixNodeLength": 80,
    "sourceBeforeFix": "new DashboardServiceImpl(mongoRule.getMongoConnection(),metricRegistry,searches,dashboardWidgetCreator)",
    "sourceAfterFix": "new DashboardServiceImpl(mongoRule.getMongoConnection(),dashboardWidgetCreator)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "3a43345ad0a599659d462cfc14dba9d8c0553bbf",
    "fixCommitParentSHA1": "1928ef1ab8b474d03fcc43c04e7b75a6eb753e51",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/periodical/ConfigurationManagementPeriodical.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/periodical/ConfigurationManagementPeriodical.java b/graylog2-server/src/main/java/org/graylog2/periodical/ConfigurationManagementPeriodical.java\nindex 5785af1..5e5cee8 100644\n--- a/graylog2-server/src/main/java/org/graylog2/periodical/ConfigurationManagementPeriodical.java\n+++ b/graylog2-server/src/main/java/org/graylog2/periodical/ConfigurationManagementPeriodical.java\n@@ -75,7 +75,7 @@\n \n         // All default retention strategy settings\n         final ClosingRetentionStrategyConfig closingRetentionStrategyConfig = clusterConfigService.get(ClosingRetentionStrategyConfig.class);\n-        final DeletionRetentionStrategy deletionRetentionStrategy = clusterConfigService.get(DeletionRetentionStrategy.class);\n+        final DeletionRetentionStrategyConfig deletionRetentionStrategyConfig = clusterConfigService.get(DeletionRetentionStrategyConfig.class);\n \n         if (closingRetentionStrategyConfig == null) {\n             final ClosingRetentionStrategyConfig closingConfig = ClosingRetentionStrategyConfig.create(elasticsearchConfiguration.getMaxNumberOfIndices());\n@@ -83,7 +83,7 @@\n             LOG.info(\"Migrated \\\"{}\\\" setting: {}\", \"elasticsearch_max_number_of_indices\", closingConfig);\n         }\n \n-        if (deletionRetentionStrategy == null) {\n+        if (deletionRetentionStrategyConfig == null) {\n             final DeletionRetentionStrategyConfig deletionConfig = DeletionRetentionStrategyConfig.create(elasticsearchConfiguration.getMaxNumberOfIndices());\n             clusterConfigService.write(deletionConfig);\n             LOG.info(\"Migrated \\\"{}\\\" setting: {}\", \"elasticsearch_max_number_of_indices\", deletionConfig);\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 78,
    "bugNodeStartChar": 4535,
    "bugNodeLength": 118,
    "fixLineNum": 78,
    "fixNodeStartChar": 4535,
    "fixNodeLength": 136,
    "sourceBeforeFix": "final DeletionRetentionStrategy deletionRetentionStrategy=clusterConfigService.get(DeletionRetentionStrategy.class); ",
    "sourceAfterFix": "final DeletionRetentionStrategyConfig deletionRetentionStrategyConfig=clusterConfigService.get(DeletionRetentionStrategyConfig.class); "
  },
  {
    "bugType": "CHANGE_OPERAND",
    "fixCommitSHA1": "3a43345ad0a599659d462cfc14dba9d8c0553bbf",
    "fixCommitParentSHA1": "1928ef1ab8b474d03fcc43c04e7b75a6eb753e51",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/periodical/ConfigurationManagementPeriodical.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/periodical/ConfigurationManagementPeriodical.java b/graylog2-server/src/main/java/org/graylog2/periodical/ConfigurationManagementPeriodical.java\nindex 5785af1..5e5cee8 100644\n--- a/graylog2-server/src/main/java/org/graylog2/periodical/ConfigurationManagementPeriodical.java\n+++ b/graylog2-server/src/main/java/org/graylog2/periodical/ConfigurationManagementPeriodical.java\n@@ -75,7 +75,7 @@\n \n         // All default retention strategy settings\n         final ClosingRetentionStrategyConfig closingRetentionStrategyConfig = clusterConfigService.get(ClosingRetentionStrategyConfig.class);\n-        final DeletionRetentionStrategy deletionRetentionStrategy = clusterConfigService.get(DeletionRetentionStrategy.class);\n+        final DeletionRetentionStrategyConfig deletionRetentionStrategyConfig = clusterConfigService.get(DeletionRetentionStrategyConfig.class);\n \n         if (closingRetentionStrategyConfig == null) {\n             final ClosingRetentionStrategyConfig closingConfig = ClosingRetentionStrategyConfig.create(elasticsearchConfiguration.getMaxNumberOfIndices());\n@@ -83,7 +83,7 @@\n             LOG.info(\"Migrated \\\"{}\\\" setting: {}\", \"elasticsearch_max_number_of_indices\", closingConfig);\n         }\n \n-        if (deletionRetentionStrategy == null) {\n+        if (deletionRetentionStrategyConfig == null) {\n             final DeletionRetentionStrategyConfig deletionConfig = DeletionRetentionStrategyConfig.create(elasticsearchConfiguration.getMaxNumberOfIndices());\n             clusterConfigService.write(deletionConfig);\n             LOG.info(\"Migrated \\\"{}\\\" setting: {}\", \"elasticsearch_max_number_of_indices\", deletionConfig);\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 86,
    "bugNodeStartChar": 5050,
    "bugNodeLength": 33,
    "fixLineNum": 86,
    "fixNodeStartChar": 5050,
    "fixNodeLength": 39,
    "sourceBeforeFix": "deletionRetentionStrategy == null",
    "sourceAfterFix": "deletionRetentionStrategyConfig == null"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "3a43345ad0a599659d462cfc14dba9d8c0553bbf",
    "fixCommitParentSHA1": "1928ef1ab8b474d03fcc43c04e7b75a6eb753e51",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/periodical/ConfigurationManagementPeriodical.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/periodical/ConfigurationManagementPeriodical.java b/graylog2-server/src/main/java/org/graylog2/periodical/ConfigurationManagementPeriodical.java\nindex 5785af1..5e5cee8 100644\n--- a/graylog2-server/src/main/java/org/graylog2/periodical/ConfigurationManagementPeriodical.java\n+++ b/graylog2-server/src/main/java/org/graylog2/periodical/ConfigurationManagementPeriodical.java\n@@ -75,7 +75,7 @@\n \n         // All default retention strategy settings\n         final ClosingRetentionStrategyConfig closingRetentionStrategyConfig = clusterConfigService.get(ClosingRetentionStrategyConfig.class);\n-        final DeletionRetentionStrategy deletionRetentionStrategy = clusterConfigService.get(DeletionRetentionStrategy.class);\n+        final DeletionRetentionStrategyConfig deletionRetentionStrategyConfig = clusterConfigService.get(DeletionRetentionStrategyConfig.class);\n \n         if (closingRetentionStrategyConfig == null) {\n             final ClosingRetentionStrategyConfig closingConfig = ClosingRetentionStrategyConfig.create(elasticsearchConfiguration.getMaxNumberOfIndices());\n@@ -83,7 +83,7 @@\n             LOG.info(\"Migrated \\\"{}\\\" setting: {}\", \"elasticsearch_max_number_of_indices\", closingConfig);\n         }\n \n-        if (deletionRetentionStrategy == null) {\n+        if (deletionRetentionStrategyConfig == null) {\n             final DeletionRetentionStrategyConfig deletionConfig = DeletionRetentionStrategyConfig.create(elasticsearchConfiguration.getMaxNumberOfIndices());\n             clusterConfigService.write(deletionConfig);\n             LOG.info(\"Migrated \\\"{}\\\" setting: {}\", \"elasticsearch_max_number_of_indices\", deletionConfig);\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 86,
    "bugNodeStartChar": 5050,
    "bugNodeLength": 33,
    "fixLineNum": 86,
    "fixNodeStartChar": 5050,
    "fixNodeLength": 39,
    "sourceBeforeFix": "deletionRetentionStrategy == null",
    "sourceAfterFix": "deletionRetentionStrategyConfig == null"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "bf8a88d3edd4aed38360d6fb04941c3a826d5c3b",
    "fixCommitParentSHA1": "9b8ad19c00e2c3f7c596e92cc870474f65c5e311",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/indexer/retention/strategies/DeletionRetentionStrategy.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/indexer/retention/strategies/DeletionRetentionStrategy.java b/graylog2-server/src/main/java/org/graylog2/indexer/retention/strategies/DeletionRetentionStrategy.java\nindex 1c1b5b5..7d06246 100644\n--- a/graylog2-server/src/main/java/org/graylog2/indexer/retention/strategies/DeletionRetentionStrategy.java\n+++ b/graylog2-server/src/main/java/org/graylog2/indexer/retention/strategies/DeletionRetentionStrategy.java\n@@ -67,6 +67,6 @@\n \n     @Override\n     public Class<?> configurationClass() {\n-        return DeletionRetentionStrategy.class;\n+        return DeletionRetentionStrategyConfig.class;\n     }\n }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 70,
    "bugNodeStartChar": 2583,
    "bugNodeLength": 31,
    "fixLineNum": 70,
    "fixNodeStartChar": 2583,
    "fixNodeLength": 37,
    "sourceBeforeFix": "DeletionRetentionStrategy.class",
    "sourceAfterFix": "DeletionRetentionStrategyConfig.class"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "5bd04f29e3b4b0392a9c8133d6dddd0e33d09229",
    "fixCommitParentSHA1": "50b19c2c0d1ca9f1469d4122ab5586b92500b5e1",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/outputs/DiscardMessageOutput.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/outputs/DiscardMessageOutput.java b/graylog2-server/src/main/java/org/graylog2/outputs/DiscardMessageOutput.java\nindex eef07ce..4d3e1c6 100644\n--- a/graylog2-server/src/main/java/org/graylog2/outputs/DiscardMessageOutput.java\n+++ b/graylog2-server/src/main/java/org/graylog2/outputs/DiscardMessageOutput.java\n@@ -81,9 +81,9 @@\n         messagesDiscarded.mark(messages.size());\n     }\n \n-    public interface Factory extends MessageOutput.Factory<GelfOutput> {\n+    public interface Factory extends MessageOutput.Factory<DiscardMessageOutput> {\n         @Override\n-        GelfOutput create(Stream stream, Configuration configuration);\n+        DiscardMessageOutput create(Stream stream, Configuration configuration);\n \n         @Override\n         Config getConfig();\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 84,
    "bugNodeStartChar": 2895,
    "bugNodeLength": 33,
    "fixLineNum": 84,
    "fixNodeStartChar": 2895,
    "fixNodeLength": 43,
    "sourceBeforeFix": "MessageOutput.Factory<GelfOutput>",
    "sourceAfterFix": "MessageOutput.Factory<DiscardMessageOutput>"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "5bd04f29e3b4b0392a9c8133d6dddd0e33d09229",
    "fixCommitParentSHA1": "50b19c2c0d1ca9f1469d4122ab5586b92500b5e1",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/outputs/DiscardMessageOutput.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/outputs/DiscardMessageOutput.java b/graylog2-server/src/main/java/org/graylog2/outputs/DiscardMessageOutput.java\nindex eef07ce..4d3e1c6 100644\n--- a/graylog2-server/src/main/java/org/graylog2/outputs/DiscardMessageOutput.java\n+++ b/graylog2-server/src/main/java/org/graylog2/outputs/DiscardMessageOutput.java\n@@ -81,9 +81,9 @@\n         messagesDiscarded.mark(messages.size());\n     }\n \n-    public interface Factory extends MessageOutput.Factory<GelfOutput> {\n+    public interface Factory extends MessageOutput.Factory<DiscardMessageOutput> {\n         @Override\n-        GelfOutput create(Stream stream, Configuration configuration);\n+        DiscardMessageOutput create(Stream stream, Configuration configuration);\n \n         @Override\n         Config getConfig();\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 85,
    "bugNodeStartChar": 2939,
    "bugNodeLength": 80,
    "fixLineNum": 85,
    "fixNodeStartChar": 2939,
    "fixNodeLength": 90,
    "sourceBeforeFix": "@Override GelfOutput create(Stream stream,Configuration configuration); ",
    "sourceAfterFix": "@Override DiscardMessageOutput create(Stream stream,Configuration configuration); "
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "fe2b27f01d3c2a3eb0090bec3f7badbd02780bf7",
    "fixCommitParentSHA1": "6444133744a6c16666a390314ca3abee28fab082",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/security/ldap/LdapConnector.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/security/ldap/LdapConnector.java b/graylog2-server/src/main/java/org/graylog2/security/ldap/LdapConnector.java\nindex 769d9b4..e2a855a 100644\n--- a/graylog2-server/src/main/java/org/graylog2/security/ldap/LdapConnector.java\n+++ b/graylog2-server/src/main/java/org/graylog2/security/ldap/LdapConnector.java\n@@ -132,7 +132,7 @@\n             entryCursor = connection.search(searchBase,\n                                             filter,\n                                             SearchScope.SUBTREE,\n-                                            groupIdAttribute, displayNameAttribute, \"dn\", \"uid\", \"userPrincipalName\", \"mail\", \"rfc822Mailbox\", \"memberOf\");\n+                                            groupIdAttribute, displayNameAttribute, \"dn\", \"uid\", \"userPrincipalName\", \"mail\", \"rfc822Mailbox\", \"memberOf\", \"isMemberOf\");\n             final Iterator<Entry> it = entryCursor.iterator();\n             if (it.hasNext()) {\n                 final Entry e = it.next();\n@@ -151,7 +151,8 @@\n                     if (attribute.isHumanReadable()) {\n                         ldapEntry.put(attribute.getId(), Joiner.on(\", \").join(attribute.iterator()));\n                     }\n-                    if (\"memberOf\".equalsIgnoreCase(attribute.getId())) {\n+                    // ActiveDirectory (memberOf) and Sun Directory Server (isMemberOf)\n+                    if (\"memberOf\".equalsIgnoreCase(attribute.getId()) || \"isMemberOf\".equalsIgnoreCase(attribute.getId())) {\n                         for (Value<?> group : attribute) {\n                             groupDns.add(group.getString());\n                         }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 132,
    "bugNodeStartChar": 5919,
    "bugNodeLength": 301,
    "fixLineNum": 132,
    "fixNodeStartChar": 5919,
    "fixNodeLength": 315,
    "sourceBeforeFix": "connection.search(searchBase,filter,SearchScope.SUBTREE,groupIdAttribute,displayNameAttribute,\"dn\",\"uid\",\"userPrincipalName\",\"mail\",\"rfc822Mailbox\",\"memberOf\")",
    "sourceAfterFix": "connection.search(searchBase,filter,SearchScope.SUBTREE,groupIdAttribute,displayNameAttribute,\"dn\",\"uid\",\"userPrincipalName\",\"mail\",\"rfc822Mailbox\",\"memberOf\",\"isMemberOf\")"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "fe2b27f01d3c2a3eb0090bec3f7badbd02780bf7",
    "fixCommitParentSHA1": "6444133744a6c16666a390314ca3abee28fab082",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/security/ldap/LdapConnector.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/security/ldap/LdapConnector.java b/graylog2-server/src/main/java/org/graylog2/security/ldap/LdapConnector.java\nindex 769d9b4..e2a855a 100644\n--- a/graylog2-server/src/main/java/org/graylog2/security/ldap/LdapConnector.java\n+++ b/graylog2-server/src/main/java/org/graylog2/security/ldap/LdapConnector.java\n@@ -132,7 +132,7 @@\n             entryCursor = connection.search(searchBase,\n                                             filter,\n                                             SearchScope.SUBTREE,\n-                                            groupIdAttribute, displayNameAttribute, \"dn\", \"uid\", \"userPrincipalName\", \"mail\", \"rfc822Mailbox\", \"memberOf\");\n+                                            groupIdAttribute, displayNameAttribute, \"dn\", \"uid\", \"userPrincipalName\", \"mail\", \"rfc822Mailbox\", \"memberOf\", \"isMemberOf\");\n             final Iterator<Entry> it = entryCursor.iterator();\n             if (it.hasNext()) {\n                 final Entry e = it.next();\n@@ -151,7 +151,8 @@\n                     if (attribute.isHumanReadable()) {\n                         ldapEntry.put(attribute.getId(), Joiner.on(\", \").join(attribute.iterator()));\n                     }\n-                    if (\"memberOf\".equalsIgnoreCase(attribute.getId())) {\n+                    // ActiveDirectory (memberOf) and Sun Directory Server (isMemberOf)\n+                    if (\"memberOf\".equalsIgnoreCase(attribute.getId()) || \"isMemberOf\".equalsIgnoreCase(attribute.getId())) {\n                         for (Value<?> group : attribute) {\n                             groupDns.add(group.getString());\n                         }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 154,
    "bugNodeStartChar": 7250,
    "bugNodeLength": 46,
    "fixLineNum": 155,
    "fixNodeStartChar": 7338,
    "fixNodeLength": 98,
    "sourceBeforeFix": "\"memberOf\".equalsIgnoreCase(attribute.getId())",
    "sourceAfterFix": "\"memberOf\".equalsIgnoreCase(attribute.getId()) || \"isMemberOf\".equalsIgnoreCase(attribute.getId())"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "dfb0ebdad3633308ed0016db3a6d1f9768cecb13",
    "fixCommitParentSHA1": "2b2f29e6961071f511b46dc8916122960af41bcd",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/web/ModuleFiles.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/web/ModuleFiles.java b/graylog2-server/src/main/java/org/graylog2/web/ModuleFiles.java\nindex b34ac87..2ba9f62 100644\n--- a/graylog2-server/src/main/java/org/graylog2/web/ModuleFiles.java\n+++ b/graylog2-server/src/main/java/org/graylog2/web/ModuleFiles.java\n@@ -40,6 +40,6 @@\n     public static ModuleFiles create(@JsonProperty(\"chunks\") Map<String, ChunkDescription> chunks,\n                                      @JsonProperty(\"js\") List<String> jsFiles,\n                                      @JsonProperty(\"css\") List<String> cssFiles) {\n-        return new AutoValue_PackageFiles(chunks, jsFiles, cssFiles);\n+        return new AutoValue_ModuleFiles(chunks, jsFiles, cssFiles);\n     }\n }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 43,
    "bugNodeStartChar": 1537,
    "bugNodeLength": 53,
    "fixLineNum": 43,
    "fixNodeStartChar": 1537,
    "fixNodeLength": 52,
    "sourceBeforeFix": "new AutoValue_PackageFiles(chunks,jsFiles,cssFiles)",
    "sourceAfterFix": "new AutoValue_ModuleFiles(chunks,jsFiles,cssFiles)"
  },
  {
    "bugType": "CHANGE_OPERATOR",
    "fixCommitSHA1": "efdc1c8c89efe76a650fbaa9fd870126cb391feb",
    "fixCommitParentSHA1": "27bd9a17945afa63f174844f3bead2d6b3c213ce",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/initializers/IndexerSetupService.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/initializers/IndexerSetupService.java b/graylog2-server/src/main/java/org/graylog2/initializers/IndexerSetupService.java\nindex 745f4e6..26e4bb2 100644\n--- a/graylog2-server/src/main/java/org/graylog2/initializers/IndexerSetupService.java\n+++ b/graylog2-server/src/main/java/org/graylog2/initializers/IndexerSetupService.java\n@@ -62,7 +62,7 @@\n public class IndexerSetupService extends AbstractIdleService {\n     private static final Logger LOG = LoggerFactory.getLogger(IndexerSetupService.class);\n     private static final Version MINIMUM_ES_VERSION = Version.V_1_3_4;\n-    private static final Version MAXIMUM_ES_VERSION = Version.fromString(\"1.6.99\");\n+    private static final Version MAXIMUM_ES_VERSION = Version.fromString(\"1.7.99\");\n \n     private final Node node;\n     private final ElasticsearchConfiguration configuration;\n@@ -196,7 +196,7 @@\n     }\n \n     private void checkClusterVersion(Version clusterVersion) {\n-        if (!clusterVersion.onOrAfter(MINIMUM_ES_VERSION) && !clusterVersion.onOrBefore(MAXIMUM_ES_VERSION)) {\n+        if (!clusterVersion.onOrAfter(MINIMUM_ES_VERSION) || !clusterVersion.onOrBefore(MAXIMUM_ES_VERSION)) {\n             LOG.error(\"Elasticsearch node is of the wrong version {}, it must be between {} and {}! \"\n                             + \"Please make sure you are running the correct version of Elasticsearch.\",\n                     clusterVersion, MINIMUM_ES_VERSION, MAXIMUM_ES_VERSION);\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 199,
    "bugNodeStartChar": 10064,
    "bugNodeLength": 95,
    "fixLineNum": 199,
    "fixNodeStartChar": 10064,
    "fixNodeLength": 95,
    "sourceBeforeFix": "!clusterVersion.onOrAfter(MINIMUM_ES_VERSION) && !clusterVersion.onOrBefore(MAXIMUM_ES_VERSION)",
    "sourceAfterFix": "!clusterVersion.onOrAfter(MINIMUM_ES_VERSION) || !clusterVersion.onOrBefore(MAXIMUM_ES_VERSION)"
  },
  {
    "bugType": "SWAP_ARGUMENTS",
    "fixCommitSHA1": "c867d4321906206ce8e3c8d8a51e85855ae5c8f6",
    "fixCommitParentSHA1": "8af1783198e25ae9a0752f05ea72b9e9f18d2d41",
    "bugFilePath": "src/main/java/org/graylog/plugins/netflow/NetFlowPluginMetaData.java",
    "fixPatch": "diff --git a/src/main/java/org/graylog/plugins/netflow/NetFlowPluginMetaData.java b/src/main/java/org/graylog/plugins/netflow/NetFlowPluginMetaData.java\nindex 7bd07a0..55ea4e1 100644\n--- a/src/main/java/org/graylog/plugins/netflow/NetFlowPluginMetaData.java\n+++ b/src/main/java/org/graylog/plugins/netflow/NetFlowPluginMetaData.java\n@@ -50,7 +50,7 @@\n \n     @Override\n     public Version getVersion() {\n-        return new Version(1, 0, 0);\n+        return new Version(0, 1, 0);\n     }\n \n     @Override\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 53,
    "bugNodeStartChar": 1493,
    "bugNodeLength": 20,
    "fixLineNum": 53,
    "fixNodeStartChar": 1493,
    "fixNodeLength": 20,
    "sourceBeforeFix": "new Version(1,0,0)",
    "sourceAfterFix": "new Version(0,1,0)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "84520f4023ad743c10e6c06fa173828bafcbcab6",
    "fixCommitParentSHA1": "74a77e2d0229182d4f7096712470247979d9f518",
    "bugFilePath": "app/controllers/UsersController.java",
    "fixPatch": "diff --git a/app/controllers/UsersController.java b/app/controllers/UsersController.java\nindex 0bb5ac5..487b8ef 100644\n--- a/app/controllers/UsersController.java\n+++ b/app/controllers/UsersController.java\n@@ -340,7 +340,7 @@\n         user.update(changeRequest);\n \n         flash(\"success\", \"User '\" + user.getFullName() + \"' was updated successfully\");\n-        return redirect(routes.UsersController.index());\n+        return redirect(routes.UsersController.editUserForm(username));\n     }\n \n     private boolean checkRequireOldPassword(String username) {\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 343,
    "bugNodeStartChar": 17050,
    "bugNodeLength": 30,
    "fixLineNum": 343,
    "fixNodeStartChar": 17050,
    "fixNodeLength": 45,
    "sourceBeforeFix": "routes.UsersController.index()",
    "sourceAfterFix": "routes.UsersController.editUserForm(username)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "6573aea4805b3a7838e33e082c76589d1a274a92",
    "fixCommitParentSHA1": "52cbb5f8ffd721cf5ac327ac47f10b953d020547",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/rest/resources/search/SearchResource.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/rest/resources/search/SearchResource.java b/graylog2-server/src/main/java/org/graylog2/rest/resources/search/SearchResource.java\nindex 27f9687..c7b91ae 100644\n--- a/graylog2-server/src/main/java/org/graylog2/rest/resources/search/SearchResource.java\n+++ b/graylog2-server/src/main/java/org/graylog2/rest/resources/search/SearchResource.java\n@@ -115,7 +115,7 @@\n                 return searches.fieldStats(field, query, filter, timeRange, true, true);\n             } catch (Searches.FieldTypeException e1) {\n                 LOG.error(\"Retrieving field statistics for field {} failed while calculating the cardinality. Cause: {}\", field, ExceptionUtils.getRootCauseMessage(e1));\n-                throw new BadRequestException();\n+                throw new BadRequestException(\"Field \" + field + \" is not of a numeric type and the cardinality could not be calculated either.\", e1);\n             }\n         }\n     }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 118,
    "bugNodeStartChar": 5176,
    "bugNodeLength": 25,
    "fixLineNum": 118,
    "fixNodeStartChar": 5176,
    "fixNodeLength": 127,
    "sourceBeforeFix": "new BadRequestException()",
    "sourceAfterFix": "new BadRequestException(\"Field \" + field + \" is not of a numeric type and the cardinality could not be calculated either.\",e1)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "e7eb9f2c98dd576658bf0160d2ef4720740897ab",
    "fixCommitParentSHA1": "2c347e0873767e50f326482839c12c52ad01b7b8",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/rest/resources/roles/RolesResource.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/rest/resources/roles/RolesResource.java b/graylog2-server/src/main/java/org/graylog2/rest/resources/roles/RolesResource.java\nindex 0a7c246..be303d8 100644\n--- a/graylog2-server/src/main/java/org/graylog2/rest/resources/roles/RolesResource.java\n+++ b/graylog2-server/src/main/java/org/graylog2/rest/resources/roles/RolesResource.java\n@@ -141,7 +141,7 @@\n         final Role roleToUpdate = roleService.load(name);\n \n         roleToUpdate.setName(role.name());\n-        roleToUpdate.setDescription(role.description().get());\n+        roleToUpdate.setDescription(role.description().orNull());\n         roleToUpdate.setPermissions(role.permissions());\n         try {\n             roleService.save(roleToUpdate);\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 144,
    "bugNodeStartChar": 5989,
    "bugNodeLength": 24,
    "fixLineNum": 144,
    "fixNodeStartChar": 5989,
    "fixNodeLength": 27,
    "sourceBeforeFix": "role.description().get()",
    "sourceAfterFix": "role.description().orNull()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "e7eb9f2c98dd576658bf0160d2ef4720740897ab",
    "fixCommitParentSHA1": "2c347e0873767e50f326482839c12c52ad01b7b8",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/rest/resources/roles/RolesResource.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/rest/resources/roles/RolesResource.java b/graylog2-server/src/main/java/org/graylog2/rest/resources/roles/RolesResource.java\nindex 0a7c246..be303d8 100644\n--- a/graylog2-server/src/main/java/org/graylog2/rest/resources/roles/RolesResource.java\n+++ b/graylog2-server/src/main/java/org/graylog2/rest/resources/roles/RolesResource.java\n@@ -141,7 +141,7 @@\n         final Role roleToUpdate = roleService.load(name);\n \n         roleToUpdate.setName(role.name());\n-        roleToUpdate.setDescription(role.description().get());\n+        roleToUpdate.setDescription(role.description().orNull());\n         roleToUpdate.setPermissions(role.permissions());\n         try {\n             roleService.save(roleToUpdate);\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 144,
    "bugNodeStartChar": 5989,
    "bugNodeLength": 24,
    "fixLineNum": 144,
    "fixNodeStartChar": 5989,
    "fixNodeLength": 27,
    "sourceBeforeFix": "role.description().get()",
    "sourceAfterFix": "role.description().orNull()"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "0f6962288494b4b53c7f5d9d492c1d748d2fc976",
    "fixCommitParentSHA1": "c8be7557c1ce5eca6d2794695ac6d4cec93c34a8",
    "bugFilePath": "graylog2-server/src/test/java/org/graylog2/streams/StreamRouterEngineTest.java",
    "fixPatch": "diff --git a/graylog2-server/src/test/java/org/graylog2/streams/StreamRouterEngineTest.java b/graylog2-server/src/test/java/org/graylog2/streams/StreamRouterEngineTest.java\nindex caea4e5..3ab81c7 100644\n--- a/graylog2-server/src/test/java/org/graylog2/streams/StreamRouterEngineTest.java\n+++ b/graylog2-server/src/test/java/org/graylog2/streams/StreamRouterEngineTest.java\n@@ -517,7 +517,7 @@\n         when(message.getField(eq(dummyField))).thenReturn(dummyValue);\n         when(message.getFieldNames()).thenReturn(Sets.newHashSet(dummyField));\n \n-        final StreamRouterEngine engine = newEngine(Lists.newArrayList(stream1));\n+        final StreamRouterEngine engine = newEngine(Lists.newArrayList(stream1, stream2));\n \n         final List<Stream> result = engine.match(message);\n \n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 520,
    "bugNodeStartChar": 20755,
    "bugNodeLength": 27,
    "fixLineNum": 520,
    "fixNodeStartChar": 20755,
    "fixNodeLength": 36,
    "sourceBeforeFix": "Lists.newArrayList(stream1)",
    "sourceAfterFix": "Lists.newArrayList(stream1,stream2)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "01fee8245ea33cbfe79dfc8bc3a7d4b9e3047beb",
    "fixCommitParentSHA1": "611f9a80e7c93487d193245f87135012f22fc71b",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/events/ClusterEventPeriodical.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/events/ClusterEventPeriodical.java b/graylog2-server/src/main/java/org/graylog2/events/ClusterEventPeriodical.java\nindex 78c404d..b79fccd 100644\n--- a/graylog2-server/src/main/java/org/graylog2/events/ClusterEventPeriodical.java\n+++ b/graylog2-server/src/main/java/org/graylog2/events/ClusterEventPeriodical.java\n@@ -95,7 +95,7 @@\n                 .asc(\"producer\")\n                 .asc(\"consumers\"));\n \n-        coll.setWriteConcern(WriteConcern.MAJORITY);\n+        coll.setWriteConcern(WriteConcern.FSYNCED);\n \n         return coll;\n     }\n@@ -180,7 +180,7 @@\n         final ClusterEvent clusterEvent = ClusterEvent.create(nodeId.toString(), className, event);\n \n         try {\n-            final String id = dbCollection.save(clusterEvent).getSavedId();\n+            final String id = dbCollection.save(clusterEvent, WriteConcern.FSYNCED).getSavedId();\n             LOG.debug(\"Published cluster event with ID <{}> and type <{}>\", id, className);\n         } catch (MongoException e) {\n             LOG.error(\"Couldn't publish cluster event of type <\" + className + \">\", e);\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 183,
    "bugNodeStartChar": 6249,
    "bugNodeLength": 31,
    "fixLineNum": 183,
    "fixNodeStartChar": 6249,
    "fixNodeLength": 53,
    "sourceBeforeFix": "dbCollection.save(clusterEvent)",
    "sourceAfterFix": "dbCollection.save(clusterEvent,WriteConcern.FSYNCED)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "3cde0f0f90341c21562d893992181650049985b8",
    "fixCommitParentSHA1": "be93b637efced52beba3e9a78a07a3633ee4c1d4",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/Configuration.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/Configuration.java b/graylog2-server/src/main/java/org/graylog2/Configuration.java\nindex cbf2f9e..8761cc5 100644\n--- a/graylog2-server/src/main/java/org/graylog2/Configuration.java\n+++ b/graylog2-server/src/main/java/org/graylog2/Configuration.java\n@@ -125,10 +125,10 @@\n     @Parameter(value = \"default_message_output_class\")\n     private String defaultMessageOutputClass = \"\";\n \n-    @Parameter(value = \"collector_expiration_threshold\", validator = PositiveIntegerValidator.class)\n+    @Parameter(value = \"collector_expiration_threshold\", validator = PositiveDurationValidator.class)\n     private Duration collectorExpirationThreshold = Duration.days(14);\n \n-    @Parameter(value = \"collector_inactive_threshold\", validator = PositiveIntegerValidator.class)\n+    @Parameter(value = \"collector_inactive_threshold\", validator = PositiveDurationValidator.class)\n     private Duration collectorInactiveThreshold = Duration.minutes(1);\n \n     @Parameter(value = \"dashboard_widget_default_cache_time\", validator = PositiveDurationValidator.class)\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 128,
    "bugNodeStartChar": 5304,
    "bugNodeLength": 30,
    "fixLineNum": 128,
    "fixNodeStartChar": 5304,
    "fixNodeLength": 31,
    "sourceBeforeFix": "PositiveIntegerValidator.class",
    "sourceAfterFix": "PositiveDurationValidator.class"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "3cde0f0f90341c21562d893992181650049985b8",
    "fixCommitParentSHA1": "be93b637efced52beba3e9a78a07a3633ee4c1d4",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/Configuration.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/Configuration.java b/graylog2-server/src/main/java/org/graylog2/Configuration.java\nindex cbf2f9e..8761cc5 100644\n--- a/graylog2-server/src/main/java/org/graylog2/Configuration.java\n+++ b/graylog2-server/src/main/java/org/graylog2/Configuration.java\n@@ -125,10 +125,10 @@\n     @Parameter(value = \"default_message_output_class\")\n     private String defaultMessageOutputClass = \"\";\n \n-    @Parameter(value = \"collector_expiration_threshold\", validator = PositiveIntegerValidator.class)\n+    @Parameter(value = \"collector_expiration_threshold\", validator = PositiveDurationValidator.class)\n     private Duration collectorExpirationThreshold = Duration.days(14);\n \n-    @Parameter(value = \"collector_inactive_threshold\", validator = PositiveIntegerValidator.class)\n+    @Parameter(value = \"collector_inactive_threshold\", validator = PositiveDurationValidator.class)\n     private Duration collectorInactiveThreshold = Duration.minutes(1);\n \n     @Parameter(value = \"dashboard_widget_default_cache_time\", validator = PositiveDurationValidator.class)\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 131,
    "bugNodeStartChar": 5475,
    "bugNodeLength": 30,
    "fixLineNum": 131,
    "fixNodeStartChar": 5475,
    "fixNodeLength": 31,
    "sourceBeforeFix": "PositiveIntegerValidator.class",
    "sourceAfterFix": "PositiveDurationValidator.class"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "a2cc06ffec656b532226808c87e32976998c0689",
    "fixCommitParentSHA1": "60bfcdfc232de2dfad63dfdf5be5162e73660ed0",
    "bugFilePath": "graylog2-shared/src/main/java/org/graylog2/shared/rest/resources/system/ThroughputResource.java",
    "fixPatch": "diff --git a/graylog2-shared/src/main/java/org/graylog2/shared/rest/resources/system/ThroughputResource.java b/graylog2-shared/src/main/java/org/graylog2/shared/rest/resources/system/ThroughputResource.java\nindex 09a33e0..c774535 100644\n--- a/graylog2-shared/src/main/java/org/graylog2/shared/rest/resources/system/ThroughputResource.java\n+++ b/graylog2-shared/src/main/java/org/graylog2/shared/rest/resources/system/ThroughputResource.java\n@@ -57,10 +57,10 @@\n         final SortedMap<String, Gauge> gauges = metricRegistry.getGauges(MetricUtils.filterSingleMetric(\n                 GlobalMetricNames.OUTPUT_THROUGHPUT_RATE));\n         final Gauge gauge = Iterables.getOnlyElement(gauges.values(), null);\n-        if (gauge == null || !(gauge.getValue() instanceof Long)) {\n+        if (gauge == null || !(gauge.getValue() instanceof Number)) {\n             return Throughput.create(0);\n         } else {\n-            return Throughput.create((Long) gauge.getValue());\n+            return Throughput.create(((Number) gauge.getValue()).longValue());\n         }\n     }\n }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 60,
    "bugNodeStartChar": 2432,
    "bugNodeLength": 32,
    "fixLineNum": 60,
    "fixNodeStartChar": 2432,
    "fixNodeLength": 34,
    "sourceBeforeFix": "gauge.getValue() instanceof Long",
    "sourceAfterFix": "gauge.getValue() instanceof Number"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "f652e2465b9f44d024cbb1a91f5793c147a50471",
    "fixCommitParentSHA1": "9479fe88d5c3f87739e529f9beefb31a0e93899e",
    "bugFilePath": "graylog2-rest-client/src/test/java/org/graylog2/restclient/lib/AsyncByteBufferInputStreamTest.java",
    "fixPatch": "diff --git a/graylog2-rest-client/src/test/java/org/graylog2/restclient/lib/AsyncByteBufferInputStreamTest.java b/graylog2-rest-client/src/test/java/org/graylog2/restclient/lib/AsyncByteBufferInputStreamTest.java\nindex 23d87b8..c19adea 100644\n--- a/graylog2-rest-client/src/test/java/org/graylog2/restclient/lib/AsyncByteBufferInputStreamTest.java\n+++ b/graylog2-rest-client/src/test/java/org/graylog2/restclient/lib/AsyncByteBufferInputStreamTest.java\n@@ -153,7 +153,7 @@\n         reader.join();\n         writer.join();\n \n-        await().atMost(5, TimeUnit.SECONDS).untilTrue(caughtExceptionInReader);\n+        await().atMost(20, TimeUnit.SECONDS).untilTrue(caughtExceptionInReader);\n         assertTrue(stream.getFailed() instanceof Exception);\n         assertEquals(\"Some weird error\", stream.getFailed().getMessage());\n     }\n@@ -188,7 +188,7 @@\n         reader.join();\n         writer.join();\n \n-        await().atMost(5, TimeUnit.SECONDS).until(new Callable<Boolean>() {\n+        await().atMost(20, TimeUnit.SECONDS).until(new Callable<Boolean>() {\n             @Override\n             public Boolean call() throws Exception {\n                 return stream.isDone();\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 156,
    "bugNodeStartChar": 5395,
    "bugNodeLength": 35,
    "fixLineNum": 156,
    "fixNodeStartChar": 5395,
    "fixNodeLength": 36,
    "sourceBeforeFix": "await().atMost(5,TimeUnit.SECONDS)",
    "sourceAfterFix": "await().atMost(20,TimeUnit.SECONDS)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "f652e2465b9f44d024cbb1a91f5793c147a50471",
    "fixCommitParentSHA1": "9479fe88d5c3f87739e529f9beefb31a0e93899e",
    "bugFilePath": "graylog2-rest-client/src/test/java/org/graylog2/restclient/lib/AsyncByteBufferInputStreamTest.java",
    "fixPatch": "diff --git a/graylog2-rest-client/src/test/java/org/graylog2/restclient/lib/AsyncByteBufferInputStreamTest.java b/graylog2-rest-client/src/test/java/org/graylog2/restclient/lib/AsyncByteBufferInputStreamTest.java\nindex 23d87b8..c19adea 100644\n--- a/graylog2-rest-client/src/test/java/org/graylog2/restclient/lib/AsyncByteBufferInputStreamTest.java\n+++ b/graylog2-rest-client/src/test/java/org/graylog2/restclient/lib/AsyncByteBufferInputStreamTest.java\n@@ -153,7 +153,7 @@\n         reader.join();\n         writer.join();\n \n-        await().atMost(5, TimeUnit.SECONDS).untilTrue(caughtExceptionInReader);\n+        await().atMost(20, TimeUnit.SECONDS).untilTrue(caughtExceptionInReader);\n         assertTrue(stream.getFailed() instanceof Exception);\n         assertEquals(\"Some weird error\", stream.getFailed().getMessage());\n     }\n@@ -188,7 +188,7 @@\n         reader.join();\n         writer.join();\n \n-        await().atMost(5, TimeUnit.SECONDS).until(new Callable<Boolean>() {\n+        await().atMost(20, TimeUnit.SECONDS).until(new Callable<Boolean>() {\n             @Override\n             public Boolean call() throws Exception {\n                 return stream.isDone();\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 191,
    "bugNodeStartChar": 6777,
    "bugNodeLength": 35,
    "fixLineNum": 191,
    "fixNodeStartChar": 6777,
    "fixNodeLength": 36,
    "sourceBeforeFix": "await().atMost(5,TimeUnit.SECONDS)",
    "sourceAfterFix": "await().atMost(20,TimeUnit.SECONDS)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "a8c6a40fd192cd5692c550a3311db004535cd0a6",
    "fixCommitParentSHA1": "7bc94baa71ade05764f5d5b4e37729139213b090",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java b/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\nindex 980e476..de646ad 100644\n--- a/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\n+++ b/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\n@@ -251,9 +251,9 @@\n \n         SearchRequestBuilder srb;\n         if (filter == null) {\n-            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         } else {\n-            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         }\n \n         FilterAggregationBuilder builder = AggregationBuilders.filter(AGG_FILTER)\n@@ -294,9 +294,9 @@\n \n         SearchRequestBuilder srb;\n         if (filter == null) {\n-            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         } else {\n-            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         }\n \n \n@@ -378,9 +378,9 @@\n         SearchRequestBuilder srb;\n \n         if (filter == null) {\n-            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         } else {\n-            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         }\n \n         FilterAggregationBuilder builder = AggregationBuilders.filter(AGG_FILTER)\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 254,
    "bugNodeStartChar": 10597,
    "bugNodeLength": 103,
    "fixLineNum": 254,
    "fixNodeStartChar": 10597,
    "fixNodeLength": 110,
    "sourceBeforeFix": "standardSearchRequest(query,IndexHelper.determineAffectedIndices(indexRangeService,deflector,range))",
    "sourceAfterFix": "standardSearchRequest(query,IndexHelper.determineAffectedIndices(indexRangeService,deflector,range),range)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "a8c6a40fd192cd5692c550a3311db004535cd0a6",
    "fixCommitParentSHA1": "7bc94baa71ade05764f5d5b4e37729139213b090",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java b/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\nindex 980e476..de646ad 100644\n--- a/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\n+++ b/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\n@@ -251,9 +251,9 @@\n \n         SearchRequestBuilder srb;\n         if (filter == null) {\n-            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         } else {\n-            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         }\n \n         FilterAggregationBuilder builder = AggregationBuilders.filter(AGG_FILTER)\n@@ -294,9 +294,9 @@\n \n         SearchRequestBuilder srb;\n         if (filter == null) {\n-            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         } else {\n-            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         }\n \n \n@@ -378,9 +378,9 @@\n         SearchRequestBuilder srb;\n \n         if (filter == null) {\n-            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         } else {\n-            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         }\n \n         FilterAggregationBuilder builder = AggregationBuilders.filter(AGG_FILTER)\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 256,
    "bugNodeStartChar": 10737,
    "bugNodeLength": 111,
    "fixLineNum": 256,
    "fixNodeStartChar": 10737,
    "fixNodeLength": 118,
    "sourceBeforeFix": "filteredSearchRequest(query,filter,IndexHelper.determineAffectedIndices(indexRangeService,deflector,range))",
    "sourceAfterFix": "filteredSearchRequest(query,filter,IndexHelper.determineAffectedIndices(indexRangeService,deflector,range),range)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "a8c6a40fd192cd5692c550a3311db004535cd0a6",
    "fixCommitParentSHA1": "7bc94baa71ade05764f5d5b4e37729139213b090",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java b/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\nindex 980e476..de646ad 100644\n--- a/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\n+++ b/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\n@@ -251,9 +251,9 @@\n \n         SearchRequestBuilder srb;\n         if (filter == null) {\n-            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         } else {\n-            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         }\n \n         FilterAggregationBuilder builder = AggregationBuilders.filter(AGG_FILTER)\n@@ -294,9 +294,9 @@\n \n         SearchRequestBuilder srb;\n         if (filter == null) {\n-            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         } else {\n-            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         }\n \n \n@@ -378,9 +378,9 @@\n         SearchRequestBuilder srb;\n \n         if (filter == null) {\n-            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         } else {\n-            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         }\n \n         FilterAggregationBuilder builder = AggregationBuilders.filter(AGG_FILTER)\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 297,
    "bugNodeStartChar": 12351,
    "bugNodeLength": 103,
    "fixLineNum": 297,
    "fixNodeStartChar": 12351,
    "fixNodeLength": 110,
    "sourceBeforeFix": "standardSearchRequest(query,IndexHelper.determineAffectedIndices(indexRangeService,deflector,range))",
    "sourceAfterFix": "standardSearchRequest(query,IndexHelper.determineAffectedIndices(indexRangeService,deflector,range),range)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "a8c6a40fd192cd5692c550a3311db004535cd0a6",
    "fixCommitParentSHA1": "7bc94baa71ade05764f5d5b4e37729139213b090",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java b/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\nindex 980e476..de646ad 100644\n--- a/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\n+++ b/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\n@@ -251,9 +251,9 @@\n \n         SearchRequestBuilder srb;\n         if (filter == null) {\n-            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         } else {\n-            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         }\n \n         FilterAggregationBuilder builder = AggregationBuilders.filter(AGG_FILTER)\n@@ -294,9 +294,9 @@\n \n         SearchRequestBuilder srb;\n         if (filter == null) {\n-            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         } else {\n-            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         }\n \n \n@@ -378,9 +378,9 @@\n         SearchRequestBuilder srb;\n \n         if (filter == null) {\n-            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         } else {\n-            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         }\n \n         FilterAggregationBuilder builder = AggregationBuilders.filter(AGG_FILTER)\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 299,
    "bugNodeStartChar": 12491,
    "bugNodeLength": 111,
    "fixLineNum": 299,
    "fixNodeStartChar": 12491,
    "fixNodeLength": 118,
    "sourceBeforeFix": "filteredSearchRequest(query,filter,IndexHelper.determineAffectedIndices(indexRangeService,deflector,range))",
    "sourceAfterFix": "filteredSearchRequest(query,filter,IndexHelper.determineAffectedIndices(indexRangeService,deflector,range),range)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "a8c6a40fd192cd5692c550a3311db004535cd0a6",
    "fixCommitParentSHA1": "7bc94baa71ade05764f5d5b4e37729139213b090",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java b/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\nindex 980e476..de646ad 100644\n--- a/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\n+++ b/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\n@@ -251,9 +251,9 @@\n \n         SearchRequestBuilder srb;\n         if (filter == null) {\n-            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         } else {\n-            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         }\n \n         FilterAggregationBuilder builder = AggregationBuilders.filter(AGG_FILTER)\n@@ -294,9 +294,9 @@\n \n         SearchRequestBuilder srb;\n         if (filter == null) {\n-            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         } else {\n-            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         }\n \n \n@@ -378,9 +378,9 @@\n         SearchRequestBuilder srb;\n \n         if (filter == null) {\n-            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         } else {\n-            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         }\n \n         FilterAggregationBuilder builder = AggregationBuilders.filter(AGG_FILTER)\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 381,
    "bugNodeStartChar": 15798,
    "bugNodeLength": 103,
    "fixLineNum": 381,
    "fixNodeStartChar": 15798,
    "fixNodeLength": 110,
    "sourceBeforeFix": "standardSearchRequest(query,IndexHelper.determineAffectedIndices(indexRangeService,deflector,range))",
    "sourceAfterFix": "standardSearchRequest(query,IndexHelper.determineAffectedIndices(indexRangeService,deflector,range),range)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "a8c6a40fd192cd5692c550a3311db004535cd0a6",
    "fixCommitParentSHA1": "7bc94baa71ade05764f5d5b4e37729139213b090",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java b/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\nindex 980e476..de646ad 100644\n--- a/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\n+++ b/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\n@@ -251,9 +251,9 @@\n \n         SearchRequestBuilder srb;\n         if (filter == null) {\n-            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         } else {\n-            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         }\n \n         FilterAggregationBuilder builder = AggregationBuilders.filter(AGG_FILTER)\n@@ -294,9 +294,9 @@\n \n         SearchRequestBuilder srb;\n         if (filter == null) {\n-            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         } else {\n-            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         }\n \n \n@@ -378,9 +378,9 @@\n         SearchRequestBuilder srb;\n \n         if (filter == null) {\n-            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         } else {\n-            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         }\n \n         FilterAggregationBuilder builder = AggregationBuilders.filter(AGG_FILTER)\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 383,
    "bugNodeStartChar": 15938,
    "bugNodeLength": 111,
    "fixLineNum": 383,
    "fixNodeStartChar": 15938,
    "fixNodeLength": 118,
    "sourceBeforeFix": "filteredSearchRequest(query,filter,IndexHelper.determineAffectedIndices(indexRangeService,deflector,range))",
    "sourceAfterFix": "filteredSearchRequest(query,filter,IndexHelper.determineAffectedIndices(indexRangeService,deflector,range),range)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "a41f4fbfcbbcf4b7e075666e2897271b7c8fa34e",
    "fixCommitParentSHA1": "da6c12665da3d2a785ad29a15583d1de55b5ef3f",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/streams/StreamServiceImpl.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/streams/StreamServiceImpl.java b/graylog2-server/src/main/java/org/graylog2/streams/StreamServiceImpl.java\nindex 1c4645e..93c744a 100644\n--- a/graylog2-server/src/main/java/org/graylog2/streams/StreamServiceImpl.java\n+++ b/graylog2-server/src/main/java/org/graylog2/streams/StreamServiceImpl.java\n@@ -323,8 +323,7 @@\n         DBObject modify = new BasicDBObject(\"$pull\", new BasicDBObject(StreamImpl.FIELD_OUTPUTS, outputId));\n \n         collection(StreamImpl.class).update(\n-                match,\n-                modify\n+                match, modify, false, true\n         );\n     }\n }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 325,
    "bugNodeStartChar": 12321,
    "bugNodeLength": 92,
    "fixLineNum": 325,
    "fixNodeStartChar": 12321,
    "fixNodeLength": 89,
    "sourceBeforeFix": "collection(StreamImpl.class).update(match,modify)",
    "sourceAfterFix": "collection(StreamImpl.class).update(match,modify,false,true)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "31a360700bc11b55dc64e89c7b6f8b660b50bddb",
    "fixCommitParentSHA1": "561080e0f19c42999d9036fa12a988b450ffabe1",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/rest/resources/search/SearchResource.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/rest/resources/search/SearchResource.java b/graylog2-server/src/main/java/org/graylog2/rest/resources/search/SearchResource.java\nindex 0fa4eb9..9a93590 100644\n--- a/graylog2-server/src/main/java/org/graylog2/rest/resources/search/SearchResource.java\n+++ b/graylog2-server/src/main/java/org/graylog2/rest/resources/search/SearchResource.java\n@@ -161,7 +161,7 @@\n     }\n \n     protected List<ResultMessageSummary> resultMessageListtoValueList(List<ResultMessage> resultMessages) {\n-        final List<ResultMessageSummary> result = Lists.newArrayListWithExpectedSize(resultMessages.size());\n+        final List<ResultMessageSummary> result = Lists.newArrayListWithCapacity(resultMessages.size());\n \n         for (ResultMessage resultMessage : resultMessages) {\n             result.add(ResultMessageSummary.create(resultMessage.highlightRanges, resultMessage.getMessage(), resultMessage.getIndex()));\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 164,
    "bugNodeStartChar": 7127,
    "bugNodeLength": 57,
    "fixLineNum": 164,
    "fixNodeStartChar": 7127,
    "fixNodeLength": 53,
    "sourceBeforeFix": "Lists.newArrayListWithExpectedSize(resultMessages.size())",
    "sourceAfterFix": "Lists.newArrayListWithCapacity(resultMessages.size())"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "31a360700bc11b55dc64e89c7b6f8b660b50bddb",
    "fixCommitParentSHA1": "561080e0f19c42999d9036fa12a988b450ffabe1",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/rest/resources/search/SearchResource.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/rest/resources/search/SearchResource.java b/graylog2-server/src/main/java/org/graylog2/rest/resources/search/SearchResource.java\nindex 0fa4eb9..9a93590 100644\n--- a/graylog2-server/src/main/java/org/graylog2/rest/resources/search/SearchResource.java\n+++ b/graylog2-server/src/main/java/org/graylog2/rest/resources/search/SearchResource.java\n@@ -161,7 +161,7 @@\n     }\n \n     protected List<ResultMessageSummary> resultMessageListtoValueList(List<ResultMessage> resultMessages) {\n-        final List<ResultMessageSummary> result = Lists.newArrayListWithExpectedSize(resultMessages.size());\n+        final List<ResultMessageSummary> result = Lists.newArrayListWithCapacity(resultMessages.size());\n \n         for (ResultMessage resultMessage : resultMessages) {\n             result.add(ResultMessageSummary.create(resultMessage.highlightRanges, resultMessage.getMessage(), resultMessage.getIndex()));\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 164,
    "bugNodeStartChar": 7127,
    "bugNodeLength": 57,
    "fixLineNum": 164,
    "fixNodeStartChar": 7127,
    "fixNodeLength": 53,
    "sourceBeforeFix": "Lists.newArrayListWithExpectedSize(resultMessages.size())",
    "sourceAfterFix": "Lists.newArrayListWithCapacity(resultMessages.size())"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "6d5046fb932f43fd55f7e5b53ae27a724681429f",
    "fixCommitParentSHA1": "48d1c2b6c76a964bfcc51eca353677e0448d7125",
    "bugFilePath": "graylog2-inputs/src/main/java/org/graylog2/inputs/transports/SyslogTcpTransport.java",
    "fixPatch": "diff --git a/graylog2-inputs/src/main/java/org/graylog2/inputs/transports/SyslogTcpTransport.java b/graylog2-inputs/src/main/java/org/graylog2/inputs/transports/SyslogTcpTransport.java\nindex 805cdb1..a4c043b 100644\n--- a/graylog2-inputs/src/main/java/org/graylog2/inputs/transports/SyslogTcpTransport.java\n+++ b/graylog2-inputs/src/main/java/org/graylog2/inputs/transports/SyslogTcpTransport.java\n@@ -62,7 +62,7 @@\n         return new InstrumentedExecutorService(\n                 Executors.newCachedThreadPool(threadFactory),\n                 metricRegistry,\n-                name(HttpTransport.class, executorName, \"executor-service\"));\n+                name(SyslogTcpTransport.class, executorName, \"executor-service\"));\n     }\n \n \n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 65,
    "bugNodeStartChar": 2945,
    "bugNodeLength": 19,
    "fixLineNum": 65,
    "fixNodeStartChar": 2945,
    "fixNodeLength": 24,
    "sourceBeforeFix": "HttpTransport.class",
    "sourceAfterFix": "SyslogTcpTransport.class"
  },
  {
    "bugType": "MORE_SPECIFIC_IF",
    "fixCommitSHA1": "3a4bffab632bcb1a51b945c448ba4323d0d91519",
    "fixCommitParentSHA1": "2ae62a45ec84f7b2f6f544f5c6b48ee0ed62da99",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/rest/resources/tools/RegexTesterResource.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/rest/resources/tools/RegexTesterResource.java b/graylog2-server/src/main/java/org/graylog2/rest/resources/tools/RegexTesterResource.java\nindex 1b2aedf..eb1ba2d 100644\n--- a/graylog2-server/src/main/java/org/graylog2/rest/resources/tools/RegexTesterResource.java\n+++ b/graylog2-server/src/main/java/org/graylog2/rest/resources/tools/RegexTesterResource.java\n@@ -44,7 +44,7 @@\n \n         // Get the first matched group.\n         final RegexTesterResponse.Match match;\n-        if (matcher.groupCount() > 0) {\n+        if (matched && matcher.groupCount() > 0) {\n             match = RegexTesterResponse.Match.create(matcher.group(1), matcher.start(1), matcher.end(1));\n         } else {\n             match = null;\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 47,
    "bugNodeStartChar": 1846,
    "bugNodeLength": 24,
    "fixLineNum": 47,
    "fixNodeStartChar": 1846,
    "fixNodeLength": 35,
    "sourceBeforeFix": "matcher.groupCount() > 0",
    "sourceAfterFix": "matched && matcher.groupCount() > 0"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "9d6f4a82fa1e6e132e712460c3170ca4db5bc9a3",
    "fixCommitParentSHA1": "6c2e207d16744c223dc283cc6accdb74692aec7b",
    "bugFilePath": "app/controllers/IndicesController.java",
    "fixPatch": "diff --git a/app/controllers/IndicesController.java b/app/controllers/IndicesController.java\nindex ec9fff8..bc9fa7c 100644\n--- a/app/controllers/IndicesController.java\n+++ b/app/controllers/IndicesController.java\n@@ -99,7 +99,7 @@\n             return ok(views.html.system.indices.failures.render(\n                     currentUser(),\n                     bc,\n-                    clusterService.getIndexerFailures(0,0).total,\n+                    clusterService.getIndexerFailures(1,0).total,\n                     page\n             ));\n         } catch (APIException e) {\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 102,
    "bugNodeStartChar": 4169,
    "bugNodeLength": 38,
    "fixLineNum": 102,
    "fixNodeStartChar": 4169,
    "fixNodeLength": 38,
    "sourceBeforeFix": "clusterService.getIndexerFailures(0,0)",
    "sourceAfterFix": "clusterService.getIndexerFailures(1,0)"
  },
  {
    "bugType": "SWAP_BOOLEAN_LITERAL",
    "fixCommitSHA1": "281abfdf91e6687a40fa98c20a35627372a0d6c7",
    "fixCommitParentSHA1": "7f2b5cc88c0ff1656d985c1f29bc4faeedd66f03",
    "bugFilePath": "graylog2-plugin-interfaces/src/main/java/org/graylog2/plugin/BaseConfiguration.java",
    "fixPatch": "diff --git a/graylog2-plugin-interfaces/src/main/java/org/graylog2/plugin/BaseConfiguration.java b/graylog2-plugin-interfaces/src/main/java/org/graylog2/plugin/BaseConfiguration.java\nindex 03a8f46..664b2c0 100644\n--- a/graylog2-plugin-interfaces/src/main/java/org/graylog2/plugin/BaseConfiguration.java\n+++ b/graylog2-plugin-interfaces/src/main/java/org/graylog2/plugin/BaseConfiguration.java\n@@ -112,7 +112,7 @@\n     private int udpRecvBufferSizes = 1048576;\n \n     @Parameter(\"message_journal_enabled\")\n-    private boolean messageJournalEnabled = false;\n+    private boolean messageJournalEnabled = true;\n \n     @Parameter(\"inputbuffer_processors\")\n     private int inputbufferProcessors = 2;\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 115,
    "bugNodeStartChar": 4693,
    "bugNodeLength": 29,
    "fixLineNum": 115,
    "fixNodeStartChar": 4693,
    "fixNodeLength": 28,
    "sourceBeforeFix": "messageJournalEnabled=false",
    "sourceAfterFix": "messageJournalEnabled=true"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "536a8fa49fc8ce69e42af6004dc328ddc2ded045",
    "fixCommitParentSHA1": "acacb438d9c5ef8b6efa1d736d8e3db58385ce6c",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/rest/resources/alarmcallbacks/AlarmCallbackResource.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/rest/resources/alarmcallbacks/AlarmCallbackResource.java b/graylog2-server/src/main/java/org/graylog2/rest/resources/alarmcallbacks/AlarmCallbackResource.java\nindex 8bdb154..cfb7bf4 100644\n--- a/graylog2-server/src/main/java/org/graylog2/rest/resources/alarmcallbacks/AlarmCallbackResource.java\n+++ b/graylog2-server/src/main/java/org/graylog2/rest/resources/alarmcallbacks/AlarmCallbackResource.java\n@@ -141,7 +141,7 @@\n         final Map<String, String> result = ImmutableMap.of(\"alarmcallback_id\", id);\n         final URI alarmCallbackUri = UriBuilder.fromResource(AlarmCallbackResource.class)\n                 .path(\"{alarmCallbackId}\")\n-                .build(id);\n+                .build(streamid, id);\n \n         return Response.created(alarmCallbackUri).entity(result).build();\n     }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 142,
    "bugNodeStartChar": 6370,
    "bugNodeLength": 122,
    "fixLineNum": 142,
    "fixNodeStartChar": 6370,
    "fixNodeLength": 132,
    "sourceBeforeFix": "UriBuilder.fromResource(AlarmCallbackResource.class).path(\"{alarmCallbackId}\").build(id)",
    "sourceAfterFix": "UriBuilder.fromResource(AlarmCallbackResource.class).path(\"{alarmCallbackId}\").build(streamid,id)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "536a8fa49fc8ce69e42af6004dc328ddc2ded045",
    "fixCommitParentSHA1": "acacb438d9c5ef8b6efa1d736d8e3db58385ce6c",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/rest/resources/alarmcallbacks/AlarmCallbackResource.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/rest/resources/alarmcallbacks/AlarmCallbackResource.java b/graylog2-server/src/main/java/org/graylog2/rest/resources/alarmcallbacks/AlarmCallbackResource.java\nindex 8bdb154..cfb7bf4 100644\n--- a/graylog2-server/src/main/java/org/graylog2/rest/resources/alarmcallbacks/AlarmCallbackResource.java\n+++ b/graylog2-server/src/main/java/org/graylog2/rest/resources/alarmcallbacks/AlarmCallbackResource.java\n@@ -141,7 +141,7 @@\n         final Map<String, String> result = ImmutableMap.of(\"alarmcallback_id\", id);\n         final URI alarmCallbackUri = UriBuilder.fromResource(AlarmCallbackResource.class)\n                 .path(\"{alarmCallbackId}\")\n-                .build(id);\n+                .build(streamid, id);\n \n         return Response.created(alarmCallbackUri).entity(result).build();\n     }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 142,
    "bugNodeStartChar": 6370,
    "bugNodeLength": 122,
    "fixLineNum": 142,
    "fixNodeStartChar": 6370,
    "fixNodeLength": 132,
    "sourceBeforeFix": "UriBuilder.fromResource(AlarmCallbackResource.class).path(\"{alarmCallbackId}\").build(id)",
    "sourceAfterFix": "UriBuilder.fromResource(AlarmCallbackResource.class).path(\"{alarmCallbackId}\").build(streamid,id)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "536a8fa49fc8ce69e42af6004dc328ddc2ded045",
    "fixCommitParentSHA1": "acacb438d9c5ef8b6efa1d736d8e3db58385ce6c",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/rest/resources/streams/alerts/StreamAlertReceiverResource.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/rest/resources/streams/alerts/StreamAlertReceiverResource.java b/graylog2-server/src/main/java/org/graylog2/rest/resources/streams/alerts/StreamAlertReceiverResource.java\nindex 2960e7a..fd877f7 100644\n--- a/graylog2-server/src/main/java/org/graylog2/rest/resources/streams/alerts/StreamAlertReceiverResource.java\n+++ b/graylog2-server/src/main/java/org/graylog2/rest/resources/streams/alerts/StreamAlertReceiverResource.java\n@@ -106,7 +106,7 @@\n         final Stream stream = streamService.load(streamid);\n \n         // TODO What's the actual URI of the created resource?\n-        final URI streamAlertUri = UriBuilder.fromResource(StreamAlertResource.class).build();\n+        final URI streamAlertUri = UriBuilder.fromResource(StreamAlertResource.class).build(streamid);\n \n         // Maybe the list already contains this receiver?\n         if (stream.getAlertReceivers().containsKey(type) || stream.getAlertReceivers().get(type) != null) {\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 109,
    "bugNodeStartChar": 4925,
    "bugNodeLength": 58,
    "fixLineNum": 109,
    "fixNodeStartChar": 4925,
    "fixNodeLength": 66,
    "sourceBeforeFix": "UriBuilder.fromResource(StreamAlertResource.class).build()",
    "sourceAfterFix": "UriBuilder.fromResource(StreamAlertResource.class).build(streamid)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "acacb438d9c5ef8b6efa1d736d8e3db58385ce6c",
    "fixCommitParentSHA1": "c86fd7dffc478989a683775f771ba6bc62dc0dcc",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/rest/resources/streams/alerts/StreamAlertConditionResource.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/rest/resources/streams/alerts/StreamAlertConditionResource.java b/graylog2-server/src/main/java/org/graylog2/rest/resources/streams/alerts/StreamAlertConditionResource.java\nindex a895cc1..299915a 100644\n--- a/graylog2-server/src/main/java/org/graylog2/rest/resources/streams/alerts/StreamAlertConditionResource.java\n+++ b/graylog2-server/src/main/java/org/graylog2/rest/resources/streams/alerts/StreamAlertConditionResource.java\n@@ -101,7 +101,7 @@\n         final Map<String, String> result = ImmutableMap.of(\"alert_condition_id\", alertCondition.getId());\n         final URI alertConditionUri = UriBuilder.fromResource(StreamAlertConditionResource.class)\n                 .path(\"{conditionId}\")\n-                .build(alertCondition.getId());\n+                .build(stream.getId(), alertCondition.getId());\n \n         return Response.created(alertConditionUri).entity(result).build();\n     }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 102,
    "bugNodeStartChar": 4311,
    "bugNodeLength": 145,
    "fixLineNum": 102,
    "fixNodeStartChar": 4311,
    "fixNodeLength": 161,
    "sourceBeforeFix": "UriBuilder.fromResource(StreamAlertConditionResource.class).path(\"{conditionId}\").build(alertCondition.getId())",
    "sourceAfterFix": "UriBuilder.fromResource(StreamAlertConditionResource.class).path(\"{conditionId}\").build(stream.getId(),alertCondition.getId())"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "7a90cfe13f0b030f6e091154c1d0091c685039f1",
    "fixCommitParentSHA1": "dcab2405bf679ffa4d9b569ee44b9a7bdce5b04f",
    "bugFilePath": "graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java",
    "fixPatch": "diff --git a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java\nindex e76f579..f4a31ca 100644\n--- a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java\n+++ b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java\n@@ -132,7 +132,7 @@\n     public BufferInfo getBufferInfo() {\n         try {\n             return new BufferInfo(\n-                    api.path(routes.BufferResource().utilization(), BuffersResponse.class)\n+                    api.path(routes.BuffersResource().utilization(), BuffersResponse.class)\n                             .node(this)\n                             .execute());\n         } catch (Exception e) {\n@@ -143,7 +143,7 @@\n \n     public BufferClassesResponse getBufferClasses() {\n         try {\n-            return api.path(routes.BufferResource().getBufferClasses(), BufferClassesResponse.class).node(this).execute();\n+            return api.path(routes.BuffersResource().getBufferClasses(), BufferClassesResponse.class).node(this).execute();\n         } catch (Exception e) {\n             LOG.error(\"Unable to read buffer class names from node \" + this, e);\n         }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 135,
    "bugNodeStartChar": 5421,
    "bugNodeLength": 23,
    "fixLineNum": 135,
    "fixNodeStartChar": 5421,
    "fixNodeLength": 24,
    "sourceBeforeFix": "routes.BufferResource()",
    "sourceAfterFix": "routes.BuffersResource()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "7a90cfe13f0b030f6e091154c1d0091c685039f1",
    "fixCommitParentSHA1": "dcab2405bf679ffa4d9b569ee44b9a7bdce5b04f",
    "bugFilePath": "graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java",
    "fixPatch": "diff --git a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java\nindex e76f579..f4a31ca 100644\n--- a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java\n+++ b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java\n@@ -132,7 +132,7 @@\n     public BufferInfo getBufferInfo() {\n         try {\n             return new BufferInfo(\n-                    api.path(routes.BufferResource().utilization(), BuffersResponse.class)\n+                    api.path(routes.BuffersResource().utilization(), BuffersResponse.class)\n                             .node(this)\n                             .execute());\n         } catch (Exception e) {\n@@ -143,7 +143,7 @@\n \n     public BufferClassesResponse getBufferClasses() {\n         try {\n-            return api.path(routes.BufferResource().getBufferClasses(), BufferClassesResponse.class).node(this).execute();\n+            return api.path(routes.BuffersResource().getBufferClasses(), BufferClassesResponse.class).node(this).execute();\n         } catch (Exception e) {\n             LOG.error(\"Unable to read buffer class names from node \" + this, e);\n         }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 135,
    "bugNodeStartChar": 5421,
    "bugNodeLength": 23,
    "fixLineNum": 135,
    "fixNodeStartChar": 5421,
    "fixNodeLength": 24,
    "sourceBeforeFix": "routes.BufferResource()",
    "sourceAfterFix": "routes.BuffersResource()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "7a90cfe13f0b030f6e091154c1d0091c685039f1",
    "fixCommitParentSHA1": "dcab2405bf679ffa4d9b569ee44b9a7bdce5b04f",
    "bugFilePath": "graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java",
    "fixPatch": "diff --git a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java\nindex e76f579..f4a31ca 100644\n--- a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java\n+++ b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java\n@@ -132,7 +132,7 @@\n     public BufferInfo getBufferInfo() {\n         try {\n             return new BufferInfo(\n-                    api.path(routes.BufferResource().utilization(), BuffersResponse.class)\n+                    api.path(routes.BuffersResource().utilization(), BuffersResponse.class)\n                             .node(this)\n                             .execute());\n         } catch (Exception e) {\n@@ -143,7 +143,7 @@\n \n     public BufferClassesResponse getBufferClasses() {\n         try {\n-            return api.path(routes.BufferResource().getBufferClasses(), BufferClassesResponse.class).node(this).execute();\n+            return api.path(routes.BuffersResource().getBufferClasses(), BufferClassesResponse.class).node(this).execute();\n         } catch (Exception e) {\n             LOG.error(\"Unable to read buffer class names from node \" + this, e);\n         }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 146,
    "bugNodeStartChar": 5804,
    "bugNodeLength": 23,
    "fixLineNum": 146,
    "fixNodeStartChar": 5804,
    "fixNodeLength": 24,
    "sourceBeforeFix": "routes.BufferResource()",
    "sourceAfterFix": "routes.BuffersResource()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "7a90cfe13f0b030f6e091154c1d0091c685039f1",
    "fixCommitParentSHA1": "dcab2405bf679ffa4d9b569ee44b9a7bdce5b04f",
    "bugFilePath": "graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java",
    "fixPatch": "diff --git a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java\nindex e76f579..f4a31ca 100644\n--- a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java\n+++ b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java\n@@ -132,7 +132,7 @@\n     public BufferInfo getBufferInfo() {\n         try {\n             return new BufferInfo(\n-                    api.path(routes.BufferResource().utilization(), BuffersResponse.class)\n+                    api.path(routes.BuffersResource().utilization(), BuffersResponse.class)\n                             .node(this)\n                             .execute());\n         } catch (Exception e) {\n@@ -143,7 +143,7 @@\n \n     public BufferClassesResponse getBufferClasses() {\n         try {\n-            return api.path(routes.BufferResource().getBufferClasses(), BufferClassesResponse.class).node(this).execute();\n+            return api.path(routes.BuffersResource().getBufferClasses(), BufferClassesResponse.class).node(this).execute();\n         } catch (Exception e) {\n             LOG.error(\"Unable to read buffer class names from node \" + this, e);\n         }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 146,
    "bugNodeStartChar": 5804,
    "bugNodeLength": 23,
    "fixLineNum": 146,
    "fixNodeStartChar": 5804,
    "fixNodeLength": 24,
    "sourceBeforeFix": "routes.BufferResource()",
    "sourceAfterFix": "routes.BuffersResource()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "bc1adbde03308cb046dbc14e562a85b5e42d6ed1",
    "fixCommitParentSHA1": "4e76f946c28b6ce828fc6c1a6f8d53678a71124b",
    "bugFilePath": "graylog2-shared/src/main/java/org/graylog2/shared/inputs/InputRegistry.java",
    "fixPatch": "diff --git a/graylog2-shared/src/main/java/org/graylog2/shared/inputs/InputRegistry.java b/graylog2-shared/src/main/java/org/graylog2/shared/inputs/InputRegistry.java\nindex 0a817cd..017cb2c 100644\n--- a/graylog2-shared/src/main/java/org/graylog2/shared/inputs/InputRegistry.java\n+++ b/graylog2-shared/src/main/java/org/graylog2/shared/inputs/InputRegistry.java\n@@ -92,7 +92,7 @@\n         if (inputState != null)\n             inputState.setState(IOState.Type.TERMINATED);\n \n-        return super.remove(input);\n+        return super.remove(inputState);\n     }\n \n     public boolean remove(IOState<MessageInput> inputState) {\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 95,
    "bugNodeStartChar": 2990,
    "bugNodeLength": 19,
    "fixLineNum": 95,
    "fixNodeStartChar": 2990,
    "fixNodeLength": 24,
    "sourceBeforeFix": "super.remove(input)",
    "sourceAfterFix": "super.remove(inputState)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "f47d4f07970a09a1aaf5b0e94eb5fe53c2e4b14f",
    "fixCommitParentSHA1": "a34010a5cf5a3df842b9ddb7951f556076bc1f3f",
    "bugFilePath": "graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java",
    "fixPatch": "diff --git a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java\nindex 38b5aaf..2056472 100644\n--- a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java\n+++ b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java\n@@ -285,11 +285,11 @@\n     }\n \n     public Map<String, String> getInputTypes() throws IOException, APIException {\n-        return api.path(routes.InputsResource().types(), InputTypesResponse.class).node(this).execute().types;\n+        return api.path(routes.InputTypesResource().types(), InputTypesResponse.class).node(this).execute().types;\n     }\n \n     public InputTypeSummaryResponse getInputTypeInformation(String type) throws IOException, APIException {\n-        return api.path(routes.InputsResource().info(type), InputTypeSummaryResponse.class).node(this).execute();\n+        return api.path(routes.InputTypesResource().info(type), InputTypeSummaryResponse.class).node(this).execute();\n     }\n \n     public Map<String, InputTypeSummaryResponse> getAllInputTypeInformation() throws IOException, APIException {\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 288,
    "bugNodeStartChar": 10963,
    "bugNodeLength": 23,
    "fixLineNum": 288,
    "fixNodeStartChar": 10963,
    "fixNodeLength": 27,
    "sourceBeforeFix": "routes.InputsResource()",
    "sourceAfterFix": "routes.InputTypesResource()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "f47d4f07970a09a1aaf5b0e94eb5fe53c2e4b14f",
    "fixCommitParentSHA1": "a34010a5cf5a3df842b9ddb7951f556076bc1f3f",
    "bugFilePath": "graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java",
    "fixPatch": "diff --git a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java\nindex 38b5aaf..2056472 100644\n--- a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java\n+++ b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java\n@@ -285,11 +285,11 @@\n     }\n \n     public Map<String, String> getInputTypes() throws IOException, APIException {\n-        return api.path(routes.InputsResource().types(), InputTypesResponse.class).node(this).execute().types;\n+        return api.path(routes.InputTypesResource().types(), InputTypesResponse.class).node(this).execute().types;\n     }\n \n     public InputTypeSummaryResponse getInputTypeInformation(String type) throws IOException, APIException {\n-        return api.path(routes.InputsResource().info(type), InputTypeSummaryResponse.class).node(this).execute();\n+        return api.path(routes.InputTypesResource().info(type), InputTypeSummaryResponse.class).node(this).execute();\n     }\n \n     public Map<String, InputTypeSummaryResponse> getAllInputTypeInformation() throws IOException, APIException {\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 288,
    "bugNodeStartChar": 10963,
    "bugNodeLength": 23,
    "fixLineNum": 288,
    "fixNodeStartChar": 10963,
    "fixNodeLength": 27,
    "sourceBeforeFix": "routes.InputsResource()",
    "sourceAfterFix": "routes.InputTypesResource()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "f47d4f07970a09a1aaf5b0e94eb5fe53c2e4b14f",
    "fixCommitParentSHA1": "a34010a5cf5a3df842b9ddb7951f556076bc1f3f",
    "bugFilePath": "graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java",
    "fixPatch": "diff --git a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java\nindex 38b5aaf..2056472 100644\n--- a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java\n+++ b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java\n@@ -285,11 +285,11 @@\n     }\n \n     public Map<String, String> getInputTypes() throws IOException, APIException {\n-        return api.path(routes.InputsResource().types(), InputTypesResponse.class).node(this).execute().types;\n+        return api.path(routes.InputTypesResource().types(), InputTypesResponse.class).node(this).execute().types;\n     }\n \n     public InputTypeSummaryResponse getInputTypeInformation(String type) throws IOException, APIException {\n-        return api.path(routes.InputsResource().info(type), InputTypeSummaryResponse.class).node(this).execute();\n+        return api.path(routes.InputTypesResource().info(type), InputTypeSummaryResponse.class).node(this).execute();\n     }\n \n     public Map<String, InputTypeSummaryResponse> getAllInputTypeInformation() throws IOException, APIException {\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 292,
    "bugNodeStartChar": 11189,
    "bugNodeLength": 23,
    "fixLineNum": 292,
    "fixNodeStartChar": 11189,
    "fixNodeLength": 27,
    "sourceBeforeFix": "routes.InputsResource()",
    "sourceAfterFix": "routes.InputTypesResource()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "f47d4f07970a09a1aaf5b0e94eb5fe53c2e4b14f",
    "fixCommitParentSHA1": "a34010a5cf5a3df842b9ddb7951f556076bc1f3f",
    "bugFilePath": "graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java",
    "fixPatch": "diff --git a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java\nindex 38b5aaf..2056472 100644\n--- a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java\n+++ b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java\n@@ -285,11 +285,11 @@\n     }\n \n     public Map<String, String> getInputTypes() throws IOException, APIException {\n-        return api.path(routes.InputsResource().types(), InputTypesResponse.class).node(this).execute().types;\n+        return api.path(routes.InputTypesResource().types(), InputTypesResponse.class).node(this).execute().types;\n     }\n \n     public InputTypeSummaryResponse getInputTypeInformation(String type) throws IOException, APIException {\n-        return api.path(routes.InputsResource().info(type), InputTypeSummaryResponse.class).node(this).execute();\n+        return api.path(routes.InputTypesResource().info(type), InputTypeSummaryResponse.class).node(this).execute();\n     }\n \n     public Map<String, InputTypeSummaryResponse> getAllInputTypeInformation() throws IOException, APIException {\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 292,
    "bugNodeStartChar": 11189,
    "bugNodeLength": 23,
    "fixLineNum": 292,
    "fixNodeStartChar": 11189,
    "fixNodeLength": 27,
    "sourceBeforeFix": "routes.InputsResource()",
    "sourceAfterFix": "routes.InputTypesResource()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "a161d8d1924d1fb49a4d229370d998be1493957c",
    "fixCommitParentSHA1": "2226b56a998b547dcd7363212f64c6348e067175",
    "bugFilePath": "graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java",
    "fixPatch": "diff --git a/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java b/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java\nindex 0edf0ff..a9d439f 100644\n--- a/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java\n+++ b/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java\n@@ -366,7 +366,7 @@\n     protected void flushDirtyLogs() {\n         log.debug(\"Checking for dirty logs to flush...\");\n \n-        final Set<Map.Entry<TopicAndPartition, Log>> entries = JavaConversions.asMap(logManager.logsByTopicPartition()).entrySet();\n+        final Set<Map.Entry<TopicAndPartition, Log>> entries = JavaConversions.mapAsJavaMap(logManager.logsByTopicPartition()).entrySet();\n         for (final Map.Entry<TopicAndPartition, Log> topicAndPartitionLogEntry : entries) {\n             final TopicAndPartition topicAndPartition = topicAndPartitionLogEntry.getKey();\n             final Log kafkaLog = topicAndPartitionLogEntry.getValue();\n@@ -459,7 +459,7 @@\n                 loggerForCleaner.debug(\"Beginning log cleanup\");\n                 int total = 0;\n                 final Timer.Context ctx = new Timer().time();\n-                for (final Log kafkaLog : JavaConversions.asIterable(logManager.allLogs())) {\n+                for (final Log kafkaLog : JavaConversions.asJavaIterable(logManager.allLogs())) {\n                     if (kafkaLog.config().compact()) continue;\n                     loggerForCleaner.debug(\"Garbage collecting {}\", kafkaLog.name());\n                     total += cleanupExpiredSegments(kafkaLog) +\n@@ -535,7 +535,7 @@\n             // so we have to get a global view.\n             final long committedOffset = KafkaJournal.this.committedOffset.get();\n             final HashSet<LogSegment> logSegments = Sets.newHashSet(\n-                    JavaConversions.asIterable(kafkaLog.logSegments(committedOffset, Long.MAX_VALUE))\n+                    JavaConversions.asJavaIterable(kafkaLog.logSegments(committedOffset, Long.MAX_VALUE))\n             );\n             loggerForCleaner.debug(\"[cleanup-committed] Keeping segments {}\", logSegments);\n             return kafkaLog.deleteOldSegments(new AbstractFunction1<LogSegment, Object>() {\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 369,
    "bugNodeStartChar": 17596,
    "bugNodeLength": 56,
    "fixLineNum": 369,
    "fixNodeStartChar": 17596,
    "fixNodeLength": 63,
    "sourceBeforeFix": "JavaConversions.asMap(logManager.logsByTopicPartition())",
    "sourceAfterFix": "JavaConversions.mapAsJavaMap(logManager.logsByTopicPartition())"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "a161d8d1924d1fb49a4d229370d998be1493957c",
    "fixCommitParentSHA1": "2226b56a998b547dcd7363212f64c6348e067175",
    "bugFilePath": "graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java",
    "fixPatch": "diff --git a/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java b/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java\nindex 0edf0ff..a9d439f 100644\n--- a/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java\n+++ b/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java\n@@ -366,7 +366,7 @@\n     protected void flushDirtyLogs() {\n         log.debug(\"Checking for dirty logs to flush...\");\n \n-        final Set<Map.Entry<TopicAndPartition, Log>> entries = JavaConversions.asMap(logManager.logsByTopicPartition()).entrySet();\n+        final Set<Map.Entry<TopicAndPartition, Log>> entries = JavaConversions.mapAsJavaMap(logManager.logsByTopicPartition()).entrySet();\n         for (final Map.Entry<TopicAndPartition, Log> topicAndPartitionLogEntry : entries) {\n             final TopicAndPartition topicAndPartition = topicAndPartitionLogEntry.getKey();\n             final Log kafkaLog = topicAndPartitionLogEntry.getValue();\n@@ -459,7 +459,7 @@\n                 loggerForCleaner.debug(\"Beginning log cleanup\");\n                 int total = 0;\n                 final Timer.Context ctx = new Timer().time();\n-                for (final Log kafkaLog : JavaConversions.asIterable(logManager.allLogs())) {\n+                for (final Log kafkaLog : JavaConversions.asJavaIterable(logManager.allLogs())) {\n                     if (kafkaLog.config().compact()) continue;\n                     loggerForCleaner.debug(\"Garbage collecting {}\", kafkaLog.name());\n                     total += cleanupExpiredSegments(kafkaLog) +\n@@ -535,7 +535,7 @@\n             // so we have to get a global view.\n             final long committedOffset = KafkaJournal.this.committedOffset.get();\n             final HashSet<LogSegment> logSegments = Sets.newHashSet(\n-                    JavaConversions.asIterable(kafkaLog.logSegments(committedOffset, Long.MAX_VALUE))\n+                    JavaConversions.asJavaIterable(kafkaLog.logSegments(committedOffset, Long.MAX_VALUE))\n             );\n             loggerForCleaner.debug(\"[cleanup-committed] Keeping segments {}\", logSegments);\n             return kafkaLog.deleteOldSegments(new AbstractFunction1<LogSegment, Object>() {\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 369,
    "bugNodeStartChar": 17596,
    "bugNodeLength": 56,
    "fixLineNum": 369,
    "fixNodeStartChar": 17596,
    "fixNodeLength": 63,
    "sourceBeforeFix": "JavaConversions.asMap(logManager.logsByTopicPartition())",
    "sourceAfterFix": "JavaConversions.mapAsJavaMap(logManager.logsByTopicPartition())"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "a161d8d1924d1fb49a4d229370d998be1493957c",
    "fixCommitParentSHA1": "2226b56a998b547dcd7363212f64c6348e067175",
    "bugFilePath": "graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java",
    "fixPatch": "diff --git a/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java b/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java\nindex 0edf0ff..a9d439f 100644\n--- a/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java\n+++ b/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java\n@@ -366,7 +366,7 @@\n     protected void flushDirtyLogs() {\n         log.debug(\"Checking for dirty logs to flush...\");\n \n-        final Set<Map.Entry<TopicAndPartition, Log>> entries = JavaConversions.asMap(logManager.logsByTopicPartition()).entrySet();\n+        final Set<Map.Entry<TopicAndPartition, Log>> entries = JavaConversions.mapAsJavaMap(logManager.logsByTopicPartition()).entrySet();\n         for (final Map.Entry<TopicAndPartition, Log> topicAndPartitionLogEntry : entries) {\n             final TopicAndPartition topicAndPartition = topicAndPartitionLogEntry.getKey();\n             final Log kafkaLog = topicAndPartitionLogEntry.getValue();\n@@ -459,7 +459,7 @@\n                 loggerForCleaner.debug(\"Beginning log cleanup\");\n                 int total = 0;\n                 final Timer.Context ctx = new Timer().time();\n-                for (final Log kafkaLog : JavaConversions.asIterable(logManager.allLogs())) {\n+                for (final Log kafkaLog : JavaConversions.asJavaIterable(logManager.allLogs())) {\n                     if (kafkaLog.config().compact()) continue;\n                     loggerForCleaner.debug(\"Garbage collecting {}\", kafkaLog.name());\n                     total += cleanupExpiredSegments(kafkaLog) +\n@@ -535,7 +535,7 @@\n             // so we have to get a global view.\n             final long committedOffset = KafkaJournal.this.committedOffset.get();\n             final HashSet<LogSegment> logSegments = Sets.newHashSet(\n-                    JavaConversions.asIterable(kafkaLog.logSegments(committedOffset, Long.MAX_VALUE))\n+                    JavaConversions.asJavaIterable(kafkaLog.logSegments(committedOffset, Long.MAX_VALUE))\n             );\n             loggerForCleaner.debug(\"[cleanup-committed] Keeping segments {}\", logSegments);\n             return kafkaLog.deleteOldSegments(new AbstractFunction1<LogSegment, Object>() {\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 462,
    "bugNodeStartChar": 21886,
    "bugNodeLength": 48,
    "fixLineNum": 462,
    "fixNodeStartChar": 21886,
    "fixNodeLength": 52,
    "sourceBeforeFix": "JavaConversions.asIterable(logManager.allLogs())",
    "sourceAfterFix": "JavaConversions.asJavaIterable(logManager.allLogs())"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "a161d8d1924d1fb49a4d229370d998be1493957c",
    "fixCommitParentSHA1": "2226b56a998b547dcd7363212f64c6348e067175",
    "bugFilePath": "graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java",
    "fixPatch": "diff --git a/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java b/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java\nindex 0edf0ff..a9d439f 100644\n--- a/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java\n+++ b/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java\n@@ -366,7 +366,7 @@\n     protected void flushDirtyLogs() {\n         log.debug(\"Checking for dirty logs to flush...\");\n \n-        final Set<Map.Entry<TopicAndPartition, Log>> entries = JavaConversions.asMap(logManager.logsByTopicPartition()).entrySet();\n+        final Set<Map.Entry<TopicAndPartition, Log>> entries = JavaConversions.mapAsJavaMap(logManager.logsByTopicPartition()).entrySet();\n         for (final Map.Entry<TopicAndPartition, Log> topicAndPartitionLogEntry : entries) {\n             final TopicAndPartition topicAndPartition = topicAndPartitionLogEntry.getKey();\n             final Log kafkaLog = topicAndPartitionLogEntry.getValue();\n@@ -459,7 +459,7 @@\n                 loggerForCleaner.debug(\"Beginning log cleanup\");\n                 int total = 0;\n                 final Timer.Context ctx = new Timer().time();\n-                for (final Log kafkaLog : JavaConversions.asIterable(logManager.allLogs())) {\n+                for (final Log kafkaLog : JavaConversions.asJavaIterable(logManager.allLogs())) {\n                     if (kafkaLog.config().compact()) continue;\n                     loggerForCleaner.debug(\"Garbage collecting {}\", kafkaLog.name());\n                     total += cleanupExpiredSegments(kafkaLog) +\n@@ -535,7 +535,7 @@\n             // so we have to get a global view.\n             final long committedOffset = KafkaJournal.this.committedOffset.get();\n             final HashSet<LogSegment> logSegments = Sets.newHashSet(\n-                    JavaConversions.asIterable(kafkaLog.logSegments(committedOffset, Long.MAX_VALUE))\n+                    JavaConversions.asJavaIterable(kafkaLog.logSegments(committedOffset, Long.MAX_VALUE))\n             );\n             loggerForCleaner.debug(\"[cleanup-committed] Keeping segments {}\", logSegments);\n             return kafkaLog.deleteOldSegments(new AbstractFunction1<LogSegment, Object>() {\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 462,
    "bugNodeStartChar": 21886,
    "bugNodeLength": 48,
    "fixLineNum": 462,
    "fixNodeStartChar": 21886,
    "fixNodeLength": 52,
    "sourceBeforeFix": "JavaConversions.asIterable(logManager.allLogs())",
    "sourceAfterFix": "JavaConversions.asJavaIterable(logManager.allLogs())"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "a161d8d1924d1fb49a4d229370d998be1493957c",
    "fixCommitParentSHA1": "2226b56a998b547dcd7363212f64c6348e067175",
    "bugFilePath": "graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java",
    "fixPatch": "diff --git a/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java b/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java\nindex 0edf0ff..a9d439f 100644\n--- a/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java\n+++ b/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java\n@@ -366,7 +366,7 @@\n     protected void flushDirtyLogs() {\n         log.debug(\"Checking for dirty logs to flush...\");\n \n-        final Set<Map.Entry<TopicAndPartition, Log>> entries = JavaConversions.asMap(logManager.logsByTopicPartition()).entrySet();\n+        final Set<Map.Entry<TopicAndPartition, Log>> entries = JavaConversions.mapAsJavaMap(logManager.logsByTopicPartition()).entrySet();\n         for (final Map.Entry<TopicAndPartition, Log> topicAndPartitionLogEntry : entries) {\n             final TopicAndPartition topicAndPartition = topicAndPartitionLogEntry.getKey();\n             final Log kafkaLog = topicAndPartitionLogEntry.getValue();\n@@ -459,7 +459,7 @@\n                 loggerForCleaner.debug(\"Beginning log cleanup\");\n                 int total = 0;\n                 final Timer.Context ctx = new Timer().time();\n-                for (final Log kafkaLog : JavaConversions.asIterable(logManager.allLogs())) {\n+                for (final Log kafkaLog : JavaConversions.asJavaIterable(logManager.allLogs())) {\n                     if (kafkaLog.config().compact()) continue;\n                     loggerForCleaner.debug(\"Garbage collecting {}\", kafkaLog.name());\n                     total += cleanupExpiredSegments(kafkaLog) +\n@@ -535,7 +535,7 @@\n             // so we have to get a global view.\n             final long committedOffset = KafkaJournal.this.committedOffset.get();\n             final HashSet<LogSegment> logSegments = Sets.newHashSet(\n-                    JavaConversions.asIterable(kafkaLog.logSegments(committedOffset, Long.MAX_VALUE))\n+                    JavaConversions.asJavaIterable(kafkaLog.logSegments(committedOffset, Long.MAX_VALUE))\n             );\n             loggerForCleaner.debug(\"[cleanup-committed] Keeping segments {}\", logSegments);\n             return kafkaLog.deleteOldSegments(new AbstractFunction1<LogSegment, Object>() {\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 538,
    "bugNodeStartChar": 25767,
    "bugNodeLength": 81,
    "fixLineNum": 538,
    "fixNodeStartChar": 25767,
    "fixNodeLength": 85,
    "sourceBeforeFix": "JavaConversions.asIterable(kafkaLog.logSegments(committedOffset,Long.MAX_VALUE))",
    "sourceAfterFix": "JavaConversions.asJavaIterable(kafkaLog.logSegments(committedOffset,Long.MAX_VALUE))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "a161d8d1924d1fb49a4d229370d998be1493957c",
    "fixCommitParentSHA1": "2226b56a998b547dcd7363212f64c6348e067175",
    "bugFilePath": "graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java",
    "fixPatch": "diff --git a/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java b/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java\nindex 0edf0ff..a9d439f 100644\n--- a/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java\n+++ b/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java\n@@ -366,7 +366,7 @@\n     protected void flushDirtyLogs() {\n         log.debug(\"Checking for dirty logs to flush...\");\n \n-        final Set<Map.Entry<TopicAndPartition, Log>> entries = JavaConversions.asMap(logManager.logsByTopicPartition()).entrySet();\n+        final Set<Map.Entry<TopicAndPartition, Log>> entries = JavaConversions.mapAsJavaMap(logManager.logsByTopicPartition()).entrySet();\n         for (final Map.Entry<TopicAndPartition, Log> topicAndPartitionLogEntry : entries) {\n             final TopicAndPartition topicAndPartition = topicAndPartitionLogEntry.getKey();\n             final Log kafkaLog = topicAndPartitionLogEntry.getValue();\n@@ -459,7 +459,7 @@\n                 loggerForCleaner.debug(\"Beginning log cleanup\");\n                 int total = 0;\n                 final Timer.Context ctx = new Timer().time();\n-                for (final Log kafkaLog : JavaConversions.asIterable(logManager.allLogs())) {\n+                for (final Log kafkaLog : JavaConversions.asJavaIterable(logManager.allLogs())) {\n                     if (kafkaLog.config().compact()) continue;\n                     loggerForCleaner.debug(\"Garbage collecting {}\", kafkaLog.name());\n                     total += cleanupExpiredSegments(kafkaLog) +\n@@ -535,7 +535,7 @@\n             // so we have to get a global view.\n             final long committedOffset = KafkaJournal.this.committedOffset.get();\n             final HashSet<LogSegment> logSegments = Sets.newHashSet(\n-                    JavaConversions.asIterable(kafkaLog.logSegments(committedOffset, Long.MAX_VALUE))\n+                    JavaConversions.asJavaIterable(kafkaLog.logSegments(committedOffset, Long.MAX_VALUE))\n             );\n             loggerForCleaner.debug(\"[cleanup-committed] Keeping segments {}\", logSegments);\n             return kafkaLog.deleteOldSegments(new AbstractFunction1<LogSegment, Object>() {\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 538,
    "bugNodeStartChar": 25767,
    "bugNodeLength": 81,
    "fixLineNum": 538,
    "fixNodeStartChar": 25767,
    "fixNodeLength": 85,
    "sourceBeforeFix": "JavaConversions.asIterable(kafkaLog.logSegments(committedOffset,Long.MAX_VALUE))",
    "sourceAfterFix": "JavaConversions.asJavaIterable(kafkaLog.logSegments(committedOffset,Long.MAX_VALUE))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "da91e33c80c3d417388c4bdc1e0139b763f548a4",
    "fixCommitParentSHA1": "59aed5966228d843323695023e5a46c668a943a9",
    "bugFilePath": "graylog2-plugin-interfaces/src/main/java/org/graylog2/plugin/inputs/MessageInput.java",
    "fixPatch": "diff --git a/graylog2-plugin-interfaces/src/main/java/org/graylog2/plugin/inputs/MessageInput.java b/graylog2-plugin-interfaces/src/main/java/org/graylog2/plugin/inputs/MessageInput.java\nindex b965249..e97e15f 100644\n--- a/graylog2-plugin-interfaces/src/main/java/org/graylog2/plugin/inputs/MessageInput.java\n+++ b/graylog2-plugin-interfaces/src/main/java/org/graylog2/plugin/inputs/MessageInput.java\n@@ -102,7 +102,7 @@\n \n     public MessageInput(MetricRegistry metricRegistry,\n                         Transport transport,\n-                        LocalMetricRegistry localRegistry, Codec codec, Config config, Descriptor descriptor, ServerStatus serverStatus) {\n+                        MetricRegistry localRegistry, Codec codec, Config config, Descriptor descriptor, ServerStatus serverStatus) {\n         if (metricRegistry == localRegistry) {\n             LOG.error(\"########### Do not add the global metric registry twice, the localRegistry parameter is \" +\n                               \"the same as the global metricRegistry. \" +\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 105,
    "bugNodeStartChar": 4799,
    "bugNodeLength": 33,
    "fixLineNum": 105,
    "fixNodeStartChar": 4799,
    "fixNodeLength": 28,
    "sourceBeforeFix": "LocalMetricRegistry localRegistry",
    "sourceAfterFix": "MetricRegistry localRegistry"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "b024a63a49006f869d7af610ae0ff5810cdb7c47",
    "fixCommitParentSHA1": "00da2d746b0b1fafbafed71a551efc179408dc72",
    "bugFilePath": "graylog2-rest-client/src/main/java/org/graylog2/restclient/models/ClusterService.java",
    "fixPatch": "diff --git a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/ClusterService.java b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/ClusterService.java\nindex 1edb943..0d67a26 100644\n--- a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/ClusterService.java\n+++ b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/ClusterService.java\n@@ -82,7 +82,7 @@\n         List<Notification> notifications = Lists.newArrayList();\n         for (NotificationSummaryResponse notification : r.notifications) {\n             try {\n-                notifications.add(new Notification(notification));\n+                notifications.add(new Notification(notification, nodeService));\n             } catch (IllegalArgumentException e) {\n                 LOG.warn(\"There is a notification type we can't handle: [{}]\", notification.type);\n             }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 85,
    "bugNodeStartChar": 3952,
    "bugNodeLength": 30,
    "fixLineNum": 85,
    "fixNodeStartChar": 3952,
    "fixNodeLength": 43,
    "sourceBeforeFix": "new Notification(notification)",
    "sourceAfterFix": "new Notification(notification,nodeService)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "57c5bdcd54734bcb09f11eb566dba6dd42be7a15",
    "fixCommitParentSHA1": "20a1b5647b17a6a9323f334579cd9e4352c7c813",
    "bugFilePath": "graylog2-radio/src/main/java/org/graylog2/radio/bindings/providers/RadioTransportProvider.java",
    "fixPatch": "diff --git a/graylog2-radio/src/main/java/org/graylog2/radio/bindings/providers/RadioTransportProvider.java b/graylog2-radio/src/main/java/org/graylog2/radio/bindings/providers/RadioTransportProvider.java\nindex a467d6e..e15d06c 100644\n--- a/graylog2-radio/src/main/java/org/graylog2/radio/bindings/providers/RadioTransportProvider.java\n+++ b/graylog2-radio/src/main/java/org/graylog2/radio/bindings/providers/RadioTransportProvider.java\n@@ -45,7 +45,7 @@\n     public RadioTransport get() {\n         switch (configuration.getTransportType()) {\n             case AMQP:\n-                return new AMQPProducer(configuration, metricRegistry);\n+                return new AMQPProducer(metricRegistry, configuration, serverStatus);\n             case KAFKA:\n                 return new KafkaProducer(serverStatus, configuration, metricRegistry);\n             default:\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 48,
    "bugNodeStartChar": 1768,
    "bugNodeLength": 47,
    "fixLineNum": 48,
    "fixNodeStartChar": 1768,
    "fixNodeLength": 61,
    "sourceBeforeFix": "new AMQPProducer(configuration,metricRegistry)",
    "sourceAfterFix": "new AMQPProducer(metricRegistry,configuration,serverStatus)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "1dc7ebfc26b5ef1f88e84702582715eb631202db",
    "fixCommitParentSHA1": "d9e13ceacf00bcfa4df8cb6a0b56fc344f6a9f96",
    "bugFilePath": "graylog2-rest-client/src/main/java/org/graylog2/restclient/models/IndexService.java",
    "fixPatch": "diff --git a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/IndexService.java b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/IndexService.java\nindex b838bab..600a4ac 100644\n--- a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/IndexService.java\n+++ b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/IndexService.java\n@@ -103,7 +103,7 @@\n \n     // Not part an Index model instance method because opening/closing can be applied to indices without calculated ranges.\n     public void delete(String index) throws APIException, IOException {\n-        api.path(routes.IndicesResource().single(index))\n+        api.path(routes.IndicesResource().delete(index))\n                 .timeout(apiTimeout(\"index_delete\", 60, TimeUnit.SECONDS))\n                 .expect(204)\n                 .execute();\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 106,
    "bugNodeStartChar": 4041,
    "bugNodeLength": 38,
    "fixLineNum": 106,
    "fixNodeStartChar": 4041,
    "fixNodeLength": 38,
    "sourceBeforeFix": "routes.IndicesResource().single(index)",
    "sourceAfterFix": "routes.IndicesResource().delete(index)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "1dc7ebfc26b5ef1f88e84702582715eb631202db",
    "fixCommitParentSHA1": "d9e13ceacf00bcfa4df8cb6a0b56fc344f6a9f96",
    "bugFilePath": "graylog2-rest-client/src/main/java/org/graylog2/restclient/models/IndexService.java",
    "fixPatch": "diff --git a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/IndexService.java b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/IndexService.java\nindex b838bab..600a4ac 100644\n--- a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/IndexService.java\n+++ b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/IndexService.java\n@@ -103,7 +103,7 @@\n \n     // Not part an Index model instance method because opening/closing can be applied to indices without calculated ranges.\n     public void delete(String index) throws APIException, IOException {\n-        api.path(routes.IndicesResource().single(index))\n+        api.path(routes.IndicesResource().delete(index))\n                 .timeout(apiTimeout(\"index_delete\", 60, TimeUnit.SECONDS))\n                 .expect(204)\n                 .execute();\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 106,
    "bugNodeStartChar": 4041,
    "bugNodeLength": 38,
    "fixLineNum": 106,
    "fixNodeStartChar": 4041,
    "fixNodeLength": 38,
    "sourceBeforeFix": "routes.IndicesResource().single(index)",
    "sourceAfterFix": "routes.IndicesResource().delete(index)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "ba402c8b87b5439ba3b66caa1bfadb088b53f13b",
    "fixCommitParentSHA1": "5948a9b944b26dc5b8d7cb6b9af0808cdc8ec4cd",
    "bugFilePath": "app/controllers/api/SearchApiController.java",
    "fixPatch": "diff --git a/app/controllers/api/SearchApiController.java b/app/controllers/api/SearchApiController.java\nindex 93cfe7d..c1384f8 100644\n--- a/app/controllers/api/SearchApiController.java\n+++ b/app/controllers/api/SearchApiController.java\n@@ -258,7 +258,7 @@\n         DateTime from;\n         if (allQuery) {\n             String firstTimestamp = histogramResults.entrySet().iterator().next().getKey();\n-            from = new DateTime(Long.parseLong(firstTimestamp) * 1000);\n+            from = new DateTime(Long.parseLong(firstTimestamp) * 1000, DateTimeZone.UTC);\n         } else {\n             from = DateTime.parse(histogram.getHistogramBoundaries().getFrom());\n         }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 261,
    "bugNodeStartChar": 10709,
    "bugNodeLength": 51,
    "fixLineNum": 261,
    "fixNodeStartChar": 10709,
    "fixNodeLength": 69,
    "sourceBeforeFix": "new DateTime(Long.parseLong(firstTimestamp) * 1000)",
    "sourceAfterFix": "new DateTime(Long.parseLong(firstTimestamp) * 1000,DateTimeZone.UTC)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "cd913af4412ea58598043b4917156539fd905612",
    "fixCommitParentSHA1": "e9e5a477895f240f4c62285364ba3877c34ff1cb",
    "bugFilePath": "src/main/java/org/graylog2/restclient/models/ExtractorService.java",
    "fixPatch": "diff --git a/src/main/java/org/graylog2/restclient/models/ExtractorService.java b/src/main/java/org/graylog2/restclient/models/ExtractorService.java\nindex 55d1d39..5b54c57 100644\n--- a/src/main/java/org/graylog2/restclient/models/ExtractorService.java\n+++ b/src/main/java/org/graylog2/restclient/models/ExtractorService.java\n@@ -47,7 +47,7 @@\n     }\n \n     public void delete(Node node, Input input, String extractorId) throws IOException, APIException {\n-        api.path(resource.removeExtractor(input.getId(), extractorId))\n+        api.path(resource.terminate(input.getId(), extractorId))\n                 .node(node)\n                 .expect(Http.Status.NO_CONTENT)\n                 .execute();\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 50,
    "bugNodeStartChar": 1927,
    "bugNodeLength": 52,
    "fixLineNum": 50,
    "fixNodeStartChar": 1927,
    "fixNodeLength": 46,
    "sourceBeforeFix": "resource.removeExtractor(input.getId(),extractorId)",
    "sourceAfterFix": "resource.terminate(input.getId(),extractorId)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "cd913af4412ea58598043b4917156539fd905612",
    "fixCommitParentSHA1": "e9e5a477895f240f4c62285364ba3877c34ff1cb",
    "bugFilePath": "src/main/java/org/graylog2/restclient/models/ExtractorService.java",
    "fixPatch": "diff --git a/src/main/java/org/graylog2/restclient/models/ExtractorService.java b/src/main/java/org/graylog2/restclient/models/ExtractorService.java\nindex 55d1d39..5b54c57 100644\n--- a/src/main/java/org/graylog2/restclient/models/ExtractorService.java\n+++ b/src/main/java/org/graylog2/restclient/models/ExtractorService.java\n@@ -47,7 +47,7 @@\n     }\n \n     public void delete(Node node, Input input, String extractorId) throws IOException, APIException {\n-        api.path(resource.removeExtractor(input.getId(), extractorId))\n+        api.path(resource.terminate(input.getId(), extractorId))\n                 .node(node)\n                 .expect(Http.Status.NO_CONTENT)\n                 .execute();\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 50,
    "bugNodeStartChar": 1927,
    "bugNodeLength": 52,
    "fixLineNum": 50,
    "fixNodeStartChar": 1927,
    "fixNodeLength": 46,
    "sourceBeforeFix": "resource.removeExtractor(input.getId(),extractorId)",
    "sourceAfterFix": "resource.terminate(input.getId(),extractorId)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "e9e5a477895f240f4c62285364ba3877c34ff1cb",
    "fixCommitParentSHA1": "bae42b31cc9d957edec04a68a8d9150e9438637a",
    "bugFilePath": "src/main/java/org/graylog2/restclient/models/ExtractorService.java",
    "fixPatch": "diff --git a/src/main/java/org/graylog2/restclient/models/ExtractorService.java b/src/main/java/org/graylog2/restclient/models/ExtractorService.java\nindex 5b54c57..55d1d39 100644\n--- a/src/main/java/org/graylog2/restclient/models/ExtractorService.java\n+++ b/src/main/java/org/graylog2/restclient/models/ExtractorService.java\n@@ -47,7 +47,7 @@\n     }\n \n     public void delete(Node node, Input input, String extractorId) throws IOException, APIException {\n-        api.path(resource.terminate(input.getId(), extractorId))\n+        api.path(resource.removeExtractor(input.getId(), extractorId))\n                 .node(node)\n                 .expect(Http.Status.NO_CONTENT)\n                 .execute();\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 50,
    "bugNodeStartChar": 1927,
    "bugNodeLength": 46,
    "fixLineNum": 50,
    "fixNodeStartChar": 1927,
    "fixNodeLength": 52,
    "sourceBeforeFix": "resource.terminate(input.getId(),extractorId)",
    "sourceAfterFix": "resource.removeExtractor(input.getId(),extractorId)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "e9e5a477895f240f4c62285364ba3877c34ff1cb",
    "fixCommitParentSHA1": "bae42b31cc9d957edec04a68a8d9150e9438637a",
    "bugFilePath": "src/main/java/org/graylog2/restclient/models/ExtractorService.java",
    "fixPatch": "diff --git a/src/main/java/org/graylog2/restclient/models/ExtractorService.java b/src/main/java/org/graylog2/restclient/models/ExtractorService.java\nindex 5b54c57..55d1d39 100644\n--- a/src/main/java/org/graylog2/restclient/models/ExtractorService.java\n+++ b/src/main/java/org/graylog2/restclient/models/ExtractorService.java\n@@ -47,7 +47,7 @@\n     }\n \n     public void delete(Node node, Input input, String extractorId) throws IOException, APIException {\n-        api.path(resource.terminate(input.getId(), extractorId))\n+        api.path(resource.removeExtractor(input.getId(), extractorId))\n                 .node(node)\n                 .expect(Http.Status.NO_CONTENT)\n                 .execute();\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 50,
    "bugNodeStartChar": 1927,
    "bugNodeLength": 46,
    "fixLineNum": 50,
    "fixNodeStartChar": 1927,
    "fixNodeLength": 52,
    "sourceBeforeFix": "resource.terminate(input.getId(),extractorId)",
    "sourceAfterFix": "resource.removeExtractor(input.getId(),extractorId)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "574a2e4f78aea6bc9f0e1673e005acb26697eb76",
    "fixCommitParentSHA1": "f1f7cbd4d2e7d3214857ae14026f19ee365aa572",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/Configuration.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/Configuration.java b/graylog2-server/src/main/java/org/graylog2/Configuration.java\nindex c99efeb..dff026d 100644\n--- a/graylog2-server/src/main/java/org/graylog2/Configuration.java\n+++ b/graylog2-server/src/main/java/org/graylog2/Configuration.java\n@@ -68,7 +68,7 @@\n     private int maxNumberOfIndices = 20;\n \n     @Parameter(value = \"output_batch_size\", required = true, validator = PositiveIntegerValidator.class)\n-    private int outputBatchSize = 25;\n+    private int outputBatchSize = 1000;\n \n     @Parameter(value = \"output_flush_interval\", required = true, validator = PositiveIntegerValidator.class)\n     private int outputFlushInterval = 1;\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 71,
    "bugNodeStartChar": 2797,
    "bugNodeLength": 20,
    "fixLineNum": 71,
    "fixNodeStartChar": 2797,
    "fixNodeLength": 22,
    "sourceBeforeFix": "outputBatchSize=25",
    "sourceAfterFix": "outputBatchSize=1000"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "652af1ee3ffbb286cf8b4ee1ecf2312566cf7ec5",
    "fixCommitParentSHA1": "7d8785c6ec3f2cde732679b2875af840ea4058fe",
    "bugFilePath": "src/main/java/org/graylog2/restclient/models/Input.java",
    "fixPatch": "diff --git a/src/main/java/org/graylog2/restclient/models/Input.java b/src/main/java/org/graylog2/restclient/models/Input.java\nindex 219c5ee..6e62b67 100644\n--- a/src/main/java/org/graylog2/restclient/models/Input.java\n+++ b/src/main/java/org/graylog2/restclient/models/Input.java\n@@ -237,7 +237,7 @@\n                 .expect(200, 404)\n                 .execute();\n \n-            if (response == null) {\n+            if (response == null || response.value == null) {\n                 return -1L;\n             } else {\n                 return response.value;\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 240,
    "bugNodeStartChar": 8747,
    "bugNodeLength": 16,
    "fixLineNum": 240,
    "fixNodeStartChar": 8747,
    "fixNodeLength": 42,
    "sourceBeforeFix": "response == null",
    "sourceAfterFix": "response == null || response.value == null"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "652af1ee3ffbb286cf8b4ee1ecf2312566cf7ec5",
    "fixCommitParentSHA1": "7d8785c6ec3f2cde732679b2875af840ea4058fe",
    "bugFilePath": "src/main/java/org/graylog2/restclient/models/Input.java",
    "fixPatch": "diff --git a/src/main/java/org/graylog2/restclient/models/Input.java b/src/main/java/org/graylog2/restclient/models/Input.java\nindex 219c5ee..6e62b67 100644\n--- a/src/main/java/org/graylog2/restclient/models/Input.java\n+++ b/src/main/java/org/graylog2/restclient/models/Input.java\n@@ -237,7 +237,7 @@\n                 .expect(200, 404)\n                 .execute();\n \n-            if (response == null) {\n+            if (response == null || response.value == null) {\n                 return -1L;\n             } else {\n                 return response.value;\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 240,
    "bugNodeStartChar": 8747,
    "bugNodeLength": 16,
    "fixLineNum": 240,
    "fixNodeStartChar": 8747,
    "fixNodeLength": 42,
    "sourceBeforeFix": "response == null",
    "sourceAfterFix": "response == null || response.value == null"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "1a5ec9791516322cfeb14508732b4a7025bef2e0",
    "fixCommitParentSHA1": "0283dec62a767c1ce3b7777423ca0bfc25a6d9c1",
    "bugFilePath": "src/main/java/org/graylog2/restclient/models/Extractor.java",
    "fixPatch": "diff --git a/src/main/java/org/graylog2/restclient/models/Extractor.java b/src/main/java/org/graylog2/restclient/models/Extractor.java\nindex 3b6f22c..0a0921a 100644\n--- a/src/main/java/org/graylog2/restclient/models/Extractor.java\n+++ b/src/main/java/org/graylog2/restclient/models/Extractor.java\n@@ -185,7 +185,7 @@\n         request.conditionValue = conditionValue;\n         request.order = order;\n \n-        final Map response = api.path(routes.ExtractorsResource().list(input.getId()), Map.class)\n+        final Map response = api.path(routes.ExtractorsResource().create(input.getId()), Map.class)\n                 .node(node)\n                 .expect(Http.Status.CREATED)\n                 .body(request)\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 188,
    "bugNodeStartChar": 6896,
    "bugNodeLength": 47,
    "fixLineNum": 188,
    "fixNodeStartChar": 6896,
    "fixNodeLength": 49,
    "sourceBeforeFix": "routes.ExtractorsResource().list(input.getId())",
    "sourceAfterFix": "routes.ExtractorsResource().create(input.getId())"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "1a5ec9791516322cfeb14508732b4a7025bef2e0",
    "fixCommitParentSHA1": "0283dec62a767c1ce3b7777423ca0bfc25a6d9c1",
    "bugFilePath": "src/main/java/org/graylog2/restclient/models/Extractor.java",
    "fixPatch": "diff --git a/src/main/java/org/graylog2/restclient/models/Extractor.java b/src/main/java/org/graylog2/restclient/models/Extractor.java\nindex 3b6f22c..0a0921a 100644\n--- a/src/main/java/org/graylog2/restclient/models/Extractor.java\n+++ b/src/main/java/org/graylog2/restclient/models/Extractor.java\n@@ -185,7 +185,7 @@\n         request.conditionValue = conditionValue;\n         request.order = order;\n \n-        final Map response = api.path(routes.ExtractorsResource().list(input.getId()), Map.class)\n+        final Map response = api.path(routes.ExtractorsResource().create(input.getId()), Map.class)\n                 .node(node)\n                 .expect(Http.Status.CREATED)\n                 .body(request)\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 188,
    "bugNodeStartChar": 6896,
    "bugNodeLength": 47,
    "fixLineNum": 188,
    "fixNodeStartChar": 6896,
    "fixNodeLength": 49,
    "sourceBeforeFix": "routes.ExtractorsResource().list(input.getId())",
    "sourceAfterFix": "routes.ExtractorsResource().create(input.getId())"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "a8b6696e713b96d2af3c549f6e26735bb306c6ab",
    "fixCommitParentSHA1": "68bb84aad4a1206db1699ab7e16f4033fce0eaaf",
    "bugFilePath": "graylog2-inputs/src/main/java/org/graylog2/inputs/radio/RadioKafkaInput.java",
    "fixPatch": "diff --git a/graylog2-inputs/src/main/java/org/graylog2/inputs/radio/RadioKafkaInput.java b/graylog2-inputs/src/main/java/org/graylog2/inputs/radio/RadioKafkaInput.java\nindex a583539..b217631 100644\n--- a/graylog2-inputs/src/main/java/org/graylog2/inputs/radio/RadioKafkaInput.java\n+++ b/graylog2-inputs/src/main/java/org/graylog2/inputs/radio/RadioKafkaInput.java\n@@ -39,7 +39,7 @@\n  */\n public class RadioKafkaInput extends KafkaInput {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(KafkaInput.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(RadioKafkaInput.class);\n \n     public static final String NAME = \"Graylog2 Radio Input (Kafka)\";\n \n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 42,
    "bugNodeStartChar": 1560,
    "bugNodeLength": 16,
    "fixLineNum": 42,
    "fixNodeStartChar": 1560,
    "fixNodeLength": 21,
    "sourceBeforeFix": "KafkaInput.class",
    "sourceAfterFix": "RadioKafkaInput.class"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "538a8ac25f73ada7cf995be3a4d35179a8003fba",
    "fixCommitParentSHA1": "499d8e5c524f234743a9a7030518b50cf2340356",
    "bugFilePath": "src/main/java/org/graylog2/restclient/models/api/requests/alarmcallbacks/CreateAlarmCallbackRequest.java",
    "fixPatch": "diff --git a/src/main/java/org/graylog2/restclient/models/api/requests/alarmcallbacks/CreateAlarmCallbackRequest.java b/src/main/java/org/graylog2/restclient/models/api/requests/alarmcallbacks/CreateAlarmCallbackRequest.java\nindex a4ec24d..83c1fb8 100644\n--- a/src/main/java/org/graylog2/restclient/models/api/requests/alarmcallbacks/CreateAlarmCallbackRequest.java\n+++ b/src/main/java/org/graylog2/restclient/models/api/requests/alarmcallbacks/CreateAlarmCallbackRequest.java\n@@ -13,7 +13,7 @@\n     @Constraints.Required\n     public String type;\n     @Constraints.Required\n-    public Map<String, String> configuration;\n+    public Map<String, Object> configuration;\n     @SerializedName(\"creator_user_id\")\n     public String creatorUserId;\n \n@@ -25,11 +25,11 @@\n         this.type = type;\n     }\n \n-    public Map<String, String> getConfiguration() {\n+    public Map<String, Object> getConfiguration() {\n         return configuration;\n     }\n \n-    public void setConfiguration(Map<String, String> configuration) {\n+    public void setConfiguration(Map<String, Object> configuration) {\n         this.configuration = configuration;\n     }\n \n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 16,
    "bugNodeStartChar": 448,
    "bugNodeLength": 19,
    "fixLineNum": 16,
    "fixNodeStartChar": 448,
    "fixNodeLength": 19,
    "sourceBeforeFix": "Map<String,String>",
    "sourceAfterFix": "Map<String,Object>"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "538a8ac25f73ada7cf995be3a4d35179a8003fba",
    "fixCommitParentSHA1": "499d8e5c524f234743a9a7030518b50cf2340356",
    "bugFilePath": "src/main/java/org/graylog2/restclient/models/api/requests/alarmcallbacks/CreateAlarmCallbackRequest.java",
    "fixPatch": "diff --git a/src/main/java/org/graylog2/restclient/models/api/requests/alarmcallbacks/CreateAlarmCallbackRequest.java b/src/main/java/org/graylog2/restclient/models/api/requests/alarmcallbacks/CreateAlarmCallbackRequest.java\nindex a4ec24d..83c1fb8 100644\n--- a/src/main/java/org/graylog2/restclient/models/api/requests/alarmcallbacks/CreateAlarmCallbackRequest.java\n+++ b/src/main/java/org/graylog2/restclient/models/api/requests/alarmcallbacks/CreateAlarmCallbackRequest.java\n@@ -13,7 +13,7 @@\n     @Constraints.Required\n     public String type;\n     @Constraints.Required\n-    public Map<String, String> configuration;\n+    public Map<String, Object> configuration;\n     @SerializedName(\"creator_user_id\")\n     public String creatorUserId;\n \n@@ -25,11 +25,11 @@\n         this.type = type;\n     }\n \n-    public Map<String, String> getConfiguration() {\n+    public Map<String, Object> getConfiguration() {\n         return configuration;\n     }\n \n-    public void setConfiguration(Map<String, String> configuration) {\n+    public void setConfiguration(Map<String, Object> configuration) {\n         this.configuration = configuration;\n     }\n \n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 28,
    "bugNodeStartChar": 697,
    "bugNodeLength": 19,
    "fixLineNum": 28,
    "fixNodeStartChar": 697,
    "fixNodeLength": 19,
    "sourceBeforeFix": "Map<String,String>",
    "sourceAfterFix": "Map<String,Object>"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "538a8ac25f73ada7cf995be3a4d35179a8003fba",
    "fixCommitParentSHA1": "499d8e5c524f234743a9a7030518b50cf2340356",
    "bugFilePath": "src/main/java/org/graylog2/restclient/models/api/requests/alarmcallbacks/CreateAlarmCallbackRequest.java",
    "fixPatch": "diff --git a/src/main/java/org/graylog2/restclient/models/api/requests/alarmcallbacks/CreateAlarmCallbackRequest.java b/src/main/java/org/graylog2/restclient/models/api/requests/alarmcallbacks/CreateAlarmCallbackRequest.java\nindex a4ec24d..83c1fb8 100644\n--- a/src/main/java/org/graylog2/restclient/models/api/requests/alarmcallbacks/CreateAlarmCallbackRequest.java\n+++ b/src/main/java/org/graylog2/restclient/models/api/requests/alarmcallbacks/CreateAlarmCallbackRequest.java\n@@ -13,7 +13,7 @@\n     @Constraints.Required\n     public String type;\n     @Constraints.Required\n-    public Map<String, String> configuration;\n+    public Map<String, Object> configuration;\n     @SerializedName(\"creator_user_id\")\n     public String creatorUserId;\n \n@@ -25,11 +25,11 @@\n         this.type = type;\n     }\n \n-    public Map<String, String> getConfiguration() {\n+    public Map<String, Object> getConfiguration() {\n         return configuration;\n     }\n \n-    public void setConfiguration(Map<String, String> configuration) {\n+    public void setConfiguration(Map<String, Object> configuration) {\n         this.configuration = configuration;\n     }\n \n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 32,
    "bugNodeStartChar": 808,
    "bugNodeLength": 19,
    "fixLineNum": 32,
    "fixNodeStartChar": 808,
    "fixNodeLength": 19,
    "sourceBeforeFix": "Map<String,String>",
    "sourceAfterFix": "Map<String,Object>"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8b3c80c0bf286943881455566423a18c563c3896",
    "fixCommitParentSHA1": "2d1ad9d0ef8014d03c4ed3a6c77abc95e3df39f3",
    "bugFilePath": "app/controllers/SearchController.java",
    "fixPatch": "diff --git a/app/controllers/SearchController.java b/app/controllers/SearchController.java\nindex 0ee950f..ce1dd13 100755\n--- a/app/controllers/SearchController.java\n+++ b/app/controllers/SearchController.java\n@@ -126,7 +126,7 @@\n     }\n \n     protected Set<String> getSelectedFields(String fields) {\n-        Set<String> selectedFields = Sets.newHashSet();\n+        Set<String> selectedFields = Sets.newLinkedHashSet();\n         if (fields != null && !fields.isEmpty()) {\n             Iterables.addAll(selectedFields, Splitter.on(',').split(fields));\n         } else {\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 129,
    "bugNodeStartChar": 5330,
    "bugNodeLength": 17,
    "fixLineNum": 129,
    "fixNodeStartChar": 5330,
    "fixNodeLength": 23,
    "sourceBeforeFix": "Sets.newHashSet()",
    "sourceAfterFix": "Sets.newLinkedHashSet()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8b3c80c0bf286943881455566423a18c563c3896",
    "fixCommitParentSHA1": "2d1ad9d0ef8014d03c4ed3a6c77abc95e3df39f3",
    "bugFilePath": "app/controllers/SearchController.java",
    "fixPatch": "diff --git a/app/controllers/SearchController.java b/app/controllers/SearchController.java\nindex 0ee950f..ce1dd13 100755\n--- a/app/controllers/SearchController.java\n+++ b/app/controllers/SearchController.java\n@@ -126,7 +126,7 @@\n     }\n \n     protected Set<String> getSelectedFields(String fields) {\n-        Set<String> selectedFields = Sets.newHashSet();\n+        Set<String> selectedFields = Sets.newLinkedHashSet();\n         if (fields != null && !fields.isEmpty()) {\n             Iterables.addAll(selectedFields, Splitter.on(',').split(fields));\n         } else {\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 129,
    "bugNodeStartChar": 5330,
    "bugNodeLength": 17,
    "fixLineNum": 129,
    "fixNodeStartChar": 5330,
    "fixNodeLength": 23,
    "sourceBeforeFix": "Sets.newHashSet()",
    "sourceAfterFix": "Sets.newLinkedHashSet()"
  },
  {
    "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
    "fixCommitSHA1": "8cac34cb2fd489023a20702dabf24db38c64b3cf",
    "fixCommitParentSHA1": "bea1151cb403e9a6f46d90d0336c6ef2d97571a4",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/rest/resources/search/SearchResource.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/rest/resources/search/SearchResource.java b/graylog2-server/src/main/java/org/graylog2/rest/resources/search/SearchResource.java\nindex f4c87b8..2aa7ec7 100644\n--- a/graylog2-server/src/main/java/org/graylog2/rest/resources/search/SearchResource.java\n+++ b/graylog2-server/src/main/java/org/graylog2/rest/resources/search/SearchResource.java\n@@ -122,10 +122,10 @@\n             throw new BadRequestException(\"Missing required parameter `fields`\");\n         }\n         final Iterable<String> split = Splitter.on(',').omitEmptyStrings().trimResults().split(fields);\n-        final ArrayList<String> fieldList = Lists.newArrayList(\"timestamp\", \"source\");\n-        // skip the mandatory fields timestamp and source\n+        final ArrayList<String> fieldList = Lists.newArrayList(\"timestamp\");\n+        // skip the mandatory field timestamp\n         for (String field : split) {\n-            if (\"timestamp\".equals(field) || \"source\".equals(field)) {\n+            if (\"timestamp\".equals(field)) {\n                 continue;\n             }\n             fieldList.add(field);\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 125,
    "bugNodeStartChar": 4941,
    "bugNodeLength": 41,
    "fixLineNum": 125,
    "fixNodeStartChar": 4941,
    "fixNodeLength": 31,
    "sourceBeforeFix": "Lists.newArrayList(\"timestamp\",\"source\")",
    "sourceAfterFix": "Lists.newArrayList(\"timestamp\")"
  },
  {
    "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
    "fixCommitSHA1": "eba7e984d0999606f90689ca3b89ee644b1e92a4",
    "fixCommitParentSHA1": "7db8e2ad2c7ecd5c3502a7068241a7e469447921",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java b/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\nindex 7b59f8f..8aa312c 100644\n--- a/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\n+++ b/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\n@@ -221,7 +221,7 @@\n         stats.order(TermsStatsFacet.ComparatorType.fromString(order.toString().toLowerCase()));\n         stats.size(size);\n \n-        terms.facetFilter(standardFilters(range, filter));\n+        stats.facetFilter(standardFilters(range, filter));\n \n         srb.addFacet(stats);\n \n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 224,
    "bugNodeStartChar": 9563,
    "bugNodeLength": 49,
    "fixLineNum": 224,
    "fixNodeStartChar": 9563,
    "fixNodeLength": 49,
    "sourceBeforeFix": "terms.facetFilter(standardFilters(range,filter))",
    "sourceAfterFix": "stats.facetFilter(standardFilters(range,filter))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "eba7e984d0999606f90689ca3b89ee644b1e92a4",
    "fixCommitParentSHA1": "7db8e2ad2c7ecd5c3502a7068241a7e469447921",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java b/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\nindex 7b59f8f..8aa312c 100644\n--- a/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\n+++ b/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\n@@ -221,7 +221,7 @@\n         stats.order(TermsStatsFacet.ComparatorType.fromString(order.toString().toLowerCase()));\n         stats.size(size);\n \n-        terms.facetFilter(standardFilters(range, filter));\n+        stats.facetFilter(standardFilters(range, filter));\n \n         srb.addFacet(stats);\n \n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 224,
    "bugNodeStartChar": 9563,
    "bugNodeLength": 49,
    "fixLineNum": 224,
    "fixNodeStartChar": 9563,
    "fixNodeLength": 49,
    "sourceBeforeFix": "terms.facetFilter(standardFilters(range,filter))",
    "sourceAfterFix": "stats.facetFilter(standardFilters(range,filter))"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "3e97b0501c42c4adc47d32db7484295646632263",
    "fixCommitParentSHA1": "84813ab619e8dba994e3cdc5b4eafd3ae75c908e",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/Configuration.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/Configuration.java b/graylog2-server/src/main/java/org/graylog2/Configuration.java\nindex 478bc93..c61bc3f 100644\n--- a/graylog2-server/src/main/java/org/graylog2/Configuration.java\n+++ b/graylog2-server/src/main/java/org/graylog2/Configuration.java\n@@ -78,10 +78,10 @@\n     private int maxNumberOfIndices = 20;\n \n     @Parameter(value = \"output_batch_size\", required = true, validator = PositiveIntegerValidator.class)\n-    private int outputBatchSize = 5000;\n+    private int outputBatchSize = 25;\n \n     @Parameter(value = \"outputbuffer_processors\", required = true, validator = PositiveIntegerValidator.class)\n-    private int outputBufferProcessors = 5;\n+    private int outputBufferProcessors = 3;\n     \n     @Parameter(value = \"outputbuffer_processor_threads_max_pool_size\", required = true, validator = PositiveIntegerValidator.class)\n     private int outputBufferProcessorThreadsMaxPoolSize = 30;\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 81,
    "bugNodeStartChar": 3031,
    "bugNodeLength": 22,
    "fixLineNum": 81,
    "fixNodeStartChar": 3031,
    "fixNodeLength": 20,
    "sourceBeforeFix": "outputBatchSize=5000",
    "sourceAfterFix": "outputBatchSize=25"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "3e97b0501c42c4adc47d32db7484295646632263",
    "fixCommitParentSHA1": "84813ab619e8dba994e3cdc5b4eafd3ae75c908e",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/Configuration.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/Configuration.java b/graylog2-server/src/main/java/org/graylog2/Configuration.java\nindex 478bc93..c61bc3f 100644\n--- a/graylog2-server/src/main/java/org/graylog2/Configuration.java\n+++ b/graylog2-server/src/main/java/org/graylog2/Configuration.java\n@@ -78,10 +78,10 @@\n     private int maxNumberOfIndices = 20;\n \n     @Parameter(value = \"output_batch_size\", required = true, validator = PositiveIntegerValidator.class)\n-    private int outputBatchSize = 5000;\n+    private int outputBatchSize = 25;\n \n     @Parameter(value = \"outputbuffer_processors\", required = true, validator = PositiveIntegerValidator.class)\n-    private int outputBufferProcessors = 5;\n+    private int outputBufferProcessors = 3;\n     \n     @Parameter(value = \"outputbuffer_processor_threads_max_pool_size\", required = true, validator = PositiveIntegerValidator.class)\n     private int outputBufferProcessorThreadsMaxPoolSize = 30;\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 84,
    "bugNodeStartChar": 3183,
    "bugNodeLength": 26,
    "fixLineNum": 84,
    "fixNodeStartChar": 3183,
    "fixNodeLength": 26,
    "sourceBeforeFix": "outputBufferProcessors=5",
    "sourceAfterFix": "outputBufferProcessors=3"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "3e97b0501c42c4adc47d32db7484295646632263",
    "fixCommitParentSHA1": "84813ab619e8dba994e3cdc5b4eafd3ae75c908e",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/periodical/BatchedElasticSearchOutputFlushThread.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/periodical/BatchedElasticSearchOutputFlushThread.java b/graylog2-server/src/main/java/org/graylog2/periodical/BatchedElasticSearchOutputFlushThread.java\nindex 55c5b41..79d3d3a 100644\n--- a/graylog2-server/src/main/java/org/graylog2/periodical/BatchedElasticSearchOutputFlushThread.java\n+++ b/graylog2-server/src/main/java/org/graylog2/periodical/BatchedElasticSearchOutputFlushThread.java\n@@ -53,7 +53,7 @@\n \n     @Override\n     public int getPeriodSeconds() {\n-        return 30;\n+        return 2;\n     }\n \n     @Override\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 56,
    "bugNodeStartChar": 1254,
    "bugNodeLength": 10,
    "fixLineNum": 56,
    "fixNodeStartChar": 1254,
    "fixNodeLength": 9,
    "sourceBeforeFix": "return 30; ",
    "sourceAfterFix": "return 2; "
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "f6a978eb151c88f6241aabf4c7bd93c76be70bac",
    "fixCommitParentSHA1": "84a54eefd47e37294bb68b5172196a8023decb6c",
    "bugFilePath": "graylog2-inputs/src/main/java/org/graylog2/inputs/raw/tcp/RawTCPInput.java",
    "fixPatch": "diff --git a/graylog2-inputs/src/main/java/org/graylog2/inputs/raw/tcp/RawTCPInput.java b/graylog2-inputs/src/main/java/org/graylog2/inputs/raw/tcp/RawTCPInput.java\nindex bdffce2..2ce82e9 100644\n--- a/graylog2-inputs/src/main/java/org/graylog2/inputs/raw/tcp/RawTCPInput.java\n+++ b/graylog2-inputs/src/main/java/org/graylog2/inputs/raw/tcp/RawTCPInput.java\n@@ -42,7 +42,7 @@\n  */\n public class RawTCPInput extends RawInputBase {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(RawUDPInput.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(RawTCPInput.class);\n \n     public static final String NAME = \"Raw/Plaintext TCP\";\n \n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 45,
    "bugNodeStartChar": 1692,
    "bugNodeLength": 17,
    "fixLineNum": 45,
    "fixNodeStartChar": 1692,
    "fixNodeLength": 17,
    "sourceBeforeFix": "RawUDPInput.class",
    "sourceAfterFix": "RawTCPInput.class"
  },
  {
    "bugType": "MORE_SPECIFIC_IF",
    "fixCommitSHA1": "9748b0df80f44c89177700dd2b25ab2916c4964f",
    "fixCommitParentSHA1": "f531a4d6d50678478dd7b417b597cda26f50e503",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java b/graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java\nindex 7b8bdbd..d7be313 100644\n--- a/graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java\n+++ b/graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java\n@@ -196,7 +196,7 @@\n             user.setStartpage(cr.startpage.type, cr.startpage.id);\n         }\n         if (isPermitted(\"*\")) {\n-            if (cr.session_timeout_ms != 0) {\n+            if (cr.session_timeout_ms != null && cr.session_timeout_ms != 0) {\n                 user.setSessionTimeoutMs(cr.session_timeout_ms);\n             }\n         }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 199,
    "bugNodeStartChar": 8299,
    "bugNodeLength": 26,
    "fixLineNum": 199,
    "fixNodeStartChar": 8299,
    "fixNodeLength": 59,
    "sourceBeforeFix": "cr.session_timeout_ms != 0",
    "sourceAfterFix": "cr.session_timeout_ms != null && cr.session_timeout_ms != 0"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "ae3638227a4e01d7dc926c50f9cc5c6353effd49",
    "fixCommitParentSHA1": "0a15ff9bcd988c159ce90db104817cc1f0e983c8",
    "bugFilePath": "graylog2-radio/src/main/java/org/graylog2/radio/Radio.java",
    "fixPatch": "diff --git a/graylog2-radio/src/main/java/org/graylog2/radio/Radio.java b/graylog2-radio/src/main/java/org/graylog2/radio/Radio.java\nindex 0de0b95..9e414b4 100644\n--- a/graylog2-radio/src/main/java/org/graylog2/radio/Radio.java\n+++ b/graylog2-radio/src/main/java/org/graylog2/radio/Radio.java\n@@ -221,7 +221,10 @@\n         bootstrap.setOption(\"child.tcpNoDelay\", true);\n         bootstrap.setOption(\"child.keepAlive\", true);\n \n-        bootstrap.bind(new InetSocketAddress(configuration.getRestListenUri().getPort()));\n+        bootstrap.bind(new InetSocketAddress(\n+                configuration.getRestListenUri().getHost(),\n+                configuration.getRestListenUri().getPort()\n+        ));\n         Runtime.getRuntime().addShutdownHook(new Thread() {\n             @Override\n             public void run() {\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 224,
    "bugNodeStartChar": 9173,
    "bugNodeLength": 65,
    "fixLineNum": 224,
    "fixNodeStartChar": 9173,
    "fixNodeLength": 151,
    "sourceBeforeFix": "new InetSocketAddress(configuration.getRestListenUri().getPort())",
    "sourceAfterFix": "new InetSocketAddress(configuration.getRestListenUri().getHost(),configuration.getRestListenUri().getPort())"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "ae3638227a4e01d7dc926c50f9cc5c6353effd49",
    "fixCommitParentSHA1": "0a15ff9bcd988c159ce90db104817cc1f0e983c8",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/Core.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/Core.java b/graylog2-server/src/main/java/org/graylog2/Core.java\nindex aa182aa..c7ee8c6 100644\n--- a/graylog2-server/src/main/java/org/graylog2/Core.java\n+++ b/graylog2-server/src/main/java/org/graylog2/Core.java\n@@ -450,7 +450,10 @@\n         bootstrap.setOption(\"child.tcpNoDelay\", true);\n         bootstrap.setOption(\"child.keepAlive\", true);\n \n-        bootstrap.bind(new InetSocketAddress(configuration.getRestListenUri().getPort()));\n+        bootstrap.bind(new InetSocketAddress(\n+                configuration.getRestListenUri().getHost(),\n+                configuration.getRestListenUri().getPort()\n+        ));\n         Runtime.getRuntime().addShutdownHook(new Thread() {\n             @Override\n             public void run() {\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 453,
    "bugNodeStartChar": 17556,
    "bugNodeLength": 65,
    "fixLineNum": 453,
    "fixNodeStartChar": 17556,
    "fixNodeLength": 151,
    "sourceBeforeFix": "new InetSocketAddress(configuration.getRestListenUri().getPort())",
    "sourceAfterFix": "new InetSocketAddress(configuration.getRestListenUri().getHost(),configuration.getRestListenUri().getPort())"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "61ea8aa1ba14bf079c0dff341c7b7ae708994a54",
    "fixCommitParentSHA1": "91a22eda7a750101e6c91abda8ba6ffc322aa59e",
    "bugFilePath": "app/controllers/MessagesController.java",
    "fixPatch": "diff --git a/app/controllers/MessagesController.java b/app/controllers/MessagesController.java\nindex d4e3b2a..e44326f 100644\n--- a/app/controllers/MessagesController.java\n+++ b/app/controllers/MessagesController.java\n@@ -127,7 +127,7 @@\n             Map<String, Object> result = Maps.newHashMap();\n             result.put(\"id\", message.getId());\n             if (filtered)\n-                result.put(\"fields\", message.getFormattedFields());\n+                result.put(\"fields\", message.getFilteredFields());\n             else\n                 result.put(\"fields\", message.getFields());\n \n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 130,
    "bugNodeStartChar": 4946,
    "bugNodeLength": 28,
    "fixLineNum": 130,
    "fixNodeStartChar": 4946,
    "fixNodeLength": 27,
    "sourceBeforeFix": "message.getFormattedFields()",
    "sourceAfterFix": "message.getFilteredFields()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "61ea8aa1ba14bf079c0dff341c7b7ae708994a54",
    "fixCommitParentSHA1": "91a22eda7a750101e6c91abda8ba6ffc322aa59e",
    "bugFilePath": "app/controllers/MessagesController.java",
    "fixPatch": "diff --git a/app/controllers/MessagesController.java b/app/controllers/MessagesController.java\nindex d4e3b2a..e44326f 100644\n--- a/app/controllers/MessagesController.java\n+++ b/app/controllers/MessagesController.java\n@@ -127,7 +127,7 @@\n             Map<String, Object> result = Maps.newHashMap();\n             result.put(\"id\", message.getId());\n             if (filtered)\n-                result.put(\"fields\", message.getFormattedFields());\n+                result.put(\"fields\", message.getFilteredFields());\n             else\n                 result.put(\"fields\", message.getFields());\n \n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 130,
    "bugNodeStartChar": 4946,
    "bugNodeLength": 28,
    "fixLineNum": 130,
    "fixNodeStartChar": 4946,
    "fixNodeLength": 27,
    "sourceBeforeFix": "message.getFormattedFields()",
    "sourceAfterFix": "message.getFilteredFields()"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "7471eef3c0c542b86d238d041052d7285ae49ad7",
    "fixCommitParentSHA1": "f92b3feb3236b9fed1d5c9a23b5d3b5acd9c1fb4",
    "bugFilePath": "test/selenium/pages/LoginPage.java",
    "fixPatch": "diff --git a/test/selenium/pages/LoginPage.java b/test/selenium/pages/LoginPage.java\nindex 3d512a4..46ab37a 100644\n--- a/test/selenium/pages/LoginPage.java\n+++ b/test/selenium/pages/LoginPage.java\n@@ -35,7 +35,7 @@\n \n     @Override\n     public String getUrl() {\n-        return routes.SessionsController.index().url();\n+        return routes.SessionsController.index(\"\").url();\n     }\n \n     @Override\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 38,
    "bugNodeStartChar": 1264,
    "bugNodeLength": 33,
    "fixLineNum": 38,
    "fixNodeStartChar": 1264,
    "fixNodeLength": 35,
    "sourceBeforeFix": "routes.SessionsController.index()",
    "sourceAfterFix": "routes.SessionsController.index(\"\")"
  },
  {
    "bugType": "MORE_SPECIFIC_IF",
    "fixCommitSHA1": "14c2a57c072c6036ba7c9246efb4186fd8fd2448",
    "fixCommitParentSHA1": "5d4fcfea45b754b3b5bbb1120c1d9d6d9c0abf6a",
    "bugFilePath": "app/controllers/SessionsController.java",
    "fixPatch": "diff --git a/app/controllers/SessionsController.java b/app/controllers/SessionsController.java\nindex 64bdd6f..61055d8 100644\n--- a/app/controllers/SessionsController.java\n+++ b/app/controllers/SessionsController.java\n@@ -102,7 +102,7 @@\n \n             // if we were redirected from somewhere else because the session had expired, redirect back to that page\n             // otherwise use the configured startpage (or skip it if that was requested)\n-            if (r.destination != null) {\n+            if (r.destination != null && !r.destination.isEmpty()) {\n                 return redirect(r.destination);\n             }\n             // upon redirect, the auth layer will load the user with the given session and log the user in.\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 105,
    "bugNodeStartChar": 3991,
    "bugNodeLength": 21,
    "fixLineNum": 105,
    "fixNodeStartChar": 3991,
    "fixNodeLength": 49,
    "sourceBeforeFix": "r.destination != null",
    "sourceAfterFix": "r.destination != null && !r.destination.isEmpty()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "5fc52fe9ff921cb414dd7ecb3313e519a5d6fbb8",
    "fixCommitParentSHA1": "f9de8e390b918b2e2e353213ded2d8a3d86e1976",
    "bugFilePath": "app/controllers/MessagesController.java",
    "fixPatch": "diff --git a/app/controllers/MessagesController.java b/app/controllers/MessagesController.java\nindex d4e3b2a..e44326f 100644\n--- a/app/controllers/MessagesController.java\n+++ b/app/controllers/MessagesController.java\n@@ -127,7 +127,7 @@\n             Map<String, Object> result = Maps.newHashMap();\n             result.put(\"id\", message.getId());\n             if (filtered)\n-                result.put(\"fields\", message.getFormattedFields());\n+                result.put(\"fields\", message.getFilteredFields());\n             else\n                 result.put(\"fields\", message.getFields());\n \n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 130,
    "bugNodeStartChar": 4946,
    "bugNodeLength": 28,
    "fixLineNum": 130,
    "fixNodeStartChar": 4946,
    "fixNodeLength": 27,
    "sourceBeforeFix": "message.getFormattedFields()",
    "sourceAfterFix": "message.getFilteredFields()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "5fc52fe9ff921cb414dd7ecb3313e519a5d6fbb8",
    "fixCommitParentSHA1": "f9de8e390b918b2e2e353213ded2d8a3d86e1976",
    "bugFilePath": "app/controllers/MessagesController.java",
    "fixPatch": "diff --git a/app/controllers/MessagesController.java b/app/controllers/MessagesController.java\nindex d4e3b2a..e44326f 100644\n--- a/app/controllers/MessagesController.java\n+++ b/app/controllers/MessagesController.java\n@@ -127,7 +127,7 @@\n             Map<String, Object> result = Maps.newHashMap();\n             result.put(\"id\", message.getId());\n             if (filtered)\n-                result.put(\"fields\", message.getFormattedFields());\n+                result.put(\"fields\", message.getFilteredFields());\n             else\n                 result.put(\"fields\", message.getFields());\n \n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 130,
    "bugNodeStartChar": 4946,
    "bugNodeLength": 28,
    "fixLineNum": 130,
    "fixNodeStartChar": 4946,
    "fixNodeLength": 27,
    "sourceBeforeFix": "message.getFormattedFields()",
    "sourceAfterFix": "message.getFilteredFields()"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "2f911ed7f1f66cc287094914f4794cbd20b3e807",
    "fixCommitParentSHA1": "0e1b9c7d24dfdcc4ef5f4d438ec1c127ca5f1775",
    "bugFilePath": "graylog2-radio/src/main/java/org/graylog2/radio/Radio.java",
    "fixPatch": "diff --git a/graylog2-radio/src/main/java/org/graylog2/radio/Radio.java b/graylog2-radio/src/main/java/org/graylog2/radio/Radio.java\nindex e7c18a3..068120b 100644\n--- a/graylog2-radio/src/main/java/org/graylog2/radio/Radio.java\n+++ b/graylog2-radio/src/main/java/org/graylog2/radio/Radio.java\n@@ -189,7 +189,10 @@\n         bootstrap.setOption(\"child.tcpNoDelay\", true);\n         bootstrap.setOption(\"child.keepAlive\", true);\n \n-        bootstrap.bind(new InetSocketAddress(configuration.getRestListenUri().getPort()));\n+        bootstrap.bind(new InetSocketAddress(\n+                configuration.getRestListenUri().getHost(),\n+                configuration.getRestListenUri().getPort()\n+        ));\n         Runtime.getRuntime().addShutdownHook(new Thread() {\n             @Override\n             public void run() {\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 192,
    "bugNodeStartChar": 7803,
    "bugNodeLength": 65,
    "fixLineNum": 192,
    "fixNodeStartChar": 7803,
    "fixNodeLength": 151,
    "sourceBeforeFix": "new InetSocketAddress(configuration.getRestListenUri().getPort())",
    "sourceAfterFix": "new InetSocketAddress(configuration.getRestListenUri().getHost(),configuration.getRestListenUri().getPort())"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "2f911ed7f1f66cc287094914f4794cbd20b3e807",
    "fixCommitParentSHA1": "0e1b9c7d24dfdcc4ef5f4d438ec1c127ca5f1775",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/Core.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/Core.java b/graylog2-server/src/main/java/org/graylog2/Core.java\nindex 1844229..d7e38f4 100644\n--- a/graylog2-server/src/main/java/org/graylog2/Core.java\n+++ b/graylog2-server/src/main/java/org/graylog2/Core.java\n@@ -438,7 +438,10 @@\n         bootstrap.setOption(\"child.tcpNoDelay\", true);\n         bootstrap.setOption(\"child.keepAlive\", true);\n \n-        bootstrap.bind(new InetSocketAddress(configuration.getRestListenUri().getPort()));\n+        bootstrap.bind(new InetSocketAddress(\n+                configuration.getRestListenUri().getHost(),\n+                configuration.getRestListenUri().getPort()\n+        ));\n         Runtime.getRuntime().addShutdownHook(new Thread() {\n             @Override\n             public void run() {\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 441,
    "bugNodeStartChar": 17453,
    "bugNodeLength": 65,
    "fixLineNum": 441,
    "fixNodeStartChar": 17453,
    "fixNodeLength": 151,
    "sourceBeforeFix": "new InetSocketAddress(configuration.getRestListenUri().getPort())",
    "sourceAfterFix": "new InetSocketAddress(configuration.getRestListenUri().getHost(),configuration.getRestListenUri().getPort())"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "20179959a30719d58840688ae8c6b59d12efa82e",
    "fixCommitParentSHA1": "3e2348faa14464774a34b4ba980521985de4c4b2",
    "bugFilePath": "test/selenium/pages/LoginPage.java",
    "fixPatch": "diff --git a/test/selenium/pages/LoginPage.java b/test/selenium/pages/LoginPage.java\nindex 3d512a4..46ab37a 100644\n--- a/test/selenium/pages/LoginPage.java\n+++ b/test/selenium/pages/LoginPage.java\n@@ -35,7 +35,7 @@\n \n     @Override\n     public String getUrl() {\n-        return routes.SessionsController.index().url();\n+        return routes.SessionsController.index(\"\").url();\n     }\n \n     @Override\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 38,
    "bugNodeStartChar": 1264,
    "bugNodeLength": 33,
    "fixLineNum": 38,
    "fixNodeStartChar": 1264,
    "fixNodeLength": 35,
    "sourceBeforeFix": "routes.SessionsController.index()",
    "sourceAfterFix": "routes.SessionsController.index(\"\")"
  },
  {
    "bugType": "MORE_SPECIFIC_IF",
    "fixCommitSHA1": "4975905a26f33c8e57583033c4b5f65b09d3e99a",
    "fixCommitParentSHA1": "921aa470a8245fffe2107e3d617023a61b972d5e",
    "bugFilePath": "app/controllers/SessionsController.java",
    "fixPatch": "diff --git a/app/controllers/SessionsController.java b/app/controllers/SessionsController.java\nindex 64bdd6f..61055d8 100644\n--- a/app/controllers/SessionsController.java\n+++ b/app/controllers/SessionsController.java\n@@ -102,7 +102,7 @@\n \n             // if we were redirected from somewhere else because the session had expired, redirect back to that page\n             // otherwise use the configured startpage (or skip it if that was requested)\n-            if (r.destination != null) {\n+            if (r.destination != null && !r.destination.isEmpty()) {\n                 return redirect(r.destination);\n             }\n             // upon redirect, the auth layer will load the user with the given session and log the user in.\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 105,
    "bugNodeStartChar": 3991,
    "bugNodeLength": 21,
    "fixLineNum": 105,
    "fixNodeStartChar": 3991,
    "fixNodeLength": 49,
    "sourceBeforeFix": "r.destination != null",
    "sourceAfterFix": "r.destination != null && !r.destination.isEmpty()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "7dac3f1da5a04390d597b09fcc03ad08892a99d1",
    "fixCommitParentSHA1": "185193de3d44cab84a3fdc9b26d7fe8f3da54938",
    "bugFilePath": "app/controllers/MessageCountsController.java",
    "fixPatch": "diff --git a/app/controllers/MessageCountsController.java b/app/controllers/MessageCountsController.java\nindex e9609c0..13f9c18 100644\n--- a/app/controllers/MessageCountsController.java\n+++ b/app/controllers/MessageCountsController.java\n@@ -37,9 +37,9 @@\n     private MessagesService messagesService;\n \n     public Result total() {\n-        int countResult = messagesService.total();\n+        long countResult = messagesService.total();\n \n-        Map<String, Integer> result = Maps.newHashMap();\n+        Map<String, Long> result = Maps.newHashMap();\n         result.put(\"events\", countResult);\n \n         return ok(new Gson().toJson(result)).as(\"application/json\");\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 42,
    "bugNodeStartChar": 1327,
    "bugNodeLength": 20,
    "fixLineNum": 42,
    "fixNodeStartChar": 1327,
    "fixNodeLength": 17,
    "sourceBeforeFix": "Map<String,Integer>",
    "sourceAfterFix": "Map<String,Long>"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "7dac3f1da5a04390d597b09fcc03ad08892a99d1",
    "fixCommitParentSHA1": "185193de3d44cab84a3fdc9b26d7fe8f3da54938",
    "bugFilePath": "app/models/MessagesService.java",
    "fixPatch": "diff --git a/app/models/MessagesService.java b/app/models/MessagesService.java\nindex 7be19c9..65a4ad0 100644\n--- a/app/models/MessagesService.java\n+++ b/app/models/MessagesService.java\n@@ -82,11 +82,11 @@\n         return Sets.newHashSet();\n     }\n \n-    public int total() {\n+    public long total() {\n         try {\n-            return Cache.getOrElse(TOTAL_CNT_CACHE_KEY, new Callable<Integer>() {\n+            return Cache.getOrElse(TOTAL_CNT_CACHE_KEY, new Callable<Long>() {\n                 @Override\n-                public Integer call() throws Exception {\n+                public Long call() throws Exception {\n                     MessageCountResponse response = api.get(MessageCountResponse.class).path(\"/count/total\").execute();\n                     return response.events;\n                 }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 87,
    "bugNodeStartChar": 3123,
    "bugNodeLength": 17,
    "fixLineNum": 87,
    "fixNodeStartChar": 3123,
    "fixNodeLength": 14,
    "sourceBeforeFix": "Callable<Integer>",
    "sourceAfterFix": "Callable<Long>"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "7dac3f1da5a04390d597b09fcc03ad08892a99d1",
    "fixCommitParentSHA1": "185193de3d44cab84a3fdc9b26d7fe8f3da54938",
    "bugFilePath": "app/models/MessagesService.java",
    "fixPatch": "diff --git a/app/models/MessagesService.java b/app/models/MessagesService.java\nindex 7be19c9..65a4ad0 100644\n--- a/app/models/MessagesService.java\n+++ b/app/models/MessagesService.java\n@@ -82,11 +82,11 @@\n         return Sets.newHashSet();\n     }\n \n-    public int total() {\n+    public long total() {\n         try {\n-            return Cache.getOrElse(TOTAL_CNT_CACHE_KEY, new Callable<Integer>() {\n+            return Cache.getOrElse(TOTAL_CNT_CACHE_KEY, new Callable<Long>() {\n                 @Override\n-                public Integer call() throws Exception {\n+                public Long call() throws Exception {\n                     MessageCountResponse response = api.get(MessageCountResponse.class).path(\"/count/total\").execute();\n                     return response.events;\n                 }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 88,
    "bugNodeStartChar": 3161,
    "bugNodeLength": 248,
    "fixLineNum": 88,
    "fixNodeStartChar": 3161,
    "fixNodeLength": 245,
    "sourceBeforeFix": "@Override public Integer call() throws Exception {   MessageCountResponse response=api.get(MessageCountResponse.class).path(\"/count/total\").execute();   return response.events; } ",
    "sourceAfterFix": "@Override public Long call() throws Exception {   MessageCountResponse response=api.get(MessageCountResponse.class).path(\"/count/total\").execute();   return response.events; } "
  },
  {
    "bugType": "SWAP_BOOLEAN_LITERAL",
    "fixCommitSHA1": "80ab41dff6ec63a591cb2f7450a6c8582f7b3fcb",
    "fixCommitParentSHA1": "ad782e750d50102743cf121f3a45a4823c9909c3",
    "bugFilePath": "app/lib/notifications/CheckServerClocksNotification.java",
    "fixPatch": "diff --git a/app/lib/notifications/CheckServerClocksNotification.java b/app/lib/notifications/CheckServerClocksNotification.java\nindex 23674fe..92a5593 100644\n--- a/app/lib/notifications/CheckServerClocksNotification.java\n+++ b/app/lib/notifications/CheckServerClocksNotification.java\n@@ -43,6 +43,6 @@\n \n     @Override\n     public boolean isCloseable() {\n-        return false;\n+        return true;\n     }\n }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 46,
    "bugNodeStartChar": 1660,
    "bugNodeLength": 13,
    "fixLineNum": 46,
    "fixNodeStartChar": 1660,
    "fixNodeLength": 12,
    "sourceBeforeFix": "return false; ",
    "sourceAfterFix": "return true; "
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "578bd281f8cb12f46ca902cd2b87b0838a831a90",
    "fixCommitParentSHA1": "9ccfd7107f8616b18ff977638ff8a699fb9ed292",
    "bugFilePath": "graylog2-inputs/src/main/java/org/graylog2/inputs/syslog/SyslogProcessor.java",
    "fixPatch": "diff --git a/graylog2-inputs/src/main/java/org/graylog2/inputs/syslog/SyslogProcessor.java b/graylog2-inputs/src/main/java/org/graylog2/inputs/syslog/SyslogProcessor.java\nindex ea929c4..ec13062 100644\n--- a/graylog2-inputs/src/main/java/org/graylog2/inputs/syslog/SyslogProcessor.java\n+++ b/graylog2-inputs/src/main/java/org/graylog2/inputs/syslog/SyslogProcessor.java\n@@ -86,7 +86,7 @@\n             lm = parse(msg, remoteAddress);\n         } catch (Exception e) {\n             parsingFailures.mark();\n-            LOG.error(\"Could not parse syslog message. Not further handling.\", e);\n+            LOG.warn(\"Could not parse syslog message. Not further handling.\", e);\n             return;\n         }\n \n@@ -193,10 +193,10 @@\n         // Check if date could be parsed.\n         if (msg.getDate() == null) {\n             if (config.getBoolean(SyslogInputBase.CK_ALLOW_OVERRIDE_DATE)) {\n-                LOG.info(\"Date could not be parsed. Was set to NOW because {} is true.\", SyslogInputBase.CK_ALLOW_OVERRIDE_DATE);\n+                LOG.debug(\"Date could not be parsed. Was set to NOW because {} is true.\", SyslogInputBase.CK_ALLOW_OVERRIDE_DATE);\n                 return Tools.iso8601();\n             } else {\n-                LOG.info(\"Syslog message is missing date or date could not be parsed. (Possibly set {} to true) \"\n+                LOG.warn(\"Syslog message is missing date or date could not be parsed. (Possibly set {} to true) \"\n                         + \"Not further handling. Message was: {}\", SyslogInputBase.CK_ALLOW_OVERRIDE_DATE, new String(msg.getRaw()));\n                 throw new IllegalStateException();\n             }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 89,
    "bugNodeStartChar": 3413,
    "bugNodeLength": 69,
    "fixLineNum": 89,
    "fixNodeStartChar": 3413,
    "fixNodeLength": 68,
    "sourceBeforeFix": "LOG.error(\"Could not parse syslog message. Not further handling.\",e)",
    "sourceAfterFix": "LOG.warn(\"Could not parse syslog message. Not further handling.\",e)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "578bd281f8cb12f46ca902cd2b87b0838a831a90",
    "fixCommitParentSHA1": "9ccfd7107f8616b18ff977638ff8a699fb9ed292",
    "bugFilePath": "graylog2-inputs/src/main/java/org/graylog2/inputs/syslog/SyslogProcessor.java",
    "fixPatch": "diff --git a/graylog2-inputs/src/main/java/org/graylog2/inputs/syslog/SyslogProcessor.java b/graylog2-inputs/src/main/java/org/graylog2/inputs/syslog/SyslogProcessor.java\nindex ea929c4..ec13062 100644\n--- a/graylog2-inputs/src/main/java/org/graylog2/inputs/syslog/SyslogProcessor.java\n+++ b/graylog2-inputs/src/main/java/org/graylog2/inputs/syslog/SyslogProcessor.java\n@@ -86,7 +86,7 @@\n             lm = parse(msg, remoteAddress);\n         } catch (Exception e) {\n             parsingFailures.mark();\n-            LOG.error(\"Could not parse syslog message. Not further handling.\", e);\n+            LOG.warn(\"Could not parse syslog message. Not further handling.\", e);\n             return;\n         }\n \n@@ -193,10 +193,10 @@\n         // Check if date could be parsed.\n         if (msg.getDate() == null) {\n             if (config.getBoolean(SyslogInputBase.CK_ALLOW_OVERRIDE_DATE)) {\n-                LOG.info(\"Date could not be parsed. Was set to NOW because {} is true.\", SyslogInputBase.CK_ALLOW_OVERRIDE_DATE);\n+                LOG.debug(\"Date could not be parsed. Was set to NOW because {} is true.\", SyslogInputBase.CK_ALLOW_OVERRIDE_DATE);\n                 return Tools.iso8601();\n             } else {\n-                LOG.info(\"Syslog message is missing date or date could not be parsed. (Possibly set {} to true) \"\n+                LOG.warn(\"Syslog message is missing date or date could not be parsed. (Possibly set {} to true) \"\n                         + \"Not further handling. Message was: {}\", SyslogInputBase.CK_ALLOW_OVERRIDE_DATE, new String(msg.getRaw()));\n                 throw new IllegalStateException();\n             }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 89,
    "bugNodeStartChar": 3413,
    "bugNodeLength": 69,
    "fixLineNum": 89,
    "fixNodeStartChar": 3413,
    "fixNodeLength": 68,
    "sourceBeforeFix": "LOG.error(\"Could not parse syslog message. Not further handling.\",e)",
    "sourceAfterFix": "LOG.warn(\"Could not parse syslog message. Not further handling.\",e)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "578bd281f8cb12f46ca902cd2b87b0838a831a90",
    "fixCommitParentSHA1": "9ccfd7107f8616b18ff977638ff8a699fb9ed292",
    "bugFilePath": "graylog2-inputs/src/main/java/org/graylog2/inputs/syslog/SyslogProcessor.java",
    "fixPatch": "diff --git a/graylog2-inputs/src/main/java/org/graylog2/inputs/syslog/SyslogProcessor.java b/graylog2-inputs/src/main/java/org/graylog2/inputs/syslog/SyslogProcessor.java\nindex ea929c4..ec13062 100644\n--- a/graylog2-inputs/src/main/java/org/graylog2/inputs/syslog/SyslogProcessor.java\n+++ b/graylog2-inputs/src/main/java/org/graylog2/inputs/syslog/SyslogProcessor.java\n@@ -86,7 +86,7 @@\n             lm = parse(msg, remoteAddress);\n         } catch (Exception e) {\n             parsingFailures.mark();\n-            LOG.error(\"Could not parse syslog message. Not further handling.\", e);\n+            LOG.warn(\"Could not parse syslog message. Not further handling.\", e);\n             return;\n         }\n \n@@ -193,10 +193,10 @@\n         // Check if date could be parsed.\n         if (msg.getDate() == null) {\n             if (config.getBoolean(SyslogInputBase.CK_ALLOW_OVERRIDE_DATE)) {\n-                LOG.info(\"Date could not be parsed. Was set to NOW because {} is true.\", SyslogInputBase.CK_ALLOW_OVERRIDE_DATE);\n+                LOG.debug(\"Date could not be parsed. Was set to NOW because {} is true.\", SyslogInputBase.CK_ALLOW_OVERRIDE_DATE);\n                 return Tools.iso8601();\n             } else {\n-                LOG.info(\"Syslog message is missing date or date could not be parsed. (Possibly set {} to true) \"\n+                LOG.warn(\"Syslog message is missing date or date could not be parsed. (Possibly set {} to true) \"\n                         + \"Not further handling. Message was: {}\", SyslogInputBase.CK_ALLOW_OVERRIDE_DATE, new String(msg.getRaw()));\n                 throw new IllegalStateException();\n             }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 196,
    "bugNodeStartChar": 7688,
    "bugNodeLength": 112,
    "fixLineNum": 196,
    "fixNodeStartChar": 7688,
    "fixNodeLength": 113,
    "sourceBeforeFix": "LOG.info(\"Date could not be parsed. Was set to NOW because {} is true.\",SyslogInputBase.CK_ALLOW_OVERRIDE_DATE)",
    "sourceAfterFix": "LOG.debug(\"Date could not be parsed. Was set to NOW because {} is true.\",SyslogInputBase.CK_ALLOW_OVERRIDE_DATE)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "578bd281f8cb12f46ca902cd2b87b0838a831a90",
    "fixCommitParentSHA1": "9ccfd7107f8616b18ff977638ff8a699fb9ed292",
    "bugFilePath": "graylog2-inputs/src/main/java/org/graylog2/inputs/syslog/SyslogProcessor.java",
    "fixPatch": "diff --git a/graylog2-inputs/src/main/java/org/graylog2/inputs/syslog/SyslogProcessor.java b/graylog2-inputs/src/main/java/org/graylog2/inputs/syslog/SyslogProcessor.java\nindex ea929c4..ec13062 100644\n--- a/graylog2-inputs/src/main/java/org/graylog2/inputs/syslog/SyslogProcessor.java\n+++ b/graylog2-inputs/src/main/java/org/graylog2/inputs/syslog/SyslogProcessor.java\n@@ -86,7 +86,7 @@\n             lm = parse(msg, remoteAddress);\n         } catch (Exception e) {\n             parsingFailures.mark();\n-            LOG.error(\"Could not parse syslog message. Not further handling.\", e);\n+            LOG.warn(\"Could not parse syslog message. Not further handling.\", e);\n             return;\n         }\n \n@@ -193,10 +193,10 @@\n         // Check if date could be parsed.\n         if (msg.getDate() == null) {\n             if (config.getBoolean(SyslogInputBase.CK_ALLOW_OVERRIDE_DATE)) {\n-                LOG.info(\"Date could not be parsed. Was set to NOW because {} is true.\", SyslogInputBase.CK_ALLOW_OVERRIDE_DATE);\n+                LOG.debug(\"Date could not be parsed. Was set to NOW because {} is true.\", SyslogInputBase.CK_ALLOW_OVERRIDE_DATE);\n                 return Tools.iso8601();\n             } else {\n-                LOG.info(\"Syslog message is missing date or date could not be parsed. (Possibly set {} to true) \"\n+                LOG.warn(\"Syslog message is missing date or date could not be parsed. (Possibly set {} to true) \"\n                         + \"Not further handling. Message was: {}\", SyslogInputBase.CK_ALLOW_OVERRIDE_DATE, new String(msg.getRaw()));\n                 throw new IllegalStateException();\n             }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 196,
    "bugNodeStartChar": 7688,
    "bugNodeLength": 112,
    "fixLineNum": 196,
    "fixNodeStartChar": 7688,
    "fixNodeLength": 113,
    "sourceBeforeFix": "LOG.info(\"Date could not be parsed. Was set to NOW because {} is true.\",SyslogInputBase.CK_ALLOW_OVERRIDE_DATE)",
    "sourceAfterFix": "LOG.debug(\"Date could not be parsed. Was set to NOW because {} is true.\",SyslogInputBase.CK_ALLOW_OVERRIDE_DATE)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "578bd281f8cb12f46ca902cd2b87b0838a831a90",
    "fixCommitParentSHA1": "9ccfd7107f8616b18ff977638ff8a699fb9ed292",
    "bugFilePath": "graylog2-inputs/src/main/java/org/graylog2/inputs/syslog/SyslogProcessor.java",
    "fixPatch": "diff --git a/graylog2-inputs/src/main/java/org/graylog2/inputs/syslog/SyslogProcessor.java b/graylog2-inputs/src/main/java/org/graylog2/inputs/syslog/SyslogProcessor.java\nindex ea929c4..ec13062 100644\n--- a/graylog2-inputs/src/main/java/org/graylog2/inputs/syslog/SyslogProcessor.java\n+++ b/graylog2-inputs/src/main/java/org/graylog2/inputs/syslog/SyslogProcessor.java\n@@ -86,7 +86,7 @@\n             lm = parse(msg, remoteAddress);\n         } catch (Exception e) {\n             parsingFailures.mark();\n-            LOG.error(\"Could not parse syslog message. Not further handling.\", e);\n+            LOG.warn(\"Could not parse syslog message. Not further handling.\", e);\n             return;\n         }\n \n@@ -193,10 +193,10 @@\n         // Check if date could be parsed.\n         if (msg.getDate() == null) {\n             if (config.getBoolean(SyslogInputBase.CK_ALLOW_OVERRIDE_DATE)) {\n-                LOG.info(\"Date could not be parsed. Was set to NOW because {} is true.\", SyslogInputBase.CK_ALLOW_OVERRIDE_DATE);\n+                LOG.debug(\"Date could not be parsed. Was set to NOW because {} is true.\", SyslogInputBase.CK_ALLOW_OVERRIDE_DATE);\n                 return Tools.iso8601();\n             } else {\n-                LOG.info(\"Syslog message is missing date or date could not be parsed. (Possibly set {} to true) \"\n+                LOG.warn(\"Syslog message is missing date or date could not be parsed. (Possibly set {} to true) \"\n                         + \"Not further handling. Message was: {}\", SyslogInputBase.CK_ALLOW_OVERRIDE_DATE, new String(msg.getRaw()));\n                 throw new IllegalStateException();\n             }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 199,
    "bugNodeStartChar": 7879,
    "bugNodeLength": 230,
    "fixLineNum": 199,
    "fixNodeStartChar": 7879,
    "fixNodeLength": 230,
    "sourceBeforeFix": "LOG.info(\"Syslog message is missing date or date could not be parsed. (Possibly set {} to true) \" + \"Not further handling. Message was: {}\",SyslogInputBase.CK_ALLOW_OVERRIDE_DATE,new String(msg.getRaw()))",
    "sourceAfterFix": "LOG.warn(\"Syslog message is missing date or date could not be parsed. (Possibly set {} to true) \" + \"Not further handling. Message was: {}\",SyslogInputBase.CK_ALLOW_OVERRIDE_DATE,new String(msg.getRaw()))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "578bd281f8cb12f46ca902cd2b87b0838a831a90",
    "fixCommitParentSHA1": "9ccfd7107f8616b18ff977638ff8a699fb9ed292",
    "bugFilePath": "graylog2-inputs/src/main/java/org/graylog2/inputs/syslog/SyslogProcessor.java",
    "fixPatch": "diff --git a/graylog2-inputs/src/main/java/org/graylog2/inputs/syslog/SyslogProcessor.java b/graylog2-inputs/src/main/java/org/graylog2/inputs/syslog/SyslogProcessor.java\nindex ea929c4..ec13062 100644\n--- a/graylog2-inputs/src/main/java/org/graylog2/inputs/syslog/SyslogProcessor.java\n+++ b/graylog2-inputs/src/main/java/org/graylog2/inputs/syslog/SyslogProcessor.java\n@@ -86,7 +86,7 @@\n             lm = parse(msg, remoteAddress);\n         } catch (Exception e) {\n             parsingFailures.mark();\n-            LOG.error(\"Could not parse syslog message. Not further handling.\", e);\n+            LOG.warn(\"Could not parse syslog message. Not further handling.\", e);\n             return;\n         }\n \n@@ -193,10 +193,10 @@\n         // Check if date could be parsed.\n         if (msg.getDate() == null) {\n             if (config.getBoolean(SyslogInputBase.CK_ALLOW_OVERRIDE_DATE)) {\n-                LOG.info(\"Date could not be parsed. Was set to NOW because {} is true.\", SyslogInputBase.CK_ALLOW_OVERRIDE_DATE);\n+                LOG.debug(\"Date could not be parsed. Was set to NOW because {} is true.\", SyslogInputBase.CK_ALLOW_OVERRIDE_DATE);\n                 return Tools.iso8601();\n             } else {\n-                LOG.info(\"Syslog message is missing date or date could not be parsed. (Possibly set {} to true) \"\n+                LOG.warn(\"Syslog message is missing date or date could not be parsed. (Possibly set {} to true) \"\n                         + \"Not further handling. Message was: {}\", SyslogInputBase.CK_ALLOW_OVERRIDE_DATE, new String(msg.getRaw()));\n                 throw new IllegalStateException();\n             }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 199,
    "bugNodeStartChar": 7879,
    "bugNodeLength": 230,
    "fixLineNum": 199,
    "fixNodeStartChar": 7879,
    "fixNodeLength": 230,
    "sourceBeforeFix": "LOG.info(\"Syslog message is missing date or date could not be parsed. (Possibly set {} to true) \" + \"Not further handling. Message was: {}\",SyslogInputBase.CK_ALLOW_OVERRIDE_DATE,new String(msg.getRaw()))",
    "sourceAfterFix": "LOG.warn(\"Syslog message is missing date or date could not be parsed. (Possibly set {} to true) \" + \"Not further handling. Message was: {}\",SyslogInputBase.CK_ALLOW_OVERRIDE_DATE,new String(msg.getRaw()))"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "902fd82cfb03cf097420689304a8791fd1e15798",
    "fixCommitParentSHA1": "73fb52ae06465e43e985c020d443689bc1dd2934",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/security/RestPermissions.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/security/RestPermissions.java b/graylog2-server/src/main/java/org/graylog2/security/RestPermissions.java\nindex e5d6d3b..6b1824a 100644\n--- a/graylog2-server/src/main/java/org/graylog2/security/RestPermissions.java\n+++ b/graylog2-server/src/main/java/org/graylog2/security/RestPermissions.java\n@@ -109,7 +109,10 @@\n             MESSAGES_READ,\n             METRICS_READ,\n             SYSTEM_READ,\n-            THROUGHPUT_READ\n+            THROUGHPUT_READ,\n+            SAVEDSEARCHES_CREATE,\n+            SAVEDSEARCHES_EDIT,\n+            SAVEDSEARCHES_READ\n     );\n \n     public static Set<String> readerPermissions(String username) {\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 102,
    "bugNodeStartChar": 5612,
    "bugNodeLength": 299,
    "fixLineNum": 102,
    "fixNodeStartChar": 5612,
    "fixNodeLength": 397,
    "sourceBeforeFix": "Sets.newHashSet(BUFFERS_READ,FIELDNAMES_READ,INDEXERCLUSTER_READ,INPUTS_READ,JVMSTATS_READ,MESSAGECOUNT_READ,MESSAGES_READ,METRICS_READ,SYSTEM_READ,THROUGHPUT_READ)",
    "sourceAfterFix": "Sets.newHashSet(BUFFERS_READ,FIELDNAMES_READ,INDEXERCLUSTER_READ,INPUTS_READ,JVMSTATS_READ,MESSAGECOUNT_READ,MESSAGES_READ,METRICS_READ,SYSTEM_READ,THROUGHPUT_READ,SAVEDSEARCHES_CREATE,SAVEDSEARCHES_EDIT,SAVEDSEARCHES_READ)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "168b6172617dcfc6c4cf05082d76ad048e907799",
    "fixCommitParentSHA1": "2eb6cdd0e1d3353eaacef0b11eba85119c1b26bf",
    "bugFilePath": "app/models/Radio.java",
    "fixPatch": "diff --git a/app/models/Radio.java b/app/models/Radio.java\nindex e980c08..9514ca6 100644\n--- a/app/models/Radio.java\n+++ b/app/models/Radio.java\n@@ -147,16 +147,16 @@\n \n     public boolean launchExistingInput(String inputId) {\n         try {\n-            api.get(EmptyResponse.class)\n-                    .path(\"/system/inputs/{0}\", inputId)\n+            api.get(InputLaunchResponse.class)\n+                    .path(\"/system/inputs/{0}/launch\", inputId)\n                     .radio(this)\n                     .expect(Http.Status.ACCEPTED)\n                     .execute();\n             return true;\n         } catch (APIException e) {\n-            log.error(\"Could not terminate input \" + inputId, e);\n+            log.error(\"Could not launch input \" + inputId, e);\n         } catch (IOException e) {\n-            log.error(\"Could not terminate input \" + inputId, e);\n+            log.error(\"Could not launch input \" + inputId, e);\n         }\n \n         return false;\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 150,
    "bugNodeStartChar": 4573,
    "bugNodeLength": 19,
    "fixLineNum": 150,
    "fixNodeStartChar": 4573,
    "fixNodeLength": 25,
    "sourceBeforeFix": "EmptyResponse.class",
    "sourceAfterFix": "InputLaunchResponse.class"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "5b4979166050e553fd967e5094509de7975651ec",
    "fixCommitParentSHA1": "c0af11ae2a8891fc9b23e06cba1879889617daca",
    "bugFilePath": "graylog2-inputs/src/main/java/org/graylog2/inputs/gelf/gelf/GELFChunkManager.java",
    "fixPatch": "diff --git a/graylog2-inputs/src/main/java/org/graylog2/inputs/gelf/gelf/GELFChunkManager.java b/graylog2-inputs/src/main/java/org/graylog2/inputs/gelf/gelf/GELFChunkManager.java\nindex 817b7dc..ddc356f 100644\n--- a/graylog2-inputs/src/main/java/org/graylog2/inputs/gelf/gelf/GELFChunkManager.java\n+++ b/graylog2-inputs/src/main/java/org/graylog2/inputs/gelf/gelf/GELFChunkManager.java\n@@ -79,7 +79,7 @@\n                         continue;\n                     }\n \n-                    // Not oudated. Maybe complete?\n+                    // Not outdated. Maybe complete?\n                     if (isComplete(messageId)) {\n                         // We got a complete message! Re-assemble and insert to GELFProcessor.\n                         LOG.debug(\"Message <{}> seems to be complete. Handling now.\", messageId);\n@@ -182,7 +182,7 @@\n             chunks.get(chunk.getId()).put(chunk.getSequenceNumber(), chunk);\n         } else {\n             // First chunk of message.\n-            Map<Integer, GELFMessageChunk> c = Maps.newHashMap();\n+            Map<Integer, GELFMessageChunk> c = Maps.newTreeMap();\n             c.put(chunk.getSequenceNumber(), chunk);\n             chunks.put(chunk.getId(), c);\n         }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 185,
    "bugNodeStartChar": 6729,
    "bugNodeLength": 17,
    "fixLineNum": 185,
    "fixNodeStartChar": 6729,
    "fixNodeLength": 17,
    "sourceBeforeFix": "Maps.newHashMap()",
    "sourceAfterFix": "Maps.newTreeMap()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "5b4979166050e553fd967e5094509de7975651ec",
    "fixCommitParentSHA1": "c0af11ae2a8891fc9b23e06cba1879889617daca",
    "bugFilePath": "graylog2-inputs/src/main/java/org/graylog2/inputs/gelf/gelf/GELFChunkManager.java",
    "fixPatch": "diff --git a/graylog2-inputs/src/main/java/org/graylog2/inputs/gelf/gelf/GELFChunkManager.java b/graylog2-inputs/src/main/java/org/graylog2/inputs/gelf/gelf/GELFChunkManager.java\nindex 817b7dc..ddc356f 100644\n--- a/graylog2-inputs/src/main/java/org/graylog2/inputs/gelf/gelf/GELFChunkManager.java\n+++ b/graylog2-inputs/src/main/java/org/graylog2/inputs/gelf/gelf/GELFChunkManager.java\n@@ -79,7 +79,7 @@\n                         continue;\n                     }\n \n-                    // Not oudated. Maybe complete?\n+                    // Not outdated. Maybe complete?\n                     if (isComplete(messageId)) {\n                         // We got a complete message! Re-assemble and insert to GELFProcessor.\n                         LOG.debug(\"Message <{}> seems to be complete. Handling now.\", messageId);\n@@ -182,7 +182,7 @@\n             chunks.get(chunk.getId()).put(chunk.getSequenceNumber(), chunk);\n         } else {\n             // First chunk of message.\n-            Map<Integer, GELFMessageChunk> c = Maps.newHashMap();\n+            Map<Integer, GELFMessageChunk> c = Maps.newTreeMap();\n             c.put(chunk.getSequenceNumber(), chunk);\n             chunks.put(chunk.getId(), c);\n         }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 185,
    "bugNodeStartChar": 6729,
    "bugNodeLength": 17,
    "fixLineNum": 185,
    "fixNodeStartChar": 6729,
    "fixNodeLength": 17,
    "sourceBeforeFix": "Maps.newHashMap()",
    "sourceAfterFix": "Maps.newTreeMap()"
  },
  {
    "bugType": "CHANGE_OPERAND",
    "fixCommitSHA1": "96a7c11c16fe2a6467cfcf2ed2366dc6cc56924c",
    "fixCommitParentSHA1": "2dcde6adc41b929809ea6510f352f2030d3ba953",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/dashboards/widgets/FieldChartWidget.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/dashboards/widgets/FieldChartWidget.java b/graylog2-server/src/main/java/org/graylog2/dashboards/widgets/FieldChartWidget.java\nindex 91da2c4..c2d9da8 100644\n--- a/graylog2-server/src/main/java/org/graylog2/dashboards/widgets/FieldChartWidget.java\n+++ b/graylog2-server/src/main/java/org/graylog2/dashboards/widgets/FieldChartWidget.java\n@@ -87,7 +87,7 @@\n     protected ComputationResult compute() {\n         String filter = null;\n         if (streamId != null && !streamId.isEmpty()) {\n-            filter = \"streams:\" + filter;\n+            filter = \"streams:\" + streamId;\n         }\n \n         try {\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 90,
    "bugNodeStartChar": 3152,
    "bugNodeLength": 19,
    "fixLineNum": 90,
    "fixNodeStartChar": 3152,
    "fixNodeLength": 21,
    "sourceBeforeFix": "\"streams:\" + filter",
    "sourceAfterFix": "\"streams:\" + streamId"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "96a7c11c16fe2a6467cfcf2ed2366dc6cc56924c",
    "fixCommitParentSHA1": "2dcde6adc41b929809ea6510f352f2030d3ba953",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/dashboards/widgets/FieldChartWidget.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/dashboards/widgets/FieldChartWidget.java b/graylog2-server/src/main/java/org/graylog2/dashboards/widgets/FieldChartWidget.java\nindex 91da2c4..c2d9da8 100644\n--- a/graylog2-server/src/main/java/org/graylog2/dashboards/widgets/FieldChartWidget.java\n+++ b/graylog2-server/src/main/java/org/graylog2/dashboards/widgets/FieldChartWidget.java\n@@ -87,7 +87,7 @@\n     protected ComputationResult compute() {\n         String filter = null;\n         if (streamId != null && !streamId.isEmpty()) {\n-            filter = \"streams:\" + filter;\n+            filter = \"streams:\" + streamId;\n         }\n \n         try {\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 90,
    "bugNodeStartChar": 3152,
    "bugNodeLength": 19,
    "fixLineNum": 90,
    "fixNodeStartChar": 3152,
    "fixNodeLength": 21,
    "sourceBeforeFix": "\"streams:\" + filter",
    "sourceAfterFix": "\"streams:\" + streamId"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "b28171ed750594402a3d1a93bca38beea9ba835a",
    "fixCommitParentSHA1": "36900cac998f0e2d5e1276eaa04cfa65dc18eaad",
    "bugFilePath": "app/lib/ApiClientImpl.java",
    "fixPatch": "diff --git a/app/lib/ApiClientImpl.java b/app/lib/ApiClientImpl.java\nindex 521787c..2d3e2e7 100644\n--- a/app/lib/ApiClientImpl.java\n+++ b/app/lib/ApiClientImpl.java\n@@ -319,7 +319,7 @@\n             if (radio == null) {\n                 if (node == null) {\n                     if (nodes != null) {\n-                        log.error(\"Multiple nodes are set, but execute() was called. This is most likely a bug and you meant to call executeOnAll()!\");\n+                        log.error(\"Multiple nodes are set, but execute() was called. This is most likely a bug and you meant to call executeOnAll()!\", new Throwable());\n                     }\n                     node(serverNodes.any());\n                 }\n@@ -334,7 +334,7 @@\n                 if (user != null) {\n                     session(user.getSessionId());\n                 } else {\n-                    log.warn(\"You did not add unauthenticated() nor session() but also don't have a current user. You probably meant unauthenticated(). This is a bug!\");\n+                    log.warn(\"You did not add unauthenticated() nor session() but also don't have a current user. You probably meant unauthenticated(). This is a bug!\", new Throwable());\n                 }\n             }\n             final URL url = prepareUrl(target);\n@@ -544,7 +544,7 @@\n                 }\n \n                 if (unauthenticated && sessionId != null) {\n-                    log.error(\"Both session() and unauthenticated() are set for this request, this is a bug, using session id.\");\n+                    log.error(\"Both session() and unauthenticated() are set for this request, this is a bug, using session id.\", new Throwable());\n                 }\n                 if (sessionId != null) {\n                     // pass the current session id via basic auth and special \"password\"\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 322,
    "bugNodeStartChar": 10296,
    "bugNodeLength": 126,
    "fixLineNum": 322,
    "fixNodeStartChar": 10296,
    "fixNodeLength": 143,
    "sourceBeforeFix": "log.error(\"Multiple nodes are set, but execute() was called. This is most likely a bug and you meant to call executeOnAll()!\")",
    "sourceAfterFix": "log.error(\"Multiple nodes are set, but execute() was called. This is most likely a bug and you meant to call executeOnAll()!\",new Throwable())"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "b28171ed750594402a3d1a93bca38beea9ba835a",
    "fixCommitParentSHA1": "36900cac998f0e2d5e1276eaa04cfa65dc18eaad",
    "bugFilePath": "app/lib/ApiClientImpl.java",
    "fixPatch": "diff --git a/app/lib/ApiClientImpl.java b/app/lib/ApiClientImpl.java\nindex 521787c..2d3e2e7 100644\n--- a/app/lib/ApiClientImpl.java\n+++ b/app/lib/ApiClientImpl.java\n@@ -319,7 +319,7 @@\n             if (radio == null) {\n                 if (node == null) {\n                     if (nodes != null) {\n-                        log.error(\"Multiple nodes are set, but execute() was called. This is most likely a bug and you meant to call executeOnAll()!\");\n+                        log.error(\"Multiple nodes are set, but execute() was called. This is most likely a bug and you meant to call executeOnAll()!\", new Throwable());\n                     }\n                     node(serverNodes.any());\n                 }\n@@ -334,7 +334,7 @@\n                 if (user != null) {\n                     session(user.getSessionId());\n                 } else {\n-                    log.warn(\"You did not add unauthenticated() nor session() but also don't have a current user. You probably meant unauthenticated(). This is a bug!\");\n+                    log.warn(\"You did not add unauthenticated() nor session() but also don't have a current user. You probably meant unauthenticated(). This is a bug!\", new Throwable());\n                 }\n             }\n             final URL url = prepareUrl(target);\n@@ -544,7 +544,7 @@\n                 }\n \n                 if (unauthenticated && sessionId != null) {\n-                    log.error(\"Both session() and unauthenticated() are set for this request, this is a bug, using session id.\");\n+                    log.error(\"Both session() and unauthenticated() are set for this request, this is a bug, using session id.\", new Throwable());\n                 }\n                 if (sessionId != null) {\n                     // pass the current session id via basic auth and special \"password\"\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 337,
    "bugNodeStartChar": 10854,
    "bugNodeLength": 148,
    "fixLineNum": 337,
    "fixNodeStartChar": 10854,
    "fixNodeLength": 165,
    "sourceBeforeFix": "log.warn(\"You did not add unauthenticated() nor session() but also don't have a current user. You probably meant unauthenticated(). This is a bug!\")",
    "sourceAfterFix": "log.warn(\"You did not add unauthenticated() nor session() but also don't have a current user. You probably meant unauthenticated(). This is a bug!\",new Throwable())"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "b28171ed750594402a3d1a93bca38beea9ba835a",
    "fixCommitParentSHA1": "36900cac998f0e2d5e1276eaa04cfa65dc18eaad",
    "bugFilePath": "app/lib/ApiClientImpl.java",
    "fixPatch": "diff --git a/app/lib/ApiClientImpl.java b/app/lib/ApiClientImpl.java\nindex 521787c..2d3e2e7 100644\n--- a/app/lib/ApiClientImpl.java\n+++ b/app/lib/ApiClientImpl.java\n@@ -319,7 +319,7 @@\n             if (radio == null) {\n                 if (node == null) {\n                     if (nodes != null) {\n-                        log.error(\"Multiple nodes are set, but execute() was called. This is most likely a bug and you meant to call executeOnAll()!\");\n+                        log.error(\"Multiple nodes are set, but execute() was called. This is most likely a bug and you meant to call executeOnAll()!\", new Throwable());\n                     }\n                     node(serverNodes.any());\n                 }\n@@ -334,7 +334,7 @@\n                 if (user != null) {\n                     session(user.getSessionId());\n                 } else {\n-                    log.warn(\"You did not add unauthenticated() nor session() but also don't have a current user. You probably meant unauthenticated(). This is a bug!\");\n+                    log.warn(\"You did not add unauthenticated() nor session() but also don't have a current user. You probably meant unauthenticated(). This is a bug!\", new Throwable());\n                 }\n             }\n             final URL url = prepareUrl(target);\n@@ -544,7 +544,7 @@\n                 }\n \n                 if (unauthenticated && sessionId != null) {\n-                    log.error(\"Both session() and unauthenticated() are set for this request, this is a bug, using session id.\");\n+                    log.error(\"Both session() and unauthenticated() are set for this request, this is a bug, using session id.\", new Throwable());\n                 }\n                 if (sessionId != null) {\n                     // pass the current session id via basic auth and special \"password\"\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 547,
    "bugNodeStartChar": 21181,
    "bugNodeLength": 108,
    "fixLineNum": 547,
    "fixNodeStartChar": 21181,
    "fixNodeLength": 125,
    "sourceBeforeFix": "log.error(\"Both session() and unauthenticated() are set for this request, this is a bug, using session id.\")",
    "sourceAfterFix": "log.error(\"Both session() and unauthenticated() are set for this request, this is a bug, using session id.\",new Throwable())"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "c9985da6dd36ba713ee1a5a4fa055bbc56b1a916",
    "fixCommitParentSHA1": "be197dd3f4830c08224934348facbabd3c9a29ac",
    "bugFilePath": "app/controllers/SearchController.java",
    "fixPatch": "diff --git a/app/controllers/SearchController.java b/app/controllers/SearchController.java\nindex 062dc6b..70854e8 100755\n--- a/app/controllers/SearchController.java\n+++ b/app/controllers/SearchController.java\n@@ -77,7 +77,7 @@\n         if (searchResult.getTotalResultCount() > 0) {\n             return ok(views.html.search.results.render(currentUser(), search, searchResult, histogramResult, q, page, null));\n         } else {\n-            return ok(views.html.search.noresults.render(currentUser(), q, searchResult));\n+            return ok(views.html.search.noresults.render(currentUser(), q, searchResult, null));\n         }\n     }\n \n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 80,
    "bugNodeStartChar": 3167,
    "bugNodeLength": 66,
    "fixLineNum": 80,
    "fixNodeStartChar": 3167,
    "fixNodeLength": 72,
    "sourceBeforeFix": "views.html.search.noresults.render(currentUser(),q,searchResult)",
    "sourceAfterFix": "views.html.search.noresults.render(currentUser(),q,searchResult,null)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "c9985da6dd36ba713ee1a5a4fa055bbc56b1a916",
    "fixCommitParentSHA1": "be197dd3f4830c08224934348facbabd3c9a29ac",
    "bugFilePath": "app/controllers/StreamSearchController.java",
    "fixPatch": "diff --git a/app/controllers/StreamSearchController.java b/app/controllers/StreamSearchController.java\nindex ac7eb19..6dd7649 100644\n--- a/app/controllers/StreamSearchController.java\n+++ b/app/controllers/StreamSearchController.java\n@@ -71,7 +71,7 @@\n         if (searchResult.getTotalResultCount() > 0) {\n             return ok(views.html.search.results.render(currentUser(), search, searchResult, histogramResult, q, page, stream));\n         } else {\n-            return ok(views.html.search.noresults.render(currentUser(), q, searchResult));\n+            return ok(views.html.search.noresults.render(currentUser(), q, searchResult, stream));\n         }\n     }\n }\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 74,
    "bugNodeStartChar": 2942,
    "bugNodeLength": 66,
    "fixLineNum": 74,
    "fixNodeStartChar": 2942,
    "fixNodeLength": 74,
    "sourceBeforeFix": "views.html.search.noresults.render(currentUser(),q,searchResult)",
    "sourceAfterFix": "views.html.search.noresults.render(currentUser(),q,searchResult,stream)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "4cd605c0ba9ffb261eac64f17d17bf1cba8a1368",
    "fixCommitParentSHA1": "fe76d849a233881f0c715b09a6109a2b4f0bb943",
    "bugFilePath": "app/Global.java",
    "fixPatch": "diff --git a/app/Global.java b/app/Global.java\nindex e6ae4c1..1a0eeb3 100644\n--- a/app/Global.java\n+++ b/app/Global.java\n@@ -92,7 +92,7 @@\n         for (String uri : uris) {\n             initialNodes[i++] = URI.create(uri);\n         }\n-        final String timezone = app.configuration().getString(\"timezone\");\n+        final String timezone = app.configuration().getString(\"timezone\", \"\");\n         if (!timezone.isEmpty()) {\n             try {\n                 Tools.setApplicationTimeZone(DateTimeZone.forID(timezone));\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 95,
    "bugNodeStartChar": 3826,
    "bugNodeLength": 41,
    "fixLineNum": 95,
    "fixNodeStartChar": 3826,
    "fixNodeLength": 45,
    "sourceBeforeFix": "app.configuration().getString(\"timezone\")",
    "sourceAfterFix": "app.configuration().getString(\"timezone\",\"\")"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "27bbefef14dfcbaf9048bb9fc92e991bbc4a36fe",
    "fixCommitParentSHA1": "d758c1478378b215a477f8bcb64757665e7da7db",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/inputs/raw/tcp/RawTCPInput.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/inputs/raw/tcp/RawTCPInput.java b/graylog2-server/src/main/java/org/graylog2/inputs/raw/tcp/RawTCPInput.java\nindex 3d5ba9d..acbb707 100644\n--- a/graylog2-server/src/main/java/org/graylog2/inputs/raw/tcp/RawTCPInput.java\n+++ b/graylog2-server/src/main/java/org/graylog2/inputs/raw/tcp/RawTCPInput.java\n@@ -57,7 +57,7 @@\n     public void launch() throws MisfireException {\n         // Register throughput counter gauges.\n         for(Map.Entry<String,Gauge<Long>> gauge : throughputCounter.gauges().entrySet()) {\n-            core.metrics().register(MetricRegistry.name(RawUDPInput.class, gauge.getKey()), gauge.getValue());\n+            core.metrics().register(MetricRegistry.name(RawTCPInput.class, gauge.getKey()), gauge.getValue());\n         }\n \n         final ExecutorService bossThreadPool = Executors.newCachedThreadPool(\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 60,
    "bugNodeStartChar": 2430,
    "bugNodeLength": 17,
    "fixLineNum": 60,
    "fixNodeStartChar": 2430,
    "fixNodeLength": 17,
    "sourceBeforeFix": "RawUDPInput.class",
    "sourceAfterFix": "RawTCPInput.class"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "3c103f5cf926b5d3b0e2b53eeefa7db4a75b80d0",
    "fixCommitParentSHA1": "9bcf32ab62047ea4913d9cde9f9e73e7acbfcda6",
    "bugFilePath": "graylog2-server/src/test/java/org/graylog2/inputs/extractors/SplitAndIndexExtractorTest.java",
    "fixPatch": "diff --git a/graylog2-server/src/test/java/org/graylog2/inputs/extractors/SplitAndIndexExtractorTest.java b/graylog2-server/src/test/java/org/graylog2/inputs/extractors/SplitAndIndexExtractorTest.java\nindex 3ebcdcd..f59035c 100644\n--- a/graylog2-server/src/test/java/org/graylog2/inputs/extractors/SplitAndIndexExtractorTest.java\n+++ b/graylog2-server/src/test/java/org/graylog2/inputs/extractors/SplitAndIndexExtractorTest.java\n@@ -87,10 +87,10 @@\n     public void testBasicExtractionWithCutStrategyCanOverwriteSameField() throws Exception {\n         Message msg = new Message(\"The short message\", \"TestUnit\", Tools.getUTCTimestampWithMilliseconds());\n \n-        SplitAndIndexExtractor x = new SplitAndIndexExtractor(\"foo\", \"foo\", Extractor.CursorStrategy.CUT, \"message\", \"message\", config(\" \", 0), \"foo\", noConverters(), Extractor.ConditionType.NONE, null);\n+        SplitAndIndexExtractor x = new SplitAndIndexExtractor(\"foo\", \"foo\", Extractor.CursorStrategy.CUT, \"message\", \"message\", config(\" \", 1), \"foo\", noConverters(), Extractor.ConditionType.NONE, null);\n         x.runExtractor(new GraylogServerStub(), msg);\n \n-        assertEquals(\"short message\", msg.getField(\"message\"));\n+        assertEquals(\"short\", msg.getField(\"message\"));\n     }\n     @Test\n     public void testBasicExtractionWithCutStrategyAtEndOfString() throws Exception {\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 90,
    "bugNodeStartChar": 4043,
    "bugNodeLength": 14,
    "fixLineNum": 90,
    "fixNodeStartChar": 4043,
    "fixNodeLength": 14,
    "sourceBeforeFix": "config(\" \",0)",
    "sourceAfterFix": "config(\" \",1)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "9bcf32ab62047ea4913d9cde9f9e73e7acbfcda6",
    "fixCommitParentSHA1": "e7454dfece0cd3c59cab2e06a71cda620c1a9605",
    "bugFilePath": "graylog2-server/src/test/java/org/graylog2/inputs/gelf/GELFProcessorTest.java",
    "fixPatch": "diff --git a/graylog2-server/src/test/java/org/graylog2/inputs/gelf/GELFProcessorTest.java b/graylog2-server/src/test/java/org/graylog2/inputs/gelf/GELFProcessorTest.java\nindex 547b1da..d6e8baf 100644\n--- a/graylog2-server/src/test/java/org/graylog2/inputs/gelf/GELFProcessorTest.java\n+++ b/graylog2-server/src/test/java/org/graylog2/inputs/gelf/GELFProcessorTest.java\n@@ -60,7 +60,7 @@\n         assertEquals(usedTimestamp, (Double) lm.getField(\"timestamp\"), 1e-8);\n         assertEquals(\"\u00fc\", lm.getField(\"_lol_utf8\"));\n         assertEquals(\"bar\", lm.getField(\"_foo\"));\n-        assertEquals(13, lm.getFields().size());\n+        assertEquals(11, lm.getFields().size());\n     }\n \n     @Test\n@@ -90,7 +90,7 @@\n         assertEquals(1, serverStub.callsToProcessBufferInserter);\n         assertNull(lm.getField(\"id\"));\n         assertEquals(\"foo\", lm.getField(\"_something\"));\n-        assertEquals(8, lm.getFields().size());\n+        assertEquals(5, lm.getFields().size());\n     }\n     \n     @Test\n@@ -105,6 +105,6 @@\n \n         assertEquals(1, serverStub.callsToProcessBufferInserter);\n         assertEquals(\"{\\\"foo\\\":\\\"zomg\\\"}\", lm.getField(\"_lol\"));\n-        assertEquals(8, lm.getFields().size());\n+        assertEquals(5, lm.getFields().size());\n     }\n }\n\\ No newline at end of file\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 63,
    "bugNodeStartChar": 3008,
    "bugNodeLength": 39,
    "fixLineNum": 63,
    "fixNodeStartChar": 3008,
    "fixNodeLength": 39,
    "sourceBeforeFix": "assertEquals(13,lm.getFields().size())",
    "sourceAfterFix": "assertEquals(11,lm.getFields().size())"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "9bcf32ab62047ea4913d9cde9f9e73e7acbfcda6",
    "fixCommitParentSHA1": "e7454dfece0cd3c59cab2e06a71cda620c1a9605",
    "bugFilePath": "graylog2-server/src/test/java/org/graylog2/inputs/gelf/GELFProcessorTest.java",
    "fixPatch": "diff --git a/graylog2-server/src/test/java/org/graylog2/inputs/gelf/GELFProcessorTest.java b/graylog2-server/src/test/java/org/graylog2/inputs/gelf/GELFProcessorTest.java\nindex 547b1da..d6e8baf 100644\n--- a/graylog2-server/src/test/java/org/graylog2/inputs/gelf/GELFProcessorTest.java\n+++ b/graylog2-server/src/test/java/org/graylog2/inputs/gelf/GELFProcessorTest.java\n@@ -60,7 +60,7 @@\n         assertEquals(usedTimestamp, (Double) lm.getField(\"timestamp\"), 1e-8);\n         assertEquals(\"\u00fc\", lm.getField(\"_lol_utf8\"));\n         assertEquals(\"bar\", lm.getField(\"_foo\"));\n-        assertEquals(13, lm.getFields().size());\n+        assertEquals(11, lm.getFields().size());\n     }\n \n     @Test\n@@ -90,7 +90,7 @@\n         assertEquals(1, serverStub.callsToProcessBufferInserter);\n         assertNull(lm.getField(\"id\"));\n         assertEquals(\"foo\", lm.getField(\"_something\"));\n-        assertEquals(8, lm.getFields().size());\n+        assertEquals(5, lm.getFields().size());\n     }\n     \n     @Test\n@@ -105,6 +105,6 @@\n \n         assertEquals(1, serverStub.callsToProcessBufferInserter);\n         assertEquals(\"{\\\"foo\\\":\\\"zomg\\\"}\", lm.getField(\"_lol\"));\n-        assertEquals(8, lm.getFields().size());\n+        assertEquals(5, lm.getFields().size());\n     }\n }\n\\ No newline at end of file\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 93,
    "bugNodeStartChar": 4296,
    "bugNodeLength": 38,
    "fixLineNum": 93,
    "fixNodeStartChar": 4296,
    "fixNodeLength": 38,
    "sourceBeforeFix": "assertEquals(8,lm.getFields().size())",
    "sourceAfterFix": "assertEquals(5,lm.getFields().size())"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "9bcf32ab62047ea4913d9cde9f9e73e7acbfcda6",
    "fixCommitParentSHA1": "e7454dfece0cd3c59cab2e06a71cda620c1a9605",
    "bugFilePath": "graylog2-server/src/test/java/org/graylog2/inputs/gelf/GELFProcessorTest.java",
    "fixPatch": "diff --git a/graylog2-server/src/test/java/org/graylog2/inputs/gelf/GELFProcessorTest.java b/graylog2-server/src/test/java/org/graylog2/inputs/gelf/GELFProcessorTest.java\nindex 547b1da..d6e8baf 100644\n--- a/graylog2-server/src/test/java/org/graylog2/inputs/gelf/GELFProcessorTest.java\n+++ b/graylog2-server/src/test/java/org/graylog2/inputs/gelf/GELFProcessorTest.java\n@@ -60,7 +60,7 @@\n         assertEquals(usedTimestamp, (Double) lm.getField(\"timestamp\"), 1e-8);\n         assertEquals(\"\u00fc\", lm.getField(\"_lol_utf8\"));\n         assertEquals(\"bar\", lm.getField(\"_foo\"));\n-        assertEquals(13, lm.getFields().size());\n+        assertEquals(11, lm.getFields().size());\n     }\n \n     @Test\n@@ -90,7 +90,7 @@\n         assertEquals(1, serverStub.callsToProcessBufferInserter);\n         assertNull(lm.getField(\"id\"));\n         assertEquals(\"foo\", lm.getField(\"_something\"));\n-        assertEquals(8, lm.getFields().size());\n+        assertEquals(5, lm.getFields().size());\n     }\n     \n     @Test\n@@ -105,6 +105,6 @@\n \n         assertEquals(1, serverStub.callsToProcessBufferInserter);\n         assertEquals(\"{\\\"foo\\\":\\\"zomg\\\"}\", lm.getField(\"_lol\"));\n-        assertEquals(8, lm.getFields().size());\n+        assertEquals(5, lm.getFields().size());\n     }\n }\n\\ No newline at end of file\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 108,
    "bugNodeStartChar": 4926,
    "bugNodeLength": 38,
    "fixLineNum": 108,
    "fixNodeStartChar": 4926,
    "fixNodeLength": 38,
    "sourceBeforeFix": "assertEquals(8,lm.getFields().size())",
    "sourceAfterFix": "assertEquals(5,lm.getFields().size())"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "700b61dacfe5ed709d08f0fe196563dc55481398",
    "fixCommitParentSHA1": "b7c55b879ecd7024b4b9441f5c4e44027515a709",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/indexer/indices/Indices.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/indexer/indices/Indices.java b/graylog2-server/src/main/java/org/graylog2/indexer/indices/Indices.java\nindex 67f96b3..1607022 100644\n--- a/graylog2-server/src/main/java/org/graylog2/indexer/indices/Indices.java\n+++ b/graylog2-server/src/main/java/org/graylog2/indexer/indices/Indices.java\n@@ -162,7 +162,7 @@\n     }\n \n     public boolean aliasExists(String alias) {\n-        return c.admin().indices().existsAliases(new IndicesGetAliasesRequest(alias)).actionGet().exists();\n+        return c.admin().indices().aliasesExist(new IndicesGetAliasesRequest(alias)).actionGet().exists();\n     }\n \n     public String aliasTarget(String alias) {\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 165,
    "bugNodeStartChar": 6357,
    "bugNodeLength": 70,
    "fixLineNum": 165,
    "fixNodeStartChar": 6357,
    "fixNodeLength": 69,
    "sourceBeforeFix": "c.admin().indices().existsAliases(new IndicesGetAliasesRequest(alias))",
    "sourceAfterFix": "c.admin().indices().aliasesExist(new IndicesGetAliasesRequest(alias))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "700b61dacfe5ed709d08f0fe196563dc55481398",
    "fixCommitParentSHA1": "b7c55b879ecd7024b4b9441f5c4e44027515a709",
    "bugFilePath": "graylog2-server/src/main/java/org/graylog2/indexer/indices/Indices.java",
    "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/indexer/indices/Indices.java b/graylog2-server/src/main/java/org/graylog2/indexer/indices/Indices.java\nindex 67f96b3..1607022 100644\n--- a/graylog2-server/src/main/java/org/graylog2/indexer/indices/Indices.java\n+++ b/graylog2-server/src/main/java/org/graylog2/indexer/indices/Indices.java\n@@ -162,7 +162,7 @@\n     }\n \n     public boolean aliasExists(String alias) {\n-        return c.admin().indices().existsAliases(new IndicesGetAliasesRequest(alias)).actionGet().exists();\n+        return c.admin().indices().aliasesExist(new IndicesGetAliasesRequest(alias)).actionGet().exists();\n     }\n \n     public String aliasTarget(String alias) {\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 165,
    "bugNodeStartChar": 6357,
    "bugNodeLength": 70,
    "fixLineNum": 165,
    "fixNodeStartChar": 6357,
    "fixNodeLength": 69,
    "sourceBeforeFix": "c.admin().indices().existsAliases(new IndicesGetAliasesRequest(alias))",
    "sourceAfterFix": "c.admin().indices().aliasesExist(new IndicesGetAliasesRequest(alias))"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "06a93403d737f57014d6357ac4792187e490f20b",
    "fixCommitParentSHA1": "bcb8ad3fde30e14d868ce2a3a94d8af4e7ca822b",
    "bugFilePath": "src/main/java/org/graylog2/Main.java",
    "fixPatch": "diff --git a/src/main/java/org/graylog2/Main.java b/src/main/java/org/graylog2/Main.java\nindex 57246a0..46e7060 100644\n--- a/src/main/java/org/graylog2/Main.java\n+++ b/src/main/java/org/graylog2/Main.java\n@@ -131,7 +131,7 @@\n             configuration.setIsMaster(false);\n         }\n         \n-        if (commandLineArguments.isLocal()) {\n+        if (commandLineArguments.isLocal() || commandLineArguments.isDebug()) {\n             // In local mode, systemstats are sent to localhost for example.\n             LOG.info(\"Running in local mode\");\n             server.setLocalMode(true);\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 134,
    "bugNodeStartChar": 5129,
    "bugNodeLength": 30,
    "fixLineNum": 134,
    "fixNodeStartChar": 5129,
    "fixNodeLength": 64,
    "sourceBeforeFix": "commandLineArguments.isLocal()",
    "sourceAfterFix": "commandLineArguments.isLocal() || commandLineArguments.isDebug()"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "b73b4c73108ed9718f84ff901ff6dfa49ed24cb9",
    "fixCommitParentSHA1": "2faf059ddd9402e9a9e6f40eceae3a1f523d035d",
    "bugFilePath": "src/main/java/org/graylog2/indexer/Indexer.java",
    "fixPatch": "diff --git a/src/main/java/org/graylog2/indexer/Indexer.java b/src/main/java/org/graylog2/indexer/Indexer.java\nindex afaddc7..24a0003 100644\n--- a/src/main/java/org/graylog2/indexer/Indexer.java\n+++ b/src/main/java/org/graylog2/indexer/Indexer.java\n@@ -60,11 +60,12 @@\n         URL url = new URL(Indexer.buildIndexURL());\n         HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n         conn.setRequestMethod(\"HEAD\");\n-        if (conn.getResponseCode() == HttpURLConnection.HTTP_OK) {\n+        // Older versions of ElasticSearch return 400 Bad Request in cse of an existing index.\n+        if (conn.getResponseCode() == HttpURLConnection.HTTP_OK || conn.getResponseCode() == HttpURLConnection.HTTP_BAD_REQUEST) {\n             return true;\n         } else {\n             if (conn.getResponseCode() != HttpURLConnection.HTTP_NOT_FOUND) {\n-                LOG.warn(\"Indexer response code was not 200 or 404, but \" + conn.getResponseCode());\n+                LOG.warn(\"Indexer response code was not (200 or 400) or 404, but \" + conn.getResponseCode());\n             }\n \n             return false;\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 63,
    "bugNodeStartChar": 2118,
    "bugNodeLength": 51,
    "fixLineNum": 64,
    "fixNodeStartChar": 2213,
    "fixNodeLength": 115,
    "sourceBeforeFix": "conn.getResponseCode() == HttpURLConnection.HTTP_OK",
    "sourceAfterFix": "conn.getResponseCode() == HttpURLConnection.HTTP_OK || conn.getResponseCode() == HttpURLConnection.HTTP_BAD_REQUEST"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "b73b4c73108ed9718f84ff901ff6dfa49ed24cb9",
    "fixCommitParentSHA1": "2faf059ddd9402e9a9e6f40eceae3a1f523d035d",
    "bugFilePath": "src/main/java/org/graylog2/indexer/Indexer.java",
    "fixPatch": "diff --git a/src/main/java/org/graylog2/indexer/Indexer.java b/src/main/java/org/graylog2/indexer/Indexer.java\nindex afaddc7..24a0003 100644\n--- a/src/main/java/org/graylog2/indexer/Indexer.java\n+++ b/src/main/java/org/graylog2/indexer/Indexer.java\n@@ -60,11 +60,12 @@\n         URL url = new URL(Indexer.buildIndexURL());\n         HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n         conn.setRequestMethod(\"HEAD\");\n-        if (conn.getResponseCode() == HttpURLConnection.HTTP_OK) {\n+        // Older versions of ElasticSearch return 400 Bad Request in cse of an existing index.\n+        if (conn.getResponseCode() == HttpURLConnection.HTTP_OK || conn.getResponseCode() == HttpURLConnection.HTTP_BAD_REQUEST) {\n             return true;\n         } else {\n             if (conn.getResponseCode() != HttpURLConnection.HTTP_NOT_FOUND) {\n-                LOG.warn(\"Indexer response code was not 200 or 404, but \" + conn.getResponseCode());\n+                LOG.warn(\"Indexer response code was not (200 or 400) or 404, but \" + conn.getResponseCode());\n             }\n \n             return false;\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 63,
    "bugNodeStartChar": 2118,
    "bugNodeLength": 51,
    "fixLineNum": 64,
    "fixNodeStartChar": 2213,
    "fixNodeLength": 115,
    "sourceBeforeFix": "conn.getResponseCode() == HttpURLConnection.HTTP_OK",
    "sourceAfterFix": "conn.getResponseCode() == HttpURLConnection.HTTP_OK || conn.getResponseCode() == HttpURLConnection.HTTP_BAD_REQUEST"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "9ee7a2b153e9c366d0852182e1cd1a5800ff76dc",
    "fixCommitParentSHA1": "939109ef74ba90b8a8389b75bdbb82fc49db7095",
    "bugFilePath": "src/main/java/org/graylog2/indexer/Indexer.java",
    "fixPatch": "diff --git a/src/main/java/org/graylog2/indexer/Indexer.java b/src/main/java/org/graylog2/indexer/Indexer.java\nindex 7ff4bd0..4e288ee 100644\n--- a/src/main/java/org/graylog2/indexer/Indexer.java\n+++ b/src/main/java/org/graylog2/indexer/Indexer.java\n@@ -89,7 +89,7 @@\n         if (conn.getResponseCode() == 200) {\n             return true;\n         } else {\n-            LOG.warn(\"Response code of create index operation was not 201, but \" + conn.getResponseCode());\n+            LOG.warn(\"Response code of create index operation was not 200, but \" + conn.getResponseCode());\n             return false;\n         }\n     }\n@@ -121,10 +121,10 @@\n             OutputStreamWriter writer = new OutputStreamWriter(conn.getOutputStream());\n             writer.write(batch);\n             writer.close();\n-            if (conn.getResponseCode() == 201) {\n+            if (conn.getResponseCode() == 200) {\n                 return true;\n             } else {\n-                LOG.warn(\"Indexer response code was not 201, but \" + conn.getResponseCode());\n+                LOG.warn(\"Indexer response code was not 200, but \" + conn.getResponseCode());\n                 return false; \n             }\n         } catch (IOException e) {\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 124,
    "bugNodeStartChar": 4161,
    "bugNodeLength": 29,
    "fixLineNum": 124,
    "fixNodeStartChar": 4161,
    "fixNodeLength": 29,
    "sourceBeforeFix": "conn.getResponseCode() == 201",
    "sourceAfterFix": "conn.getResponseCode() == 200"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "78b9af812f2a993001c2e9f9c391b00716af2244",
    "fixCommitParentSHA1": "0b25ae436503f861e69a1392c76accf2ed527498",
    "bugFilePath": "src/test/java/org/graylog2/database/MongoBridgeIntegrationTest.java",
    "fixPatch": "diff --git a/src/test/java/org/graylog2/database/MongoBridgeIntegrationTest.java b/src/test/java/org/graylog2/database/MongoBridgeIntegrationTest.java\nindex 698d4a5..17f7c55 100644\n--- a/src/test/java/org/graylog2/database/MongoBridgeIntegrationTest.java\n+++ b/src/test/java/org/graylog2/database/MongoBridgeIntegrationTest.java\n@@ -48,7 +48,8 @@\n             \"localhost\",\n             \"graylog2test\",\n             Integer.valueOf(27017),\n-            \"false\"\n+            \"false\",\n+            null\n         );\n \n         // TODO: Truncate messages collection.\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 45,
    "bugNodeStartChar": 1124,
    "bugNodeLength": 193,
    "fixLineNum": 45,
    "fixNodeStartChar": 1124,
    "fixNodeLength": 211,
    "sourceBeforeFix": "MongoConnection.getInstance().connect(null,null,\"localhost\",\"graylog2test\",Integer.valueOf(27017),\"false\")",
    "sourceAfterFix": "MongoConnection.getInstance().connect(null,null,\"localhost\",\"graylog2test\",Integer.valueOf(27017),\"false\",null)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "78b9af812f2a993001c2e9f9c391b00716af2244",
    "fixCommitParentSHA1": "0b25ae436503f861e69a1392c76accf2ed527498",
    "bugFilePath": "src/test/java/org/graylog2/database/MongoConnectionIntegrationTest.java",
    "fixPatch": "diff --git a/src/test/java/org/graylog2/database/MongoConnectionIntegrationTest.java b/src/test/java/org/graylog2/database/MongoConnectionIntegrationTest.java\nindex a9aab0c..5346f5a 100644\n--- a/src/test/java/org/graylog2/database/MongoConnectionIntegrationTest.java\n+++ b/src/test/java/org/graylog2/database/MongoConnectionIntegrationTest.java\n@@ -59,7 +59,8 @@\n             \"localhost\",\n             \"graylog2test\",\n             Integer.valueOf(27017),\n-            \"false\"\n+            \"false\",\n+            null\n         );\n \n         Mongo connection = instance.getConnection();\n",
    "projectName": "Graylog2.graylog2-server",
    "bugLineNum": 56,
    "bugNodeStartChar": 1120,
    "bugNodeLength": 172,
    "fixLineNum": 56,
    "fixNodeStartChar": 1120,
    "fixNodeLength": 190,
    "sourceBeforeFix": "instance.connect(null,null,\"localhost\",\"graylog2test\",Integer.valueOf(27017),\"false\")",
    "sourceAfterFix": "instance.connect(null,null,\"localhost\",\"graylog2test\",Integer.valueOf(27017),\"false\",null)"
  }
]