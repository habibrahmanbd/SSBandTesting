[
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "b2d8059ff927a87b5b6e8860a9a36542e44c286c",
    "fixCommitParentSHA1": "64f99f9536ecabba8a81d2da9833b7b120e819b8",
    "bugFilePath": "twitter4j-stream/src/main/java/twitter4j/StreamListener.java",
    "fixPatch": "diff --git a/twitter4j-stream/src/main/java/twitter4j/StreamListener.java b/twitter4j-stream/src/main/java/twitter4j/StreamListener.java\nindex a5a7d92..e4f2f57 100644\n--- a/twitter4j-stream/src/main/java/twitter4j/StreamListener.java\n+++ b/twitter4j-stream/src/main/java/twitter4j/StreamListener.java\n@@ -20,6 +20,6 @@\n  * @author Yusuke Yamamoto - yusuke at mac.com\n  * @since Twitter4J 2.1.8\n  */\n-interface StreamListener {\n+public interface StreamListener {\n     void onException(Exception ex);\n }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 19,
    "bugNodeStartChar": 621,
    "bugNodeLength": 145,
    "fixLineNum": 19,
    "fixNodeStartChar": 621,
    "fixNodeLength": 152,
    "sourceBeforeFix": "0",
    "sourceAfterFix": "1"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "6ee3e54020bc8b28badd689fae4cd34948f78e7a",
    "fixCommitParentSHA1": "619460f025719dfa6cf208476b8a176aa59b1947",
    "bugFilePath": "twitter4j-core/src/test/java/twitter4j/TweetsResourcesTest.java",
    "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/TweetsResourcesTest.java b/twitter4j-core/src/test/java/twitter4j/TweetsResourcesTest.java\nindex c6b9f1c..43c8670 100644\n--- a/twitter4j-core/src/test/java/twitter4j/TweetsResourcesTest.java\n+++ b/twitter4j-core/src/test/java/twitter4j/TweetsResourcesTest.java\n@@ -125,13 +125,13 @@\n     public void testRetweetMethods() throws Exception {\n         List<Status> statuses;\n \n-        statuses = twitter1.getRetweets(18594701629l);\n+        statuses = twitter1.getRetweets(1021608606934822912L);\n         assertNotNull(TwitterObjectFactory.getRawJSON(statuses));\n         assertEquals(statuses.get(0), TwitterObjectFactory.createStatus(TwitterObjectFactory.getRawJSON(statuses.get(0))));\n         assertIsRetweet(statuses);\n-        assertTrue(20 < statuses.size());\n+        assertTrue(2 < statuses.size());\n \n-        IDs retweeters = twitter1.getRetweeterIds(18594701629l, -1);\n+        IDs retweeters = twitter1.getRetweeterIds(1021608606934822912L, -1);\n         assertTrue(0 < retweeters.getIDs().length);\n     }\n \n@@ -213,7 +213,7 @@\n         assertEquals(1, medias.length);\n         MediaEntity media = medias[0];\n         assertEquals(\"pic.twitter.com/qbJx26r\", media.getDisplayURL());\n-        assertEquals(\"http://twitter.com/twitter/status/76360760606986241/photo/1\", media.getExpandedURL());\n+        assertEquals(\"https://twitter.com/twitter/status/76360760606986241/photo/1\", media.getExpandedURL());\n         assertEquals(76360760611180544L, media.getId());\n         assertEquals(\"http://pbs.twimg.com/media/AQ9JtQsCEAA7dEN.jpg\", media.getMediaURL());\n         assertEquals(\"https://pbs.twimg.com/media/AQ9JtQsCEAA7dEN.jpg\", media.getMediaURLHttps());\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 128,
    "bugNodeStartChar": 7439,
    "bugNodeLength": 34,
    "fixLineNum": 128,
    "fixNodeStartChar": 7439,
    "fixNodeLength": 42,
    "sourceBeforeFix": "twitter1.getRetweets(18594701629l)",
    "sourceAfterFix": "twitter1.getRetweets(1021608606934822912L)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "6ee3e54020bc8b28badd689fae4cd34948f78e7a",
    "fixCommitParentSHA1": "619460f025719dfa6cf208476b8a176aa59b1947",
    "bugFilePath": "twitter4j-core/src/test/java/twitter4j/TweetsResourcesTest.java",
    "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/TweetsResourcesTest.java b/twitter4j-core/src/test/java/twitter4j/TweetsResourcesTest.java\nindex c6b9f1c..43c8670 100644\n--- a/twitter4j-core/src/test/java/twitter4j/TweetsResourcesTest.java\n+++ b/twitter4j-core/src/test/java/twitter4j/TweetsResourcesTest.java\n@@ -125,13 +125,13 @@\n     public void testRetweetMethods() throws Exception {\n         List<Status> statuses;\n \n-        statuses = twitter1.getRetweets(18594701629l);\n+        statuses = twitter1.getRetweets(1021608606934822912L);\n         assertNotNull(TwitterObjectFactory.getRawJSON(statuses));\n         assertEquals(statuses.get(0), TwitterObjectFactory.createStatus(TwitterObjectFactory.getRawJSON(statuses.get(0))));\n         assertIsRetweet(statuses);\n-        assertTrue(20 < statuses.size());\n+        assertTrue(2 < statuses.size());\n \n-        IDs retweeters = twitter1.getRetweeterIds(18594701629l, -1);\n+        IDs retweeters = twitter1.getRetweeterIds(1021608606934822912L, -1);\n         assertTrue(0 < retweeters.getIDs().length);\n     }\n \n@@ -213,7 +213,7 @@\n         assertEquals(1, medias.length);\n         MediaEntity media = medias[0];\n         assertEquals(\"pic.twitter.com/qbJx26r\", media.getDisplayURL());\n-        assertEquals(\"http://twitter.com/twitter/status/76360760606986241/photo/1\", media.getExpandedURL());\n+        assertEquals(\"https://twitter.com/twitter/status/76360760606986241/photo/1\", media.getExpandedURL());\n         assertEquals(76360760611180544L, media.getId());\n         assertEquals(\"http://pbs.twimg.com/media/AQ9JtQsCEAA7dEN.jpg\", media.getMediaURL());\n         assertEquals(\"https://pbs.twimg.com/media/AQ9JtQsCEAA7dEN.jpg\", media.getMediaURLHttps());\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 132,
    "bugNodeStartChar": 7719,
    "bugNodeLength": 20,
    "fixLineNum": 132,
    "fixNodeStartChar": 7719,
    "fixNodeLength": 19,
    "sourceBeforeFix": "20 < statuses.size()",
    "sourceAfterFix": "2 < statuses.size()"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "6ee3e54020bc8b28badd689fae4cd34948f78e7a",
    "fixCommitParentSHA1": "619460f025719dfa6cf208476b8a176aa59b1947",
    "bugFilePath": "twitter4j-core/src/test/java/twitter4j/TweetsResourcesTest.java",
    "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/TweetsResourcesTest.java b/twitter4j-core/src/test/java/twitter4j/TweetsResourcesTest.java\nindex c6b9f1c..43c8670 100644\n--- a/twitter4j-core/src/test/java/twitter4j/TweetsResourcesTest.java\n+++ b/twitter4j-core/src/test/java/twitter4j/TweetsResourcesTest.java\n@@ -125,13 +125,13 @@\n     public void testRetweetMethods() throws Exception {\n         List<Status> statuses;\n \n-        statuses = twitter1.getRetweets(18594701629l);\n+        statuses = twitter1.getRetweets(1021608606934822912L);\n         assertNotNull(TwitterObjectFactory.getRawJSON(statuses));\n         assertEquals(statuses.get(0), TwitterObjectFactory.createStatus(TwitterObjectFactory.getRawJSON(statuses.get(0))));\n         assertIsRetweet(statuses);\n-        assertTrue(20 < statuses.size());\n+        assertTrue(2 < statuses.size());\n \n-        IDs retweeters = twitter1.getRetweeterIds(18594701629l, -1);\n+        IDs retweeters = twitter1.getRetweeterIds(1021608606934822912L, -1);\n         assertTrue(0 < retweeters.getIDs().length);\n     }\n \n@@ -213,7 +213,7 @@\n         assertEquals(1, medias.length);\n         MediaEntity media = medias[0];\n         assertEquals(\"pic.twitter.com/qbJx26r\", media.getDisplayURL());\n-        assertEquals(\"http://twitter.com/twitter/status/76360760606986241/photo/1\", media.getExpandedURL());\n+        assertEquals(\"https://twitter.com/twitter/status/76360760606986241/photo/1\", media.getExpandedURL());\n         assertEquals(76360760611180544L, media.getId());\n         assertEquals(\"http://pbs.twimg.com/media/AQ9JtQsCEAA7dEN.jpg\", media.getMediaURL());\n         assertEquals(\"https://pbs.twimg.com/media/AQ9JtQsCEAA7dEN.jpg\", media.getMediaURLHttps());\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 134,
    "bugNodeStartChar": 7768,
    "bugNodeLength": 42,
    "fixLineNum": 134,
    "fixNodeStartChar": 7768,
    "fixNodeLength": 50,
    "sourceBeforeFix": "twitter1.getRetweeterIds(18594701629l,-1)",
    "sourceAfterFix": "twitter1.getRetweeterIds(1021608606934822912L,-1)"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "1d260c67fe219a5bc4dbf8be524d7c870850c117",
    "fixCommitParentSHA1": "f2ff1eaac54468e6cfd21edcd2543bf2c1bcdb5d",
    "bugFilePath": "twitter4j-stream/src/main/java/twitter4j/StreamListener.java",
    "fixPatch": "diff --git a/twitter4j-stream/src/main/java/twitter4j/StreamListener.java b/twitter4j-stream/src/main/java/twitter4j/StreamListener.java\nindex a5a7d92..e4f2f57 100644\n--- a/twitter4j-stream/src/main/java/twitter4j/StreamListener.java\n+++ b/twitter4j-stream/src/main/java/twitter4j/StreamListener.java\n@@ -20,6 +20,6 @@\n  * @author Yusuke Yamamoto - yusuke at mac.com\n  * @since Twitter4J 2.1.8\n  */\n-interface StreamListener {\n+public interface StreamListener {\n     void onException(Exception ex);\n }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 19,
    "bugNodeStartChar": 621,
    "bugNodeLength": 145,
    "fixLineNum": 19,
    "fixNodeStartChar": 621,
    "fixNodeLength": 152,
    "sourceBeforeFix": "0",
    "sourceAfterFix": "1"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "ab2d880793dd983f1d71e560272cb4fff791cf4c",
    "fixCommitParentSHA1": "e92f196cd7e55a66290bbd9288c8ae6579485653",
    "bugFilePath": "twitter4j-core/src/test/java/twitter4j/auth/OAuthTest.java",
    "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/auth/OAuthTest.java b/twitter4j-core/src/test/java/twitter4j/auth/OAuthTest.java\nindex 87e287c..158a4a4 100644\n--- a/twitter4j-core/src/test/java/twitter4j/auth/OAuthTest.java\n+++ b/twitter4j-core/src/test/java/twitter4j/auth/OAuthTest.java\n@@ -76,6 +76,7 @@\n         Twitter unauthenticated = new TwitterFactory().getInstance();\n         unauthenticated.setOAuthConsumer(desktopConsumerKey, desktopConsumerSecret);\n         RequestToken rt = unauthenticated.getOAuthRequestToken();\n+        //noinspection ResultOfMethodCallIgnored\n         rt.hashCode();\n         // trying to get an access token without permitting the request token.\n         try {\n@@ -91,7 +92,7 @@\n             twitter.getOAuthAccessToken(rt.getToken(), rt.getTokenSecret());\n             fail();\n         } catch (TwitterException te) {\n-            assertEquals(401, te.getStatusCode());\n+            assertEquals(403, te.getStatusCode());\n         }\n         AccessToken at = getAccessToken(twitter, rt.getAuthorizationURL(), rt, numberId, numberPass, true);\n         try {\n@@ -156,9 +157,9 @@\n         String authorizeURL = catchPattern(resStr, \"<form action=\\\"\", \"\\\" id=\\\"oauth_form\\\"\");\n         HttpParameter[] params = new HttpParameter[4];\n         params[0] = new HttpParameter(\"authenticity_token\"\n-                , catchPattern(resStr, \"\\\"authenticity_token\\\" type=\\\"hidden\\\" value=\\\"\", \"\\\" />\"));\n+                , catchPattern(resStr, \"\\\"authenticity_token\\\" type=\\\"hidden\\\" value=\\\"\", \"\\\">\"));\n         params[1] = new HttpParameter(\"oauth_token\",\n-                catchPattern(resStr, \"name=\\\"oauth_token\\\" type=\\\"hidden\\\" value=\\\"\", \"\\\" />\"));\n+                catchPattern(resStr, \"name=\\\"oauth_token\\\" type=\\\"hidden\\\" value=\\\"\", \"\\\">\"));\n         params[2] = new HttpParameter(\"session[username_or_email]\", screenName);\n         params[3] = new HttpParameter(\"session[password]\", password);\n         response = http.request(new HttpRequest(RequestMethod.POST, authorizeURL, params, null, props));\n@@ -310,7 +311,7 @@\n             props.load(is);\n             Configuration conf = new PropertyConfiguration(props);\n             twitter = new TwitterFactory(conf).getInstance();\n-            AccessToken at = twitter.getOAuthAccessToken(id1.screenName, id1.password);\n+            twitter.getOAuthAccessToken(id1.screenName, id1.password);\n             twitter.updateStatus(new Date() + \": xAuth test.\");\n \n             twitter = new TwitterFactory().getInstance();\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 94,
    "bugNodeStartChar": 3657,
    "bugNodeLength": 37,
    "fixLineNum": 94,
    "fixNodeStartChar": 3657,
    "fixNodeLength": 37,
    "sourceBeforeFix": "assertEquals(401,te.getStatusCode())",
    "sourceAfterFix": "assertEquals(403,te.getStatusCode())"
  },
  {
    "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
    "fixCommitSHA1": "e2ff3aba4529be755b56da7a8f2a034856f12181",
    "fixCommitParentSHA1": "03d75166e85f9304a272add93e52ef210ad326d8",
    "bugFilePath": "twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java",
    "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java b/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java\nindex 02b6b21..1f702e1 100644\n--- a/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java\n+++ b/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java\n@@ -34,7 +34,7 @@\n     protected final Properties p = new Properties();\n \n     protected String numberId, numberPass, followsOneWay;\n-    protected int numberIdId;\n+    protected long numberIdId;\n     protected TestUserInfo id1, id2, id3, bestFriend1, bestFriend2;\n     protected Configuration conf1, conf2, conf3;\n \n@@ -85,7 +85,7 @@\n         numberId = p.getProperty(\"numberid.user\");\n         numberPass = p.getProperty(\"numberid.password\");\n //        id1id = Integer.valueOf(p.getProperty(\"id1id\"));\n-        numberIdId = Integer.valueOf(p.getProperty(\"numberid.id\"));\n+        numberIdId = Long.valueOf(p.getProperty(\"numberid.id\"));\n \n         twitter1 = new TwitterFactory(conf1).getInstance();\n \n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 88,
    "bugNodeStartChar": 3510,
    "bugNodeLength": 45,
    "fixLineNum": 88,
    "fixNodeStartChar": 3510,
    "fixNodeLength": 42,
    "sourceBeforeFix": "Integer.valueOf(p.getProperty(\"numberid.id\"))",
    "sourceAfterFix": "Long.valueOf(p.getProperty(\"numberid.id\"))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "e2ff3aba4529be755b56da7a8f2a034856f12181",
    "fixCommitParentSHA1": "03d75166e85f9304a272add93e52ef210ad326d8",
    "bugFilePath": "twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java",
    "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java b/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java\nindex 02b6b21..1f702e1 100644\n--- a/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java\n+++ b/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java\n@@ -34,7 +34,7 @@\n     protected final Properties p = new Properties();\n \n     protected String numberId, numberPass, followsOneWay;\n-    protected int numberIdId;\n+    protected long numberIdId;\n     protected TestUserInfo id1, id2, id3, bestFriend1, bestFriend2;\n     protected Configuration conf1, conf2, conf3;\n \n@@ -85,7 +85,7 @@\n         numberId = p.getProperty(\"numberid.user\");\n         numberPass = p.getProperty(\"numberid.password\");\n //        id1id = Integer.valueOf(p.getProperty(\"id1id\"));\n-        numberIdId = Integer.valueOf(p.getProperty(\"numberid.id\"));\n+        numberIdId = Long.valueOf(p.getProperty(\"numberid.id\"));\n \n         twitter1 = new TwitterFactory(conf1).getInstance();\n \n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 88,
    "bugNodeStartChar": 3510,
    "bugNodeLength": 45,
    "fixLineNum": 88,
    "fixNodeStartChar": 3510,
    "fixNodeLength": 42,
    "sourceBeforeFix": "Integer.valueOf(p.getProperty(\"numberid.id\"))",
    "sourceAfterFix": "Long.valueOf(p.getProperty(\"numberid.id\"))"
  },
  {
    "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
    "fixCommitSHA1": "96961c021dc60e796dbf823d29db5f62c70356b7",
    "fixCommitParentSHA1": "03d75166e85f9304a272add93e52ef210ad326d8",
    "bugFilePath": "twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java",
    "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java b/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java\nindex 02b6b21..1f702e1 100644\n--- a/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java\n+++ b/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java\n@@ -34,7 +34,7 @@\n     protected final Properties p = new Properties();\n \n     protected String numberId, numberPass, followsOneWay;\n-    protected int numberIdId;\n+    protected long numberIdId;\n     protected TestUserInfo id1, id2, id3, bestFriend1, bestFriend2;\n     protected Configuration conf1, conf2, conf3;\n \n@@ -85,7 +85,7 @@\n         numberId = p.getProperty(\"numberid.user\");\n         numberPass = p.getProperty(\"numberid.password\");\n //        id1id = Integer.valueOf(p.getProperty(\"id1id\"));\n-        numberIdId = Integer.valueOf(p.getProperty(\"numberid.id\"));\n+        numberIdId = Long.valueOf(p.getProperty(\"numberid.id\"));\n \n         twitter1 = new TwitterFactory(conf1).getInstance();\n \n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 88,
    "bugNodeStartChar": 3510,
    "bugNodeLength": 45,
    "fixLineNum": 88,
    "fixNodeStartChar": 3510,
    "fixNodeLength": 42,
    "sourceBeforeFix": "Integer.valueOf(p.getProperty(\"numberid.id\"))",
    "sourceAfterFix": "Long.valueOf(p.getProperty(\"numberid.id\"))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "96961c021dc60e796dbf823d29db5f62c70356b7",
    "fixCommitParentSHA1": "03d75166e85f9304a272add93e52ef210ad326d8",
    "bugFilePath": "twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java",
    "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java b/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java\nindex 02b6b21..1f702e1 100644\n--- a/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java\n+++ b/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java\n@@ -34,7 +34,7 @@\n     protected final Properties p = new Properties();\n \n     protected String numberId, numberPass, followsOneWay;\n-    protected int numberIdId;\n+    protected long numberIdId;\n     protected TestUserInfo id1, id2, id3, bestFriend1, bestFriend2;\n     protected Configuration conf1, conf2, conf3;\n \n@@ -85,7 +85,7 @@\n         numberId = p.getProperty(\"numberid.user\");\n         numberPass = p.getProperty(\"numberid.password\");\n //        id1id = Integer.valueOf(p.getProperty(\"id1id\"));\n-        numberIdId = Integer.valueOf(p.getProperty(\"numberid.id\"));\n+        numberIdId = Long.valueOf(p.getProperty(\"numberid.id\"));\n \n         twitter1 = new TwitterFactory(conf1).getInstance();\n \n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 88,
    "bugNodeStartChar": 3510,
    "bugNodeLength": 45,
    "fixLineNum": 88,
    "fixNodeStartChar": 3510,
    "fixNodeLength": 42,
    "sourceBeforeFix": "Integer.valueOf(p.getProperty(\"numberid.id\"))",
    "sourceAfterFix": "Long.valueOf(p.getProperty(\"numberid.id\"))"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "238cd4579320c9aa534aaaa3a0597c1227247cc7",
    "fixCommitParentSHA1": "d7426e7816e13b928fad2c28c4e6c2edbc1ec3b4",
    "bugFilePath": "twitter4j-async/src/main/java/twitter4j/AsyncTwitterImpl.java",
    "fixPatch": "diff --git a/twitter4j-async/src/main/java/twitter4j/AsyncTwitterImpl.java b/twitter4j-async/src/main/java/twitter4j/AsyncTwitterImpl.java\nindex 5fa9b65..bd048e3 100644\n--- a/twitter4j-async/src/main/java/twitter4j/AsyncTwitterImpl.java\n+++ b/twitter4j-async/src/main/java/twitter4j/AsyncTwitterImpl.java\n@@ -2681,7 +2681,7 @@\n         });\n     }\n \n-    private static transient Dispatcher dispatcher;\n+    private static transient volatile Dispatcher dispatcher;\n \n     @Override\n     public void shutdown() {\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 2684,
    "bugNodeStartChar": 102584,
    "bugNodeLength": 47,
    "fixLineNum": 2684,
    "fixNodeStartChar": 102584,
    "fixNodeLength": 56,
    "sourceBeforeFix": "138",
    "sourceAfterFix": "202"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "238cd4579320c9aa534aaaa3a0597c1227247cc7",
    "fixCommitParentSHA1": "d7426e7816e13b928fad2c28c4e6c2edbc1ec3b4",
    "bugFilePath": "twitter4j-stream/src/main/java/twitter4j/TwitterStreamImpl.java",
    "fixPatch": "diff --git a/twitter4j-stream/src/main/java/twitter4j/TwitterStreamImpl.java b/twitter4j-stream/src/main/java/twitter4j/TwitterStreamImpl.java\nindex 8acde64..a8c76e6 100755\n--- a/twitter4j-stream/src/main/java/twitter4j/TwitterStreamImpl.java\n+++ b/twitter4j-stream/src/main/java/twitter4j/TwitterStreamImpl.java\n@@ -265,7 +265,7 @@\n         return TwitterStreamImpl.dispatcher;\n     }\n \n-    private static transient Dispatcher dispatcher;\n+    private static transient volatile Dispatcher dispatcher;\n \n     InputStream getSiteStream(boolean withFollowings, long[] follow) throws TwitterException {\n         ensureOAuthEnabled();\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 268,
    "bugNodeStartChar": 11823,
    "bugNodeLength": 47,
    "fixLineNum": 268,
    "fixNodeStartChar": 11823,
    "fixNodeLength": 56,
    "sourceBeforeFix": "138",
    "sourceAfterFix": "202"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "0ea06e15398c62b78a5dc404bd4dbbe7e88b5a74",
    "fixCommitParentSHA1": "ac81259a90924a901edb6bb74288048d00ba17fc",
    "bugFilePath": "twitter4j-stream/src/main/java/twitter4j/TwitterStreamImpl.java",
    "fixPatch": "diff --git a/twitter4j-stream/src/main/java/twitter4j/TwitterStreamImpl.java b/twitter4j-stream/src/main/java/twitter4j/TwitterStreamImpl.java\nindex 8acde64..a8c76e6 100755\n--- a/twitter4j-stream/src/main/java/twitter4j/TwitterStreamImpl.java\n+++ b/twitter4j-stream/src/main/java/twitter4j/TwitterStreamImpl.java\n@@ -265,7 +265,7 @@\n         return TwitterStreamImpl.dispatcher;\n     }\n \n-    private static transient Dispatcher dispatcher;\n+    private static transient volatile Dispatcher dispatcher;\n \n     InputStream getSiteStream(boolean withFollowings, long[] follow) throws TwitterException {\n         ensureOAuthEnabled();\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 268,
    "bugNodeStartChar": 11823,
    "bugNodeLength": 47,
    "fixLineNum": 268,
    "fixNodeStartChar": 11823,
    "fixNodeLength": 56,
    "sourceBeforeFix": "138",
    "sourceAfterFix": "202"
  },
  {
    "bugType": "CHANGE_MODIFIER",
    "fixCommitSHA1": "d68c8b72360903da9812fd17fe9e13016855fff7",
    "fixCommitParentSHA1": "74546820dd2e99012b9be4b636e995bee127d177",
    "bugFilePath": "twitter4j-async/src/main/java/twitter4j/AsyncTwitterImpl.java",
    "fixPatch": "diff --git a/twitter4j-async/src/main/java/twitter4j/AsyncTwitterImpl.java b/twitter4j-async/src/main/java/twitter4j/AsyncTwitterImpl.java\nindex 5fa9b65..bd048e3 100644\n--- a/twitter4j-async/src/main/java/twitter4j/AsyncTwitterImpl.java\n+++ b/twitter4j-async/src/main/java/twitter4j/AsyncTwitterImpl.java\n@@ -2681,7 +2681,7 @@\n         });\n     }\n \n-    private static transient Dispatcher dispatcher;\n+    private static transient volatile Dispatcher dispatcher;\n \n     @Override\n     public void shutdown() {\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 2684,
    "bugNodeStartChar": 102584,
    "bugNodeLength": 47,
    "fixLineNum": 2684,
    "fixNodeStartChar": 102584,
    "fixNodeLength": 56,
    "sourceBeforeFix": "138",
    "sourceAfterFix": "202"
  },
  {
    "bugType": "SWAP_ARGUMENTS",
    "fixCommitSHA1": "edb26a6647042ea5eee138c5c0cd5190e000edde",
    "fixCommitParentSHA1": "a06a9a3f7bbe2ad15867fadd989f1be5fda1eba7",
    "bugFilePath": "twitter4j-core/src/internal-json/java/twitter4j/PlaceJSONImpl.java",
    "fixPatch": "diff --git a/twitter4j-core/src/internal-json/java/twitter4j/PlaceJSONImpl.java b/twitter4j-core/src/internal-json/java/twitter4j/PlaceJSONImpl.java\nindex 1a5117e..3ae8409 100644\n--- a/twitter4j-core/src/internal-json/java/twitter4j/PlaceJSONImpl.java\n+++ b/twitter4j-core/src/internal-json/java/twitter4j/PlaceJSONImpl.java\n@@ -90,7 +90,7 @@\n                 JSONArray array = geometryJSON.getJSONArray(\"coordinates\");\n                 if (geometryType.equals(\"Point\")) {\n                     geometryCoordinates = new GeoLocation[1][1];\n-                    geometryCoordinates[0][0] = new GeoLocation(array.getDouble(0), array.getDouble(1));\n+                    geometryCoordinates[0][0] = new GeoLocation(array.getDouble(1), array.getDouble(0));\n                 } else if (geometryType.equals(\"Polygon\")) {\n                     geometryCoordinates = JSONImplFactory.coordinatesAsGeoLocationArray(array);\n                 } else {\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 93,
    "bugNodeStartChar": 3600,
    "bugNodeLength": 55,
    "fixLineNum": 93,
    "fixNodeStartChar": 3600,
    "fixNodeLength": 55,
    "sourceBeforeFix": "new GeoLocation(array.getDouble(0),array.getDouble(1))",
    "sourceAfterFix": "new GeoLocation(array.getDouble(1),array.getDouble(0))"
  },
  {
    "bugType": "SWAP_ARGUMENTS",
    "fixCommitSHA1": "6d40a949dc694a8294bf52bc2a5a19a687beaa42",
    "fixCommitParentSHA1": "ee322a7e54ad73591bfba3e828fc250a603d885e",
    "bugFilePath": "twitter4j-core/src/internal-json/java/twitter4j/PlaceJSONImpl.java",
    "fixPatch": "diff --git a/twitter4j-core/src/internal-json/java/twitter4j/PlaceJSONImpl.java b/twitter4j-core/src/internal-json/java/twitter4j/PlaceJSONImpl.java\nindex 1a5117e..3ae8409 100644\n--- a/twitter4j-core/src/internal-json/java/twitter4j/PlaceJSONImpl.java\n+++ b/twitter4j-core/src/internal-json/java/twitter4j/PlaceJSONImpl.java\n@@ -90,7 +90,7 @@\n                 JSONArray array = geometryJSON.getJSONArray(\"coordinates\");\n                 if (geometryType.equals(\"Point\")) {\n                     geometryCoordinates = new GeoLocation[1][1];\n-                    geometryCoordinates[0][0] = new GeoLocation(array.getDouble(0), array.getDouble(1));\n+                    geometryCoordinates[0][0] = new GeoLocation(array.getDouble(1), array.getDouble(0));\n                 } else if (geometryType.equals(\"Polygon\")) {\n                     geometryCoordinates = JSONImplFactory.coordinatesAsGeoLocationArray(array);\n                 } else {\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 93,
    "bugNodeStartChar": 3600,
    "bugNodeLength": 55,
    "fixLineNum": 93,
    "fixNodeStartChar": 3600,
    "fixNodeLength": 55,
    "sourceBeforeFix": "new GeoLocation(array.getDouble(0),array.getDouble(1))",
    "sourceAfterFix": "new GeoLocation(array.getDouble(1),array.getDouble(0))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "845d0b065c3d9ec57d597a2bd1ae42b4366912c9",
    "fixCommitParentSHA1": "0cf02cfa104d161ad83be9baea5dd065772ae5ab",
    "bugFilePath": "twitter4j-core/src/main/java/twitter4j/TwitterImpl.java",
    "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/TwitterImpl.java b/twitter4j-core/src/main/java/twitter4j/TwitterImpl.java\nindex fe61c5b..718c624 100644\n--- a/twitter4j-core/src/main/java/twitter4j/TwitterImpl.java\n+++ b/twitter4j-core/src/main/java/twitter4j/TwitterImpl.java\n@@ -543,7 +543,7 @@\n                 new HttpParameter[]{\n                         new HttpParameter(\"screen_name\", screenName),\n                         new HttpParameter(\"device\", enableDeviceNotification),\n-                        new HttpParameter(\"retweets\", enableDeviceNotification)\n+                        new HttpParameter(\"retweets\", retweets)\n                 }));\n     }\n \n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 546,
    "bugNodeStartChar": 18594,
    "bugNodeLength": 55,
    "fixLineNum": 546,
    "fixNodeStartChar": 18594,
    "fixNodeLength": 39,
    "sourceBeforeFix": "new HttpParameter(\"retweets\",enableDeviceNotification)",
    "sourceAfterFix": "new HttpParameter(\"retweets\",retweets)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "75fccf13c0a0323179f37083f4249f8a4be38d85",
    "fixCommitParentSHA1": "56c311cdc3bd362df9a497bb32678e75a399e500",
    "bugFilePath": "twitter4j-core/src/main/java/twitter4j/internal/async/DispatcherImpl.java",
    "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/internal/async/DispatcherImpl.java b/twitter4j-core/src/main/java/twitter4j/internal/async/DispatcherImpl.java\nindex c6fa950..c1736eb 100644\n--- a/twitter4j-core/src/main/java/twitter4j/internal/async/DispatcherImpl.java\n+++ b/twitter4j-core/src/main/java/twitter4j/internal/async/DispatcherImpl.java\n@@ -87,7 +87,7 @@\n                 thread.shutdown();\n             }\n             synchronized (ticket) {\n-                ticket.notify();\n+                ticket.notifyAll();\n             }\n         }\n     }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 90,
    "bugNodeStartChar": 2603,
    "bugNodeLength": 15,
    "fixLineNum": 90,
    "fixNodeStartChar": 2603,
    "fixNodeLength": 18,
    "sourceBeforeFix": "ticket.notify()",
    "sourceAfterFix": "ticket.notifyAll()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "75fccf13c0a0323179f37083f4249f8a4be38d85",
    "fixCommitParentSHA1": "56c311cdc3bd362df9a497bb32678e75a399e500",
    "bugFilePath": "twitter4j-core/src/main/java/twitter4j/internal/async/DispatcherImpl.java",
    "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/internal/async/DispatcherImpl.java b/twitter4j-core/src/main/java/twitter4j/internal/async/DispatcherImpl.java\nindex c6fa950..c1736eb 100644\n--- a/twitter4j-core/src/main/java/twitter4j/internal/async/DispatcherImpl.java\n+++ b/twitter4j-core/src/main/java/twitter4j/internal/async/DispatcherImpl.java\n@@ -87,7 +87,7 @@\n                 thread.shutdown();\n             }\n             synchronized (ticket) {\n-                ticket.notify();\n+                ticket.notifyAll();\n             }\n         }\n     }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 90,
    "bugNodeStartChar": 2603,
    "bugNodeLength": 15,
    "fixLineNum": 90,
    "fixNodeStartChar": 2603,
    "fixNodeLength": 18,
    "sourceBeforeFix": "ticket.notify()",
    "sourceAfterFix": "ticket.notifyAll()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "346d9c70d2ba20dc1a81f95ab903c6aef660e123",
    "fixCommitParentSHA1": "6b148528110cab823a73f4ae60f90cae89fd2fb5",
    "bugFilePath": "twitter4j-core/src/main/java/twitter4j/TwitterImpl.java",
    "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/TwitterImpl.java b/twitter4j-core/src/main/java/twitter4j/TwitterImpl.java\nindex 3edddcf..8e03665 100644\n--- a/twitter4j-core/src/main/java/twitter4j/TwitterImpl.java\n+++ b/twitter4j-core/src/main/java/twitter4j/TwitterImpl.java\n@@ -543,7 +543,7 @@\n                 new HttpParameter[]{\n                         new HttpParameter(\"screen_name\", screenName),\n                         new HttpParameter(\"device\", enableDeviceNotification),\n-                        new HttpParameter(\"retweets\", enableDeviceNotification)\n+                        new HttpParameter(\"retweets\", retweets)\n                 }));\n     }\n \n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 546,
    "bugNodeStartChar": 18594,
    "bugNodeLength": 55,
    "fixLineNum": 546,
    "fixNodeStartChar": 18594,
    "fixNodeLength": 39,
    "sourceBeforeFix": "new HttpParameter(\"retweets\",enableDeviceNotification)",
    "sourceAfterFix": "new HttpParameter(\"retweets\",retweets)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "42412be4319b3c5c63368ac7474956f2025db34c",
    "fixCommitParentSHA1": "a014b8f9b756387edf0e884154b464160526bd84",
    "bugFilePath": "twitter4j-core/src/main/java/twitter4j/internal/async/DispatcherImpl.java",
    "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/internal/async/DispatcherImpl.java b/twitter4j-core/src/main/java/twitter4j/internal/async/DispatcherImpl.java\nindex c6fa950..c1736eb 100644\n--- a/twitter4j-core/src/main/java/twitter4j/internal/async/DispatcherImpl.java\n+++ b/twitter4j-core/src/main/java/twitter4j/internal/async/DispatcherImpl.java\n@@ -87,7 +87,7 @@\n                 thread.shutdown();\n             }\n             synchronized (ticket) {\n-                ticket.notify();\n+                ticket.notifyAll();\n             }\n         }\n     }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 90,
    "bugNodeStartChar": 2603,
    "bugNodeLength": 15,
    "fixLineNum": 90,
    "fixNodeStartChar": 2603,
    "fixNodeLength": 18,
    "sourceBeforeFix": "ticket.notify()",
    "sourceAfterFix": "ticket.notifyAll()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "42412be4319b3c5c63368ac7474956f2025db34c",
    "fixCommitParentSHA1": "a014b8f9b756387edf0e884154b464160526bd84",
    "bugFilePath": "twitter4j-core/src/main/java/twitter4j/internal/async/DispatcherImpl.java",
    "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/internal/async/DispatcherImpl.java b/twitter4j-core/src/main/java/twitter4j/internal/async/DispatcherImpl.java\nindex c6fa950..c1736eb 100644\n--- a/twitter4j-core/src/main/java/twitter4j/internal/async/DispatcherImpl.java\n+++ b/twitter4j-core/src/main/java/twitter4j/internal/async/DispatcherImpl.java\n@@ -87,7 +87,7 @@\n                 thread.shutdown();\n             }\n             synchronized (ticket) {\n-                ticket.notify();\n+                ticket.notifyAll();\n             }\n         }\n     }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 90,
    "bugNodeStartChar": 2603,
    "bugNodeLength": 15,
    "fixLineNum": 90,
    "fixNodeStartChar": 2603,
    "fixNodeLength": 18,
    "sourceBeforeFix": "ticket.notify()",
    "sourceAfterFix": "ticket.notifyAll()"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "a10a471f4cb04226367516267fa636f257ef9807",
    "fixCommitParentSHA1": "37e8cc74e5fbc940f930860d18b923ed0e05d6e5",
    "bugFilePath": "twitter4j-core/src/main/java/twitter4j/internal/json/RateLimitStatusJSONImpl.java",
    "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/internal/json/RateLimitStatusJSONImpl.java b/twitter4j-core/src/main/java/twitter4j/internal/json/RateLimitStatusJSONImpl.java\nindex cea3771..4ebbf1f 100644\n--- a/twitter4j-core/src/main/java/twitter4j/internal/json/RateLimitStatusJSONImpl.java\n+++ b/twitter4j-core/src/main/java/twitter4j/internal/json/RateLimitStatusJSONImpl.java\n@@ -76,7 +76,7 @@\n         this.limit = limit;\n         this.remaining = remaining;\n         this.resetTimeInSeconds = resetTimeInSeconds;\n-        this.secondsUntilReset = (int) ((resetTimeInSeconds * 1000 - System.currentTimeMillis()) / 1000);\n+        this.secondsUntilReset = (int) ((resetTimeInSeconds * 1000L - System.currentTimeMillis()) / 1000);\n     }\n \n     RateLimitStatusJSONImpl(JSONObject json) throws TwitterException {\n@@ -87,7 +87,7 @@\n         this.limit = getInt(\"limit\", json);\n         this.remaining = getInt(\"remaining\", json);\n         this.resetTimeInSeconds = getInt(\"reset\", json);\n-        this.secondsUntilReset = (int) ((resetTimeInSeconds * 1000 - System.currentTimeMillis()) / 1000);\n+        this.secondsUntilReset = (int) ((resetTimeInSeconds * 1000L - System.currentTimeMillis()) / 1000);\n     }\n \n     static RateLimitStatus createFromResponseHeader(HttpResponse res) {\n@@ -113,7 +113,7 @@\n         String reset = res.getResponseHeader(\"X-Rate-Limit-Reset\");\n         if (reset != null) {\n             long longReset = Long.parseLong(reset);\n-            resetTimeInSeconds = (int) (longReset / 1000);\n+            resetTimeInSeconds = (int) longReset;\n         } else {\n             return null;\n         }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 79,
    "bugNodeStartChar": 3328,
    "bugNodeLength": 25,
    "fixLineNum": 79,
    "fixNodeStartChar": 3328,
    "fixNodeLength": 26,
    "sourceBeforeFix": "resetTimeInSeconds * 1000",
    "sourceAfterFix": "resetTimeInSeconds * 1000L"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "a10a471f4cb04226367516267fa636f257ef9807",
    "fixCommitParentSHA1": "37e8cc74e5fbc940f930860d18b923ed0e05d6e5",
    "bugFilePath": "twitter4j-core/src/main/java/twitter4j/internal/json/RateLimitStatusJSONImpl.java",
    "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/internal/json/RateLimitStatusJSONImpl.java b/twitter4j-core/src/main/java/twitter4j/internal/json/RateLimitStatusJSONImpl.java\nindex cea3771..4ebbf1f 100644\n--- a/twitter4j-core/src/main/java/twitter4j/internal/json/RateLimitStatusJSONImpl.java\n+++ b/twitter4j-core/src/main/java/twitter4j/internal/json/RateLimitStatusJSONImpl.java\n@@ -76,7 +76,7 @@\n         this.limit = limit;\n         this.remaining = remaining;\n         this.resetTimeInSeconds = resetTimeInSeconds;\n-        this.secondsUntilReset = (int) ((resetTimeInSeconds * 1000 - System.currentTimeMillis()) / 1000);\n+        this.secondsUntilReset = (int) ((resetTimeInSeconds * 1000L - System.currentTimeMillis()) / 1000);\n     }\n \n     RateLimitStatusJSONImpl(JSONObject json) throws TwitterException {\n@@ -87,7 +87,7 @@\n         this.limit = getInt(\"limit\", json);\n         this.remaining = getInt(\"remaining\", json);\n         this.resetTimeInSeconds = getInt(\"reset\", json);\n-        this.secondsUntilReset = (int) ((resetTimeInSeconds * 1000 - System.currentTimeMillis()) / 1000);\n+        this.secondsUntilReset = (int) ((resetTimeInSeconds * 1000L - System.currentTimeMillis()) / 1000);\n     }\n \n     static RateLimitStatus createFromResponseHeader(HttpResponse res) {\n@@ -113,7 +113,7 @@\n         String reset = res.getResponseHeader(\"X-Rate-Limit-Reset\");\n         if (reset != null) {\n             long longReset = Long.parseLong(reset);\n-            resetTimeInSeconds = (int) (longReset / 1000);\n+            resetTimeInSeconds = (int) longReset;\n         } else {\n             return null;\n         }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 90,
    "bugNodeStartChar": 3749,
    "bugNodeLength": 25,
    "fixLineNum": 90,
    "fixNodeStartChar": 3749,
    "fixNodeLength": 26,
    "sourceBeforeFix": "resetTimeInSeconds * 1000",
    "sourceAfterFix": "resetTimeInSeconds * 1000L"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "73bf3c02af3ea75b6d1a0afc780841091b1691ee",
    "fixCommitParentSHA1": "4fa659c172c109b57166d9c093707b6ca32a1567",
    "bugFilePath": "twitter4j-core/src/test/java/twitter4j/MBeansIntegrationTest.java",
    "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/MBeansIntegrationTest.java b/twitter4j-core/src/test/java/twitter4j/MBeansIntegrationTest.java\nindex c9ee9ce..a3ef735 100644\n--- a/twitter4j-core/src/test/java/twitter4j/MBeansIntegrationTest.java\n+++ b/twitter4j-core/src/test/java/twitter4j/MBeansIntegrationTest.java\n@@ -38,7 +38,7 @@\n         // monitoring is turned on with mbeanEnabled=true\n         TwitterAPIMonitor monitor = TwitterAPIMonitor.getInstance();\n         assertEquals(0, monitor.getStatistics().getCallCount());\n-        twitter.getHomeTimeline();\n+        twitter.getDailyTrends();\n         assertEquals(1, monitor.getStatistics().getCallCount());\n     }\n }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 41,
    "bugNodeStartChar": 1443,
    "bugNodeLength": 25,
    "fixLineNum": 41,
    "fixNodeStartChar": 1443,
    "fixNodeLength": 24,
    "sourceBeforeFix": "twitter.getHomeTimeline()",
    "sourceAfterFix": "twitter.getDailyTrends()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "73bf3c02af3ea75b6d1a0afc780841091b1691ee",
    "fixCommitParentSHA1": "4fa659c172c109b57166d9c093707b6ca32a1567",
    "bugFilePath": "twitter4j-core/src/test/java/twitter4j/MBeansIntegrationTest.java",
    "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/MBeansIntegrationTest.java b/twitter4j-core/src/test/java/twitter4j/MBeansIntegrationTest.java\nindex c9ee9ce..a3ef735 100644\n--- a/twitter4j-core/src/test/java/twitter4j/MBeansIntegrationTest.java\n+++ b/twitter4j-core/src/test/java/twitter4j/MBeansIntegrationTest.java\n@@ -38,7 +38,7 @@\n         // monitoring is turned on with mbeanEnabled=true\n         TwitterAPIMonitor monitor = TwitterAPIMonitor.getInstance();\n         assertEquals(0, monitor.getStatistics().getCallCount());\n-        twitter.getHomeTimeline();\n+        twitter.getDailyTrends();\n         assertEquals(1, monitor.getStatistics().getCallCount());\n     }\n }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 41,
    "bugNodeStartChar": 1443,
    "bugNodeLength": 25,
    "fixLineNum": 41,
    "fixNodeStartChar": 1443,
    "fixNodeLength": 24,
    "sourceBeforeFix": "twitter.getHomeTimeline()",
    "sourceAfterFix": "twitter.getDailyTrends()"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "73bf3c02af3ea75b6d1a0afc780841091b1691ee",
    "fixCommitParentSHA1": "4fa659c172c109b57166d9c093707b6ca32a1567",
    "bugFilePath": "twitter4j-core/src/test/java/twitter4j/StatusMethodsTest.java",
    "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/StatusMethodsTest.java b/twitter4j-core/src/test/java/twitter4j/StatusMethodsTest.java\nindex 740e482..c4bd0ae 100644\n--- a/twitter4j-core/src/test/java/twitter4j/StatusMethodsTest.java\n+++ b/twitter4j-core/src/test/java/twitter4j/StatusMethodsTest.java\n@@ -146,12 +146,12 @@\n         assertTrue(20 < statuses.size());\n \n         List<User> users = unauthenticated.getRetweetedBy(47621163517624320L, new Paging(1, 100));\n-        assertTrue(users.size() > 90);\n+        assertTrue(users.size() > 50);\n         users = unauthenticated.getRetweetedBy(47621163517624320L, new Paging(2, 100));\n         assertTrue(users.size() > 10);\n \n         IDs ids = twitter1.getRetweetedByIDs(47621163517624320L, new Paging(1, 100));\n-        assertTrue(ids.getIDs().length > 90);\n+        assertTrue(ids.getIDs().length > 50);\n         ids = twitter1.getRetweetedByIDs(47621163517624320L, new Paging(2, 100));\n         assertTrue(ids.getIDs().length > 10);\n     }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 149,
    "bugNodeStartChar": 9696,
    "bugNodeLength": 17,
    "fixLineNum": 149,
    "fixNodeStartChar": 9696,
    "fixNodeLength": 17,
    "sourceBeforeFix": "users.size() > 90",
    "sourceAfterFix": "users.size() > 50"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "73bf3c02af3ea75b6d1a0afc780841091b1691ee",
    "fixCommitParentSHA1": "4fa659c172c109b57166d9c093707b6ca32a1567",
    "bugFilePath": "twitter4j-core/src/test/java/twitter4j/StatusMethodsTest.java",
    "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/StatusMethodsTest.java b/twitter4j-core/src/test/java/twitter4j/StatusMethodsTest.java\nindex 740e482..c4bd0ae 100644\n--- a/twitter4j-core/src/test/java/twitter4j/StatusMethodsTest.java\n+++ b/twitter4j-core/src/test/java/twitter4j/StatusMethodsTest.java\n@@ -146,12 +146,12 @@\n         assertTrue(20 < statuses.size());\n \n         List<User> users = unauthenticated.getRetweetedBy(47621163517624320L, new Paging(1, 100));\n-        assertTrue(users.size() > 90);\n+        assertTrue(users.size() > 50);\n         users = unauthenticated.getRetweetedBy(47621163517624320L, new Paging(2, 100));\n         assertTrue(users.size() > 10);\n \n         IDs ids = twitter1.getRetweetedByIDs(47621163517624320L, new Paging(1, 100));\n-        assertTrue(ids.getIDs().length > 90);\n+        assertTrue(ids.getIDs().length > 50);\n         ids = twitter1.getRetweetedByIDs(47621163517624320L, new Paging(2, 100));\n         assertTrue(ids.getIDs().length > 10);\n     }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 154,
    "bugNodeStartChar": 9949,
    "bugNodeLength": 24,
    "fixLineNum": 154,
    "fixNodeStartChar": 9949,
    "fixNodeLength": 24,
    "sourceBeforeFix": "ids.getIDs().length > 90",
    "sourceAfterFix": "ids.getIDs().length > 50"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "8dfebd28f7231f2b39946cd11f6bfd4edb822969",
    "fixCommitParentSHA1": "d845aa1a1aac3f0939de27366edf6e36ba29a529",
    "bugFilePath": "twitter4j-core/src/main/java/twitter4j/internal/util/z_T4JInternalParseUtil.java",
    "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/internal/util/z_T4JInternalParseUtil.java b/twitter4j-core/src/main/java/twitter4j/internal/util/z_T4JInternalParseUtil.java\nindex e0e7b63..de29d7a 100644\n--- a/twitter4j-core/src/main/java/twitter4j/internal/util/z_T4JInternalParseUtil.java\n+++ b/twitter4j-core/src/main/java/twitter4j/internal/util/z_T4JInternalParseUtil.java\n@@ -110,7 +110,7 @@\n     public static Date getDate(String name, String format) throws TwitterException {\n         SimpleDateFormat sdf = formatMap.get().get(format);\n         if (null == sdf) {\n-            sdf = new SimpleDateFormat(format);\n+            sdf = new SimpleDateFormat(format, Locale.US);\n             sdf.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n             formatMap.get().put(format, sdf);\n         }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 113,
    "bugNodeStartChar": 3694,
    "bugNodeLength": 28,
    "fixLineNum": 113,
    "fixNodeStartChar": 3694,
    "fixNodeLength": 39,
    "sourceBeforeFix": "new SimpleDateFormat(format)",
    "sourceAfterFix": "new SimpleDateFormat(format,Locale.US)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "5ab2a833f50c61a5322778a38dbfdd33c9b478d0",
    "fixCommitParentSHA1": "5651724ab05485bb973976f9188555eeba72d6f6",
    "bugFilePath": "twitter4j-core/src/test/java/twitter4j/conf/ConfigurationTest.java",
    "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/conf/ConfigurationTest.java b/twitter4j-core/src/test/java/twitter4j/conf/ConfigurationTest.java\nindex 59b2f61..0bbc29f 100644\n--- a/twitter4j-core/src/test/java/twitter4j/conf/ConfigurationTest.java\n+++ b/twitter4j-core/src/test/java/twitter4j/conf/ConfigurationTest.java\n@@ -1,5 +1,6 @@\n /*\n- * Copyright 2007 Yusuke Yamamoto\n+ * Copyright (C) 2007 Yusuke Yamamoto\n+ * Copyright (C) 2011 Twitter, Inc.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -322,7 +323,7 @@\n \n         Configuration t = (Configuration) serializeDeserialize(conf);\n \n-        assertSame(conf, (Configuration) serializeDeserialize(conf));\n+        assertEquals(conf, (Configuration) serializeDeserialize(conf));\n \n         assertTrue(0 == conf.getRestBaseURL().indexOf(\"http://\"));\n         assertTrue(0 == conf.getSearchBaseURL().indexOf(\"http://\"));\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 325,
    "bugNodeStartChar": 13186,
    "bugNodeLength": 60,
    "fixLineNum": 325,
    "fixNodeStartChar": 13186,
    "fixNodeLength": 62,
    "sourceBeforeFix": "assertSame(conf,(Configuration)serializeDeserialize(conf))",
    "sourceAfterFix": "assertEquals(conf,(Configuration)serializeDeserialize(conf))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "5ab2a833f50c61a5322778a38dbfdd33c9b478d0",
    "fixCommitParentSHA1": "5651724ab05485bb973976f9188555eeba72d6f6",
    "bugFilePath": "twitter4j-core/src/test/java/twitter4j/conf/ConfigurationTest.java",
    "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/conf/ConfigurationTest.java b/twitter4j-core/src/test/java/twitter4j/conf/ConfigurationTest.java\nindex 59b2f61..0bbc29f 100644\n--- a/twitter4j-core/src/test/java/twitter4j/conf/ConfigurationTest.java\n+++ b/twitter4j-core/src/test/java/twitter4j/conf/ConfigurationTest.java\n@@ -1,5 +1,6 @@\n /*\n- * Copyright 2007 Yusuke Yamamoto\n+ * Copyright (C) 2007 Yusuke Yamamoto\n+ * Copyright (C) 2011 Twitter, Inc.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -322,7 +323,7 @@\n \n         Configuration t = (Configuration) serializeDeserialize(conf);\n \n-        assertSame(conf, (Configuration) serializeDeserialize(conf));\n+        assertEquals(conf, (Configuration) serializeDeserialize(conf));\n \n         assertTrue(0 == conf.getRestBaseURL().indexOf(\"http://\"));\n         assertTrue(0 == conf.getSearchBaseURL().indexOf(\"http://\"));\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 325,
    "bugNodeStartChar": 13186,
    "bugNodeLength": 60,
    "fixLineNum": 325,
    "fixNodeStartChar": 13186,
    "fixNodeLength": 62,
    "sourceBeforeFix": "assertSame(conf,(Configuration)serializeDeserialize(conf))",
    "sourceAfterFix": "assertEquals(conf,(Configuration)serializeDeserialize(conf))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "35bb9eb5c0f3b2b4a2e7c212cdd97edeca4b0594",
    "fixCommitParentSHA1": "718d7821a7793145e8cd520cecec3b3eecca74fa",
    "bugFilePath": "twitter4j-core/src/test/java/twitter4j/FavoriteMethodsTest.java",
    "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/FavoriteMethodsTest.java b/twitter4j-core/src/test/java/twitter4j/FavoriteMethodsTest.java\nindex 51787f4..17a06ec 100644\n--- a/twitter4j-core/src/test/java/twitter4j/FavoriteMethodsTest.java\n+++ b/twitter4j-core/src/test/java/twitter4j/FavoriteMethodsTest.java\n@@ -35,7 +35,7 @@\n     }\n \n     public void testFavoriteMethods() throws Exception {\n-        Status status = twitter1.getHomeTimeline(new Paging().count(1)).get(0);\n+        Status status = twitter1.getPublicTimeline().get(0);\n         assertNotNull(DataObjectFactory.getRawJSON(status));\n         assertEquals(status, DataObjectFactory.createStatus(DataObjectFactory.getRawJSON(status)));\n         status = twitter2.createFavorite(status.getId());\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 38,
    "bugNodeStartChar": 1115,
    "bugNodeLength": 47,
    "fixLineNum": 38,
    "fixNodeStartChar": 1115,
    "fixNodeLength": 28,
    "sourceBeforeFix": "twitter1.getHomeTimeline(new Paging().count(1))",
    "sourceAfterFix": "twitter1.getPublicTimeline()"
  },
  {
    "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
    "fixCommitSHA1": "3ff50741ae92e513825b787591ba82e4ee00026e",
    "fixCommitParentSHA1": "f794b3c042925b634dde3134488a8e1d65fb42d6",
    "bugFilePath": "twitter4j-core/src/main/java/twitter4j/internal/http/HttpResponse.java",
    "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/internal/http/HttpResponse.java b/twitter4j-core/src/main/java/twitter4j/internal/http/HttpResponse.java\nindex 07ea7b4..158f4f5 100644\n--- a/twitter4j-core/src/main/java/twitter4j/internal/http/HttpResponse.java\n+++ b/twitter4j-core/src/main/java/twitter4j/internal/http/HttpResponse.java\n@@ -188,7 +188,7 @@\n                     jsonArray = new JSONArray(responseAsString);\n                 }\n                 if (CONF.isPrettyDebugEnabled()) {\n-                    logger.debug(json.toString(1));\n+                    logger.debug(jsonArray.toString(1));\n                 }\n             } catch (JSONException jsone) {\n                 if (logger.isDebugEnabled()) {\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 191,
    "bugNodeStartChar": 6346,
    "bugNodeLength": 16,
    "fixLineNum": 191,
    "fixNodeStartChar": 6346,
    "fixNodeLength": 21,
    "sourceBeforeFix": "json.toString(1)",
    "sourceAfterFix": "jsonArray.toString(1)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "3ff50741ae92e513825b787591ba82e4ee00026e",
    "fixCommitParentSHA1": "f794b3c042925b634dde3134488a8e1d65fb42d6",
    "bugFilePath": "twitter4j-core/src/main/java/twitter4j/internal/http/HttpResponse.java",
    "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/internal/http/HttpResponse.java b/twitter4j-core/src/main/java/twitter4j/internal/http/HttpResponse.java\nindex 07ea7b4..158f4f5 100644\n--- a/twitter4j-core/src/main/java/twitter4j/internal/http/HttpResponse.java\n+++ b/twitter4j-core/src/main/java/twitter4j/internal/http/HttpResponse.java\n@@ -188,7 +188,7 @@\n                     jsonArray = new JSONArray(responseAsString);\n                 }\n                 if (CONF.isPrettyDebugEnabled()) {\n-                    logger.debug(json.toString(1));\n+                    logger.debug(jsonArray.toString(1));\n                 }\n             } catch (JSONException jsone) {\n                 if (logger.isDebugEnabled()) {\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 191,
    "bugNodeStartChar": 6346,
    "bugNodeLength": 16,
    "fixLineNum": 191,
    "fixNodeStartChar": 6346,
    "fixNodeLength": 21,
    "sourceBeforeFix": "json.toString(1)",
    "sourceAfterFix": "jsonArray.toString(1)"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "de4c207aafb924e5a104e7f1b9e3b37c0f05bebb",
    "fixCommitParentSHA1": "e5aaf0bcf21b9a5436e5890b1a8d73a65250ce74",
    "bugFilePath": "twitter4j-core/src/test/java/twitter4j/SiteStreamsTest.java",
    "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/SiteStreamsTest.java b/twitter4j-core/src/test/java/twitter4j/SiteStreamsTest.java\nindex 07b7ca4..bda5951 100644\n--- a/twitter4j-core/src/test/java/twitter4j/SiteStreamsTest.java\n+++ b/twitter4j-core/src/test/java/twitter4j/SiteStreamsTest.java\n@@ -56,21 +56,21 @@\n             this.wait(200);\n         }\n         assertEquals(\"onfriendlist\", received.get(0)[0]);\n-        assertEquals(6358482, received.get(0)[1]);\n+        assertEquals(6358482l, received.get(0)[1]);\n         received.clear();\n         siteStreams.next(listeners);\n         synchronized (this) {\n             this.wait(200);\n         }\n         assertEquals(\"onfriendlist\", received.get(0)[0]);\n-        assertEquals(6358481, received.get(0)[1]);\n+        assertEquals(6358481l, received.get(0)[1]);\n         received.clear();\n         siteStreams.next(listeners);\n         synchronized (this) {\n             this.wait(200);\n         }\n         assertEquals(\"onfriendlist\", received.get(0)[0]);\n-        assertEquals(4933401, received.get(0)[1]);\n+        assertEquals(4933401l, received.get(0)[1]);\n     }\n \n     public void testSiteStream() throws Exception {\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 59,
    "bugNodeStartChar": 1951,
    "bugNodeLength": 41,
    "fixLineNum": 59,
    "fixNodeStartChar": 1951,
    "fixNodeLength": 42,
    "sourceBeforeFix": "assertEquals(6358482,received.get(0)[1])",
    "sourceAfterFix": "assertEquals(6358482l,received.get(0)[1])"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "de4c207aafb924e5a104e7f1b9e3b37c0f05bebb",
    "fixCommitParentSHA1": "e5aaf0bcf21b9a5436e5890b1a8d73a65250ce74",
    "bugFilePath": "twitter4j-core/src/test/java/twitter4j/SiteStreamsTest.java",
    "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/SiteStreamsTest.java b/twitter4j-core/src/test/java/twitter4j/SiteStreamsTest.java\nindex 07b7ca4..bda5951 100644\n--- a/twitter4j-core/src/test/java/twitter4j/SiteStreamsTest.java\n+++ b/twitter4j-core/src/test/java/twitter4j/SiteStreamsTest.java\n@@ -56,21 +56,21 @@\n             this.wait(200);\n         }\n         assertEquals(\"onfriendlist\", received.get(0)[0]);\n-        assertEquals(6358482, received.get(0)[1]);\n+        assertEquals(6358482l, received.get(0)[1]);\n         received.clear();\n         siteStreams.next(listeners);\n         synchronized (this) {\n             this.wait(200);\n         }\n         assertEquals(\"onfriendlist\", received.get(0)[0]);\n-        assertEquals(6358481, received.get(0)[1]);\n+        assertEquals(6358481l, received.get(0)[1]);\n         received.clear();\n         siteStreams.next(listeners);\n         synchronized (this) {\n             this.wait(200);\n         }\n         assertEquals(\"onfriendlist\", received.get(0)[0]);\n-        assertEquals(4933401, received.get(0)[1]);\n+        assertEquals(4933401l, received.get(0)[1]);\n     }\n \n     public void testSiteStream() throws Exception {\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 66,
    "bugNodeStartChar": 2191,
    "bugNodeLength": 41,
    "fixLineNum": 66,
    "fixNodeStartChar": 2191,
    "fixNodeLength": 42,
    "sourceBeforeFix": "assertEquals(6358481,received.get(0)[1])",
    "sourceAfterFix": "assertEquals(6358481l,received.get(0)[1])"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "de4c207aafb924e5a104e7f1b9e3b37c0f05bebb",
    "fixCommitParentSHA1": "e5aaf0bcf21b9a5436e5890b1a8d73a65250ce74",
    "bugFilePath": "twitter4j-core/src/test/java/twitter4j/SiteStreamsTest.java",
    "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/SiteStreamsTest.java b/twitter4j-core/src/test/java/twitter4j/SiteStreamsTest.java\nindex 07b7ca4..bda5951 100644\n--- a/twitter4j-core/src/test/java/twitter4j/SiteStreamsTest.java\n+++ b/twitter4j-core/src/test/java/twitter4j/SiteStreamsTest.java\n@@ -56,21 +56,21 @@\n             this.wait(200);\n         }\n         assertEquals(\"onfriendlist\", received.get(0)[0]);\n-        assertEquals(6358482, received.get(0)[1]);\n+        assertEquals(6358482l, received.get(0)[1]);\n         received.clear();\n         siteStreams.next(listeners);\n         synchronized (this) {\n             this.wait(200);\n         }\n         assertEquals(\"onfriendlist\", received.get(0)[0]);\n-        assertEquals(6358481, received.get(0)[1]);\n+        assertEquals(6358481l, received.get(0)[1]);\n         received.clear();\n         siteStreams.next(listeners);\n         synchronized (this) {\n             this.wait(200);\n         }\n         assertEquals(\"onfriendlist\", received.get(0)[0]);\n-        assertEquals(4933401, received.get(0)[1]);\n+        assertEquals(4933401l, received.get(0)[1]);\n     }\n \n     public void testSiteStream() throws Exception {\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 73,
    "bugNodeStartChar": 2431,
    "bugNodeLength": 41,
    "fixLineNum": 73,
    "fixNodeStartChar": 2431,
    "fixNodeLength": 42,
    "sourceBeforeFix": "assertEquals(4933401,received.get(0)[1])",
    "sourceAfterFix": "assertEquals(4933401l,received.get(0)[1])"
  },
  {
    "bugType": "SWAP_ARGUMENTS",
    "fixCommitSHA1": "de4c207aafb924e5a104e7f1b9e3b37c0f05bebb",
    "fixCommitParentSHA1": "e5aaf0bcf21b9a5436e5890b1a8d73a65250ce74",
    "bugFilePath": "twitter4j-core/src/test/java/twitter4j/TwitterTest.java",
    "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/TwitterTest.java b/twitter4j-core/src/test/java/twitter4j/TwitterTest.java\nindex 7b07d4e..2431734 100644\n--- a/twitter4j-core/src/test/java/twitter4j/TwitterTest.java\n+++ b/twitter4j-core/src/test/java/twitter4j/TwitterTest.java\n@@ -277,7 +277,7 @@\n         /*List Member Methods*/\n         User user = null;\n         try {\n-            user = twitter1.checkUserListMembership(id1.screenName, id2.id, userList.getId());\n+            user = twitter1.checkUserListMembership(id1.screenName, userList.getId(), id2.id);\n             fail(\"id2 shouldn't be a member of the userList yet. expecting a TwitterException\");\n         } catch (TwitterException te) {\n             assertEquals(404, te.getStatusCode());\n@@ -380,7 +380,7 @@\n //        assertEquals(1, userLists.size()); workarounding issue 1300\n \n         try {\n-            user = twitter1.checkUserListSubscription(id1.screenName, id2.id, userList.getId());\n+            user = twitter1.checkUserListSubscription(id1.screenName, userList.getId(), id2.id);\n             fail(\"id2 shouldn't be a subscriber the userList. expecting a TwitterException\");\n         } catch (TwitterException ignore) {\n             assertEquals(404, ignore.getStatusCode());\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 280,
    "bugNodeStartChar": 12255,
    "bugNodeLength": 74,
    "fixLineNum": 280,
    "fixNodeStartChar": 12255,
    "fixNodeLength": 74,
    "sourceBeforeFix": "twitter1.checkUserListMembership(id1.screenName,id2.id,userList.getId())",
    "sourceAfterFix": "twitter1.checkUserListMembership(id1.screenName,userList.getId(),id2.id)"
  },
  {
    "bugType": "SWAP_ARGUMENTS",
    "fixCommitSHA1": "de4c207aafb924e5a104e7f1b9e3b37c0f05bebb",
    "fixCommitParentSHA1": "e5aaf0bcf21b9a5436e5890b1a8d73a65250ce74",
    "bugFilePath": "twitter4j-core/src/test/java/twitter4j/TwitterTest.java",
    "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/TwitterTest.java b/twitter4j-core/src/test/java/twitter4j/TwitterTest.java\nindex 7b07d4e..2431734 100644\n--- a/twitter4j-core/src/test/java/twitter4j/TwitterTest.java\n+++ b/twitter4j-core/src/test/java/twitter4j/TwitterTest.java\n@@ -277,7 +277,7 @@\n         /*List Member Methods*/\n         User user = null;\n         try {\n-            user = twitter1.checkUserListMembership(id1.screenName, id2.id, userList.getId());\n+            user = twitter1.checkUserListMembership(id1.screenName, userList.getId(), id2.id);\n             fail(\"id2 shouldn't be a member of the userList yet. expecting a TwitterException\");\n         } catch (TwitterException te) {\n             assertEquals(404, te.getStatusCode());\n@@ -380,7 +380,7 @@\n //        assertEquals(1, userLists.size()); workarounding issue 1300\n \n         try {\n-            user = twitter1.checkUserListSubscription(id1.screenName, id2.id, userList.getId());\n+            user = twitter1.checkUserListSubscription(id1.screenName, userList.getId(), id2.id);\n             fail(\"id2 shouldn't be a subscriber the userList. expecting a TwitterException\");\n         } catch (TwitterException ignore) {\n             assertEquals(404, ignore.getStatusCode());\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 383,
    "bugNodeStartChar": 17702,
    "bugNodeLength": 76,
    "fixLineNum": 383,
    "fixNodeStartChar": 17702,
    "fixNodeLength": 76,
    "sourceBeforeFix": "twitter1.checkUserListSubscription(id1.screenName,id2.id,userList.getId())",
    "sourceAfterFix": "twitter1.checkUserListSubscription(id1.screenName,userList.getId(),id2.id)"
  },
  {
    "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
    "fixCommitSHA1": "de4c207aafb924e5a104e7f1b9e3b37c0f05bebb",
    "fixCommitParentSHA1": "e5aaf0bcf21b9a5436e5890b1a8d73a65250ce74",
    "bugFilePath": "twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java",
    "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java b/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java\nindex 5f40514..cd8fa39 100644\n--- a/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java\n+++ b/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java\n@@ -40,14 +40,14 @@\n     protected class TestUserInfo {\n         public String screenName;\n         public String password;\n-        public int id;\n+        public long id;\n         public String accessToken;\n         public String accessTokenSecret;\n \n         TestUserInfo(String screenName) {\n             this.screenName = p.getProperty(screenName + \".user\");\n             this.password = p.getProperty(screenName + \".password\");\n-            this.id = Integer.valueOf(p.getProperty(screenName + \".id\"));\n+            this.id = Long.valueOf(p.getProperty(screenName + \".id\"));\n             this.accessToken = p.getProperty(screenName + \".oauth.accessToken\");\n             this.accessTokenSecret = p.getProperty(screenName + \".oauth.accessTokenSecret\");\n         }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 50,
    "bugNodeStartChar": 1695,
    "bugNodeLength": 50,
    "fixLineNum": 50,
    "fixNodeStartChar": 1695,
    "fixNodeLength": 47,
    "sourceBeforeFix": "Integer.valueOf(p.getProperty(screenName + \".id\"))",
    "sourceAfterFix": "Long.valueOf(p.getProperty(screenName + \".id\"))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "de4c207aafb924e5a104e7f1b9e3b37c0f05bebb",
    "fixCommitParentSHA1": "e5aaf0bcf21b9a5436e5890b1a8d73a65250ce74",
    "bugFilePath": "twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java",
    "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java b/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java\nindex 5f40514..cd8fa39 100644\n--- a/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java\n+++ b/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java\n@@ -40,14 +40,14 @@\n     protected class TestUserInfo {\n         public String screenName;\n         public String password;\n-        public int id;\n+        public long id;\n         public String accessToken;\n         public String accessTokenSecret;\n \n         TestUserInfo(String screenName) {\n             this.screenName = p.getProperty(screenName + \".user\");\n             this.password = p.getProperty(screenName + \".password\");\n-            this.id = Integer.valueOf(p.getProperty(screenName + \".id\"));\n+            this.id = Long.valueOf(p.getProperty(screenName + \".id\"));\n             this.accessToken = p.getProperty(screenName + \".oauth.accessToken\");\n             this.accessTokenSecret = p.getProperty(screenName + \".oauth.accessTokenSecret\");\n         }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 50,
    "bugNodeStartChar": 1695,
    "bugNodeLength": 50,
    "fixLineNum": 50,
    "fixNodeStartChar": 1695,
    "fixNodeLength": 47,
    "sourceBeforeFix": "Integer.valueOf(p.getProperty(screenName + \".id\"))",
    "sourceAfterFix": "Long.valueOf(p.getProperty(screenName + \".id\"))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "fa5635c39e3000406103657977b98efa79bd4512",
    "fixCommitParentSHA1": "0321d14bf299628af7459267c317e347a7f00d46",
    "bugFilePath": "twitter4j-core/src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/Twitter.java b/twitter4j-core/src/main/java/twitter4j/Twitter.java\nindex 069622c..a391273 100644\n--- a/twitter4j-core/src/main/java/twitter4j/Twitter.java\n+++ b/twitter4j-core/src/main/java/twitter4j/Twitter.java\n@@ -237,21 +237,21 @@\n      * {@inheritDoc}\n      */\n     public Trends getTrends() throws TwitterException {\n-        return new TrendsJSONImpl(http.get(conf.getSearchBaseURL() + \"trends.json\"));\n+        return new TrendsJSONImpl(http.get(conf.getRestBaseURL() + \"trends.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\")).get(0);\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\")).get(0);\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\"\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"))).get(0);\n     }\n \n@@ -259,14 +259,14 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/daily.json\"));\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/daily.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n@@ -283,7 +283,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json\"));\n     }\n \n@@ -291,7 +291,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 240,
    "bugNodeStartChar": 9665,
    "bugNodeLength": 23,
    "fixLineNum": 240,
    "fixNodeStartChar": 9665,
    "fixNodeLength": 21,
    "sourceBeforeFix": "conf.getSearchBaseURL()",
    "sourceAfterFix": "conf.getRestBaseURL()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "fa5635c39e3000406103657977b98efa79bd4512",
    "fixCommitParentSHA1": "0321d14bf299628af7459267c317e347a7f00d46",
    "bugFilePath": "twitter4j-core/src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/Twitter.java b/twitter4j-core/src/main/java/twitter4j/Twitter.java\nindex 069622c..a391273 100644\n--- a/twitter4j-core/src/main/java/twitter4j/Twitter.java\n+++ b/twitter4j-core/src/main/java/twitter4j/Twitter.java\n@@ -237,21 +237,21 @@\n      * {@inheritDoc}\n      */\n     public Trends getTrends() throws TwitterException {\n-        return new TrendsJSONImpl(http.get(conf.getSearchBaseURL() + \"trends.json\"));\n+        return new TrendsJSONImpl(http.get(conf.getRestBaseURL() + \"trends.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\")).get(0);\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\")).get(0);\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\"\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"))).get(0);\n     }\n \n@@ -259,14 +259,14 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/daily.json\"));\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/daily.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n@@ -283,7 +283,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json\"));\n     }\n \n@@ -291,7 +291,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 240,
    "bugNodeStartChar": 9665,
    "bugNodeLength": 23,
    "fixLineNum": 240,
    "fixNodeStartChar": 9665,
    "fixNodeLength": 21,
    "sourceBeforeFix": "conf.getSearchBaseURL()",
    "sourceAfterFix": "conf.getRestBaseURL()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "fa5635c39e3000406103657977b98efa79bd4512",
    "fixCommitParentSHA1": "0321d14bf299628af7459267c317e347a7f00d46",
    "bugFilePath": "twitter4j-core/src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/Twitter.java b/twitter4j-core/src/main/java/twitter4j/Twitter.java\nindex 069622c..a391273 100644\n--- a/twitter4j-core/src/main/java/twitter4j/Twitter.java\n+++ b/twitter4j-core/src/main/java/twitter4j/Twitter.java\n@@ -237,21 +237,21 @@\n      * {@inheritDoc}\n      */\n     public Trends getTrends() throws TwitterException {\n-        return new TrendsJSONImpl(http.get(conf.getSearchBaseURL() + \"trends.json\"));\n+        return new TrendsJSONImpl(http.get(conf.getRestBaseURL() + \"trends.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\")).get(0);\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\")).get(0);\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\"\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"))).get(0);\n     }\n \n@@ -259,14 +259,14 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/daily.json\"));\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/daily.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n@@ -283,7 +283,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json\"));\n     }\n \n@@ -291,7 +291,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 247,
    "bugNodeStartChar": 9871,
    "bugNodeLength": 23,
    "fixLineNum": 247,
    "fixNodeStartChar": 9871,
    "fixNodeLength": 21,
    "sourceBeforeFix": "conf.getSearchBaseURL()",
    "sourceAfterFix": "conf.getRestBaseURL()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "fa5635c39e3000406103657977b98efa79bd4512",
    "fixCommitParentSHA1": "0321d14bf299628af7459267c317e347a7f00d46",
    "bugFilePath": "twitter4j-core/src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/Twitter.java b/twitter4j-core/src/main/java/twitter4j/Twitter.java\nindex 069622c..a391273 100644\n--- a/twitter4j-core/src/main/java/twitter4j/Twitter.java\n+++ b/twitter4j-core/src/main/java/twitter4j/Twitter.java\n@@ -237,21 +237,21 @@\n      * {@inheritDoc}\n      */\n     public Trends getTrends() throws TwitterException {\n-        return new TrendsJSONImpl(http.get(conf.getSearchBaseURL() + \"trends.json\"));\n+        return new TrendsJSONImpl(http.get(conf.getRestBaseURL() + \"trends.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\")).get(0);\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\")).get(0);\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\"\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"))).get(0);\n     }\n \n@@ -259,14 +259,14 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/daily.json\"));\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/daily.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n@@ -283,7 +283,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json\"));\n     }\n \n@@ -291,7 +291,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 247,
    "bugNodeStartChar": 9871,
    "bugNodeLength": 23,
    "fixLineNum": 247,
    "fixNodeStartChar": 9871,
    "fixNodeLength": 21,
    "sourceBeforeFix": "conf.getSearchBaseURL()",
    "sourceAfterFix": "conf.getRestBaseURL()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "fa5635c39e3000406103657977b98efa79bd4512",
    "fixCommitParentSHA1": "0321d14bf299628af7459267c317e347a7f00d46",
    "bugFilePath": "twitter4j-core/src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/Twitter.java b/twitter4j-core/src/main/java/twitter4j/Twitter.java\nindex 069622c..a391273 100644\n--- a/twitter4j-core/src/main/java/twitter4j/Twitter.java\n+++ b/twitter4j-core/src/main/java/twitter4j/Twitter.java\n@@ -237,21 +237,21 @@\n      * {@inheritDoc}\n      */\n     public Trends getTrends() throws TwitterException {\n-        return new TrendsJSONImpl(http.get(conf.getSearchBaseURL() + \"trends.json\"));\n+        return new TrendsJSONImpl(http.get(conf.getRestBaseURL() + \"trends.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\")).get(0);\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\")).get(0);\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\"\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"))).get(0);\n     }\n \n@@ -259,14 +259,14 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/daily.json\"));\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/daily.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n@@ -283,7 +283,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json\"));\n     }\n \n@@ -291,7 +291,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 254,
    "bugNodeStartChar": 10115,
    "bugNodeLength": 23,
    "fixLineNum": 254,
    "fixNodeStartChar": 10115,
    "fixNodeLength": 21,
    "sourceBeforeFix": "conf.getSearchBaseURL()",
    "sourceAfterFix": "conf.getRestBaseURL()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "fa5635c39e3000406103657977b98efa79bd4512",
    "fixCommitParentSHA1": "0321d14bf299628af7459267c317e347a7f00d46",
    "bugFilePath": "twitter4j-core/src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/Twitter.java b/twitter4j-core/src/main/java/twitter4j/Twitter.java\nindex 069622c..a391273 100644\n--- a/twitter4j-core/src/main/java/twitter4j/Twitter.java\n+++ b/twitter4j-core/src/main/java/twitter4j/Twitter.java\n@@ -237,21 +237,21 @@\n      * {@inheritDoc}\n      */\n     public Trends getTrends() throws TwitterException {\n-        return new TrendsJSONImpl(http.get(conf.getSearchBaseURL() + \"trends.json\"));\n+        return new TrendsJSONImpl(http.get(conf.getRestBaseURL() + \"trends.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\")).get(0);\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\")).get(0);\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\"\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"))).get(0);\n     }\n \n@@ -259,14 +259,14 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/daily.json\"));\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/daily.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n@@ -283,7 +283,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json\"));\n     }\n \n@@ -291,7 +291,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 254,
    "bugNodeStartChar": 10115,
    "bugNodeLength": 23,
    "fixLineNum": 254,
    "fixNodeStartChar": 10115,
    "fixNodeLength": 21,
    "sourceBeforeFix": "conf.getSearchBaseURL()",
    "sourceAfterFix": "conf.getRestBaseURL()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "fa5635c39e3000406103657977b98efa79bd4512",
    "fixCommitParentSHA1": "0321d14bf299628af7459267c317e347a7f00d46",
    "bugFilePath": "twitter4j-core/src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/Twitter.java b/twitter4j-core/src/main/java/twitter4j/Twitter.java\nindex 069622c..a391273 100644\n--- a/twitter4j-core/src/main/java/twitter4j/Twitter.java\n+++ b/twitter4j-core/src/main/java/twitter4j/Twitter.java\n@@ -237,21 +237,21 @@\n      * {@inheritDoc}\n      */\n     public Trends getTrends() throws TwitterException {\n-        return new TrendsJSONImpl(http.get(conf.getSearchBaseURL() + \"trends.json\"));\n+        return new TrendsJSONImpl(http.get(conf.getRestBaseURL() + \"trends.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\")).get(0);\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\")).get(0);\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\"\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"))).get(0);\n     }\n \n@@ -259,14 +259,14 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/daily.json\"));\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/daily.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n@@ -283,7 +283,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json\"));\n     }\n \n@@ -291,7 +291,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 262,
    "bugNodeStartChar": 10403,
    "bugNodeLength": 23,
    "fixLineNum": 262,
    "fixNodeStartChar": 10403,
    "fixNodeLength": 21,
    "sourceBeforeFix": "conf.getSearchBaseURL()",
    "sourceAfterFix": "conf.getRestBaseURL()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "fa5635c39e3000406103657977b98efa79bd4512",
    "fixCommitParentSHA1": "0321d14bf299628af7459267c317e347a7f00d46",
    "bugFilePath": "twitter4j-core/src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/Twitter.java b/twitter4j-core/src/main/java/twitter4j/Twitter.java\nindex 069622c..a391273 100644\n--- a/twitter4j-core/src/main/java/twitter4j/Twitter.java\n+++ b/twitter4j-core/src/main/java/twitter4j/Twitter.java\n@@ -237,21 +237,21 @@\n      * {@inheritDoc}\n      */\n     public Trends getTrends() throws TwitterException {\n-        return new TrendsJSONImpl(http.get(conf.getSearchBaseURL() + \"trends.json\"));\n+        return new TrendsJSONImpl(http.get(conf.getRestBaseURL() + \"trends.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\")).get(0);\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\")).get(0);\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\"\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"))).get(0);\n     }\n \n@@ -259,14 +259,14 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/daily.json\"));\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/daily.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n@@ -283,7 +283,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json\"));\n     }\n \n@@ -291,7 +291,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 262,
    "bugNodeStartChar": 10403,
    "bugNodeLength": 23,
    "fixLineNum": 262,
    "fixNodeStartChar": 10403,
    "fixNodeLength": 21,
    "sourceBeforeFix": "conf.getSearchBaseURL()",
    "sourceAfterFix": "conf.getRestBaseURL()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "fa5635c39e3000406103657977b98efa79bd4512",
    "fixCommitParentSHA1": "0321d14bf299628af7459267c317e347a7f00d46",
    "bugFilePath": "twitter4j-core/src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/Twitter.java b/twitter4j-core/src/main/java/twitter4j/Twitter.java\nindex 069622c..a391273 100644\n--- a/twitter4j-core/src/main/java/twitter4j/Twitter.java\n+++ b/twitter4j-core/src/main/java/twitter4j/Twitter.java\n@@ -237,21 +237,21 @@\n      * {@inheritDoc}\n      */\n     public Trends getTrends() throws TwitterException {\n-        return new TrendsJSONImpl(http.get(conf.getSearchBaseURL() + \"trends.json\"));\n+        return new TrendsJSONImpl(http.get(conf.getRestBaseURL() + \"trends.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\")).get(0);\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\")).get(0);\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\"\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"))).get(0);\n     }\n \n@@ -259,14 +259,14 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/daily.json\"));\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/daily.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n@@ -283,7 +283,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json\"));\n     }\n \n@@ -291,7 +291,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 269,
    "bugNodeStartChar": 10653,
    "bugNodeLength": 23,
    "fixLineNum": 269,
    "fixNodeStartChar": 10653,
    "fixNodeLength": 21,
    "sourceBeforeFix": "conf.getSearchBaseURL()",
    "sourceAfterFix": "conf.getRestBaseURL()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "fa5635c39e3000406103657977b98efa79bd4512",
    "fixCommitParentSHA1": "0321d14bf299628af7459267c317e347a7f00d46",
    "bugFilePath": "twitter4j-core/src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/Twitter.java b/twitter4j-core/src/main/java/twitter4j/Twitter.java\nindex 069622c..a391273 100644\n--- a/twitter4j-core/src/main/java/twitter4j/Twitter.java\n+++ b/twitter4j-core/src/main/java/twitter4j/Twitter.java\n@@ -237,21 +237,21 @@\n      * {@inheritDoc}\n      */\n     public Trends getTrends() throws TwitterException {\n-        return new TrendsJSONImpl(http.get(conf.getSearchBaseURL() + \"trends.json\"));\n+        return new TrendsJSONImpl(http.get(conf.getRestBaseURL() + \"trends.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\")).get(0);\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\")).get(0);\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\"\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"))).get(0);\n     }\n \n@@ -259,14 +259,14 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/daily.json\"));\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/daily.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n@@ -283,7 +283,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json\"));\n     }\n \n@@ -291,7 +291,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 269,
    "bugNodeStartChar": 10653,
    "bugNodeLength": 23,
    "fixLineNum": 269,
    "fixNodeStartChar": 10653,
    "fixNodeLength": 21,
    "sourceBeforeFix": "conf.getSearchBaseURL()",
    "sourceAfterFix": "conf.getRestBaseURL()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "fa5635c39e3000406103657977b98efa79bd4512",
    "fixCommitParentSHA1": "0321d14bf299628af7459267c317e347a7f00d46",
    "bugFilePath": "twitter4j-core/src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/Twitter.java b/twitter4j-core/src/main/java/twitter4j/Twitter.java\nindex 069622c..a391273 100644\n--- a/twitter4j-core/src/main/java/twitter4j/Twitter.java\n+++ b/twitter4j-core/src/main/java/twitter4j/Twitter.java\n@@ -237,21 +237,21 @@\n      * {@inheritDoc}\n      */\n     public Trends getTrends() throws TwitterException {\n-        return new TrendsJSONImpl(http.get(conf.getSearchBaseURL() + \"trends.json\"));\n+        return new TrendsJSONImpl(http.get(conf.getRestBaseURL() + \"trends.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\")).get(0);\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\")).get(0);\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\"\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"))).get(0);\n     }\n \n@@ -259,14 +259,14 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/daily.json\"));\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/daily.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n@@ -283,7 +283,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json\"));\n     }\n \n@@ -291,7 +291,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 286,
    "bugNodeStartChar": 11191,
    "bugNodeLength": 23,
    "fixLineNum": 286,
    "fixNodeStartChar": 11191,
    "fixNodeLength": 21,
    "sourceBeforeFix": "conf.getSearchBaseURL()",
    "sourceAfterFix": "conf.getRestBaseURL()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "fa5635c39e3000406103657977b98efa79bd4512",
    "fixCommitParentSHA1": "0321d14bf299628af7459267c317e347a7f00d46",
    "bugFilePath": "twitter4j-core/src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/Twitter.java b/twitter4j-core/src/main/java/twitter4j/Twitter.java\nindex 069622c..a391273 100644\n--- a/twitter4j-core/src/main/java/twitter4j/Twitter.java\n+++ b/twitter4j-core/src/main/java/twitter4j/Twitter.java\n@@ -237,21 +237,21 @@\n      * {@inheritDoc}\n      */\n     public Trends getTrends() throws TwitterException {\n-        return new TrendsJSONImpl(http.get(conf.getSearchBaseURL() + \"trends.json\"));\n+        return new TrendsJSONImpl(http.get(conf.getRestBaseURL() + \"trends.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\")).get(0);\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\")).get(0);\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\"\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"))).get(0);\n     }\n \n@@ -259,14 +259,14 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/daily.json\"));\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/daily.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n@@ -283,7 +283,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json\"));\n     }\n \n@@ -291,7 +291,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 286,
    "bugNodeStartChar": 11191,
    "bugNodeLength": 23,
    "fixLineNum": 286,
    "fixNodeStartChar": 11191,
    "fixNodeLength": 21,
    "sourceBeforeFix": "conf.getSearchBaseURL()",
    "sourceAfterFix": "conf.getRestBaseURL()"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "fa5635c39e3000406103657977b98efa79bd4512",
    "fixCommitParentSHA1": "0321d14bf299628af7459267c317e347a7f00d46",
    "bugFilePath": "twitter4j-core/src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/Twitter.java b/twitter4j-core/src/main/java/twitter4j/Twitter.java\nindex 069622c..a391273 100644\n--- a/twitter4j-core/src/main/java/twitter4j/Twitter.java\n+++ b/twitter4j-core/src/main/java/twitter4j/Twitter.java\n@@ -237,21 +237,21 @@\n      * {@inheritDoc}\n      */\n     public Trends getTrends() throws TwitterException {\n-        return new TrendsJSONImpl(http.get(conf.getSearchBaseURL() + \"trends.json\"));\n+        return new TrendsJSONImpl(http.get(conf.getRestBaseURL() + \"trends.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\")).get(0);\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\")).get(0);\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\"\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"))).get(0);\n     }\n \n@@ -259,14 +259,14 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/daily.json\"));\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/daily.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n@@ -283,7 +283,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json\"));\n     }\n \n@@ -291,7 +291,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 294,
    "bugNodeStartChar": 11459,
    "bugNodeLength": 23,
    "fixLineNum": 294,
    "fixNodeStartChar": 11459,
    "fixNodeLength": 21,
    "sourceBeforeFix": "conf.getSearchBaseURL()",
    "sourceAfterFix": "conf.getRestBaseURL()"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "fa5635c39e3000406103657977b98efa79bd4512",
    "fixCommitParentSHA1": "0321d14bf299628af7459267c317e347a7f00d46",
    "bugFilePath": "twitter4j-core/src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/Twitter.java b/twitter4j-core/src/main/java/twitter4j/Twitter.java\nindex 069622c..a391273 100644\n--- a/twitter4j-core/src/main/java/twitter4j/Twitter.java\n+++ b/twitter4j-core/src/main/java/twitter4j/Twitter.java\n@@ -237,21 +237,21 @@\n      * {@inheritDoc}\n      */\n     public Trends getTrends() throws TwitterException {\n-        return new TrendsJSONImpl(http.get(conf.getSearchBaseURL() + \"trends.json\"));\n+        return new TrendsJSONImpl(http.get(conf.getRestBaseURL() + \"trends.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\")).get(0);\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\")).get(0);\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\"\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"))).get(0);\n     }\n \n@@ -259,14 +259,14 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/daily.json\"));\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/daily.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n@@ -283,7 +283,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json\"));\n     }\n \n@@ -291,7 +291,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 294,
    "bugNodeStartChar": 11459,
    "bugNodeLength": 23,
    "fixLineNum": 294,
    "fixNodeStartChar": 11459,
    "fixNodeLength": 21,
    "sourceBeforeFix": "conf.getSearchBaseURL()",
    "sourceAfterFix": "conf.getRestBaseURL()"
  },
  {
    "bugType": "CHANGE_OPERATOR",
    "fixCommitSHA1": "48f8385647e01375a249658539696804701f6eef",
    "fixCommitParentSHA1": "3e8286d09930d545131c14bc1c691d1d4b37f1cc",
    "bugFilePath": "twitter4j-core/src/test/java/twitter4j/TwitterTest.java",
    "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/TwitterTest.java b/twitter4j-core/src/test/java/twitter4j/TwitterTest.java\nindex ae6bb74..24b4fe4 100644\n--- a/twitter4j-core/src/test/java/twitter4j/TwitterTest.java\n+++ b/twitter4j-core/src/test/java/twitter4j/TwitterTest.java\n@@ -135,7 +135,7 @@\n         assertFalse(user.isStatusFavorited());\n         assertNull(user.getStatusInReplyToScreenName());\n \n-        assertTrue(1 < user.getListedCount());\n+        assertTrue(1 <= user.getListedCount());\n         assertFalse(user.isFollowRequestSent());\n \n         //test case for TFJ-91 null pointer exception getting user detail on users with no statuses\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 138,
    "bugNodeStartChar": 5891,
    "bugNodeLength": 25,
    "fixLineNum": 138,
    "fixNodeStartChar": 5891,
    "fixNodeLength": 26,
    "sourceBeforeFix": "1 < user.getListedCount()",
    "sourceAfterFix": "1 <= user.getListedCount()"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "34ce14525b96f8b48cf5cce1356f34d1bf902ed0",
    "fixCommitParentSHA1": "be4d2df2b76f02b1f0fd5c406d80ddc3b8500af2",
    "bugFilePath": "twitter4j-examples/src/main/java/twitter4j/examples/listmembers/GetUserListMembers.java",
    "fixPatch": "diff --git a/twitter4j-examples/src/main/java/twitter4j/examples/listmembers/GetUserListMembers.java b/twitter4j-examples/src/main/java/twitter4j/examples/listmembers/GetUserListMembers.java\nindex 5570dba..ffd092f 100644\n--- a/twitter4j-examples/src/main/java/twitter4j/examples/listmembers/GetUserListMembers.java\n+++ b/twitter4j-examples/src/main/java/twitter4j/examples/listmembers/GetUserListMembers.java\n@@ -44,7 +44,7 @@\n      * @param args message\n      */\n     public static void main(String[] args) {\n-        if (args.length < 1) {\n+        if (args.length < 2) {\n             System.out.println(\"Usage: java twitter4j.examples.listmembers.GetUserListMembers [list owner screen name] [list id]\");\n             System.exit(-1);\n         }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 47,
    "bugNodeStartChar": 2019,
    "bugNodeLength": 15,
    "fixLineNum": 47,
    "fixNodeStartChar": 2019,
    "fixNodeLength": 15,
    "sourceBeforeFix": "args.length < 1",
    "sourceAfterFix": "args.length < 2"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "be4d2df2b76f02b1f0fd5c406d80ddc3b8500af2",
    "fixCommitParentSHA1": "cf57053774bb4d65176eb74153f4e4b15d01429a",
    "bugFilePath": "twitter4j-examples/src/main/java/twitter4j/examples/list/GetUserListStatuses.java",
    "fixPatch": "diff --git a/twitter4j-examples/src/main/java/twitter4j/examples/list/GetUserListStatuses.java b/twitter4j-examples/src/main/java/twitter4j/examples/list/GetUserListStatuses.java\nindex 4c82087..8e32dd4 100644\n--- a/twitter4j-examples/src/main/java/twitter4j/examples/list/GetUserListStatuses.java\n+++ b/twitter4j-examples/src/main/java/twitter4j/examples/list/GetUserListStatuses.java\n@@ -45,7 +45,7 @@\n      * @param args message\n      */\n     public static void main(String[] args) {\n-        if (args.length < 1) {\n+        if (args.length < 2) {\n             System.out.println(\"Usage: java twitter4j.examples.list.GetUserListStatuses [list owner screen name] [list id]\");\n             System.exit(-1);\n         }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 48,
    "bugNodeStartChar": 2062,
    "bugNodeLength": 15,
    "fixLineNum": 48,
    "fixNodeStartChar": 2062,
    "fixNodeLength": 15,
    "sourceBeforeFix": "args.length < 1",
    "sourceAfterFix": "args.length < 2"
  },
  {
    "bugType": "CHANGE_NUMERAL",
    "fixCommitSHA1": "be4d2df2b76f02b1f0fd5c406d80ddc3b8500af2",
    "fixCommitParentSHA1": "cf57053774bb4d65176eb74153f4e4b15d01429a",
    "bugFilePath": "twitter4j-examples/src/main/java/twitter4j/examples/list/ShowUserList.java",
    "fixPatch": "diff --git a/twitter4j-examples/src/main/java/twitter4j/examples/list/ShowUserList.java b/twitter4j-examples/src/main/java/twitter4j/examples/list/ShowUserList.java\nindex ec2942b..c4c1b28 100644\n--- a/twitter4j-examples/src/main/java/twitter4j/examples/list/ShowUserList.java\n+++ b/twitter4j-examples/src/main/java/twitter4j/examples/list/ShowUserList.java\n@@ -43,7 +43,7 @@\n      * @param args message\n      */\n     public static void main(String[] args) {\n-        if (args.length < 1) {\n+        if (args.length < 2) {\n             System.out.println(\"Usage: java twitter4j.examples.list.ShowUserList [screen name] [list id]\");\n             System.exit(-1);\n         }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 46,
    "bugNodeStartChar": 2037,
    "bugNodeLength": 15,
    "fixLineNum": 46,
    "fixNodeStartChar": 2037,
    "fixNodeLength": 15,
    "sourceBeforeFix": "args.length < 1",
    "sourceAfterFix": "args.length < 2"
  },
  {
    "bugType": "CHANGE_OPERATOR",
    "fixCommitSHA1": "40df84d16df6f97c250dd9768f5b9826f29d9e63",
    "fixCommitParentSHA1": "23b8ad3dfaac57c7708ec96905df8345b7130b35",
    "bugFilePath": "twitter4j-core/src/main/java/twitter4j/internal/http/HttpClientImpl.java",
    "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/internal/http/HttpClientImpl.java b/twitter4j-core/src/main/java/twitter4j/internal/http/HttpClientImpl.java\nindex ab3ef49..b6d5290 100644\n--- a/twitter4j-core/src/main/java/twitter4j/internal/http/HttpClientImpl.java\n+++ b/twitter4j-core/src/main/java/twitter4j/internal/http/HttpClientImpl.java\n@@ -298,7 +298,7 @@\n                             }\n                         }\n                     }\n-                    if (responseCode < OK && MULTIPLE_CHOICES <= responseCode) {\n+                    if (responseCode < OK || MULTIPLE_CHOICES <= responseCode) {\n                         if (responseCode == ENHANCE_YOUR_CLAIM ||\n                                 responseCode == SERVICE_UNAVAILABLE ||\n                                 responseCode == BAD_REQUEST ||\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 301,
    "bugNodeStartChar": 12117,
    "bugNodeLength": 53,
    "fixLineNum": 301,
    "fixNodeStartChar": 12117,
    "fixNodeLength": 53,
    "sourceBeforeFix": "responseCode < OK && MULTIPLE_CHOICES <= responseCode",
    "sourceAfterFix": "responseCode < OK || MULTIPLE_CHOICES <= responseCode"
  },
  {
    "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
    "fixCommitSHA1": "cb26d2f60ca204a6343a6cbf589e170b171a4303",
    "fixCommitParentSHA1": "fc9dbfd3b775478835cab2b6fe020985393c74b6",
    "bugFilePath": "twitter4j-core/src/main/java/twitter4j/StatusStreamImpl.java",
    "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/StatusStreamImpl.java b/twitter4j-core/src/main/java/twitter4j/StatusStreamImpl.java\nindex 32534c7..f85fde5 100644\n--- a/twitter4j-core/src/main/java/twitter4j/StatusStreamImpl.java\n+++ b/twitter4j-core/src/main/java/twitter4j/StatusStreamImpl.java\n@@ -95,7 +95,7 @@\n                     if (!json.isNull (\"sender\")) {\n                         userStreamListener.onDirectMessage (new DirectMessageJSONImpl (json));\n                     } else if (!json.isNull(\"text\")) {\n-                        userStreamListener.onStatus(new StatusJSONImpl(json));\n+                        listener.onStatus(new StatusJSONImpl(json));\n                     } else if (!json.isNull(\"delete\")) {\n                         listener.onDeletionNotice(new StatusDeletionNoticeImpl(json));\n                     } else if (!json.isNull(\"limit\")) {\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 98,
    "bugNodeStartChar": 3983,
    "bugNodeLength": 53,
    "fixLineNum": 98,
    "fixNodeStartChar": 3983,
    "fixNodeLength": 43,
    "sourceBeforeFix": "userStreamListener.onStatus(new StatusJSONImpl(json))",
    "sourceAfterFix": "listener.onStatus(new StatusJSONImpl(json))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "cb26d2f60ca204a6343a6cbf589e170b171a4303",
    "fixCommitParentSHA1": "fc9dbfd3b775478835cab2b6fe020985393c74b6",
    "bugFilePath": "twitter4j-core/src/main/java/twitter4j/StatusStreamImpl.java",
    "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/StatusStreamImpl.java b/twitter4j-core/src/main/java/twitter4j/StatusStreamImpl.java\nindex 32534c7..f85fde5 100644\n--- a/twitter4j-core/src/main/java/twitter4j/StatusStreamImpl.java\n+++ b/twitter4j-core/src/main/java/twitter4j/StatusStreamImpl.java\n@@ -95,7 +95,7 @@\n                     if (!json.isNull (\"sender\")) {\n                         userStreamListener.onDirectMessage (new DirectMessageJSONImpl (json));\n                     } else if (!json.isNull(\"text\")) {\n-                        userStreamListener.onStatus(new StatusJSONImpl(json));\n+                        listener.onStatus(new StatusJSONImpl(json));\n                     } else if (!json.isNull(\"delete\")) {\n                         listener.onDeletionNotice(new StatusDeletionNoticeImpl(json));\n                     } else if (!json.isNull(\"limit\")) {\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 98,
    "bugNodeStartChar": 3983,
    "bugNodeLength": 53,
    "fixLineNum": 98,
    "fixNodeStartChar": 3983,
    "fixNodeLength": 43,
    "sourceBeforeFix": "userStreamListener.onStatus(new StatusJSONImpl(json))",
    "sourceAfterFix": "listener.onStatus(new StatusJSONImpl(json))"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "72ea162a10fc698c1394aef87d295883c990b993",
    "fixCommitParentSHA1": "306ba836690fc8fb30384d4b351eb5b77cef1818",
    "bugFilePath": "twitter4j-core/src/test/java/twitter4j/SearchAPITest.java",
    "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/SearchAPITest.java b/twitter4j-core/src/test/java/twitter4j/SearchAPITest.java\nindex 27958a0..677c67e 100644\n--- a/twitter4j-core/src/test/java/twitter4j/SearchAPITest.java\n+++ b/twitter4j-core/src/test/java/twitter4j/SearchAPITest.java\n@@ -65,7 +65,7 @@\n     public void testSearch() throws Exception {\n         String queryStr = \"test\";\n         SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd\");\n-        String dateStr = format.format(new java.util.Date());\n+        String dateStr = format.format(new java.util.Date(System.currentTimeMillis() - 24 * 3600 * 1000));\n         Query query = new Query(queryStr).until(dateStr);\n         QueryResult queryResult = unauthenticated.search(query);\n         assertTrue(\"sinceId\", -1 != queryResult.getSinceId());\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 68,
    "bugNodeStartChar": 2835,
    "bugNodeLength": 20,
    "fixLineNum": 68,
    "fixNodeStartChar": 2835,
    "fixNodeLength": 65,
    "sourceBeforeFix": "new java.util.Date()",
    "sourceAfterFix": "new java.util.Date(System.currentTimeMillis() - 24 * 3600 * 1000)"
  },
  {
    "bugType": "OVERLOAD_METHOD_MORE_ARGS",
    "fixCommitSHA1": "62caf9c05867fe3183c6ffd35764809d21b14878",
    "fixCommitParentSHA1": "bebcfef5c70c809836b5b7e23e2dac9b4e12c5ea",
    "bugFilePath": "twitter4j-core/src/test/java/twitter4j/SearchAPITest.java",
    "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/SearchAPITest.java b/twitter4j-core/src/test/java/twitter4j/SearchAPITest.java\nindex ec67f52..eaf5ae5 100644\n--- a/twitter4j-core/src/test/java/twitter4j/SearchAPITest.java\n+++ b/twitter4j-core/src/test/java/twitter4j/SearchAPITest.java\n@@ -47,7 +47,7 @@\n     public void testQuery() throws Exception {\n         SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd\");\n         Query query = new Query(\"test\")\n-                .until(format.format(new java.util.Date()));\n+                .until(format.format(new java.util.Date(System.currentTimeMillis() - 3600*24)));\n         HttpParameter[] params = query.asHttpParameterArray();\n         assertTrue(findParameter(params,\"q\"));\n         assertTrue(findParameter(params,\"until\"));\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 50,
    "bugNodeStartChar": 2111,
    "bugNodeLength": 20,
    "fixLineNum": 50,
    "fixNodeStartChar": 2111,
    "fixNodeLength": 56,
    "sourceBeforeFix": "new java.util.Date()",
    "sourceAfterFix": "new java.util.Date(System.currentTimeMillis() - 3600 * 24)"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 474,
    "bugNodeStartChar": 21884,
    "bugNodeLength": 100,
    "fixLineNum": 474,
    "fixNodeStartChar": 21884,
    "fixNodeLength": 100,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/public_timeline.json\",false))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/public_timeline.json\",false))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 474,
    "bugNodeStartChar": 21884,
    "bugNodeLength": 100,
    "fixLineNum": 474,
    "fixNodeStartChar": 21884,
    "fixNodeLength": 100,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/public_timeline.json\",false))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/public_timeline.json\",false))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 489,
    "bugNodeStartChar": 22728,
    "bugNodeLength": 181,
    "fixLineNum": 489,
    "fixNodeStartChar": 22728,
    "fixNodeLength": 181,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/public_timeline.json\",null,new Paging((long)sinceID).asPostParameterList(Paging.S),false))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/public_timeline.json\",null,new Paging((long)sinceID).asPostParameterList(Paging.S),false))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 489,
    "bugNodeStartChar": 22728,
    "bugNodeLength": 181,
    "fixLineNum": 489,
    "fixNodeStartChar": 22728,
    "fixNodeLength": 181,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/public_timeline.json\",null,new Paging((long)sinceID).asPostParameterList(Paging.S),false))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/public_timeline.json\",null,new Paging((long)sinceID).asPostParameterList(Paging.S),false))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 505,
    "bugNodeStartChar": 23612,
    "bugNodeLength": 81,
    "fixLineNum": 505,
    "fixNodeStartChar": 23612,
    "fixNodeLength": 81,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\",true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\",true))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 505,
    "bugNodeStartChar": 23612,
    "bugNodeLength": 81,
    "fixLineNum": 505,
    "fixNodeStartChar": 23612,
    "fixNodeLength": 81,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\",true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\",true))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 521,
    "bugNodeStartChar": 24506,
    "bugNodeLength": 117,
    "fixLineNum": 521,
    "fixNodeStartChar": 24506,
    "fixNodeLength": 117,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\",null,paging.asPostParameterList(),true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\",null,paging.asPostParameterList(),true))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 521,
    "bugNodeStartChar": 24506,
    "bugNodeLength": 117,
    "fixLineNum": 521,
    "fixNodeStartChar": 24506,
    "fixNodeLength": 117,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\",null,paging.asPostParameterList(),true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\",null,paging.asPostParameterList(),true))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 535,
    "bugNodeStartChar": 25357,
    "bugNodeLength": 84,
    "fixLineNum": 535,
    "fixNodeStartChar": 25357,
    "fixNodeLength": 84,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",true))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 535,
    "bugNodeStartChar": 25357,
    "bugNodeLength": 84,
    "fixLineNum": 535,
    "fixNodeStartChar": 25357,
    "fixNodeLength": 84,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",true))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 550,
    "bugNodeStartChar": 26189,
    "bugNodeLength": 119,
    "fixLineNum": 550,
    "fixNodeStartChar": 26189,
    "fixNodeLength": 119,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null,paging.asPostParameterList(),true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null,paging.asPostParameterList(),true))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 550,
    "bugNodeStartChar": 26189,
    "bugNodeLength": 119,
    "fixLineNum": 550,
    "fixNodeStartChar": 26189,
    "fixNodeLength": 119,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null,paging.asPostParameterList(),true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null,paging.asPostParameterList(),true))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 566,
    "bugNodeStartChar": 27156,
    "bugNodeLength": 170,
    "fixLineNum": 566,
    "fixNodeStartChar": 27156,
    "fixNodeLength": 170,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id+ \".json\",null,paging.asPostParameterList(),http.isAuthenticationEnabled()))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id+ \".json\",null,paging.asPostParameterList(),http.isAuthenticationEnabled()))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 566,
    "bugNodeStartChar": 27156,
    "bugNodeLength": 170,
    "fixLineNum": 566,
    "fixNodeStartChar": 27156,
    "fixNodeLength": 170,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id+ \".json\",null,paging.asPostParameterList(),http.isAuthenticationEnabled()))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id+ \".json\",null,paging.asPostParameterList(),http.isAuthenticationEnabled()))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 580,
    "bugNodeStartChar": 28062,
    "bugNodeLength": 118,
    "fixLineNum": 580,
    "fixNodeStartChar": 28062,
    "fixNodeLength": 118,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id+ \".json\",http.isAuthenticationEnabled()))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id+ \".json\",http.isAuthenticationEnabled()))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 580,
    "bugNodeStartChar": 28062,
    "bugNodeLength": 118,
    "fixLineNum": 580,
    "fixNodeStartChar": 28062,
    "fixNodeLength": 118,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id+ \".json\",http.isAuthenticationEnabled()))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id+ \".json\",http.isAuthenticationEnabled()))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 593,
    "bugNodeStartChar": 28824,
    "bugNodeLength": 98,
    "fixLineNum": 593,
    "fixNodeStartChar": 28824,
    "fixNodeLength": 98,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\",true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\",true))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 593,
    "bugNodeStartChar": 28824,
    "bugNodeLength": 98,
    "fixLineNum": 593,
    "fixNodeStartChar": 28824,
    "fixNodeLength": 98,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\",true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\",true))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 609,
    "bugNodeStartChar": 29705,
    "bugNodeLength": 134,
    "fixLineNum": 609,
    "fixNodeStartChar": 29705,
    "fixNodeLength": 134,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\",null,paging.asPostParameterList(),true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\",null,paging.asPostParameterList(),true))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 609,
    "bugNodeStartChar": 29705,
    "bugNodeLength": 134,
    "fixLineNum": 609,
    "fixNodeStartChar": 29705,
    "fixNodeLength": 134,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\",null,paging.asPostParameterList(),true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\",null,paging.asPostParameterList(),true))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 623,
    "bugNodeStartChar": 30437,
    "bugNodeLength": 98,
    "fixLineNum": 623,
    "fixNodeStartChar": 30437,
    "fixNodeLength": 98,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",null,true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",null,true))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 623,
    "bugNodeStartChar": 30437,
    "bugNodeLength": 98,
    "fixLineNum": 623,
    "fixNodeStartChar": 30437,
    "fixNodeLength": 98,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",null,true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",null,true))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 638,
    "bugNodeStartChar": 31242,
    "bugNodeLength": 128,
    "fixLineNum": 638,
    "fixNodeStartChar": 31242,
    "fixNodeLength": 128,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",null,paging.asPostParameterList(),true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",null,paging.asPostParameterList(),true))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 638,
    "bugNodeStartChar": 31242,
    "bugNodeLength": 128,
    "fixLineNum": 638,
    "fixNodeStartChar": 31242,
    "fixNodeLength": 128,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",null,paging.asPostParameterList(),true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",null,paging.asPostParameterList(),true))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 652,
    "bugNodeStartChar": 32006,
    "bugNodeLength": 105,
    "fixLineNum": 652,
    "fixNodeStartChar": 32006,
    "fixNodeLength": 105,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",null,true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",null,true))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 652,
    "bugNodeStartChar": 32006,
    "bugNodeLength": 105,
    "fixLineNum": 652,
    "fixNodeStartChar": 32006,
    "fixNodeLength": 105,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",null,true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",null,true))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 667,
    "bugNodeStartChar": 32856,
    "bugNodeLength": 135,
    "fixLineNum": 667,
    "fixNodeStartChar": 32856,
    "fixNodeLength": 135,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",null,paging.asPostParameterList(),true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",null,paging.asPostParameterList(),true))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 667,
    "bugNodeStartChar": 32856,
    "bugNodeLength": 135,
    "fixLineNum": 667,
    "fixNodeStartChar": 32856,
    "fixNodeLength": 135,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",null,paging.asPostParameterList(),true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",null,paging.asPostParameterList(),true))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 681,
    "bugNodeStartChar": 33648,
    "bugNodeLength": 105,
    "fixLineNum": 681,
    "fixNodeStartChar": 33648,
    "fixNodeLength": 105,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",null,true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",null,true))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 681,
    "bugNodeStartChar": 33648,
    "bugNodeLength": 105,
    "fixLineNum": 681,
    "fixNodeStartChar": 33648,
    "fixNodeLength": 105,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",null,true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",null,true))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 696,
    "bugNodeStartChar": 34519,
    "bugNodeLength": 135,
    "fixLineNum": 696,
    "fixNodeStartChar": 34519,
    "fixNodeLength": 135,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",null,paging.asPostParameterList(),true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",null,paging.asPostParameterList(),true))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 696,
    "bugNodeStartChar": 34519,
    "bugNodeLength": 135,
    "fixLineNum": 696,
    "fixNodeStartChar": 34519,
    "fixNodeLength": 135,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",null,paging.asPostParameterList(),true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",null,paging.asPostParameterList(),true))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 710,
    "bugNodeStartChar": 35337,
    "bugNodeLength": 104,
    "fixLineNum": 710,
    "fixNodeStartChar": 35337,
    "fixNodeLength": 104,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",null,true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",null,true))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 710,
    "bugNodeStartChar": 35337,
    "bugNodeLength": 104,
    "fixLineNum": 710,
    "fixNodeStartChar": 35337,
    "fixNodeLength": 104,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",null,true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",null,true))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 725,
    "bugNodeStartChar": 36233,
    "bugNodeLength": 134,
    "fixLineNum": 725,
    "fixNodeStartChar": 36233,
    "fixNodeLength": 134,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",null,paging.asPostParameterList(),true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",null,paging.asPostParameterList(),true))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 725,
    "bugNodeStartChar": 36233,
    "bugNodeLength": 134,
    "fixLineNum": 725,
    "fixNodeStartChar": 36233,
    "fixNodeLength": 134,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",null,paging.asPostParameterList(),true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",null,paging.asPostParameterList(),true))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 863,
    "bugNodeStartChar": 44209,
    "bugNodeLength": 109,
    "fixLineNum": 863,
    "fixNodeStartChar": 44209,
    "fixNodeLength": 109,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/retweets/\" + statusId+ \".json\",true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/retweets/\" + statusId+ \".json\",true))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 863,
    "bugNodeStartChar": 44209,
    "bugNodeLength": 109,
    "fixLineNum": 863,
    "fixNodeStartChar": 44209,
    "fixNodeLength": 109,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/retweets/\" + statusId+ \".json\",true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/retweets/\" + statusId+ \".json\",true))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 1076,
    "bugNodeStartChar": 57095,
    "bugNodeLength": 124,
    "fixLineNum": 1076,
    "fixNodeStartChar": 57095,
    "fixNodeLength": 118,
    "sourceBeforeFix": "twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 + user+ \"/lists.json?cursor=\"+ cursor,true))",
    "sourceAfterFix": "twitter4j.List.createListList(get(getApiBaseURL() + V1 + user+ \"/lists.json?cursor=\"+ cursor,true))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 1076,
    "bugNodeStartChar": 57095,
    "bugNodeLength": 124,
    "fixLineNum": 1076,
    "fixNodeStartChar": 57095,
    "fixNodeLength": 118,
    "sourceBeforeFix": "twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 + user+ \"/lists.json?cursor=\"+ cursor,true))",
    "sourceAfterFix": "twitter4j.List.createListList(get(getApiBaseURL() + V1 + user+ \"/lists.json?cursor=\"+ cursor,true))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 1120,
    "bugNodeStartChar": 59612,
    "bugNodeLength": 212,
    "fixLineNum": 1120,
    "fixNodeStartChar": 59612,
    "fixNodeLength": 212,
    "sourceBeforeFix": "Status.constructStatuses(get(getApiBaseURL() + V1 + user+ \"/lists/\"+ id+ \"/statuses.json\",new PostParameter[0],paging.asPostParameterList(Paging.SMCP,Paging.PER_PAGE),true))",
    "sourceAfterFix": "Status.createStatuseList(get(getApiBaseURL() + V1 + user+ \"/lists/\"+ id+ \"/statuses.json\",new PostParameter[0],paging.asPostParameterList(Paging.SMCP,Paging.PER_PAGE),true))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 1120,
    "bugNodeStartChar": 59612,
    "bugNodeLength": 212,
    "fixLineNum": 1120,
    "fixNodeStartChar": 59612,
    "fixNodeLength": 212,
    "sourceBeforeFix": "Status.constructStatuses(get(getApiBaseURL() + V1 + user+ \"/lists/\"+ id+ \"/statuses.json\",new PostParameter[0],paging.asPostParameterList(Paging.SMCP,Paging.PER_PAGE),true))",
    "sourceAfterFix": "Status.createStatuseList(get(getApiBaseURL() + V1 + user+ \"/lists/\"+ id+ \"/statuses.json\",new PostParameter[0],paging.asPostParameterList(Paging.SMCP,Paging.PER_PAGE),true))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 1135,
    "bugNodeStartChar": 60689,
    "bugNodeLength": 136,
    "fixLineNum": 1135,
    "fixNodeStartChar": 60689,
    "fixNodeLength": 130,
    "sourceBeforeFix": "twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 + user+ \"/lists/memberships.json?cursor=\"+ cursor,true))",
    "sourceAfterFix": "twitter4j.List.createListList(get(getApiBaseURL() + V1 + user+ \"/lists/memberships.json?cursor=\"+ cursor,true))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 1135,
    "bugNodeStartChar": 60689,
    "bugNodeLength": 136,
    "fixLineNum": 1135,
    "fixNodeStartChar": 60689,
    "fixNodeLength": 130,
    "sourceBeforeFix": "twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 + user+ \"/lists/memberships.json?cursor=\"+ cursor,true))",
    "sourceAfterFix": "twitter4j.List.createListList(get(getApiBaseURL() + V1 + user+ \"/lists/memberships.json?cursor=\"+ cursor,true))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 1149,
    "bugNodeStartChar": 61680,
    "bugNodeLength": 138,
    "fixLineNum": 1149,
    "fixNodeStartChar": 61680,
    "fixNodeLength": 132,
    "sourceBeforeFix": "twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 + user+ \"/lists/subscriptions.json?cursor=\"+ cursor,true))",
    "sourceAfterFix": "twitter4j.List.createListList(get(getApiBaseURL() + V1 + user+ \"/lists/subscriptions.json?cursor=\"+ cursor,true))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 1149,
    "bugNodeStartChar": 61680,
    "bugNodeLength": 138,
    "fixLineNum": 1149,
    "fixNodeStartChar": 61680,
    "fixNodeLength": 132,
    "sourceBeforeFix": "twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 + user+ \"/lists/subscriptions.json?cursor=\"+ cursor,true))",
    "sourceAfterFix": "twitter4j.List.createListList(get(getApiBaseURL() + V1 + user+ \"/lists/subscriptions.json?cursor=\"+ cursor,true))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 1163,
    "bugNodeStartChar": 62372,
    "bugNodeLength": 87,
    "fixLineNum": 1163,
    "fixNodeStartChar": 62372,
    "fixNodeLength": 87,
    "sourceBeforeFix": "DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\",true))",
    "sourceAfterFix": "DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\",true))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 1163,
    "bugNodeStartChar": 62372,
    "bugNodeLength": 87,
    "fixLineNum": 1163,
    "fixNodeStartChar": 62372,
    "fixNodeLength": 87,
    "sourceBeforeFix": "DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\",true))",
    "sourceAfterFix": "DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\",true))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 1176,
    "bugNodeStartChar": 63097,
    "bugNodeLength": 139,
    "fixLineNum": 1176,
    "fixNodeStartChar": 63097,
    "fixNodeLength": 139,
    "sourceBeforeFix": "DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\",null,paging.asPostParameterList(),true))",
    "sourceAfterFix": "DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\",null,paging.asPostParameterList(),true))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 1176,
    "bugNodeStartChar": 63097,
    "bugNodeLength": 139,
    "fixLineNum": 1176,
    "fixNodeStartChar": 63097,
    "fixNodeLength": 139,
    "sourceBeforeFix": "DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\",null,paging.asPostParameterList(),true))",
    "sourceAfterFix": "DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\",null,paging.asPostParameterList(),true))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 1190,
    "bugNodeStartChar": 63801,
    "bugNodeLength": 130,
    "fixLineNum": 1190,
    "fixNodeStartChar": 63801,
    "fixNodeLength": 130,
    "sourceBeforeFix": "DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages/sent.json\",new PostParameter[0],true))",
    "sourceAfterFix": "DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages/sent.json\",new PostParameter[0],true))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 1190,
    "bugNodeStartChar": 63801,
    "bugNodeLength": 130,
    "fixLineNum": 1190,
    "fixNodeStartChar": 63801,
    "fixNodeLength": 130,
    "sourceBeforeFix": "DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages/sent.json\",new PostParameter[0],true))",
    "sourceAfterFix": "DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages/sent.json\",new PostParameter[0],true))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 1206,
    "bugNodeStartChar": 64635,
    "bugNodeLength": 176,
    "fixLineNum": 1206,
    "fixNodeStartChar": 64635,
    "fixNodeLength": 176,
    "sourceBeforeFix": "DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages/sent.json\",new PostParameter[0],paging.asPostParameterList(),true))",
    "sourceAfterFix": "DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages/sent.json\",new PostParameter[0],paging.asPostParameterList(),true))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 1206,
    "bugNodeStartChar": 64635,
    "bugNodeLength": 176,
    "fixLineNum": 1206,
    "fixNodeStartChar": 64635,
    "fixNodeLength": 176,
    "sourceBeforeFix": "DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages/sent.json\",new PostParameter[0],paging.asPostParameterList(),true))",
    "sourceAfterFix": "DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages/sent.json\",new PostParameter[0],paging.asPostParameterList(),true))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 1581,
    "bugNodeStartChar": 86919,
    "bugNodeLength": 90,
    "fixLineNum": 1581,
    "fixNodeStartChar": 86919,
    "fixNodeLength": 90,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"favorites.json\",new PostParameter[0],true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"favorites.json\",new PostParameter[0],true))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 1581,
    "bugNodeStartChar": 86919,
    "bugNodeLength": 90,
    "fixLineNum": 1581,
    "fixNodeStartChar": 86919,
    "fixNodeLength": 90,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"favorites.json\",new PostParameter[0],true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"favorites.json\",new PostParameter[0],true))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 1594,
    "bugNodeStartChar": 87607,
    "bugNodeLength": 98,
    "fixLineNum": 1594,
    "fixNodeStartChar": 87607,
    "fixNodeLength": 98,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"favorites.json\",\"page\",String.valueOf(page),true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"favorites.json\",\"page\",String.valueOf(page),true))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 1594,
    "bugNodeStartChar": 87607,
    "bugNodeLength": 98,
    "fixLineNum": 1594,
    "fixNodeStartChar": 87607,
    "fixNodeLength": 98,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"favorites.json\",\"page\",String.valueOf(page),true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"favorites.json\",\"page\",String.valueOf(page),true))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 1607,
    "bugNodeStartChar": 88365,
    "bugNodeLength": 101,
    "fixLineNum": 1607,
    "fixNodeStartChar": 88365,
    "fixNodeLength": 101,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id+ \".json\",new PostParameter[0],true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id+ \".json\",new PostParameter[0],true))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 1607,
    "bugNodeStartChar": 88365,
    "bugNodeLength": 101,
    "fixLineNum": 1607,
    "fixNodeStartChar": 88365,
    "fixNodeLength": 101,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id+ \".json\",new PostParameter[0],true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id+ \".json\",new PostParameter[0],true))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 1621,
    "bugNodeStartChar": 89176,
    "bugNodeLength": 109,
    "fixLineNum": 1621,
    "fixNodeStartChar": 89176,
    "fixNodeLength": 109,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id+ \".json\",\"page\",String.valueOf(page),true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id+ \".json\",\"page\",String.valueOf(page),true))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 1621,
    "bugNodeStartChar": 89176,
    "bugNodeLength": 109,
    "fixLineNum": 1621,
    "fixNodeStartChar": 89176,
    "fixNodeLength": 109,
    "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id+ \".json\",\"page\",String.valueOf(page),true))",
    "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id+ \".json\",\"page\",String.valueOf(page),true))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 1777,
    "bugNodeStartChar": 97082,
    "bugNodeLength": 83,
    "fixLineNum": 1777,
    "fixNodeStartChar": 97082,
    "fixNodeLength": 82,
    "sourceBeforeFix": "SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\",true))",
    "sourceAfterFix": "SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\",true))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/main/java/twitter4j/Twitter.java",
    "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 1777,
    "bugNodeStartChar": 97082,
    "bugNodeLength": 83,
    "fixLineNum": 1777,
    "fixNodeStartChar": 97082,
    "fixNodeLength": 82,
    "sourceBeforeFix": "SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\",true))",
    "sourceAfterFix": "SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\",true))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/test/java/twitter4j/DAOTest.java",
    "fixPatch": "diff --git a/src/test/java/twitter4j/DAOTest.java b/src/test/java/twitter4j/DAOTest.java\nindex 943457b..6abbcfa 100644\n--- a/src/test/java/twitter4j/DAOTest.java\n+++ b/src/test/java/twitter4j/DAOTest.java\n@@ -66,22 +66,22 @@\n         HttpClient http = new HttpClient();\n \n         // empty User list\n-        List<User> users = User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<User> users = User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(users.size() == 0);\n         trySerializeable(users);\n \n         // empty Status list\n-        List<Status> statuses = Status.constructStatuses(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<Status> statuses = Status.createStatuseList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(statuses.size() == 0);\n         trySerializeable(statuses);\n \n         // empty DirectMessages list\n-        List<DirectMessage> directMessages = DirectMessage.constructDirectMessages(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<DirectMessage> directMessages = DirectMessage.createDirectMessageList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(directMessages.size() == 0);\n         trySerializeable(directMessages);\n \n         // empty Trends list\n-        List<Trends> trends = Trends.constructTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/trends/daily-empty.json\"));\n+        List<Trends> trends = Trends.createTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/trends/daily-empty.json\"));\n         assertTrue(trends.size() == 0);\n         trySerializeable(trends);\n \n@@ -131,7 +131,7 @@\n         List<User> users;\n \n         // User list\n-        users = User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json\"));\n+        users = User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json\"));\n         assertTrue(users.size() > 0);\n         trySerializeable(users);\n     }\n@@ -139,7 +139,7 @@\n     public void testStatusAsJSON() throws Exception {\n         // single Status\n         HttpClient http = new HttpClient();\n-        List<Status> statuses = Status.constructStatuses(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/public_timeline.json\"));\n+        List<Status> statuses = Status.createStatuseList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/public_timeline.json\"));\n         Status status = statuses.get(0);\n         assertEquals(new Date(1259041785000l), status.getCreatedAt());\n         assertEquals(6000554383l, status.getId());\n@@ -175,7 +175,7 @@\n \n     public void testDirectMessagesAsJSON() throws Exception {\n         HttpClient http = new HttpClient();\n-        List<DirectMessage> directMessages = DirectMessage.constructDirectMessages(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json\"));\n+        List<DirectMessage> directMessages = DirectMessage.createDirectMessageList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json\"));\n         DirectMessage dm = directMessages.get(0);\n         assertEquals(new java.util.Date(1248177356000l),dm.getCreatedAt());\n         assertEquals(6358482,dm.getRecipient().getId());\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 69,
    "bugNodeStartChar": 2756,
    "bugNodeLength": 126,
    "fixLineNum": 69,
    "fixNodeStartChar": 2756,
    "fixNodeLength": 114,
    "sourceBeforeFix": "User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"))",
    "sourceAfterFix": "User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/test/java/twitter4j/DAOTest.java",
    "fixPatch": "diff --git a/src/test/java/twitter4j/DAOTest.java b/src/test/java/twitter4j/DAOTest.java\nindex 943457b..6abbcfa 100644\n--- a/src/test/java/twitter4j/DAOTest.java\n+++ b/src/test/java/twitter4j/DAOTest.java\n@@ -66,22 +66,22 @@\n         HttpClient http = new HttpClient();\n \n         // empty User list\n-        List<User> users = User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<User> users = User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(users.size() == 0);\n         trySerializeable(users);\n \n         // empty Status list\n-        List<Status> statuses = Status.constructStatuses(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<Status> statuses = Status.createStatuseList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(statuses.size() == 0);\n         trySerializeable(statuses);\n \n         // empty DirectMessages list\n-        List<DirectMessage> directMessages = DirectMessage.constructDirectMessages(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<DirectMessage> directMessages = DirectMessage.createDirectMessageList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(directMessages.size() == 0);\n         trySerializeable(directMessages);\n \n         // empty Trends list\n-        List<Trends> trends = Trends.constructTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/trends/daily-empty.json\"));\n+        List<Trends> trends = Trends.createTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/trends/daily-empty.json\"));\n         assertTrue(trends.size() == 0);\n         trySerializeable(trends);\n \n@@ -131,7 +131,7 @@\n         List<User> users;\n \n         // User list\n-        users = User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json\"));\n+        users = User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json\"));\n         assertTrue(users.size() > 0);\n         trySerializeable(users);\n     }\n@@ -139,7 +139,7 @@\n     public void testStatusAsJSON() throws Exception {\n         // single Status\n         HttpClient http = new HttpClient();\n-        List<Status> statuses = Status.constructStatuses(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/public_timeline.json\"));\n+        List<Status> statuses = Status.createStatuseList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/public_timeline.json\"));\n         Status status = statuses.get(0);\n         assertEquals(new Date(1259041785000l), status.getCreatedAt());\n         assertEquals(6000554383l, status.getId());\n@@ -175,7 +175,7 @@\n \n     public void testDirectMessagesAsJSON() throws Exception {\n         HttpClient http = new HttpClient();\n-        List<DirectMessage> directMessages = DirectMessage.constructDirectMessages(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json\"));\n+        List<DirectMessage> directMessages = DirectMessage.createDirectMessageList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json\"));\n         DirectMessage dm = directMessages.get(0);\n         assertEquals(new java.util.Date(1248177356000l),dm.getCreatedAt());\n         assertEquals(6358482,dm.getRecipient().getId());\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 69,
    "bugNodeStartChar": 2756,
    "bugNodeLength": 126,
    "fixLineNum": 69,
    "fixNodeStartChar": 2756,
    "fixNodeLength": 114,
    "sourceBeforeFix": "User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"))",
    "sourceAfterFix": "User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/test/java/twitter4j/DAOTest.java",
    "fixPatch": "diff --git a/src/test/java/twitter4j/DAOTest.java b/src/test/java/twitter4j/DAOTest.java\nindex 943457b..6abbcfa 100644\n--- a/src/test/java/twitter4j/DAOTest.java\n+++ b/src/test/java/twitter4j/DAOTest.java\n@@ -66,22 +66,22 @@\n         HttpClient http = new HttpClient();\n \n         // empty User list\n-        List<User> users = User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<User> users = User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(users.size() == 0);\n         trySerializeable(users);\n \n         // empty Status list\n-        List<Status> statuses = Status.constructStatuses(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<Status> statuses = Status.createStatuseList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(statuses.size() == 0);\n         trySerializeable(statuses);\n \n         // empty DirectMessages list\n-        List<DirectMessage> directMessages = DirectMessage.constructDirectMessages(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<DirectMessage> directMessages = DirectMessage.createDirectMessageList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(directMessages.size() == 0);\n         trySerializeable(directMessages);\n \n         // empty Trends list\n-        List<Trends> trends = Trends.constructTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/trends/daily-empty.json\"));\n+        List<Trends> trends = Trends.createTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/trends/daily-empty.json\"));\n         assertTrue(trends.size() == 0);\n         trySerializeable(trends);\n \n@@ -131,7 +131,7 @@\n         List<User> users;\n \n         // User list\n-        users = User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json\"));\n+        users = User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json\"));\n         assertTrue(users.size() > 0);\n         trySerializeable(users);\n     }\n@@ -139,7 +139,7 @@\n     public void testStatusAsJSON() throws Exception {\n         // single Status\n         HttpClient http = new HttpClient();\n-        List<Status> statuses = Status.constructStatuses(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/public_timeline.json\"));\n+        List<Status> statuses = Status.createStatuseList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/public_timeline.json\"));\n         Status status = statuses.get(0);\n         assertEquals(new Date(1259041785000l), status.getCreatedAt());\n         assertEquals(6000554383l, status.getId());\n@@ -175,7 +175,7 @@\n \n     public void testDirectMessagesAsJSON() throws Exception {\n         HttpClient http = new HttpClient();\n-        List<DirectMessage> directMessages = DirectMessage.constructDirectMessages(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json\"));\n+        List<DirectMessage> directMessages = DirectMessage.createDirectMessageList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json\"));\n         DirectMessage dm = directMessages.get(0);\n         assertEquals(new java.util.Date(1248177356000l),dm.getCreatedAt());\n         assertEquals(6358482,dm.getRecipient().getId());\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 74,
    "bugNodeStartChar": 3018,
    "bugNodeLength": 118,
    "fixLineNum": 74,
    "fixNodeStartChar": 3018,
    "fixNodeLength": 118,
    "sourceBeforeFix": "Status.constructStatuses(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"))",
    "sourceAfterFix": "Status.createStatuseList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/test/java/twitter4j/DAOTest.java",
    "fixPatch": "diff --git a/src/test/java/twitter4j/DAOTest.java b/src/test/java/twitter4j/DAOTest.java\nindex 943457b..6abbcfa 100644\n--- a/src/test/java/twitter4j/DAOTest.java\n+++ b/src/test/java/twitter4j/DAOTest.java\n@@ -66,22 +66,22 @@\n         HttpClient http = new HttpClient();\n \n         // empty User list\n-        List<User> users = User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<User> users = User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(users.size() == 0);\n         trySerializeable(users);\n \n         // empty Status list\n-        List<Status> statuses = Status.constructStatuses(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<Status> statuses = Status.createStatuseList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(statuses.size() == 0);\n         trySerializeable(statuses);\n \n         // empty DirectMessages list\n-        List<DirectMessage> directMessages = DirectMessage.constructDirectMessages(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<DirectMessage> directMessages = DirectMessage.createDirectMessageList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(directMessages.size() == 0);\n         trySerializeable(directMessages);\n \n         // empty Trends list\n-        List<Trends> trends = Trends.constructTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/trends/daily-empty.json\"));\n+        List<Trends> trends = Trends.createTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/trends/daily-empty.json\"));\n         assertTrue(trends.size() == 0);\n         trySerializeable(trends);\n \n@@ -131,7 +131,7 @@\n         List<User> users;\n \n         // User list\n-        users = User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json\"));\n+        users = User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json\"));\n         assertTrue(users.size() > 0);\n         trySerializeable(users);\n     }\n@@ -139,7 +139,7 @@\n     public void testStatusAsJSON() throws Exception {\n         // single Status\n         HttpClient http = new HttpClient();\n-        List<Status> statuses = Status.constructStatuses(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/public_timeline.json\"));\n+        List<Status> statuses = Status.createStatuseList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/public_timeline.json\"));\n         Status status = statuses.get(0);\n         assertEquals(new Date(1259041785000l), status.getCreatedAt());\n         assertEquals(6000554383l, status.getId());\n@@ -175,7 +175,7 @@\n \n     public void testDirectMessagesAsJSON() throws Exception {\n         HttpClient http = new HttpClient();\n-        List<DirectMessage> directMessages = DirectMessage.constructDirectMessages(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json\"));\n+        List<DirectMessage> directMessages = DirectMessage.createDirectMessageList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json\"));\n         DirectMessage dm = directMessages.get(0);\n         assertEquals(new java.util.Date(1248177356000l),dm.getCreatedAt());\n         assertEquals(6358482,dm.getRecipient().getId());\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 74,
    "bugNodeStartChar": 3018,
    "bugNodeLength": 118,
    "fixLineNum": 74,
    "fixNodeStartChar": 3018,
    "fixNodeLength": 118,
    "sourceBeforeFix": "Status.constructStatuses(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"))",
    "sourceAfterFix": "Status.createStatuseList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/test/java/twitter4j/DAOTest.java",
    "fixPatch": "diff --git a/src/test/java/twitter4j/DAOTest.java b/src/test/java/twitter4j/DAOTest.java\nindex 943457b..6abbcfa 100644\n--- a/src/test/java/twitter4j/DAOTest.java\n+++ b/src/test/java/twitter4j/DAOTest.java\n@@ -66,22 +66,22 @@\n         HttpClient http = new HttpClient();\n \n         // empty User list\n-        List<User> users = User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<User> users = User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(users.size() == 0);\n         trySerializeable(users);\n \n         // empty Status list\n-        List<Status> statuses = Status.constructStatuses(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<Status> statuses = Status.createStatuseList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(statuses.size() == 0);\n         trySerializeable(statuses);\n \n         // empty DirectMessages list\n-        List<DirectMessage> directMessages = DirectMessage.constructDirectMessages(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<DirectMessage> directMessages = DirectMessage.createDirectMessageList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(directMessages.size() == 0);\n         trySerializeable(directMessages);\n \n         // empty Trends list\n-        List<Trends> trends = Trends.constructTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/trends/daily-empty.json\"));\n+        List<Trends> trends = Trends.createTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/trends/daily-empty.json\"));\n         assertTrue(trends.size() == 0);\n         trySerializeable(trends);\n \n@@ -131,7 +131,7 @@\n         List<User> users;\n \n         // User list\n-        users = User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json\"));\n+        users = User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json\"));\n         assertTrue(users.size() > 0);\n         trySerializeable(users);\n     }\n@@ -139,7 +139,7 @@\n     public void testStatusAsJSON() throws Exception {\n         // single Status\n         HttpClient http = new HttpClient();\n-        List<Status> statuses = Status.constructStatuses(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/public_timeline.json\"));\n+        List<Status> statuses = Status.createStatuseList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/public_timeline.json\"));\n         Status status = statuses.get(0);\n         assertEquals(new Date(1259041785000l), status.getCreatedAt());\n         assertEquals(6000554383l, status.getId());\n@@ -175,7 +175,7 @@\n \n     public void testDirectMessagesAsJSON() throws Exception {\n         HttpClient http = new HttpClient();\n-        List<DirectMessage> directMessages = DirectMessage.constructDirectMessages(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json\"));\n+        List<DirectMessage> directMessages = DirectMessage.createDirectMessageList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json\"));\n         DirectMessage dm = directMessages.get(0);\n         assertEquals(new java.util.Date(1248177356000l),dm.getCreatedAt());\n         assertEquals(6358482,dm.getRecipient().getId());\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 79,
    "bugNodeStartChar": 3299,
    "bugNodeLength": 131,
    "fixLineNum": 79,
    "fixNodeStartChar": 3299,
    "fixNodeLength": 131,
    "sourceBeforeFix": "DirectMessage.constructDirectMessages(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"))",
    "sourceAfterFix": "DirectMessage.createDirectMessageList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/test/java/twitter4j/DAOTest.java",
    "fixPatch": "diff --git a/src/test/java/twitter4j/DAOTest.java b/src/test/java/twitter4j/DAOTest.java\nindex 943457b..6abbcfa 100644\n--- a/src/test/java/twitter4j/DAOTest.java\n+++ b/src/test/java/twitter4j/DAOTest.java\n@@ -66,22 +66,22 @@\n         HttpClient http = new HttpClient();\n \n         // empty User list\n-        List<User> users = User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<User> users = User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(users.size() == 0);\n         trySerializeable(users);\n \n         // empty Status list\n-        List<Status> statuses = Status.constructStatuses(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<Status> statuses = Status.createStatuseList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(statuses.size() == 0);\n         trySerializeable(statuses);\n \n         // empty DirectMessages list\n-        List<DirectMessage> directMessages = DirectMessage.constructDirectMessages(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<DirectMessage> directMessages = DirectMessage.createDirectMessageList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(directMessages.size() == 0);\n         trySerializeable(directMessages);\n \n         // empty Trends list\n-        List<Trends> trends = Trends.constructTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/trends/daily-empty.json\"));\n+        List<Trends> trends = Trends.createTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/trends/daily-empty.json\"));\n         assertTrue(trends.size() == 0);\n         trySerializeable(trends);\n \n@@ -131,7 +131,7 @@\n         List<User> users;\n \n         // User list\n-        users = User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json\"));\n+        users = User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json\"));\n         assertTrue(users.size() > 0);\n         trySerializeable(users);\n     }\n@@ -139,7 +139,7 @@\n     public void testStatusAsJSON() throws Exception {\n         // single Status\n         HttpClient http = new HttpClient();\n-        List<Status> statuses = Status.constructStatuses(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/public_timeline.json\"));\n+        List<Status> statuses = Status.createStatuseList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/public_timeline.json\"));\n         Status status = statuses.get(0);\n         assertEquals(new Date(1259041785000l), status.getCreatedAt());\n         assertEquals(6000554383l, status.getId());\n@@ -175,7 +175,7 @@\n \n     public void testDirectMessagesAsJSON() throws Exception {\n         HttpClient http = new HttpClient();\n-        List<DirectMessage> directMessages = DirectMessage.constructDirectMessages(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json\"));\n+        List<DirectMessage> directMessages = DirectMessage.createDirectMessageList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json\"));\n         DirectMessage dm = directMessages.get(0);\n         assertEquals(new java.util.Date(1248177356000l),dm.getCreatedAt());\n         assertEquals(6358482,dm.getRecipient().getId());\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 79,
    "bugNodeStartChar": 3299,
    "bugNodeLength": 131,
    "fixLineNum": 79,
    "fixNodeStartChar": 3299,
    "fixNodeLength": 131,
    "sourceBeforeFix": "DirectMessage.constructDirectMessages(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"))",
    "sourceAfterFix": "DirectMessage.createDirectMessageList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/test/java/twitter4j/DAOTest.java",
    "fixPatch": "diff --git a/src/test/java/twitter4j/DAOTest.java b/src/test/java/twitter4j/DAOTest.java\nindex 943457b..6abbcfa 100644\n--- a/src/test/java/twitter4j/DAOTest.java\n+++ b/src/test/java/twitter4j/DAOTest.java\n@@ -66,22 +66,22 @@\n         HttpClient http = new HttpClient();\n \n         // empty User list\n-        List<User> users = User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<User> users = User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(users.size() == 0);\n         trySerializeable(users);\n \n         // empty Status list\n-        List<Status> statuses = Status.constructStatuses(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<Status> statuses = Status.createStatuseList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(statuses.size() == 0);\n         trySerializeable(statuses);\n \n         // empty DirectMessages list\n-        List<DirectMessage> directMessages = DirectMessage.constructDirectMessages(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<DirectMessage> directMessages = DirectMessage.createDirectMessageList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(directMessages.size() == 0);\n         trySerializeable(directMessages);\n \n         // empty Trends list\n-        List<Trends> trends = Trends.constructTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/trends/daily-empty.json\"));\n+        List<Trends> trends = Trends.createTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/trends/daily-empty.json\"));\n         assertTrue(trends.size() == 0);\n         trySerializeable(trends);\n \n@@ -131,7 +131,7 @@\n         List<User> users;\n \n         // User list\n-        users = User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json\"));\n+        users = User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json\"));\n         assertTrue(users.size() > 0);\n         trySerializeable(users);\n     }\n@@ -139,7 +139,7 @@\n     public void testStatusAsJSON() throws Exception {\n         // single Status\n         HttpClient http = new HttpClient();\n-        List<Status> statuses = Status.constructStatuses(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/public_timeline.json\"));\n+        List<Status> statuses = Status.createStatuseList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/public_timeline.json\"));\n         Status status = statuses.get(0);\n         assertEquals(new Date(1259041785000l), status.getCreatedAt());\n         assertEquals(6000554383l, status.getId());\n@@ -175,7 +175,7 @@\n \n     public void testDirectMessagesAsJSON() throws Exception {\n         HttpClient http = new HttpClient();\n-        List<DirectMessage> directMessages = DirectMessage.constructDirectMessages(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json\"));\n+        List<DirectMessage> directMessages = DirectMessage.createDirectMessageList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json\"));\n         DirectMessage dm = directMessages.get(0);\n         assertEquals(new java.util.Date(1248177356000l),dm.getCreatedAt());\n         assertEquals(6358482,dm.getRecipient().getId());\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 134,
    "bugNodeStartChar": 5697,
    "bugNodeLength": 128,
    "fixLineNum": 134,
    "fixNodeStartChar": 5697,
    "fixNodeLength": 116,
    "sourceBeforeFix": "User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json\"))",
    "sourceAfterFix": "User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json\"))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/test/java/twitter4j/DAOTest.java",
    "fixPatch": "diff --git a/src/test/java/twitter4j/DAOTest.java b/src/test/java/twitter4j/DAOTest.java\nindex 943457b..6abbcfa 100644\n--- a/src/test/java/twitter4j/DAOTest.java\n+++ b/src/test/java/twitter4j/DAOTest.java\n@@ -66,22 +66,22 @@\n         HttpClient http = new HttpClient();\n \n         // empty User list\n-        List<User> users = User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<User> users = User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(users.size() == 0);\n         trySerializeable(users);\n \n         // empty Status list\n-        List<Status> statuses = Status.constructStatuses(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<Status> statuses = Status.createStatuseList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(statuses.size() == 0);\n         trySerializeable(statuses);\n \n         // empty DirectMessages list\n-        List<DirectMessage> directMessages = DirectMessage.constructDirectMessages(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<DirectMessage> directMessages = DirectMessage.createDirectMessageList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(directMessages.size() == 0);\n         trySerializeable(directMessages);\n \n         // empty Trends list\n-        List<Trends> trends = Trends.constructTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/trends/daily-empty.json\"));\n+        List<Trends> trends = Trends.createTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/trends/daily-empty.json\"));\n         assertTrue(trends.size() == 0);\n         trySerializeable(trends);\n \n@@ -131,7 +131,7 @@\n         List<User> users;\n \n         // User list\n-        users = User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json\"));\n+        users = User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json\"));\n         assertTrue(users.size() > 0);\n         trySerializeable(users);\n     }\n@@ -139,7 +139,7 @@\n     public void testStatusAsJSON() throws Exception {\n         // single Status\n         HttpClient http = new HttpClient();\n-        List<Status> statuses = Status.constructStatuses(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/public_timeline.json\"));\n+        List<Status> statuses = Status.createStatuseList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/public_timeline.json\"));\n         Status status = statuses.get(0);\n         assertEquals(new Date(1259041785000l), status.getCreatedAt());\n         assertEquals(6000554383l, status.getId());\n@@ -175,7 +175,7 @@\n \n     public void testDirectMessagesAsJSON() throws Exception {\n         HttpClient http = new HttpClient();\n-        List<DirectMessage> directMessages = DirectMessage.constructDirectMessages(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json\"));\n+        List<DirectMessage> directMessages = DirectMessage.createDirectMessageList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json\"));\n         DirectMessage dm = directMessages.get(0);\n         assertEquals(new java.util.Date(1248177356000l),dm.getCreatedAt());\n         assertEquals(6358482,dm.getRecipient().getId());\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 134,
    "bugNodeStartChar": 5697,
    "bugNodeLength": 128,
    "fixLineNum": 134,
    "fixNodeStartChar": 5697,
    "fixNodeLength": 116,
    "sourceBeforeFix": "User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json\"))",
    "sourceAfterFix": "User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json\"))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/test/java/twitter4j/DAOTest.java",
    "fixPatch": "diff --git a/src/test/java/twitter4j/DAOTest.java b/src/test/java/twitter4j/DAOTest.java\nindex 943457b..6abbcfa 100644\n--- a/src/test/java/twitter4j/DAOTest.java\n+++ b/src/test/java/twitter4j/DAOTest.java\n@@ -66,22 +66,22 @@\n         HttpClient http = new HttpClient();\n \n         // empty User list\n-        List<User> users = User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<User> users = User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(users.size() == 0);\n         trySerializeable(users);\n \n         // empty Status list\n-        List<Status> statuses = Status.constructStatuses(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<Status> statuses = Status.createStatuseList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(statuses.size() == 0);\n         trySerializeable(statuses);\n \n         // empty DirectMessages list\n-        List<DirectMessage> directMessages = DirectMessage.constructDirectMessages(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<DirectMessage> directMessages = DirectMessage.createDirectMessageList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(directMessages.size() == 0);\n         trySerializeable(directMessages);\n \n         // empty Trends list\n-        List<Trends> trends = Trends.constructTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/trends/daily-empty.json\"));\n+        List<Trends> trends = Trends.createTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/trends/daily-empty.json\"));\n         assertTrue(trends.size() == 0);\n         trySerializeable(trends);\n \n@@ -131,7 +131,7 @@\n         List<User> users;\n \n         // User list\n-        users = User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json\"));\n+        users = User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json\"));\n         assertTrue(users.size() > 0);\n         trySerializeable(users);\n     }\n@@ -139,7 +139,7 @@\n     public void testStatusAsJSON() throws Exception {\n         // single Status\n         HttpClient http = new HttpClient();\n-        List<Status> statuses = Status.constructStatuses(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/public_timeline.json\"));\n+        List<Status> statuses = Status.createStatuseList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/public_timeline.json\"));\n         Status status = statuses.get(0);\n         assertEquals(new Date(1259041785000l), status.getCreatedAt());\n         assertEquals(6000554383l, status.getId());\n@@ -175,7 +175,7 @@\n \n     public void testDirectMessagesAsJSON() throws Exception {\n         HttpClient http = new HttpClient();\n-        List<DirectMessage> directMessages = DirectMessage.constructDirectMessages(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json\"));\n+        List<DirectMessage> directMessages = DirectMessage.createDirectMessageList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json\"));\n         DirectMessage dm = directMessages.get(0);\n         assertEquals(new java.util.Date(1248177356000l),dm.getCreatedAt());\n         assertEquals(6358482,dm.getRecipient().getId());\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 142,
    "bugNodeStartChar": 6060,
    "bugNodeLength": 115,
    "fixLineNum": 142,
    "fixNodeStartChar": 6060,
    "fixNodeLength": 115,
    "sourceBeforeFix": "Status.constructStatuses(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/public_timeline.json\"))",
    "sourceAfterFix": "Status.createStatuseList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/public_timeline.json\"))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/test/java/twitter4j/DAOTest.java",
    "fixPatch": "diff --git a/src/test/java/twitter4j/DAOTest.java b/src/test/java/twitter4j/DAOTest.java\nindex 943457b..6abbcfa 100644\n--- a/src/test/java/twitter4j/DAOTest.java\n+++ b/src/test/java/twitter4j/DAOTest.java\n@@ -66,22 +66,22 @@\n         HttpClient http = new HttpClient();\n \n         // empty User list\n-        List<User> users = User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<User> users = User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(users.size() == 0);\n         trySerializeable(users);\n \n         // empty Status list\n-        List<Status> statuses = Status.constructStatuses(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<Status> statuses = Status.createStatuseList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(statuses.size() == 0);\n         trySerializeable(statuses);\n \n         // empty DirectMessages list\n-        List<DirectMessage> directMessages = DirectMessage.constructDirectMessages(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<DirectMessage> directMessages = DirectMessage.createDirectMessageList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(directMessages.size() == 0);\n         trySerializeable(directMessages);\n \n         // empty Trends list\n-        List<Trends> trends = Trends.constructTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/trends/daily-empty.json\"));\n+        List<Trends> trends = Trends.createTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/trends/daily-empty.json\"));\n         assertTrue(trends.size() == 0);\n         trySerializeable(trends);\n \n@@ -131,7 +131,7 @@\n         List<User> users;\n \n         // User list\n-        users = User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json\"));\n+        users = User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json\"));\n         assertTrue(users.size() > 0);\n         trySerializeable(users);\n     }\n@@ -139,7 +139,7 @@\n     public void testStatusAsJSON() throws Exception {\n         // single Status\n         HttpClient http = new HttpClient();\n-        List<Status> statuses = Status.constructStatuses(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/public_timeline.json\"));\n+        List<Status> statuses = Status.createStatuseList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/public_timeline.json\"));\n         Status status = statuses.get(0);\n         assertEquals(new Date(1259041785000l), status.getCreatedAt());\n         assertEquals(6000554383l, status.getId());\n@@ -175,7 +175,7 @@\n \n     public void testDirectMessagesAsJSON() throws Exception {\n         HttpClient http = new HttpClient();\n-        List<DirectMessage> directMessages = DirectMessage.constructDirectMessages(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json\"));\n+        List<DirectMessage> directMessages = DirectMessage.createDirectMessageList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json\"));\n         DirectMessage dm = directMessages.get(0);\n         assertEquals(new java.util.Date(1248177356000l),dm.getCreatedAt());\n         assertEquals(6358482,dm.getRecipient().getId());\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 142,
    "bugNodeStartChar": 6060,
    "bugNodeLength": 115,
    "fixLineNum": 142,
    "fixNodeStartChar": 6060,
    "fixNodeLength": 115,
    "sourceBeforeFix": "Status.constructStatuses(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/public_timeline.json\"))",
    "sourceAfterFix": "Status.createStatuseList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/public_timeline.json\"))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/test/java/twitter4j/DAOTest.java",
    "fixPatch": "diff --git a/src/test/java/twitter4j/DAOTest.java b/src/test/java/twitter4j/DAOTest.java\nindex 943457b..6abbcfa 100644\n--- a/src/test/java/twitter4j/DAOTest.java\n+++ b/src/test/java/twitter4j/DAOTest.java\n@@ -66,22 +66,22 @@\n         HttpClient http = new HttpClient();\n \n         // empty User list\n-        List<User> users = User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<User> users = User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(users.size() == 0);\n         trySerializeable(users);\n \n         // empty Status list\n-        List<Status> statuses = Status.constructStatuses(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<Status> statuses = Status.createStatuseList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(statuses.size() == 0);\n         trySerializeable(statuses);\n \n         // empty DirectMessages list\n-        List<DirectMessage> directMessages = DirectMessage.constructDirectMessages(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<DirectMessage> directMessages = DirectMessage.createDirectMessageList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(directMessages.size() == 0);\n         trySerializeable(directMessages);\n \n         // empty Trends list\n-        List<Trends> trends = Trends.constructTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/trends/daily-empty.json\"));\n+        List<Trends> trends = Trends.createTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/trends/daily-empty.json\"));\n         assertTrue(trends.size() == 0);\n         trySerializeable(trends);\n \n@@ -131,7 +131,7 @@\n         List<User> users;\n \n         // User list\n-        users = User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json\"));\n+        users = User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json\"));\n         assertTrue(users.size() > 0);\n         trySerializeable(users);\n     }\n@@ -139,7 +139,7 @@\n     public void testStatusAsJSON() throws Exception {\n         // single Status\n         HttpClient http = new HttpClient();\n-        List<Status> statuses = Status.constructStatuses(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/public_timeline.json\"));\n+        List<Status> statuses = Status.createStatuseList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/public_timeline.json\"));\n         Status status = statuses.get(0);\n         assertEquals(new Date(1259041785000l), status.getCreatedAt());\n         assertEquals(6000554383l, status.getId());\n@@ -175,7 +175,7 @@\n \n     public void testDirectMessagesAsJSON() throws Exception {\n         HttpClient http = new HttpClient();\n-        List<DirectMessage> directMessages = DirectMessage.constructDirectMessages(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json\"));\n+        List<DirectMessage> directMessages = DirectMessage.createDirectMessageList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json\"));\n         DirectMessage dm = directMessages.get(0);\n         assertEquals(new java.util.Date(1248177356000l),dm.getCreatedAt());\n         assertEquals(6358482,dm.getRecipient().getId());\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 178,
    "bugNodeStartChar": 8182,
    "bugNodeLength": 119,
    "fixLineNum": 178,
    "fixNodeStartChar": 8182,
    "fixNodeLength": 119,
    "sourceBeforeFix": "DirectMessage.constructDirectMessages(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json\"))",
    "sourceAfterFix": "DirectMessage.createDirectMessageList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json\"))"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
    "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
    "bugFilePath": "src/test/java/twitter4j/DAOTest.java",
    "fixPatch": "diff --git a/src/test/java/twitter4j/DAOTest.java b/src/test/java/twitter4j/DAOTest.java\nindex 943457b..6abbcfa 100644\n--- a/src/test/java/twitter4j/DAOTest.java\n+++ b/src/test/java/twitter4j/DAOTest.java\n@@ -66,22 +66,22 @@\n         HttpClient http = new HttpClient();\n \n         // empty User list\n-        List<User> users = User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<User> users = User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(users.size() == 0);\n         trySerializeable(users);\n \n         // empty Status list\n-        List<Status> statuses = Status.constructStatuses(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<Status> statuses = Status.createStatuseList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(statuses.size() == 0);\n         trySerializeable(statuses);\n \n         // empty DirectMessages list\n-        List<DirectMessage> directMessages = DirectMessage.constructDirectMessages(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<DirectMessage> directMessages = DirectMessage.createDirectMessageList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(directMessages.size() == 0);\n         trySerializeable(directMessages);\n \n         // empty Trends list\n-        List<Trends> trends = Trends.constructTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/trends/daily-empty.json\"));\n+        List<Trends> trends = Trends.createTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/trends/daily-empty.json\"));\n         assertTrue(trends.size() == 0);\n         trySerializeable(trends);\n \n@@ -131,7 +131,7 @@\n         List<User> users;\n \n         // User list\n-        users = User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json\"));\n+        users = User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json\"));\n         assertTrue(users.size() > 0);\n         trySerializeable(users);\n     }\n@@ -139,7 +139,7 @@\n     public void testStatusAsJSON() throws Exception {\n         // single Status\n         HttpClient http = new HttpClient();\n-        List<Status> statuses = Status.constructStatuses(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/public_timeline.json\"));\n+        List<Status> statuses = Status.createStatuseList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/public_timeline.json\"));\n         Status status = statuses.get(0);\n         assertEquals(new Date(1259041785000l), status.getCreatedAt());\n         assertEquals(6000554383l, status.getId());\n@@ -175,7 +175,7 @@\n \n     public void testDirectMessagesAsJSON() throws Exception {\n         HttpClient http = new HttpClient();\n-        List<DirectMessage> directMessages = DirectMessage.constructDirectMessages(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json\"));\n+        List<DirectMessage> directMessages = DirectMessage.createDirectMessageList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json\"));\n         DirectMessage dm = directMessages.get(0);\n         assertEquals(new java.util.Date(1248177356000l),dm.getCreatedAt());\n         assertEquals(6358482,dm.getRecipient().getId());\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 178,
    "bugNodeStartChar": 8182,
    "bugNodeLength": 119,
    "fixLineNum": 178,
    "fixNodeStartChar": 8182,
    "fixNodeLength": 119,
    "sourceBeforeFix": "DirectMessage.constructDirectMessages(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json\"))",
    "sourceAfterFix": "DirectMessage.createDirectMessageList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json\"))"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "6bd9731f77303b53b9a03b22be0c57438e096355",
    "fixCommitParentSHA1": "9fc0391f63288e2e9da3001d42834f6e5882c9ec",
    "bugFilePath": "src/test/java/twitter4j/DAOTest.java",
    "fixPatch": "diff --git a/src/test/java/twitter4j/DAOTest.java b/src/test/java/twitter4j/DAOTest.java\nindex 06b1210..51ad79f 100644\n--- a/src/test/java/twitter4j/DAOTest.java\n+++ b/src/test/java/twitter4j/DAOTest.java\n@@ -81,7 +81,7 @@\n         trySerializeable(directMessages);\n \n         // empty Trends list\n-        List<Trends> trends = Trends.constructTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<Trends> trends = Trends.constructTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/trends/daily-empty.json\"));\n         assertTrue(trends.size() == 0);\n         trySerializeable(trends);\n \n@@ -91,7 +91,7 @@\n         // single User\n         HttpClient http = new HttpClient();\n         User user = new User(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/users/show/twit4j.json\"));\n-        assertFalse(user.isGeoEnabled());\n+        assertTrue(user.isGeoEnabled());\n         assertFalse(user.isVerified());\n         assertEquals(id1, user.getName());\n         assertEquals(id1, user.getScreenName());\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 94,
    "bugNodeStartChar": 4014,
    "bugNodeLength": 32,
    "fixLineNum": 94,
    "fixNodeStartChar": 4014,
    "fixNodeLength": 31,
    "sourceBeforeFix": "assertFalse(user.isGeoEnabled())",
    "sourceAfterFix": "assertTrue(user.isGeoEnabled())"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "6bd9731f77303b53b9a03b22be0c57438e096355",
    "fixCommitParentSHA1": "9fc0391f63288e2e9da3001d42834f6e5882c9ec",
    "bugFilePath": "src/test/java/twitter4j/DAOTest.java",
    "fixPatch": "diff --git a/src/test/java/twitter4j/DAOTest.java b/src/test/java/twitter4j/DAOTest.java\nindex 06b1210..51ad79f 100644\n--- a/src/test/java/twitter4j/DAOTest.java\n+++ b/src/test/java/twitter4j/DAOTest.java\n@@ -81,7 +81,7 @@\n         trySerializeable(directMessages);\n \n         // empty Trends list\n-        List<Trends> trends = Trends.constructTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<Trends> trends = Trends.constructTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/trends/daily-empty.json\"));\n         assertTrue(trends.size() == 0);\n         trySerializeable(trends);\n \n@@ -91,7 +91,7 @@\n         // single User\n         HttpClient http = new HttpClient();\n         User user = new User(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/users/show/twit4j.json\"));\n-        assertFalse(user.isGeoEnabled());\n+        assertTrue(user.isGeoEnabled());\n         assertFalse(user.isVerified());\n         assertEquals(id1, user.getName());\n         assertEquals(id1, user.getScreenName());\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 94,
    "bugNodeStartChar": 4014,
    "bugNodeLength": 32,
    "fixLineNum": 94,
    "fixNodeStartChar": 4014,
    "fixNodeLength": 31,
    "sourceBeforeFix": "assertFalse(user.isGeoEnabled())",
    "sourceAfterFix": "assertTrue(user.isGeoEnabled())"
  },
  {
    "bugType": "LESS_SPECIFIC_IF",
    "fixCommitSHA1": "f3110aaa4ebf75eeba09d6ca22103cc08bff57ed",
    "fixCommitParentSHA1": "6da5a65c70e544779a50f8cb6ebf629e22f0504a",
    "bugFilePath": "src/test/java/twitter4j/TwitterTestUnit.java",
    "fixPatch": "diff --git a/src/test/java/twitter4j/TwitterTestUnit.java b/src/test/java/twitter4j/TwitterTestUnit.java\nindex d5d040f..270696e 100644\n--- a/src/test/java/twitter4j/TwitterTestUnit.java\n+++ b/src/test/java/twitter4j/TwitterTestUnit.java\n@@ -247,9 +247,10 @@\n \n     public void testAccountMethods() throws Exception{\n         User original = twitterAPI1.verifyCredentials();\n-        if(original.getScreenName().endsWith(\"new\")){\n+        if(original.getScreenName().endsWith(\"new\") ||\n+                original.getName().endsWith(\"new\")){\n             original = twitterAPI1.updateProfile(\n-                    original.getName(), null, \"http://yusuke.homeip.net/twitter4j/\"\n+                    \"twit4j\", null, \"http://yusuke.homeip.net/twitter4j/\"\n                     , \"location:\" , \"Hi there, I do test a lot!new\");\n \n         }\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 250,
    "bugNodeStartChar": 10555,
    "bugNodeLength": 40,
    "fixLineNum": 250,
    "fixNodeStartChar": 10555,
    "fixNodeLength": 94,
    "sourceBeforeFix": "original.getScreenName().endsWith(\"new\")",
    "sourceAfterFix": "original.getScreenName().endsWith(\"new\") || original.getName().endsWith(\"new\")"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "2fbef41e3fcea14dcfc1bdaa0e6e103e246c3f90",
    "fixCommitParentSHA1": "ee1dab29455d35c0c26d9aae544234de492c75f0",
    "bugFilePath": "src/test/java/twitter4j/TwitterTestUnit.java",
    "fixPatch": "diff --git a/src/test/java/twitter4j/TwitterTestUnit.java b/src/test/java/twitter4j/TwitterTestUnit.java\nindex df88bf4..d10ef8a 100644\n--- a/src/test/java/twitter4j/TwitterTestUnit.java\n+++ b/src/test/java/twitter4j/TwitterTestUnit.java\n@@ -209,7 +209,7 @@\n     public void testGetAuthenticatedUser() throws Exception {\n         assertEquals(id1, twitterAPI1.getAuthenticatedUser().getScreenName());\n         assertEquals(id1, new Twitter(id3, pass3).getAuthenticatedUser().getName());\n-        assertEquals(id3,new Twitter(id3, pass3).verifyCredentials().getName());\n+        assertEquals(id1,new Twitter(id3, pass3).verifyCredentials().getName());\n     }\n \n \n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 212,
    "bugNodeStartChar": 8959,
    "bugNodeLength": 71,
    "fixLineNum": 212,
    "fixNodeStartChar": 8959,
    "fixNodeLength": 71,
    "sourceBeforeFix": "assertEquals(id3,new Twitter(id3,pass3).verifyCredentials().getName())",
    "sourceAfterFix": "assertEquals(id1,new Twitter(id3,pass3).verifyCredentials().getName())"
  },
  {
    "bugType": "DIFFERENT_METHOD_SAME_ARGS",
    "fixCommitSHA1": "3c4402897d8288b9642c11497a1a7f006804d10a",
    "fixCommitParentSHA1": "8a43f47550545387e048241300f6c7b6ac6ae7ce",
    "bugFilePath": "src/test/java/twitter4j/TwitterTestUnit.java",
    "fixPatch": "diff --git a/src/test/java/twitter4j/TwitterTestUnit.java b/src/test/java/twitter4j/TwitterTestUnit.java\nindex 54c440c..eae74c5 100644\n--- a/src/test/java/twitter4j/TwitterTestUnit.java\n+++ b/src/test/java/twitter4j/TwitterTestUnit.java\n@@ -249,12 +249,12 @@\n         twitterAPI1.destroyStatus(status.getId());\n     }\n     public void testGetFriends() throws Exception{\n-        List<User> actualReturn = twitterAPI1.getFriends(id2);\n+        List<User> actualReturn = twitterAPI1.getFriends(\"al3x\");\n         boolean found = false;\n         for(User user: actualReturn){\n             found = found || user.getName().equals(\"Yusuke Yamamoto\");\n         }\n-        assertTrue(found);\n+        assertFalse(found);\n         assertTrue(90 < twitterAPI2.getFriends(\"akr\",2).size());\n     }\n     public void testAccountMethods() throws Exception{\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 257,
    "bugNodeStartChar": 10969,
    "bugNodeLength": 17,
    "fixLineNum": 257,
    "fixNodeStartChar": 10969,
    "fixNodeLength": 18,
    "sourceBeforeFix": "assertTrue(found)",
    "sourceAfterFix": "assertFalse(found)"
  },
  {
    "bugType": "CHANGE_IDENTIFIER",
    "fixCommitSHA1": "3c4402897d8288b9642c11497a1a7f006804d10a",
    "fixCommitParentSHA1": "8a43f47550545387e048241300f6c7b6ac6ae7ce",
    "bugFilePath": "src/test/java/twitter4j/TwitterTestUnit.java",
    "fixPatch": "diff --git a/src/test/java/twitter4j/TwitterTestUnit.java b/src/test/java/twitter4j/TwitterTestUnit.java\nindex 54c440c..eae74c5 100644\n--- a/src/test/java/twitter4j/TwitterTestUnit.java\n+++ b/src/test/java/twitter4j/TwitterTestUnit.java\n@@ -249,12 +249,12 @@\n         twitterAPI1.destroyStatus(status.getId());\n     }\n     public void testGetFriends() throws Exception{\n-        List<User> actualReturn = twitterAPI1.getFriends(id2);\n+        List<User> actualReturn = twitterAPI1.getFriends(\"al3x\");\n         boolean found = false;\n         for(User user: actualReturn){\n             found = found || user.getName().equals(\"Yusuke Yamamoto\");\n         }\n-        assertTrue(found);\n+        assertFalse(found);\n         assertTrue(90 < twitterAPI2.getFriends(\"akr\",2).size());\n     }\n     public void testAccountMethods() throws Exception{\n",
    "projectName": "yusuke.twitter4j",
    "bugLineNum": 257,
    "bugNodeStartChar": 10969,
    "bugNodeLength": 17,
    "fixLineNum": 257,
    "fixNodeStartChar": 10969,
    "fixNodeLength": 18,
    "sourceBeforeFix": "assertTrue(found)",
    "sourceAfterFix": "assertFalse(found)"
  }
]