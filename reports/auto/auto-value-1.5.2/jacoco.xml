<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="AutoValue"><sessioninfo id="Saqibs-M1.local-365add8e" start="1617905610004" dump="1617905629009"/><sessioninfo id="Saqibs-M1.local-2f9c2451" start="1617905824859" dump="1617905827814"/><sessioninfo id="Saqibs-M1.local-9a0c5a1a" start="1617905849972" dump="1617905866560"/><package name="com/google/auto/value/extension"><class name="com/google/auto/value/extension/AutoValueExtension$Context" sourcefilename="AutoValueExtension.java"/><class name="com/google/auto/value/extension/AutoValueExtension" sourcefilename="AutoValueExtension.java"><method name="&lt;init&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applicable" desc="(Lcom/google/auto/value/extension/AutoValueExtension$Context;)Z" line="102"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mustBeFinal" desc="(Lcom/google/auto/value/extension/AutoValueExtension$Context;)Z" line="113"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="consumeProperties" desc="(Lcom/google/auto/value/extension/AutoValueExtension$Context;)Ljava/util/Set;" line="141"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="consumeMethods" desc="(Lcom/google/auto/value/extension/AutoValueExtension$Context;)Ljava/util/Set;" line="163"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AutoValueExtension.java"><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></package><package name="com/google/auto/value/extension/memoized"><class name="com/google/auto/value/extension/memoized/MemoizeExtension$Generator$MethodOverrider$NullMeansUninitialized" sourcefilename="MemoizeExtension.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/extension/memoized/MemoizeExtension$Generator$MethodOverrider;)V" line="320"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="additionalFields" desc="()Ljava/lang/Iterable;" line="323"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkMemoized" desc="()Lcom/squareup/javapoet/CodeBlock;" line="328"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMemoized" desc="()Lcom/squareup/javapoet/CodeBlock;" line="333"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/extension/memoized/MemoizedValidator" sourcefilename="MemoizedValidator.java"><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initSteps" desc="()Ljava/lang/Iterable;" line="46"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedSourceVersion" desc="()Ljavax/lang/model/SourceVersion;" line="51"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/extension/memoized/MemoizeExtension" sourcefilename="MemoizeExtension.java"><method name="&lt;init&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applicable" desc="(Lcom/google/auto/value/extension/AutoValueExtension$Context;)Z" line="75"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateClass" desc="(Lcom/google/auto/value/extension/AutoValueExtension$Context;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;" line="81"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="memoizedMethods" desc="(Lcom/google/auto/value/extension/AutoValueExtension$Context;)Lcom/google/common/collect/ImmutableSet;" line="85"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLazyInitAnnotation" desc="(Ljavax/lang/model/util/Elements;)Ljava/util/Optional;" line="368"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="67"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="70"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/extension/memoized/MemoizeExtension$Generator$MethodOverrider$InitializationStrategy" sourcefilename="MemoizeExtension.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/extension/memoized/MemoizeExtension$Generator$MethodOverrider;)V" line="311"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/extension/memoized/Memoized" sourcefilename="Memoized.java"/><class name="com/google/auto/value/extension/memoized/MemoizeExtension$Generator$MethodOverrider$CheckBooleanField" sourcefilename="MemoizeExtension.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/extension/memoized/MemoizeExtension$Generator$MethodOverrider;)V" line="343"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="additionalFields" desc="()Ljava/lang/Iterable;" line="350"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkMemoized" desc="()Lcom/squareup/javapoet/CodeBlock;" line="355"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMemoized" desc="()Lcom/squareup/javapoet/CodeBlock;" line="360"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/auto/value/extension/memoized/MemoizeExtension$Generator$MethodOverrider" sourcefilename="MemoizeExtension.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/extension/memoized/MemoizeExtension$Generator;Ljavax/lang/model/element/ExecutableElement;)V" line="184"><counter type="INSTRUCTION" missed="5" covered="140"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="32"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fields" desc="()Ljava/lang/Iterable;" line="223"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="method" desc="()Lcom/squareup/javapoet/MethodSpec;" line="228"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validate" desc="()V" line="232"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkIllegalModifier" desc="(Ljavax/lang/model/element/Modifier;)V" line="248"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printMessage" desc="(Ljavax/tools/Diagnostic$Kind;Ljava/lang/String;[Ljava/lang/Object;)V" line="254"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overridesObjectMethod" desc="(Ljava/lang/String;)Z" line="261"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="objectMethod" desc="(Ljava/lang/String;)Ljavax/lang/model/element/ExecutableElement;" line="265"><counter type="INSTRUCTION" missed="12" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pullDownMethodAnnotation" desc="(Ljavax/lang/model/element/AnnotationMirror;)Z" line="276"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildCacheField" desc="(Lcom/squareup/javapoet/TypeName;Ljava/lang/String;)Lcom/squareup/javapoet/FieldSpec;" line="288"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="strategy" desc="()Lcom/google/auto/value/extension/memoized/MemoizeExtension$Generator$MethodOverrider$InitializationStrategy;" line="296"><counter type="INSTRUCTION" missed="12" covered="32"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="31" covered="348"/><counter type="BRANCH" missed="9" covered="21"/><counter type="LINE" missed="5" covered="74"/><counter type="COMPLEXITY" missed="9" covered="17"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/extension/memoized/MemoizeExtension$Generator" sourcefilename="MemoizeExtension.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/extension/AutoValueExtension$Context;Ljava/lang/String;Ljava/lang/String;Z)V" line="104"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generate" desc="()Ljava/lang/String;" line="115"><counter type="INSTRUCTION" missed="10" covered="66"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generatedAnnotation" desc="()Ljava/util/Optional;" line="134"><counter type="INSTRUCTION" missed="2" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="superType" desc="()Lcom/squareup/javapoet/TypeName;" line="147"><counter type="INSTRUCTION" missed="7" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeVariableNames" desc="()Lcom/google/common/collect/ImmutableList;" line="156"><counter type="INSTRUCTION" missed="10" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="constructor" desc="()Lcom/squareup/javapoet/MethodSpec;" line="164"><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="29" covered="234"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="5" covered="48"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/extension/memoized/MemoizedValidator$ValidationStep" sourcefilename="MemoizedValidator.java"><method name="&lt;init&gt;" desc="(Ljavax/annotation/processing/Messager;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="annotations" desc="()Ljava/util/Set;" line="63"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="process" desc="(Lcom/google/common/collect/SetMultimap;)Ljava/util/Set;" line="69"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Memoized.java"/><sourcefile name="MemoizeExtension.java"><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="8" mb="0" cb="2"/><line nr="81" mi="0" ci="9" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="13" mb="0" cb="2"/><line nr="87" mi="0" ci="4" mb="0" cb="2"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="1" ci="12" mb="1" cb="1"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="8" mb="0" cb="0"/><line nr="122" mi="0" ci="12" mb="0" cb="2"/><line nr="123" mi="0" ci="6" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="1" cb="1"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="9" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="1" cb="1"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="8" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="9" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="4" ci="6" mb="1" cb="1"/><line nr="152" mi="3" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="4" ci="9" mb="1" cb="1"/><line nr="158" mi="5" ci="0" mb="0" cb="0"/><line nr="159" mi="1" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="13" mb="0" cb="2"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="16" mb="0" cb="0"/><line nr="168" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="13" mb="0" cb="2"/><line nr="171" mi="0" ci="11" mb="0" cb="0"/><line nr="172" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="13" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="5" mb="0" cb="0"/><line nr="192" mi="0" ci="6" mb="0" cb="0"/><line nr="193" mi="0" ci="2" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="7" mb="0" cb="0"/><line nr="199" mi="0" ci="7" mb="0" cb="0"/><line nr="200" mi="0" ci="11" mb="0" cb="2"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="1" cb="1"/><line nr="203" mi="5" ci="0" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="6" mb="0" cb="0"/><line nr="209" mi="0" ci="8" mb="0" cb="0"/><line nr="210" mi="0" ci="6" mb="0" cb="0"/><line nr="211" mi="0" ci="7" mb="0" cb="0"/><line nr="212" mi="0" ci="14" mb="0" cb="0"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="2" mb="0" cb="0"/><line nr="215" mi="0" ci="1" mb="0" cb="0"/><line nr="216" mi="0" ci="1" mb="0" cb="0"/><line nr="217" mi="0" ci="9" mb="0" cb="0"/><line nr="218" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="0" ci="1" mb="0" cb="0"/><line nr="223" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="7" mb="0" cb="2"/><line nr="233" mi="0" ci="6" mb="0" cb="0"/><line nr="235" mi="0" ci="5" mb="0" cb="2"/><line nr="236" mi="0" ci="6" mb="0" cb="0"/><line nr="238" mi="0" ci="3" mb="0" cb="0"/><line nr="239" mi="0" ci="3" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="0"/><line nr="242" mi="0" ci="8" mb="2" cb="2"/><line nr="243" mi="0" ci="3" mb="0" cb="0"/><line nr="245" mi="0" ci="1" mb="0" cb="0"/><line nr="248" mi="0" ci="6" mb="0" cb="2"/><line nr="249" mi="0" ci="14" mb="0" cb="0"/><line nr="251" mi="0" ci="1" mb="0" cb="0"/><line nr="254" mi="0" ci="4" mb="1" cb="1"/><line nr="255" mi="0" ci="5" mb="0" cb="0"/><line nr="257" mi="0" ci="10" mb="0" cb="0"/><line nr="258" mi="0" ci="1" mb="0" cb="0"/><line nr="261" mi="0" ci="14" mb="0" cb="0"/><line nr="265" mi="0" ci="7" mb="0" cb="0"/><line nr="266" mi="0" ci="12" mb="1" cb="1"/><line nr="267" mi="0" ci="5" mb="0" cb="2"/><line nr="268" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="0" ci="1" mb="0" cb="0"/><line nr="271" mi="9" ci="0" mb="0" cb="0"/><line nr="272" mi="3" ci="0" mb="0" cb="0"/><line nr="276" mi="2" ci="6" mb="1" cb="1"/><line nr="277" mi="0" ci="3" mb="0" cb="0"/><line nr="278" mi="0" ci="1" mb="0" cb="0"/><line nr="279" mi="0" ci="1" mb="0" cb="0"/><line nr="288" mi="0" ci="14" mb="0" cb="0"/><line nr="289" mi="0" ci="5" mb="1" cb="1"/><line nr="290" mi="0" ci="8" mb="0" cb="0"/><line nr="292" mi="0" ci="3" mb="0" cb="0"/><line nr="296" mi="0" ci="6" mb="1" cb="1"/><line nr="297" mi="6" ci="0" mb="0" cb="0"/><line nr="299" mi="0" ci="12" mb="0" cb="2"/><line nr="300" mi="0" ci="1" mb="0" cb="0"/><line nr="301" mi="0" ci="1" mb="0" cb="0"/><line nr="302" mi="0" ci="1" mb="0" cb="0"/><line nr="303" mi="0" ci="2" mb="0" cb="0"/><line nr="304" mi="0" ci="2" mb="1" cb="1"/><line nr="305" mi="6" ci="0" mb="0" cb="0"/><line nr="307" mi="0" ci="1" mb="0" cb="0"/><line nr="308" mi="0" ci="6" mb="0" cb="0"/><line nr="311" mi="0" ci="6" mb="0" cb="0"/><line nr="320" mi="0" ci="8" mb="0" cb="0"/><line nr="323" mi="0" ci="2" mb="0" cb="0"/><line nr="328" mi="0" ci="11" mb="0" cb="0"/><line nr="333" mi="0" ci="9" mb="0" cb="0"/><line nr="334" mi="0" ci="13" mb="0" cb="0"/><line nr="335" mi="0" ci="1" mb="0" cb="0"/><line nr="337" mi="0" ci="7" mb="0" cb="0"/><line nr="338" mi="0" ci="1" mb="0" cb="0"/><line nr="339" mi="0" ci="1" mb="0" cb="0"/><line nr="343" mi="7" ci="0" mb="0" cb="0"/><line nr="345" mi="10" ci="0" mb="0" cb="0"/><line nr="346" mi="8" ci="0" mb="0" cb="0"/><line nr="350" mi="4" ci="0" mb="0" cb="0"/><line nr="355" mi="10" ci="0" mb="0" cb="0"/><line nr="360" mi="12" ci="0" mb="0" cb="0"/><line nr="368" mi="0" ci="5" mb="1" cb="1"/><line nr="369" mi="2" ci="0" mb="0" cb="0"/><line nr="371" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="113" covered="711"/><counter type="BRANCH" missed="15" covered="39"/><counter type="LINE" missed="17" covered="147"/><counter type="COMPLEXITY" missed="19" covered="40"/><counter type="METHOD" missed="4" covered="28"/><counter type="CLASS" missed="1" covered="5"/></sourcefile><sourcefile name="MemoizedValidator.java"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="8" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="12" mb="0" cb="2"/><line nr="70" mi="0" ci="5" mb="1" cb="1"/><line nr="71" mi="0" ci="8" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="113" covered="764"/><counter type="BRANCH" missed="16" covered="42"/><counter type="LINE" missed="17" covered="160"/><counter type="COMPLEXITY" missed="20" covered="47"/><counter type="METHOD" missed="4" covered="34"/><counter type="CLASS" missed="1" covered="7"/></package><package name="com/google/auto/value/processor"><class name="com/google/auto/value/processor/PropertyBuilderClassifier" sourcefilename="PropertyBuilderClassifier.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/processor/ErrorReporter;Ljavax/lang/model/util/Types;Ljavax/lang/model/util/Elements;Lcom/google/auto/value/processor/BuilderMethodClassifier;Lcom/google/common/collect/ImmutableBiMap;Lcom/google/auto/value/processor/TypeSimplifier;Lcom/google/auto/value/processor/EclipseHack;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makePropertyBuilder" desc="(Ljavax/lang/model/element/ExecutableElement;Ljava/lang/String;)Ljava/util/Optional;" line="193"><counter type="INSTRUCTION" missed="0" covered="359"/><counter type="BRANCH" missed="4" covered="32"/><counter type="LINE" missed="0" covered="58"/><counter type="COMPLEXITY" missed="4" covered="15"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builderMaker" desc="(Ljava/util/Map;Ljavax/lang/model/element/TypeElement;)Ljava/util/Optional;" line="306"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="noArgMethodsOf" desc="(Ljavax/lang/model/element/TypeElement;)Ljava/util/Map;" line="329"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAllPutAll" desc="(Ljavax/lang/model/element/TypeElement;)Ljava/util/Optional;" line="340"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNullable" desc="(Ljavax/lang/model/element/ExecutableElement;)Z" line="350"><counter type="INSTRUCTION" missed="1" covered="39"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$builderMaker$1" desc="(Ljavax/lang/model/element/ExecutableElement;)Z" line="322"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$builderMaker$0" desc="(Ljavax/lang/model/element/ExecutableElement;)Z" line="321"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="174"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="554"/><counter type="BRANCH" missed="8" covered="52"/><counter type="LINE" missed="1" covered="105"/><counter type="COMPLEXITY" missed="8" covered="31"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/TypeSimplifier$ToStringTypeVisitor" sourcefilename="TypeSimplifier.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/processor/TypeSimplifier;)V" line="211"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultAction" desc="(Ljavax/lang/model/type/TypeMirror;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;" line="213"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitArray" desc="(Ljavax/lang/model/type/ArrayType;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;" line="217"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDeclared" desc="(Ljavax/lang/model/type/DeclaredType;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;" line="221"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="declaredTypeName" desc="(Ljavax/lang/model/type/DeclaredType;)Ljava/lang/String;" line="227"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendTypeArguments" desc="(Ljavax/lang/model/type/DeclaredType;Ljava/lang/StringBuilder;)V" line="241"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitWildcard" desc="(Ljavax/lang/model/type/WildcardType;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;" line="255"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="151"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/TypeSimplifier$CastingUncheckedVisitor" sourcefilename="TypeSimplifier.java"><method name="defaultAction" desc="(Ljavax/lang/model/type/TypeMirror;Ljava/lang/Boolean;)Ljava/lang/Boolean;" line="547"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitUnknown" desc="(Ljavax/lang/model/type/TypeMirror;Ljava/lang/Boolean;)Ljava/lang/Boolean;" line="553"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitArray" desc="(Ljavax/lang/model/type/ArrayType;Ljava/lang/Boolean;)Ljava/lang/Boolean;" line="557"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDeclared" desc="(Ljavax/lang/model/type/DeclaredType;Ljava/lang/Boolean;)Ljava/lang/Boolean;" line="561"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitTypeVariable" desc="(Ljavax/lang/model/type/TypeVariable;Ljava/lang/Boolean;)Ljava/lang/Boolean;" line="565"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uncheckedTypeArgument" desc="(Ljavax/lang/model/type/TypeMirror;)Z" line="572"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isJavaLangObject" desc="(Ljavax/lang/model/type/TypeMirror;)Z" line="584"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="65"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="3" covered="11"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/ErrorReporter" sourcefilename="ErrorReporter.java"><method name="&lt;init&gt;" desc="(Ljavax/annotation/processing/ProcessingEnvironment;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reportNote" desc="(Ljava/lang/String;Ljavax/lang/model/element/Element;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reportWarning" desc="(Ljava/lang/String;Ljavax/lang/model/element/Element;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reportError" desc="(Ljava/lang/String;Ljavax/lang/model/element/Element;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="abortWithError" desc="(Ljava/lang/String;Ljavax/lang/model/element/Element;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/ExtensionContext" sourcefilename="ExtensionContext.java"><method name="&lt;init&gt;" desc="(Ljavax/annotation/processing/ProcessingEnvironment;Ljavax/lang/model/element/TypeElement;Lcom/google/common/collect/ImmutableMap;Lcom/google/common/collect/ImmutableSet;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processingEnvironment" desc="()Ljavax/annotation/processing/ProcessingEnvironment;" line="47"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="packageName" desc="()Ljava/lang/String;" line="52"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="autoValueClass" desc="()Ljavax/lang/model/element/TypeElement;" line="57"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="properties" desc="()Ljava/util/Map;" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="abstractMethods" desc="()Ljava/util/Set;" line="67"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/AutoAnnotationProcessor$Parameter" sourcefilename="AutoAnnotationProcessor.java"><method name="&lt;init&gt;" desc="(Ljavax/lang/model/type/TypeMirror;Lcom/google/auto/value/processor/TypeSimplifier;)V" line="592"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Ljava/lang/String;" line="598"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKind" desc="()Ljavax/lang/model/type/TypeKind;" line="602"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/MissingTypeException" sourcefilename="MissingTypeException.java"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/AutoValueProcessor" sourcefilename="AutoValueProcessor.java"><method name="&lt;init&gt;" desc="()V" line="100"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/ClassLoader;)V" line="104"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Iterable;)V" line="110"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedAnnotationTypes" desc="()Ljava/util/Set;" line="117"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedSourceVersion" desc="()Ljavax/lang/model/SourceVersion;" line="122"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(Ljavax/annotation/processing/ProcessingEnvironment;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="process" desc="(Ljava/util/Set;Ljavax/annotation/processing/RoundEnvironment;)Z" line="177"><counter type="INSTRUCTION" missed="18" covered="86"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="4" covered="23"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generatedClassName" desc="(Ljavax/lang/model/element/TypeElement;Ljava/lang/String;)Ljava/lang/String;" line="220"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generatedSubclassName" desc="(Ljavax/lang/model/element/TypeElement;I)Ljava/lang/String;" line="231"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="access" desc="(Ljavax/lang/model/element/ExecutableElement;)Ljava/lang/String;" line="393"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isJavaLangObject" desc="(Ljavax/lang/model/element/TypeElement;)Z" line="404"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="objectMethodToOverride" desc="(Ljavax/lang/model/element/ExecutableElement;)Lcom/google/auto/value/processor/AutoValueProcessor$ObjectMethodToOverride;" line="412"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="1" covered="10"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processType" desc="(Ljavax/lang/model/element/TypeElement;)V" line="434"><counter type="INSTRUCTION" missed="16" covered="279"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="3" covered="63"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyAnnotations" desc="(Ljavax/lang/model/element/Element;Ljavax/lang/model/element/Element;Lcom/google/auto/value/processor/TypeSimplifier;Ljava/util/Set;)Lcom/google/common/collect/ImmutableList;" line="555"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="annotationVisibleFrom" desc="(Ljavax/lang/model/element/AnnotationMirror;Ljavax/lang/model/element/Element;)Z" line="572"><counter type="INSTRUCTION" missed="2" covered="39"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAnnotationFqName" desc="(Ljavax/lang/model/element/AnnotationMirror;)Ljava/lang/String;" line="603"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFieldOfClasses" desc="(Ljavax/lang/model/element/Element;Ljava/lang/Class;Ljava/lang/String;Ljavax/lang/model/util/Elements;)Lcom/google/common/collect/ImmutableSet;" line="627"><counter type="INSTRUCTION" missed="3" covered="85"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="2" covered="21"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAnnotationsMarkedWithInherited" desc="(Ljavax/lang/model/element/Element;)Ljava/util/Set;" line="661"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeExtensions" desc="(Ljavax/lang/model/element/TypeElement;Lcom/google/auto/value/processor/ExtensionContext;Lcom/google/common/collect/ImmutableList;)I" line="684"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applicableExtensions" desc="(Ljavax/lang/model/element/TypeElement;Lcom/google/auto/value/processor/ExtensionContext;)Lcom/google/common/collect/ImmutableList;" line="703"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="0" covered="9"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="methodsConsumedByExtensions" desc="(Ljavax/lang/model/element/TypeElement;Lcom/google/common/collect/ImmutableList;Lcom/google/auto/value/processor/ExtensionContext;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableBiMap;)Lcom/google/common/collect/ImmutableSet;" line="736"><counter type="INSTRUCTION" missed="0" covered="134"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateMethods" desc="(Ljavax/lang/model/element/TypeElement;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Z)V" line="777"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extensionName" desc="(Lcom/google/auto/value/extension/AutoValueExtension;)Ljava/lang/String;" line="800"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defineVarsForType" desc="(Ljavax/lang/model/element/TypeElement;Lcom/google/auto/value/processor/AutoValueTemplateVars;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Ljava/util/Optional;)Lcom/google/auto/value/processor/TypeSimplifier;" line="809"><counter type="INSTRUCTION" missed="0" covered="220"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="51"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertyMethodAnnotations" desc="(Ljavax/lang/model/element/TypeElement;Ljavax/lang/model/element/ExecutableElement;Lcom/google/common/collect/ImmutableSetMultimap;Lcom/google/auto/value/processor/TypeSimplifier;)Lcom/google/common/collect/ImmutableList;" line="880"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allMethodExcludedAnnotations" desc="(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableSetMultimap;" line="901"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertyNameToMethodMap" desc="(Ljava/util/Set;)Lcom/google/common/collect/ImmutableBiMap;" line="913"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="gettersAllPrefixed" desc="(Ljava/util/Set;)Z" line="927"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prefixedGettersIn" desc="(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableSet;" line="931"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allMethodAnnotationTypes" desc="(Ljava/lang/Iterable;Lcom/google/common/collect/ImmutableSetMultimap;)Ljava/util/Set;" line="953"><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nameWithoutPrefix" desc="(Ljava/lang/String;)Ljava/lang/String;" line="989"><counter type="INSTRUCTION" missed="4" covered="22"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkModifiersIfNested" desc="(Ljavax/lang/model/element/TypeElement;)V" line="999"><counter type="INSTRUCTION" missed="10" covered="21"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fixReservedIdentifiers" desc="(Ljava/util/Map;)V" line="1016"><counter type="INSTRUCTION" missed="10" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="disambiguate" desc="(Ljava/lang/String;Ljava/util/Collection;)Ljava/lang/String;" line="1024"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="returnTypesOf" desc="(Ljava/util/Collection;)Ljava/util/Set;" line="1033"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsArrayType" desc="(Ljava/util/Set;)Z" line="1039"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="determineObjectMethodsToGenerate" desc="(Ljava/util/Set;Lcom/google/auto/value/processor/AutoValueTemplateVars;)V" line="1052"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="abstractMethodsIn" desc="(Lcom/google/common/collect/ImmutableSet;)Lcom/google/common/collect/ImmutableSet;" line="1077"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertyMethodsIn" desc="(Lcom/google/common/collect/ImmutableSet;)Lcom/google/common/collect/ImmutableSet;" line="1100"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkReturnType" desc="(Ljavax/lang/model/element/TypeElement;Ljavax/lang/model/element/ExecutableElement;)Z" line="1112"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="warnAboutPrimitiveArrays" desc="(Ljavax/lang/model/element/TypeElement;Ljavax/lang/model/element/ExecutableElement;)V" line="1140"><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeSourceFile" desc="(Ljava/lang/String;Ljava/lang/String;Ljavax/lang/model/element/TypeElement;)V" line="1173"><counter type="INSTRUCTION" missed="18" covered="22"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ancestorIsAutoValue" desc="(Ljavax/lang/model/element/TypeElement;)Z" line="1192"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="implementsAnnotation" desc="(Ljavax/lang/model/element/TypeElement;)Z" line="1205"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSerialVersionUID" desc="(Ljavax/lang/model/element/TypeElement;)Ljava/lang/String;" line="1211"><counter type="INSTRUCTION" missed="10" covered="63"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeMirror" desc="(Ljava/lang/Class;)Ljavax/lang/model/type/TypeMirror;" line="1233"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wildcardTypeParametersString" desc="(Ljavax/lang/model/element/TypeElement;)Ljava/lang/String;" line="1240"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="immutableSetDifference" desc="(Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;)Lcom/google/common/collect/ImmutableSet;" line="1249"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eclipseHack" desc="()Lcom/google/auto/value/processor/EclipseHack;" line="1257"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$wildcardTypeParametersString$7" desc="(Ljavax/lang/model/element/TypeParameterElement;)Ljava/lang/String;" line="1244"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$containsArrayType$6" desc="(Ljavax/lang/model/type/TypeMirror;)Z" line="1039"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$returnTypesOf$5" desc="(Ljavax/lang/model/element/ExecutableElement;)Ljavax/lang/model/type/TypeMirror;" line="1034"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$propertyMethodAnnotations$4" desc="(Ljavax/lang/model/element/TypeElement;)Ljava/lang/String;" line="891"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$propertyMethodAnnotations$3" desc="(Ljavax/lang/model/element/AnnotationMirror;)Ljavax/lang/model/element/Element;" line="889"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getAnnotationsMarkedWithInherited$2" desc="(Ljavax/lang/model/element/AnnotationMirror;)Ljava/lang/String;" line="663"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getAnnotationsMarkedWithInherited$1" desc="(Ljavax/lang/model/element/AnnotationMirror;)Z" line="662"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$process$0" desc="(Ljava/lang/String;)Ljavax/lang/model/element/TypeElement;" line="178"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="97"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="117" covered="2093"/><counter type="BRANCH" missed="25" covered="227"/><counter type="LINE" missed="22" covered="472"/><counter type="COMPLEXITY" missed="26" covered="161"/><counter type="METHOD" missed="2" covered="56"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/AnnotationOutput$InitializerSourceFormVisitor" sourcefilename="AnnotationOutput.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/processor/AnnotationOutput;Ljavax/annotation/processing/ProcessingEnvironment;Ljava/lang/String;Ljavax/lang/model/element/Element;)V" line="138"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitAnnotation" desc="(Ljavax/lang/model/element/AnnotationMirror;Ljava/lang/StringBuilder;)Ljava/lang/Void;" line="146"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/TypeSimplifier$ToStringAnnotatedTypeVisitor" sourcefilename="TypeSimplifier.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/processor/TypeSimplifier;)V" line="273"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitPrimitive" desc="(Ljavax/lang/model/type/PrimitiveType;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;" line="277"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitTypeVariable" desc="(Ljavax/lang/model/type/TypeVariable;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;" line="284"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitArray" desc="(Ljavax/lang/model/type/ArrayType;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;" line="289"><counter type="INSTRUCTION" missed="8" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDeclared" desc="(Ljavax/lang/model/type/DeclaredType;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;" line="299"><counter type="INSTRUCTION" missed="23" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendAnnotations" desc="(Ljava/util/List;Ljava/lang/StringBuilder;)V" line="319"><counter type="INSTRUCTION" missed="14" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="45" covered="84"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="8" covered="18"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/TypeMirrorSet" sourcefilename="TypeMirrorSet.java"><method name="&lt;init&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([Ljavax/lang/model/type/TypeMirror;)Lcom/google/auto/value/processor/TypeMirrorSet;" line="45"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wrap" desc="(Ljavax/lang/model/type/TypeMirror;)Lcom/google/common/base/Equivalence$Wrapper;" line="49"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljavax/lang/model/type/TypeMirror;)Z" line="54"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="59"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="80"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="85"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/Object;)Z" line="94"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="103"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="113"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="87"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="21"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/JavaScanner" sourcefilename="JavaScanner.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tokenEnd" desc="(I)I" line="51"><counter type="INSTRUCTION" missed="8" covered="46"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="spaceEnd" desc="(I)I" line="77"><counter type="INSTRUCTION" missed="4" covered="33"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blockCommentEnd" desc="(I)I" line="85"><counter type="INSTRUCTION" missed="4" covered="40"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lineCommentEnd" desc="(I)I" line="93"><counter type="INSTRUCTION" missed="8" covered="30"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="quoteEnd" desc="(I)I" line="100"><counter type="INSTRUCTION" missed="4" covered="39"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="30" covered="213"/><counter type="BRANCH" missed="15" covered="41"/><counter type="LINE" missed="2" covered="31"/><counter type="COMPLEXITY" missed="15" covered="21"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/AutoValueBuilderProcessor" sourcefilename="AutoValueBuilderProcessor.java"><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedAnnotationTypes" desc="()Ljava/util/Set;" line="45"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedSourceVersion" desc="()Ljavax/lang/model/SourceVersion;" line="50"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="process" desc="(Ljava/util/Set;Ljavax/annotation/processing/RoundEnvironment;)Z" line="55"><counter type="INSTRUCTION" missed="2" covered="28"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validate" desc="(Ljavax/lang/model/element/Element;Ljava/lang/String;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="52"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/AutoValueProcessor$ContainsMutableVisitor" sourcefilename="AutoValueProcessor.java"><method name="visitArray" desc="(Ljava/util/List;Ljava/lang/Void;)Ljava/lang/Boolean;" line="1135"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visitArray$0" desc="(Ljavax/lang/model/element/AnnotationValue;)Ljava/lang/Object;" line="1135"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/TemplateVars" sourcefilename="TemplateVars.java"><method name="&lt;init&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toText" desc="()Ljava/lang/String;" line="87"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toVars" desc="()Ljava/util/Map;" line="92"><counter type="INSTRUCTION" missed="15" covered="43"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parsedTemplateForResource" desc="(Ljava/lang/String;)Lcom/google/auto/value/processor/escapevelocity/Template;" line="107"><counter type="INSTRUCTION" missed="19" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="retryParseAfterException" desc="(Ljava/lang/String;Ljava/lang/Exception;)Lcom/google/auto/value/processor/escapevelocity/Template;" line="129"><counter type="INSTRUCTION" missed="19" covered="3"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="templateFromInputStream" desc="(Ljava/io/InputStream;)Lcom/google/auto/value/processor/escapevelocity/Template;" line="142"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parsedTemplateFromUrl" desc="(Ljava/lang/String;)Lcom/google/auto/value/processor/escapevelocity/Template;" line="157"><counter type="INSTRUCTION" missed="20" covered="12"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parsedTemplateFromJar" desc="(Ljava/net/URL;)Lcom/google/auto/value/processor/escapevelocity/Template;" line="172"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parsedTemplateFromFile" desc="(Ljava/net/URL;)Lcom/google/auto/value/processor/escapevelocity/Template;" line="192"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fieldValue" desc="(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;" line="200"><counter type="INSTRUCTION" missed="6" covered="4"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isStaticFinal" desc="(Ljava/lang/reflect/Field;)Z" line="207"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="134" covered="232"/><counter type="BRANCH" missed="9" covered="25"/><counter type="LINE" missed="24" covered="47"/><counter type="COMPLEXITY" missed="7" covered="21"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/PropertyBuilderClassifier$PropertyBuilder" sourcefilename="PropertyBuilderClassifier.java"><method name="&lt;init&gt;" desc="(Ljavax/lang/model/element/ExecutableElement;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="98"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPropertyBuilderMethod" desc="()Ljavax/lang/model/element/ExecutableElement;" line="111"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAccess" desc="()Ljava/lang/String;" line="115"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="120"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBuilderType" desc="()Ljava/lang/String;" line="125"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInitializer" desc="()Ljava/lang/String;" line="130"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBeforeInitDefault" desc="()Ljava/lang/String;" line="138"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInitDefault" desc="()Ljava/lang/String;" line="149"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBuiltToBuilder" desc="()Ljava/lang/String;" line="158"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCopyAll" desc="()Ljava/lang/String;" line="168"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/BuilderSpec" sourcefilename="BuilderSpec.java"><method name="&lt;init&gt;" desc="(Ljavax/lang/model/element/TypeElement;Ljavax/annotation/processing/ProcessingEnvironment;Lcom/google/auto/value/processor/ErrorReporter;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBuilder" desc="()Ljava/util/Optional;" line="77"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builderFrom" desc="(Ljavax/lang/model/element/TypeElement;)Ljava/util/Optional;" line="380"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sameTypeParameters" desc="(Ljavax/lang/model/element/TypeElement;Ljavax/lang/model/element/TypeElement;)Z" line="390"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="abstractMethods" desc="(Ljavax/lang/model/element/TypeElement;)Ljava/util/Set;" line="411"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeParamsString" desc="()Ljava/lang/String;" line="423"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="68"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="225"/><counter type="BRANCH" missed="0" covered="26"/><counter type="LINE" missed="0" covered="48"/><counter type="COMPLEXITY" missed="0" covered="20"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/Optionalish" sourcefilename="Optionalish.java"><method name="&lt;init&gt;" desc="(Ljavax/lang/model/type/DeclaredType;Ljava/lang/String;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createIfOptional" desc="(Ljavax/lang/model/type/TypeMirror;Ljava/lang/String;)Lcom/google/auto/value/processor/Optionalish;" line="63"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOptional" desc="(Ljavax/lang/model/type/TypeMirror;)Z" line="72"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRawType" desc="()Ljava/lang/String;" line="87"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEmpty" desc="()Ljava/lang/String;" line="99"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContainedType" desc="(Ljavax/lang/model/util/Types;)Ljavax/lang/model/type/TypeMirror;" line="107"><counter type="INSTRUCTION" missed="17" covered="12"/><counter type="BRANCH" missed="2" covered="1"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContainedPrimitiveType" desc="(Ljavax/lang/model/util/Types;)Ljavax/lang/model/type/TypeMirror;" line="124"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="45" covered="109"/><counter type="BRANCH" missed="4" covered="9"/><counter type="LINE" missed="6" covered="24"/><counter type="COMPLEXITY" missed="5" covered="10"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/AnnotationOutput$SourceFormVisitor" sourcefilename="AnnotationOutput.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/processor/AnnotationOutput;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultAction" desc="(Ljava/lang/Object;Ljava/lang/StringBuilder;)Ljava/lang/Void;" line="56"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitArray" desc="(Ljava/util/List;Ljava/lang/StringBuilder;)Ljava/lang/Void;" line="62"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitChar" desc="(CLjava/lang/StringBuilder;)Ljava/lang/Void;" line="75"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitLong" desc="(JLjava/lang/StringBuilder;)Ljava/lang/Void;" line="81"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDouble" desc="(DLjava/lang/StringBuilder;)Ljava/lang/Void;" line="87"><counter type="INSTRUCTION" missed="15" covered="17"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitFloat" desc="(FLjava/lang/StringBuilder;)Ljava/lang/Void;" line="101"><counter type="INSTRUCTION" missed="15" covered="19"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitEnumConstant" desc="(Ljavax/lang/model/element/VariableElement;Ljava/lang/StringBuilder;)Ljava/lang/Void;" line="115"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitString" desc="(Ljava/lang/String;Ljava/lang/StringBuilder;)Ljava/lang/Void;" line="121"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitType" desc="(Ljavax/lang/model/type/TypeMirror;Ljava/lang/StringBuilder;)Ljava/lang/Void;" line="127"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="30" covered="130"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="6" covered="32"/><counter type="COMPLEXITY" missed="6" covered="11"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/TypeSimplifier" sourcefilename="TypeSimplifier.java"><method name="&lt;init&gt;" desc="(Ljavax/lang/model/util/Types;Ljava/lang/String;Ljava/util/Set;Ljavax/lang/model/type/TypeMirror;)V" line="86"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typesToImport" desc="()Lcom/google/common/collect/ImmutableSortedSet;" line="105"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="simplify" desc="(Ljavax/lang/model/type/TypeMirror;)Ljava/lang/String;" line="119"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="simplifyRaw" desc="(Ljavax/lang/model/type/TypeMirror;)Ljava/lang/String;" line="128"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="simplifyWithAnnotations" desc="(Ljavax/lang/model/type/TypeMirror;)Ljava/lang/String;" line="137"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formalTypeParametersString" desc="(Ljavax/lang/model/element/TypeElement;)Ljava/lang/String;" line="152"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="actualTypeParametersString" desc="(Ljavax/lang/model/element/TypeElement;)Ljava/lang/String;" line="173"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendTypeParameterWithBounds" desc="(Ljava/lang/StringBuilder;Ljavax/lang/model/element/TypeParameterElement;)V" line="184"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classNameOf" desc="(Ljavax/lang/model/element/TypeElement;)Ljava/lang/String;" line="329"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="topLevelType" desc="(Ljavax/lang/model/element/TypeElement;)Ljavax/lang/model/element/TypeElement;" line="335"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="packageNameOf" desc="(Ljavax/lang/model/element/TypeElement;)Ljava/lang/String;" line="346"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="simpleNameOf" desc="(Ljava/lang/String;)Ljava/lang/String;" line="350"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findImports" desc="(Ljavax/lang/model/util/Types;Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;)Ljava/util/Map;" line="382"><counter type="INSTRUCTION" missed="0" covered="94"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="referencedClassTypes" desc="(Ljavax/lang/model/util/Types;Ljava/util/Set;)Ljava/util/Set;" line="421"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nonPrivateDeclaredTypes" desc="(Ljavax/lang/model/util/Types;Ljavax/lang/model/type/TypeMirror;)Ljava/util/Set;" line="490"><counter type="INSTRUCTION" missed="4" covered="58"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ambiguousNames" desc="(Ljavax/lang/model/util/Types;Ljava/util/Set;)Ljava/util/Set;" line="510"><counter type="INSTRUCTION" missed="4" covered="53"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCastingUnchecked" desc="(Ljavax/lang/model/type/TypeMirror;)Z" line="537"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$referencedClassTypes$2" desc="(Ljavax/lang/model/element/TypeElement;)Ljavax/lang/model/type/TypeMirror;" line="429"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$referencedClassTypes$1" desc="(Ljavax/lang/model/util/Types;Ljavax/lang/model/type/TypeMirror;)Ljavax/lang/model/element/TypeElement;" line="428"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$actualTypeParametersString$0" desc="(Ljavax/lang/model/element/TypeParameterElement;)Ljava/lang/String;" line="178"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="523"/><counter type="BRANCH" missed="5" covered="45"/><counter type="LINE" missed="2" covered="112"/><counter type="COMPLEXITY" missed="5" covered="40"/><counter type="METHOD" missed="0" covered="20"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/BuilderSpec$Builder" sourcefilename="BuilderSpec.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/processor/BuilderSpec;Ljavax/lang/model/element/TypeElement;)V" line="110"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBuilderMethods" desc="(Ljavax/lang/model/util/Types;Ljava/util/Set;)Lcom/google/common/collect/ImmutableSet;" line="134"><counter type="INSTRUCTION" missed="0" covered="94"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="referencedTypes" desc="()Ljava/util/Set;" line="171"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defineVars" desc="(Lcom/google/auto/value/processor/AutoValueTemplateVars;Lcom/google/auto/value/processor/TypeSimplifier;Lcom/google/common/collect/ImmutableBiMap;)V" line="188"><counter type="INSTRUCTION" missed="0" covered="216"/><counter type="BRANCH" missed="0" covered="22"/><counter type="LINE" missed="0" covered="44"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toBuilderMethods$2" desc="(Ljavax/lang/model/util/Types;Ljavax/lang/model/type/TypeMirror;)Ljava/lang/String;" line="146"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toBuilderMethods$1" desc="(Ljavax/lang/model/type/TypeMirror;)Z" line="145"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toBuilderMethods$0" desc="(Ljavax/lang/model/element/TypeParameterElement;)Ljava/lang/String;" line="136"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="381"/><counter type="BRANCH" missed="0" covered="36"/><counter type="LINE" missed="0" covered="79"/><counter type="COMPLEXITY" missed="0" covered="25"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/GwtCompatibility" sourcefilename="GwtCompatibility.java"><method name="&lt;init&gt;" desc="(Ljavax/lang/model/element/TypeElement;)V" line="33"><counter type="INSTRUCTION" missed="3" covered="31"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="gwtCompatibleAnnotation" desc="()Ljava/util/Optional;" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElementValues" desc="(Ljavax/lang/model/element/AnnotationMirror;)Ljava/util/Map;" line="52"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="gwtCompatibleAnnotationString" desc="()Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="42" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$gwtCompatibleAnnotationString$0" desc="(Ljava/util/Map$Entry;)Ljava/lang/String;" line="65"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="64" covered="40"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="11" covered="12"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/AutoValueProcessor$Property" sourcefilename="AutoValueProcessor.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljavax/lang/model/element/ExecutableElement;Ljava/lang/String;Lcom/google/auto/value/processor/TypeSimplifier;Lcom/google/common/collect/ImmutableList;)V" line="256"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullableType" desc="(Ljavax/lang/model/type/TypeMirror;)Z" line="270"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="282"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="292"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGetter" desc="()Ljava/lang/String;" line="300"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOwner" desc="()Ljavax/lang/model/element/TypeElement;" line="304"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTypeMirror" desc="()Ljavax/lang/model/type/TypeMirror;" line="308"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Ljava/lang/String;" line="312"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKind" desc="()Ljavax/lang/model/type/TypeKind;" line="316"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAnnotations" desc="()Ljava/util/List;" line="320"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOptional" desc="()Lcom/google/auto/value/processor/Optionalish;" line="328"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNullableAnnotation" desc="()Ljava/lang/String;" line="340"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNullable" desc="()Z" line="349"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAccess" desc="()Ljava/lang/String;" line="353"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="358"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="363"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nullableType$0" desc="(Ljavax/lang/model/element/AnnotationMirror;)Z" line="271"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="138"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="1" covered="31"/><counter type="COMPLEXITY" missed="2" covered="22"/><counter type="METHOD" missed="1" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/AutoValueProcessor$SimpleMethod" sourcefilename="AutoValueProcessor.java"><method name="&lt;init&gt;" desc="(Ljavax/lang/model/element/ExecutableElement;)V" line="378"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAccess" desc="()Ljava/lang/String;" line="384"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="388"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/AutoValueTemplateVars" sourcefilename="AutoValueTemplateVars.java"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parsedTemplate" desc="()Lcom/google/auto/value/processor/escapevelocity/Template;" line="194"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="190"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/Reformatter" sourcefilename="Reformatter.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fixup" desc="(Ljava/lang/String;)Ljava/lang/String;" line="26"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeTrailingSpace" desc="(Ljava/lang/String;)Ljava/lang/String;" line="35"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compressBlankLines" desc="(Ljava/lang/String;)Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compressSpace" desc="(Ljava/lang/String;)Ljava/lang/String;" line="98"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="210"/><counter type="BRANCH" missed="0" covered="34"/><counter type="LINE" missed="1" covered="55"/><counter type="COMPLEXITY" missed="1" covered="23"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/BuilderSpec$PropertyGetter" sourcefilename="BuilderSpec.java"><method name="&lt;init&gt;" desc="(Ljavax/lang/model/element/ExecutableElement;Ljava/lang/String;Lcom/google/auto/value/processor/Optionalish;)V" line="277"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAccess" desc="()Ljava/lang/String;" line="284"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Ljava/lang/String;" line="288"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOptional" desc="()Lcom/google/auto/value/processor/Optionalish;" line="292"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/TypeSimplifier$ReferencedClassTypeVisitor" sourcefilename="TypeSimplifier.java"><method name="&lt;init&gt;" desc="(Ljavax/lang/model/util/Types;Ljava/util/Set;)V" line="438"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitArray" desc="(Ljavax/lang/model/type/ArrayType;Ljava/lang/Void;)Ljava/lang/Void;" line="445"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDeclared" desc="(Ljavax/lang/model/type/DeclaredType;Ljava/lang/Void;)Ljava/lang/Void;" line="449"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitTypeVariable" desc="(Ljavax/lang/model/type/TypeVariable;Ljava/lang/Void;)Ljava/lang/Void;" line="465"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitWildcard" desc="(Ljavax/lang/model/type/WildcardType;Ljava/lang/Void;)Ljava/lang/Void;" line="472"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitError" desc="(Ljavax/lang/model/type/ErrorType;Ljava/lang/Void;)Ljava/lang/Void;" line="481"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="119"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/TypeMirrorSet$1" sourcefilename="TypeMirrorSet.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/processor/TypeMirrorSet;Ljava/util/Iterator;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="63"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljavax/lang/model/type/TypeMirror;" line="68"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="73"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/AutoAnnotationProcessor$Member" sourcefilename="AutoAnnotationProcessor.java"><method name="&lt;init&gt;" desc="(Ljavax/annotation/processing/ProcessingEnvironment;Ljavax/lang/model/element/Element;Ljavax/lang/model/element/ExecutableElement;Lcom/google/auto/value/processor/TypeSimplifier;Lcom/google/auto/value/processor/AnnotationOutput;)V" line="518"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="528"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Ljava/lang/String;" line="532"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getComponentType" desc="()Ljava/lang/String;" line="536"><counter type="INSTRUCTION" missed="1" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeMirror" desc="()Ljavax/lang/model/type/TypeMirror;" line="542"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKind" desc="()Ljavax/lang/model/type/TypeKind;" line="546"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isArrayOfClassWithBounds" desc="()Z" line="550"><counter type="INSTRUCTION" missed="9" covered="56"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="4" covered="13"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultValue" desc="()Ljava/lang/String;" line="578"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="130"/><counter type="BRANCH" missed="8" covered="10"/><counter type="LINE" missed="5" covered="31"/><counter type="COMPLEXITY" missed="8" covered="9"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/TypeSimplifier$Spelling" sourcefilename="TypeSimplifier.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Z)V" line="61"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/AbortProcessingException" sourcefilename="AbortProcessingException.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/GwtSerialization$Property" sourcefilename="GwtSerialization.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/processor/AutoValueProcessor$Property;)V" line="107"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="113"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGetter" desc="()Ljava/lang/String;" line="117"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getType" desc="()Ljava/lang/String;" line="121"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="125"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGwtType" desc="()Ljava/lang/String;" line="135"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGwtCast" desc="()Ljava/lang/String;" line="152"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCastingUnchecked" desc="()Z" line="160"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="85" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/auto/value/processor/GwtSerialization" sourcefilename="GwtSerialization.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/processor/GwtCompatibility;Ljavax/annotation/processing/ProcessingEnvironment;Ljavax/lang/model/element/TypeElement;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shouldWriteGwtSerializer" desc="()Z" line="57"><counter type="INSTRUCTION" missed="34" covered="9"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="6" covered="3"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maybeWriteGwtSerializer" desc="(Lcom/google/auto/value/processor/AutoValueTemplateVars;)V" line="83"><counter type="INSTRUCTION" missed="97" covered="4"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="15" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeSourceFile" desc="(Ljava/lang/String;Ljava/lang/String;Ljavax/lang/model/element/TypeElement;)V" line="226"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeClassHash" desc="(Ljava/lang/Iterable;)Ljava/lang/String;" line="240"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="update" desc="(Ljava/util/zip/CRC32;Ljava/lang/String;)V" line="251"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="237"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="244" covered="29"/><counter type="BRANCH" missed="14" covered="2"/><counter type="LINE" missed="39" covered="11"/><counter type="COMPLEXITY" missed="11" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/AnnotationOutput" sourcefilename="AnnotationOutput.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/processor/TypeSimplifier;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceFormForInitializer" desc="(Ljavax/lang/model/element/AnnotationValue;Ljavax/annotation/processing/ProcessingEnvironment;Ljava/lang/String;Ljavax/lang/model/element/Element;)Ljava/lang/String;" line="185"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceFormForAnnotation" desc="(Ljavax/lang/model/element/AnnotationMirror;)Ljava/lang/String;" line="197"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendQuoted" desc="(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;" line="203"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendQuoted" desc="(Ljava/lang/StringBuilder;C)Ljava/lang/StringBuilder;" line="211"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendEscaped" desc="(Ljava/lang/StringBuilder;C)V" line="217"><counter type="INSTRUCTION" missed="50" covered="14"/><counter type="BRANCH" missed="8" covered="3"/><counter type="LINE" missed="10" covered="5"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="50" covered="88"/><counter type="BRANCH" missed="8" covered="5"/><counter type="LINE" missed="10" covered="22"/><counter type="COMPLEXITY" missed="7" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/AutoAnnotationProcessor" sourcefilename="AutoAnnotationProcessor.java"><method name="&lt;init&gt;" desc="()V" line="70"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedAnnotationTypes" desc="()Ljava/util/Set;" line="74"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportedSourceVersion" desc="()Ljavax/lang/model/SourceVersion;" line="79"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reportError" desc="(Ljavax/lang/model/element/Element;Ljava/lang/String;[Ljava/lang/Object;)V" line="87"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="abortWithError" desc="(Ljava/lang/String;Ljavax/lang/model/element/Element;)Lcom/google/auto/value/processor/AbortProcessingException;" line="96"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="process" desc="(Ljava/util/Set;Ljavax/annotation/processing/RoundEnvironment;)Z" line="104"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="process" desc="(Ljavax/annotation/processing/RoundEnvironment;)V" line="121"><counter type="INSTRUCTION" missed="16" covered="33"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="4" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processMethod" desc="(Ljavax/lang/model/element/ExecutableElement;)V" line="141"><counter type="INSTRUCTION" missed="0" covered="191"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="42"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGeneratedTypeName" desc="(Lcom/google/auto/value/processor/TypeSimplifier;)Ljava/lang/String;" line="194"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invariableHash" desc="(Ljavax/lang/model/element/AnnotationValue;)Ljava/util/Optional;" line="210"><counter type="INSTRUCTION" missed="6" covered="20"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invariableHash" desc="(Ljava/util/List;)Ljava/util/Optional;" line="224"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invariableHashes" desc="(Lcom/google/common/collect/ImmutableMap;Lcom/google/common/collect/ImmutableSet;)Lcom/google/common/collect/ImmutableMap;" line="241"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="methodsAreOverloaded" desc="(Ljava/util/List;)Z" line="256"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generatedClassName" desc="(Ljavax/lang/model/element/ExecutableElement;)Ljava/lang/String;" line="271"><counter type="INSTRUCTION" missed="17" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAnnotationReturnType" desc="(Ljavax/lang/model/element/ExecutableElement;)Ljavax/lang/model/element/TypeElement;" line="281"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMemberMethods" desc="(Ljavax/lang/model/element/TypeElement;)Lcom/google/common/collect/ImmutableMap;" line="293"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMembers" desc="(Ljavax/lang/model/element/Element;Lcom/google/common/collect/ImmutableMap;Lcom/google/auto/value/processor/TypeSimplifier;Lcom/google/auto/value/processor/AnnotationOutput;)Lcom/google/common/collect/ImmutableMap;" line="307"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultValues" desc="(Ljavax/lang/model/element/TypeElement;)Lcom/google/common/collect/ImmutableMap;" line="319"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMemberTypes" desc="(Ljava/util/Collection;)Ljava/util/Set;" line="332"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="(Ljavax/lang/model/element/TypeElement;Ljavax/lang/model/element/ExecutableElement;Ljava/util/Map;Lcom/google/auto/value/processor/TypeSimplifier;)Lcom/google/common/collect/ImmutableMap;" line="342"><counter type="INSTRUCTION" missed="0" covered="102"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateParameters" desc="(Ljavax/lang/model/element/TypeElement;Ljavax/lang/model/element/ExecutableElement;Lcom/google/common/collect/ImmutableMap;Lcom/google/common/collect/ImmutableMap;Lcom/google/common/collect/ImmutableMap;)V" line="377"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compatibleTypes" desc="(Ljavax/lang/model/type/TypeMirror;Ljavax/lang/model/type/TypeMirror;)Z" line="398"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrapperTypesUsedInCollections" desc="(Ljavax/lang/model/element/ExecutableElement;)Ljava/util/Set;" line="427"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReferencedTypes" desc="(Ljavax/lang/model/type/TypeMirror;Ljavax/lang/model/element/ExecutableElement;Ljava/util/Set;Ljava/util/Set;)Ljava/util/Set;" line="448"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeMirror" desc="(Ljava/lang/Class;)Ljavax/lang/model/type/TypeMirror;" line="470"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsArrayType" desc="(Ljava/util/Set;)Z" line="474"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isGwtCompatible" desc="(Ljavax/lang/model/element/TypeElement;)Z" line="478"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fullyQualifiedName" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="484"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeSourceFile" desc="(Ljava/lang/String;Ljava/lang/String;Ljavax/lang/model/element/TypeElement;)V" line="489"><counter type="INSTRUCTION" missed="18" covered="22"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$isGwtCompatible$3" desc="(Ljavax/lang/model/element/Element;)Z" line="480"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$isGwtCompatible$2" desc="(Ljavax/lang/model/element/AnnotationMirror;)Ljavax/lang/model/element/Element;" line="479"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$containsArrayType$1" desc="(Ljavax/lang/model/type/TypeMirror;)Z" line="474"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getMemberTypes$0" desc="(Ljavax/lang/model/element/ExecutableElement;)Ljavax/lang/model/type/TypeMirror;" line="333"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="93" covered="978"/><counter type="BRANCH" missed="11" covered="77"/><counter type="LINE" missed="19" covered="213"/><counter type="COMPLEXITY" missed="10" covered="67"/><counter type="METHOD" missed="1" covered="32"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/AnnotationOutput$AnnotationSourceFormVisitor" sourcefilename="AnnotationOutput.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/processor/AnnotationOutput;)V" line="156"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitAnnotation" desc="(Ljavax/lang/model/element/AnnotationMirror;Ljava/lang/StringBuilder;)Ljava/lang/Void;" line="159"><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/TypeSimplifier$ToStringRawTypeVisitor" sourcefilename="TypeSimplifier.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/processor/TypeSimplifier;)V" line="269"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendTypeArguments" desc="(Ljavax/lang/model/type/DeclaredType;Ljava/lang/StringBuilder;)V" line="270"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/EclipseHack" sourcefilename="EclipseHack.java"><method name="&lt;init&gt;" desc="(Ljavax/annotation/processing/ProcessingEnvironment;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="methodReturnType" desc="(Ljavax/lang/model/element/ExecutableElement;Ljavax/lang/model/type/DeclaredType;)Ljavax/lang/model/type/TypeMirror;" line="50"><counter type="INSTRUCTION" missed="10" covered="13"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="methodReturnTypes" desc="(Ljava/util/Set;Ljavax/lang/model/type/DeclaredType;)Lcom/google/common/collect/ImmutableMap;" line="75"><counter type="INSTRUCTION" missed="21" covered="41"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="6" covered="12"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="noArgMethodsIn" desc="(Ljavax/lang/model/type/DeclaredType;)Ljava/util/Map;" line="106"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="76" covered="60"/><counter type="BRANCH" missed="9" covered="3"/><counter type="LINE" missed="19" covered="18"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/GwtSerialization$GwtTemplateVars" sourcefilename="GwtSerialization.java"><method name="&lt;init&gt;" desc="()V" line="165"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parsedTemplate" desc="()Lcom/google/auto/value/processor/escapevelocity/Template;" line="220"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="216"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/auto/value/processor/BuilderSpec$PropertySetter" sourcefilename="BuilderSpec.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/processor/BuilderSpec;Ljavax/lang/model/element/ExecutableElement;Ljavax/lang/model/type/TypeMirror;Lcom/google/auto/value/processor/TypeSimplifier;)V" line="313"><counter type="INSTRUCTION" missed="5" covered="82"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAccess" desc="()Ljava/lang/String;" line="336"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="340"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameterType" desc="()Ljava/lang/String;" line="344"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPrimitiveParameter" desc="()Z" line="348"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="(Lcom/google/auto/value/processor/AutoValueProcessor$Property;)Ljava/lang/String;" line="352"><counter type="INSTRUCTION" missed="13" covered="21"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="115"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="2" covered="26"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/BuilderMethodClassifier" sourcefilename="BuilderMethodClassifier.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/processor/ErrorReporter;Ljavax/annotation/processing/ProcessingEnvironment;Ljavax/lang/model/element/TypeElement;Ljavax/lang/model/element/TypeElement;Lcom/google/common/collect/ImmutableBiMap;Lcom/google/auto/value/processor/TypeSimplifier;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classify" desc="(Ljava/lang/Iterable;Lcom/google/auto/value/processor/ErrorReporter;Ljavax/annotation/processing/ProcessingEnvironment;Ljavax/lang/model/element/TypeElement;Ljavax/lang/model/element/TypeElement;Lcom/google/common/collect/ImmutableBiMap;Lcom/google/auto/value/processor/TypeSimplifier;Z)Ljava/util/Optional;" line="125"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertyNameToSetters" desc="()Lcom/google/common/collect/ImmutableMultimap;" line="147"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertyNameToPropertyBuilder" desc="()Ljava/util/Map;" line="152"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builderGetters" desc="()Lcom/google/common/collect/ImmutableMap;" line="162"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildMethods" desc="()Ljava/util/Set;" line="171"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classifyMethods" desc="(Ljava/lang/Iterable;Z)Z" line="179"><counter type="INSTRUCTION" missed="0" covered="190"/><counter type="BRANCH" missed="0" covered="30"/><counter type="LINE" missed="0" covered="37"/><counter type="COMPLEXITY" missed="0" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classifyMethod" desc="(Ljavax/lang/model/element/ExecutableElement;)Z" line="244"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classifyMethodNoArgs" desc="(Ljavax/lang/model/element/ExecutableElement;)Z" line="266"><counter type="INSTRUCTION" missed="0" covered="111"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classifyGetter" desc="(Ljavax/lang/model/element/ExecutableElement;Ljavax/lang/model/element/ExecutableElement;)Z" line="306"><counter type="INSTRUCTION" missed="1" covered="111"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classifyMethodOneArg" desc="(Ljavax/lang/model/element/ExecutableElement;)Z" line="351"><counter type="INSTRUCTION" missed="18" covered="105"/><counter type="BRANCH" missed="4" covered="14"/><counter type="LINE" missed="3" covered="25"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForFailedJavaBean" desc="(Ljavax/lang/model/element/ExecutableElement;)V" line="401"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkSetterParameter" desc="(Ljavax/lang/model/element/ExecutableElement;Ljavax/lang/model/element/ExecutableElement;)Z" line="422"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canMakeCopyUsing" desc="(Lcom/google/common/collect/ImmutableList;Ljavax/lang/model/element/ExecutableElement;Ljavax/lang/model/element/ExecutableElement;)Z" line="448"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canMakeCopyUsing" desc="(Ljavax/lang/model/element/ExecutableElement;Ljavax/lang/model/type/TypeMirror;Ljavax/lang/model/type/TypeMirror;)Z" line="484"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyOfMethods" desc="(Ljavax/lang/model/type/TypeMirror;)Lcom/google/common/collect/ImmutableList;" line="505"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builderMethodReturnType" desc="(Ljavax/lang/model/element/ExecutableElement;)Ljavax/lang/model/type/TypeMirror;" line="545"><counter type="INSTRUCTION" missed="4" covered="16"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prefixWithSet" desc="(Ljava/lang/String;)Ljava/lang/String;" line="559"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decapitalize" desc="(Ljava/lang/String;)Ljava/lang/String;" line="566"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeParamsString" desc="()Ljava/lang/String;" line="570"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="961"/><counter type="BRANCH" missed="12" covered="91"/><counter type="LINE" missed="5" covered="203"/><counter type="COMPLEXITY" missed="12" covered="61"/><counter type="METHOD" missed="0" covered="21"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/AutoValueProcessor$ObjectMethodToOverride" sourcefilename="AutoValueProcessor.java"><method name="&lt;clinit&gt;" desc="()V" line="407"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/AutoAnnotationTemplateVars" sourcefilename="AutoAnnotationTemplateVars.java"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parsedTemplate" desc="()Lcom/google/auto/value/processor/escapevelocity/Template;" line="103"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="99"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="BuilderMethodClassifier.java"><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="11" mb="0" cb="2"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="10" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="2"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="10" mb="0" cb="2"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="10" mb="0" cb="2"/><line nr="181" mi="0" ci="6" mb="0" cb="0"/><line nr="182" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="2" mb="0" cb="2"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="2"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="2"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="194" mi="0" ci="6" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="12" mb="0" cb="2"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="8" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="202" mi="0" ci="6" mb="0" cb="0"/><line nr="203" mi="0" ci="6" mb="0" cb="2"/><line nr="204" mi="0" ci="2" mb="0" cb="2"/><line nr="210" mi="0" ci="1" mb="0" cb="0"/><line nr="211" mi="0" ci="9" mb="0" cb="4"/><line nr="212" mi="0" ci="8" mb="0" cb="4"/><line nr="213" mi="0" ci="4" mb="0" cb="4"/><line nr="214" mi="0" ci="8" mb="0" cb="0"/><line nr="217" mi="0" ci="6" mb="0" cb="0"/><line nr="219" mi="0" ci="6" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="2"/><line nr="223" mi="0" ci="8" mb="0" cb="2"/><line nr="224" mi="0" ci="13" mb="0" cb="0"/><line nr="227" mi="0" ci="14" mb="0" cb="0"/><line nr="231" mi="0" ci="6" mb="0" cb="0"/><line nr="232" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="0" ci="1" mb="0" cb="0"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="244" mi="0" ci="4" mb="0" cb="3"/><line nr="246" mi="0" ci="4" mb="0" cb="0"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="250" mi="0" ci="5" mb="0" cb="0"/><line nr="251" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="0" ci="4" mb="0" cb="0"/><line nr="267" mi="0" ci="4" mb="0" cb="0"/><line nr="269" mi="0" ci="6" mb="0" cb="0"/><line nr="270" mi="0" ci="2" mb="0" cb="2"/><line nr="271" mi="0" ci="5" mb="0" cb="0"/><line nr="274" mi="0" ci="4" mb="0" cb="2"/><line nr="275" mi="0" ci="9" mb="0" cb="0"/><line nr="276" mi="0" ci="5" mb="1" cb="1"/><line nr="277" mi="0" ci="17" mb="0" cb="0"/><line nr="280" mi="0" ci="3" mb="0" cb="0"/><line nr="281" mi="0" ci="2" mb="0" cb="0"/><line nr="282" mi="0" ci="3" mb="0" cb="2"/><line nr="283" mi="0" ci="7" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="0" cb="0"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="291" mi="0" ci="7" mb="0" cb="2"/><line nr="292" mi="0" ci="5" mb="0" cb="0"/><line nr="293" mi="0" ci="2" mb="0" cb="0"/><line nr="296" mi="0" ci="13" mb="0" cb="0"/><line nr="299" mi="0" ci="2" mb="0" cb="0"/><line nr="300" mi="0" ci="5" mb="0" cb="0"/><line nr="301" mi="0" ci="2" mb="0" cb="0"/><line nr="306" mi="0" ci="6" mb="0" cb="0"/><line nr="307" mi="0" ci="4" mb="0" cb="0"/><line nr="308" mi="0" ci="5" mb="0" cb="0"/><line nr="309" mi="0" ci="3" mb="0" cb="0"/><line nr="310" mi="0" ci="5" mb="0" cb="2"/><line nr="311" mi="0" ci="11" mb="0" cb="0"/><line nr="314" mi="0" ci="2" mb="0" cb="0"/><line nr="316" mi="0" ci="6" mb="0" cb="0"/><line nr="317" mi="0" ci="1" mb="0" cb="0"/><line nr="318" mi="0" ci="2" mb="0" cb="2"/><line nr="319" mi="0" ci="5" mb="0" cb="0"/><line nr="323" mi="0" ci="7" mb="1" cb="1"/><line nr="324" mi="0" ci="2" mb="0" cb="0"/><line nr="325" mi="1" ci="3" mb="0" cb="0"/><line nr="327" mi="0" ci="8" mb="1" cb="1"/><line nr="328" mi="0" ci="2" mb="1" cb="1"/><line nr="329" mi="0" ci="11" mb="0" cb="0"/><line nr="332" mi="0" ci="2" mb="0" cb="0"/><line nr="335" mi="0" ci="17" mb="0" cb="0"/><line nr="338" mi="0" ci="2" mb="0" cb="0"/><line nr="339" mi="0" ci="5" mb="0" cb="0"/><line nr="340" mi="0" ci="2" mb="0" cb="0"/><line nr="351" mi="0" ci="4" mb="0" cb="0"/><line nr="352" mi="0" ci="4" mb="0" cb="0"/><line nr="353" mi="0" ci="2" mb="0" cb="0"/><line nr="354" mi="0" ci="5" mb="0" cb="0"/><line nr="355" mi="0" ci="2" mb="0" cb="0"/><line nr="356" mi="0" ci="2" mb="0" cb="2"/><line nr="357" mi="0" ci="3" mb="0" cb="0"/><line nr="358" mi="0" ci="3" mb="0" cb="0"/><line nr="359" mi="0" ci="10" mb="2" cb="4"/><line nr="360" mi="0" ci="3" mb="0" cb="0"/><line nr="361" mi="0" ci="5" mb="0" cb="0"/><line nr="362" mi="0" ci="5" mb="0" cb="0"/><line nr="363" mi="0" ci="2" mb="0" cb="2"/><line nr="370" mi="0" ci="5" mb="0" cb="0"/><line nr="371" mi="0" ci="5" mb="0" cb="0"/><line nr="374" mi="0" ci="4" mb="1" cb="3"/><line nr="377" mi="0" ci="13" mb="0" cb="0"/><line nr="379" mi="0" ci="3" mb="0" cb="0"/><line nr="380" mi="0" ci="2" mb="0" cb="0"/><line nr="382" mi="0" ci="5" mb="0" cb="2"/><line nr="383" mi="0" ci="2" mb="0" cb="0"/><line nr="384" mi="0" ci="3" mb="0" cb="0"/><line nr="385" mi="0" ci="6" mb="1" cb="1"/><line nr="386" mi="12" ci="0" mb="0" cb="0"/><line nr="387" mi="4" ci="0" mb="0" cb="0"/><line nr="388" mi="2" ci="0" mb="0" cb="0"/><line nr="390" mi="0" ci="5" mb="0" cb="0"/><line nr="391" mi="0" ci="2" mb="0" cb="0"/><line nr="401" mi="0" ci="4" mb="0" cb="0"/><line nr="402" mi="0" ci="1" mb="0" cb="0"/><line nr="403" mi="0" ci="2" mb="0" cb="0"/><line nr="404" mi="0" ci="6" mb="1" cb="1"/><line nr="405" mi="0" ci="6" mb="1" cb="1"/><line nr="406" mi="0" ci="7" mb="0" cb="0"/><line nr="409" mi="0" ci="4" mb="0" cb="0"/><line nr="410" mi="0" ci="5" mb="0" cb="0"/><line nr="412" mi="0" ci="1" mb="0" cb="0"/><line nr="422" mi="0" ci="3" mb="0" cb="0"/><line nr="423" mi="0" ci="7" mb="0" cb="0"/><line nr="424" mi="0" ci="5" mb="0" cb="2"/><line nr="425" mi="0" ci="2" mb="0" cb="0"/><line nr="427" mi="0" ci="4" mb="0" cb="0"/><line nr="428" mi="0" ci="3" mb="0" cb="2"/><line nr="429" mi="0" ci="6" mb="0" cb="0"/><line nr="431" mi="0" ci="21" mb="0" cb="0"/><line nr="433" mi="0" ci="2" mb="0" cb="0"/><line nr="434" mi="0" ci="5" mb="0" cb="0"/><line nr="435" mi="0" ci="2" mb="0" cb="0"/><line nr="448" mi="0" ci="3" mb="0" cb="0"/><line nr="449" mi="0" ci="7" mb="0" cb="0"/><line nr="450" mi="0" ci="10" mb="0" cb="2"/><line nr="451" mi="0" ci="6" mb="0" cb="2"/><line nr="452" mi="0" ci="2" mb="0" cb="0"/><line nr="454" mi="0" ci="1" mb="0" cb="0"/><line nr="455" mi="0" ci="3" mb="0" cb="0"/><line nr="456" mi="0" ci="5" mb="0" cb="0"/><line nr="457" mi="0" ci="17" mb="0" cb="0"/><line nr="460" mi="0" ci="6" mb="0" cb="0"/><line nr="461" mi="0" ci="5" mb="0" cb="0"/><line nr="462" mi="0" ci="2" mb="0" cb="0"/><line nr="484" mi="0" ci="5" mb="0" cb="0"/><line nr="485" mi="0" ci="3" mb="0" cb="0"/><line nr="486" mi="0" ci="6" mb="0" cb="0"/><line nr="488" mi="0" ci="6" mb="0" cb="2"/><line nr="489" mi="0" ci="2" mb="0" cb="0"/><line nr="491" mi="0" ci="6" mb="0" cb="0"/><line nr="492" mi="0" ci="5" mb="0" cb="0"/><line nr="495" mi="0" ci="6" mb="0" cb="0"/><line nr="505" mi="0" ci="5" mb="0" cb="2"/><line nr="506" mi="0" ci="2" mb="0" cb="0"/><line nr="508" mi="0" ci="7" mb="0" cb="2"/><line nr="509" mi="0" ci="6" mb="0" cb="0"/><line nr="510" mi="0" ci="2" mb="0" cb="0"/><line nr="512" mi="0" ci="12" mb="0" cb="2"/><line nr="513" mi="0" ci="6" mb="0" cb="2"/><line nr="514" mi="0" ci="5" mb="1" cb="1"/><line nr="515" mi="0" ci="4" mb="1" cb="1"/><line nr="516" mi="0" ci="4" mb="0" cb="0"/><line nr="518" mi="0" ci="1" mb="0" cb="0"/><line nr="519" mi="0" ci="3" mb="0" cb="0"/><line nr="545" mi="0" ci="5" mb="0" cb="0"/><line nr="548" mi="0" ci="6" mb="0" cb="0"/><line nr="549" mi="1" ci="0" mb="0" cb="0"/><line nr="551" mi="3" ci="0" mb="0" cb="0"/><line nr="552" mi="0" ci="1" mb="0" cb="0"/><line nr="553" mi="0" ci="4" mb="0" cb="0"/><line nr="559" mi="0" ci="16" mb="0" cb="0"/><line nr="566" mi="0" ci="14" mb="0" cb="0"/><line nr="570" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="961"/><counter type="BRANCH" missed="12" covered="91"/><counter type="LINE" missed="5" covered="203"/><counter type="COMPLEXITY" missed="12" covered="61"/><counter type="METHOD" missed="0" covered="21"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MissingTypeException.java"><line nr="28" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PropertyBuilderClassifier.java"><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="11" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="2"/><line nr="195" mi="0" ci="5" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="7" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="2"/><line nr="206" mi="0" ci="14" mb="0" cb="0"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="2"/><line nr="211" mi="0" ci="14" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="4" mb="0" cb="0"/><line nr="218" mi="0" ci="5" mb="0" cb="0"/><line nr="219" mi="0" ci="7" mb="0" cb="4"/><line nr="220" mi="0" ci="14" mb="0" cb="0"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="0" ci="6" mb="0" cb="0"/><line nr="228" mi="0" ci="5" mb="0" cb="2"/><line nr="229" mi="0" ci="24" mb="0" cb="0"/><line nr="232" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="236" mi="0" ci="2" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="2"/><line nr="238" mi="0" ci="20" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="244" mi="0" ci="4" mb="0" cb="0"/><line nr="246" mi="0" ci="5" mb="0" cb="0"/><line nr="247" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="0" ci="23" mb="0" cb="2"/><line nr="250" mi="0" ci="6" mb="0" cb="0"/><line nr="251" mi="0" ci="2" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="253" mi="0" ci="5" mb="0" cb="0"/><line nr="254" mi="0" ci="12" mb="1" cb="3"/><line nr="255" mi="0" ci="2" mb="0" cb="2"/><line nr="256" mi="0" ci="5" mb="0" cb="0"/><line nr="257" mi="0" ci="1" mb="0" cb="0"/><line nr="258" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="1" mb="0" cb="0"/><line nr="261" mi="0" ci="6" mb="0" cb="2"/><line nr="262" mi="0" ci="6" mb="1" cb="1"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><line nr="264" mi="0" ci="5" mb="1" cb="3"/><line nr="265" mi="0" ci="6" mb="0" cb="0"/><line nr="268" mi="0" ci="5" mb="0" cb="0"/><line nr="269" mi="0" ci="11" mb="1" cb="3"/><line nr="279" mi="0" ci="2" mb="0" cb="2"/><line nr="280" mi="0" ci="2" mb="0" cb="0"/><line nr="281" mi="0" ci="10" mb="0" cb="0"/><line nr="283" mi="0" ci="9" mb="0" cb="0"/><line nr="284" mi="0" ci="17" mb="0" cb="0"/><line nr="285" mi="0" ci="9" mb="0" cb="0"/><line nr="288" mi="0" ci="11" mb="0" cb="0"/><line nr="296" mi="0" ci="3" mb="0" cb="0"/><line nr="299" mi="0" ci="3" mb="0" cb="0"/><line nr="300" mi="0" ci="2" mb="0" cb="0"/><line nr="306" mi="0" ci="10" mb="0" cb="2"/><line nr="307" mi="0" ci="5" mb="0" cb="0"/><line nr="308" mi="0" ci="3" mb="0" cb="2"/><line nr="309" mi="0" ci="9" mb="1" cb="1"/><line nr="310" mi="0" ci="2" mb="1" cb="1"/><line nr="311" mi="0" ci="5" mb="0" cb="0"/><line nr="312" mi="0" ci="2" mb="0" cb="0"/><line nr="317" mi="0" ci="3" mb="0" cb="0"/><line nr="319" mi="0" ci="1" mb="0" cb="0"/><line nr="320" mi="0" ci="6" mb="0" cb="0"/><line nr="321" mi="0" ci="6" mb="0" cb="0"/><line nr="322" mi="0" ci="6" mb="0" cb="0"/><line nr="323" mi="0" ci="1" mb="0" cb="0"/><line nr="329" mi="0" ci="4" mb="0" cb="0"/><line nr="330" mi="0" ci="14" mb="0" cb="2"/><line nr="331" mi="0" ci="4" mb="0" cb="2"/><line nr="332" mi="0" ci="7" mb="0" cb="0"/><line nr="334" mi="0" ci="1" mb="0" cb="0"/><line nr="335" mi="0" ci="2" mb="0" cb="0"/><line nr="340" mi="0" ci="15" mb="0" cb="2"/><line nr="341" mi="0" ci="3" mb="0" cb="0"/><line nr="342" mi="0" ci="8" mb="1" cb="3"/><line nr="343" mi="0" ci="3" mb="0" cb="0"/><line nr="345" mi="0" ci="1" mb="0" cb="0"/><line nr="346" mi="0" ci="2" mb="0" cb="0"/><line nr="350" mi="0" ci="1" mb="0" cb="0"/><line nr="351" mi="0" ci="2" mb="0" cb="0"/><line nr="352" mi="0" ci="4" mb="0" cb="0"/><line nr="353" mi="0" ci="10" mb="0" cb="2"/><line nr="354" mi="0" ci="10" mb="0" cb="2"/><line nr="355" mi="0" ci="7" mb="1" cb="1"/><line nr="356" mi="0" ci="2" mb="0" cb="0"/><line nr="358" mi="1" ci="0" mb="0" cb="0"/><line nr="359" mi="0" ci="1" mb="0" cb="0"/><line nr="360" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="617"/><counter type="BRANCH" missed="8" covered="52"/><counter type="LINE" missed="1" covered="124"/><counter type="COMPLEXITY" missed="8" covered="41"/><counter type="METHOD" missed="0" covered="19"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="BuilderSpec.java"><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="8" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="13" mb="0" cb="2"/><line nr="79" mi="0" ci="4" mb="0" cb="2"/><line nr="80" mi="0" ci="5" mb="0" cb="2"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="2"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="2"/><line nr="87" mi="0" ci="13" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="2"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="10" mb="0" cb="2"/><line nr="141" mi="0" ci="8" mb="0" cb="2"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="8" mb="0" cb="0"/><line nr="146" mi="0" ci="7" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="2"/><line nr="149" mi="0" ci="14" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="2"/><line nr="159" mi="0" ci="6" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="13" mb="0" cb="2"/><line nr="174" mi="0" ci="5" mb="0" cb="2"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="11" mb="0" cb="2"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="0" ci="6" mb="0" cb="0"/><line nr="189" mi="0" ci="8" mb="0" cb="2"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="6" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="2"/><line nr="200" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="4" mb="0" cb="2"/><line nr="205" mi="0" ci="5" mb="0" cb="2"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="208" mi="0" ci="10" mb="0" cb="2"/><line nr="209" mi="0" ci="11" mb="0" cb="0"/><line nr="211" mi="0" ci="8" mb="0" cb="0"/><line nr="213" mi="0" ci="1" mb="0" cb="0"/><line nr="214" mi="0" ci="1" mb="0" cb="0"/><line nr="216" mi="0" ci="4" mb="0" cb="0"/><line nr="217" mi="0" ci="11" mb="0" cb="2"/><line nr="218" mi="0" ci="5" mb="0" cb="0"/><line nr="219" mi="0" ci="6" mb="0" cb="0"/><line nr="220" mi="0" ci="5" mb="0" cb="0"/><line nr="221" mi="0" ci="7" mb="0" cb="0"/><line nr="222" mi="0" ci="4" mb="0" cb="0"/><line nr="224" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="12" mb="0" cb="2"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="0" ci="7" mb="0" cb="0"/><line nr="230" mi="0" ci="12" mb="0" cb="0"/><line nr="231" mi="0" ci="1" mb="0" cb="0"/><line nr="232" mi="0" ci="4" mb="0" cb="0"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="237" mi="0" ci="4" mb="0" cb="0"/><line nr="238" mi="0" ci="11" mb="0" cb="2"/><line nr="239" mi="0" ci="4" mb="0" cb="2"/><line nr="240" mi="0" ci="5" mb="0" cb="2"/><line nr="241" mi="0" ci="3" mb="0" cb="2"/><line nr="242" mi="0" ci="4" mb="0" cb="0"/><line nr="244" mi="0" ci="1" mb="0" cb="0"/><line nr="245" mi="0" ci="4" mb="0" cb="0"/><line nr="246" mi="0" ci="1" mb="0" cb="0"/><line nr="277" mi="0" ci="2" mb="0" cb="0"/><line nr="278" mi="0" ci="4" mb="0" cb="0"/><line nr="279" mi="0" ci="3" mb="0" cb="0"/><line nr="280" mi="0" ci="3" mb="0" cb="0"/><line nr="281" mi="0" ci="1" mb="0" cb="0"/><line nr="284" mi="0" ci="3" mb="0" cb="0"/><line nr="288" mi="0" ci="3" mb="0" cb="0"/><line nr="292" mi="0" ci="3" mb="0" cb="0"/><line nr="313" mi="0" ci="5" mb="0" cb="0"/><line nr="314" mi="0" ci="4" mb="0" cb="0"/><line nr="315" mi="0" ci="5" mb="0" cb="0"/><line nr="316" mi="0" ci="6" mb="0" cb="0"/><line nr="317" mi="0" ci="5" mb="0" cb="0"/><line nr="318" mi="0" ci="4" mb="0" cb="0"/><line nr="319" mi="0" ci="3" mb="1" cb="1"/><line nr="320" mi="5" ci="0" mb="0" cb="0"/><line nr="322" mi="0" ci="3" mb="0" cb="0"/><line nr="323" mi="0" ci="4" mb="0" cb="0"/><line nr="324" mi="0" ci="4" mb="0" cb="0"/><line nr="325" mi="0" ci="7" mb="0" cb="0"/><line nr="326" mi="0" ci="2" mb="0" cb="2"/><line nr="327" mi="0" ci="4" mb="0" cb="0"/><line nr="329" mi="0" ci="4" mb="0" cb="0"/><line nr="330" mi="0" ci="7" mb="0" cb="2"/><line nr="331" mi="0" ci="14" mb="0" cb="0"/><line nr="333" mi="0" ci="1" mb="0" cb="0"/><line nr="336" mi="0" ci="3" mb="0" cb="0"/><line nr="340" mi="0" ci="3" mb="0" cb="0"/><line nr="344" mi="0" ci="3" mb="0" cb="0"/><line nr="348" mi="0" ci="3" mb="0" cb="0"/><line nr="352" mi="0" ci="3" mb="0" cb="2"/><line nr="353" mi="0" ci="3" mb="0" cb="0"/><line nr="356" mi="0" ci="10" mb="0" cb="0"/><line nr="359" mi="0" ci="3" mb="1" cb="1"/><line nr="360" mi="13" ci="0" mb="0" cb="0"/><line nr="363" mi="0" ci="2" mb="0" cb="0"/><line nr="380" mi="0" ci="5" mb="0" cb="2"/><line nr="381" mi="0" ci="17" mb="0" cb="0"/><line nr="384" mi="0" ci="2" mb="0" cb="0"/><line nr="386" mi="0" ci="7" mb="0" cb="0"/><line nr="390" mi="0" ci="4" mb="0" cb="0"/><line nr="391" mi="0" ci="5" mb="0" cb="2"/><line nr="392" mi="0" ci="2" mb="0" cb="0"/><line nr="394" mi="0" ci="7" mb="0" cb="2"/><line nr="395" mi="0" ci="6" mb="0" cb="0"/><line nr="396" mi="0" ci="6" mb="0" cb="0"/><line nr="397" mi="0" ci="6" mb="0" cb="2"/><line nr="398" mi="0" ci="2" mb="0" cb="0"/><line nr="400" mi="0" ci="6" mb="0" cb="0"/><line nr="401" mi="0" ci="6" mb="0" cb="0"/><line nr="402" mi="0" ci="4" mb="0" cb="2"/><line nr="403" mi="0" ci="2" mb="0" cb="0"/><line nr="406" mi="0" ci="2" mb="0" cb="0"/><line nr="411" mi="0" ci="5" mb="0" cb="0"/><line nr="412" mi="0" ci="4" mb="0" cb="0"/><line nr="413" mi="0" ci="2" mb="0" cb="0"/><line nr="414" mi="0" ci="10" mb="0" cb="2"/><line nr="415" mi="0" ci="5" mb="0" cb="2"/><line nr="416" mi="0" ci="4" mb="0" cb="0"/><line nr="418" mi="0" ci="1" mb="0" cb="0"/><line nr="419" mi="0" ci="3" mb="0" cb="0"/><line nr="423" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="743"/><counter type="BRANCH" missed="2" covered="70"/><counter type="LINE" missed="2" covered="161"/><counter type="COMPLEXITY" missed="2" covered="58"/><counter type="METHOD" missed="0" covered="24"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="AbortProcessingException.java"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EclipseHack.java"><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="9" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="10" mb="0" cb="2"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="2" cb="0"/><line nr="85" mi="2" ci="0" mb="2" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="7" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="1" cb="1"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="10" ci="0" mb="2" cb="0"/><line nr="113" mi="4" ci="0" mb="2" cb="0"/><line nr="114" mi="6" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="76" covered="60"/><counter type="BRANCH" missed="9" covered="3"/><counter type="LINE" missed="19" covered="18"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GwtCompatibility.java"><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="10" mb="0" cb="2"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="1" cb="1"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="1" cb="1"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="2" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="19" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="12" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="64" covered="40"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="11" covered="12"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GwtSerialization.java"><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="1" cb="1"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="12" ci="0" mb="2" cb="0"/><line nr="62" mi="8" ci="0" mb="2" cb="0"/><line nr="63" mi="7" ci="0" mb="2" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="1" cb="1"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="10" ci="0" mb="2" cb="0"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="26" ci="0" mb="2" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="10" ci="0" mb="0" cb="0"/><line nr="97" mi="6" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="6" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="4" ci="0" mb="0" cb="0"/><line nr="125" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="136" mi="5" ci="0" mb="2" cb="0"/><line nr="137" mi="14" ci="0" mb="0" cb="0"/><line nr="138" mi="4" ci="0" mb="2" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="10" ci="0" mb="4" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="12" ci="0" mb="0" cb="0"/><line nr="160" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="216" mi="4" ci="0" mb="0" cb="0"/><line nr="220" mi="2" ci="0" mb="0" cb="0"/><line nr="226" mi="2" ci="0" mb="0" cb="0"/><line nr="227" mi="10" ci="0" mb="0" cb="0"/><line nr="228" mi="5" ci="0" mb="0" cb="0"/><line nr="229" mi="3" ci="0" mb="0" cb="0"/><line nr="231" mi="1" ci="0" mb="0" cb="0"/><line nr="232" mi="17" ci="0" mb="0" cb="0"/><line nr="234" mi="1" ci="0" mb="0" cb="0"/><line nr="235" mi="1" ci="0" mb="0" cb="0"/><line nr="237" mi="0" ci="4" mb="0" cb="0"/><line nr="240" mi="4" ci="0" mb="0" cb="0"/><line nr="241" mi="8" ci="0" mb="0" cb="0"/><line nr="242" mi="4" ci="0" mb="0" cb="0"/><line nr="243" mi="14" ci="0" mb="0" cb="0"/><line nr="244" mi="10" ci="0" mb="2" cb="0"/><line nr="245" mi="15" ci="0" mb="0" cb="0"/><line nr="246" mi="1" ci="0" mb="0" cb="0"/><line nr="247" mi="11" ci="0" mb="0" cb="0"/><line nr="251" mi="5" ci="0" mb="0" cb="0"/><line nr="252" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="338" covered="29"/><counter type="BRANCH" missed="22" covered="2"/><counter type="LINE" missed="60" covered="11"/><counter type="COMPLEXITY" missed="26" covered="4"/><counter type="METHOD" missed="14" covered="4"/><counter type="CLASS" missed="2" covered="1"/></sourcefile><sourcefile name="AutoValueBuilderProcessor.java"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="1" cb="1"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="10" mb="0" cb="2"/><line nr="64" mi="0" ci="4" mb="1" cb="1"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="2"/><line nr="77" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="52"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ErrorReporter.java"><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AutoValueProcessor.java"><line nr="97" mi="2" ci="5" mb="1" cb="1"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="8" mb="0" cb="0"/><line nr="138" mi="0" ci="10" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="6" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="2"/><line nr="156" mi="0" ci="6" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="1" cb="1"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="6" mb="0" cb="0"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="7" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="2"/><line nr="184" mi="0" ci="10" mb="0" cb="2"/><line nr="185" mi="0" ci="15" mb="0" cb="0"/><line nr="187" mi="0" ci="1" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="2" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="10" mb="0" cb="2"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="1" mb="0" cb="0"/><line nr="209" mi="0" ci="7" mb="0" cb="0"/><line nr="210" mi="1" ci="0" mb="0" cb="0"/><line nr="211" mi="3" ci="0" mb="0" cb="0"/><line nr="212" mi="12" ci="0" mb="0" cb="0"/><line nr="213" mi="2" ci="0" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="1" mb="0" cb="0"/><line nr="216" mi="0" ci="2" mb="0" cb="0"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="4" mb="0" cb="2"/><line nr="222" mi="0" ci="4" mb="0" cb="0"/><line nr="223" mi="0" ci="13" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="7" mb="0" cb="2"/><line nr="227" mi="0" ci="13" mb="0" cb="0"/><line nr="231" mi="0" ci="14" mb="0" cb="0"/><line nr="256" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="0" cb="0"/><line nr="259" mi="0" ci="3" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><line nr="264" mi="0" ci="3" mb="0" cb="0"/><line nr="265" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="0" ci="10" mb="0" cb="4"/><line nr="267" mi="0" ci="1" mb="0" cb="0"/><line nr="270" mi="0" ci="6" mb="0" cb="0"/><line nr="271" mi="0" ci="7" mb="0" cb="0"/><line nr="282" mi="0" ci="3" mb="0" cb="0"/><line nr="292" mi="0" ci="3" mb="0" cb="0"/><line nr="300" mi="0" ci="5" mb="0" cb="0"/><line nr="304" mi="5" ci="0" mb="0" cb="0"/><line nr="308" mi="0" ci="4" mb="0" cb="0"/><line nr="312" mi="0" ci="3" mb="0" cb="0"/><line nr="316" mi="0" ci="5" mb="0" cb="0"/><line nr="320" mi="0" ci="3" mb="0" cb="0"/><line nr="328" mi="0" ci="3" mb="0" cb="0"/><line nr="340" mi="0" ci="11" mb="0" cb="2"/><line nr="341" mi="0" ci="8" mb="0" cb="4"/><line nr="342" mi="0" ci="9" mb="0" cb="0"/><line nr="344" mi="0" ci="1" mb="0" cb="0"/><line nr="345" mi="0" ci="2" mb="0" cb="0"/><line nr="349" mi="0" ci="3" mb="0" cb="0"/><line nr="353" mi="0" ci="4" mb="0" cb="0"/><line nr="358" mi="0" ci="14" mb="1" cb="3"/><line nr="363" mi="0" ci="4" mb="0" cb="0"/><line nr="378" mi="0" ci="2" mb="0" cb="0"/><line nr="379" mi="0" ci="4" mb="0" cb="0"/><line nr="380" mi="0" ci="5" mb="0" cb="0"/><line nr="381" mi="0" ci="1" mb="0" cb="0"/><line nr="384" mi="0" ci="3" mb="0" cb="0"/><line nr="388" mi="0" ci="3" mb="0" cb="0"/><line nr="393" mi="0" ci="3" mb="0" cb="0"/><line nr="394" mi="0" ci="4" mb="0" cb="2"/><line nr="395" mi="0" ci="2" mb="0" cb="0"/><line nr="396" mi="0" ci="4" mb="1" cb="1"/><line nr="397" mi="2" ci="0" mb="0" cb="0"/><line nr="399" mi="0" ci="2" mb="0" cb="0"/><line nr="404" mi="0" ci="13" mb="1" cb="3"/><line nr="407" mi="0" ci="20" mb="0" cb="0"/><line nr="408" mi="0" ci="24" mb="0" cb="0"/><line nr="412" mi="0" ci="4" mb="0" cb="0"/><line nr="413" mi="0" ci="4" mb="0" cb="3"/><line nr="415" mi="0" ci="4" mb="0" cb="2"/><line nr="416" mi="0" ci="2" mb="0" cb="0"/><line nr="417" mi="0" ci="4" mb="0" cb="2"/><line nr="418" mi="0" ci="2" mb="0" cb="0"/><line nr="422" mi="0" ci="5" mb="0" cb="2"/><line nr="423" mi="0" ci="9" mb="1" cb="1"/><line nr="424" mi="0" ci="2" mb="0" cb="0"/><line nr="430" mi="0" ci="2" mb="0" cb="0"/><line nr="434" mi="0" ci="5" mb="0" cb="0"/><line nr="435" mi="0" ci="2" mb="1" cb="1"/><line nr="438" mi="5" ci="0" mb="0" cb="0"/><line nr="441" mi="0" ci="4" mb="0" cb="2"/><line nr="442" mi="1" ci="8" mb="0" cb="0"/><line nr="443" mi="0" ci="6" mb="0" cb="0"/><line nr="445" mi="0" ci="4" mb="0" cb="2"/><line nr="446" mi="5" ci="0" mb="0" cb="0"/><line nr="448" mi="0" ci="4" mb="0" cb="2"/><line nr="449" mi="5" ci="0" mb="0" cb="0"/><line nr="452" mi="0" ci="3" mb="0" cb="0"/><line nr="471" mi="0" ci="5" mb="0" cb="0"/><line nr="472" mi="0" ci="4" mb="0" cb="0"/><line nr="473" mi="0" ci="4" mb="0" cb="0"/><line nr="475" mi="0" ci="9" mb="0" cb="0"/><line nr="476" mi="0" ci="3" mb="0" cb="0"/><line nr="478" mi="0" ci="3" mb="0" cb="2"/><line nr="479" mi="0" ci="9" mb="0" cb="0"/><line nr="481" mi="0" ci="2" mb="0" cb="0"/><line nr="484" mi="0" ci="3" mb="0" cb="0"/><line nr="485" mi="0" ci="3" mb="0" cb="0"/><line nr="486" mi="0" ci="4" mb="0" cb="0"/><line nr="488" mi="0" ci="9" mb="0" cb="0"/><line nr="490" mi="0" ci="5" mb="0" cb="0"/><line nr="491" mi="0" ci="8" mb="0" cb="0"/><line nr="494" mi="0" ci="3" mb="0" cb="2"/><line nr="495" mi="0" ci="2" mb="0" cb="0"/><line nr="496" mi="0" ci="4" mb="0" cb="0"/><line nr="497" mi="0" ci="4" mb="0" cb="0"/><line nr="498" mi="0" ci="3" mb="0" cb="0"/><line nr="499" mi="0" ci="3" mb="0" cb="0"/><line nr="500" mi="0" ci="4" mb="0" cb="0"/><line nr="501" mi="0" ci="9" mb="0" cb="0"/><line nr="504" mi="0" ci="7" mb="0" cb="2"/><line nr="505" mi="0" ci="7" mb="0" cb="0"/><line nr="507" mi="0" ci="5" mb="0" cb="0"/><line nr="508" mi="0" ci="4" mb="0" cb="0"/><line nr="509" mi="0" ci="4" mb="0" cb="0"/><line nr="510" mi="0" ci="4" mb="0" cb="0"/><line nr="511" mi="0" ci="5" mb="0" cb="0"/><line nr="512" mi="0" ci="4" mb="0" cb="0"/><line nr="513" mi="0" ci="5" mb="0" cb="0"/><line nr="514" mi="0" ci="3" mb="0" cb="0"/><line nr="515" mi="0" ci="6" mb="0" cb="0"/><line nr="516" mi="0" ci="2" mb="0" cb="0"/><line nr="519" mi="0" ci="4" mb="0" cb="2"/><line nr="520" mi="0" ci="6" mb="0" cb="0"/><line nr="521" mi="0" ci="2" mb="0" cb="0"/><line nr="522" mi="0" ci="3" mb="0" cb="0"/><line nr="526" mi="0" ci="1" mb="0" cb="0"/><line nr="527" mi="0" ci="1" mb="0" cb="0"/><line nr="529" mi="0" ci="8" mb="0" cb="0"/><line nr="530" mi="0" ci="1" mb="0" cb="0"/><line nr="531" mi="0" ci="3" mb="0" cb="0"/><line nr="534" mi="0" ci="5" mb="0" cb="0"/><line nr="535" mi="0" ci="4" mb="0" cb="0"/><line nr="537" mi="0" ci="6" mb="0" cb="0"/><line nr="538" mi="0" ci="5" mb="0" cb="0"/><line nr="539" mi="0" ci="4" mb="0" cb="0"/><line nr="540" mi="0" ci="8" mb="0" cb="2"/><line nr="542" mi="0" ci="3" mb="0" cb="0"/><line nr="543" mi="0" ci="3" mb="0" cb="0"/><line nr="544" mi="0" ci="5" mb="0" cb="0"/><line nr="545" mi="0" ci="8" mb="0" cb="0"/><line nr="546" mi="0" ci="3" mb="0" cb="0"/><line nr="547" mi="0" ci="1" mb="0" cb="0"/><line nr="555" mi="0" ci="2" mb="0" cb="0"/><line nr="556" mi="0" ci="5" mb="0" cb="0"/><line nr="557" mi="0" ci="11" mb="0" cb="2"/><line nr="558" mi="0" ci="3" mb="0" cb="0"/><line nr="561" mi="0" ci="7" mb="0" cb="2"/><line nr="562" mi="0" ci="5" mb="0" cb="2"/><line nr="563" mi="0" ci="2" mb="0" cb="2"/><line nr="564" mi="0" ci="6" mb="0" cb="0"/><line nr="566" mi="0" ci="1" mb="0" cb="0"/><line nr="568" mi="0" ci="3" mb="0" cb="0"/><line nr="572" mi="0" ci="4" mb="0" cb="0"/><line nr="573" mi="0" ci="3" mb="0" cb="0"/><line nr="574" mi="0" ci="5" mb="1" cb="3"/><line nr="576" mi="0" ci="2" mb="0" cb="0"/><line nr="589" mi="0" ci="10" mb="1" cb="1"/><line nr="590" mi="0" ci="9" mb="0" cb="2"/><line nr="592" mi="0" ci="6" mb="0" cb="0"/><line nr="594" mi="2" ci="0" mb="0" cb="0"/><line nr="603" mi="0" ci="7" mb="0" cb="0"/><line nr="627" mi="0" ci="5" mb="0" cb="0"/><line nr="628" mi="0" ci="2" mb="1" cb="1"/><line nr="630" mi="2" ci="0" mb="0" cb="0"/><line nr="632" mi="0" ci="3" mb="0" cb="0"/><line nr="634" mi="0" ci="11" mb="0" cb="2"/><line nr="635" mi="0" ci="7" mb="0" cb="2"/><line nr="636" mi="0" ci="1" mb="0" cb="0"/><line nr="639" mi="0" ci="12" mb="0" cb="2"/><line nr="640" mi="0" ci="7" mb="1" cb="1"/><line nr="641" mi="0" ci="2" mb="0" cb="0"/><line nr="644" mi="0" ci="1" mb="0" cb="0"/><line nr="645" mi="0" ci="5" mb="0" cb="0"/><line nr="646" mi="0" ci="10" mb="0" cb="2"/><line nr="647" mi="0" ci="1" mb="0" cb="0"/><line nr="648" mi="0" ci="4" mb="0" cb="0"/><line nr="649" mi="0" ci="1" mb="0" cb="0"/><line nr="650" mi="0" ci="2" mb="0" cb="0"/><line nr="651" mi="0" ci="4" mb="0" cb="0"/><line nr="652" mi="0" ci="1" mb="0" cb="0"/><line nr="653" mi="0" ci="3" mb="0" cb="0"/><line nr="655" mi="1" ci="0" mb="0" cb="0"/><line nr="656" mi="0" ci="1" mb="0" cb="0"/><line nr="657" mi="0" ci="2" mb="0" cb="0"/><line nr="661" mi="0" ci="5" mb="0" cb="0"/><line nr="662" mi="0" ci="8" mb="0" cb="0"/><line nr="663" mi="3" ci="1" mb="0" cb="0"/><line nr="664" mi="0" ci="3" mb="0" cb="0"/><line nr="684" mi="0" ci="2" mb="0" cb="0"/><line nr="685" mi="0" ci="10" mb="0" cb="2"/><line nr="686" mi="0" ci="7" mb="0" cb="0"/><line nr="687" mi="0" ci="3" mb="0" cb="0"/><line nr="688" mi="0" ci="5" mb="0" cb="0"/><line nr="689" mi="0" ci="3" mb="0" cb="0"/><line nr="690" mi="0" ci="6" mb="0" cb="2"/><line nr="691" mi="0" ci="7" mb="0" cb="0"/><line nr="692" mi="0" ci="2" mb="0" cb="2"/><line nr="693" mi="0" ci="3" mb="0" cb="0"/><line nr="694" mi="0" ci="5" mb="0" cb="0"/><line nr="695" mi="0" ci="1" mb="0" cb="0"/><line nr="697" mi="0" ci="1" mb="0" cb="0"/><line nr="698" mi="0" ci="2" mb="0" cb="0"/><line nr="703" mi="0" ci="2" mb="0" cb="0"/><line nr="704" mi="0" ci="2" mb="0" cb="0"/><line nr="705" mi="0" ci="11" mb="0" cb="2"/><line nr="706" mi="0" ci="4" mb="0" cb="2"/><line nr="707" mi="0" ci="4" mb="0" cb="2"/><line nr="708" mi="0" ci="5" mb="0" cb="0"/><line nr="710" mi="0" ci="4" mb="0" cb="0"/><line nr="713" mi="0" ci="1" mb="0" cb="0"/><line nr="714" mi="0" ci="3" mb="0" cb="3"/><line nr="716" mi="0" ci="1" mb="0" cb="0"/><line nr="718" mi="0" ci="6" mb="0" cb="0"/><line nr="719" mi="0" ci="1" mb="0" cb="0"/><line nr="721" mi="0" ci="9" mb="0" cb="0"/><line nr="723" mi="0" ci="11" mb="0" cb="0"/><line nr="727" mi="0" ci="3" mb="0" cb="0"/><line nr="736" mi="0" ci="2" mb="0" cb="0"/><line nr="737" mi="0" ci="10" mb="0" cb="2"/><line nr="738" mi="0" ci="2" mb="0" cb="0"/><line nr="739" mi="0" ci="12" mb="0" cb="2"/><line nr="740" mi="0" ci="5" mb="0" cb="0"/><line nr="741" mi="0" ci="2" mb="0" cb="2"/><line nr="742" mi="0" ci="11" mb="0" cb="0"/><line nr="743" mi="0" ci="8" mb="0" cb="0"/><line nr="747" mi="0" ci="4" mb="0" cb="0"/><line nr="749" mi="0" ci="1" mb="0" cb="0"/><line nr="750" mi="0" ci="12" mb="0" cb="2"/><line nr="751" mi="0" ci="4" mb="0" cb="2"/><line nr="752" mi="0" ci="11" mb="0" cb="0"/><line nr="753" mi="0" ci="8" mb="0" cb="0"/><line nr="758" mi="0" ci="4" mb="0" cb="0"/><line nr="760" mi="0" ci="1" mb="0" cb="0"/><line nr="761" mi="0" ci="12" mb="0" cb="2"/><line nr="762" mi="0" ci="10" mb="0" cb="0"/><line nr="763" mi="0" ci="6" mb="0" cb="0"/><line nr="765" mi="0" ci="1" mb="0" cb="0"/><line nr="766" mi="0" ci="4" mb="0" cb="0"/><line nr="767" mi="0" ci="1" mb="0" cb="0"/><line nr="768" mi="0" ci="3" mb="0" cb="0"/><line nr="777" mi="0" ci="2" mb="0" cb="0"/><line nr="778" mi="0" ci="10" mb="0" cb="2"/><line nr="779" mi="0" ci="4" mb="0" cb="2"/><line nr="780" mi="0" ci="8" mb="0" cb="0"/><line nr="781" mi="0" ci="5" mb="0" cb="2"/><line nr="782" mi="0" ci="3" mb="1" cb="1"/><line nr="787" mi="0" ci="2" mb="0" cb="0"/><line nr="788" mi="0" ci="2" mb="0" cb="2"/><line nr="789" mi="0" ci="9" mb="0" cb="0"/><line nr="791" mi="0" ci="5" mb="0" cb="0"/><line nr="793" mi="0" ci="1" mb="0" cb="0"/><line nr="794" mi="0" ci="2" mb="0" cb="2"/><line nr="795" mi="0" ci="4" mb="0" cb="0"/><line nr="797" mi="0" ci="1" mb="0" cb="0"/><line nr="800" mi="0" ci="4" mb="0" cb="0"/><line nr="809" mi="0" ci="4" mb="0" cb="0"/><line nr="810" mi="0" ci="4" mb="0" cb="0"/><line nr="811" mi="0" ci="6" mb="0" cb="0"/><line nr="812" mi="0" ci="3" mb="0" cb="2"/><line nr="813" mi="0" ci="7" mb="0" cb="0"/><line nr="815" mi="0" ci="2" mb="0" cb="0"/><line nr="816" mi="0" ci="4" mb="0" cb="0"/><line nr="817" mi="0" ci="2" mb="0" cb="2"/><line nr="818" mi="0" ci="5" mb="0" cb="0"/><line nr="820" mi="0" ci="4" mb="0" cb="0"/><line nr="821" mi="0" ci="3" mb="0" cb="2"/><line nr="824" mi="0" ci="4" mb="0" cb="0"/><line nr="827" mi="0" ci="2" mb="0" cb="0"/><line nr="828" mi="0" ci="8" mb="0" cb="0"/><line nr="829" mi="0" ci="2" mb="0" cb="0"/><line nr="830" mi="0" ci="2" mb="0" cb="0"/><line nr="831" mi="0" ci="7" mb="0" cb="0"/><line nr="832" mi="0" ci="3" mb="0" cb="0"/><line nr="833" mi="0" ci="9" mb="0" cb="0"/><line nr="834" mi="0" ci="4" mb="0" cb="0"/><line nr="835" mi="0" ci="7" mb="0" cb="2"/><line nr="837" mi="0" ci="3" mb="0" cb="0"/><line nr="838" mi="0" ci="5" mb="0" cb="0"/><line nr="839" mi="0" ci="2" mb="0" cb="0"/><line nr="840" mi="0" ci="3" mb="0" cb="0"/><line nr="841" mi="0" ci="3" mb="0" cb="0"/><line nr="842" mi="0" ci="3" mb="0" cb="0"/><line nr="843" mi="0" ci="4" mb="0" cb="0"/><line nr="844" mi="0" ci="3" mb="0" cb="0"/><line nr="845" mi="0" ci="3" mb="0" cb="0"/><line nr="846" mi="0" ci="2" mb="0" cb="0"/><line nr="847" mi="0" ci="10" mb="0" cb="2"/><line nr="848" mi="0" ci="5" mb="0" cb="0"/><line nr="849" mi="0" ci="4" mb="0" cb="0"/><line nr="850" mi="0" ci="5" mb="0" cb="0"/><line nr="851" mi="0" ci="5" mb="0" cb="0"/><line nr="852" mi="0" ci="5" mb="0" cb="0"/><line nr="853" mi="0" ci="2" mb="0" cb="0"/><line nr="854" mi="0" ci="10" mb="0" cb="0"/><line nr="857" mi="0" ci="4" mb="0" cb="0"/><line nr="858" mi="0" ci="7" mb="0" cb="4"/><line nr="859" mi="0" ci="5" mb="0" cb="0"/><line nr="861" mi="0" ci="1" mb="0" cb="0"/><line nr="862" mi="0" ci="4" mb="0" cb="0"/><line nr="863" mi="0" ci="5" mb="0" cb="0"/><line nr="864" mi="0" ci="5" mb="0" cb="0"/><line nr="865" mi="0" ci="4" mb="0" cb="0"/><line nr="866" mi="0" ci="4" mb="0" cb="0"/><line nr="868" mi="0" ci="3" mb="0" cb="2"/><line nr="869" mi="0" ci="7" mb="0" cb="0"/><line nr="871" mi="0" ci="2" mb="0" cb="0"/><line nr="880" mi="0" ci="3" mb="0" cb="0"/><line nr="881" mi="0" ci="3" mb="0" cb="0"/><line nr="882" mi="0" ci="2" mb="0" cb="0"/><line nr="883" mi="0" ci="2" mb="0" cb="0"/><line nr="884" mi="0" ci="2" mb="0" cb="0"/><line nr="888" mi="0" ci="5" mb="0" cb="0"/><line nr="889" mi="0" ci="6" mb="0" cb="0"/><line nr="890" mi="0" ci="2" mb="0" cb="0"/><line nr="891" mi="0" ci="5" mb="0" cb="0"/><line nr="892" mi="0" ci="4" mb="0" cb="0"/><line nr="893" mi="0" ci="4" mb="0" cb="0"/><line nr="894" mi="0" ci="9" mb="0" cb="0"/><line nr="896" mi="0" ci="3" mb="0" cb="0"/><line nr="901" mi="0" ci="2" mb="0" cb="0"/><line nr="902" mi="0" ci="10" mb="0" cb="2"/><line nr="903" mi="0" ci="10" mb="0" cb="0"/><line nr="905" mi="0" ci="1" mb="0" cb="0"/><line nr="906" mi="0" ci="1" mb="0" cb="0"/><line nr="907" mi="0" ci="1" mb="0" cb="0"/><line nr="908" mi="0" ci="3" mb="0" cb="0"/><line nr="913" mi="0" ci="2" mb="0" cb="0"/><line nr="914" mi="0" ci="3" mb="0" cb="0"/><line nr="915" mi="0" ci="10" mb="0" cb="2"/><line nr="916" mi="0" ci="4" mb="0" cb="0"/><line nr="917" mi="0" ci="8" mb="0" cb="2"/><line nr="918" mi="0" ci="5" mb="0" cb="0"/><line nr="919" mi="0" ci="2" mb="0" cb="2"/><line nr="920" mi="0" ci="12" mb="0" cb="0"/><line nr="922" mi="0" ci="1" mb="0" cb="0"/><line nr="923" mi="0" ci="3" mb="0" cb="0"/><line nr="927" mi="0" ci="10" mb="0" cb="2"/><line nr="931" mi="0" ci="2" mb="0" cb="0"/><line nr="932" mi="0" ci="10" mb="0" cb="2"/><line nr="933" mi="0" ci="4" mb="0" cb="0"/><line nr="935" mi="0" ci="12" mb="1" cb="3"/><line nr="936" mi="0" ci="9" mb="1" cb="3"/><line nr="937" mi="0" ci="8" mb="1" cb="1"/><line nr="938" mi="0" ci="4" mb="0" cb="4"/><line nr="939" mi="0" ci="4" mb="0" cb="0"/><line nr="941" mi="0" ci="1" mb="0" cb="0"/><line nr="942" mi="0" ci="3" mb="0" cb="0"/><line nr="953" mi="0" ci="4" mb="0" cb="0"/><line nr="954" mi="0" ci="10" mb="0" cb="2"/><line nr="955" mi="0" ci="4" mb="0" cb="0"/><line nr="956" mi="0" ci="11" mb="0" cb="2"/><line nr="957" mi="0" ci="3" mb="0" cb="0"/><line nr="958" mi="0" ci="4" mb="0" cb="2"/><line nr="959" mi="0" ci="1" mb="0" cb="0"/><line nr="961" mi="0" ci="3" mb="0" cb="2"/><line nr="962" mi="0" ci="3" mb="0" cb="0"/><line nr="963" mi="0" ci="1" mb="0" cb="0"/><line nr="965" mi="0" ci="5" mb="0" cb="2"/><line nr="966" mi="0" ci="1" mb="0" cb="0"/><line nr="968" mi="0" ci="5" mb="0" cb="0"/><line nr="969" mi="0" ci="1" mb="0" cb="0"/><line nr="970" mi="0" ci="12" mb="0" cb="2"/><line nr="971" mi="0" ci="5" mb="0" cb="0"/><line nr="972" mi="0" ci="1" mb="0" cb="0"/><line nr="973" mi="0" ci="1" mb="0" cb="0"/><line nr="974" mi="0" ci="2" mb="0" cb="0"/><line nr="989" mi="0" ci="4" mb="0" cb="2"/><line nr="990" mi="0" ci="5" mb="0" cb="0"/><line nr="992" mi="4" ci="6" mb="2" cb="2"/><line nr="993" mi="0" ci="4" mb="0" cb="0"/><line nr="995" mi="0" ci="3" mb="0" cb="0"/><line nr="999" mi="0" ci="4" mb="0" cb="0"/><line nr="1000" mi="0" ci="6" mb="1" cb="3"/><line nr="1001" mi="0" ci="5" mb="0" cb="2"/><line nr="1002" mi="5" ci="0" mb="0" cb="0"/><line nr="1004" mi="0" ci="5" mb="0" cb="2"/><line nr="1005" mi="5" ci="0" mb="0" cb="0"/><line nr="1011" mi="0" ci="1" mb="0" cb="0"/><line nr="1016" mi="0" ci="11" mb="0" cb="2"/><line nr="1017" mi="0" ci="5" mb="1" cb="1"/><line nr="1018" mi="10" ci="0" mb="0" cb="0"/><line nr="1020" mi="0" ci="1" mb="0" cb="0"/><line nr="1021" mi="0" ci="1" mb="0" cb="0"/><line nr="1024" mi="4" ci="0" mb="0" cb="0"/><line nr="1025" mi="9" ci="0" mb="0" cb="0"/><line nr="1026" mi="4" ci="0" mb="2" cb="0"/><line nr="1027" mi="2" ci="0" mb="0" cb="0"/><line nr="1033" mi="0" ci="4" mb="0" cb="0"/><line nr="1034" mi="0" ci="5" mb="0" cb="0"/><line nr="1035" mi="0" ci="3" mb="0" cb="0"/><line nr="1039" mi="0" ci="10" mb="0" cb="0"/><line nr="1052" mi="0" ci="4" mb="0" cb="0"/><line nr="1053" mi="0" ci="4" mb="0" cb="0"/><line nr="1054" mi="0" ci="4" mb="0" cb="0"/><line nr="1055" mi="0" ci="10" mb="0" cb="2"/><line nr="1056" mi="0" ci="3" mb="0" cb="0"/><line nr="1057" mi="0" ci="6" mb="0" cb="2"/><line nr="1058" mi="0" ci="8" mb="0" cb="2"/><line nr="1059" mi="0" ci="5" mb="0" cb="4"/><line nr="1061" mi="0" ci="4" mb="0" cb="0"/><line nr="1062" mi="0" ci="1" mb="0" cb="0"/><line nr="1064" mi="0" ci="4" mb="0" cb="0"/><line nr="1065" mi="0" ci="1" mb="0" cb="0"/><line nr="1067" mi="0" ci="4" mb="0" cb="0"/><line nr="1068" mi="0" ci="1" mb="0" cb="0"/><line nr="1072" mi="0" ci="1" mb="0" cb="0"/><line nr="1073" mi="0" ci="1" mb="0" cb="0"/><line nr="1077" mi="0" ci="2" mb="0" cb="0"/><line nr="1078" mi="0" ci="2" mb="0" cb="0"/><line nr="1079" mi="0" ci="10" mb="0" cb="2"/><line nr="1080" mi="0" ci="5" mb="0" cb="2"/><line nr="1081" mi="0" ci="8" mb="0" cb="2"/><line nr="1082" mi="0" ci="7" mb="1" cb="3"/><line nr="1091" mi="0" ci="4" mb="0" cb="0"/><line nr="1094" mi="0" ci="1" mb="0" cb="0"/><line nr="1095" mi="0" ci="3" mb="0" cb="0"/><line nr="1100" mi="0" ci="2" mb="0" cb="0"/><line nr="1101" mi="0" ci="10" mb="0" cb="2"/><line nr="1102" mi="0" ci="5" mb="0" cb="2"/><line nr="1103" mi="0" ci="5" mb="0" cb="2"/><line nr="1104" mi="0" ci="3" mb="1" cb="1"/><line nr="1105" mi="0" ci="4" mb="0" cb="0"/><line nr="1107" mi="0" ci="1" mb="0" cb="0"/><line nr="1108" mi="0" ci="3" mb="0" cb="0"/><line nr="1112" mi="0" ci="3" mb="0" cb="0"/><line nr="1113" mi="0" ci="4" mb="0" cb="2"/><line nr="1114" mi="0" ci="4" mb="0" cb="0"/><line nr="1115" mi="0" ci="4" mb="0" cb="2"/><line nr="1116" mi="0" ci="4" mb="0" cb="0"/><line nr="1117" mi="0" ci="2" mb="0" cb="0"/><line nr="1119" mi="0" ci="5" mb="0" cb="0"/><line nr="1121" mi="0" ci="2" mb="0" cb="0"/><line nr="1124" mi="0" ci="2" mb="0" cb="0"/><line nr="1135" mi="0" ci="12" mb="0" cb="0"/><line nr="1140" mi="0" ci="2" mb="0" cb="0"/><line nr="1141" mi="0" ci="2" mb="0" cb="0"/><line nr="1142" mi="0" ci="2" mb="0" cb="0"/><line nr="1143" mi="0" ci="3" mb="0" cb="2"/><line nr="1144" mi="0" ci="6" mb="0" cb="0"/><line nr="1145" mi="0" ci="10" mb="0" cb="0"/><line nr="1147" mi="0" ci="2" mb="0" cb="2"/><line nr="1155" mi="0" ci="2" mb="0" cb="0"/><line nr="1161" mi="0" ci="5" mb="0" cb="0"/><line nr="1162" mi="0" ci="2" mb="0" cb="2"/><line nr="1163" mi="0" ci="6" mb="0" cb="0"/><line nr="1165" mi="0" ci="11" mb="0" cb="0"/><line nr="1166" mi="0" ci="8" mb="0" cb="0"/><line nr="1169" mi="0" ci="1" mb="0" cb="0"/><line nr="1173" mi="0" ci="2" mb="0" cb="0"/><line nr="1174" mi="0" ci="10" mb="0" cb="0"/><line nr="1175" mi="0" ci="5" mb="0" cb="0"/><line nr="1176" mi="0" ci="3" mb="0" cb="0"/><line nr="1178" mi="1" ci="0" mb="0" cb="0"/><line nr="1185" mi="17" ci="0" mb="0" cb="0"/><line nr="1187" mi="0" ci="1" mb="0" cb="0"/><line nr="1188" mi="0" ci="1" mb="0" cb="0"/><line nr="1192" mi="0" ci="3" mb="0" cb="0"/><line nr="1193" mi="0" ci="4" mb="0" cb="2"/><line nr="1194" mi="0" ci="2" mb="0" cb="0"/><line nr="1196" mi="0" ci="6" mb="0" cb="0"/><line nr="1197" mi="0" ci="4" mb="0" cb="2"/><line nr="1198" mi="0" ci="2" mb="0" cb="0"/><line nr="1200" mi="0" ci="2" mb="0" cb="0"/><line nr="1201" mi="0" ci="1" mb="0" cb="0"/><line nr="1205" mi="0" ci="9" mb="0" cb="0"/><line nr="1211" mi="0" ci="4" mb="0" cb="0"/><line nr="1212" mi="0" ci="7" mb="0" cb="2"/><line nr="1213" mi="0" ci="4" mb="0" cb="0"/><line nr="1214" mi="0" ci="10" mb="1" cb="1"/><line nr="1215" mi="0" ci="5" mb="1" cb="1"/><line nr="1216" mi="0" ci="3" mb="0" cb="0"/><line nr="1217" mi="0" ci="16" mb="0" cb="2"/><line nr="1218" mi="0" ci="6" mb="1" cb="3"/><line nr="1220" mi="9" ci="0" mb="0" cb="0"/><line nr="1222" mi="0" ci="5" mb="0" cb="0"/><line nr="1224" mi="0" ci="1" mb="0" cb="0"/><line nr="1227" mi="1" ci="0" mb="0" cb="0"/><line nr="1229" mi="0" ci="2" mb="0" cb="0"/><line nr="1233" mi="0" ci="8" mb="0" cb="0"/><line nr="1240" mi="0" ci="3" mb="0" cb="0"/><line nr="1241" mi="0" ci="3" mb="0" cb="2"/><line nr="1242" mi="0" ci="2" mb="0" cb="0"/><line nr="1244" mi="0" ci="13" mb="0" cb="0"/><line nr="1249" mi="0" ci="4" mb="0" cb="2"/><line nr="1250" mi="0" ci="2" mb="0" cb="0"/><line nr="1252" mi="0" ci="5" mb="0" cb="0"/><line nr="1257" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="122" covered="2305"/><counter type="BRANCH" missed="26" covered="240"/><counter type="LINE" missed="23" covered="512"/><counter type="COMPLEXITY" missed="28" covered="189"/><counter type="METHOD" missed="3" covered="78"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="AutoAnnotationProcessor.java"><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="2"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="7" mb="1" cb="1"/><line nr="112" mi="0" ci="2" mb="0" cb="2"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="7" mb="1" cb="3"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="10" mb="0" cb="2"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="1" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="10" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="2"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="7" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="9" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="7" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="6" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="175" mi="0" ci="7" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="5" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="12" mb="0" cb="2"/><line nr="184" mi="0" ci="12" mb="0" cb="0"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="1" cb="1"/><line nr="197" mi="2" ci="0" mb="0" cb="0"/><line nr="199" mi="0" ci="5" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="0" ci="7" mb="1" cb="3"/><line nr="212" mi="0" ci="5" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="1" cb="1"/><line nr="215" mi="3" ci="0" mb="0" cb="0"/><line nr="216" mi="3" ci="0" mb="0" cb="0"/><line nr="218" mi="0" ci="2" mb="0" cb="0"/><line nr="224" mi="2" ci="0" mb="0" cb="0"/><line nr="225" mi="10" ci="0" mb="2" cb="0"/><line nr="226" mi="3" ci="0" mb="0" cb="0"/><line nr="227" mi="3" ci="0" mb="2" cb="0"/><line nr="228" mi="2" ci="0" mb="0" cb="0"/><line nr="230" mi="9" ci="0" mb="0" cb="0"/><line nr="231" mi="1" ci="0" mb="0" cb="0"/><line nr="232" mi="4" ci="0" mb="0" cb="0"/><line nr="241" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="0" ci="11" mb="0" cb="2"/><line nr="243" mi="0" ci="4" mb="0" cb="2"/><line nr="244" mi="0" ci="5" mb="0" cb="0"/><line nr="245" mi="0" ci="4" mb="0" cb="0"/><line nr="246" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="0" ci="3" mb="0" cb="2"/><line nr="248" mi="0" ci="14" mb="0" cb="0"/><line nr="251" mi="0" ci="1" mb="0" cb="0"/><line nr="252" mi="0" ci="3" mb="0" cb="0"/><line nr="256" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="0" ci="4" mb="0" cb="0"/><line nr="258" mi="0" ci="10" mb="0" cb="2"/><line nr="259" mi="0" ci="3" mb="0" cb="0"/><line nr="260" mi="0" ci="5" mb="0" cb="0"/><line nr="261" mi="0" ci="1" mb="0" cb="0"/><line nr="262" mi="0" ci="4" mb="0" cb="2"/><line nr="263" mi="0" ci="2" mb="0" cb="0"/><line nr="264" mi="0" ci="6" mb="0" cb="0"/><line nr="266" mi="0" ci="1" mb="0" cb="0"/><line nr="267" mi="0" ci="2" mb="0" cb="0"/><line nr="271" mi="0" ci="4" mb="0" cb="0"/><line nr="272" mi="0" ci="4" mb="0" cb="0"/><line nr="273" mi="0" ci="4" mb="1" cb="1"/><line nr="274" mi="4" ci="0" mb="0" cb="0"/><line nr="275" mi="13" ci="0" mb="0" cb="0"/><line nr="277" mi="0" ci="14" mb="0" cb="0"/><line nr="281" mi="0" ci="3" mb="0" cb="0"/><line nr="282" mi="0" ci="4" mb="1" cb="1"/><line nr="283" mi="0" ci="6" mb="0" cb="0"/><line nr="284" mi="0" ci="4" mb="0" cb="2"/><line nr="285" mi="0" ci="3" mb="0" cb="0"/><line nr="288" mi="0" ci="12" mb="0" cb="0"/><line nr="293" mi="0" ci="2" mb="0" cb="0"/><line nr="295" mi="0" ci="12" mb="0" cb="2"/><line nr="296" mi="0" ci="4" mb="0" cb="0"/><line nr="297" mi="0" ci="5" mb="0" cb="0"/><line nr="298" mi="0" ci="1" mb="0" cb="0"/><line nr="299" mi="0" ci="3" mb="0" cb="0"/><line nr="307" mi="0" ci="2" mb="0" cb="0"/><line nr="308" mi="0" ci="11" mb="0" cb="2"/><line nr="309" mi="0" ci="4" mb="0" cb="0"/><line nr="310" mi="0" ci="4" mb="0" cb="0"/><line nr="311" mi="0" ci="13" mb="0" cb="0"/><line nr="314" mi="0" ci="1" mb="0" cb="0"/><line nr="315" mi="0" ci="3" mb="0" cb="0"/><line nr="319" mi="0" ci="2" mb="0" cb="0"/><line nr="321" mi="0" ci="12" mb="0" cb="2"/><line nr="322" mi="0" ci="4" mb="0" cb="0"/><line nr="323" mi="0" ci="3" mb="0" cb="0"/><line nr="324" mi="0" ci="2" mb="0" cb="2"/><line nr="325" mi="0" ci="5" mb="0" cb="0"/><line nr="327" mi="0" ci="1" mb="0" cb="0"/><line nr="328" mi="0" ci="3" mb="0" cb="0"/><line nr="332" mi="0" ci="4" mb="0" cb="0"/><line nr="333" mi="0" ci="5" mb="0" cb="0"/><line nr="334" mi="0" ci="3" mb="0" cb="0"/><line nr="342" mi="0" ci="2" mb="0" cb="0"/><line nr="343" mi="0" ci="2" mb="0" cb="0"/><line nr="344" mi="0" ci="11" mb="0" cb="2"/><line nr="345" mi="0" ci="4" mb="0" cb="0"/><line nr="346" mi="0" ci="5" mb="0" cb="0"/><line nr="347" mi="0" ci="2" mb="0" cb="2"/><line nr="348" mi="0" ci="14" mb="0" cb="0"/><line nr="351" mi="0" ci="3" mb="0" cb="0"/><line nr="353" mi="0" ci="3" mb="0" cb="0"/><line nr="354" mi="0" ci="3" mb="0" cb="0"/><line nr="355" mi="0" ci="5" mb="0" cb="2"/><line nr="356" mi="0" ci="10" mb="0" cb="0"/><line nr="358" mi="0" ci="26" mb="0" cb="0"/><line nr="361" mi="0" ci="2" mb="0" cb="0"/><line nr="364" mi="0" ci="1" mb="0" cb="0"/><line nr="365" mi="0" ci="2" mb="0" cb="2"/><line nr="366" mi="0" ci="4" mb="0" cb="0"/><line nr="368" mi="0" ci="3" mb="0" cb="0"/><line nr="377" mi="0" ci="2" mb="0" cb="0"/><line nr="378" mi="0" ci="11" mb="0" cb="2"/><line nr="379" mi="0" ci="8" mb="0" cb="4"/><line nr="380" mi="0" ci="14" mb="0" cb="0"/><line nr="383" mi="0" ci="12" mb="0" cb="0"/><line nr="384" mi="0" ci="2" mb="0" cb="0"/><line nr="386" mi="0" ci="1" mb="0" cb="0"/><line nr="387" mi="0" ci="2" mb="0" cb="2"/><line nr="388" mi="0" ci="4" mb="0" cb="0"/><line nr="390" mi="0" ci="1" mb="0" cb="0"/><line nr="398" mi="0" ci="6" mb="0" cb="2"/><line nr="402" mi="0" ci="2" mb="0" cb="0"/><line nr="407" mi="0" ci="4" mb="0" cb="2"/><line nr="408" mi="0" ci="2" mb="0" cb="0"/><line nr="410" mi="0" ci="4" mb="0" cb="0"/><line nr="411" mi="0" ci="8" mb="0" cb="2"/><line nr="412" mi="0" ci="5" mb="0" cb="0"/><line nr="414" mi="0" ci="2" mb="0" cb="0"/><line nr="415" mi="0" ci="5" mb="0" cb="0"/><line nr="416" mi="0" ci="9" mb="0" cb="0"/><line nr="417" mi="0" ci="2" mb="0" cb="0"/><line nr="418" mi="0" ci="6" mb="0" cb="0"/><line nr="427" mi="0" ci="2" mb="0" cb="0"/><line nr="428" mi="0" ci="5" mb="0" cb="0"/><line nr="429" mi="0" ci="2" mb="0" cb="0"/><line nr="430" mi="0" ci="10" mb="0" cb="2"/><line nr="431" mi="0" ci="9" mb="0" cb="0"/><line nr="432" mi="0" ci="4" mb="0" cb="0"/><line nr="433" mi="0" ci="11" mb="0" cb="2"/><line nr="434" mi="0" ci="7" mb="0" cb="2"/><line nr="435" mi="0" ci="4" mb="0" cb="0"/><line nr="436" mi="0" ci="1" mb="0" cb="0"/><line nr="438" mi="0" ci="1" mb="0" cb="0"/><line nr="439" mi="0" ci="1" mb="0" cb="0"/><line nr="440" mi="0" ci="3" mb="0" cb="0"/><line nr="448" mi="0" ci="4" mb="0" cb="0"/><line nr="449" mi="0" ci="4" mb="0" cb="0"/><line nr="450" mi="0" ci="6" mb="0" cb="0"/><line nr="451" mi="0" ci="11" mb="0" cb="2"/><line nr="454" mi="0" ci="5" mb="0" cb="0"/><line nr="455" mi="0" ci="1" mb="0" cb="0"/><line nr="456" mi="0" ci="4" mb="0" cb="0"/><line nr="457" mi="0" ci="3" mb="0" cb="2"/><line nr="459" mi="0" ci="6" mb="0" cb="0"/><line nr="461" mi="0" ci="3" mb="0" cb="2"/><line nr="464" mi="0" ci="6" mb="0" cb="0"/><line nr="466" mi="0" ci="2" mb="0" cb="0"/><line nr="470" mi="0" ci="8" mb="0" cb="0"/><line nr="474" mi="0" ci="10" mb="0" cb="0"/><line nr="478" mi="0" ci="5" mb="0" cb="0"/><line nr="479" mi="0" ci="6" mb="0" cb="0"/><line nr="480" mi="0" ci="6" mb="0" cb="0"/><line nr="484" mi="0" ci="16" mb="0" cb="2"/><line nr="489" mi="0" ci="2" mb="0" cb="0"/><line nr="490" mi="0" ci="10" mb="0" cb="0"/><line nr="491" mi="0" ci="5" mb="0" cb="0"/><line nr="492" mi="0" ci="3" mb="0" cb="0"/><line nr="494" mi="1" ci="0" mb="0" cb="0"/><line nr="501" mi="17" ci="0" mb="0" cb="0"/><line nr="503" mi="0" ci="1" mb="0" cb="0"/><line nr="504" mi="0" ci="1" mb="0" cb="0"/><line nr="518" mi="0" ci="2" mb="0" cb="0"/><line nr="519" mi="0" ci="3" mb="0" cb="0"/><line nr="520" mi="0" ci="3" mb="0" cb="0"/><line nr="521" mi="0" ci="3" mb="0" cb="0"/><line nr="522" mi="0" ci="3" mb="0" cb="0"/><line nr="523" mi="0" ci="3" mb="0" cb="0"/><line nr="524" mi="0" ci="1" mb="0" cb="0"/><line nr="528" mi="0" ci="5" mb="0" cb="0"/><line nr="532" mi="0" ci="6" mb="0" cb="0"/><line nr="536" mi="1" ci="8" mb="1" cb="1"/><line nr="537" mi="0" ci="4" mb="0" cb="0"/><line nr="538" mi="0" ci="6" mb="0" cb="0"/><line nr="542" mi="0" ci="4" mb="0" cb="0"/><line nr="546" mi="0" ci="4" mb="0" cb="0"/><line nr="550" mi="0" ci="5" mb="1" cb="1"/><line nr="551" mi="2" ci="0" mb="0" cb="0"/><line nr="553" mi="0" ci="5" mb="0" cb="0"/><line nr="554" mi="0" ci="4" mb="1" cb="1"/><line nr="555" mi="2" ci="0" mb="0" cb="0"/><line nr="557" mi="0" ci="3" mb="0" cb="0"/><line nr="558" mi="0" ci="6" mb="0" cb="0"/><line nr="559" mi="0" ci="2" mb="0" cb="0"/><line nr="560" mi="0" ci="2" mb="0" cb="2"/><line nr="561" mi="0" ci="2" mb="0" cb="0"/><line nr="563" mi="0" ci="5" mb="1" cb="1"/><line nr="564" mi="2" ci="0" mb="0" cb="0"/><line nr="566" mi="0" ci="6" mb="0" cb="0"/><line nr="567" mi="0" ci="4" mb="1" cb="1"/><line nr="568" mi="2" ci="0" mb="0" cb="0"/><line nr="570" mi="0" ci="3" mb="0" cb="0"/><line nr="574" mi="1" ci="9" mb="2" cb="2"/><line nr="578" mi="0" ci="4" mb="0" cb="0"/><line nr="579" mi="0" ci="2" mb="1" cb="1"/><line nr="580" mi="2" ci="0" mb="0" cb="0"/><line nr="582" mi="0" ci="9" mb="0" cb="0"/><line nr="583" mi="0" ci="4" mb="0" cb="0"/><line nr="592" mi="0" ci="2" mb="0" cb="0"/><line nr="593" mi="0" ci="5" mb="0" cb="0"/><line nr="594" mi="0" ci="4" mb="0" cb="0"/><line nr="595" mi="0" ci="1" mb="0" cb="0"/><line nr="598" mi="0" ci="3" mb="0" cb="0"/><line nr="602" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="105" covered="1126"/><counter type="BRANCH" missed="19" covered="87"/><counter type="LINE" missed="24" covered="250"/><counter type="COMPLEXITY" missed="18" covered="79"/><counter type="METHOD" missed="1" covered="43"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="AutoValueTemplateVars.java"><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExtensionContext.java"><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Reformatter.java"><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="2"/><line nr="36" mi="0" ci="9" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="2"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="8" mb="0" cb="4"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="11" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="2"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="6"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="9" mb="0" cb="4"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="2"/><line nr="81" mi="0" ci="5" mb="0" cb="4"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="8" mb="0" cb="2"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="2"/><line nr="107" mi="0" ci="8" mb="0" cb="2"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="2"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="7" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="210"/><counter type="BRANCH" missed="0" covered="34"/><counter type="LINE" missed="1" covered="55"/><counter type="COMPLEXITY" missed="1" covered="23"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JavaScanner.java"><line nr="39" mi="2" ci="6" mb="1" cb="1"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="2"/><line nr="44" mi="0" ci="9" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="1" cb="1"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="4"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="0" cb="2"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="8" mb="1" cb="1"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="4" ci="14" mb="2" cb="4"/><line nr="79" mi="0" ci="17" mb="0" cb="4"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="4" ci="16" mb="3" cb="3"/><line nr="87" mi="0" ci="20" mb="0" cb="4"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="4" ci="16" mb="3" cb="3"/><line nr="94" mi="0" ci="8" mb="0" cb="0"/><line nr="95" mi="4" ci="4" mb="2" cb="2"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="4" ci="11" mb="2" cb="6"/><line nr="103" mi="0" ci="12" mb="0" cb="2"/><line nr="104" mi="0" ci="6" mb="0" cb="2"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="30" covered="213"/><counter type="BRANCH" missed="15" covered="41"/><counter type="LINE" missed="2" covered="31"/><counter type="COMPLEXITY" missed="15" covered="21"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TemplateVars.java"><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="2"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="16" mb="0" cb="2"/><line nr="65" mi="0" ci="6" mb="0" cb="4"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="2"/><line nr="69" mi="0" ci="12" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="2"/><line nr="72" mi="0" ci="12" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="2"/><line nr="75" mi="0" ci="12" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="11" mb="0" cb="2"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="2"/><line nr="96" mi="0" ci="12" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="1" cb="1"/><line nr="100" mi="15" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="1" cb="1"/><line nr="109" mi="12" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="1" ci="0" mb="0" cb="0"/><line nr="133" mi="9" ci="0" mb="2" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="9" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="1" cb="1"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="5" ci="0" mb="2" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><line nr="163" mi="12" ci="0" mb="0" cb="0"/><line nr="172" mi="6" ci="0" mb="0" cb="0"/><line nr="173" mi="4" ci="0" mb="0" cb="0"/><line nr="174" mi="6" ci="0" mb="0" cb="0"/><line nr="175" mi="4" ci="0" mb="2" cb="0"/><line nr="176" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="8" ci="0" mb="0" cb="0"/><line nr="179" mi="10" ci="0" mb="0" cb="0"/><line nr="180" mi="4" ci="0" mb="0" cb="0"/><line nr="181" mi="4" ci="0" mb="0" cb="0"/><line nr="182" mi="5" ci="0" mb="0" cb="0"/><line nr="192" mi="0" ci="6" mb="0" cb="0"/><line nr="193" mi="0" ci="7" mb="0" cb="0"/><line nr="194" mi="0" ci="5" mb="0" cb="0"/><line nr="200" mi="0" ci="4" mb="0" cb="0"/><line nr="201" mi="1" ci="0" mb="0" cb="0"/><line nr="202" mi="5" ci="0" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="10" mb="0" cb="4"/><counter type="INSTRUCTION" missed="134" covered="232"/><counter type="BRANCH" missed="9" covered="25"/><counter type="LINE" missed="24" covered="47"/><counter type="COMPLEXITY" missed="7" covered="21"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Optionalish.java"><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="2"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="2"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="8" mb="0" cb="2"/><line nr="78" mi="0" ci="9" mb="1" cb="1"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="2" ci="8" mb="1" cb="1"/><line nr="103" mi="0" ci="10" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="2" cb="1"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="13" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="9" mb="0" cb="0"/><line nr="124" mi="6" ci="0" mb="0" cb="0"/><line nr="125" mi="5" ci="0" mb="0" cb="0"/><line nr="126" mi="11" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="109"/><counter type="BRANCH" missed="4" covered="9"/><counter type="LINE" missed="6" covered="24"/><counter type="COMPLEXITY" missed="5" covered="10"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TypeMirrorSet.java"><line nr="34" mi="0" ci="10" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="6" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="15" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="7" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="2"/><line nr="86" mi="0" ci="8" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="2"/><line nr="95" mi="0" ci="8" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="1" cb="1"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="111"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="25"/><counter type="COMPLEXITY" missed="2" covered="16"/><counter type="METHOD" missed="1" covered="14"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AnnotationOutput.java"><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="10" mb="0" cb="2"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="1" cb="1"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="1" cb="1"/><line nr="90" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="1" cb="1"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="1" cb="1"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="1" cb="1"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="1" cb="1"/><line nr="106" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="14" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="10" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="7" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="18" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="8" mb="0" cb="0"/><line nr="159" mi="0" ci="11" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="2"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="11" mb="0" cb="2"/><line nr="166" mi="0" ci="11" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="7" mb="0" cb="0"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="0" ci="8" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="5" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="9" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="8" mb="0" cb="2"/><line nr="205" mi="0" ci="5" mb="0" cb="0"/><line nr="207" mi="0" ci="4" mb="0" cb="0"/><line nr="211" mi="0" ci="4" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="4" cb="1"/><line nr="221" mi="6" ci="0" mb="0" cb="0"/><line nr="222" mi="1" ci="0" mb="0" cb="0"/><line nr="224" mi="4" ci="0" mb="0" cb="0"/><line nr="225" mi="1" ci="0" mb="0" cb="0"/><line nr="227" mi="4" ci="0" mb="0" cb="0"/><line nr="228" mi="1" ci="0" mb="0" cb="0"/><line nr="230" mi="4" ci="0" mb="0" cb="0"/><line nr="231" mi="1" ci="0" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="1" cb="1"/><line nr="234" mi="13" ci="0" mb="0" cb="0"/><line nr="235" mi="3" ci="3" mb="3" cb="1"/><line nr="236" mi="0" ci="5" mb="0" cb="0"/><line nr="238" mi="12" ci="0" mb="0" cb="0"/><line nr="242" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="80" covered="329"/><counter type="BRANCH" missed="14" covered="17"/><counter type="LINE" missed="16" covered="76"/><counter type="COMPLEXITY" missed="13" covered="24"/><counter type="METHOD" missed="0" covered="20"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="TypeSimplifier.java"><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="1" cb="1"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="7" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="12" mb="0" cb="2"/><line nr="107" mi="0" ci="5" mb="0" cb="2"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="10" mb="0" cb="0"/><line nr="128" mi="0" ci="10" mb="0" cb="0"/><line nr="137" mi="0" ci="10" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="2"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="10" mb="0" cb="2"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="2"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="8" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="11" mb="0" cb="2"/><line nr="187" mi="0" ci="5" mb="0" cb="2"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="6" mb="0" cb="0"/><line nr="192" mi="0" ci="1" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="195" mi="0" ci="7" mb="0" cb="0"/><line nr="196" mi="0" ci="7" mb="0" cb="0"/><line nr="197" mi="0" ci="7" mb="0" cb="0"/><line nr="211" mi="0" ci="6" mb="0" cb="0"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="217" mi="0" ci="9" mb="0" cb="0"/><line nr="221" mi="0" ci="6" mb="0" cb="0"/><line nr="222" mi="0" ci="4" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="0" ci="7" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="6" mb="0" cb="2"/><line nr="233" mi="0" ci="7" mb="0" cb="0"/><line nr="234" mi="0" ci="15" mb="0" cb="0"/><line nr="236" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="0"/><line nr="242" mi="0" ci="3" mb="0" cb="2"/><line nr="243" mi="0" ci="4" mb="0" cb="0"/><line nr="244" mi="0" ci="2" mb="0" cb="0"/><line nr="245" mi="0" ci="10" mb="0" cb="2"/><line nr="246" mi="0" ci="4" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><line nr="248" mi="0" ci="5" mb="0" cb="0"/><line nr="249" mi="0" ci="1" mb="0" cb="0"/><line nr="250" mi="0" ci="4" mb="0" cb="0"/><line nr="252" mi="0" ci="1" mb="0" cb="0"/><line nr="255" mi="0" ci="4" mb="0" cb="0"/><line nr="256" mi="0" ci="3" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="0"/><line nr="258" mi="0" ci="2" mb="0" cb="2"/><line nr="259" mi="0" ci="4" mb="0" cb="0"/><line nr="260" mi="0" ci="6" mb="0" cb="0"/><line nr="261" mi="0" ci="2" mb="0" cb="2"/><line nr="262" mi="0" ci="4" mb="0" cb="0"/><line nr="263" mi="0" ci="5" mb="0" cb="0"/><line nr="265" mi="0" ci="2" mb="0" cb="0"/><line nr="269" mi="0" ci="8" mb="0" cb="0"/><line nr="270" mi="0" ci="1" mb="0" cb="0"/><line nr="273" mi="0" ci="7" mb="0" cb="0"/><line nr="274" mi="0" ci="8" mb="0" cb="0"/><line nr="277" mi="0" ci="5" mb="0" cb="0"/><line nr="280" mi="0" ci="9" mb="0" cb="0"/><line nr="284" mi="0" ci="5" mb="0" cb="0"/><line nr="285" mi="0" ci="6" mb="0" cb="0"/><line nr="289" mi="0" ci="6" mb="0" cb="0"/><line nr="290" mi="0" ci="3" mb="0" cb="0"/><line nr="291" mi="0" ci="3" mb="1" cb="1"/><line nr="292" mi="4" ci="0" mb="0" cb="0"/><line nr="293" mi="4" ci="0" mb="0" cb="0"/><line nr="295" mi="0" ci="4" mb="0" cb="0"/><line nr="299" mi="0" ci="4" mb="0" cb="0"/><line nr="300" mi="0" ci="3" mb="0" cb="0"/><line nr="301" mi="0" ci="3" mb="1" cb="1"/><line nr="302" mi="0" ci="5" mb="0" cb="0"/><line nr="308" mi="6" ci="0" mb="0" cb="0"/><line nr="309" mi="7" ci="0" mb="0" cb="0"/><line nr="310" mi="4" ci="0" mb="0" cb="0"/><line nr="311" mi="6" ci="0" mb="0" cb="0"/><line nr="313" mi="0" ci="4" mb="0" cb="0"/><line nr="314" mi="0" ci="2" mb="0" cb="0"/><line nr="319" mi="4" ci="6" mb="1" cb="1"/><line nr="320" mi="9" ci="0" mb="0" cb="0"/><line nr="321" mi="1" ci="0" mb="0" cb="0"/><line nr="322" mi="0" ci="1" mb="0" cb="0"/><line nr="329" mi="0" ci="4" mb="0" cb="0"/><line nr="330" mi="0" ci="3" mb="0" cb="0"/><line nr="331" mi="0" ci="12" mb="0" cb="2"/><line nr="335" mi="0" ci="4" mb="0" cb="2"/><line nr="336" mi="0" ci="5" mb="0" cb="0"/><line nr="338" mi="0" ci="2" mb="0" cb="0"/><line nr="346" mi="0" ci="5" mb="0" cb="0"/><line nr="350" mi="0" ci="4" mb="0" cb="2"/><line nr="351" mi="0" ci="8" mb="0" cb="0"/><line nr="353" mi="0" ci="2" mb="0" cb="0"/><line nr="382" mi="0" ci="4" mb="0" cb="0"/><line nr="383" mi="0" ci="4" mb="0" cb="0"/><line nr="384" mi="0" ci="4" mb="0" cb="0"/><line nr="385" mi="0" ci="4" mb="0" cb="0"/><line nr="386" mi="0" ci="4" mb="0" cb="0"/><line nr="387" mi="0" ci="10" mb="0" cb="2"/><line nr="388" mi="0" ci="5" mb="0" cb="0"/><line nr="389" mi="0" ci="4" mb="0" cb="0"/><line nr="390" mi="0" ci="4" mb="0" cb="0"/><line nr="391" mi="0" ci="3" mb="0" cb="0"/><line nr="394" mi="0" ci="4" mb="0" cb="2"/><line nr="395" mi="0" ci="2" mb="0" cb="0"/><line nr="396" mi="0" ci="3" mb="0" cb="0"/><line nr="397" mi="0" ci="8" mb="0" cb="4"/><line nr="398" mi="0" ci="2" mb="0" cb="0"/><line nr="399" mi="0" ci="13" mb="0" cb="2"/><line nr="401" mi="0" ci="2" mb="0" cb="0"/><line nr="402" mi="0" ci="2" mb="0" cb="0"/><line nr="404" mi="0" ci="9" mb="0" cb="0"/><line nr="405" mi="0" ci="1" mb="0" cb="0"/><line nr="406" mi="0" ci="2" mb="0" cb="0"/><line nr="421" mi="0" ci="4" mb="0" cb="0"/><line nr="422" mi="0" ci="6" mb="0" cb="0"/><line nr="424" mi="0" ci="10" mb="0" cb="2"/><line nr="425" mi="0" ci="4" mb="0" cb="0"/><line nr="426" mi="0" ci="1" mb="0" cb="0"/><line nr="427" mi="0" ci="5" mb="0" cb="0"/><line nr="428" mi="0" ci="7" mb="0" cb="0"/><line nr="429" mi="0" ci="6" mb="0" cb="0"/><line nr="430" mi="0" ci="3" mb="0" cb="0"/><line nr="438" mi="0" ci="2" mb="0" cb="0"/><line nr="439" mi="0" ci="3" mb="0" cb="0"/><line nr="440" mi="0" ci="3" mb="0" cb="0"/><line nr="441" mi="0" ci="5" mb="0" cb="0"/><line nr="442" mi="0" ci="1" mb="0" cb="0"/><line nr="445" mi="0" ci="7" mb="0" cb="0"/><line nr="449" mi="0" ci="5" mb="0" cb="2"/><line nr="450" mi="0" ci="8" mb="0" cb="0"/><line nr="451" mi="0" ci="11" mb="0" cb="2"/><line nr="452" mi="0" ci="5" mb="0" cb="0"/><line nr="453" mi="0" ci="1" mb="0" cb="0"/><line nr="455" mi="0" ci="2" mb="0" cb="0"/><line nr="465" mi="0" ci="13" mb="0" cb="2"/><line nr="466" mi="0" ci="5" mb="0" cb="0"/><line nr="467" mi="0" ci="1" mb="0" cb="0"/><line nr="468" mi="0" ci="7" mb="0" cb="0"/><line nr="472" mi="0" ci="27" mb="0" cb="2"/><line nr="473" mi="0" ci="2" mb="0" cb="2"/><line nr="474" mi="0" ci="5" mb="0" cb="0"/><line nr="477" mi="0" ci="2" mb="0" cb="0"/><line nr="481" mi="0" ci="4" mb="0" cb="0"/><line nr="490" mi="0" ci="2" mb="1" cb="1"/><line nr="491" mi="4" ci="0" mb="0" cb="0"/><line nr="493" mi="0" ci="4" mb="0" cb="0"/><line nr="494" mi="0" ci="4" mb="0" cb="0"/><line nr="495" mi="0" ci="2" mb="0" cb="0"/><line nr="496" mi="0" ci="4" mb="0" cb="0"/><line nr="497" mi="0" ci="10" mb="0" cb="2"/><line nr="498" mi="0" ci="5" mb="1" cb="1"/><line nr="499" mi="0" ci="5" mb="0" cb="0"/><line nr="501" mi="0" ci="1" mb="0" cb="0"/><line nr="502" mi="0" ci="12" mb="0" cb="2"/><line nr="503" mi="0" ci="6" mb="0" cb="0"/><line nr="504" mi="0" ci="1" mb="0" cb="0"/><line nr="505" mi="0" ci="2" mb="0" cb="0"/><line nr="510" mi="0" ci="4" mb="0" cb="0"/><line nr="511" mi="0" ci="4" mb="0" cb="0"/><line nr="512" mi="0" ci="10" mb="0" cb="2"/><line nr="513" mi="0" ci="4" mb="1" cb="1"/><line nr="514" mi="4" ci="0" mb="0" cb="0"/><line nr="516" mi="0" ci="6" mb="0" cb="0"/><line nr="522" mi="0" ci="6" mb="0" cb="0"/><line nr="523" mi="0" ci="6" mb="0" cb="0"/><line nr="524" mi="0" ci="6" mb="1" cb="3"/><line nr="525" mi="0" ci="4" mb="0" cb="0"/><line nr="527" mi="0" ci="1" mb="0" cb="0"/><line nr="528" mi="0" ci="2" mb="0" cb="0"/><line nr="537" mi="0" ci="11" mb="0" cb="0"/><line nr="547" mi="0" ci="2" mb="0" cb="0"/><line nr="553" mi="3" ci="0" mb="0" cb="0"/><line nr="557" mi="0" ci="7" mb="0" cb="0"/><line nr="561" mi="0" ci="15" mb="1" cb="3"/><line nr="565" mi="3" ci="0" mb="0" cb="0"/><line nr="572" mi="0" ci="4" mb="0" cb="2"/><line nr="573" mi="0" ci="3" mb="0" cb="0"/><line nr="574" mi="0" ci="7" mb="0" cb="4"/><line nr="577" mi="0" ci="7" mb="0" cb="2"/><line nr="580" mi="0" ci="2" mb="0" cb="0"/><line nr="584" mi="0" ci="4" mb="0" cb="2"/><line nr="585" mi="0" ci="2" mb="0" cb="0"/><line nr="587" mi="0" ci="3" mb="0" cb="0"/><line nr="588" mi="0" ci="4" mb="0" cb="0"/><line nr="589" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="59" covered="960"/><counter type="BRANCH" missed="9" covered="81"/><counter type="LINE" missed="12" covered="204"/><counter type="COMPLEXITY" missed="11" covered="83"/><counter type="METHOD" missed="2" covered="47"/><counter type="CLASS" missed="0" covered="7"/></sourcefile><sourcefile name="AutoAnnotationTemplateVars.java"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1108" covered="8220"/><counter type="BRANCH" missed="156" covered="767"/><counter type="LINE" missed="209" covered="1809"/><counter type="COMPLEXITY" missed="161" covered="664"/><counter type="METHOD" missed="27" covered="328"/><counter type="CLASS" missed="2" covered="42"/></package><package name="com/google/auto/value"><class name="com/google/auto/value/AutoAnnotation" sourcefilename="AutoAnnotation.java"/><class name="com/google/auto/value/AutoValue$Builder" sourcefilename="AutoValue.java"/><class name="com/google/auto/value/AutoValue" sourcefilename="AutoValue.java"/><class name="com/google/auto/value/AutoValue$CopyAnnotations" sourcefilename="AutoValue.java"/><sourcefile name="AutoAnnotation.java"/><sourcefile name="AutoValue.java"/></package><package name="com/google/auto/value/processor/escapevelocity"><class name="com/google/auto/value/processor/escapevelocity/DirectiveNode$SetNode" sourcefilename="DirectiveNode.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/google/auto/value/processor/escapevelocity/Node;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lcom/google/auto/value/processor/escapevelocity/EvaluationContext;)Ljava/lang/Object;" line="72"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/Macro$MacroEvaluationContext" sourcefilename="Macro.java"><method name="&lt;init&gt;" desc="(Ljava/util/Map;Lcom/google/auto/value/processor/escapevelocity/EvaluationContext;)V" line="109"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVar" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="116"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="varIsDefined" desc="(Ljava/lang/String;)Z" line="131"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVar" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Runnable;" line="138"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="73"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/ExpressionNode$NotExpressionNode" sourcefilename="ExpressionNode.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/processor/escapevelocity/ExpressionNode;)V" line="197"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lcom/google/auto/value/processor/escapevelocity/EvaluationContext;)Ljava/lang/Object;" line="202"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/TokenNode" sourcefilename="TokenNode.java"><method name="&lt;init&gt;" desc="(I)V" line="47"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lcom/google/auto/value/processor/escapevelocity/EvaluationContext;)Ljava/lang/Object;" line="55"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="4"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/ReferenceNode$IndexReferenceNode" sourcefilename="ReferenceNode.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/processor/escapevelocity/ReferenceNode;Lcom/google/auto/value/processor/escapevelocity/ExpressionNode;)V" line="155"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lcom/google/auto/value/processor/escapevelocity/EvaluationContext;)Ljava/lang/Object;" line="161"><counter type="INSTRUCTION" missed="34" covered="64"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="4" covered="15"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="34" covered="75"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="4" covered="19"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/DirectiveNode" sourcefilename="DirectiveNode.java"><method name="&lt;init&gt;" desc="(I)V" line="49"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/ParseException" sourcefilename="ParseException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="44"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;)V" line="48"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="13"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/DirectiveNode$IfNode" sourcefilename="DirectiveNode.java"><method name="&lt;init&gt;" desc="(ILcom/google/auto/value/processor/escapevelocity/ExpressionNode;Lcom/google/auto/value/processor/escapevelocity/Node;Lcom/google/auto/value/processor/escapevelocity/Node;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lcom/google/auto/value/processor/escapevelocity/EvaluationContext;)Ljava/lang/Object;" line="97"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/TokenNode$EndTokenNode" sourcefilename="TokenNode.java"><method name="&lt;init&gt;" desc="(I)V" line="80"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="84"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="4"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/Macro$MacroEvaluationContext$1" sourcefilename="Macro.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/processor/escapevelocity/Macro$MacroEvaluationContext;Ljava/lang/Runnable;Ljava/lang/String;Lcom/google/auto/value/processor/escapevelocity/Node;)V" line="144"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V" line="147"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="15"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/Node" sourcefilename="Node.java"><method name="&lt;init&gt;" desc="(I)V" line="45"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluationException" desc="(Ljava/lang/String;)Lcom/google/auto/value/processor/escapevelocity/EvaluationException;" line="59"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluationException" desc="(Ljava/lang/Throwable;)Lcom/google/auto/value/processor/escapevelocity/EvaluationException;" line="63"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emptyNode" desc="(I)Lcom/google/auto/value/processor/escapevelocity/Node;" line="71"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cons" desc="(ILcom/google/common/collect/ImmutableList;)Lcom/google/auto/value/processor/escapevelocity/Node;" line="80"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="35" covered="18"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/Node$Cons" sourcefilename="Node.java"><method name="&lt;init&gt;" desc="(ILcom/google/common/collect/ImmutableList;)V" line="87"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lcom/google/auto/value/processor/escapevelocity/EvaluationContext;)Ljava/lang/Object;" line="92"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/ReferenceNode$MethodReferenceNode" sourcefilename="ReferenceNode.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/processor/escapevelocity/ReferenceNode;Ljava/lang/String;Ljava/util/List;)V" line="199"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lcom/google/auto/value/processor/escapevelocity/EvaluationContext;)Ljava/lang/Object;" line="223"><counter type="INSTRUCTION" missed="62" covered="98"/><counter type="BRANCH" missed="4" covered="15"/><counter type="LINE" missed="5" covered="18"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compatibleArgs" desc="([Ljava/lang/Class;Ljava/util/List;)Z" line="266"><counter type="INSTRUCTION" missed="2" covered="36"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="primitiveIsCompatible" desc="(Ljava/lang/Class;Ljava/lang/Object;)Z" line="282"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="primitiveTypeIsAssignmentCompatible" desc="(Ljava/lang/Class;Ljava/lang/Class;)Z" line="302"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="288"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="64" covered="213"/><counter type="BRANCH" missed="6" covered="37"/><counter type="LINE" missed="6" covered="48"/><counter type="COMPLEXITY" missed="6" covered="22"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/Parser$Operator" sourcefilename="Parser.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;I)V" line="588"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="595"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="564"><counter type="INSTRUCTION" missed="0" covered="172"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="183"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/Parser$OperatorParser" sourcefilename="Parser.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/processor/escapevelocity/Parser;)V" line="653"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Lcom/google/auto/value/processor/escapevelocity/ExpressionNode;I)Lcom/google/auto/value/processor/escapevelocity/ExpressionNode;" line="664"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextOperator" desc="()V" line="681"><counter type="INSTRUCTION" missed="18" covered="71"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="2" covered="19"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="117"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="2" covered="31"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/Macro" sourcefilename="Macro.java"><method name="&lt;init&gt;" desc="(ILjava/lang/String;Ljava/util/List;Lcom/google/auto/value/processor/escapevelocity/Node;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="64"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parameterCount" desc="()I" line="68"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lcom/google/auto/value/processor/escapevelocity/EvaluationContext;Ljava/util/List;)Ljava/lang/Object;" line="73"><counter type="INSTRUCTION" missed="31" covered="49"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="34" covered="69"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="6" covered="13"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/Parser" sourcefilename="Parser.java"><method name="&lt;init&gt;" desc="(Ljava/io/Reader;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="()Lcom/google/auto/value/processor/escapevelocity/Template;" line="121"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lineNumber" desc="()I" line="131"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()V" line="139"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skipSpace" desc="()V" line="149"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextNonSpace" desc="()V" line="159"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expect" desc="(C)V" line="168"><counter type="INSTRUCTION" missed="11" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseNode" desc="()Lcom/google/auto/value/processor/escapevelocity/Node;" line="185"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseNonDirective" desc="()Lcom/google/auto/value/processor/escapevelocity/Node;" line="207"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseDirective" desc="()Lcom/google/auto/value/processor/escapevelocity/Node;" line="238"><counter type="INSTRUCTION" missed="0" covered="89"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseIfOrElseIf" desc="(Ljava/lang/String;)Lcom/google/auto/value/processor/escapevelocity/Node;" line="279"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseForEach" desc="()Lcom/google/auto/value/processor/escapevelocity/Node;" line="291"><counter type="INSTRUCTION" missed="9" covered="40"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="13"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseSet" desc="()Lcom/google/auto/value/processor/escapevelocity/Node;" line="319"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseMacroDefinition" desc="()Lcom/google/auto/value/processor/escapevelocity/Node;" line="338"><counter type="INSTRUCTION" missed="4" covered="42"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parsePossibleMacroCall" desc="(Ljava/lang/String;)Lcom/google/auto/value/processor/escapevelocity/Node;" line="370"><counter type="INSTRUCTION" missed="11" covered="40"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseComment" desc="()Lcom/google/auto/value/processor/escapevelocity/Node;" line="397"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parsePlainText" desc="(I)Lcom/google/auto/value/processor/escapevelocity/Node;" line="411"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseReference" desc="()Lcom/google/auto/value/processor/escapevelocity/ReferenceNode;" line="442"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseReferenceNoBrace" desc="()Lcom/google/auto/value/processor/escapevelocity/ReferenceNode;" line="459"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseReferenceSuffix" desc="(Lcom/google/auto/value/processor/escapevelocity/ReferenceNode;)Lcom/google/auto/value/processor/escapevelocity/ReferenceNode;" line="476"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseReferenceMember" desc="(Lcom/google/auto/value/processor/escapevelocity/ReferenceNode;)Lcom/google/auto/value/processor/escapevelocity/ReferenceNode;" line="499"><counter type="INSTRUCTION" missed="4" covered="32"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseReferenceMethodParams" desc="(Lcom/google/auto/value/processor/escapevelocity/ReferenceNode;Ljava/lang/String;)Lcom/google/auto/value/processor/escapevelocity/ReferenceNode;" line="525"><counter type="INSTRUCTION" missed="12" covered="51"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseReferenceIndex" desc="(Lcom/google/auto/value/processor/escapevelocity/ReferenceNode;)Lcom/google/auto/value/processor/escapevelocity/ReferenceNode;" line="553"><counter type="INSTRUCTION" missed="8" covered="27"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseExpression" desc="()Lcom/google/auto/value/processor/escapevelocity/ExpressionNode;" line="637"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseUnaryExpression" desc="()Lcom/google/auto/value/processor/escapevelocity/ExpressionNode;" line="716"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parsePrimary" desc="()Lcom/google/auto/value/processor/escapevelocity/ExpressionNode;" line="745"><counter type="INSTRUCTION" missed="4" covered="50"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseStringLiteral" desc="()Lcom/google/auto/value/processor/escapevelocity/ExpressionNode;" line="767"><counter type="INSTRUCTION" missed="12" covered="50"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseIntLiteral" desc="(Ljava/lang/String;)Lcom/google/auto/value/processor/escapevelocity/ExpressionNode;" line="789"><counter type="INSTRUCTION" missed="11" covered="30"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseBooleanLiteral" desc="()Lcom/google/auto/value/processor/escapevelocity/ExpressionNode;" line="807"><counter type="INSTRUCTION" missed="4" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAsciiLetter" desc="(I)Z" line="835"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAsciiDigit" desc="(I)Z" line="839"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIdChar" desc="(I)Z" line="843"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseId" desc="(Ljava/lang/String;)Ljava/lang/String;" line="853"><counter type="INSTRUCTION" missed="11" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseException" desc="(Ljava/lang/String;)Lcom/google/auto/value/processor/escapevelocity/ParseException;" line="869"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="67"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="149" covered="922"/><counter type="BRANCH" missed="33" covered="126"/><counter type="LINE" missed="25" covered="238"/><counter type="COMPLEXITY" missed="30" covered="85"/><counter type="METHOD" missed="1" covered="34"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/TokenNode$ElseIfTokenNode" sourcefilename="TokenNode.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/processor/escapevelocity/ExpressionNode;)V" line="125"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="129"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="4"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/EvaluationContext$PlainEvaluationContext" sourcefilename="EvaluationContext.java"><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVar" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="69"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="varIsDefined" desc="(Ljava/lang/String;)Z" line="74"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVar" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Runnable;" line="80"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/ReferenceNode" sourcefilename="ReferenceNode.java"><method name="&lt;init&gt;" desc="(I)V" line="55"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invokeMethod" desc="(Ljava/lang/reflect/Method;Ljava/lang/Object;Ljava/util/List;)Ljava/lang/Object;" line="329"><counter type="INSTRUCTION" missed="28" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="6" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="packageNameOf" desc="(Ljava/lang/Class;)Ljava/lang/String;" line="346"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visibleMethod" desc="(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/reflect/Method;" line="365"><counter type="INSTRUCTION" missed="32" covered="29"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="8" covered="8"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classIsPublic" desc="(Ljava/lang/Class;)Z" line="402"><counter type="INSTRUCTION" missed="3" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classIsExported" desc="(Ljava/lang/Class;)Z" line="413"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="355"><counter type="INSTRUCTION" missed="20" covered="20"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="109" covered="94"/><counter type="BRANCH" missed="9" covered="13"/><counter type="LINE" missed="25" covered="29"/><counter type="COMPLEXITY" missed="8" covered="10"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/DirectiveNode$MacroCallNode" sourcefilename="DirectiveNode.java"><method name="&lt;init&gt;" desc="(ILjava/lang/String;Lcom/google/common/collect/ImmutableList;)V" line="182"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="188"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="argumentCount" desc="()I" line="192"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMacro" desc="(Lcom/google/auto/value/processor/escapevelocity/Macro;)V" line="196"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lcom/google/auto/value/processor/escapevelocity/EvaluationContext;)Ljava/lang/Object;" line="201"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/ExpressionNode" sourcefilename="ExpressionNode.java"><method name="&lt;init&gt;" desc="(I)V" line="46"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTrue" desc="(Lcom/google/auto/value/processor/escapevelocity/EvaluationContext;)Z" line="61"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDefinedAndTrue" desc="(Lcom/google/auto/value/processor/escapevelocity/EvaluationContext;)Z" line="77"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intValue" desc="(Lcom/google/auto/value/processor/escapevelocity/EvaluationContext;)I" line="87"><counter type="INSTRUCTION" missed="12" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="show" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="99"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="36"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="4" covered="10"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/DirectiveNode$ForEachNode" sourcefilename="DirectiveNode.java"><method name="&lt;init&gt;" desc="(ILjava/lang/String;Lcom/google/auto/value/processor/escapevelocity/ExpressionNode;Lcom/google/auto/value/processor/escapevelocity/Node;)V" line="116"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lcom/google/auto/value/processor/escapevelocity/EvaluationContext;)Ljava/lang/Object;" line="124"><counter type="INSTRUCTION" missed="12" covered="75"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="88"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="22"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/TokenNode$CommentTokenNode" sourcefilename="TokenNode.java"><method name="&lt;init&gt;" desc="(I)V" line="96"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="100"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="4"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/TokenNode$EofNode" sourcefilename="TokenNode.java"><method name="&lt;init&gt;" desc="(I)V" line="69"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="4"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/EvaluationContext$PlainEvaluationContext$2" sourcefilename="EvaluationContext.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/processor/escapevelocity/EvaluationContext$PlainEvaluationContext;Ljava/lang/String;)V" line="88"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V" line="90"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/EvaluationContext$PlainEvaluationContext$1" sourcefilename="EvaluationContext.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/processor/escapevelocity/EvaluationContext$PlainEvaluationContext;Ljava/lang/String;Ljava/lang/Object;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V" line="84"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/TokenNode$IfOrElseIfTokenNode" sourcefilename="TokenNode.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/processor/escapevelocity/ExpressionNode;)V" line="108"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/Template" sourcefilename="Template.java"><method name="parseFrom" desc="(Ljava/io/Reader;)Lcom/google/auto/value/processor/escapevelocity/Template;" line="56"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/processor/escapevelocity/Node;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Ljava/util/Map;)Ljava/lang/String;" line="73"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/EvaluationException" sourcefilename="EvaluationException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="45"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="49"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/google/auto/value/processor/escapevelocity/ConstantExpressionNode" sourcefilename="ConstantExpressionNode.java"><method name="&lt;init&gt;" desc="(ILjava/lang/Object;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lcom/google/auto/value/processor/escapevelocity/EvaluationContext;)Ljava/lang/Object;" line="58"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/Reparser" sourcefilename="Reparser.java"><method name="&lt;init&gt;" desc="(Lcom/google/common/collect/ImmutableList;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reparse" desc="()Lcom/google/auto/value/processor/escapevelocity/Template;" line="98"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeSpaceBeforeSet" desc="(Lcom/google/common/collect/ImmutableList;)Lcom/google/common/collect/ImmutableList;" line="111"><counter type="INSTRUCTION" missed="4" covered="47"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shouldDeleteSpaceBetweenThisAndSet" desc="(Lcom/google/auto/value/processor/escapevelocity/Node;)Z" line="128"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWhitespaceLiteral" desc="(Lcom/google/auto/value/processor/escapevelocity/Node;)Z" line="135"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseTo" desc="(Ljava/util/Set;Lcom/google/auto/value/processor/escapevelocity/TokenNode;)Lcom/google/auto/value/processor/escapevelocity/Node;" line="157"><counter type="INSTRUCTION" missed="15" covered="37"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="currentNode" desc="()Lcom/google/auto/value/processor/escapevelocity/Node;" line="180"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextNode" desc="()Lcom/google/auto/value/processor/escapevelocity/Node;" line="184"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseTokenNode" desc="()Lcom/google/auto/value/processor/escapevelocity/Node;" line="194"><counter type="INSTRUCTION" missed="18" covered="38"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseForEach" desc="(Lcom/google/auto/value/processor/escapevelocity/TokenNode$ForEachTokenNode;)Lcom/google/auto/value/processor/escapevelocity/Node;" line="211"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseIfOrElseIf" desc="(Lcom/google/auto/value/processor/escapevelocity/TokenNode$IfOrElseIfTokenNode;)Lcom/google/auto/value/processor/escapevelocity/Node;" line="217"><counter type="INSTRUCTION" missed="6" covered="50"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseMacroDefinition" desc="(Lcom/google/auto/value/processor/escapevelocity/TokenNode$MacroDefinitionTokenNode;)Lcom/google/auto/value/processor/escapevelocity/Node;" line="239"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linkMacroCalls" desc="()V" line="250"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linkMacroCall" desc="(Lcom/google/auto/value/processor/escapevelocity/DirectiveNode$MacroCallNode;)V" line="258"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="45" covered="413"/><counter type="BRANCH" missed="6" covered="54"/><counter type="LINE" missed="6" covered="93"/><counter type="COMPLEXITY" missed="6" covered="39"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/TokenNode$ElseTokenNode" sourcefilename="TokenNode.java"><method name="&lt;init&gt;" desc="(I)V" line="135"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="139"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="4"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/DirectiveNode$ForEachNode$ForEachVar" sourcefilename="DirectiveNode.java"><method name="&lt;init&gt;" desc="(Ljava/util/Iterator;)V" line="156"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHasNext" desc="()Z" line="161"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/EvaluationContext" sourcefilename="EvaluationContext.java"/><class name="com/google/auto/value/processor/escapevelocity/ReferenceNode$PlainReferenceNode" sourcefilename="ReferenceNode.java"><method name="&lt;init&gt;" desc="(ILjava/lang/String;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lcom/google/auto/value/processor/escapevelocity/EvaluationContext;)Ljava/lang/Object;" line="71"><counter type="INSTRUCTION" missed="13" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDefinedAndTrue" desc="(Lcom/google/auto/value/processor/escapevelocity/EvaluationContext;)Z" line="80"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="28"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/ReferenceNode$MemberReferenceNode" sourcefilename="ReferenceNode.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/processor/escapevelocity/ReferenceNode;Ljava/lang/String;)V" line="97"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lcom/google/auto/value/processor/escapevelocity/EvaluationContext;)Ljava/lang/Object;" line="106"><counter type="INSTRUCTION" missed="39" covered="80"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="4" covered="10"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="changeInitialCase" desc="(Ljava/lang/String;)Ljava/lang/String;" line="134"><counter type="INSTRUCTION" missed="4" covered="27"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="102"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="43" covered="141"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="5" covered="22"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/TokenNode$IfTokenNode" sourcefilename="TokenNode.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/processor/escapevelocity/ExpressionNode;)V" line="115"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="119"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="4"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/ExpressionNode$BinaryExpressionNode" sourcefilename="ExpressionNode.java"><method name="&lt;init&gt;" desc="(Lcom/google/auto/value/processor/escapevelocity/ExpressionNode;Lcom/google/auto/value/processor/escapevelocity/Parser$Operator;Lcom/google/auto/value/processor/escapevelocity/ExpressionNode;)V" line="116"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lcom/google/auto/value/processor/escapevelocity/EvaluationContext;)Ljava/lang/Object;" line="123"><counter type="INSTRUCTION" missed="6" covered="123"/><counter type="BRANCH" missed="1" covered="32"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="1" covered="22"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equal" desc="(Lcom/google/auto/value/processor/escapevelocity/EvaluationContext;)Z" line="174"><counter type="INSTRUCTION" missed="2" covered="35"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="172"/><counter type="BRANCH" missed="3" covered="38"/><counter type="LINE" missed="2" covered="30"/><counter type="COMPLEXITY" missed="3" covered="26"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/TokenNode$MacroDefinitionTokenNode" sourcefilename="TokenNode.java"><method name="&lt;init&gt;" desc="(ILjava/lang/String;Ljava/util/List;)V" line="163"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="169"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="11"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/google/auto/value/processor/escapevelocity/TokenNode$ForEachTokenNode" sourcefilename="TokenNode.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/google/auto/value/processor/escapevelocity/ExpressionNode;)V" line="148"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="154"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Reparser.java"><line nr="64" mi="0" ci="7" mb="0" cb="2"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="8" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="4" ci="6" mb="1" cb="3"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="8" mb="0" cb="2"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="7" mb="0" cb="2"/><line nr="118" mi="0" ci="8" mb="0" cb="2"/><line nr="119" mi="0" ci="3" mb="0" cb="2"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="16" mb="0" cb="8"/><line nr="135" mi="0" ci="3" mb="0" cb="2"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="12" mb="1" cb="3"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="2"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="1" cb="1"/><line nr="164" mi="8" ci="0" mb="0" cb="0"/><line nr="165" mi="7" ci="0" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="2"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="6" mb="0" cb="0"/><line nr="180" mi="0" ci="7" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="1" cb="1"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="188" mi="0" ci="6" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="2"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="2"/><line nr="199" mi="0" ci="5" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="2"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="1" cb="1"/><line nr="203" mi="0" ci="5" mb="0" cb="0"/><line nr="205" mi="8" ci="0" mb="0" cb="0"/><line nr="206" mi="10" ci="0" mb="0" cb="0"/><line nr="211" mi="0" ci="5" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="11" mb="0" cb="0"/><line nr="217" mi="0" ci="5" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="3" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="2"/><line nr="222" mi="0" ci="5" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="2"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="225" mi="0" ci="4" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="1" cb="1"/><line nr="231" mi="0" ci="6" mb="0" cb="0"/><line nr="233" mi="6" ci="0" mb="0" cb="0"/><line nr="235" mi="0" ci="10" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="0" ci="6" mb="0" cb="2"/><line nr="242" mi="0" ci="11" mb="0" cb="0"/><line nr="244" mi="0" ci="7" mb="0" cb="0"/><line nr="246" mi="0" ci="4" mb="0" cb="0"/><line nr="250" mi="0" ci="11" mb="0" cb="2"/><line nr="251" mi="0" ci="3" mb="0" cb="2"/><line nr="252" mi="0" ci="4" mb="0" cb="0"/><line nr="254" mi="0" ci="1" mb="0" cb="0"/><line nr="255" mi="0" ci="1" mb="0" cb="0"/><line nr="258" mi="0" ci="7" mb="0" cb="0"/><line nr="259" mi="0" ci="2" mb="0" cb="2"/><line nr="260" mi="0" ci="8" mb="0" cb="0"/><line nr="261" mi="0" ci="9" mb="0" cb="0"/><line nr="265" mi="0" ci="5" mb="0" cb="2"/><line nr="266" mi="0" ci="8" mb="0" cb="0"/><line nr="267" mi="0" ci="5" mb="0" cb="0"/><line nr="268" mi="0" ci="5" mb="0" cb="0"/><line nr="269" mi="0" ci="7" mb="0" cb="0"/><line nr="272" mi="0" ci="3" mb="0" cb="0"/><line nr="273" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="413"/><counter type="BRANCH" missed="6" covered="54"/><counter type="LINE" missed="6" covered="93"/><counter type="COMPLEXITY" missed="6" covered="39"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConstantExpressionNode.java"><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TokenNode.java"><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="30" covered="58"/><counter type="LINE" missed="9" covered="25"/><counter type="COMPLEXITY" missed="9" covered="10"/><counter type="METHOD" missed="9" covered="10"/><counter type="CLASS" missed="0" covered="10"/></sourcefile><sourcefile name="EvaluationContext.java"><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="2"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="19" mb="0" cb="0"/><line nr="84" mi="0" ci="9" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="15" mb="0" cb="0"/><line nr="90" mi="0" ci="7" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="90"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="ExpressionNode.java"><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="2"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="2"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="1" cb="1"/><line nr="89" mi="12" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="2" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="15" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="6" mb="0" cb="5"/><line nr="125" mi="0" ci="15" mb="0" cb="4"/><line nr="127" mi="0" ci="15" mb="0" cb="4"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="9" mb="0" cb="2"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="1" cb="9"/><line nr="138" mi="0" ci="8" mb="0" cb="2"/><line nr="140" mi="0" ci="8" mb="0" cb="2"/><line nr="142" mi="0" ci="8" mb="0" cb="2"/><line nr="144" mi="0" ci="8" mb="0" cb="2"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="6" ci="0" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="2"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="2" cb="2"/><line nr="180" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="6" mb="0" cb="2"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="6" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="10" mb="0" cb="2"/><counter type="INSTRUCTION" missed="39" covered="226"/><counter type="BRANCH" missed="6" covered="45"/><counter type="LINE" missed="6" covered="44"/><counter type="COMPLEXITY" missed="6" covered="35"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="DirectiveNode.java"><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="9" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="11" mb="0" cb="2"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="2"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="2"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="1" cb="1"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="12" ci="0" mb="0" cb="0"/><line nr="135" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="8" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="2"/><line nr="140" mi="0" ci="7" mb="0" cb="0"/><line nr="141" mi="0" ci="8" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="1" mb="0" cb="0"/><line nr="201" mi="0" ci="12" mb="0" cb="0"/><line nr="202" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="192"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="51"/><counter type="COMPLEXITY" missed="1" covered="18"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><sourcefile name="Template.java"><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EvaluationException.java"><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Macro.java"><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="1" ci="17" mb="1" cb="1"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="9" mb="0" cb="2"/><line nr="76" mi="0" ci="10" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="18" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="2"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="1" ci="13" mb="1" cb="3"/><line nr="138" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="2"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="6" mb="0" cb="0"/><line nr="144" mi="0" ci="23" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="9" ci="0" mb="0" cb="0"/><line nr="149" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="48" covered="157"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="9" covered="28"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Parser.java"><line nr="67" mi="0" ci="7" mb="0" cb="2"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="2"/><line nr="127" mi="0" ci="7" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="1" cb="1"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="2"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="1" cb="1"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="11" ci="0" mb="0" cb="0"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="2"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="2"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="0" cb="2"/><line nr="194" mi="0" ci="6" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="4" mb="0" cb="2"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="0" ci="8" mb="0" cb="4"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="2" mb="0" cb="0"/><line nr="217" mi="0" ci="4" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="0" cb="2"/><line nr="239" mi="0" ci="2" mb="0" cb="0"/><line nr="240" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="0" ci="4" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="0" cb="0"/><line nr="246" mi="0" ci="4" mb="0" cb="2"/><line nr="247" mi="0" ci="7" mb="0" cb="0"/><line nr="248" mi="0" ci="8" mb="0" cb="4"/><line nr="249" mi="0" ci="5" mb="0" cb="0"/><line nr="250" mi="0" ci="4" mb="0" cb="2"/><line nr="251" mi="0" ci="7" mb="0" cb="0"/><line nr="252" mi="0" ci="4" mb="0" cb="2"/><line nr="253" mi="0" ci="4" mb="0" cb="0"/><line nr="254" mi="0" ci="4" mb="0" cb="2"/><line nr="255" mi="0" ci="4" mb="0" cb="0"/><line nr="256" mi="0" ci="4" mb="0" cb="2"/><line nr="257" mi="0" ci="4" mb="0" cb="0"/><line nr="259" mi="0" ci="4" mb="0" cb="0"/><line nr="263" mi="0" ci="4" mb="0" cb="2"/><line nr="264" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="279" mi="0" ci="3" mb="0" cb="0"/><line nr="280" mi="0" ci="3" mb="0" cb="0"/><line nr="281" mi="0" ci="3" mb="0" cb="0"/><line nr="282" mi="0" ci="14" mb="0" cb="2"/><line nr="291" mi="0" ci="3" mb="0" cb="0"/><line nr="292" mi="0" ci="3" mb="0" cb="0"/><line nr="293" mi="0" ci="4" mb="0" cb="0"/><line nr="294" mi="0" ci="2" mb="0" cb="0"/><line nr="295" mi="0" ci="2" mb="0" cb="0"/><line nr="296" mi="0" ci="4" mb="1" cb="1"/><line nr="297" mi="3" ci="0" mb="0" cb="0"/><line nr="299" mi="0" ci="2" mb="0" cb="0"/><line nr="300" mi="0" ci="4" mb="1" cb="1"/><line nr="301" mi="2" ci="0" mb="0" cb="0"/><line nr="304" mi="0" ci="2" mb="1" cb="1"/><line nr="305" mi="4" ci="0" mb="0" cb="0"/><line nr="307" mi="0" ci="2" mb="0" cb="0"/><line nr="308" mi="0" ci="3" mb="0" cb="0"/><line nr="309" mi="0" ci="3" mb="0" cb="0"/><line nr="310" mi="0" ci="6" mb="0" cb="0"/><line nr="319" mi="0" ci="3" mb="0" cb="0"/><line nr="320" mi="0" ci="3" mb="0" cb="0"/><line nr="321" mi="0" ci="4" mb="0" cb="0"/><line nr="322" mi="0" ci="3" mb="0" cb="0"/><line nr="323" mi="0" ci="3" mb="0" cb="0"/><line nr="324" mi="0" ci="3" mb="0" cb="0"/><line nr="325" mi="0" ci="6" mb="0" cb="0"/><line nr="338" mi="0" ci="3" mb="0" cb="0"/><line nr="339" mi="0" ci="2" mb="0" cb="0"/><line nr="340" mi="0" ci="4" mb="0" cb="0"/><line nr="341" mi="0" ci="2" mb="0" cb="0"/><line nr="343" mi="0" ci="2" mb="0" cb="0"/><line nr="344" mi="0" ci="4" mb="0" cb="2"/><line nr="345" mi="0" ci="2" mb="0" cb="0"/><line nr="346" mi="0" ci="1" mb="0" cb="0"/><line nr="348" mi="0" ci="4" mb="1" cb="1"/><line nr="349" mi="4" ci="0" mb="0" cb="0"/><line nr="351" mi="0" ci="2" mb="0" cb="0"/><line nr="352" mi="0" ci="7" mb="0" cb="0"/><line nr="354" mi="0" ci="9" mb="0" cb="0"/><line nr="370" mi="0" ci="2" mb="0" cb="0"/><line nr="371" mi="0" ci="4" mb="1" cb="1"/><line nr="372" mi="11" ci="0" mb="0" cb="0"/><line nr="374" mi="0" ci="2" mb="0" cb="0"/><line nr="375" mi="0" ci="2" mb="0" cb="0"/><line nr="377" mi="0" ci="2" mb="0" cb="0"/><line nr="378" mi="0" ci="4" mb="0" cb="2"/><line nr="379" mi="0" ci="2" mb="0" cb="0"/><line nr="380" mi="0" ci="1" mb="0" cb="0"/><line nr="382" mi="0" ci="5" mb="0" cb="0"/><line nr="383" mi="0" ci="4" mb="0" cb="2"/><line nr="386" mi="0" ci="3" mb="0" cb="0"/><line nr="389" mi="0" ci="9" mb="0" cb="0"/><line nr="397" mi="0" ci="3" mb="0" cb="0"/><line nr="398" mi="0" ci="8" mb="1" cb="3"/><line nr="399" mi="0" ci="3" mb="0" cb="0"/><line nr="401" mi="0" ci="2" mb="0" cb="0"/><line nr="402" mi="0" ci="5" mb="0" cb="0"/><line nr="411" mi="0" ci="4" mb="0" cb="0"/><line nr="412" mi="0" ci="4" mb="0" cb="0"/><line nr="416" mi="0" ci="3" mb="0" cb="2"/><line nr="420" mi="0" ci="1" mb="0" cb="0"/><line nr="422" mi="0" ci="5" mb="0" cb="0"/><line nr="423" mi="0" ci="3" mb="0" cb="0"/><line nr="425" mi="0" ci="8" mb="0" cb="0"/><line nr="442" mi="0" ci="4" mb="0" cb="2"/><line nr="443" mi="0" ci="2" mb="0" cb="0"/><line nr="444" mi="0" ci="3" mb="0" cb="0"/><line nr="445" mi="0" ci="3" mb="0" cb="0"/><line nr="446" mi="0" ci="2" mb="0" cb="0"/><line nr="448" mi="0" ci="3" mb="0" cb="0"/><line nr="459" mi="0" ci="4" mb="0" cb="0"/><line nr="460" mi="0" ci="7" mb="0" cb="0"/><line nr="461" mi="0" ci="4" mb="0" cb="0"/><line nr="476" mi="0" ci="3" mb="0" cb="3"/><line nr="478" mi="0" ci="4" mb="0" cb="0"/><line nr="480" mi="0" ci="4" mb="0" cb="0"/><line nr="482" mi="0" ci="2" mb="0" cb="0"/><line nr="499" mi="4" ci="6" mb="1" cb="3"/><line nr="500" mi="0" ci="2" mb="0" cb="0"/><line nr="501" mi="0" ci="4" mb="0" cb="0"/><line nr="503" mi="0" ci="4" mb="0" cb="2"/><line nr="504" mi="0" ci="6" mb="0" cb="0"/><line nr="506" mi="0" ci="6" mb="0" cb="0"/><line nr="508" mi="0" ci="4" mb="0" cb="0"/><line nr="525" mi="4" ci="6" mb="1" cb="3"/><line nr="526" mi="0" ci="2" mb="0" cb="0"/><line nr="527" mi="0" ci="2" mb="0" cb="0"/><line nr="528" mi="0" ci="4" mb="0" cb="2"/><line nr="529" mi="0" ci="5" mb="0" cb="0"/><line nr="530" mi="0" ci="4" mb="0" cb="2"/><line nr="531" mi="0" ci="2" mb="0" cb="0"/><line nr="532" mi="0" ci="6" mb="0" cb="0"/><line nr="534" mi="0" ci="4" mb="1" cb="1"/><line nr="535" mi="4" ci="0" mb="0" cb="0"/><line nr="538" mi="4" ci="6" mb="1" cb="3"/><line nr="539" mi="0" ci="2" mb="0" cb="0"/><line nr="540" mi="0" ci="8" mb="0" cb="0"/><line nr="553" mi="4" ci="6" mb="1" cb="3"/><line nr="554" mi="0" ci="2" mb="0" cb="0"/><line nr="555" mi="0" ci="3" mb="0" cb="0"/><line nr="556" mi="0" ci="4" mb="1" cb="1"/><line nr="557" mi="4" ci="0" mb="0" cb="0"/><line nr="559" mi="0" ci="2" mb="0" cb="0"/><line nr="560" mi="0" ci="6" mb="0" cb="0"/><line nr="561" mi="0" ci="4" mb="0" cb="0"/><line nr="564" mi="0" ci="60" mb="0" cb="0"/><line nr="574" mi="0" ci="8" mb="0" cb="0"/><line nr="578" mi="0" ci="8" mb="0" cb="0"/><line nr="579" mi="0" ci="8" mb="0" cb="0"/><line nr="580" mi="0" ci="16" mb="0" cb="0"/><line nr="581" mi="0" ci="32" mb="0" cb="0"/><line nr="582" mi="0" ci="16" mb="0" cb="0"/><line nr="583" mi="0" ci="24" mb="0" cb="0"/><line nr="588" mi="0" ci="4" mb="0" cb="0"/><line nr="589" mi="0" ci="3" mb="0" cb="0"/><line nr="590" mi="0" ci="3" mb="0" cb="0"/><line nr="591" mi="0" ci="1" mb="0" cb="0"/><line nr="595" mi="3" ci="0" mb="0" cb="0"/><line nr="605" mi="0" ci="2" mb="0" cb="0"/><line nr="606" mi="0" ci="16" mb="0" cb="2"/><line nr="607" mi="0" ci="3" mb="0" cb="2"/><line nr="608" mi="0" ci="9" mb="0" cb="0"/><line nr="611" mi="0" ci="3" mb="0" cb="0"/><line nr="637" mi="0" ci="3" mb="0" cb="0"/><line nr="638" mi="0" ci="8" mb="0" cb="0"/><line nr="653" mi="0" ci="5" mb="0" cb="0"/><line nr="654" mi="0" ci="2" mb="0" cb="0"/><line nr="655" mi="0" ci="1" mb="0" cb="0"/><line nr="664" mi="0" ci="5" mb="0" cb="2"/><line nr="665" mi="0" ci="3" mb="0" cb="0"/><line nr="666" mi="0" ci="4" mb="0" cb="0"/><line nr="667" mi="0" ci="2" mb="0" cb="0"/><line nr="668" mi="0" ci="6" mb="0" cb="2"/><line nr="669" mi="0" ci="8" mb="0" cb="0"/><line nr="671" mi="0" ci="7" mb="0" cb="0"/><line nr="672" mi="0" ci="1" mb="0" cb="0"/><line nr="673" mi="0" ci="2" mb="0" cb="0"/><line nr="681" mi="0" ci="3" mb="0" cb="0"/><line nr="682" mi="0" ci="7" mb="0" cb="0"/><line nr="683" mi="0" ci="3" mb="0" cb="2"/><line nr="684" mi="0" ci="3" mb="0" cb="0"/><line nr="685" mi="0" ci="1" mb="0" cb="0"/><line nr="687" mi="0" ci="6" mb="0" cb="0"/><line nr="688" mi="0" ci="3" mb="0" cb="0"/><line nr="689" mi="0" ci="2" mb="0" cb="0"/><line nr="690" mi="0" ci="10" mb="0" cb="2"/><line nr="691" mi="0" ci="5" mb="0" cb="2"/><line nr="692" mi="1" ci="5" mb="1" cb="1"/><line nr="693" mi="0" ci="3" mb="0" cb="0"/><line nr="694" mi="0" ci="8" mb="0" cb="2"/><line nr="695" mi="0" ci="3" mb="0" cb="0"/><line nr="696" mi="0" ci="2" mb="0" cb="0"/><line nr="698" mi="0" ci="1" mb="0" cb="0"/><line nr="699" mi="0" ci="2" mb="1" cb="1"/><line nr="700" mi="10" ci="0" mb="0" cb="0"/><line nr="701" mi="7" ci="0" mb="0" cb="0"/><line nr="703" mi="0" ci="3" mb="0" cb="0"/><line nr="704" mi="0" ci="1" mb="0" cb="0"/><line nr="716" mi="0" ci="2" mb="0" cb="0"/><line nr="718" mi="0" ci="4" mb="0" cb="2"/><line nr="719" mi="0" ci="2" mb="0" cb="0"/><line nr="720" mi="0" ci="3" mb="0" cb="0"/><line nr="721" mi="0" ci="3" mb="0" cb="0"/><line nr="722" mi="0" ci="2" mb="0" cb="0"/><line nr="723" mi="0" ci="2" mb="0" cb="0"/><line nr="724" mi="0" ci="4" mb="0" cb="2"/><line nr="725" mi="0" ci="2" mb="0" cb="0"/><line nr="726" mi="0" ci="6" mb="0" cb="0"/><line nr="727" mi="0" ci="2" mb="0" cb="0"/><line nr="728" mi="0" ci="2" mb="0" cb="0"/><line nr="730" mi="0" ci="3" mb="0" cb="0"/><line nr="745" mi="0" ci="4" mb="0" cb="2"/><line nr="746" mi="0" ci="2" mb="0" cb="0"/><line nr="747" mi="0" ci="4" mb="0" cb="0"/><line nr="748" mi="0" ci="4" mb="0" cb="2"/><line nr="749" mi="0" ci="4" mb="0" cb="0"/><line nr="750" mi="0" ci="4" mb="0" cb="2"/><line nr="753" mi="0" ci="2" mb="0" cb="0"/><line nr="754" mi="0" ci="5" mb="0" cb="0"/><line nr="755" mi="0" ci="4" mb="0" cb="2"/><line nr="756" mi="0" ci="5" mb="0" cb="0"/><line nr="757" mi="0" ci="4" mb="1" cb="1"/><line nr="758" mi="0" ci="4" mb="0" cb="0"/><line nr="760" mi="4" ci="0" mb="0" cb="0"/><line nr="762" mi="0" ci="2" mb="0" cb="0"/><line nr="763" mi="0" ci="2" mb="0" cb="0"/><line nr="767" mi="4" ci="6" mb="1" cb="3"/><line nr="768" mi="0" ci="4" mb="0" cb="0"/><line nr="769" mi="0" ci="2" mb="0" cb="0"/><line nr="770" mi="0" ci="4" mb="0" cb="2"/><line nr="771" mi="0" ci="8" mb="2" cb="2"/><line nr="772" mi="4" ci="0" mb="0" cb="0"/><line nr="774" mi="0" ci="8" mb="2" cb="2"/><line nr="778" mi="4" ci="0" mb="0" cb="0"/><line nr="781" mi="0" ci="5" mb="0" cb="0"/><line nr="782" mi="0" ci="3" mb="0" cb="0"/><line nr="784" mi="0" ci="2" mb="0" cb="0"/><line nr="785" mi="0" ci="8" mb="0" cb="0"/><line nr="789" mi="0" ci="5" mb="0" cb="0"/><line nr="790" mi="0" ci="4" mb="0" cb="2"/><line nr="791" mi="0" ci="5" mb="0" cb="0"/><line nr="792" mi="0" ci="3" mb="0" cb="0"/><line nr="794" mi="0" ci="4" mb="0" cb="0"/><line nr="795" mi="0" ci="2" mb="1" cb="1"/><line nr="796" mi="11" ci="0" mb="0" cb="0"/><line nr="798" mi="0" ci="7" mb="0" cb="0"/><line nr="807" mi="0" ci="4" mb="0" cb="0"/><line nr="809" mi="0" ci="4" mb="0" cb="2"/><line nr="810" mi="0" ci="3" mb="0" cb="0"/><line nr="811" mi="0" ci="4" mb="1" cb="1"/><line nr="812" mi="0" ci="3" mb="0" cb="0"/><line nr="814" mi="4" ci="0" mb="0" cb="0"/><line nr="816" mi="0" ci="8" mb="0" cb="0"/><line nr="819" mi="0" ci="2" mb="0" cb="0"/><line nr="820" mi="0" ci="3" mb="0" cb="0"/><line nr="821" mi="0" ci="2" mb="0" cb="0"/><line nr="822" mi="0" ci="2" mb="0" cb="0"/><line nr="824" mi="0" ci="2" mb="0" cb="0"/><line nr="825" mi="0" ci="1" mb="0" cb="0"/><line nr="826" mi="0" ci="2" mb="0" cb="0"/><line nr="828" mi="0" ci="3" mb="0" cb="0"/><line nr="830" mi="0" ci="2" mb="0" cb="0"/><line nr="831" mi="0" ci="2" mb="0" cb="0"/><line nr="832" mi="0" ci="2" mb="0" cb="0"/><line nr="835" mi="0" ci="13" mb="1" cb="3"/><line nr="839" mi="0" ci="13" mb="1" cb="3"/><line nr="843" mi="0" ci="13" mb="0" cb="4"/><line nr="853" mi="0" ci="4" mb="1" cb="1"/><line nr="854" mi="11" ci="0" mb="0" cb="0"/><line nr="856" mi="0" ci="4" mb="0" cb="0"/><line nr="857" mi="0" ci="4" mb="0" cb="2"/><line nr="858" mi="0" ci="5" mb="0" cb="0"/><line nr="859" mi="0" ci="3" mb="0" cb="0"/><line nr="861" mi="0" ci="3" mb="0" cb="0"/><line nr="869" mi="4" ci="0" mb="0" cb="0"/><line nr="870" mi="4" ci="0" mb="2" cb="0"/><line nr="871" mi="5" ci="0" mb="0" cb="0"/><line nr="873" mi="2" ci="0" mb="0" cb="0"/><line nr="874" mi="7" ci="0" mb="4" cb="0"/><line nr="875" mi="5" ci="0" mb="0" cb="0"/><line nr="876" mi="2" ci="0" mb="0" cb="0"/><line nr="877" mi="2" ci="0" mb="0" cb="0"/><line nr="879" mi="4" ci="0" mb="2" cb="0"/><line nr="880" mi="4" ci="0" mb="0" cb="0"/><line nr="883" mi="9" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="170" covered="1222"/><counter type="BRANCH" missed="35" covered="140"/><counter type="LINE" missed="28" covered="281"/><counter type="COMPLEXITY" missed="33" covered="96"/><counter type="METHOD" missed="2" covered="39"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="ParseException.java"><line nr="44" mi="0" ci="12" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="16" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="13"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Node.java"><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="17" ci="0" mb="0" cb="0"/><line nr="63" mi="18" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="11" mb="0" cb="2"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="35" covered="50"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ReferenceNode.java"><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="1" cb="1"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="13" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="2"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="11" mb="0" cb="0"/><line nr="103" mi="0" ci="12" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="1" cb="1"/><line nr="108" mi="15" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="16" mb="1" cb="1"/><line nr="113" mi="0" ci="16" mb="0" cb="2"/><line nr="114" mi="0" ci="9" mb="0" cb="2"/><line nr="115" mi="0" ci="9" mb="0" cb="0"/><line nr="118" mi="0" ci="7" mb="0" cb="0"/><line nr="119" mi="0" ci="9" mb="1" cb="3"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="1" ci="0" mb="0" cb="0"/><line nr="128" mi="17" ci="0" mb="0" cb="0"/><line nr="130" mi="6" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="1" cb="1"/><line nr="137" mi="4" ci="0" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="1" cb="1"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="9" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="1" cb="1"/><line nr="163" mi="5" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="2"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="1" cb="1"/><line nr="168" mi="12" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="6" mb="2" cb="2"/><line nr="173" mi="12" ci="0" mb="0" cb="0"/><line nr="174" mi="5" ci="0" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="2"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="10" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="0" ci="1" mb="0" cb="0"/><line nr="223" mi="0" ci="5" mb="0" cb="0"/><line nr="224" mi="0" ci="2" mb="1" cb="1"/><line nr="225" mi="14" ci="0" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="11" mb="0" cb="2"/><line nr="229" mi="0" ci="6" mb="0" cb="0"/><line nr="230" mi="0" ci="1" mb="0" cb="0"/><line nr="231" mi="0" ci="2" mb="0" cb="0"/><line nr="232" mi="0" ci="18" mb="0" cb="2"/><line nr="233" mi="0" ci="9" mb="0" cb="4"/><line nr="234" mi="0" ci="4" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="1" cb="1"/><line nr="238" mi="18" ci="0" mb="0" cb="0"/><line nr="240" mi="0" ci="2" mb="0" cb="0"/><line nr="241" mi="0" ci="10" mb="0" cb="2"/><line nr="243" mi="0" ci="5" mb="0" cb="2"/><line nr="244" mi="0" ci="4" mb="0" cb="0"/><line nr="246" mi="0" ci="1" mb="0" cb="0"/><line nr="247" mi="0" ci="3" mb="2" cb="1"/><line nr="249" mi="16" ci="0" mb="0" cb="0"/><line nr="252" mi="0" ci="8" mb="0" cb="0"/><line nr="254" mi="9" ci="0" mb="0" cb="0"/><line nr="256" mi="5" ci="0" mb="0" cb="0"/><line nr="266" mi="0" ci="5" mb="0" cb="2"/><line nr="267" mi="0" ci="2" mb="0" cb="0"/><line nr="269" mi="0" ci="8" mb="0" cb="2"/><line nr="270" mi="0" ci="4" mb="0" cb="0"/><line nr="271" mi="0" ci="4" mb="0" cb="0"/><line nr="272" mi="0" ci="3" mb="0" cb="2"/><line nr="273" mi="0" ci="4" mb="0" cb="0"/><line nr="274" mi="0" ci="4" mb="1" cb="1"/><line nr="275" mi="2" ci="0" mb="0" cb="0"/><line nr="278" mi="0" ci="2" mb="0" cb="0"/><line nr="282" mi="0" ci="6" mb="1" cb="3"/><line nr="283" mi="0" ci="2" mb="0" cb="0"/><line nr="285" mi="0" ci="6" mb="0" cb="0"/><line nr="288" mi="0" ci="8" mb="0" cb="0"/><line nr="290" mi="0" ci="5" mb="0" cb="0"/><line nr="302" mi="0" ci="3" mb="0" cb="2"/><line nr="303" mi="0" ci="2" mb="0" cb="0"/><line nr="305" mi="0" ci="4" mb="0" cb="0"/><line nr="306" mi="0" ci="2" mb="0" cb="2"/><line nr="307" mi="0" ci="2" mb="0" cb="0"/><line nr="309" mi="0" ci="3" mb="0" cb="2"/><line nr="310" mi="0" ci="7" mb="0" cb="2"/><line nr="312" mi="0" ci="4" mb="0" cb="0"/><line nr="313" mi="0" ci="2" mb="0" cb="2"/><line nr="314" mi="0" ci="2" mb="0" cb="0"/><line nr="316" mi="0" ci="7" mb="0" cb="2"/><line nr="329" mi="0" ci="4" mb="0" cb="2"/><line nr="330" mi="0" ci="5" mb="0" cb="0"/><line nr="331" mi="0" ci="2" mb="1" cb="1"/><line nr="332" mi="9" ci="0" mb="0" cb="0"/><line nr="333" mi="8" ci="0" mb="0" cb="0"/><line nr="337" mi="0" ci="6" mb="0" cb="0"/><line nr="338" mi="1" ci="0" mb="0" cb="0"/><line nr="339" mi="5" ci="0" mb="0" cb="0"/><line nr="340" mi="1" ci="0" mb="0" cb="0"/><line nr="341" mi="4" ci="0" mb="0" cb="0"/><line nr="346" mi="0" ci="3" mb="0" cb="0"/><line nr="347" mi="0" ci="4" mb="0" cb="0"/><line nr="348" mi="0" ci="2" mb="1" cb="1"/><line nr="349" mi="0" ci="5" mb="0" cb="0"/><line nr="351" mi="2" ci="0" mb="0" cb="0"/><line nr="355" mi="0" ci="10" mb="0" cb="0"/><line nr="365" mi="0" ci="2" mb="1" cb="1"/><line nr="366" mi="2" ci="0" mb="0" cb="0"/><line nr="370" mi="0" ci="7" mb="0" cb="0"/><line nr="371" mi="1" ci="0" mb="0" cb="0"/><line nr="372" mi="2" ci="0" mb="0" cb="0"/><line nr="373" mi="0" ci="1" mb="0" cb="0"/><line nr="374" mi="0" ci="8" mb="0" cb="4"/><line nr="378" mi="0" ci="2" mb="0" cb="0"/><line nr="380" mi="0" ci="5" mb="0" cb="0"/><line nr="381" mi="0" ci="2" mb="1" cb="1"/><line nr="382" mi="0" ci="2" mb="0" cb="0"/><line nr="384" mi="17" ci="0" mb="2" cb="0"/><line nr="385" mi="4" ci="0" mb="0" cb="0"/><line nr="386" mi="2" ci="0" mb="2" cb="0"/><line nr="387" mi="2" ci="0" mb="0" cb="0"/><line nr="390" mi="2" ci="0" mb="0" cb="0"/><line nr="402" mi="0" ci="4" mb="0" cb="2"/><line nr="403" mi="0" ci="2" mb="0" cb="0"/><line nr="405" mi="0" ci="2" mb="1" cb="1"/><line nr="406" mi="3" ci="0" mb="0" cb="0"/><line nr="408" mi="0" ci="2" mb="0" cb="0"/><line nr="413" mi="3" ci="0" mb="0" cb="0"/><line nr="414" mi="6" ci="0" mb="0" cb="0"/><line nr="415" mi="12" ci="0" mb="0" cb="0"/><line nr="416" mi="1" ci="0" mb="0" cb="0"/><line nr="417" mi="2" ci="0" mb="0" cb="0"/><line nr="428" mi="6" ci="0" mb="0" cb="0"/><line nr="429" mi="3" ci="0" mb="0" cb="0"/><line nr="430" mi="10" ci="0" mb="0" cb="0"/><line nr="431" mi="0" ci="1" mb="0" cb="0"/><line nr="432" mi="0" ci="2" mb="0" cb="0"/><line nr="433" mi="0" ci="2" mb="0" cb="0"/><line nr="434" mi="1" ci="0" mb="0" cb="0"/><line nr="435" mi="0" ci="2" mb="0" cb="0"/><line nr="436" mi="0" ci="2" mb="0" cb="0"/><line nr="437" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="263" covered="551"/><counter type="BRANCH" missed="25" covered="72"/><counter type="LINE" missed="41" covered="126"/><counter type="COMPLEXITY" missed="24" covered="47"/><counter type="METHOD" missed="1" covered="21"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><counter type="INSTRUCTION" missed="667" covered="3005"/><counter type="BRANCH" missed="75" covered="334"/><counter type="LINE" missed="108" covered="689"/><counter type="COMPLEXITY" missed="88" covered="278"/><counter type="METHOD" missed="20" covered="135"/><counter type="CLASS" missed="1" covered="39"/></package><counter type="INSTRUCTION" missed="1890" covered="11998"/><counter type="BRANCH" missed="247" covered="1143"/><counter type="LINE" missed="335" covered="2662"/><counter type="COMPLEXITY" missed="270" covered="993"/><counter type="METHOD" missed="52" covered="501"/><counter type="CLASS" missed="4" covered="89"/></report>